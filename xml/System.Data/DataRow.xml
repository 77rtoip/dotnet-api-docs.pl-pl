<Type Name="DataRow" FullName="System.Data.DataRow">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3a1ebaf276e9456fa08b213088c22df0f3afc38e" />
    <Meta Name="ms.sourcegitcommit" Value="ad09e88f48ca55b181e8d272cfc3742eadc3f939" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/08/2018" />
    <Meta Name="ms.locfileid" Value="35231141" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataRow" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataRow extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataRow" />
  <TypeSignature Language="VB.NET" Value="Public Class DataRow" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataRow" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje wiersza danych w <see cref="T:System.Data.DataTable" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataRow> i <xref:System.Data.DataColumn> obiekty są podstawowymi składnikami <xref:System.Data.DataTable>. Użyj <xref:System.Data.DataRow> obiekt i jego właściwości i metody do pobierania i oceny; i wstawianie, usuwanie i zaktualizuj wartości w <xref:System.Data.DataTable>. <xref:System.Data.DataRowCollection> Reprezentuje rzeczywiste <xref:System.Data.DataRow> obiekty w <xref:System.Data.DataTable>i <xref:System.Data.DataColumnCollection> zawiera <xref:System.Data.DataColumn> obiektów, które opisują schemat <xref:System.Data.DataTable>. Użyj przeciążone <xref:System.Data.DataRow.Item%2A> właściwości zwracać lub ustaw wartość <xref:System.Data.DataColumn>.  
  
 Użyj <xref:System.Data.DataRow.HasVersion%2A> i <xref:System.Data.DataRow.IsNull%2A> właściwości, aby określić stan wartość określonego wiersza i <xref:System.Data.DataRow.RowState*> właściwości w celu określenia stanu wiersza względem jego elementu nadrzędnego <xref:System.Data.DataTable>.  
  
 Aby utworzyć nową <xref:System.Data.DataRow>, użyj <xref:System.Data.DataTable.NewRow%2A> metody <xref:System.Data.DataTable> obiektu. Po utworzeniu nowego <xref:System.Data.DataRow>, użyj <xref:System.Data.DataRowCollection.Add%2A> metody w celu dodania nowej <xref:System.Data.DataRow> do <xref:System.Data.DataRowCollection>. Na koniec wywołania <xref:System.Data.DataRow.AcceptChanges%2A> metody <xref:System.Data.DataTable> obiektu o potwierdzenie operacji dodawania. Aby uzyskać więcej informacji na temat dodawania danych do <xref:System.Data.DataTable>, zobacz [Dodawanie danych do elementu DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-data-to-a-datatable.md).  
  
 Możesz usunąć <xref:System.Data.DataRow> z <xref:System.Data.DataRowCollection> przez wywołanie metody <xref:System.Data.DataRowCollection.Remove%2A> metody <xref:System.Data.DataRowCollection>, lub przez wywołanie metody <xref:System.Data.DataRow.Delete%2A> metody <xref:System.Data.DataRow> obiektu. <xref:System.Data.DataRowCollection.Remove%2A> Metoda usuwa wiersz z kolekcji. Z kolei <xref:System.Data.DataRow.Delete%2A> znaczniki <xref:System.Data.DataRow> do usunięcia. Rzeczywiste usunięcie występuje po wywołaniu <xref:System.Data.DataRow.AcceptChanges%2A> metody. Wywołując <xref:System.Data.DataRow.Delete%2A>, można programowo sprawdzić wiersze, które są oznaczone do usunięcia przed faktycznie ich nie usuwać je. Aby uzyskać więcej informacji, zobacz [usunięcia DataRow](~/docs/framework/data/adonet/dataset-datatable-dataview/datarow-deletion.md).  
  
   
  
## Examples  
 Poniższy przykład tworzy nowy <xref:System.Data.DataRow> przez wywołanie metody <xref:System.Data.DataTable.NewRow%2A> metody <xref:System.Data.DataTable> obiektu.  
  
 [!code-csharp[Classic WebData DataRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Tego typu są bezpieczne dla operacji wielowątkowych odczytu. Wszystkie operacje zapisu należy przeprowadzić synchronizację.</threadsafe>
    <altmember cref="M:System.Data.DataRow.AcceptChanges" />
    <altmember cref="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
    <altmember cref="T:System.Data.DataColumnCollection" />
    <altmember cref="T:System.Data.DataColumn" />
    <altmember cref="T:System.Data.DataRowView" />
    <altmember cref="T:System.Data.DataTable" />
    <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
    <altmember cref="M:System.Data.DataRow.IsNull(System.Int32)" />
    <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
    <altmember cref="M:System.Data.DataTable.NewRow" />
    <altmember cref="T:System.Data.DataRowCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal DataRow (System.Data.DataRowBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.Data.DataRowBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.#ctor(System.Data.DataRowBuilder)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (builder As DataRowBuilder)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; DataRow(System::Data::DataRowBuilder ^ builder);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Data.DataRowBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">Konstruktor</param>
        <summary>Inicjuje nowe wystąpienie klasy DataRow. Tworzy wiersza z konstruktora. Tylko do użytku wewnętrznego.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptChanges">
      <MemberSignature Language="C#" Value="public void AcceptChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AcceptChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.AcceptChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub AcceptChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AcceptChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zatwierdza wszystkie zmiany wprowadzone do tego wiersza od czasu ostatniego <see cref="M:System.Data.DataRow.AcceptChanges" /> została wywołana.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas wywoływania <xref:System.Data.DataRow.AcceptChanges%2A>, <xref:System.Data.DataRow.EndEdit%2A> wywoływana jest metoda niejawnie zakończenia zmiany. Jeśli <xref:System.Data.DataRow.RowState*> wiersz został dodany lub zmodyfikowany, <xref:System.Data.DataRow.RowState*> staje się Unchanged. Jeśli <xref:System.Data.DataRow.RowState*> został usunięty, wiersza zostanie usunięty.  
  
 Zobacz <xref:System.Data.DataRow.BeginEdit%2A> metody, aby uzyskać więcej informacji.  
  
 <xref:System.Data.DataTable> Klasa ma również <xref:System.Data.DataTable.AcceptChanges%2A> metodę, która wpływa na zmiany w całej tabeli. Więcej informacji oraz przykładowy kod, który demonstruje sposób zaakceptować lub odrzucić zmiany do wierszy poszczególnych danych, zobacz [AcceptChanges i RejectChanges](~/docs/framework/data/adonet/dataset-datatable-dataview/acceptchanges-and-rejectchanges.md).  
  
   
  
## Examples  
 Poniższy przykład najpierw tworzy nową <xref:System.Data.DataTable> z jedną kolumną, a następnie tworzy pojedynczy <xref:System.Data.DataRow>. Jako <xref:System.Data.DataRow> jest utworzony, dodane, zmodyfikowane i usunięty, jego <xref:System.Data.DataRow.RowState*> drukowania.  
  
 [!code-csharp[Classic WebData DataRow.AcceptChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.AcceptChanges Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.AcceptChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.AcceptChanges Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rozpoczyna operację edycji na <see cref="T:System.Data.DataRow" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Data.DataRow.BeginEdit%2A> metodę put <xref:System.Data.DataRow> w trybie edycji. W tym trybie zdarzenia są tymczasowo wstrzymane, przez użytkownika zmiany więcej niż jeden wiersz, bez wyzwalania reguł sprawdzania poprawności. Na przykład jeśli musi upewnij się, że wartość w kolumnie dla całkowita ilość jest równa wartości dla DT i kolumn w wierszu karty kredytowej, możesz umieścić każdego wiersza w trybie edycji wstrzymania walidacji wartości wierszy, dopóki użytkownik spróbuje przekazać wartości.  
  
 <xref:System.Data.DataRow.BeginEdit%2A> Metoda jest wywoływana niejawnie, gdy użytkownik zmieni wartość formantu powiązanego z danymi; <xref:System.Data.DataRow.EndEdit%2A> wywoływana jest metoda niejawnie po wywołaniu <xref:System.Data.DataTable.AcceptChanges%2A> metodę <xref:System.Data.DataTable> obiektu. W tym trybie edycji <xref:System.Data.DataRow> przechowuje reprezentacje oryginalne i nowe proponowane wartości. W związku z tym tak długo, jak <xref:System.Data.DataRow.EndEdit%2A> nie wywołano metody, przekazując albo można pobrać oryginalnej lub proponowanych wersji `DataRowVersion.Original` lub `DataRowVersion.Proposed` dla `version` parametr <xref:System.Data.DataRow.Item%2A> właściwości. Można również anulować wszelkie zmiany w tym momencie, wywołując <xref:System.Data.DataRow.CancelEdit%2A> metody.  
  
 Aby zobaczyć, czy wiersz zawiera wartość oryginalnej lub proponowanych, należy wywołać <xref:System.Data.DataRow.HasVersion%2A> metody.  
  
> [!NOTE]
>  <xref:System.Data.DataRow.BeginEdit%2A> Tymczasowo wstrzymuje <xref:System.Data.DataTable.RowChanging> zdarzeń, ale `delete` nie obsługuje operacji.  
  
   
  
## Examples  
 W przykładzie jest tworzony prostą <xref:System.Data.DataTable> z jednym <xref:System.Data.DataColumn> do pięciu <xref:System.Data.DataRow> obiektów, a <xref:System.Data.UniqueConstraint>. A <xref:System.Data.DataTable.RowChanged> program obsługi zdarzeń jest także dodawane do monitorowania, zmieniając wartość wiersza. Po wywołaniu <xref:System.Data.DataRow.BeginEdit%2A> na istniejące wiersze, ograniczenia i zdarzenia są tymczasowo wyłączone i wartości oryginalnej i proponowanych są drukowane. <xref:System.Data.DataRow.BeginEdit%2A> Ponownie wywoływana w celu ustawić dwa wiersze na tę samą wartość. Gdy <xref:System.Data.DataRow.EndEdit%2A> jest nazywany <xref:System.Data.UniqueConstraint> są wymuszane na identyczne wartości.  
  
 [!code-csharp[Classic WebData DataRow.BeginEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.BeginEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">Metoda została wywołana wewnątrz <see cref="E:System.Data.DataTable.RowChanging" /> zdarzeń.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Metoda została wywołana po usuniętym wierszu.</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Anuluje bieżący edycji w tym wierszu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zobacz <xref:System.Data.DataRow.BeginEdit%2A> metody, aby uzyskać więcej informacji.  
  
   
  
## Examples  
 Poniższy przykład edytuje wartość jednej kolumny w ostatnim wierszu <xref:System.Windows.Forms.DataGrid> formantu. W przykładzie użyto <xref:System.Data.DataRow.BeginEdit%2A>, <xref:System.Data.DataRow.EndEdit%2A>, metody do edycji wartości w kolumnie i zatwierdzić zmiany w wierszu.  
  
 [!code-csharp[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">Metoda została wywołana wewnątrz <see cref="E:System.Data.DataTable.RowChanging" /> zdarzeń.</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <Member MemberName="ClearErrors">
      <MemberSignature Language="C#" Value="public void ClearErrors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearErrors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.ClearErrors" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearErrors ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearErrors();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa błędy wiersza. Obejmuje to <see cref="P:System.Data.DataRow.RowError" /> i błędy ustawiony za pomocą <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Data.DataRow.SetColumnError%2A> i <xref:System.Data.DataRow.GetColumnError%2A> do Ustawianie i zwracanie błędów dla poszczególnych kolumn.  
  
 Ustaw <xref:System.Data.DataRow.RowError%2A> właściwości można ustawić błąd, który ma zastosowanie do całego wiersza.  
  
 Aby określić, czy błędy istnieją dla kolekcji kolumn, użyj <xref:System.Data.DataRow.HasErrors%2A> metody. W związku z tym, można użyć <xref:System.Data.DataRow.GetColumnsInError%2A> metodę, aby pobrać wszystkie kolumny z błędami.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Data.DataRow.HasErrors%2A> do wyszukiwania błędów. Jeśli wiersz zawiera błędy, <xref:System.Data.DataRow.GetColumnsInError%2A> metoda zwraca tablicę kolumn z błędami, które następnie mogą zostać rozwiązane. <xref:System.Data.DataRow.ClearErrors%2A> Wywoływana jest metoda następnie wyczyść wszystkie błędy.  
  
 [!code-csharp[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa <see cref="T:System.Data.DataRow" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Data.DataRow.RowState*> wiersza zostanie dodany, <xref:System.Data.DataRow.RowState*> staje się `Detached` i usunięciu wiersza z tabeli po wywołaniu <xref:System.Data.DataRow.AcceptChanges%2A>.  
  
 <xref:System.Data.DataRow.RowState*> Staje się `Deleted` po użyciu <xref:System.Data.DataRow.Delete%2A> metody na istniejącym <xref:System.Data.DataRow>. Pozostaje `Deleted` czasu wywołania <xref:System.Data.DataRow.AcceptChanges%2A>. W tej chwili <xref:System.Data.DataRow> zostanie usunięty z tabeli.  
  
 <xref:System.Data.DataRow.Delete%2A> nie należy wywoływać w pętli foreach podczas iteracji <xref:System.Data.DataRowCollection> obiektu. <xref:System.Data.DataRow.Delete%2A> modyfikuje stan kolekcji.  
  
 Usuniętym wierszu można odzyskać za pomocą <xref:System.Data.DataRow.RejectChanges%2A>.  
  
> [!NOTE]
>  <xref:System.Data.DataRow.BeginEdit%2A> Tymczasowo wstrzymuje <xref:System.Data.DataTable.RowChanging> zdarzeń, ale operacja usuwania nie.  
  
   
  
## Examples  
 Poniższy przykład tworzy prosty <xref:System.Data.DataTable> z kolumnami i wierszami dziesięć. Po usunięciu kilka <xref:System.Data.DataRow> elementy <xref:System.Data.DataRow.Delete%2A> metody, jednego z wierszy jest nieusunięte wywołując <xref:System.Data.DataRow.RejectChanges%2A>.  
  
 [!code-csharp[Classic WebData DataRow.Delete Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Delete Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <see cref="T:System.Data.DataRow" /> Został już usunięty.</exception>
        <altmember cref="T:System.Data.DataRowState" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public void EndEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.EndEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndEdit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Kończy się Edycja występujących w tym wierszu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po ustawieniu właściwości wyjątek jest generowany w przypadku wystąpienia wyjątku w <xref:System.Data.DataTable.RowChanging> zdarzeń.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Data.DataRow.EndEdit%2A> metodę, aby zakończyć edytowanie z <xref:System.Data.DataRow> wartość, gdy funkcja sprawdzania poprawności zwraca wartość true.  
  
 [!code-csharp[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">Metoda została wywołana wewnątrz <see cref="E:System.Data.DataTable.RowChanging" /> zdarzeń.</exception>
        <exception cref="T:System.Data.ConstraintException">Edycja spowodowało przerwanie ograniczenia.</exception>
        <exception cref="T:System.Data.ReadOnlyException">Wiersz należy do tabeli i Edycja próbowała zmienić wartość kolumny tylko do odczytu.</exception>
        <exception cref="T:System.Data.NoNullAllowedException">Edycja próbował umieścić wartość null w kolumnie gdzie <see cref="P:System.Data.DataColumn.AllowDBNull" /> ma wartość false.</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="P:System.Data.DataColumn.AllowDBNull" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildRows">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera wiersze podrzędne <see cref="T:System.Data.DataRow" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relation As DataRelation) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::Data::DataRelation ^ relation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation">
          <see cref="T:System.Data.DataRelation" /> Do użycia.</param>
        <summary>Pobiera to wiersze podrzędne <see cref="T:System.Data.DataRow" /> przy użyciu określonego <see cref="T:System.Data.DataRelation" />.</summary>
        <returns>Tablica <see cref="T:System.Data.DataRow" /> obiektów lub tablicą o zerowej długości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTable> Również zawiera kolekcję <xref:System.Data.DataRelation> obiektów, które są zwracane przez <xref:System.Data.DataTable.ChildRelations%2A> właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Data.DataRow.GetChildRows%2A> do zwrócenia podrzędne <xref:System.Data.DataRow> obiektów dla każdej podrzędnej <xref:System.Data.DataRelation> w <xref:System.Data.DataTable>. Następnie wydrukowaniu wartość każdej kolumny w wierszu.  
  
 [!code-csharp[Classic WebData DataRow.GetChildRows2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetChildRows2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Relacja i wiersz nie należą do tej samej tabeli.</exception>
        <exception cref="T:System.ArgumentNullException">Relacja <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Wiersz nie ma tej wersji danych.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relationName As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::String ^ relationName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName">
          <see cref="P:System.Data.DataRelation.RelationName" /> z <see cref="T:System.Data.DataRelation" /> do użycia.</param>
        <summary>Pobiera wiersze podrzędne <see cref="T:System.Data.DataRow" /> przy użyciu określonego <see cref="P:System.Data.DataRelation.RelationName" /> z <see cref="T:System.Data.DataRelation" />.</summary>
        <returns>Tablica <see cref="T:System.Data.DataRow" /> obiektów lub tablicą o zerowej długości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTable> Również zawiera kolekcję <xref:System.Data.DataRelation> obiektów, które są zwracane przez <xref:System.Data.DataTable.ChildRelations%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Relacja i wiersz nie należą do tej samej tabeli.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relation As DataRelation, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation">
          <see cref="T:System.Data.DataRelation" /> Do użycia.</param>
        <param name="version">Jeden z <see cref="T:System.Data.DataRowVersion" /> określanie wersji danych można pobrać wartości. Możliwe wartości to <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, i <see langword="Proposed" />.</param>
        <summary>Pobiera wiersze podrzędne <see cref="T:System.Data.DataRow" /> przy użyciu określonego <see cref="T:System.Data.DataRelation" />, i <see cref="T:System.Data.DataRowVersion" />.</summary>
        <returns>Tablica <see cref="T:System.Data.DataRow" /> obiektów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTable> Również zawiera kolekcję <xref:System.Data.DataRelation> obiektów, które są zwracane przez <xref:System.Data.DataTable.ChildRelations%2A> właściwości.  
  
 Użyj <xref:System.Data.DataRow.HasVersion%2A> umożliwia określenie, czy <xref:System.Data.DataRowVersion> mają istnieje.  
  
 Jeśli <xref:System.Data.DataRowVersion.Default> jest określony, zależy od wersji, która jest używana <xref:System.Data.DataRow.RowState*> wiersza, w którym `GetChildRows` jest wywoływana. Jeśli wiersz, w którym `GetChildRows` jest wywoływana ma `RowState` z `Modified`, `New`, lub `Unchanged`, <xref:System.Data.DataRowVersion.Current> wersji wiersza służy do pobierania wierszy podrzędnych z takimi samymi wartościami w ich bieżącej wersji. Jeśli wiersz, w którym `GetChildRows` jest wywoływana ma `RowState` z `Deleted`, <xref:System.Data.DataRowVersion.Original> wersji wiersza służy do pobierania wierszy podrzędnych z takimi samymi wartościami w ich oryginalnych wersji.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Data.DataRow.GetChildRows%2A> do zwrócenia podrzędne <xref:System.Data.DataRow> obiektów dla każdej podrzędnej <xref:System.Data.DataRelation> w <xref:System.Data.DataTable>. Następnie wydrukowaniu wartość każdej kolumny o określonej wersji w wierszu.  
  
 [!code-csharp[Classic WebData DataRow.GetChildRows3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetChildRows3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Relacja i wiersz nie należą do tej samej tabeli.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relation" /> Jest <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Wiersz nie ma żądanego <see cref="T:System.Data.DataRowVersion" />.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="T:System.Data.DataRowVersion" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relationName As String, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName">
          <see cref="P:System.Data.DataRelation.RelationName" /> z <see cref="T:System.Data.DataRelation" /> do użycia.</param>
        <param name="version">Jeden z <see cref="T:System.Data.DataRowVersion" /> określanie wersji danych można pobrać wartości. Możliwe wartości to <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, i <see langword="Proposed" />.</param>
        <summary>Pobiera wiersze podrzędne <see cref="T:System.Data.DataRow" /> przy użyciu określonego <see cref="P:System.Data.DataRelation.RelationName" /> z <see cref="T:System.Data.DataRelation" />, i <see cref="T:System.Data.DataRowVersion" />.</summary>
        <returns>Tablica <see cref="T:System.Data.DataRow" /> obiektów lub tablicą o zerowej długości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTable> Również zawiera kolekcję <xref:System.Data.DataRelation> obiektów, które są zwracane przez <xref:System.Data.DataTable.ChildRelations%2A> właściwości.  
  
 Użyj <xref:System.Data.DataRow.HasVersion%2A> umożliwia określenie, czy <xref:System.Data.DataRowVersion> mają istnieje.  
  
 Jeśli <xref:System.Data.DataRowVersion.Default> jest określony, zależy od wersji, która jest używana <xref:System.Data.DataRow.RowState*> wiersza, w którym `GetChildRows` jest wywoływana. Jeśli wiersz, w którym `GetChildRows` jest wywoływana ma `RowState` z `Modified`, `New`, lub `Unchanged`, <xref:System.Data.DataRowVersion.Current> wersji wiersza służy do pobierania wierszy podrzędnych z takimi samymi wartościami w ich bieżącej wersji. Jeśli wiersz, w którym `GetChildRows` jest wywoływana ma `RowState` z `Deleted`, <xref:System.Data.DataRowVersion.Original> wersji wiersza służy do pobierania wierszy podrzędnych z takimi samymi wartościami w ich oryginalnych wersji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Relacja i wiersz nie należą do tej samej tabeli.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relation" /> Jest <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Wiersz nie ma żądanego <see cref="T:System.Data.DataRowVersion" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetColumnError">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera opis błędu dla kolumny.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (column As DataColumn) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(System::Data::DataColumn ^ column);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">A <see cref="T:System.Data.DataColumn" />.</param>
        <summary>Pobiera opis błędu o określonym <see cref="T:System.Data.DataColumn" />.</summary>
        <returns>Tekst opisu błędu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Data.DataRow.SetColumnError%2A> metodę, aby ustawić błędy kolumny.  
  
 Aby określić, czy błędy istnieją dla kolekcji kolumn, użyj <xref:System.Data.DataRow.HasErrors%2A> metody. W związku z tym, można użyć <xref:System.Data.DataRow.GetColumnsInError%2A> metodę, aby pobrać wszystkie kolumny z błędami. Alternatywnie <xref:System.Data.DataTable.GetErrors%2A> metoda <xref:System.Data.DataTable> zwraca wszystkie wiersze z błędami.  
  
 Aby wyczyścić wszystkich błędów dla kolekcji kolumn, użyj <xref:System.Data.DataRow.ClearErrors%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład przedstawia opis błędu dla określonej <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="M:System.Data.DataTable.GetErrors" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (columnIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(int columnIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Liczony od zera indeks kolumny.</param>
        <summary>Pobiera opis błędu dla kolumny określone przez indeks.</summary>
        <returns>Tekst opisu błędu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Data.DataRow.SetColumnError%2A> metodę, aby ustawić błędy kolumny.  
  
 Aby określić, czy błędy istnieją dla kolekcji kolumn, użyj <xref:System.Data.DataRow.HasErrors%2A> metody. W związku z tym, można użyć <xref:System.Data.DataRow.GetColumnsInError%2A> metodę, aby pobrać wszystkie kolumny z błędami.  
  
 Aby wyczyścić wszystkich błędów dla kolekcji kolumn, użyj <xref:System.Data.DataRow.ClearErrors%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład przedstawia opis błędu dla określonej <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <paramref name="columnIndex" /> Argument jest spoza zakresu.</exception>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (columnName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(System::String ^ columnName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">Nazwa kolumny.</param>
        <summary>Pobiera opis błędu dla kolumny, określony przez nazwę.</summary>
        <returns>Tekst opisu błędu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Data.DataRow.SetColumnError%2A> metodę, aby ustawić błędy kolumny.  
  
 Aby określić, czy błędy istnieją dla kolekcji kolumn, użyj <xref:System.Data.DataRow.HasErrors%2A> metody. W związku z tym, można użyć <xref:System.Data.DataRow.GetColumnsInError%2A> metodę, aby pobrać wszystkie kolumny z błędami.  
  
 Aby wyczyścić wszystkich błędów dla kolekcji kolumn, użyj <xref:System.Data.DataRow.ClearErrors%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład przedstawia opis błędu dla określonej <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnsInError">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn[] GetColumnsInError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataColumn[] GetColumnsInError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnsInError" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnsInError () As DataColumn()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataColumn ^&gt; ^ GetColumnsInError();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera tablicę kolumny, które mają błędy.</summary>
        <returns>Tablica <see cref="T:System.Data.DataColumn" /> obiektów, które zawierają błędy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataRow.GetColumnsInError%2A> Pozwala zmniejszyć liczbę <xref:System.Data.DataColumn> obiektów, które muszą zostać przetworzone przez zwrócenie tylko kolumny, które mają błąd błędów. Błędy może być ustawiony na poszczególnych kolumn z <xref:System.Data.DataRow.SetColumnError%2A> metody. Aby jeszcze bardziej ograniczyć liczbę przetwarzania, należy sprawdzić <xref:System.Data.DataRow.HasErrors%2A> właściwość <xref:System.Data.DataRow> klasę, aby określić czy <xref:System.Data.DataRow> zawiera błędy przed wywołaniem <xref:System.Data.DataRow.GetColumnsInError%2A>.  
  
 Użyj <xref:System.Data.DataRow.ClearErrors%2A> metodę, aby wyczyścić wszystkie błędy w wierszu. Obejmuje to <xref:System.Data.DataRow.RowError%2A>.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Data.DataRow.HasErrors%2A> do wyszukiwania błędów. Jeśli wiersz zawiera błędy, <xref:System.Data.DataRow.GetColumnsInError%2A> metoda zwraca tablicę kolumn z błędami, które następnie mogą zostać rozwiązane. <xref:System.Data.DataRow.ClearErrors%2A> Wywoływana jest metoda następnie wyczyść wszystkie błędy.  
  
 [!code-csharp[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataTable.GetErrors" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetParentRow">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera wiersza nadrzędnego <see cref="T:System.Data.DataRow" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relation As DataRelation) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::Data::DataRelation ^ relation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation">
          <see cref="T:System.Data.DataRelation" /> Do użycia.</param>
        <summary>Pobiera wiersza nadrzędnego <see cref="T:System.Data.DataRow" /> przy użyciu określonego <see cref="T:System.Data.DataRelation" />.</summary>
        <returns>Element nadrzędny <see cref="T:System.Data.DataRow" /> bieżącego wiersza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W <xref:System.Data.DataSet>, kolekcji nadrzędnej wszystkich <xref:System.Data.DataRelation> obiektów dla zestawu danych jest zwracany przez <xref:System.Data.DataRow.GetParentRows%2A> metody.  
  
 <xref:System.Data.DataTable> Również zawiera kolekcję <xref:System.Data.DataRelation> obiekty zwrócone przez <xref:System.Data.DataTable.ParentRelations%2A> właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Data.DataRow.GetParentRow%2A> do zwrócenia podrzędne <xref:System.Data.DataRow> obiektów dla każdej podrzędnej <xref:System.Data.DataRelation> w <xref:System.Data.DataTable>. Następnie wydrukowaniu wartość każdej kolumny w wierszu.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relation" /> Nie należy do <see cref="T:System.Data.DataTable" />.  Wiersz jest <see langword="null" />.</exception>
        <exception cref="T:System.Data.DataException">Wiersz podrzędny ma wiele elementów nadrzędnych.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Ten wiersz nie należy do tabeli podrzędnej <see cref="T:System.Data.DataRelation" /> obiektu.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relationName As String) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::String ^ relationName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName">
          <see cref="P:System.Data.DataRelation.RelationName" /> z <see cref="T:System.Data.DataRelation" />.</param>
        <summary>Pobiera wiersza nadrzędnego <see cref="T:System.Data.DataRow" /> przy użyciu określonego <see cref="P:System.Data.DataRelation.RelationName" /> z <see cref="T:System.Data.DataRelation" />.</summary>
        <returns>Element nadrzędny <see cref="T:System.Data.DataRow" /> bieżącego wiersza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W <xref:System.Data.DataSet>, kolekcji nadrzędnej wszystkich <xref:System.Data.DataRelation> obiektów dla zestawu danych jest zwracany przez <xref:System.Data.DataRow.GetParentRows%2A> metody.  
  
 <xref:System.Data.DataTable> Również zawiera kolekcję <xref:System.Data.DataRelation> obiekty zwrócone przez <xref:System.Data.DataTable.ParentRelations%2A> właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Data.DataRow.GetParentRow%2A> drukowania wartość z każdego wiersza nadrzędnego każdego <xref:System.Data.DataRow> w <xref:System.Data.DataTable>.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Relacja i wiersz nie należą do tej samej tabeli.</exception>
        <exception cref="T:System.Data.DataException">Wiersz podrzędny ma wiele elementów nadrzędnych.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relation As DataRelation, version As DataRowVersion) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation">
          <see cref="T:System.Data.DataRelation" /> Do użycia.</param>
        <param name="version">Jeden z <see cref="T:System.Data.DataRowVersion" /> określanie wersji danych można pobrać wartości.</param>
        <summary>Pobiera wiersza nadrzędnego <see cref="T:System.Data.DataRow" /> przy użyciu określonego <see cref="T:System.Data.DataRelation" />, i <see cref="T:System.Data.DataRowVersion" />.</summary>
        <returns>Element nadrzędny <see cref="T:System.Data.DataRow" /> bieżącego wiersza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W <xref:System.Data.DataSet>, kolekcji nadrzędnej wszystkich <xref:System.Data.DataRelation> obiektów dla zestawu danych jest zwracany przez <xref:System.Data.DataRow.GetParentRows%2A> metody.  
  
 <xref:System.Data.DataTable> Również zawiera kolekcję <xref:System.Data.DataRelation> obiekty zwrócone przez <xref:System.Data.DataTable.ParentRelations%2A> właściwości.  
  
 Użyj <xref:System.Data.DataRow.HasVersion%2A> umożliwia określenie, czy <xref:System.Data.DataRowVersion> mają istnieje.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Data.DataRow.GetParentRow%2A> do zwrócenia podrzędne <xref:System.Data.DataRow> obiektów dla każdej podrzędnej <xref:System.Data.DataRelation> w <xref:System.Data.DataTable>. Następnie wydrukowaniu wartość każdej kolumny w wierszu.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wiersz jest <see langword="null" />.  <paramref name="relation" /> Nie należy do tej tabeli nadrzędnej relacji.</exception>
        <exception cref="T:System.Data.DataException">Wiersz podrzędny ma wiele elementów nadrzędnych.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Tabelą podrzędną dla relacji nie jest tabelą, którego należy wiersz.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Wiersz nie ma tej wersji danych.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="T:System.Data.DataRowVersion" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relationName As String, version As DataRowVersion) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName">
          <see cref="P:System.Data.DataRelation.RelationName" /> z <see cref="T:System.Data.DataRelation" />.</param>
        <param name="version">Jeden z <see cref="T:System.Data.DataRowVersion" /> wartości.</param>
        <summary>Pobiera wiersza nadrzędnego <see cref="T:System.Data.DataRow" /> przy użyciu określonego <see cref="P:System.Data.DataRelation.RelationName" /> z <see cref="T:System.Data.DataRelation" />, i <see cref="T:System.Data.DataRowVersion" />.</summary>
        <returns>Element nadrzędny <see cref="T:System.Data.DataRow" /> bieżącego wiersza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W <xref:System.Data.DataSet>, kolekcji nadrzędnej wszystkich <xref:System.Data.DataRelation> obiektów dla zestawu danych jest zwracany przez <xref:System.Data.DataRow.GetParentRows%2A> metody.  
  
 <xref:System.Data.DataTable> Również zawiera kolekcję <xref:System.Data.DataRelation> obiekty zwrócone przez <xref:System.Data.DataTable.ParentRelations%2A> właściwości.  
  
 Użyj <xref:System.Data.DataRow.HasVersion%2A> umożliwia określenie, czy <xref:System.Data.DataRowVersion> mają istnieje.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Data.DataRow.GetParentRow%2A> drukowania wartość z każdego wiersza nadrzędnego każdego <xref:System.Data.DataRow> w <xref:System.Data.DataTable>.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Relacja i wiersz nie należą do tej samej tabeli.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relation" /> Jest <see langword="null" />.</exception>
        <exception cref="T:System.Data.DataException">Wiersz podrzędny ma wiele elementów nadrzędnych.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Wiersz nie ma żądanego <see cref="T:System.Data.DataRowVersion" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetParentRows">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera element nadrzędny wiersze <see cref="T:System.Data.DataRow" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relation As DataRelation) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::Data::DataRelation ^ relation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation">
          <see cref="T:System.Data.DataRelation" /> Do użycia.</param>
        <summary>Pobiera element nadrzędny wiersze <see cref="T:System.Data.DataRow" /> przy użyciu określonego <see cref="T:System.Data.DataRelation" />.</summary>
        <returns>Tablica <see cref="T:System.Data.DataRow" /> obiektów lub tablicą o zerowej długości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W <xref:System.Data.DataSet>, kolekcji nadrzędnej wszystkich <xref:System.Data.DataRelation> obiektów dla zestawu danych jest zwracany przez <xref:System.Data.DataRow.GetParentRows%2A> metody.  
  
 <xref:System.Data.DataTable> Również zawiera kolekcję <xref:System.Data.DataRelation> obiekty zwrócone przez <xref:System.Data.DataTable.ParentRelations%2A> właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Data.DataRow.GetParentRows%2A> do zwrócenia podrzędne <xref:System.Data.DataRow> obiektów dla każdej podrzędnej <xref:System.Data.DataRelation> w <xref:System.Data.DataTable>. Następnie wydrukowaniu wartość każdej kolumny w wierszu.  
  
 [!code-vb[Classic WebData DataRow.GetParentRows2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRows2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="T:System.Data.DataRelation" /> Nie należy do tego wiersza <see cref="T:System.Data.DataSet" />.</exception>
        <exception cref="T:System.ArgumentNullException">Wiersz jest <see langword="null" />.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Tabelą podrzędną dla relacji nie jest tabelą, którego należy wiersz.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do <see cref="T:System.Data.DataTable" />.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relationName As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::String ^ relationName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName">
          <see cref="P:System.Data.DataRelation.RelationName" /> z <see cref="T:System.Data.DataRelation" />.</param>
        <summary>Pobiera element nadrzędny wiersze <see cref="T:System.Data.DataRow" /> przy użyciu określonego <see cref="P:System.Data.DataRelation.RelationName" /> z <see cref="T:System.Data.DataRelation" />.</summary>
        <returns>Tablica <see cref="T:System.Data.DataRow" /> obiektów lub tablicą o zerowej długości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W <xref:System.Data.DataSet>, kolekcji nadrzędnej wszystkich <xref:System.Data.DataRelation> obiektów dla zestawu danych jest zwracany przez <xref:System.Data.DataRow.GetParentRows%2A> metody.  
  
 <xref:System.Data.DataTable> Również zawiera kolekcję <xref:System.Data.DataRelation> obiekty zwrócone przez <xref:System.Data.DataTable.ParentRelations%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Relacja i wiersz nie należą do tej samej tabeli.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relation As DataRelation, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation">
          <see cref="T:System.Data.DataRelation" /> Do użycia.</param>
        <param name="version">Jeden z <see cref="T:System.Data.DataRowVersion" /> określanie wersji danych można pobrać wartości.</param>
        <summary>Pobiera element nadrzędny wiersze <see cref="T:System.Data.DataRow" /> przy użyciu określonego <see cref="T:System.Data.DataRelation" />, i <see cref="T:System.Data.DataRowVersion" />.</summary>
        <returns>Tablica <see cref="T:System.Data.DataRow" /> obiektów lub tablicą o zerowej długości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W <xref:System.Data.DataSet>, kolekcji nadrzędnej wszystkich <xref:System.Data.DataRelation> obiektów dla zestawu danych jest zwracany przez <xref:System.Data.DataRow.GetParentRows%2A> metody.  
  
 <xref:System.Data.DataTable> Również zawiera kolekcję <xref:System.Data.DataRelation> obiekty zwrócone przez <xref:System.Data.DataTable.ParentRelations%2A> właściwości.  
  
 Użyj <xref:System.Data.DataRow.HasVersion%2A> umożliwia określenie, czy <xref:System.Data.DataRowVersion> mają istnieje.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Data.DataRow.GetParentRows%2A> do zwrócenia podrzędne <xref:System.Data.DataRow> obiektów dla każdej podrzędnej <xref:System.Data.DataRelation> w <xref:System.Data.DataTable>. Następnie wydrukowaniu wartość każdej kolumny w wierszu.  
  
 [!code-vb[Classic WebData DataRow.GetParentRows3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRows3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="T:System.Data.DataRelation" /> Nie należy do tego wiersza <see cref="T:System.Data.DataSet" />.</exception>
        <exception cref="T:System.ArgumentNullException">Wiersz jest <see langword="null" />.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Tabelą podrzędną dla relacji nie jest tabelą, którego należy wiersz.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do <see cref="T:System.Data.DataTable" />.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Wiersz nie ma żądanego <see cref="T:System.Data.DataRowVersion" />.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relationName As String, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName">
          <see cref="P:System.Data.DataRelation.RelationName" /> z <see cref="T:System.Data.DataRelation" />.</param>
        <param name="version">Jeden z <see cref="T:System.Data.DataRowVersion" /> określanie wersji danych można pobrać wartości. Możliwe wartości to <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, i <see langword="Proposed" />.</param>
        <summary>Pobiera element nadrzędny wiersze <see cref="T:System.Data.DataRow" /> przy użyciu określonego <see cref="P:System.Data.DataRelation.RelationName" /> z <see cref="T:System.Data.DataRelation" />, i <see cref="T:System.Data.DataRowVersion" />.</summary>
        <returns>Tablica <see cref="T:System.Data.DataRow" /> obiektów lub tablicą o zerowej długości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W <xref:System.Data.DataSet>, kolekcji nadrzędnej wszystkich <xref:System.Data.DataRelation> obiektów dla zestawu danych jest zwracany przez <xref:System.Data.DataRow.GetParentRows%2A> metody.  
  
 <xref:System.Data.DataTable> Również zawiera kolekcję <xref:System.Data.DataRelation> obiekty zwrócone przez <xref:System.Data.DataTable.ParentRelations%2A> właściwości.  
  
 Użyj <xref:System.Data.DataRow.HasVersion%2A> umożliwia określenie, czy <xref:System.Data.DataRowVersion> mają istnieje.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Relacja i wiersz nie należą do tej samej tabeli.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relation" /> Jest <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Wiersz nie ma żądanego <see cref="T:System.Data.DataRowVersion" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasErrors">
      <MemberSignature Language="C#" Value="public bool HasErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasErrors" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.HasErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasErrors { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy występują błędy w wierszu.</summary>
        <value>
          <see langword="true" /> Jeśli wiersz zawiera błąd; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HasErrors` Zwraca `true` ewentualne <xref:System.Data.DataColumn> obiekt w wierszu zawiera błąd, lub jeśli <xref:System.Data.DataRow.RowError%2A> właściwość <xref:System.Data.DataRow> nie jest ciągiem pustym.  
  
 Podczas sprawdzania poprawności danych, można ustawić błąd według dowolnej kolumny w wierszu. Takie kolumny, gdy wyświetlana w <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> sterowania, jest oznaczony atrybutem czerwonego wykrzyknika sygnalizują dla użytkownika, czy kolumna jest błędny.  
  
 Użyj <xref:System.Data.DataRow.SetColumnError%2A> można ustawić błąd dla każdej kolumny.  
  
 Użyj <xref:System.Data.DataRow.GetColumnError%2A> i `GetColumnsInError` metody zwraca kolumn z błędami.  
  
 <xref:System.Data.DataRow.ClearErrors%2A> Metody spowoduje wyczyszczenie wszystkich błędów dla wiersza.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Data.DataRow.HasErrors%2A> do wyszukiwania błędów. Jeśli wiersz zawiera błędy, <xref:System.Data.DataRow.GetColumnsInError%2A> metoda zwraca tablicę kolumn z błędami, które następnie mogą zostać rozwiązane. <xref:System.Data.DataRow.ClearErrors%2A> Wywoływana jest metoda następnie wyczyść wszystkie błędy.  
  
 [!code-csharp[Classic WebData DataRow.HasErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.HasErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.HasErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.HasErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasVersion">
      <MemberSignature Language="C#" Value="public bool HasVersion (System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasVersion(valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasVersion (version As DataRowVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasVersion(System::Data::DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="version">Jeden z <see cref="T:System.Data.DataRowVersion" /> wartości, które określa wersję wiersza.</param>
        <summary>Pobiera wartość wskazującą, czy istnieje określona wersja.</summary>
        <returns>
          <see langword="true" /> Jeśli wersja istnieje; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zobacz <xref:System.Data.DataRow.BeginEdit%2A> metody, aby uzyskać więcej informacji.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Data.DataRow.HasVersion%2A> metodę, aby określić, czy bieżąca wartość kolumny i proponowanej wartości są takie same. Jeśli tak, edycji zostało anulowane. W przeciwnym razie <xref:System.Data.DataRow.AcceptChanges%2A> metoda jest wywoływana, aby zakończyć edycję.  
  
 [!code-vb[Classic WebData DataRow.HasVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.HasVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsNull">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy określona kolumna zawiera wartości null.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (column As DataColumn) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::Data::DataColumn ^ column);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">A <see cref="T:System.Data.DataColumn" />.</param>
        <summary>Pobiera wartość wskazującą, czy określony <see cref="T:System.Data.DataColumn" /> zawiera wartość null.</summary>
        <returns>
          <see langword="true" /> Jeśli kolumna zawiera wartości null; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład drukuje każdej kolumny każdego wiersza w każdej tabeli <xref:System.Data.DataSet>. Jeśli wiersz jest ustawiona na wartość null, wartość nie jest drukowana.  
  
 [!code-vb[Classic WebData DataRow.IsNull2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (columnIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(int columnIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Liczony od zera indeks kolumny.</param>
        <summary>Pobiera wartość wskazującą, czy kolumna pod określonym indeksem zawiera wartość null.</summary>
        <returns>
          <see langword="true" /> Jeśli kolumna zawiera wartości null; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład powoduje zmianę wartości kolumny ma wartość null, a następnie używa <xref:System.Data.DataRow.IsNull%2A> metodę, aby określić, czy ma wartość null.  
  
 [!code-vb[Classic WebData DataRow.IsNull Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (columnName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::String ^ columnName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">Nazwa kolumny.</param>
        <summary>Pobiera wartość wskazującą, czy kolumna o nazwie zawiera wartość null.</summary>
        <returns>
          <see langword="true" /> Jeśli kolumna zawiera wartości null; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład powoduje zmianę wartości kolumny ma wartość null, a następnie używa <xref:System.Data.DataRow.IsNull%2A> metodę, aby określić, czy ma wartość null.  
  
 [!code-vb[Classic WebData DataRow.IsNull1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (System.Data.DataColumn column, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(class System.Data.DataColumn column, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (column As DataColumn, version As DataRowVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::Data::DataColumn ^ column, System::Data::DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="column">A <see cref="T:System.Data.DataColumn" />.</param>
        <param name="version">Jeden z <see cref="T:System.Data.DataRowVersion" /> wartości, które określa wersję wiersza. Możliwe wartości to <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, i <see langword="Proposed" />.</param>
        <summary>Pobiera wartość wskazującą, czy określony <see cref="T:System.Data.DataColumn" /> i <see cref="T:System.Data.DataRowVersion" /> zawiera wartość null.</summary>
        <returns>
          <see langword="true" /> Jeśli kolumna zawiera wartości null; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera lub ustawia dane przechowywane w określonej kolumnie.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[System.Data.DataColumn column] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(class System.Data.DataColumn)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(column As DataColumn) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Data::DataColumn ^] { System::Object ^ get(System::Data::DataColumn ^ column); void set(System::Data::DataColumn ^ column, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">A <see cref="T:System.Data.DataColumn" /> zawierający dane.</param>
        <summary>Pobiera lub ustawia dane przechowywane w określonej <see cref="T:System.Data.DataColumn" />.</summary>
        <value>
          <see cref="T:System.Object" /> Zawierający dane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po ustawieniu właściwości wyjątek jest generowany w przypadku wystąpienia wyjątku w <xref:System.Data.DataTable.ColumnChanging> zdarzeń.  
  
 Jeśli jest to bezpośredniego edytowania, zobacz <xref:System.Data.DataRow.EndEdit%2A> wyjątki, które mogą być generowane.  
  
   
  
## Examples  
 Poniższe przykłady przedstawiają sposób używania <xref:System.Data.DataRow.Item%2A> właściwości do pobierania i ustawiania wartości określonego indeksu. Pierwszym przykładzie pobiera wartość pierwszej kolumny w dowolnym wiersza, który użytkownik kliknie w <xref:System.Windows.Forms.DataGrid> formantu. Drugi ustawia wartość przekazanego jako argument do metody.  
  
 [!code-vb[Classic WebData DataRow.this2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Kolumna nie należy do tej tabeli.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="column" /> Ma wartość null.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Próbowano ustawić wartość na wiersz usunięty.</exception>
        <exception cref="T:System.InvalidCastException">Typy danych wartości i kolumny nie są zgodne.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int columnIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(columnIndex As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int columnIndex); void set(int columnIndex, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Liczony od zera indeks kolumny.</param>
        <summary>Pobiera lub ustawia dane przechowywane w kolumnie określonej przez indeks.</summary>
        <value>
          <see cref="T:System.Object" /> Zawierający dane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po ustawieniu właściwości wyjątek jest generowany w przypadku wystąpienia wyjątku w <xref:System.Data.DataTable.ColumnChanging> zdarzeń.  
  
 Jeśli jest to edycji, zobacz <xref:System.Data.DataRow.EndEdit%2A> wyjątki, które mogą być generowane.  
  
   
  
## Examples  
 Poniższe przykłady przedstawiają sposób używania <xref:System.Data.DataRow.Item%2A> właściwości do pobierania i ustawiania wartości określonego indeksu. Pierwszym przykładzie pobiera wartość pierwszej kolumny w dowolnym wiersza, który użytkownik kliknie w <xref:System.Windows.Forms.DataGrid> formantu.  
  
 [!code-csharp[Classic WebData DataRow.this Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Występuje, gdy spróbujesz ustawić wartości dla usuniętych wierszy.</exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <paramref name="columnIndex" /> Argument jest spoza zakresu.</exception>
        <exception cref="T:System.InvalidCastException">Występuje, gdy ustawiona wartość i nowa wartość <see cref="T:System.Type" /> niezgodny <see cref="P:System.Data.DataColumn.DataType" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string columnName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(columnName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ columnName); void set(System::String ^ columnName, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">Nazwa kolumny.</param>
        <summary>Pobiera lub ustawia dane przechowywane w kolumnie określonej przez nazwę.</summary>
        <value>
          <see cref="T:System.Object" /> Zawierający dane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po ustawieniu właściwości wyjątek jest generowany w przypadku wystąpienia wyjątku w <xref:System.Data.DataTable.ColumnChanging> zdarzeń.  
  
 Jeśli jest to bezpośredniego edytowania, zobacz <xref:System.Data.DataRow.EndEdit%2A> wyjątki, które mogą być generowane.  
  
   
  
## Examples  
 Poniższe przykłady przedstawiają sposób używania <xref:System.Data.DataRow.Item%2A> właściwości do pobierania i ustawiania wartości określonego indeksu. Pierwszym przykładzie pobiera wartość pierwszej kolumny w dowolnym wiersza, który użytkownik kliknie w <xref:System.Windows.Forms.DataGrid> formantu. Drugi ustawia wartość przekazanego jako argument do metody.  
  
 [!code-csharp[Classic WebData DataRow.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Kolumna określona przez <paramref name="columnName" /> nie można odnaleźć.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Występuje, gdy spróbujesz ustawić wartości dla usuniętych wierszy.</exception>
        <exception cref="T:System.InvalidCastException">Występuje, gdy ustawiono wartość i jego <see cref="T:System.Type" /> niezgodny <see cref="P:System.Data.DataColumn.DataType" />.</exception>
        <exception cref="T:System.Data.NoNullAllowedException">Występuje, gdy zostanie podjęta próba wstawienia wartości null do kolumny gdzie <see cref="P:System.Data.DataColumn.AllowDBNull" /> ma ustawioną wartość <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[System.Data.DataColumn column, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(class System.Data.DataColumn, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(column As DataColumn, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Data::DataColumn ^, System::Data::DataRowVersion] { System::Object ^ get(System::Data::DataColumn ^ column, System::Data::DataRowVersion version); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="column">A <see cref="T:System.Data.DataColumn" /> zawierający informacje dotyczące kolumny.</param>
        <param name="version">Jeden z <see cref="T:System.Data.DataRowVersion" /> wartości, które określa wersję wiersza, który ma. Możliwe wartości to <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, i <see langword="Proposed" />.</param>
        <summary>Pobiera określoną wersję danych przechowywanych w określonym <see cref="T:System.Data.DataColumn" />.</summary>
        <value>
          <see cref="T:System.Object" /> Zawierający dane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `version` Nie należy mylić z <xref:System.Data.DataRow.RowState*> właściwości. `version` Argument opisuje stan danych, który jest zawarty w kolumnie względem oryginalnej wartości w kolumnie.  
  
 Po ustawieniu właściwości wyjątek jest generowany w przypadku wystąpienia wyjątku w <xref:System.Data.DataTable.ColumnChanging> zdarzeń.  
  
 Jeśli jest to bezpośredniego edytowania, zobacz <xref:System.Data.DataRow.EndEdit%2A> wyjątki, które mogą być generowane.  
  
   
  
## Examples  
 Poniższy przykład pobiera bieżącą wartość klikniętej komórki w <xref:System.Windows.Forms.DataGrid> formantu.  
  
 [!code-csharp[Classic WebData DataRow.this5 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this5 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this5 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Kolumna nie należy do tabeli.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="column" /> Argument zawiera wartość null.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Wiersz nie ma tej wersji danych.</exception>
        <altmember cref="T:System.Data.DataRowVersion" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int columnIndex, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(columnIndex As Integer, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int, System::Data::DataRowVersion] { System::Object ^ get(int columnIndex, System::Data::DataRowVersion version); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Liczony od zera indeks kolumny.</param>
        <param name="version">Jeden z <see cref="T:System.Data.DataRowVersion" /> wartości, które określa wersję wiersza, który ma. Możliwe wartości to <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, i <see langword="Proposed" />.</param>
        <summary>Pobiera dane przechowywane w kolumnie, określony przez indeks i wersji danych do pobrania.</summary>
        <value>
          <see cref="T:System.Object" /> Zawierający dane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można tylko utworzyć lub zaktualizować wiersza po wywołaniu metody <xref:System.Data.DataRow.BeginEdit%2A> metody; podobnie <xref:System.Data.DataRow.EndEdit%2A> metoda musi zostać wywołana można przekazać do edycji. Po wywołaniu metody <xref:System.Data.DataRow.EndEdit%2A> metody i przed wywołaniem <xref:System.Data.DataRow.AcceptChanges%2A> metody wewnętrznej reprezentacji oryginału i nowe proponowane wartości są przechowywane. W związku z tym czasu wywołania <xref:System.Data.DataRow.AcceptChanges%2A>, można użyć `version` argumentu, aby określić, która wersja wartość kolumny potrzebujesz, albo `DataRowVersion.Original` lub `DataRowVersion.Proposed`. Jednak niezwłocznie po wywołaniu <xref:System.Data.DataRow.AcceptChanges%2A> metody przekształcenia wersji kolumny `DataRowVersion.Original`. W przypadku nowego wiersza, można również przekazać `DataRowVersion.Default` dla parametru, aby pobrać wartość domyślna w kolumnie. Podczas przekazywania `DataRowVersion.Current`, właściwość zwraca bieżącą wartość, niezależnie od jego wersja może być.  
  
> [!NOTE]
>  <xref:System.Data.DataRow.BeginEdit%2A> Wywoływana jest metoda niejawnie po zmianie wartości formantu powiązanego z danymi, lub gdy <xref:System.Data.DataRow> obiekt jest dodawany do <xref:System.Data.DataRowCollection>; <xref:System.Data.DataRow.EndEdit%2A> wywoływana jest metoda niejawnie podczas wywoływania następujące metody: <xref:System.Data.DataRow.AcceptChanges%2A> Metoda <xref:System.Data.DataRow> obiektu, <xref:System.Data.DataTable.AcceptChanges%2A> metody <xref:System.Data.DataTable> obiekt, lub <xref:System.Data.DataRow.CancelEdit%2A> metody.  
  
 Z kolei <xref:System.Data.DataRowVersion> wyliczenie `Current` zwraca informacje o wersji danych po <xref:System.Data.DataRow.EndEdit%2A> została wywołana metoda.  
  
 `version` Argument nie należy mylić z <xref:System.Data.DataRow.RowState*> właściwości. `version` Argument opisuje stan danych, który jest zawarty w kolumnie względem oryginalnej wartości w kolumnie. <xref:System.Data.DataRow.RowState*> Właściwość opisuje stan całego wiersza względem jego elementu nadrzędnego <xref:System.Data.DataTable>.  
  
 Po ustawieniu właściwości wyjątek jest generowany w przypadku wystąpienia wyjątku w <xref:System.Data.DataTable.ColumnChanging> zdarzeń.  
  
 Jeśli jest to bezpośredniego edytowania, zobacz <xref:System.Data.DataRow.EndEdit%2A> wyjątki, które mogą być generowane.  
  
   
  
## Examples  
 Poniższy przykład pobiera bieżącą wartość kolumny za pomocą <xref:System.Data.DataRow.Item%2A> właściwość <xref:System.Data.DataRow> obiektu.  
  
 [!code-vb[Classic WebData DataRow.this3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <paramref name="columnIndex" /> Argument jest spoza zakresu.</exception>
        <exception cref="T:System.InvalidCastException">Typy danych wartości i kolumny nie są zgodne.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Wiersz nie ma tej wersji danych.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Próbowano ustawić wartość na wiersz usunięty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string columnName, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(columnName As String, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^, System::Data::DataRowVersion] { System::Object ^ get(System::String ^ columnName, System::Data::DataRowVersion version); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="columnName">Nazwa kolumny.</param>
        <param name="version">Jeden z <see cref="T:System.Data.DataRowVersion" /> wartości, które określa wersję wiersza, który ma. Możliwe wartości to <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, i <see langword="Proposed" />.</param>
        <summary>Pobiera określoną wersję danych przechowywanych w kolumnie o nazwie.</summary>
        <value>
          <see cref="T:System.Object" /> Zawierający dane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wersja nie należy mylić z <xref:System.Data.DataRow.RowState*> właściwości. `version` Argument opisuje stan danych, który jest zawarty w kolumnie względem oryginalnej wartości w kolumnie. <xref:System.Data.DataRow.RowState*> Właściwość opisuje stan całego wiersza względem jego elementu nadrzędnego <xref:System.Data.DataTable>.  
  
 Po ustawieniu właściwości wyjątek jest generowany w przypadku wystąpienia wyjątku w <xref:System.Data.DataTable.ColumnChanging> zdarzeń.  
  
 Jeśli jest to bezpośredniego edytowania, zobacz <xref:System.Data.DataRow.EndEdit%2A> wyjątki, które mogą być generowane.  
  
   
  
## Examples  
 Poniższy przykład pobiera bieżącą wersję danych w komórce klikniętej <xref:System.Windows.Forms.DataGrid> formantu.  
  
 [!code-csharp[Classic WebData DataRow.this4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Kolumna określona przez <paramref name="columnName" /> nie można odnaleźć.</exception>
        <exception cref="T:System.InvalidCastException">Typy danych wartości i kolumny nie są zgodne.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Wiersz nie ma tej wersji danych.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Wiersz został usunięty.</exception>
        <altmember cref="T:System.Data.DataRowVersion" />
      </Docs>
    </Member>
    <Member MemberName="ItemArray">
      <MemberSignature Language="C#" Value="public object[] ItemArray { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object[] ItemArray" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.ItemArray" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemArray As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Object ^&gt; ^ ItemArray { cli::array &lt;System::Object ^&gt; ^ get(); void set(cli::array &lt;System::Object ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wszystkie wartości dla tego wiersza za pomocą tablicy.</summary>
        <value>Tablica typu <see cref="T:System.Object" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy ustawić lub pobrać wartości dla tego wiersza za pomocą tablicy. Jeśli używasz tej właściwości można ustawić wartości tablicy musi mieć taki sam rozmiar i kolejność jako kolekcji kolumn. Przekazywanie `null` w <xref:System.Data.DataRow.ItemArray%2A> wskazuje, czy wartość nie została określona.  
  
 Użytkownicy mogą generować wyjątków w <xref:System.Data.DataTable.ColumnChanging> zdarzenia lub <xref:System.Data.DataTable.RowChanging> zdarzeń.  
  
   
  
## Examples  
 Poniższe przykłady pokazują, jak pobieranie i ustawianie wartości przy użyciu <xref:System.Data.DataRow.ItemArray%2A> właściwości.  
  
 [!code-csharp[Classic WebData DataRow.ItemArray Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ItemArray Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ItemArray Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ItemArray Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Tablica jest większa niż liczba kolumn w tabeli.</exception>
        <exception cref="T:System.InvalidCastException">Wartość w tablicy nie odpowiada jego <see cref="P:System.Data.DataColumn.DataType" /> w jego odpowiednie <see cref="T:System.Data.DataColumn" />.</exception>
        <exception cref="T:System.Data.ConstraintException">Edytuj spowodowało przerwanie ograniczenia.</exception>
        <exception cref="T:System.Data.ReadOnlyException">Edytuj próbował zmienić wartość kolumny tylko do odczytu.</exception>
        <exception cref="T:System.Data.NoNullAllowedException">Edytuj próbował umieścić wartość null w kolumnie gdzie <see cref="P:System.Data.DataColumn.AllowDBNull" /> z <see cref="T:System.Data.DataColumn" /> obiekt jest <see langword="false" />.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Wiersz został usunięty.</exception>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="T:System.Data.DataColumn" />
      </Docs>
    </Member>
    <Member MemberName="RejectChanges">
      <MemberSignature Language="C#" Value="public void RejectChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RejectChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.RejectChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub RejectChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RejectChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Odrzuca wszystkie zmiany wprowadzone do wiersza od <see cref="M:System.Data.DataRow.AcceptChanges" /> ostatniego została wywołana.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas wywoływania <xref:System.Data.DataRow.RejectChanges%2A> metody <xref:System.Data.DataRow.CancelEdit%2A> wywoływana jest metoda niejawnie anulować wszelkie zmiany. Jeśli <xref:System.Data.DataRow.RowState*> został usunięty lub zmodyfikowany, wiersz zostanie przywrócony do jego poprzedniej wartości, i <xref:System.Data.DataRow.RowState*> staje się bez zmian. Jeśli <xref:System.Data.DataRow.RowState*> zostanie dodany wiersz zostanie usunięty.  
  
   
  
## Examples  
 Poniższy przykład tworzy prosty <xref:System.Data.DataTable> z 2 kolumnami i wierszami 10. Po kilku <xref:System.Data.DataRow> elementy są usuwane z <xref:System.Data.DataRow.Delete%2A> metody, jednego z wierszy jest nieusunięte wywołując <xref:System.Data.DataRow.RejectChanges%2A>.  
  
 [!code-csharp[Classic WebData DataRow.Delete Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Delete Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.IsNull(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RowError">
      <MemberSignature Language="C#" Value="public string RowError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RowError" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.RowError" />
      <MemberSignature Language="VB.NET" Value="Public Property RowError As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RowError { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia opis błędu niestandardowego wiersza.</summary>
        <value>Tekst opisujący błąd.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Używa <xref:System.Data.DataRow.HasErrors%2A> właściwości określenie, czy <xref:System.Data.DataRow> zawiera błędy.  
  
   
  
## Examples  
 Poniższy przykład przedstawia tekst błędu dla dziesięciu wierszy tabeli wyświetlane w <xref:System.Windows.Forms.DataGrid> formantu.  
  
 [!code-csharp[Classic WebData DataRow.RowError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.RowError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.RowError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.RowError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
        <altmember cref="P:System.Data.DataSet.HasErrors" />
      </Docs>
    </Member>
    <Member MemberName="RowState">
      <MemberSignature Language="C#" Value="public System.Data.DataRowState RowState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowState RowState" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.RowState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowState As DataRowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRowState RowState { System::Data::DataRowState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący stan wiersza w odniesieniu do jego relacji <see cref="T:System.Data.DataRowCollection" />.</summary>
        <value>Jeden z <see cref="T:System.Data.DataRowState" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Data.DataRow.RowState*> zależy od dwa składniki: rodzaj operacji ma zostać wykonane w tym wierszu i czy <xref:System.Data.DataRow.AcceptChanges%2A> została wywołana dla <xref:System.Data.DataRow>.  
  
   
  
## Examples  
 Poniższy przykład najpierw tworzy nową <xref:System.Data.DataTable> z jedną kolumną, a następnie tworzy pojedynczy <xref:System.Data.DataRow>. Jako <xref:System.Data.DataRow> jest utworzony, dodane, zmodyfikowane i usunięty, jego <xref:System.Data.DataRow.RowState*> drukowania.  
  
 [!code-csharp[Classic WebData DataRow.RowState Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.RowState Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.RowState Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.RowState Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="T:System.Data.DataRowView" />
        <altmember cref="M:System.Data.DataRow.Delete" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
        <altmember cref="M:System.Data.DataRow.SetAdded" />
        <altmember cref="M:System.Data.DataRow.SetModified" />
      </Docs>
    </Member>
    <Member MemberName="SetAdded">
      <MemberSignature Language="C#" Value="public void SetAdded ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAdded() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetAdded" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAdded ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAdded();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zmiany <see cref="P:System.Data.DataRow.RowState" /> z <see cref="T:System.Data.DataRow" /> do <see langword="Added" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zmiany <xref:System.Data.DataRow.RowState*> z <xref:System.Data.DataRow> do `Added`. Jeśli bieżący wiersz nie znajduje się w jednej `Unchanged` lub `Added` stanu zgłasza <xref:System.InvalidOperationException> komunikat o który `SetAdded` można wywołać tylko na `DataRow` wystąpienie where `RowState` jest `Unchanged`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetModified" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColumnError">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia opis błędu dla kolumny.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (System.Data.DataColumn column, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(class System.Data.DataColumn column, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (column As DataColumn, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(System::Data::DataColumn ^ column, System::String ^ error);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column">
          <see cref="T:System.Data.DataColumn" /> Można ustawić opisu błędu.</param>
        <param name="error">Opis błędu.</param>
        <summary>Ustawia opis błędu dla kolumny określone jako <see cref="T:System.Data.DataColumn" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby zbadać opisów błędów, użyj <xref:System.Data.DataRow.GetColumnError%2A> metody.  
  
 Aby określić, czy błędy istnieją dla kolekcji kolumn, użyj <xref:System.Data.DataRow.HasErrors%2A> właściwości. W związku z tym, można użyć <xref:System.Data.DataRow.GetColumnsInError%2A> metodę, aby pobrać wszystkie kolumny z błędami.  
  
 Jeśli `null` lub ciąg pusty jest przekazywany jako `error` parametru <xref:System.Data.DataRow> zachowuje się tak, jakby błąd nie została ustawiona i <xref:System.Data.DataRow.HasErrors%2A> właściwości zwróci wartość false.  
  
 Aby ustawić opis błędu niestandardowego do całego wiersza, użyj <xref:System.Data.DataRow.RowError%2A> właściwości.  
  
 Aby określić, czy błędy istnieją dla kolekcji kolumn, użyj <xref:System.Data.DataRow.HasErrors%2A> metody.  
  
 Aby wyczyścić wszystkich błędów dla kolekcji kolumn, użyj <xref:System.Data.DataRow.ClearErrors%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład przedstawia opis błędu dla określonej <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (int columnIndex, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(int32 columnIndex, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (columnIndex As Integer, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(int columnIndex, System::String ^ error);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Liczony od zera indeks kolumny.</param>
        <param name="error">Opis błędu.</param>
        <summary>Ustawia opis błędu dla kolumny określone przez indeks.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda służy do ustawić opisy błędów niestandardowych dla określonej kolumny. Można użyć <xref:System.Windows.Forms.ErrorProvider> formantu, aby wyświetlić tekst błędu.  
  
 Aby zbadać opisów błędów, użyj <xref:System.Data.DataRow.GetColumnError%2A> metody.  
  
 Aby określić, czy błędy istnieją dla kolekcji kolumn, użyj <xref:System.Data.DataRow.HasErrors%2A> właściwości. W związku z tym, można użyć <xref:System.Data.DataRow.GetColumnsInError%2A> metodę, aby pobrać wszystkie kolumny z błędami.  
  
 Jeśli `null` lub ciąg pusty jest przekazywany jako `error` parametru <xref:System.Data.DataRow> zachowuje się tak, jakby błąd nie została ustawiona i <xref:System.Data.DataRow.HasErrors%2A> właściwości zwróci wartość false.  
  
 Aby ustawić opis błędu niestandardowego do całego wiersza, użyj <xref:System.Data.DataRow.RowError%2A> właściwości.  
  
 Aby wyczyścić wszystkich błędów dla kolekcji kolumn, użyj <xref:System.Data.DataRow.ClearErrors%2A> metody.  
  
 Tekst błędu, która ma zastosowanie do całego wiersza ustawia <xref:System.Data.DataRow.RowError%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład przedstawia opis błędu dla określonej <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <paramref name="columnIndex" /> Argument jest spoza zakresu</exception>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (string columnName, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(string columnName, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (columnName As String, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(System::String ^ columnName, System::String ^ error);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">Nazwa kolumny.</param>
        <param name="error">Opis błędu.</param>
        <summary>Ustawia opis błędu dla określonego za pomocą nazwy kolumny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa kolumny ustawiono <xref:System.Data.DataColumn.ColumnName%2A> właściwość <xref:System.Data.DataColumn> klasy.  
  
 Aby zbadać opisów błędów, użyj <xref:System.Data.DataRow.GetColumnError%2A> metody.  
  
 Aby określić, czy błędy istnieją dla kolekcji kolumn, użyj <xref:System.Data.DataRow.HasErrors%2A> właściwości. W związku z tym, można użyć <xref:System.Data.DataRow.GetColumnsInError%2A> metodę, aby pobrać wszystkie kolumny z błędami.  
  
 Jeśli `null` lub ciąg pusty jest przekazywany jako `error` parametru <xref:System.Data.DataRow> zachowuje się tak, jakby błąd nie została ustawiona i <xref:System.Data.DataRow.HasErrors%2A> właściwości zwróci wartość false.  
  
 Aby ustawić opis błędu niestandardowego do całego wiersza, użyj <xref:System.Data.DataRow.RowError%2A> właściwości.  
  
 Aby określić, czy błędy istnieją dla kolekcji kolumn, użyj <xref:System.Data.DataRow.HasErrors%2A> metody.  
  
 Aby wyczyścić wszystkich błędów dla kolekcji kolumn, użyj <xref:System.Data.DataRow.ClearErrors%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład przedstawia opis błędu dla określonej <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetModified">
      <MemberSignature Language="C#" Value="public void SetModified ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetModified" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetModified ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetModified();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zmiany <see cref="P:System.Data.DataRow.RowState" /> z <see cref="T:System.Data.DataRow" /> do <see langword="Modified" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zmiany <xref:System.Data.DataRow.RowState*> z <xref:System.Data.DataRow> do `Modified`. Jeśli bieżący wiersz nie znajduje się w jednej `Unchanged` lub `Added` stanu zgłasza <xref:System.InvalidOperationException> komunikat o który `SetModified` można wywołać tylko na `DataRow` wystąpienie where `RowState` jest `Unchanged`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetAdded" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <Member MemberName="SetNull">
      <MemberSignature Language="C#" Value="protected void SetNull (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNull(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetNull(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNull (column As DataColumn)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNull(System::Data::DataColumn ^ column);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">A <see cref="T:System.Data.DataColumn" />.</param>
        <summary>Ustawia wartość określonego <see cref="T:System.Data.DataColumn" /> ma wartość null.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Data.DataRow.IsNull%2A> metodę, aby określić, czy kolumna zawiera wartości null.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetParentRow">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia wiersz nadrzędnego <see cref="T:System.Data.DataRow" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetParentRow">
      <MemberSignature Language="C#" Value="public void SetParentRow (System.Data.DataRow parentRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParentRow(class System.Data.DataRow parentRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParentRow (parentRow As DataRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParentRow(System::Data::DataRow ^ parentRow);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentRow" Type="System.Data.DataRow" />
      </Parameters>
      <Docs>
        <param name="parentRow">Nadrzędną <see cref="T:System.Data.DataRow" />.</param>
        <summary>Ustawia wiersz nadrzędnego <see cref="T:System.Data.DataRow" /> z określonego elementu nadrzędnego nowe <see cref="T:System.Data.DataRow" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetParentRow">
      <MemberSignature Language="C#" Value="public void SetParentRow (System.Data.DataRow parentRow, System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParentRow(class System.Data.DataRow parentRow, class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParentRow (parentRow As DataRow, relation As DataRelation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParentRow(System::Data::DataRow ^ parentRow, System::Data::DataRelation ^ relation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentRow" Type="System.Data.DataRow" />
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="parentRow">Nadrzędną <see cref="T:System.Data.DataRow" />.</param>
        <param name="relation">Relacja <see cref="T:System.Data.DataRelation" /> do użycia.</param>
        <summary>Ustawia wiersz nadrzędnego <see cref="T:System.Data.DataRow" /> z określonego elementu nadrzędnego nowy <see cref="T:System.Data.DataRow" /> i <see cref="T:System.Data.DataRelation" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład przedstawia wiersza nadrzędnego podrzędnego określonego wiersza.  
  
 [!code-vb[Classic WebData DataRow.SetParentRow1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetParentRow1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">Jeden z wierszy nie należy do tabeli</exception>
        <exception cref="T:System.ArgumentNullException">Jeden z wierszy jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Relacja nie należy do <see cref="T:System.Data.DataRelationCollection" /> z <see cref="T:System.Data.DataSet" /> obiektu.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Podrzędne dla relacji <see cref="T:System.Data.DataTable" /> nie jest ten wiersz należy do tabeli.</exception>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public System.Data.DataTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataTable Table" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Table" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Table As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataTable ^ Table { System::Data::DataTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Data.DataTable" /> dla której ten wiersz ma schematu.</summary>
        <value>
          <see cref="T:System.Data.DataTable" /> Do której należy ten wiersz.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Data.DataRow> niekoniecznie nie należy do dowolnej tabeli Kolekcja wierszy. Dzieje się tak podczas <xref:System.Data.DataRow> została utworzona, ale nie zostały dodane do <xref:System.Data.DataRowCollection>. Jeśli <xref:System.Data.DataRow.RowState*> zwraca `DataRowState.Detached`, wiersz nie znajduje się w żadnej kolekcji.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Data.DataRow.Table%2A> właściwość zwraca odwołanie do kolekcji kolumn <xref:System.Data.DataTable>.  
  
 [!code-csharp[Classic WebData DataRow.Table Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Table Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Table Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Table Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="T:System.Data.DataTable" />
      </Docs>
    </Member>
  </Members>
</Type>