<Type Name="DataRow" FullName="System.Data.DataRow">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4e96d90b785161a559e4d73c639362b6f60fc58d" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53295750" /></Metadata><TypeSignature Language="C#" Value="public class DataRow" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataRow extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataRow" />
  <TypeSignature Language="VB.NET" Value="Public Class DataRow" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataRow" />
  <TypeSignature Language="F#" Value="type DataRow = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje wiersza danych w <see cref="T:System.Data.DataTable" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataRow> i <xref:System.Data.DataColumn> obiekty są podstawowymi składnikami <xref:System.Data.DataTable>. Użyj <xref:System.Data.DataRow> obiekt i jego właściwości i metody służące do pobierania i oceny; i wstawianie, usuwanie i zaktualizuj wartości w <xref:System.Data.DataTable>. <xref:System.Data.DataRowCollection> Reprezentuje rzeczywisty <xref:System.Data.DataRow> obiekty w <xref:System.Data.DataTable>i <xref:System.Data.DataColumnCollection> zawiera <xref:System.Data.DataColumn> obiekty, które opisują schemat <xref:System.Data.DataTable>. Użyj przeciążonego <xref:System.Data.DataRow.Item%2A> właściwość do zwrotu lub wartość <xref:System.Data.DataColumn>.  
  
 Użyj <xref:System.Data.DataRow.HasVersion%2A> i <xref:System.Data.DataRow.IsNull%2A> właściwości w celu określenia stanu wartość określonego wiersza i <xref:System.Data.DataRow.RowState*> właściwości, aby określić stan wiersza względem jego elementu nadrzędnego <xref:System.Data.DataTable>.  
  
 Aby utworzyć nowy <xref:System.Data.DataRow>, użyj <xref:System.Data.DataTable.NewRow%2A> metody <xref:System.Data.DataTable> obiektu. Po utworzeniu nowego <xref:System.Data.DataRow>, użyj <xref:System.Data.DataRowCollection.Add%2A> metody w celu dodania nowej <xref:System.Data.DataRow> do <xref:System.Data.DataRowCollection>. Na koniec Wywołaj <xref:System.Data.DataRow.AcceptChanges%2A> metody <xref:System.Data.DataTable> obiektu, aby upewnić się, dodanie. Aby uzyskać więcej informacji na temat dodawania danych do <xref:System.Data.DataTable>, zobacz [Dodawanie danych do elementu DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-data-to-a-datatable.md).  
  
 Możesz usunąć <xref:System.Data.DataRow> z <xref:System.Data.DataRowCollection> przez wywołanie metody <xref:System.Data.DataRowCollection.Remove%2A> metody <xref:System.Data.DataRowCollection>, lub przez wywołanie <xref:System.Data.DataRow.Delete%2A> metody <xref:System.Data.DataRow> obiektu. <xref:System.Data.DataRowCollection.Remove%2A> Metoda usuwa wiersz z kolekcji. Z kolei <xref:System.Data.DataRow.Delete%2A> znaczniki <xref:System.Data.DataRow> do usunięcia. Rzeczywiste usuwanie występuje, gdy wywołujesz <xref:System.Data.DataRow.AcceptChanges%2A> metody. Przez wywołanie metody <xref:System.Data.DataRow.Delete%2A>, można programowo sprawdzić wiersze, które są oznaczone do usunięcia przed faktycznie ich usuwania. Aby uzyskać więcej informacji, zobacz [usuwanie elementu DataRow](~/docs/framework/data/adonet/dataset-datatable-dataview/datarow-deletion.md).  
  
   
  
## Examples  
 Poniższy przykład tworzy nowy <xref:System.Data.DataRow> przez wywołanie metody <xref:System.Data.DataTable.NewRow%2A> metody <xref:System.Data.DataTable> obiektu.  
  
 [!code-csharp[Classic WebData DataRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Ten typ jest bezpieczne dla operacji wielowątkowych odczytu. Należy zsynchronizować wszystkie operacje zapisu.</threadsafe>
    <altmember cref="M:System.Data.DataRow.AcceptChanges" />
    <altmember cref="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
    <altmember cref="T:System.Data.DataColumnCollection" />
    <altmember cref="T:System.Data.DataColumn" />
    <altmember cref="T:System.Data.DataRowView" />
    <altmember cref="T:System.Data.DataTable" />
    <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
    <altmember cref="M:System.Data.DataRow.IsNull(System.Int32)" />
    <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
    <altmember cref="M:System.Data.DataTable.NewRow" />
    <altmember cref="T:System.Data.DataRowCollection" />
    <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">Przy użyciu zestawów danych w ADO.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal DataRow (System.Data.DataRowBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.Data.DataRowBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.#ctor(System.Data.DataRowBuilder)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (builder As DataRowBuilder)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; DataRow(System::Data::DataRowBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="new System.Data.DataRow : System.Data.DataRowBuilder -&gt; System.Data.DataRow" Usage="new System.Data.DataRow builder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Data.DataRowBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">Konstruktor</param>
        <summary>Inicjuje nowe wystąpienie klasy DataRow. Tworzy wiersza z konstruktora. Tylko do wewnętrznego użycia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptChanges">
      <MemberSignature Language="C#" Value="public void AcceptChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AcceptChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.AcceptChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub AcceptChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AcceptChanges();" />
      <MemberSignature Language="F#" Value="member this.AcceptChanges : unit -&gt; unit" Usage="dataRow.AcceptChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zatwierdza wszystkie zmiany wprowadzone do tego wiersza od czasu ostatniego <see cref="M:System.Data.DataRow.AcceptChanges" /> została wywołana.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas wywoływania <xref:System.Data.DataRow.AcceptChanges%2A>, <xref:System.Data.DataRow.EndEdit%2A> niejawnie wywoływana jest metoda, aby zakończyć wszystkie zmiany. Jeśli <xref:System.Data.DataRow.RowState*> wiersza zostało dodane lub zmodyfikowane <xref:System.Data.DataRow.RowState*> staje się Unchanged. Jeśli <xref:System.Data.DataRow.RowState*> zostało usunięte, w wierszu zostanie usunięty.  
  
 Zobacz <xref:System.Data.DataRow.BeginEdit%2A> metody, aby uzyskać więcej informacji.  
  
 <xref:System.Data.DataTable> Ma również klasy <xref:System.Data.DataTable.AcceptChanges%2A> metodę, która ma wpływ na zmiany wprowadzone do całej tabeli. Aby uzyskać więcej informacji i przykładowy kod, który demonstruje sposób zaakceptować lub odrzucić zmiany do wierszy danych, zobacz [AcceptChanges i RejectChanges](~/docs/framework/data/adonet/dataset-datatable-dataview/acceptchanges-and-rejectchanges.md).  
  
   
  
## Examples  
 Poniższy przykład najpierw tworzy nową <xref:System.Data.DataTable> jedną kolumnę, a następnie tworzy jeden <xref:System.Data.DataRow>. Jako <xref:System.Data.DataRow> jest tworzone, dodane, zmodyfikowane i usunięte, jego <xref:System.Data.DataRow.RowState*> zostanie wydrukowany.  
  
 [!code-csharp[Classic WebData DataRow.AcceptChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.AcceptChanges Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.AcceptChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.AcceptChanges Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">Przy użyciu zestawów danych w ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberSignature Language="F#" Value="member this.BeginEdit : unit -&gt; unit" Usage="dataRow.BeginEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Uruchamia operację edycji na <see cref="T:System.Data.DataRow" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Data.DataRow.BeginEdit%2A> metodę, aby umieścić <xref:System.Data.DataRow> do trybu edycji. W tym trybie zdarzenia są tymczasowo wstrzymane, umożliwiając użytkownika wprowadzania zmian w więcej niż jeden wiersz bez wyzwalania reguły sprawdzania poprawności. Na przykład jeśli musi upewnij się, że wartość w kolumnie dla łącznej kwoty jest równa wartości debetowej i środków kolumn w wierszu, można umieścić każdy wiersz do trybu edycji w celu wstrzymania weryfikacji wartości wierszy, dopóki użytkownik próbuje zatwierdzić wartości.  
  
 <xref:System.Data.DataRow.BeginEdit%2A> Metoda jest wywoływana niejawnie, gdy użytkownik zmieni wartość kontrolki powiązane z danymi; <xref:System.Data.DataRow.EndEdit%2A> metoda jest wywoływana niejawnie, gdy wywołujesz <xref:System.Data.DataTable.AcceptChanges%2A> metodę <xref:System.Data.DataTable> obiektu. W tym trybie edycji <xref:System.Data.DataRow> przechowuje reprezentacje oryginalne i nowe, proponowane wartości. W związku z tym tak długo, jak <xref:System.Data.DataRow.EndEdit%2A> nie wywołano metody, oryginalnym lub proponowanej wersji można pobrać przez przekazanie albo `DataRowVersion.Original` lub `DataRowVersion.Proposed` dla `version` parametru <xref:System.Data.DataRow.Item%2A> właściwości. Można również anulować wszelkie zmiany na tym etapie, wywołując <xref:System.Data.DataRow.CancelEdit%2A> metody.  
  
 Aby zobaczyć, jeśli wiersz zawiera wartość oryginalnego lub proponowany, należy wywołać <xref:System.Data.DataRow.HasVersion%2A> metody.  
  
> [!NOTE]
>  <xref:System.Data.DataRow.BeginEdit%2A> Tymczasowo wstrzymuje metodę <xref:System.Data.DataTable.RowChanging> zdarzenia, ale `delete` nie obsługuje operacji.  
  
   
  
## Examples  
 Przykład tworzy prostą <xref:System.Data.DataTable> przy użyciu jednego <xref:System.Data.DataColumn> do pięciu <xref:System.Data.DataRow> obiektów, a <xref:System.Data.UniqueConstraint>. A <xref:System.Data.DataTable.RowChanged> program obsługi zdarzeń jest także dodawane do monitorowania podczas zmiany wartości wiersza. Po wywołaniu <xref:System.Data.DataRow.BeginEdit%2A> na istniejące wiersze, ograniczenia i zdarzenia są tymczasowo wyłączone i oryginalnego i proponowane wartości są drukowane. <xref:System.Data.DataRow.BeginEdit%2A> Zostanie ponownie wywołana można ustawić dwa wiersze na tę samą wartość. Gdy <xref:System.Data.DataRow.EndEdit%2A> jest wywoływana, <xref:System.Data.UniqueConstraint> są wymuszane na identyczne wartości.  
  
 [!code-csharp[Classic WebData DataRow.BeginEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.BeginEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">Metoda została wywołana wewnątrz <see cref="E:System.Data.DataTable.RowChanging" /> zdarzeń.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Metoda została wywołana po usunięty wiersz.</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">Przy użyciu zestawów danych w ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : unit -&gt; unit" Usage="dataRow.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Anuluje bieżące edycji w wierszu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zobacz <xref:System.Data.DataRow.BeginEdit%2A> metody, aby uzyskać więcej informacji.  
  
   
  
## Examples  
 Poniższy przykład edytuje wartość jednej kolumny w ostatnim wierszu <xref:System.Windows.Forms.DataGrid> kontroli. W przykładzie użyto <xref:System.Data.DataRow.BeginEdit%2A>, <xref:System.Data.DataRow.EndEdit%2A>, metody służące do edycji wartości w kolumnie i zatwierdź zmianę w wierszu.  
  
 [!code-csharp[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">Metoda została wywołana wewnątrz <see cref="E:System.Data.DataTable.RowChanging" /> zdarzeń.</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">Przy użyciu zestawów danych w ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ClearErrors">
      <MemberSignature Language="C#" Value="public void ClearErrors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearErrors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.ClearErrors" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearErrors ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearErrors();" />
      <MemberSignature Language="F#" Value="member this.ClearErrors : unit -&gt; unit" Usage="dataRow.ClearErrors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Czyści błędy wiersza. Obejmuje to <see cref="P:System.Data.DataRow.RowError" /> i błędy zestawu przy użyciu <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Data.DataRow.SetColumnError%2A> i <xref:System.Data.DataRow.GetColumnError%2A> i zwracać błędy dla poszczególnych kolumn.  
  
 Ustaw <xref:System.Data.DataRow.RowError%2A> właściwość umożliwiająca ustawienie błąd, który ma zastosowanie do całego wiersza.  
  
 Aby określić, czy błędy istnieją dla kolekcji columns, użyj <xref:System.Data.DataRow.HasErrors%2A> metody. W związku z tym, można użyć <xref:System.Data.DataRow.GetColumnsInError%2A> metodę, aby pobrać wszystkie kolumny z błędami.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Data.DataRow.HasErrors%2A> do wyszukiwania błędów. Jeśli wiersz zawiera błędy, <xref:System.Data.DataRow.GetColumnsInError%2A> metoda zwraca tablicę kolumn z błędami, które następnie mogą być rozwiązane. <xref:System.Data.DataRow.ClearErrors%2A> Następnie wywoływana jest metoda, aby wyczyścić wszystkie błędy.  
  
 [!code-csharp[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">Przy użyciu zestawów danych w ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberSignature Language="F#" Value="member this.Delete : unit -&gt; unit" Usage="dataRow.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa <see cref="T:System.Data.DataRow" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Data.DataRow.RowState*> wiersza jest dodawany, <xref:System.Data.DataRow.RowState*> staje się `Detached` i wiersza zostanie usunięty z tabeli po wywołaniu <xref:System.Data.DataRow.AcceptChanges%2A>.  
  
 <xref:System.Data.DataRow.RowState*> Staje się `Deleted` po użyciu <xref:System.Data.DataRow.Delete%2A> metody na istniejącym <xref:System.Data.DataRow>. Pozostaje `Deleted` dopóki nie zostanie wywołana <xref:System.Data.DataRow.AcceptChanges%2A>. W tej chwili <xref:System.Data.DataRow> zostanie usunięty z tabeli.  
  
 <xref:System.Data.DataRow.Delete%2A> nie należy wywoływać w pętli foreach podczas iteracji <xref:System.Data.DataRowCollection> obiektu. <xref:System.Data.DataRow.Delete%2A> modyfikuje stan kolekcji.  
  
 Usunięty wiersz, można odzyskać za pomocą wywołania <xref:System.Data.DataRow.RejectChanges%2A>.  
  
> [!NOTE]
>  <xref:System.Data.DataRow.BeginEdit%2A> Tymczasowo wstrzymuje metodę <xref:System.Data.DataTable.RowChanging> zdarzenia, ale operacja usuwania nie jest.  
  
   
  
## Examples  
 Poniższy przykład tworzy prostą <xref:System.Data.DataTable> z dwiema kolumnami i wierszami dziesięć. Po usunięciu kilka <xref:System.Data.DataRow> elementy z <xref:System.Data.DataRow.Delete%2A> metody, jeden z wierszy jest nieusunięte przez wywołanie <xref:System.Data.DataRow.RejectChanges%2A>.  
  
 [!code-csharp[Classic WebData DataRow.Delete Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Delete Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><see cref="T:System.Data.DataRow" /> Został już usunięty.</exception>
        <altmember cref="T:System.Data.DataRowState" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">Przy użyciu zestawów danych w ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public void EndEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.EndEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndEdit();" />
      <MemberSignature Language="F#" Value="member this.EndEdit : unit -&gt; unit" Usage="dataRow.EndEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Kończy edytowanie pojawiają się w wierszu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli właściwość jest ustawiona, generowany jest wyjątek, gdy wystąpi wyjątek w <xref:System.Data.DataTable.RowChanging> zdarzeń.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Data.DataRow.EndEdit%2A> metodę, aby zakończyć edytowanie <xref:System.Data.DataRow> wartość, jeśli funkcja sprawdzania poprawności zwraca wartość true.  
  
 [!code-csharp[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">Metoda została wywołana wewnątrz <see cref="E:System.Data.DataTable.RowChanging" /> zdarzeń.</exception>
        <exception cref="T:System.Data.ConstraintException">Edycja Przerwano ograniczenie.</exception>
        <exception cref="T:System.Data.ReadOnlyException">Do którego należy wiersz do tabeli, a następnie edytuj próbowała zmienić wartość kolumny tylko do odczytu.</exception>
        <exception cref="T:System.Data.NoNullAllowedException">Edycja próbował umieścić wartości null w kolumnie gdzie <see cref="P:System.Data.DataColumn.AllowDBNull" /> ma wartość false.</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="P:System.Data.DataColumn.AllowDBNull" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">Przy użyciu zestawów danych w ADO.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildRows">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera wiersze podrzędne <see cref="T:System.Data.DataRow" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relation As DataRelation) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : System.Data.DataRelation -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows relation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation"><see cref="T:System.Data.DataRelation" /> Do użycia.</param>
        <summary>Pobiera wiersze to podrzędne <see cref="T:System.Data.DataRow" /> przy użyciu określonego <see cref="T:System.Data.DataRelation" />.</summary>
        <returns>Tablica <see cref="T:System.Data.DataRow" /> obiektów lub tablicę o zerowej długości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTable> Również zawiera zbiór <xref:System.Data.DataRelation> obiekty, które są zwracane przez <xref:System.Data.DataTable.ChildRelations%2A> właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Data.DataRow.GetChildRows%2A> do zwrócenia elementu podrzędnego <xref:System.Data.DataRow> obiektów dla każdego podrzędnego <xref:System.Data.DataRelation> w <xref:System.Data.DataTable>. Wartość każdej kolumny w tym wierszu jest następnie wydrukowany.  
  
 [!code-csharp[Classic WebData DataRow.GetChildRows2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetChildRows2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Relacja i wiersz nie należą do tej samej tabeli.</exception>
        <exception cref="T:System.ArgumentNullException">Relacja jest <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Wiersz nie ma tej wersji danych.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">Przy użyciu zestawów danych w ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relationName As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::String ^ relationName);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : string -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows relationName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName"><see cref="P:System.Data.DataRelation.RelationName" /> z <see cref="T:System.Data.DataRelation" /> do użycia.</param>
        <summary>Pobiera wiersze podrzędne <see cref="T:System.Data.DataRow" /> przy użyciu określonego <see cref="P:System.Data.DataRelation.RelationName" /> z <see cref="T:System.Data.DataRelation" />.</summary>
        <returns>Tablica <see cref="T:System.Data.DataRow" /> obiektów lub tablicę o zerowej długości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTable> Również zawiera zbiór <xref:System.Data.DataRelation> obiekty, które są zwracane przez <xref:System.Data.DataTable.ChildRelations%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Relacja i wiersz nie należą do tej samej tabeli.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relation As DataRelation, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : System.Data.DataRelation * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows (relation, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation"><see cref="T:System.Data.DataRelation" /> Do użycia.</param>
        <param name="version">Jedną z <see cref="T:System.Data.DataRowVersion" /> określanie wersji danych, które można pobrać wartości. Możliwe wartości to <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, i <see langword="Proposed" />.</param>
        <summary>Pobiera wiersze podrzędne <see cref="T:System.Data.DataRow" /> przy użyciu określonego <see cref="T:System.Data.DataRelation" />, i <see cref="T:System.Data.DataRowVersion" />.</summary>
        <returns>Tablica <see cref="T:System.Data.DataRow" /> obiektów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTable> Również zawiera zbiór <xref:System.Data.DataRelation> obiekty, które są zwracane przez <xref:System.Data.DataTable.ChildRelations%2A> właściwości.  
  
 Użyj <xref:System.Data.DataRow.HasVersion%2A> właściwości, aby określić, czy <xref:System.Data.DataRowVersion> mają istnieje.  
  
 Jeśli <xref:System.Data.DataRowVersion.Default> jest określony, zależy od używanej wersji <xref:System.Data.DataRow.RowState*> wiersza, w którym `GetChildRows` jest wywoływana. Jeśli wiersz, w którym `GetChildRows` jest wywoływany ma `RowState` z `Modified`, `New`, lub `Unchanged`, <xref:System.Data.DataRowVersion.Current> wersji wiersza jest używany do pobierania wierszy podrzędnych powiązanych z takimi samymi wartościami w ich bieżącej wersji. Jeśli wiersz, w którym `GetChildRows` jest wywoływany ma `RowState` z `Deleted`, <xref:System.Data.DataRowVersion.Original> wersji wiersza jest używany do pobierania wierszy podrzędnych powiązanych z takimi samymi wartościami w ich oryginalnej wersji.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Data.DataRow.GetChildRows%2A> do zwrócenia elementu podrzędnego <xref:System.Data.DataRow> obiektów dla każdego podrzędnego <xref:System.Data.DataRelation> w <xref:System.Data.DataTable>. Wartość każdej kolumny z określonej wersji, w tym wierszu jest następnie wydrukowany.  
  
 [!code-csharp[Classic WebData DataRow.GetChildRows3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetChildRows3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Relacja i wiersz nie należą do tej samej tabeli.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="relation" /> Jest <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Wiersz nie ma żądanego <see cref="T:System.Data.DataRowVersion" />.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="T:System.Data.DataRowVersion" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">Przy użyciu zestawów danych w ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relationName As String, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : string * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows (relationName, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName"><see cref="P:System.Data.DataRelation.RelationName" /> z <see cref="T:System.Data.DataRelation" /> do użycia.</param>
        <param name="version">Jedną z <see cref="T:System.Data.DataRowVersion" /> określanie wersji danych, które można pobrać wartości. Możliwe wartości to <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, i <see langword="Proposed" />.</param>
        <summary>Pobiera wiersze podrzędne <see cref="T:System.Data.DataRow" /> przy użyciu określonego <see cref="P:System.Data.DataRelation.RelationName" /> z <see cref="T:System.Data.DataRelation" />, i <see cref="T:System.Data.DataRowVersion" />.</summary>
        <returns>Tablica <see cref="T:System.Data.DataRow" /> obiektów lub tablicę o zerowej długości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTable> Również zawiera zbiór <xref:System.Data.DataRelation> obiekty, które są zwracane przez <xref:System.Data.DataTable.ChildRelations%2A> właściwości.  
  
 Użyj <xref:System.Data.DataRow.HasVersion%2A> właściwości, aby określić, czy <xref:System.Data.DataRowVersion> mają istnieje.  
  
 Jeśli <xref:System.Data.DataRowVersion.Default> jest określony, zależy od używanej wersji <xref:System.Data.DataRow.RowState*> wiersza, w którym `GetChildRows` jest wywoływana. Jeśli wiersz, w którym `GetChildRows` jest wywoływany ma `RowState` z `Modified`, `New`, lub `Unchanged`, <xref:System.Data.DataRowVersion.Current> wersji wiersza jest używany do pobierania wierszy podrzędnych powiązanych z takimi samymi wartościami w ich bieżącej wersji. Jeśli wiersz, w którym `GetChildRows` jest wywoływany ma `RowState` z `Deleted`, <xref:System.Data.DataRowVersion.Original> wersji wiersza jest używany do pobierania wierszy podrzędnych powiązanych z takimi samymi wartościami w ich oryginalnej wersji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Relacja i wiersz nie należą do tej samej tabeli.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="relation" /> Jest <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Wiersz nie ma żądanego <see cref="T:System.Data.DataRowVersion" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetColumnError">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera opis błędu dla kolumny.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (column As DataColumn) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="member this.GetColumnError : System.Data.DataColumn -&gt; string" Usage="dataRow.GetColumnError column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">A <see cref="T:System.Data.DataColumn" />.</param>
        <summary>Pobiera opis błędu o określonym parametrze <see cref="T:System.Data.DataColumn" />.</summary>
        <returns>Tekst opisu błędu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Data.DataRow.SetColumnError%2A> metodę, aby ustawić kolumny błędy.  
  
 Aby określić, czy błędy istnieją dla kolekcji columns, użyj <xref:System.Data.DataRow.HasErrors%2A> metody. W związku z tym, można użyć <xref:System.Data.DataRow.GetColumnsInError%2A> metodę, aby pobrać wszystkie kolumny z błędami. Alternatywnie <xref:System.Data.DataTable.GetErrors%2A> metody <xref:System.Data.DataTable> zwraca wszystkie wiersze z błędami.  
  
 Aby wyczyścić wszystkich błędów dla kolekcji columns, należy użyć <xref:System.Data.DataRow.ClearErrors%2A> metody.  
  
   
  
## Examples  
 W poniższym przykładzie ustawiono opis błędu jest <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="M:System.Data.DataTable.GetErrors" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (columnIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(int columnIndex);" />
      <MemberSignature Language="F#" Value="member this.GetColumnError : int -&gt; string" Usage="dataRow.GetColumnError columnIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Liczony od zera indeks kolumny.</param>
        <summary>Pobiera opis błędu dla kolumny, określony przez indeks.</summary>
        <returns>Tekst opisu błędu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Data.DataRow.SetColumnError%2A> metodę, aby ustawić kolumny błędy.  
  
 Aby określić, czy błędy istnieją dla kolekcji columns, użyj <xref:System.Data.DataRow.HasErrors%2A> metody. W związku z tym, można użyć <xref:System.Data.DataRow.GetColumnsInError%2A> metodę, aby pobrać wszystkie kolumny z błędami.  
  
 Aby wyczyścić wszystkich błędów dla kolekcji columns, należy użyć <xref:System.Data.DataRow.ClearErrors%2A> metody.  
  
   
  
## Examples  
 W poniższym przykładzie ustawiono opis błędu jest <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><paramref name="columnIndex" /> Argument jest spoza zakresu.</exception>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (columnName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="member this.GetColumnError : string -&gt; string" Usage="dataRow.GetColumnError columnName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">Nazwa kolumny.</param>
        <summary>Pobiera opis błędu dla kolumny, określonego przez nazwę.</summary>
        <returns>Tekst opisu błędu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Data.DataRow.SetColumnError%2A> metodę, aby ustawić kolumny błędy.  
  
 Aby określić, czy błędy istnieją dla kolekcji columns, użyj <xref:System.Data.DataRow.HasErrors%2A> metody. W związku z tym, można użyć <xref:System.Data.DataRow.GetColumnsInError%2A> metodę, aby pobrać wszystkie kolumny z błędami.  
  
 Aby wyczyścić wszystkich błędów dla kolekcji columns, należy użyć <xref:System.Data.DataRow.ClearErrors%2A> metody.  
  
   
  
## Examples  
 W poniższym przykładzie ustawiono opis błędu jest <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnsInError">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn[] GetColumnsInError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataColumn[] GetColumnsInError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnsInError" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnsInError () As DataColumn()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataColumn ^&gt; ^ GetColumnsInError();" />
      <MemberSignature Language="F#" Value="member this.GetColumnsInError : unit -&gt; System.Data.DataColumn[]" Usage="dataRow.GetColumnsInError " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera tablicę elementów kolumn, które mają błędy.</summary>
        <returns>Tablica <see cref="T:System.Data.DataColumn" /> obiektów, które zawierają błędy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataRow.GetColumnsInError%2A> Pozwala zmniejszyć liczbę <xref:System.Data.DataColumn> obiekty, które muszą zostać przetworzone błędy, zwracając tylko te kolumny, które zawiera błąd. Błędy można ustawić na poszczególnych kolumn z <xref:System.Data.DataRow.SetColumnError%2A> metody. Aby jeszcze bardziej ograniczyć liczbę przetwarzania, sprawdź <xref:System.Data.DataRow.HasErrors%2A> właściwość <xref:System.Data.DataRow> klasy, aby określić, czy <xref:System.Data.DataRow> zawiera błędy przed wywołaniem <xref:System.Data.DataRow.GetColumnsInError%2A>.  
  
 Użyj <xref:System.Data.DataRow.ClearErrors%2A> metodę, aby wyczyścić wszystkie błędy w wierszu. Obejmuje to <xref:System.Data.DataRow.RowError%2A>.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Data.DataRow.HasErrors%2A> do wyszukiwania błędów. Jeśli wiersz zawiera błędy, <xref:System.Data.DataRow.GetColumnsInError%2A> metoda zwraca tablicę kolumn z błędami, które następnie mogą być rozwiązane. <xref:System.Data.DataRow.ClearErrors%2A> Następnie wywoływana jest metoda, aby wyczyścić wszystkie błędy.  
  
 [!code-csharp[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataTable.GetErrors" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetParentRow">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera wiersz nadrzędnego <see cref="T:System.Data.DataRow" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relation As DataRelation) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : System.Data.DataRelation -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow relation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation"><see cref="T:System.Data.DataRelation" /> Do użycia.</param>
        <summary>Pobiera wiersz nadrzędnego <see cref="T:System.Data.DataRow" /> przy użyciu określonego <see cref="T:System.Data.DataRelation" />.</summary>
        <returns>Element nadrzędny <see cref="T:System.Data.DataRow" /> bieżącego wiersza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W <xref:System.Data.DataSet>, zbiór wszystkich nadrzędnego <xref:System.Data.DataRelation> obiektów dla zestawu danych jest zwracany przez <xref:System.Data.DataRow.GetParentRows%2A> metody.  
  
 <xref:System.Data.DataTable> Również zawiera zbiór <xref:System.Data.DataRelation> obiektów zwróconych przez <xref:System.Data.DataTable.ParentRelations%2A> właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Data.DataRow.GetParentRow%2A> do zwrócenia elementu podrzędnego <xref:System.Data.DataRow> obiektów dla każdego podrzędnego <xref:System.Data.DataRelation> w <xref:System.Data.DataTable>. Wartość każdej kolumny w tym wierszu jest następnie wydrukowany.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="relation" /> Nie należy do <see cref="T:System.Data.DataTable" />.  
  
Wiersz jest <see langword="null" />.</exception>
        <exception cref="T:System.Data.DataException">Wiersz podrzędny ma wiele elementów nadrzędnych.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Ten wiersz nie należy do tabeli podrzędnej <see cref="T:System.Data.DataRelation" /> obiektu.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relationName As String) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::String ^ relationName);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : string -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow relationName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName"><see cref="P:System.Data.DataRelation.RelationName" /> z <see cref="T:System.Data.DataRelation" />.</param>
        <summary>Pobiera wiersz nadrzędnego <see cref="T:System.Data.DataRow" /> przy użyciu określonego <see cref="P:System.Data.DataRelation.RelationName" /> z <see cref="T:System.Data.DataRelation" />.</summary>
        <returns>Element nadrzędny <see cref="T:System.Data.DataRow" /> bieżącego wiersza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W <xref:System.Data.DataSet>, zbiór wszystkich nadrzędnego <xref:System.Data.DataRelation> obiektów dla zestawu danych jest zwracany przez <xref:System.Data.DataRow.GetParentRows%2A> metody.  
  
 <xref:System.Data.DataTable> Również zawiera zbiór <xref:System.Data.DataRelation> obiektów zwróconych przez <xref:System.Data.DataTable.ParentRelations%2A> właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Data.DataRow.GetParentRow%2A> drukowania wartości z każdego wiersza nadrzędny każdego <xref:System.Data.DataRow> w <xref:System.Data.DataTable>.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Relacja i wiersz nie należą do tej samej tabeli.</exception>
        <exception cref="T:System.Data.DataException">Wiersz podrzędny ma wiele elementów nadrzędnych.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relation As DataRelation, version As DataRowVersion) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : System.Data.DataRelation * System.Data.DataRowVersion -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow (relation, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation"><see cref="T:System.Data.DataRelation" /> Do użycia.</param>
        <param name="version">Jedną z <see cref="T:System.Data.DataRowVersion" /> określanie wersji danych, które można pobrać wartości.</param>
        <summary>Pobiera wiersz nadrzędnego <see cref="T:System.Data.DataRow" /> przy użyciu określonego <see cref="T:System.Data.DataRelation" />, i <see cref="T:System.Data.DataRowVersion" />.</summary>
        <returns>Element nadrzędny <see cref="T:System.Data.DataRow" /> bieżącego wiersza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W <xref:System.Data.DataSet>, zbiór wszystkich nadrzędnego <xref:System.Data.DataRelation> obiektów dla zestawu danych jest zwracany przez <xref:System.Data.DataRow.GetParentRows%2A> metody.  
  
 <xref:System.Data.DataTable> Również zawiera zbiór <xref:System.Data.DataRelation> obiektów zwróconych przez <xref:System.Data.DataTable.ParentRelations%2A> właściwości.  
  
 Użyj <xref:System.Data.DataRow.HasVersion%2A> właściwości, aby określić, czy <xref:System.Data.DataRowVersion> mają istnieje.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Data.DataRow.GetParentRow%2A> do zwrócenia elementu podrzędnego <xref:System.Data.DataRow> obiektów dla każdego podrzędnego <xref:System.Data.DataRelation> w <xref:System.Data.DataTable>. Wartość każdej kolumny w tym wierszu jest następnie wydrukowany.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wiersz jest <see langword="null" />.  
  
<paramref name="relation" /> Nie należy do tej tabeli nadrzędnej relacji.</exception>
        <exception cref="T:System.Data.DataException">Wiersz podrzędny ma wiele elementów nadrzędnych.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Dla relacji tabeli podrzędnej nie jest tabelą, którego należy wiersz.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Wiersz nie ma tej wersji danych.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="T:System.Data.DataRowVersion" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relationName As String, version As DataRowVersion) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : string * System.Data.DataRowVersion -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow (relationName, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName"><see cref="P:System.Data.DataRelation.RelationName" /> z <see cref="T:System.Data.DataRelation" />.</param>
        <param name="version">Jedną z <see cref="T:System.Data.DataRowVersion" /> wartości.</param>
        <summary>Pobiera wiersz nadrzędnego <see cref="T:System.Data.DataRow" /> przy użyciu określonego <see cref="P:System.Data.DataRelation.RelationName" /> z <see cref="T:System.Data.DataRelation" />, i <see cref="T:System.Data.DataRowVersion" />.</summary>
        <returns>Element nadrzędny <see cref="T:System.Data.DataRow" /> bieżącego wiersza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W <xref:System.Data.DataSet>, zbiór wszystkich nadrzędnego <xref:System.Data.DataRelation> obiektów dla zestawu danych jest zwracany przez <xref:System.Data.DataRow.GetParentRows%2A> metody.  
  
 <xref:System.Data.DataTable> Również zawiera zbiór <xref:System.Data.DataRelation> obiektów zwróconych przez <xref:System.Data.DataTable.ParentRelations%2A> właściwości.  
  
 Użyj <xref:System.Data.DataRow.HasVersion%2A> właściwości, aby określić, czy <xref:System.Data.DataRowVersion> mają istnieje.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Data.DataRow.GetParentRow%2A> drukowania wartości z każdego wiersza nadrzędny każdego <xref:System.Data.DataRow> w <xref:System.Data.DataTable>.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Relacja i wiersz nie należą do tej samej tabeli.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="relation" /> Jest <see langword="null" />.</exception>
        <exception cref="T:System.Data.DataException">Wiersz podrzędny ma wiele elementów nadrzędnych.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Wiersz nie ma żądanego <see cref="T:System.Data.DataRowVersion" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetParentRows">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera element nadrzędny wiersze <see cref="T:System.Data.DataRow" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relation As DataRelation) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : System.Data.DataRelation -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows relation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation"><see cref="T:System.Data.DataRelation" /> Do użycia.</param>
        <summary>Pobiera element nadrzędny wiersze <see cref="T:System.Data.DataRow" /> przy użyciu określonego <see cref="T:System.Data.DataRelation" />.</summary>
        <returns>Tablica <see cref="T:System.Data.DataRow" /> obiektów lub tablicę o zerowej długości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W <xref:System.Data.DataSet>, zbiór wszystkich nadrzędnego <xref:System.Data.DataRelation> obiektów dla zestawu danych jest zwracany przez <xref:System.Data.DataRow.GetParentRows%2A> metody.  
  
 <xref:System.Data.DataTable> Również zawiera zbiór <xref:System.Data.DataRelation> obiektów zwróconych przez <xref:System.Data.DataTable.ParentRelations%2A> właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Data.DataRow.GetParentRows%2A> do zwrócenia elementu podrzędnego <xref:System.Data.DataRow> obiektów dla każdego podrzędnego <xref:System.Data.DataRelation> w <xref:System.Data.DataTable>. Wartość każdej kolumny w tym wierszu jest następnie wydrukowany.  
  
 [!code-vb[Classic WebData DataRow.GetParentRows2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRows2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="T:System.Data.DataRelation" /> Nie należy do tego wiersza <see cref="T:System.Data.DataSet" />.</exception>
        <exception cref="T:System.ArgumentNullException">Wiersz jest <see langword="null" />.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Dla relacji tabeli podrzędnej nie jest tabelą, którego należy wiersz.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do <see cref="T:System.Data.DataTable" />.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relationName As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::String ^ relationName);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : string -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows relationName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName"><see cref="P:System.Data.DataRelation.RelationName" /> z <see cref="T:System.Data.DataRelation" />.</param>
        <summary>Pobiera element nadrzędny wiersze <see cref="T:System.Data.DataRow" /> przy użyciu określonego <see cref="P:System.Data.DataRelation.RelationName" /> z <see cref="T:System.Data.DataRelation" />.</summary>
        <returns>Tablica <see cref="T:System.Data.DataRow" /> obiektów lub tablicę o zerowej długości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W <xref:System.Data.DataSet>, zbiór wszystkich nadrzędnego <xref:System.Data.DataRelation> obiektów dla zestawu danych jest zwracany przez <xref:System.Data.DataRow.GetParentRows%2A> metody.  
  
 <xref:System.Data.DataTable> Również zawiera zbiór <xref:System.Data.DataRelation> obiektów zwróconych przez <xref:System.Data.DataTable.ParentRelations%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Relacja i wiersz nie należą do tej samej tabeli.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relation As DataRelation, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : System.Data.DataRelation * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows (relation, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation"><see cref="T:System.Data.DataRelation" /> Do użycia.</param>
        <param name="version">Jedną z <see cref="T:System.Data.DataRowVersion" /> określanie wersji danych, które można pobrać wartości.</param>
        <summary>Pobiera element nadrzędny wiersze <see cref="T:System.Data.DataRow" /> przy użyciu określonego <see cref="T:System.Data.DataRelation" />, i <see cref="T:System.Data.DataRowVersion" />.</summary>
        <returns>Tablica <see cref="T:System.Data.DataRow" /> obiektów lub tablicę o zerowej długości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W <xref:System.Data.DataSet>, zbiór wszystkich nadrzędnego <xref:System.Data.DataRelation> obiektów dla zestawu danych jest zwracany przez <xref:System.Data.DataRow.GetParentRows%2A> metody.  
  
 <xref:System.Data.DataTable> Również zawiera zbiór <xref:System.Data.DataRelation> obiektów zwróconych przez <xref:System.Data.DataTable.ParentRelations%2A> właściwości.  
  
 Użyj <xref:System.Data.DataRow.HasVersion%2A> właściwości, aby określić, czy <xref:System.Data.DataRowVersion> mają istnieje.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Data.DataRow.GetParentRows%2A> do zwrócenia elementu podrzędnego <xref:System.Data.DataRow> obiektów dla każdego podrzędnego <xref:System.Data.DataRelation> w <xref:System.Data.DataTable>. Wartość każdej kolumny w tym wierszu jest następnie wydrukowany.  
  
 [!code-vb[Classic WebData DataRow.GetParentRows3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRows3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="T:System.Data.DataRelation" /> Nie należy do tego wiersza <see cref="T:System.Data.DataSet" />.</exception>
        <exception cref="T:System.ArgumentNullException">Wiersz jest <see langword="null" />.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Dla relacji tabeli podrzędnej nie jest tabelą, którego należy wiersz.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do <see cref="T:System.Data.DataTable" />.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Wiersz nie ma żądanego <see cref="T:System.Data.DataRowVersion" />.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relationName As String, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : string * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows (relationName, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName"><see cref="P:System.Data.DataRelation.RelationName" /> z <see cref="T:System.Data.DataRelation" />.</param>
        <param name="version">Jedną z <see cref="T:System.Data.DataRowVersion" /> określanie wersji danych, które można pobrać wartości. Możliwe wartości to <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, i <see langword="Proposed" />.</param>
        <summary>Pobiera element nadrzędny wiersze <see cref="T:System.Data.DataRow" /> przy użyciu określonego <see cref="P:System.Data.DataRelation.RelationName" /> z <see cref="T:System.Data.DataRelation" />, i <see cref="T:System.Data.DataRowVersion" />.</summary>
        <returns>Tablica <see cref="T:System.Data.DataRow" /> obiektów lub tablicę o zerowej długości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W <xref:System.Data.DataSet>, zbiór wszystkich nadrzędnego <xref:System.Data.DataRelation> obiektów dla zestawu danych jest zwracany przez <xref:System.Data.DataRow.GetParentRows%2A> metody.  
  
 <xref:System.Data.DataTable> Również zawiera zbiór <xref:System.Data.DataRelation> obiektów zwróconych przez <xref:System.Data.DataTable.ParentRelations%2A> właściwości.  
  
 Użyj <xref:System.Data.DataRow.HasVersion%2A> właściwości, aby określić, czy <xref:System.Data.DataRowVersion> mają istnieje.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Relacja i wiersz nie należą do tej samej tabeli.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="relation" /> Jest <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Wiersz nie ma żądanego <see cref="T:System.Data.DataRowVersion" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasErrors">
      <MemberSignature Language="C#" Value="public bool HasErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasErrors" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.HasErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasErrors { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasErrors : bool" Usage="System.Data.DataRow.HasErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy istnieją błędy w wierszu.</summary>
        <value><see langword="true" /> Jeśli wiersz zawiera błąd; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HasErrors` Zwraca `true` ewentualne <xref:System.Data.DataColumn> obiekt w wierszu zawiera błąd, lub jeśli <xref:System.Data.DataRow.RowError%2A> właściwość <xref:System.Data.DataRow> nie jest ciągiem pustym.  
  
 Jeśli sprawdzanie poprawności danych, można skonfigurować ustawienie błąd według dowolnej kolumny, w wierszu. Takich kolumn, podczas wyświetlania w <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> sterowania, jest oznaczona za pomocą czerwonego wykrzyknika w celu zasygnalizowania do użytkownika, że kolumna jest błąd.  
  
 Użyj <xref:System.Data.DataRow.SetColumnError%2A> można ustawić błąd według dowolnej kolumny.  
  
 Użyj <xref:System.Data.DataRow.GetColumnError%2A> i `GetColumnsInError` metody zwraca kolumn z błędami.  
  
 <xref:System.Data.DataRow.ClearErrors%2A> Metoda czyści wszystkich błędów dla wiersza.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Data.DataRow.HasErrors%2A> do wyszukiwania błędów. Jeśli wiersz zawiera błędy, <xref:System.Data.DataRow.GetColumnsInError%2A> metoda zwraca tablicę kolumn z błędami, które następnie mogą być rozwiązane. <xref:System.Data.DataRow.ClearErrors%2A> Następnie wywoływana jest metoda, aby wyczyścić wszystkie błędy.  
  
 [!code-csharp[Classic WebData DataRow.HasErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.HasErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.HasErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.HasErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasVersion">
      <MemberSignature Language="C#" Value="public bool HasVersion (System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasVersion(valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasVersion (version As DataRowVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasVersion(System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.HasVersion : System.Data.DataRowVersion -&gt; bool" Usage="dataRow.HasVersion version" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="version">Jedną z <see cref="T:System.Data.DataRowVersion" /> wartości, które określa wersję wiersza.</param>
        <summary>Pobiera wartość wskazującą, czy istnieje określonej wersji.</summary>
        <returns><see langword="true" /> Jeśli istnieje wersja w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zobacz <xref:System.Data.DataRow.BeginEdit%2A> metody, aby uzyskać więcej informacji.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Data.DataRow.HasVersion%2A> metodę pozwala ustalić, czy bieżąca wartość kolumny i proponowana wartość są takie same. Jeśli tak, edycji zostało anulowane. W przeciwnym razie <xref:System.Data.DataRow.AcceptChanges%2A> metoda jest wywoływana w celu zakończenia edycji.  
  
 [!code-vb[Classic WebData DataRow.HasVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.HasVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsNull">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy określona kolumna zawiera wartości null.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (column As DataColumn) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="member this.IsNull : System.Data.DataColumn -&gt; bool" Usage="dataRow.IsNull column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">A <see cref="T:System.Data.DataColumn" />.</param>
        <summary>Pobiera wartość wskazującą, czy określony <see cref="T:System.Data.DataColumn" /> zawiera wartość null.</summary>
        <returns><see langword="true" /> Jeśli kolumna zawiera wartości null; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład drukuje każda kolumna każdego wiersza w każdej tabeli <xref:System.Data.DataSet>. Jeśli wiersz jest ustawiona na wartość null, wartość nie jest drukowany.  
  
 [!code-vb[Classic WebData DataRow.IsNull2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (columnIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(int columnIndex);" />
      <MemberSignature Language="F#" Value="member this.IsNull : int -&gt; bool" Usage="dataRow.IsNull columnIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Liczony od zera indeks kolumny.</param>
        <summary>Pobiera wartość wskazującą, czy kolumna pod określonym indeksem zawiera wartość null.</summary>
        <returns><see langword="true" /> Jeśli kolumna zawiera wartości null; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład zmienia wartość kolumny ma wartość null, a następnie używa <xref:System.Data.DataRow.IsNull%2A> metodę pozwala ustalić, czy ma wartość null.  
  
 [!code-vb[Classic WebData DataRow.IsNull Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (columnName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="member this.IsNull : string -&gt; bool" Usage="dataRow.IsNull columnName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">Nazwa kolumny.</param>
        <summary>Pobiera wartość wskazującą, czy nazwany kolumna zawiera wartości null.</summary>
        <returns><see langword="true" /> Jeśli kolumna zawiera wartości null; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład zmienia wartość kolumny ma wartość null, a następnie używa <xref:System.Data.DataRow.IsNull%2A> metodę pozwala ustalić, czy ma wartość null.  
  
 [!code-vb[Classic WebData DataRow.IsNull1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (System.Data.DataColumn column, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(class System.Data.DataColumn column, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (column As DataColumn, version As DataRowVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::Data::DataColumn ^ column, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.IsNull : System.Data.DataColumn * System.Data.DataRowVersion -&gt; bool" Usage="dataRow.IsNull (column, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="column">A <see cref="T:System.Data.DataColumn" />.</param>
        <param name="version">Jedną z <see cref="T:System.Data.DataRowVersion" /> wartości, które określa wersję wiersza. Możliwe wartości to <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, i <see langword="Proposed" />.</param>
        <summary>Pobiera wartość wskazującą, czy określony <see cref="T:System.Data.DataColumn" /> i <see cref="T:System.Data.DataRowVersion" /> zawiera wartość null.</summary>
        <returns><see langword="true" /> Jeśli kolumna zawiera wartości null; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera lub ustawia dane przechowywane w określonej kolumnie.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[System.Data.DataColumn column] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(class System.Data.DataColumn)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(column As DataColumn) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Data::DataColumn ^] { System::Object ^ get(System::Data::DataColumn ^ column); void set(System::Data::DataColumn ^ column, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(System.Data.DataColumn) : obj with get, set" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">Element <see cref="T:System.Data.DataColumn" /> zawierający dane.</param>
        <summary>Pobiera lub ustawia dane przechowywane w określonym <see cref="T:System.Data.DataColumn" />.</summary>
        <value><see cref="T:System.Object" /> Zawierający dane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli właściwość jest ustawiona, generowany jest wyjątek, gdy wystąpi wyjątek w <xref:System.Data.DataTable.ColumnChanging> zdarzeń.  
  
 Jeśli jest to bezpośredniego edytowania, zobacz <xref:System.Data.DataRow.EndEdit%2A> do obsługi wyjątków, które mogą być generowane.  
  
   
  
## Examples  
 W poniższych przykładach pokazano użycie <xref:System.Data.DataRow.Item%2A> właściwość, aby pobrać, a następnie ustaw wartość indeksu określonej kolumny. Pierwszy przykład pobiera wartość w pierwszej kolumnie w dowolnym wierszu, który użytkownik kliknie w <xref:System.Windows.Forms.DataGrid> kontroli. Drugi ustawia wartość przekazywaną jako argument do metody.  
  
 [!code-vb[Classic WebData DataRow.this2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Kolumna nie należy do tej tabeli.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="column" /> Ma wartość null.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Próbowano ustawić wartość wiersz usunięty.</exception>
        <exception cref="T:System.InvalidCastException">Typy danych, wartości i kolumny są niezgodne.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int columnIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(columnIndex As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int columnIndex); void set(int columnIndex, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Liczony od zera indeks kolumny.</param>
        <summary>Pobiera lub ustawia dane przechowywane w kolumnie określonej przez indeks.</summary>
        <value><see cref="T:System.Object" /> Zawierający dane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli właściwość jest ustawiona, generowany jest wyjątek, gdy wystąpi wyjątek w <xref:System.Data.DataTable.ColumnChanging> zdarzeń.  
  
 Jeśli zmiany, zobacz <xref:System.Data.DataRow.EndEdit%2A> do obsługi wyjątków, które mogą być generowane.  
  
   
  
## Examples  
 W poniższych przykładach pokazano użycie <xref:System.Data.DataRow.Item%2A> właściwość, aby pobrać, a następnie ustaw wartość indeksu określonej kolumny. Pierwszy przykład pobiera wartość w pierwszej kolumnie w dowolnym wierszu, który użytkownik kliknie w <xref:System.Windows.Forms.DataGrid> kontroli.  
  
 [!code-csharp[Classic WebData DataRow.this Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Występuje, gdy użytkownik próbuje ustawić wartość wiersz usunięty.</exception>
        <exception cref="T:System.IndexOutOfRangeException"><paramref name="columnIndex" /> Argument jest spoza zakresu.</exception>
        <exception cref="T:System.InvalidCastException">Występuje, gdy ustawisz wartość i nową wartość <see cref="T:System.Type" /> nie odpowiada <see cref="P:System.Data.DataColumn.DataType" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string columnName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(columnName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ columnName); void set(System::String ^ columnName, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">Nazwa kolumny.</param>
        <summary>Pobiera lub ustawia dane przechowywane w kolumnie określonej przez nazwę.</summary>
        <value><see cref="T:System.Object" /> Zawierający dane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli właściwość jest ustawiona, generowany jest wyjątek, gdy wystąpi wyjątek w <xref:System.Data.DataTable.ColumnChanging> zdarzeń.  
  
 Jeśli jest to bezpośredniego edytowania, zobacz <xref:System.Data.DataRow.EndEdit%2A> do obsługi wyjątków, które mogą być generowane.  
  
   
  
## Examples  
 W poniższych przykładach pokazano użycie <xref:System.Data.DataRow.Item%2A> właściwość, aby pobrać, a następnie ustaw wartość indeksu określonej kolumny. Pierwszy przykład pobiera wartość w pierwszej kolumnie w dowolnym wierszu, który użytkownik kliknie w <xref:System.Windows.Forms.DataGrid> kontroli. Drugi ustawia wartość przekazywaną jako argument do metody.  
  
 [!code-csharp[Classic WebData DataRow.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Kolumna określona przez <paramref name="columnName" /> nie można odnaleźć.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Występuje, gdy użytkownik próbuje ustawić wartość wiersz usunięty.</exception>
        <exception cref="T:System.InvalidCastException">Występuje, gdy ustawiasz wartość i jego <see cref="T:System.Type" /> nie odpowiada <see cref="P:System.Data.DataColumn.DataType" />.</exception>
        <exception cref="T:System.Data.NoNullAllowedException">Występuje podczas próby wstawienia wartości null do kolumny gdzie <see cref="P:System.Data.DataColumn.AllowDBNull" /> ustawiono <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[System.Data.DataColumn column, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(class System.Data.DataColumn, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(column As DataColumn, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Data::DataColumn ^, System::Data::DataRowVersion] { System::Object ^ get(System::Data::DataColumn ^ column, System::Data::DataRowVersion version); };" />
      <MemberSignature Language="F#" Value="member this.Item(System.Data.DataColumn * System.Data.DataRowVersion) : obj" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="column">A <see cref="T:System.Data.DataColumn" /> zawierająca informacje o kolumnie.</param>
        <param name="version">Jedną z <see cref="T:System.Data.DataRowVersion" /> wartości, które określa wersję wiersza, który ma. Możliwe wartości to <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, i <see langword="Proposed" />.</param>
        <summary>Pobiera określoną wersję — dane przechowywane w określonym <see cref="T:System.Data.DataColumn" />.</summary>
        <value><see cref="T:System.Object" /> Zawierający dane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `version` Nie należy mylić z <xref:System.Data.DataRow.RowState*> właściwości. `version` Argument opisano stanu danych, który jest zawarty w kolumnie względem oryginalnej wartości w kolumnie.  
  
 Jeśli właściwość jest ustawiona, generowany jest wyjątek, gdy wystąpi wyjątek w <xref:System.Data.DataTable.ColumnChanging> zdarzeń.  
  
 Jeśli jest to bezpośredniego edytowania, zobacz <xref:System.Data.DataRow.EndEdit%2A> do obsługi wyjątków, które mogą być generowane.  
  
   
  
## Examples  
 Poniższy przykład pobiera bieżącą wartość kliknięto komórkę w <xref:System.Windows.Forms.DataGrid> kontroli.  
  
 [!code-csharp[Classic WebData DataRow.this5 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this5 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this5 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Kolumna nie należy do tabeli.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="column" /> Argument zawiera wartość null.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Wiersz nie ma tej wersji danych.</exception>
        <altmember cref="T:System.Data.DataRowVersion" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int columnIndex, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(columnIndex As Integer, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int, System::Data::DataRowVersion] { System::Object ^ get(int columnIndex, System::Data::DataRowVersion version); };" />
      <MemberSignature Language="F#" Value="member this.Item(int * System.Data.DataRowVersion) : obj" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Liczony od zera indeks kolumny.</param>
        <param name="version">Jedną z <see cref="T:System.Data.DataRowVersion" /> wartości, które określa wersję wiersza, który ma. Możliwe wartości to <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, i <see langword="Proposed" />.</param>
        <summary>Pobiera dane przechowywane w kolumnie określonej przez indeks i wersji danych do pobrania.</summary>
        <value><see cref="T:System.Object" /> Zawierający dane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz tworzyć lub zaktualizuj wiersz po wywołaniu metody <xref:System.Data.DataRow.BeginEdit%2A> metoda; podobnie <xref:System.Data.DataRow.EndEdit%2A> można wywołać metody, aby zatwierdzić edycji. Po wywołaniu metody <xref:System.Data.DataRow.EndEdit%2A> metody i przed wywołaniem <xref:System.Data.DataRow.AcceptChanges%2A> proponowane wewnętrzne reprezentacje oryginału i nowe metody, wartości są przechowywane. W związku z tym dopóki nie zostanie wywołana <xref:System.Data.DataRow.AcceptChanges%2A>, możesz użyć `version` argumentu, aby określić, którą wersję wartości w kolumnie, należy albo `DataRowVersion.Original` lub `DataRowVersion.Proposed`. Jednakże, niezwłocznie po wywołaniu <xref:System.Data.DataRow.AcceptChanges%2A> metody przywraca wersję kolumny `DataRowVersion.Original`. W przypadku nowego wiersza, można również przekazać `DataRowVersion.Default` dla parametru, aby pobrać wartość domyślna w kolumnie. Podczas przekazywania `DataRowVersion.Current`, właściwość ta zwraca bieżącą wartość, niezależnie od jej wersji może być.  
  
> [!NOTE]
>  <xref:System.Data.DataRow.BeginEdit%2A> Metoda jest wywoływana niejawnie, gdy możesz zmienić wartość kontrolki powiązania danych lub <xref:System.Data.DataRow> obiekt jest dodawany do <xref:System.Data.DataRowCollection>; <xref:System.Data.DataRow.EndEdit%2A> metoda jest wywoływana niejawnie, gdy wywołujesz następujących metod: <xref:System.Data.DataRow.AcceptChanges%2A> Metoda <xref:System.Data.DataRow> obiektu, <xref:System.Data.DataTable.AcceptChanges%2A> metody <xref:System.Data.DataTable> obiektu lub <xref:System.Data.DataRow.CancelEdit%2A> metody.  
  
 Z drugiej strony <xref:System.Data.DataRowVersion> wyliczenie `Current` zwraca informacje o wersji danych po wykonaniu <xref:System.Data.DataRow.EndEdit%2A> została wywołana metoda.  
  
 `version` Argumentu nie należy mylić z <xref:System.Data.DataRow.RowState*> właściwości. `version` Argument opisano stanu danych, który jest zawarty w kolumnie względem oryginalnej wartości w kolumnie. <xref:System.Data.DataRow.RowState*> Właściwość opisuje stan całego wiersza względem jego elementu nadrzędnego <xref:System.Data.DataTable>.  
  
 Jeśli właściwość jest ustawiona, generowany jest wyjątek, gdy wystąpi wyjątek w <xref:System.Data.DataTable.ColumnChanging> zdarzeń.  
  
 Jeśli jest to bezpośredniego edytowania, zobacz <xref:System.Data.DataRow.EndEdit%2A> do obsługi wyjątków, które mogą być generowane.  
  
   
  
## Examples  
 Poniższy przykład pobiera bieżące wartości kolumny za pomocą <xref:System.Data.DataRow.Item%2A> właściwość <xref:System.Data.DataRow> obiektu.  
  
 [!code-vb[Classic WebData DataRow.this3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><paramref name="columnIndex" /> Argument jest spoza zakresu.</exception>
        <exception cref="T:System.InvalidCastException">Typy danych, wartości i kolumny są niezgodne.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Wiersz nie ma tej wersji danych.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Próbowano ustawić wartość wiersz usunięty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string columnName, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(columnName As String, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^, System::Data::DataRowVersion] { System::Object ^ get(System::String ^ columnName, System::Data::DataRowVersion version); };" />
      <MemberSignature Language="F#" Value="member this.Item(string * System.Data.DataRowVersion) : obj" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="columnName">Nazwa kolumny.</param>
        <param name="version">Jedną z <see cref="T:System.Data.DataRowVersion" /> wartości, które określa wersję wiersza, który ma. Możliwe wartości to <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, i <see langword="Proposed" />.</param>
        <summary>Pobiera określoną wersję — dane przechowywane w kolumnie o nazwie.</summary>
        <value><see cref="T:System.Object" /> Zawierający dane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wersja nie należy mylić z <xref:System.Data.DataRow.RowState*> właściwości. `version` Argument opisano stanu danych, który jest zawarty w kolumnie względem oryginalnej wartości w kolumnie. <xref:System.Data.DataRow.RowState*> Właściwość opisuje stan całego wiersza względem jego elementu nadrzędnego <xref:System.Data.DataTable>.  
  
 Jeśli właściwość jest ustawiona, generowany jest wyjątek, gdy wystąpi wyjątek w <xref:System.Data.DataTable.ColumnChanging> zdarzeń.  
  
 Jeśli jest to bezpośredniego edytowania, zobacz <xref:System.Data.DataRow.EndEdit%2A> do obsługi wyjątków, które mogą być generowane.  
  
   
  
## Examples  
 Poniższy przykład pobiera bieżącą wersję dane w komórce kliknięto <xref:System.Windows.Forms.DataGrid> kontroli.  
  
 [!code-csharp[Classic WebData DataRow.this4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Kolumna określona przez <paramref name="columnName" /> nie można odnaleźć.</exception>
        <exception cref="T:System.InvalidCastException">Typy danych, wartości i kolumny są niezgodne.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Wiersz nie ma tej wersji danych.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Wiersz został usunięty.</exception>
        <altmember cref="T:System.Data.DataRowVersion" />
      </Docs>
    </Member>
    <Member MemberName="ItemArray">
      <MemberSignature Language="C#" Value="public object[] ItemArray { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object[] ItemArray" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.ItemArray" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemArray As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Object ^&gt; ^ ItemArray { cli::array &lt;System::Object ^&gt; ^ get(); void set(cli::array &lt;System::Object ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemArray : obj[] with get, set" Usage="System.Data.DataRow.ItemArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wszystkie wartości dla tego wiersza przez tablicę.</summary>
        <value>Tablica typu <see cref="T:System.Object" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Używasz tej właściwości można ustawiać ani pobierać wartości dla tego wiersza przez tablicę. Jeśli używasz tej właściwości można ustawić wartości tablicy musi mieć taki sam rozmiar i kolejność jako kolekcja kolumn. Przekazywanie `null` w <xref:System.Data.DataRow.ItemArray%2A> wskazuje, że podano żadnej wartości.  
  
 Użytkownicy mogą generować wyjątki w <xref:System.Data.DataTable.ColumnChanging> zdarzeń lub <xref:System.Data.DataTable.RowChanging> zdarzeń.  
  
   
  
## Examples  
 W poniższych przykładach pokazano, jak pobieranie i ustawianie wartości przy użyciu <xref:System.Data.DataRow.ItemArray%2A> właściwości.  
  
 [!code-csharp[Classic WebData DataRow.ItemArray Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ItemArray Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ItemArray Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ItemArray Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Tablica jest większa niż liczba kolumn w tabeli.</exception>
        <exception cref="T:System.InvalidCastException">Wartość w tablicy nie odpowiada jego <see cref="P:System.Data.DataColumn.DataType" /> w jego odpowiednie <see cref="T:System.Data.DataColumn" />.</exception>
        <exception cref="T:System.Data.ConstraintException">Edytuj Przerwano ograniczenie.</exception>
        <exception cref="T:System.Data.ReadOnlyException">Edytuj próbowano zmienić wartość kolumny tylko do odczytu.</exception>
        <exception cref="T:System.Data.NoNullAllowedException">Edytuj próbował Umieść wartość null w kolumnie gdzie <see cref="P:System.Data.DataColumn.AllowDBNull" /> z <see cref="T:System.Data.DataColumn" /> obiekt jest <see langword="false" />.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Wiersz został usunięty.</exception>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="T:System.Data.DataColumn" />
      </Docs>
    </Member>
    <Member MemberName="RejectChanges">
      <MemberSignature Language="C#" Value="public void RejectChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RejectChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.RejectChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub RejectChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RejectChanges();" />
      <MemberSignature Language="F#" Value="member this.RejectChanges : unit -&gt; unit" Usage="dataRow.RejectChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Odrzuca wszystkie zmiany wprowadzone do wiersza, ponieważ <see cref="M:System.Data.DataRow.AcceptChanges" /> ostatnio została wywołana.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy wywołujesz <xref:System.Data.DataRow.RejectChanges%2A> metody <xref:System.Data.DataRow.CancelEdit%2A> wywoływana jest metoda niejawnie Anuluj zmiany. Jeśli <xref:System.Data.DataRow.RowState*> został usunięty lub zmodyfikowany, wiersz wraca do swojej poprzedniej wartości, a <xref:System.Data.DataRow.RowState*> staje się bez zmian. Jeśli <xref:System.Data.DataRow.RowState*> zostanie dodany wiersz jest usuwany.  
  
   
  
## Examples  
 Poniższy przykład tworzy prostą <xref:System.Data.DataTable> z 2 kolumnami i wierszami 10. Po kilku <xref:System.Data.DataRow> elementy są usuwane z <xref:System.Data.DataRow.Delete%2A> metody, jeden z wierszy jest nieusunięte przez wywołanie <xref:System.Data.DataRow.RejectChanges%2A>.  
  
 [!code-csharp[Classic WebData DataRow.Delete Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Delete Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.IsNull(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RowError">
      <MemberSignature Language="C#" Value="public string RowError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RowError" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.RowError" />
      <MemberSignature Language="VB.NET" Value="Public Property RowError As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RowError { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RowError : string with get, set" Usage="System.Data.DataRow.RowError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia opis błędu niestandardowego na podstawie wiersza.</summary>
        <value>Tekst opisujący błąd.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Używa <xref:System.Data.DataRow.HasErrors%2A> właściwość, aby najpierw ustalić, czy <xref:System.Data.DataRow> zawiera błędy.  
  
   
  
## Examples  
 W poniższym przykładzie ustawiono tekst błędu dziesięć wierszy wyświetlanych w tabeli <xref:System.Windows.Forms.DataGrid> kontroli.  
  
 [!code-csharp[Classic WebData DataRow.RowError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.RowError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.RowError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.RowError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
        <altmember cref="P:System.Data.DataSet.HasErrors" />
      </Docs>
    </Member>
    <Member MemberName="RowState">
      <MemberSignature Language="C#" Value="public System.Data.DataRowState RowState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowState RowState" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.RowState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowState As DataRowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRowState RowState { System::Data::DataRowState get(); };" />
      <MemberSignature Language="F#" Value="member this.RowState : System.Data.DataRowState" Usage="System.Data.DataRow.RowState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera stan bieżącego wiersza w odniesieniu do jej relacji z <see cref="T:System.Data.DataRowCollection" />.</summary>
        <value>Jedną z <see cref="T:System.Data.DataRowState" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Data.DataRow.RowState*> zależy od dwa czynniki: rodzaj operacji została wykonana w wierszu oraz tego, czy <xref:System.Data.DataRow.AcceptChanges%2A> została wywołana dla <xref:System.Data.DataRow>.  
  
   
  
## Examples  
 Poniższy przykład najpierw tworzy nową <xref:System.Data.DataTable> jedną kolumnę, a następnie tworzy jeden <xref:System.Data.DataRow>. Jako <xref:System.Data.DataRow> jest tworzone, dodane, zmodyfikowane i usunięte, jego <xref:System.Data.DataRow.RowState*> zostanie wydrukowany.  
  
 [!code-csharp[Classic WebData DataRow.RowState Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.RowState Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.RowState Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.RowState Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="T:System.Data.DataRowView" />
        <altmember cref="M:System.Data.DataRow.Delete" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
        <altmember cref="M:System.Data.DataRow.SetAdded" />
        <altmember cref="M:System.Data.DataRow.SetModified" />
      </Docs>
    </Member>
    <Member MemberName="SetAdded">
      <MemberSignature Language="C#" Value="public void SetAdded ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAdded() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetAdded" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAdded ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAdded();" />
      <MemberSignature Language="F#" Value="member this.SetAdded : unit -&gt; unit" Usage="dataRow.SetAdded " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zmiany <see cref="P:System.Data.DataRow.RowState" /> z <see cref="T:System.Data.DataRow" /> do <see langword="Added" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zmiany <xref:System.Data.DataRow.RowState*> z <xref:System.Data.DataRow> do `Added`. Jeśli bieżący wiersz nie znajduje się w jednym `Unchanged` lub `Added` stanu wyniku weryfikacji zgłasza wyjątek <xref:System.InvalidOperationException> z komunikatem, `SetAdded` można wywołać tylko na `DataRow` wystąpienia gdzie `RowState` jest `Unchanged`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetModified" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColumnError">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia opis błędu dla kolumny.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (System.Data.DataColumn column, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(class System.Data.DataColumn column, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (column As DataColumn, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(System::Data::DataColumn ^ column, System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.SetColumnError : System.Data.DataColumn * string -&gt; unit" Usage="dataRow.SetColumnError (column, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column"><see cref="T:System.Data.DataColumn" /> Można ustawić opis błędu.</param>
        <param name="error">Opis błędu.</param>
        <summary>Ustawia opis błędu dla kolumny, określony jako <see cref="T:System.Data.DataColumn" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby zbadać opisów błędów, należy użyć <xref:System.Data.DataRow.GetColumnError%2A> metody.  
  
 Aby określić, czy błędy istnieją dla kolekcji columns, użyj <xref:System.Data.DataRow.HasErrors%2A> właściwości. W związku z tym, można użyć <xref:System.Data.DataRow.GetColumnsInError%2A> metodę, aby pobrać wszystkie kolumny z błędami.  
  
 Jeśli `null` lub pusty ciąg jest przekazywany jako `error` parametru <xref:System.Data.DataRow> zachowuje się tak, jakby błąd nie została ustawiona i <xref:System.Data.DataRow.HasErrors%2A> właściwość zwraca wartość false.  
  
 Aby ustawić opis błędu niestandardowego cały wiersz, użyj <xref:System.Data.DataRow.RowError%2A> właściwości.  
  
 Aby określić, czy błędy istnieją dla kolekcji columns, użyj <xref:System.Data.DataRow.HasErrors%2A> metody.  
  
 Aby wyczyścić wszystkich błędów dla kolekcji columns, należy użyć <xref:System.Data.DataRow.ClearErrors%2A> metody.  
  
   
  
## Examples  
 W poniższym przykładzie ustawiono opis błędu jest <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (int columnIndex, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(int32 columnIndex, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (columnIndex As Integer, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(int columnIndex, System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.SetColumnError : int * string -&gt; unit" Usage="dataRow.SetColumnError (columnIndex, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Liczony od zera indeks kolumny.</param>
        <param name="error">Opis błędu.</param>
        <summary>Ustawia opis błędu dla kolumny, określony przez indeks.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest używana do ustawiania opisy błędów niestandardowych na określone kolumny. Możesz użyć <xref:System.Windows.Forms.ErrorProvider> formantu, aby wyświetlić tekst błędu.  
  
 Aby zbadać opisów błędów, należy użyć <xref:System.Data.DataRow.GetColumnError%2A> metody.  
  
 Aby określić, czy błędy istnieją dla kolekcji columns, użyj <xref:System.Data.DataRow.HasErrors%2A> właściwości. W związku z tym, można użyć <xref:System.Data.DataRow.GetColumnsInError%2A> metodę, aby pobrać wszystkie kolumny z błędami.  
  
 Jeśli `null` lub pusty ciąg jest przekazywany jako `error` parametru <xref:System.Data.DataRow> zachowuje się tak, jakby błąd nie została ustawiona i <xref:System.Data.DataRow.HasErrors%2A> właściwość zwraca wartość false.  
  
 Aby ustawić opis błędu niestandardowego cały wiersz, użyj <xref:System.Data.DataRow.RowError%2A> właściwości.  
  
 Aby wyczyścić wszystkich błędów dla kolekcji columns, należy użyć <xref:System.Data.DataRow.ClearErrors%2A> metody.  
  
 Tekst błędu, który ma zastosowanie do całego wiersza ustawia <xref:System.Data.DataRow.RowError%2A> właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie ustawiono opis błędu jest <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><paramref name="columnIndex" /> Argument jest spoza zakresu</exception>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (string columnName, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(string columnName, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (columnName As String, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(System::String ^ columnName, System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.SetColumnError : string * string -&gt; unit" Usage="dataRow.SetColumnError (columnName, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">Nazwa kolumny.</param>
        <param name="error">Opis błędu.</param>
        <summary>Ustawia opis błędu dla określonego przez nazwę kolumny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa kolumny została ustawiona za pomocą <xref:System.Data.DataColumn.ColumnName%2A> właściwość <xref:System.Data.DataColumn> klasy.  
  
 Aby zbadać opisów błędów, należy użyć <xref:System.Data.DataRow.GetColumnError%2A> metody.  
  
 Aby określić, czy błędy istnieją dla kolekcji columns, użyj <xref:System.Data.DataRow.HasErrors%2A> właściwości. W związku z tym, można użyć <xref:System.Data.DataRow.GetColumnsInError%2A> metodę, aby pobrać wszystkie kolumny z błędami.  
  
 Jeśli `null` lub pusty ciąg jest przekazywany jako `error` parametru <xref:System.Data.DataRow> zachowuje się tak, jakby błąd nie została ustawiona i <xref:System.Data.DataRow.HasErrors%2A> właściwość zwraca wartość false.  
  
 Aby ustawić opis błędu niestandardowego cały wiersz, użyj <xref:System.Data.DataRow.RowError%2A> właściwości.  
  
 Aby określić, czy błędy istnieją dla kolekcji columns, użyj <xref:System.Data.DataRow.HasErrors%2A> metody.  
  
 Aby wyczyścić wszystkich błędów dla kolekcji columns, należy użyć <xref:System.Data.DataRow.ClearErrors%2A> metody.  
  
   
  
## Examples  
 W poniższym przykładzie ustawiono opis błędu jest <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetModified">
      <MemberSignature Language="C#" Value="public void SetModified ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetModified" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetModified ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetModified();" />
      <MemberSignature Language="F#" Value="member this.SetModified : unit -&gt; unit" Usage="dataRow.SetModified " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zmiany <see cref="P:System.Data.DataRow.RowState" /> z <see cref="T:System.Data.DataRow" /> do <see langword="Modified" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zmiany <xref:System.Data.DataRow.RowState*> z <xref:System.Data.DataRow> do `Modified`. Jeśli bieżący wiersz nie znajduje się w jednym `Unchanged` lub `Added` stanu wyniku weryfikacji zgłasza wyjątek <xref:System.InvalidOperationException> z komunikatem, `SetModified` można wywołać tylko na `DataRow` wystąpienia gdzie `RowState` jest `Unchanged`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetAdded" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <Member MemberName="SetNull">
      <MemberSignature Language="C#" Value="protected void SetNull (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNull(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetNull(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNull (column As DataColumn)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNull(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="member this.SetNull : System.Data.DataColumn -&gt; unit" Usage="dataRow.SetNull column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">A <see cref="T:System.Data.DataColumn" />.</param>
        <summary>Ustawia wartość określonego <see cref="T:System.Data.DataColumn" /> ma wartość null.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Data.DataRow.IsNull%2A> metodę, aby określić, czy kolumna zawiera wartości null.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetParentRow">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia wiersz nadrzędnego <see cref="T:System.Data.DataRow" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetParentRow">
      <MemberSignature Language="C#" Value="public void SetParentRow (System.Data.DataRow parentRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParentRow(class System.Data.DataRow parentRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParentRow (parentRow As DataRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParentRow(System::Data::DataRow ^ parentRow);" />
      <MemberSignature Language="F#" Value="member this.SetParentRow : System.Data.DataRow -&gt; unit" Usage="dataRow.SetParentRow parentRow" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentRow" Type="System.Data.DataRow" />
      </Parameters>
      <Docs>
        <param name="parentRow">Nowy element nadrzędny <see cref="T:System.Data.DataRow" />.</param>
        <summary>Ustawia wiersz nadrzędnego <see cref="T:System.Data.DataRow" /> z określonego elementu nadrzędnego nowe <see cref="T:System.Data.DataRow" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetParentRow">
      <MemberSignature Language="C#" Value="public void SetParentRow (System.Data.DataRow parentRow, System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParentRow(class System.Data.DataRow parentRow, class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParentRow (parentRow As DataRow, relation As DataRelation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParentRow(System::Data::DataRow ^ parentRow, System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.SetParentRow : System.Data.DataRow * System.Data.DataRelation -&gt; unit" Usage="dataRow.SetParentRow (parentRow, relation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentRow" Type="System.Data.DataRow" />
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="parentRow">Nowy element nadrzędny <see cref="T:System.Data.DataRow" />.</param>
        <param name="relation">Relacja <see cref="T:System.Data.DataRelation" /> do użycia.</param>
        <summary>Ustawia wiersz nadrzędnego <see cref="T:System.Data.DataRow" /> z określonego elementu nadrzędnego nowe <see cref="T:System.Data.DataRow" /> i <see cref="T:System.Data.DataRelation" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie ustawiono wiersza nadrzędny podrzędny określonego wiersza.  
  
 [!code-vb[Classic WebData DataRow.SetParentRow1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetParentRow1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">Jeden z wierszy nie należy do tabeli</exception>
        <exception cref="T:System.ArgumentNullException">Jeden z wierszy jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Relacja nie należy do <see cref="T:System.Data.DataRelationCollection" /> z <see cref="T:System.Data.DataSet" /> obiektu.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Dla relacji podrzędnej <see cref="T:System.Data.DataTable" /> nie jest tabelą, którego należy ten wiersz.</exception>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public System.Data.DataTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataTable Table" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Table" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Table As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataTable ^ Table { System::Data::DataTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Table : System.Data.DataTable" Usage="System.Data.DataRow.Table" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Data.DataTable" /> dla której ten wiersz ma schemat.</summary>
        <value><see cref="T:System.Data.DataTable" /> Do którego należy ten wiersz.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Data.DataRow> niekoniecznie nie należy do żadnej tabeli Kolekcja wierszy. To zachowanie występuje, gdy <xref:System.Data.DataRow> została utworzona, ale nie zostały dodane do <xref:System.Data.DataRowCollection>. Jeśli <xref:System.Data.DataRow.RowState*> właściwość zwraca `DataRowState.Detached`, wiersz nie znajduje się w żadnej kolekcji.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Data.DataRow.Table%2A> właściwość zwraca odwołanie do kolekcji kolumn <xref:System.Data.DataTable>.  
  
 [!code-csharp[Classic WebData DataRow.Table Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Table Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Table Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Table Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="T:System.Data.DataTable" />
      </Docs>
    </Member>
  </Members>
</Type>