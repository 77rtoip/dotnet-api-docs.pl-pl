<Type Name="DataRow" FullName="System.Data.DataRow">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a17929f3b2171714882317275fb3e250179ff459" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69122648" /></Metadata><TypeSignature Language="C#" Value="public class DataRow" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataRow extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataRow" />
  <TypeSignature Language="VB.NET" Value="Public Class DataRow" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataRow" />
  <TypeSignature Language="F#" Value="type DataRow = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Przedstawia wiersz danych w <see cref="T:System.Data.DataTable" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekty <xref:System.Data.DataRow> i <xref:System.Data.DataColumn> sąpodstawowymi<xref:System.Data.DataTable>składnikami. Użyj obiektu i jego właściwości i metod, aby pobrać i oszacować, a następnie wstawić, usunąć i zaktualizować wartości <xref:System.Data.DataTable>w. <xref:System.Data.DataRow> Reprezentujerzeczywiste<xref:System.Data.DataRow> obiekty w<xref:System.Data.DataTable>i <xref:System.Data.DataTable>zawiera obiekty,któreopisująschemat<xref:System.Data.DataColumn>. <xref:System.Data.DataColumnCollection> <xref:System.Data.DataRowCollection> Użyj przeciążonej <xref:System.Data.DataRow.Item%2A> właściwości do zwrócenia lub ustawienia wartości <xref:System.Data.DataColumn>.  
  
 Użyj właściwości <xref:System.Data.DataRow.IsNull%2A> <xref:System.Data.DataRow.RowState*> i, aby określić stan określonej wartości wiersza i właściwość, aby określić stan wiersza względem jego elementu nadrzędnego <xref:System.Data.DataTable>. <xref:System.Data.DataRow.HasVersion%2A>  
  
 Aby utworzyć nowy <xref:System.Data.DataRow>, <xref:System.Data.DataTable.NewRow%2A> Użyj metody <xref:System.Data.DataTable> obiektu. Po utworzeniu nowego <xref:System.Data.DataRow>elementu <xref:System.Data.DataRowCollection.Add%2A> Użyj metody, aby <xref:System.Data.DataRowCollection>dodać nowy <xref:System.Data.DataRow> do. Na koniec Wywołaj <xref:System.Data.DataRow.AcceptChanges%2A> metodę <xref:System.Data.DataTable> obiektu, aby potwierdzić dodanie. Aby uzyskać więcej informacji na temat dodawania danych <xref:System.Data.DataTable>do, zobacz [Dodawanie danych do elementu DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-data-to-a-datatable.md).  
  
 Można <xref:System.Data.DataRow> usunąć <xref:System.Data.DataRowCollection.Remove%2A> <xref:System.Data.DataRow> z elementu przez<xref:System.Data.DataRowCollection>wywołaniemetody lub przez wywołanie metodyobiektu.<xref:System.Data.DataRow.Delete%2A> <xref:System.Data.DataRowCollection> <xref:System.Data.DataRowCollection.Remove%2A> Metoda usuwa wiersz z kolekcji. W przeciwieństwie <xref:System.Data.DataRow.Delete%2A> <xref:System.Data.DataRow> oznacza do usunięcia. Faktyczne usunięcie odbywa się po wywołaniu <xref:System.Data.DataRow.AcceptChanges%2A> metody. Wywołując <xref:System.Data.DataRow.Delete%2A>, można programowo sprawdzić, które wiersze są oznaczone do usunięcia przed ich faktycznym usunięciem. Aby uzyskać więcej informacji, zobacz [usuwanie elementu DataRow](~/docs/framework/data/adonet/dataset-datatable-dataview/datarow-deletion.md).  
  
   
  
## Examples  
 Poniższy przykład tworzy nowe <xref:System.Data.DataRow> przez <xref:System.Data.DataTable.NewRow%2A> wywołanie metody <xref:System.Data.DataTable> obiektu.  
  
 [!code-csharp[Classic WebData DataRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Ten typ jest bezpieczny dla wielowątkowych operacji odczytu. Należy zsynchronizować wszystkie operacje zapisu.</threadsafe>
    <altmember cref="M:System.Data.DataRow.AcceptChanges" />
    <altmember cref="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
    <altmember cref="T:System.Data.DataColumnCollection" />
    <altmember cref="T:System.Data.DataColumn" />
    <altmember cref="T:System.Data.DataRowView" />
    <altmember cref="T:System.Data.DataTable" />
    <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
    <altmember cref="M:System.Data.DataRow.IsNull(System.Int32)" />
    <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
    <altmember cref="M:System.Data.DataTable.NewRow" />
    <altmember cref="T:System.Data.DataRowCollection" />
    <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">Używanie zestawów danych w ADO.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal DataRow (System.Data.DataRowBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.Data.DataRowBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.#ctor(System.Data.DataRowBuilder)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (builder As DataRowBuilder)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; DataRow(System::Data::DataRowBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="new System.Data.DataRow : System.Data.DataRowBuilder -&gt; System.Data.DataRow" Usage="new System.Data.DataRow builder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Data.DataRowBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">Builder</param>
        <summary>Inicjuje nowe wystąpienie obiektu DataRow. Konstruuje wiersz z konstruktora. Tylko do użytku wewnętrznego.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptChanges">
      <MemberSignature Language="C#" Value="public void AcceptChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AcceptChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.AcceptChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub AcceptChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AcceptChanges();" />
      <MemberSignature Language="F#" Value="member this.AcceptChanges : unit -&gt; unit" Usage="dataRow.AcceptChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zatwierdza wszystkie zmiany wprowadzone w tym wierszu od momentu ostatniego <see cref="M:System.Data.DataRow.AcceptChanges" /> wywołania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas wywoływania <xref:System.Data.DataRow.AcceptChanges%2A> <xref:System.Data.DataRow.EndEdit%2A> Metoda jest wywoływana niejawnie, aby zakończyć wszelkie zmiany. Jeśli wiersz został dodany lub zmodyfikowany, zmieni się na <xref:System.Data.DataRow.RowState*> niezmieniony. <xref:System.Data.DataRow.RowState*> <xref:System.Data.DataRow.RowState*> Jeśli został usunięty, wiersz zostanie usunięty.  
  
 Aby uzyskać <xref:System.Data.DataRow.BeginEdit%2A> więcej informacji, zobacz metodę.  
  
 <xref:System.Data.DataTable> Klasa matakżemetodę,któramawpływnazmiany<xref:System.Data.DataTable.AcceptChanges%2A> wprowadzone w całej tabeli. Aby uzyskać więcej informacji i przykład kodu, który demonstruje sposób akceptowania i odrzucania zmian w poszczególnych wierszach danych, zobacz [AcceptChanges i RejectChanges](~/docs/framework/data/adonet/dataset-datatable-dataview/acceptchanges-and-rejectchanges.md).  
  
   
  
## Examples  
 Poniższy przykład tworzy najpierw nową <xref:System.Data.DataTable> z jedną kolumną, a następnie tworzy pojedynczą. <xref:System.Data.DataRow> Po utworzeniu, dodaniu, zmodyfikowaniu i usunięciu zostanie on <xref:System.Data.DataRow.RowState*> wydrukowany. <xref:System.Data.DataRow>  
  
 [!code-csharp[Classic WebData DataRow.AcceptChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.AcceptChanges Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.AcceptChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.AcceptChanges Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">Używanie zestawów danych w ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberSignature Language="F#" Value="member this.BeginEdit : unit -&gt; unit" Usage="dataRow.BeginEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Uruchamia operację edycji dla <see cref="T:System.Data.DataRow" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Data.DataRow.BeginEdit%2A> , aby <xref:System.Data.DataRow> umieścić w trybie edycji. W tym trybie zdarzenia są tymczasowo zawieszane, dzięki czemu użytkownik może wprowadzić zmiany w więcej niż jednym wierszu bez wyzwalania reguł walidacji. Na przykład, jeśli konieczne jest upewnienie się, że wartość kolumny dla łącznej kwoty jest równa wartościom kolumn Debet i kredyt w wierszu, można umieścić każdy wiersz w trybie edycji, aby zawiesić sprawdzanie poprawności wartości wierszy, dopóki użytkownik nie spróbuje zatwierdzić wartości.  
  
 Metoda jest wywoływana niejawnie, gdy użytkownik zmienia wartość kontrolki powiązanej z danymi <xref:System.Data.DataRow.EndEdit%2A> ; Metoda jest wywoływana <xref:System.Data.DataTable.AcceptChanges%2A> niejawnie po <xref:System.Data.DataTable> wywołaniu metody dla obiektu. <xref:System.Data.DataRow.BeginEdit%2A> W tym trybie <xref:System.Data.DataRow> edycji są przechowywane reprezentacje oryginalnych i nowych proponowanych wartości. W <xref:System.Data.DataRow.EndEdit%2A> związku z tym, o ile Metoda nie została wywołana, można pobrać oryginalną lub proponowaną wersję przez `DataRowVersion.Original` przekazanie `DataRowVersion.Proposed` `version` albo parametru <xref:System.Data.DataRow.Item%2A> właściwości. Możesz również anulować wszelkie zmiany w tym momencie, wywołując <xref:System.Data.DataRow.CancelEdit%2A> metodę.  
  
 Aby sprawdzić, czy wiersz zawiera oryginalną lub proponowaną wartość, wywołaj <xref:System.Data.DataRow.HasVersion%2A> metodę.  
  
> [!NOTE]
>  Metoda tymczasowo zawiesza zdarzenia, ale `delete` operacja nie jest. <xref:System.Data.DataTable.RowChanging> <xref:System.Data.DataRow.BeginEdit%2A>  
  
   
  
## Examples  
 Przykład tworzy prostą <xref:System.Data.DataTable> z jednym <xref:System.Data.DataColumn> i <xref:System.Data.UniqueConstraint>pięcioma <xref:System.Data.DataRow> obiektami i. Procedura <xref:System.Data.DataTable.RowChanged> obsługi zdarzeń jest również dodawana do monitorowania, gdy zmienia się wartość wiersza. Po wywołaniu <xref:System.Data.DataRow.BeginEdit%2A> istniejących wierszy ograniczenie i zdarzenie są tymczasowo wyłączone i zostaną wydrukowane oryginalne i proponowane wartości. Ponownie <xref:System.Data.DataRow.BeginEdit%2A> wywołano, aby ustawić dwa wiersze na tę samą wartość. Gdy <xref:System.Data.DataRow.EndEdit%2A> jest wywoływana <xref:System.Data.UniqueConstraint> , jest wymuszane na identycznych wartościach.  
  
 [!code-csharp[Classic WebData DataRow.BeginEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.BeginEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">Metoda została wywołana wewnątrz <see cref="E:System.Data.DataTable.RowChanging" /> zdarzenia.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Metoda została wywołana po usunięciu wiersza.</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">Używanie zestawów danych w ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : unit -&gt; unit" Usage="dataRow.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Anuluje bieżącą edycję w wierszu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać <xref:System.Data.DataRow.BeginEdit%2A> więcej informacji, zobacz metodę.  
  
   
  
## Examples  
 Poniższy przykład umożliwia edytowanie wartości jednej kolumny w ostatnim wierszu <xref:System.Windows.Forms.DataGrid> formantu. W przykładzie zastosowano <xref:System.Data.DataRow.BeginEdit%2A>metody <xref:System.Data.DataRow.EndEdit%2A>,, aby edytować wartość kolumny i zatwierdzić zmianę w wierszu.  
  
 [!code-csharp[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">Metoda została wywołana wewnątrz <see cref="E:System.Data.DataTable.RowChanging" /> zdarzenia.</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">Używanie zestawów danych w ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ClearErrors">
      <MemberSignature Language="C#" Value="public void ClearErrors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearErrors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.ClearErrors" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearErrors ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearErrors();" />
      <MemberSignature Language="F#" Value="member this.ClearErrors : unit -&gt; unit" Usage="dataRow.ClearErrors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Czyści błędy dla wiersza. Dotyczy <see cref="P:System.Data.DataRow.RowError" /> to również błędów ustawionych przy użyciu <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Używaj <xref:System.Data.DataRow.SetColumnError%2A> i<xref:System.Data.DataRow.GetColumnError%2A> , aby ustawiać i zwracać błędy dla poszczególnych kolumn.  
  
 <xref:System.Data.DataRow.RowError%2A> Ustaw właściwość, aby ustawić błąd, który ma zastosowanie do całego wiersza.  
  
 Aby ustalić, czy istnieją jakieś błędy dla kolekcji kolumn, użyj <xref:System.Data.DataRow.HasErrors%2A> metody. W związku z tym można użyć <xref:System.Data.DataRow.GetColumnsInError%2A> metody, aby pobrać wszystkie kolumny z błędami.  
  
   
  
## Examples  
 Poniższy przykład używa <xref:System.Data.DataRow.HasErrors%2A> do wyszukiwania błędów. Jeśli wiersz zawiera błędy, <xref:System.Data.DataRow.GetColumnsInError%2A> Metoda zwraca tablicę kolumn z błędami, które można następnie rozpoznać. <xref:System.Data.DataRow.ClearErrors%2A> Metoda jest następnie wywoływana w celu wyczyszczenia wszystkich błędów.  
  
 [!code-csharp[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">Używanie zestawów danych w ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberSignature Language="F#" Value="member this.Delete : unit -&gt; unit" Usage="dataRow.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Data.DataRow" />Usuwa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wiersz zostanie dodany <xref:System.Data.DataRow.RowState*> , przyjmie `Detached` i wiersz zostanie usunięty z tabeli podczas wywoływania <xref:System.Data.DataRow.AcceptChanges%2A>. <xref:System.Data.DataRow.RowState*>  
  
 Zmieni się `Deleted` po <xref:System.Data.DataRow>użyciu metodynaistniejącym<xref:System.Data.DataRow.Delete%2A>. <xref:System.Data.DataRow.RowState*> Pozostanie `Deleted` do momentu <xref:System.Data.DataRow.AcceptChanges%2A>wywołania. W tej chwili <xref:System.Data.DataRow> zostanie usunięty z tabeli.  
  
 <xref:System.Data.DataRow.Delete%2A>nie należy wywoływać w pętli Foreach podczas iterowania za pomocą <xref:System.Data.DataRowCollection> obiektu. <xref:System.Data.DataRow.Delete%2A>modyfikuje stan kolekcji.  
  
 Usunięty wiersz może zostać cofnięty przez wywołanie <xref:System.Data.DataRow.RejectChanges%2A>.  
  
> [!NOTE]
>  <xref:System.Data.DataRow.BeginEdit%2A> Metoda tymczasowo<xref:System.Data.DataTable.RowChanging> zawiesza zdarzenia, ale operacja usuwania nie jest.  
  
   
  
## Examples  
 Poniższy przykład tworzy prostą <xref:System.Data.DataTable> z dwiema kolumnami i dziesięciu wierszami. Po usunięciu <xref:System.Data.DataRow> kilku elementów <xref:System.Data.DataRow.Delete%2A> za pomocą metody, jeden z wierszy jest cofany przez wywołanie <xref:System.Data.DataRow.RejectChanges%2A>.  
  
 [!code-csharp[Classic WebData DataRow.Delete Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Delete Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><see cref="T:System.Data.DataRow" /> Został już usunięty.</exception>
        <altmember cref="T:System.Data.DataRowState" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">Używanie zestawów danych w ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public void EndEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.EndEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndEdit();" />
      <MemberSignature Language="F#" Value="member this.EndEdit : unit -&gt; unit" Usage="dataRow.EndEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zamyka edycję w wierszu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas ustawiania właściwości zostanie wygenerowany wyjątek, jeśli wystąpi wyjątek w <xref:System.Data.DataTable.RowChanging> zdarzeniu.  
  
   
  
## Examples  
 W poniższym przykładzie zastosowano <xref:System.Data.DataRow.EndEdit%2A> metodę, aby zakończyć edycję <xref:System.Data.DataRow> wartości, jeśli funkcja walidacji zwróci wartość true.  
  
 [!code-csharp[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">Metoda została wywołana wewnątrz <see cref="E:System.Data.DataTable.RowChanging" /> zdarzenia.</exception>
        <exception cref="T:System.Data.ConstraintException">Edycja przerwała ograniczenie.</exception>
        <exception cref="T:System.Data.ReadOnlyException">Wiersz należy do tabeli, a Edycja próbowała zmienić wartość kolumny tylko do odczytu.</exception>
        <exception cref="T:System.Data.NoNullAllowedException">Edycja próbowała wprowadzić wartość null do kolumny, gdzie <see cref="P:System.Data.DataColumn.AllowDBNull" /> jest false.</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="P:System.Data.DataColumn.AllowDBNull" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">Używanie zestawów danych w ADO.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildRows">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera podrzędne wiersze <see cref="T:System.Data.DataRow" />obiektu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relation As DataRelation) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : System.Data.DataRelation -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows relation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation"><see cref="T:System.Data.DataRelation" /> Do użycia.</param>
        <summary>Pobiera podrzędne wiersze tego <see cref="T:System.Data.DataRow" /> przy użyciu określonego <see cref="T:System.Data.DataRelation" />elementu.</summary>
        <returns>Tablica <see cref="T:System.Data.DataRow" /> obiektów lub tablica o długości zero.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zawiera również kolekcję obiektów, które są zwracane przez Właściwość.<xref:System.Data.DataTable.ChildRelations%2A> <xref:System.Data.DataRelation> <xref:System.Data.DataTable>  
  
   
  
## Examples  
 Poniższy przykład używa <xref:System.Data.DataRow.GetChildRows%2A> do zwracania obiektów podrzędnych <xref:System.Data.DataRow> <xref:System.Data.DataTable>dla każdego elementu podrzędnego <xref:System.Data.DataRelation> w. Następnie drukowana jest wartość każdej kolumny w wierszu.  
  
 [!code-csharp[Classic WebData DataRow.GetChildRows2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetChildRows2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Relacja i wiersz nie należą do tej samej tabeli.</exception>
        <exception cref="T:System.ArgumentNullException">Relacja wynosi <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Wiersz nie ma tej wersji danych.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">Używanie zestawów danych w ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relationName As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::String ^ relationName);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : string -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows relationName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName"><see cref="P:System.Data.DataRelation.RelationName" /> Do użycia<see cref="T:System.Data.DataRelation" /> .</param>
        <summary>Pobiera wiersze podrzędne z <see cref="T:System.Data.DataRow" /> przy użyciu określonego <see cref="P:System.Data.DataRelation.RelationName" /> <see cref="T:System.Data.DataRelation" />elementu.</summary>
        <returns>Tablica <see cref="T:System.Data.DataRow" /> obiektów lub tablica o długości zero.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zawiera również kolekcję obiektów, które są zwracane przez Właściwość.<xref:System.Data.DataTable.ChildRelations%2A> <xref:System.Data.DataRelation> <xref:System.Data.DataTable>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Relacja i wiersz nie należą do tej samej tabeli.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relation As DataRelation, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : System.Data.DataRelation * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows (relation, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation"><see cref="T:System.Data.DataRelation" /> Do użycia.</param>
        <param name="version">Jedna z <see cref="T:System.Data.DataRowVersion" /> wartości określająca wersję danych do pobrania. Możliwe wartości to <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, i <see langword="Proposed" />.</param>
        <summary>Pobiera wiersze <see cref="T:System.Data.DataRow" /> podrzędne przy użyciu określonych <see cref="T:System.Data.DataRelation" />elementów i <see cref="T:System.Data.DataRowVersion" />.</summary>
        <returns>Tablica <see cref="T:System.Data.DataRow" /> obiektów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zawiera również kolekcję obiektów, które są zwracane przez Właściwość.<xref:System.Data.DataTable.ChildRelations%2A> <xref:System.Data.DataRelation> <xref:System.Data.DataTable>  
  
 Użyj właściwości, aby określić <xref:System.Data.DataRowVersion> , czy ma ona istnieć. <xref:System.Data.DataRow.HasVersion%2A>  
  
 Jeśli <xref:System.Data.DataRowVersion.Default> jest określona, używana wersja zależy <xref:System.Data.DataRow.RowState*> od wiersza, w którym `GetChildRows` jest wywoływana. Jeśli wiersz, w którym `GetChildRows` jest wywoływana, `RowState` ma parametr `Modified`z `New`, lub `Unchanged`, <xref:System.Data.DataRowVersion.Current> wersja wiersza jest używana do pobierania powiązanych wierszy podrzędnych o pasujących wartościach w ich bieżących wersjach. Jeśli wiersz `Deleted`, w którym `GetChildRows` jest wywoływana, `RowState` ma wartość, <xref:System.Data.DataRowVersion.Original> wersja wiersza jest używana do pobierania powiązanych wierszy podrzędnych o pasujących wartościach w ich oryginalnych wersjach.  
  
   
  
## Examples  
 Poniższy przykład używa <xref:System.Data.DataRow.GetChildRows%2A> do zwracania obiektów podrzędnych <xref:System.Data.DataRow> <xref:System.Data.DataTable>dla każdego elementu podrzędnego <xref:System.Data.DataRelation> w. Zostanie wydrukowany wartość każdej kolumny z określoną wersją w wierszu.  
  
 [!code-csharp[Classic WebData DataRow.GetChildRows3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetChildRows3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Relacja i wiersz nie należą do tej samej tabeli.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="relation" /> Ma<see langword="null" />wartość.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Wiersz nie ma żądanego żądania <see cref="T:System.Data.DataRowVersion" />.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="T:System.Data.DataRowVersion" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">Używanie zestawów danych w ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relationName As String, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : string * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows (relationName, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName"><see cref="P:System.Data.DataRelation.RelationName" /> Do użycia<see cref="T:System.Data.DataRelation" /> .</param>
        <param name="version">Jedna z <see cref="T:System.Data.DataRowVersion" /> wartości określająca wersję danych do pobrania. Możliwe wartości to <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, i <see langword="Proposed" />.</param>
        <summary><see cref="T:System.Data.DataRow" /> Pobiera wiersze podrzędne z przy użyciu określonych <see cref="P:System.Data.DataRelation.RelationName" /> elementów <see cref="T:System.Data.DataRelation" />i <see cref="T:System.Data.DataRowVersion" />.</summary>
        <returns>Tablica <see cref="T:System.Data.DataRow" /> obiektów lub tablica o długości zero.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zawiera również kolekcję obiektów, które są zwracane przez Właściwość.<xref:System.Data.DataTable.ChildRelations%2A> <xref:System.Data.DataRelation> <xref:System.Data.DataTable>  
  
 Użyj właściwości, aby określić <xref:System.Data.DataRowVersion> , czy ma ona istnieć. <xref:System.Data.DataRow.HasVersion%2A>  
  
 Jeśli <xref:System.Data.DataRowVersion.Default> jest określona, używana wersja zależy <xref:System.Data.DataRow.RowState*> od wiersza, w którym `GetChildRows` jest wywoływana. Jeśli wiersz, w którym `GetChildRows` jest wywoływana, `RowState` ma parametr `Modified`z `New`, lub `Unchanged`, <xref:System.Data.DataRowVersion.Current> wersja wiersza jest używana do pobierania powiązanych wierszy podrzędnych o pasujących wartościach w ich bieżących wersjach. Jeśli wiersz `Deleted`, w którym `GetChildRows` jest wywoływana, `RowState` ma wartość, <xref:System.Data.DataRowVersion.Original> wersja wiersza jest używana do pobierania powiązanych wierszy podrzędnych o pasujących wartościach w ich oryginalnych wersjach.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Relacja i wiersz nie należą do tej samej tabeli.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="relation" /> Ma<see langword="null" />wartość.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Wiersz nie ma żądanego żądania <see cref="T:System.Data.DataRowVersion" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetColumnError">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera opis błędu dla kolumny.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (column As DataColumn) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="member this.GetColumnError : System.Data.DataColumn -&gt; string" Usage="dataRow.GetColumnError column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">A <see cref="T:System.Data.DataColumn" />.</param>
        <summary>Pobiera opis błędu określonego <see cref="T:System.Data.DataColumn" />.</summary>
        <returns>Tekst opisu błędu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Data.DataRow.SetColumnError%2A> , aby ustawić błędy kolumn.  
  
 Aby ustalić, czy istnieją jakieś błędy dla kolekcji kolumn, użyj <xref:System.Data.DataRow.HasErrors%2A> metody. W związku z tym można użyć <xref:System.Data.DataRow.GetColumnsInError%2A> metody, aby pobrać wszystkie kolumny z błędami. <xref:System.Data.DataTable.GetErrors%2A> Alternatywnie Metoda <xref:System.Data.DataTable> zwraca wszystkie wiersze z błędami.  
  
 Aby wyczyścić wszystkie błędy dla kolekcji Columns, użyj <xref:System.Data.DataRow.ClearErrors%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład ustawia opis błędu dla określonego <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="M:System.Data.DataTable.GetErrors" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (columnIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(int columnIndex);" />
      <MemberSignature Language="F#" Value="member this.GetColumnError : int -&gt; string" Usage="dataRow.GetColumnError columnIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Indeks kolumny liczony od zera.</param>
        <summary>Pobiera opis błędu dla kolumny określonej przez indeks.</summary>
        <returns>Tekst opisu błędu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Data.DataRow.SetColumnError%2A> , aby ustawić błędy kolumn.  
  
 Aby ustalić, czy istnieją jakieś błędy dla kolekcji kolumn, użyj <xref:System.Data.DataRow.HasErrors%2A> metody. W związku z tym można użyć <xref:System.Data.DataRow.GetColumnsInError%2A> metody, aby pobrać wszystkie kolumny z błędami.  
  
 Aby wyczyścić wszystkie błędy dla kolekcji Columns, użyj <xref:System.Data.DataRow.ClearErrors%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład ustawia opis błędu dla określonego <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><paramref name="columnIndex" /> Argument jest poza zakresem.</exception>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (columnName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="member this.GetColumnError : string -&gt; string" Usage="dataRow.GetColumnError columnName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">Nazwa kolumny.</param>
        <summary>Pobiera opis błędu dla kolumny określonej przez nazwę.</summary>
        <returns>Tekst opisu błędu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Data.DataRow.SetColumnError%2A> , aby ustawić błędy kolumn.  
  
 Aby ustalić, czy istnieją jakieś błędy dla kolekcji kolumn, użyj <xref:System.Data.DataRow.HasErrors%2A> metody. W związku z tym można użyć <xref:System.Data.DataRow.GetColumnsInError%2A> metody, aby pobrać wszystkie kolumny z błędami.  
  
 Aby wyczyścić wszystkie błędy dla kolekcji Columns, użyj <xref:System.Data.DataRow.ClearErrors%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład ustawia opis błędu dla określonego <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnsInError">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn[] GetColumnsInError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataColumn[] GetColumnsInError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnsInError" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnsInError () As DataColumn()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataColumn ^&gt; ^ GetColumnsInError();" />
      <MemberSignature Language="F#" Value="member this.GetColumnsInError : unit -&gt; System.Data.DataColumn[]" Usage="dataRow.GetColumnsInError " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera tablicę kolumn, które zawierają błędy.</summary>
        <returns>Tablica <see cref="T:System.Data.DataColumn" /> obiektów, które zawierają błędy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataRow.GetColumnsInError%2A> Pozwala zmniejszyć<xref:System.Data.DataColumn> liczbę obiektów, które muszą zostać przetworzone pod kątem błędów, zwracając tylko te kolumny, które mają błąd. Błędy można ustawić na pojedyncze kolumny za pomocą <xref:System.Data.DataRow.SetColumnError%2A> metody. Aby jeszcze bardziej ograniczyć liczbę procesów przetwarzania, należy sprawdzić <xref:System.Data.DataRow.HasErrors%2A> Właściwość <xref:System.Data.DataRow> <xref:System.Data.DataRow> klasy, aby określić, czy występuje błędy przed wywołaniem <xref:System.Data.DataRow.GetColumnsInError%2A>.  
  
 Użyj metody <xref:System.Data.DataRow.ClearErrors%2A> , aby wyczyścić wszystkie błędy w wierszu. Obejmuje <xref:System.Data.DataRow.RowError%2A>to.  
  
   
  
## Examples  
 Poniższy przykład używa <xref:System.Data.DataRow.HasErrors%2A> do wyszukiwania błędów. Jeśli wiersz zawiera błędy, <xref:System.Data.DataRow.GetColumnsInError%2A> Metoda zwraca tablicę kolumn z błędami, które można następnie rozpoznać. <xref:System.Data.DataRow.ClearErrors%2A> Metoda jest następnie wywoływana w celu wyczyszczenia wszystkich błędów.  
  
 [!code-csharp[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataTable.GetErrors" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetParentRow">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera nadrzędny wiersz <see cref="T:System.Data.DataRow" />obiektu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relation As DataRelation) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : System.Data.DataRelation -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow relation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation"><see cref="T:System.Data.DataRelation" /> Do użycia.</param>
        <summary>Pobiera nadrzędny wiersz <see cref="T:System.Data.DataRow" /> obiektu przy użyciu określonego <see cref="T:System.Data.DataRelation" />.</summary>
        <returns>Element nadrzędny <see cref="T:System.Data.DataRow" /> bieżącego wiersza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W, Kolekcja wszystkich obiektów nadrzędnych <xref:System.Data.DataRelation> dla <xref:System.Data.DataRow.GetParentRows%2A> zestawu danych jest zwracana przez metodę. <xref:System.Data.DataSet>  
  
 Zawiera <xref:System.Data.DataTable> również <xref:System.Data.DataRelation> kolekcję obiektówzwracaną<xref:System.Data.DataTable.ParentRelations%2A> przez właściwość.  
  
   
  
## Examples  
 Poniższy przykład używa <xref:System.Data.DataRow.GetParentRow%2A> do zwracania obiektów podrzędnych <xref:System.Data.DataRow> <xref:System.Data.DataTable>dla każdego elementu podrzędnego <xref:System.Data.DataRelation> w. Następnie drukowana jest wartość każdej kolumny w wierszu.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="relation" /> Nie należy <see cref="T:System.Data.DataTable" />do.  
  
—lub—

Wiersz jest <see langword="null" />.</exception>
        <exception cref="T:System.Data.DataException">Wiersz podrzędny ma wiele elementów nadrzędnych.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Ten wiersz nie należy do tabeli <see cref="T:System.Data.DataRelation" /> podrzędnej obiektu.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relationName As String) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::String ^ relationName);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : string -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow relationName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName"><see cref="P:System.Data.DataRelation.RelationName" /> A .<see cref="T:System.Data.DataRelation" /></param>
        <summary>Pobiera nadrzędny wiersz <see cref="T:System.Data.DataRow" /> obiektu przy użyciu określonego <see cref="P:System.Data.DataRelation.RelationName" /> <see cref="T:System.Data.DataRelation" />elementu.</summary>
        <returns>Element nadrzędny <see cref="T:System.Data.DataRow" /> bieżącego wiersza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W, Kolekcja wszystkich obiektów nadrzędnych <xref:System.Data.DataRelation> dla <xref:System.Data.DataRow.GetParentRows%2A> zestawu danych jest zwracana przez metodę. <xref:System.Data.DataSet>  
  
 Zawiera <xref:System.Data.DataTable> również <xref:System.Data.DataRelation> kolekcję obiektówzwracaną<xref:System.Data.DataTable.ParentRelations%2A> przez właściwość.  
  
   
  
## Examples  
 Poniższy przykład używa <xref:System.Data.DataRow.GetParentRow%2A> do drukowania wartości z każdego wiersza nadrzędnego każdego <xref:System.Data.DataRow> w <xref:System.Data.DataTable>.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Relacja i wiersz nie należą do tej samej tabeli.</exception>
        <exception cref="T:System.Data.DataException">Wiersz podrzędny ma wiele elementów nadrzędnych.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relation As DataRelation, version As DataRowVersion) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : System.Data.DataRelation * System.Data.DataRowVersion -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow (relation, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation"><see cref="T:System.Data.DataRelation" /> Do użycia.</param>
        <param name="version">Jedna z <see cref="T:System.Data.DataRowVersion" /> wartości określająca wersję danych do pobrania.</param>
        <summary>Pobiera nadrzędny wiersz obiektu <see cref="T:System.Data.DataRow" /> przy użyciu określonych <see cref="T:System.Data.DataRelation" />elementów i <see cref="T:System.Data.DataRowVersion" />.</summary>
        <returns>Element nadrzędny <see cref="T:System.Data.DataRow" /> bieżącego wiersza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W, Kolekcja wszystkich obiektów nadrzędnych <xref:System.Data.DataRelation> dla <xref:System.Data.DataRow.GetParentRows%2A> zestawu danych jest zwracana przez metodę. <xref:System.Data.DataSet>  
  
 Zawiera <xref:System.Data.DataTable> również <xref:System.Data.DataRelation> kolekcję obiektówzwracaną<xref:System.Data.DataTable.ParentRelations%2A> przez właściwość.  
  
 Użyj właściwości, aby określić <xref:System.Data.DataRowVersion> , czy ma ona istnieć. <xref:System.Data.DataRow.HasVersion%2A>  
  
   
  
## Examples  
 Poniższy przykład używa <xref:System.Data.DataRow.GetParentRow%2A> do zwracania obiektów podrzędnych <xref:System.Data.DataRow> <xref:System.Data.DataTable>dla każdego elementu podrzędnego <xref:System.Data.DataRelation> w. Następnie drukowana jest wartość każdej kolumny w wierszu.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wiersz jest <see langword="null" />.  
  
—lub—

<paramref name="relation" /> Nie należy do relacji nadrzędnych tej tabeli.</exception>
        <exception cref="T:System.Data.DataException">Wiersz podrzędny ma wiele elementów nadrzędnych.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Tabela podrzędna relacji nie jest tabelą, do której należy wiersz.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Wiersz nie ma tej wersji danych.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="T:System.Data.DataRowVersion" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relationName As String, version As DataRowVersion) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : string * System.Data.DataRowVersion -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow (relationName, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName"><see cref="P:System.Data.DataRelation.RelationName" /> A .<see cref="T:System.Data.DataRelation" /></param>
        <param name="version">Jedna z <see cref="T:System.Data.DataRowVersion" /> wartości.</param>
        <summary>Pobiera nadrzędny wiersz <see cref="T:System.Data.DataRow" /> obiektu przy użyciu określonych <see cref="P:System.Data.DataRelation.RelationName" /> elementów <see cref="T:System.Data.DataRelation" />i <see cref="T:System.Data.DataRowVersion" />.</summary>
        <returns>Element nadrzędny <see cref="T:System.Data.DataRow" /> bieżącego wiersza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W, Kolekcja wszystkich obiektów nadrzędnych <xref:System.Data.DataRelation> dla <xref:System.Data.DataRow.GetParentRows%2A> zestawu danych jest zwracana przez metodę. <xref:System.Data.DataSet>  
  
 Zawiera <xref:System.Data.DataTable> również <xref:System.Data.DataRelation> kolekcję obiektówzwracaną<xref:System.Data.DataTable.ParentRelations%2A> przez właściwość.  
  
 Użyj właściwości, aby określić <xref:System.Data.DataRowVersion> , czy ma ona istnieć. <xref:System.Data.DataRow.HasVersion%2A>  
  
   
  
## Examples  
 Poniższy przykład używa <xref:System.Data.DataRow.GetParentRow%2A> do drukowania wartości z każdego wiersza nadrzędnego każdego <xref:System.Data.DataRow> w <xref:System.Data.DataTable>.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Relacja i wiersz nie należą do tej samej tabeli.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="relation" /> Ma<see langword="null" />wartość.</exception>
        <exception cref="T:System.Data.DataException">Wiersz podrzędny ma wiele elementów nadrzędnych.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Wiersz nie ma żądanego żądania <see cref="T:System.Data.DataRowVersion" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetParentRows">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera wiersze <see cref="T:System.Data.DataRow" />nadrzędne obiektu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relation As DataRelation) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : System.Data.DataRelation -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows relation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation"><see cref="T:System.Data.DataRelation" /> Do użycia.</param>
        <summary>Pobiera wiersze <see cref="T:System.Data.DataRow" /> nadrzędne, używając określonego <see cref="T:System.Data.DataRelation" />.</summary>
        <returns>Tablica <see cref="T:System.Data.DataRow" /> obiektów lub tablica o długości zero.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W, Kolekcja wszystkich obiektów nadrzędnych <xref:System.Data.DataRelation> dla <xref:System.Data.DataRow.GetParentRows%2A> zestawu danych jest zwracana przez metodę. <xref:System.Data.DataSet>  
  
 Zawiera <xref:System.Data.DataTable> również <xref:System.Data.DataRelation> kolekcję obiektówzwracaną<xref:System.Data.DataTable.ParentRelations%2A> przez właściwość.  
  
   
  
## Examples  
 Poniższy przykład używa <xref:System.Data.DataRow.GetParentRows%2A> do zwracania obiektów podrzędnych <xref:System.Data.DataRow> <xref:System.Data.DataTable>dla każdego elementu podrzędnego <xref:System.Data.DataRelation> w. Następnie drukowana jest wartość każdej kolumny w wierszu.  
  
 [!code-vb[Classic WebData DataRow.GetParentRows2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRows2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Nie należy do tego <see cref="T:System.Data.DataSet" />wiersza. <see cref="T:System.Data.DataRelation" /></exception>
        <exception cref="T:System.ArgumentNullException">Wiersz jest <see langword="null" />.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Tabela podrzędna relacji nie jest tabelą, do której należy wiersz.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do <see cref="T:System.Data.DataTable" />.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relationName As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::String ^ relationName);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : string -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows relationName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName"><see cref="P:System.Data.DataRelation.RelationName" /> A .<see cref="T:System.Data.DataRelation" /></param>
        <summary>Pobiera wiersze <see cref="T:System.Data.DataRow" /> nadrzędne, używając określonego <see cref="P:System.Data.DataRelation.RelationName" /> <see cref="T:System.Data.DataRelation" />elementu.</summary>
        <returns>Tablica <see cref="T:System.Data.DataRow" /> obiektów lub tablica o długości zero.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W, Kolekcja wszystkich obiektów nadrzędnych <xref:System.Data.DataRelation> dla <xref:System.Data.DataRow.GetParentRows%2A> zestawu danych jest zwracana przez metodę. <xref:System.Data.DataSet>  
  
 Zawiera <xref:System.Data.DataTable> również <xref:System.Data.DataRelation> kolekcję obiektówzwracaną<xref:System.Data.DataTable.ParentRelations%2A> przez właściwość.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Relacja i wiersz nie należą do tej samej tabeli.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relation As DataRelation, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : System.Data.DataRelation * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows (relation, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation"><see cref="T:System.Data.DataRelation" /> Do użycia.</param>
        <param name="version">Jedna z <see cref="T:System.Data.DataRowVersion" /> wartości określająca wersję danych do pobrania.</param>
        <summary>Pobiera wiersze nadrzędne, <see cref="T:System.Data.DataRow" /> używając określonych <see cref="T:System.Data.DataRelation" />elementów i <see cref="T:System.Data.DataRowVersion" />.</summary>
        <returns>Tablica <see cref="T:System.Data.DataRow" /> obiektów lub tablica o długości zero.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W, Kolekcja wszystkich obiektów nadrzędnych <xref:System.Data.DataRelation> dla <xref:System.Data.DataRow.GetParentRows%2A> zestawu danych jest zwracana przez metodę. <xref:System.Data.DataSet>  
  
 Zawiera <xref:System.Data.DataTable> również <xref:System.Data.DataRelation> kolekcję obiektówzwracaną<xref:System.Data.DataTable.ParentRelations%2A> przez właściwość.  
  
 Użyj właściwości, aby określić <xref:System.Data.DataRowVersion> , czy ma ona istnieć. <xref:System.Data.DataRow.HasVersion%2A>  
  
   
  
## Examples  
 Poniższy przykład używa <xref:System.Data.DataRow.GetParentRows%2A> do zwracania obiektów podrzędnych <xref:System.Data.DataRow> <xref:System.Data.DataTable>dla każdego elementu podrzędnego <xref:System.Data.DataRelation> w. Następnie drukowana jest wartość każdej kolumny w wierszu.  
  
 [!code-vb[Classic WebData DataRow.GetParentRows3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRows3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Nie należy do tego <see cref="T:System.Data.DataSet" />wiersza. <see cref="T:System.Data.DataRelation" /></exception>
        <exception cref="T:System.ArgumentNullException">Wiersz jest <see langword="null" />.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Tabela podrzędna relacji nie jest tabelą, do której należy wiersz.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do <see cref="T:System.Data.DataTable" />.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Wiersz nie ma żądanego żądania <see cref="T:System.Data.DataRowVersion" />.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relationName As String, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : string * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows (relationName, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName"><see cref="P:System.Data.DataRelation.RelationName" /> A .<see cref="T:System.Data.DataRelation" /></param>
        <param name="version">Jedna z <see cref="T:System.Data.DataRowVersion" /> wartości określająca wersję danych do pobrania. Możliwe wartości to <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, i <see langword="Proposed" />.</param>
        <summary>Pobiera wiersze <see cref="T:System.Data.DataRow" /> nadrzędne <see cref="T:System.Data.DataRelation" />, używając określonych <see cref="P:System.Data.DataRelation.RelationName" /> elementów i <see cref="T:System.Data.DataRowVersion" />.</summary>
        <returns>Tablica <see cref="T:System.Data.DataRow" /> obiektów lub tablica o długości zero.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W, Kolekcja wszystkich obiektów nadrzędnych <xref:System.Data.DataRelation> dla <xref:System.Data.DataRow.GetParentRows%2A> zestawu danych jest zwracana przez metodę. <xref:System.Data.DataSet>  
  
 Zawiera <xref:System.Data.DataTable> również <xref:System.Data.DataRelation> kolekcję obiektówzwracaną<xref:System.Data.DataTable.ParentRelations%2A> przez właściwość.  
  
 Użyj właściwości, aby określić <xref:System.Data.DataRowVersion> , czy ma ona istnieć. <xref:System.Data.DataRow.HasVersion%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Relacja i wiersz nie należą do tej samej tabeli.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="relation" /> Ma<see langword="null" />wartość.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Wiersz nie ma żądanego żądania <see cref="T:System.Data.DataRowVersion" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasErrors">
      <MemberSignature Language="C#" Value="public bool HasErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasErrors" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.HasErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasErrors { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasErrors : bool" Usage="System.Data.DataRow.HasErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy w wierszu występują błędy.</summary>
        <value><see langword="true" />Jeśli wiersz zawiera błąd; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HasErrors`zwraca `true` Jeśli którykolwiek <xref:System.Data.DataColumn> obiekt w wierszu zawiera <xref:System.Data.DataRow.RowError%2A> błąd lub <xref:System.Data.DataRow> Jeśli właściwość nie jest pustym ciągiem.  
  
 Podczas sprawdzania poprawności danych można ustawić błąd dla dowolnej kolumny w wierszu. Kolumna, która jest wyświetlana w <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> kontrolce, jest oznaczona czerwonym wykrzyknikiem, aby sygnalizować użytkownikowi, że kolumna jest błędem.  
  
 Użyj <xref:System.Data.DataRow.SetColumnError%2A> , aby ustawić błąd w dowolnej kolumnie.  
  
 Użyj metod `GetColumnsInError` i, aby zwracać kolumny z błędami. <xref:System.Data.DataRow.GetColumnError%2A>  
  
 <xref:System.Data.DataRow.ClearErrors%2A> Metoda czyści wszystkie błędy dla wiersza.  
  
   
  
## Examples  
 Poniższy przykład używa <xref:System.Data.DataRow.HasErrors%2A> do wyszukiwania błędów. Jeśli wiersz zawiera błędy, <xref:System.Data.DataRow.GetColumnsInError%2A> Metoda zwraca tablicę kolumn z błędami, które można następnie rozpoznać. <xref:System.Data.DataRow.ClearErrors%2A> Metoda jest następnie wywoływana w celu wyczyszczenia wszystkich błędów.  
  
 [!code-csharp[Classic WebData DataRow.HasErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.HasErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.HasErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.HasErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasVersion">
      <MemberSignature Language="C#" Value="public bool HasVersion (System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasVersion(valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasVersion (version As DataRowVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasVersion(System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.HasVersion : System.Data.DataRowVersion -&gt; bool" Usage="dataRow.HasVersion version" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="version">Jedna z <see cref="T:System.Data.DataRowVersion" /> wartości, która określa wersję wiersza.</param>
        <summary>Pobiera wartość wskazującą, czy istnieje określona wersja.</summary>
        <returns><see langword="true" />Jeśli wersja istnieje; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać <xref:System.Data.DataRow.BeginEdit%2A> więcej informacji, zobacz metodę.  
  
   
  
## Examples  
 W poniższym przykładzie zastosowano <xref:System.Data.DataRow.HasVersion%2A> metodę, aby określić, czy bieżąca wartość kolumny i proponowana wartość są takie same. Jeśli tak, Edycja zostanie anulowana. W przeciwnym razie <xref:System.Data.DataRow.AcceptChanges%2A> Metoda jest wywoływana, aby zakończyć edycję.  
  
 [!code-vb[Classic WebData DataRow.HasVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.HasVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsNull">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy określona kolumna zawiera wartość null.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (column As DataColumn) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="member this.IsNull : System.Data.DataColumn -&gt; bool" Usage="dataRow.IsNull column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">A <see cref="T:System.Data.DataColumn" />.</param>
        <summary>Pobiera wartość wskazującą, czy określona <see cref="T:System.Data.DataColumn" /> zawiera wartość null.</summary>
        <returns><see langword="true" />Jeśli kolumna zawiera wartość null; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład drukuje każdą kolumnę każdego wiersza w każdej tabeli a <xref:System.Data.DataSet>. Jeśli wiersz ma ustawioną wartość null, wartość nie jest drukowana.  
  
 [!code-vb[Classic WebData DataRow.IsNull2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="column" />jest <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (columnIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(int columnIndex);" />
      <MemberSignature Language="F#" Value="member this.IsNull : int -&gt; bool" Usage="dataRow.IsNull columnIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Indeks kolumny liczony od zera.</param>
        <summary>Pobiera wartość wskazującą, czy kolumna o określonym indeksie zawiera wartość null.</summary>
        <returns><see langword="true" />Jeśli kolumna zawiera wartość null; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład zmienia wartość kolumny na wartość null, a następnie używa <xref:System.Data.DataRow.IsNull%2A> metody, aby określić, czy wartość jest równa null.  
  
 [!code-vb[Classic WebData DataRow.IsNull Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">Żadna kolumna nie odpowiada indeksowi określonemu przez <paramref name="columnIndex" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (columnName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="member this.IsNull : string -&gt; bool" Usage="dataRow.IsNull columnName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">Nazwa kolumny.</param>
        <summary>Pobiera wartość wskazującą, czy nazwana kolumna zawiera wartość null.</summary>
        <returns><see langword="true" />Jeśli kolumna zawiera wartość null; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład zmienia wartość kolumny na wartość null, a następnie używa <xref:System.Data.DataRow.IsNull%2A> metody, aby określić, czy wartość jest równa null.  
  
 [!code-vb[Classic WebData DataRow.IsNull1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Nie można odnaleźć kolumny <paramref name="columnName" /> określonej przez.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="columnName" />jest <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (System.Data.DataColumn column, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(class System.Data.DataColumn column, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (column As DataColumn, version As DataRowVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::Data::DataColumn ^ column, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.IsNull : System.Data.DataColumn * System.Data.DataRowVersion -&gt; bool" Usage="dataRow.IsNull (column, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="column">A <see cref="T:System.Data.DataColumn" />.</param>
        <param name="version">Jedna z <see cref="T:System.Data.DataRowVersion" /> wartości, która określa wersję wiersza. Możliwe wartości to <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, i <see langword="Proposed" />.</param>
        <summary>Pobiera wartość wskazującą, czy określony <see cref="T:System.Data.DataColumn" /> i <see cref="T:System.Data.DataRowVersion" /> zawiera wartość null.</summary>
        <returns><see langword="true" />Jeśli kolumna zawiera wartość null; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="column" />jest <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Wiersz nie ma żądanego żądania <paramref name="version" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera lub ustawia dane przechowywane w określonej kolumnie.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[System.Data.DataColumn column] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(class System.Data.DataColumn)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(column As DataColumn) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Data::DataColumn ^] { System::Object ^ get(System::Data::DataColumn ^ column); void set(System::Data::DataColumn ^ column, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(System.Data.DataColumn) : obj with get, set" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">A <see cref="T:System.Data.DataColumn" /> , który zawiera dane.</param>
        <summary>Pobiera lub ustawia dane przechowywane w określonym <see cref="T:System.Data.DataColumn" />elemencie.</summary>
        <value><see cref="T:System.Object" /> Zawierający dane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas ustawiania właściwości zostanie wygenerowany wyjątek, jeśli wystąpi wyjątek w <xref:System.Data.DataTable.ColumnChanging> zdarzeniu.  
  
 Jeśli jest to Natychmiastowa edycja, zobacz <xref:System.Data.DataRow.EndEdit%2A> sekcję dotyczącą wyjątków, które mogą być generowane.  
  
   
  
## Examples  
 W poniższych przykładach pokazano użycie <xref:System.Data.DataRow.Item%2A> właściwości w celu uzyskania i ustawienia wartości określonego indeksu kolumn. Pierwszy przykład pobiera wartość pierwszej kolumny w dowolnym wierszu, który użytkownik klika <xref:System.Windows.Forms.DataGrid> kontrolkę. Drugi ustawia wartość przekazaną jako argument do metody.  
  
 [!code-vb[Classic WebData DataRow.this2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Kolumna nie należy do tej tabeli.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="column" /> Ma wartość null.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Podjęto próbę ustawienia wartości w usuniętym wierszu.</exception>
        <exception cref="T:System.InvalidCastException">Typy danych wartości i kolumny nie są zgodne.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int columnIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(columnIndex As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int columnIndex); void set(int columnIndex, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Indeks kolumny liczony od zera.</param>
        <summary>Pobiera lub ustawia dane przechowywane w kolumnie określonej przez indeks.</summary>
        <value><see cref="T:System.Object" /> Zawierający dane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas ustawiania właściwości zostanie wygenerowany wyjątek, jeśli wystąpi wyjątek w <xref:System.Data.DataTable.ColumnChanging> zdarzeniu.  
  
 Jeśli jest to edycja, zobacz sekcję <xref:System.Data.DataRow.EndEdit%2A> dotyczącą wyjątków, które mogą być generowane.  
  
   
  
## Examples  
 W poniższych przykładach pokazano użycie <xref:System.Data.DataRow.Item%2A> właściwości w celu uzyskania i ustawienia wartości określonego indeksu kolumn. Pierwszy przykład pobiera wartość pierwszej kolumny w dowolnym wierszu, który użytkownik klika <xref:System.Windows.Forms.DataGrid> kontrolkę.  
  
 [!code-csharp[Classic WebData DataRow.this Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Występuje podczas próby ustawienia wartości w usuniętym wierszu.</exception>
        <exception cref="T:System.IndexOutOfRangeException"><paramref name="columnIndex" /> Argument jest poza zakresem.</exception>
        <exception cref="T:System.InvalidCastException">Występuje po ustawieniu wartości, a nowa wartość <see cref="T:System.Type" /> nie jest zgodna. <see cref="P:System.Data.DataColumn.DataType" /></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string columnName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(columnName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ columnName); void set(System::String ^ columnName, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">Nazwa kolumny.</param>
        <summary>Pobiera lub ustawia dane przechowywane w kolumnie określonej przez nazwę.</summary>
        <value><see cref="T:System.Object" /> Zawierający dane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas ustawiania właściwości zostanie wygenerowany wyjątek, jeśli wystąpi wyjątek w <xref:System.Data.DataTable.ColumnChanging> zdarzeniu.  
  
 Jeśli jest to Natychmiastowa edycja, zobacz <xref:System.Data.DataRow.EndEdit%2A> sekcję dotyczącą wyjątków, które mogą być generowane.  
  
   
  
## Examples  
 W poniższych przykładach pokazano użycie <xref:System.Data.DataRow.Item%2A> właściwości w celu uzyskania i ustawienia wartości określonego indeksu kolumn. Pierwszy przykład pobiera wartość pierwszej kolumny w dowolnym wierszu, który użytkownik klika <xref:System.Windows.Forms.DataGrid> kontrolkę. Drugi ustawia wartość przekazaną jako argument do metody.  
  
 [!code-csharp[Classic WebData DataRow.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Nie można odnaleźć kolumny <paramref name="columnName" /> określonej przez.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Występuje podczas próby ustawienia wartości w usuniętym wierszu.</exception>
        <exception cref="T:System.InvalidCastException">Występuje po ustawieniu wartości, <see cref="T:System.Type" /> która nie jest zgodna. <see cref="P:System.Data.DataColumn.DataType" /></exception>
        <exception cref="T:System.Data.NoNullAllowedException">Występuje, gdy użytkownik próbuje wstawić wartość null do kolumny, w <see cref="P:System.Data.DataColumn.AllowDBNull" /> której jest <see langword="false" />ustawiony.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[System.Data.DataColumn column, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(class System.Data.DataColumn, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(column As DataColumn, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Data::DataColumn ^, System::Data::DataRowVersion] { System::Object ^ get(System::Data::DataColumn ^ column, System::Data::DataRowVersion version); };" />
      <MemberSignature Language="F#" Value="member this.Item(System.Data.DataColumn * System.Data.DataRowVersion) : obj" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="column">A <see cref="T:System.Data.DataColumn" /> , który zawiera informacje o kolumnie.</param>
        <param name="version">Jedna z <see cref="T:System.Data.DataRowVersion" /> wartości, która określa żądaną wersję wiersza. Możliwe wartości to <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, i <see langword="Proposed" />.</param>
        <summary>Pobiera określoną wersję danych przechowywanych w określonym <see cref="T:System.Data.DataColumn" />.</summary>
        <value><see cref="T:System.Object" /> Zawierający dane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie należy mylić <xref:System.Data.DataRow.RowState*>zwłaściwością. `version` `version` Argument opisuje stan danych zawartych w kolumnie względem pierwotnej wartości kolumny.  
  
 Podczas ustawiania właściwości zostanie wygenerowany wyjątek, jeśli wystąpi wyjątek w <xref:System.Data.DataTable.ColumnChanging> zdarzeniu.  
  
 Jeśli jest to Natychmiastowa edycja, zobacz <xref:System.Data.DataRow.EndEdit%2A> sekcję dotyczącą wyjątków, które mogą być generowane.  
  
   
  
## Examples  
 Poniższy przykład pobiera bieżącą wartość klikniętej komórki w <xref:System.Windows.Forms.DataGrid> kontrolce.  
  
 [!code-csharp[Classic WebData DataRow.this5 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this5 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this5 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Kolumna nie należy do tabeli.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="column" /> Argument zawiera wartość null.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Wiersz nie ma tej wersji danych.</exception>
        <altmember cref="T:System.Data.DataRowVersion" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int columnIndex, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(columnIndex As Integer, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int, System::Data::DataRowVersion] { System::Object ^ get(int columnIndex, System::Data::DataRowVersion version); };" />
      <MemberSignature Language="F#" Value="member this.Item(int * System.Data.DataRowVersion) : obj" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Indeks kolumny liczony od zera.</param>
        <param name="version">Jedna z <see cref="T:System.Data.DataRowVersion" /> wartości, która określa żądaną wersję wiersza. Możliwe wartości to <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, i <see langword="Proposed" />.</param>
        <summary>Pobiera dane przechowywane w kolumnie, określone przez indeks i wersję danych do pobrania.</summary>
        <value><see cref="T:System.Object" /> Zawierający dane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można utworzyć lub zaktualizować wiersz tylko po wywołaniu <xref:System.Data.DataRow.BeginEdit%2A> metody; podobnie <xref:System.Data.DataRow.EndEdit%2A> Metoda musi zostać wywołana, aby zatwierdzić edycję. Po wywołaniu <xref:System.Data.DataRow.EndEdit%2A> metody i przed <xref:System.Data.DataRow.AcceptChanges%2A> wywołaniem metody są przechowywane wewnętrzne reprezentacje oryginalnych i nowych proponowanych wartości. W związku z tym, dopóki <xref:System.Data.DataRow.AcceptChanges%2A>nie zostanie wywołana, można `version` użyć argumentu, aby określić, która wersja kolumny jest potrzebna, `DataRowVersion.Original` lub `DataRowVersion.Proposed`. Jednak po wywołaniu <xref:System.Data.DataRow.AcceptChanges%2A> metody wersja kolumny zostanie przywrócona do `DataRowVersion.Original`. Jeśli wiersz jest nowy, można również przekazać `DataRowVersion.Default` parametr, aby pobrać wartość domyślną kolumny. Podczas przekazywania `DataRowVersion.Current`Właściwość zwraca bieżącą wartość, niezależnie od jej wersji.  
  
> [!NOTE]
>  <xref:System.Data.DataRowCollection> <xref:System.Data.DataRow> <xref:System.Data.DataRow.AcceptChanges%2A> <xref:System.Data.DataRow.EndEdit%2A> Metoda jest wywoływana niejawnie w przypadku zmiany wartości kontrolki powiązanej z danymi lub po dodaniu obiektu do; Metoda jest wywoływana niejawnie podczas wywoływania następujących metod: <xref:System.Data.DataRow.BeginEdit%2A> <xref:System.Data.DataRow> metoda obiektu <xref:System.Data.DataTable.AcceptChanges%2A> , Metoda<xref:System.Data.DataTable> obiektu lub<xref:System.Data.DataRow.CancelEdit%2A> Metoda.  
  
 Z kolei, <xref:System.Data.DataRowVersion> Wyliczenie `Current` zwraca wersję danych po <xref:System.Data.DataRow.EndEdit%2A> wywołaniu metody.  
  
 Nie należy mylić <xref:System.Data.DataRow.RowState*>argumentuzwłaściwością `version` . `version` Argument opisuje stan danych zawartych w kolumnie względem pierwotnej wartości kolumny. Właściwość opisuje stan całego wiersza względem jego elementu nadrzędnego <xref:System.Data.DataTable>. <xref:System.Data.DataRow.RowState*>  
  
 Podczas ustawiania właściwości zostanie wygenerowany wyjątek, jeśli wystąpi wyjątek w <xref:System.Data.DataTable.ColumnChanging> zdarzeniu.  
  
 Jeśli jest to Natychmiastowa edycja, zobacz <xref:System.Data.DataRow.EndEdit%2A> sekcję dotyczącą wyjątków, które mogą być generowane.  
  
   
  
## Examples  
 Poniższy przykład pobiera bieżącą wartość kolumny za pomocą <xref:System.Data.DataRow.Item%2A> właściwości <xref:System.Data.DataRow> obiektu.  
  
 [!code-vb[Classic WebData DataRow.this3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><paramref name="columnIndex" /> Argument jest poza zakresem.</exception>
        <exception cref="T:System.InvalidCastException">Typy danych wartości i kolumny nie są zgodne.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Wiersz nie ma tej wersji danych.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Podjęto próbę ustawienia wartości w usuniętym wierszu.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string columnName, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(columnName As String, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^, System::Data::DataRowVersion] { System::Object ^ get(System::String ^ columnName, System::Data::DataRowVersion version); };" />
      <MemberSignature Language="F#" Value="member this.Item(string * System.Data.DataRowVersion) : obj" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="columnName">Nazwa kolumny.</param>
        <param name="version">Jedna z <see cref="T:System.Data.DataRowVersion" /> wartości, która określa żądaną wersję wiersza. Możliwe wartości to <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, i <see langword="Proposed" />.</param>
        <summary>Pobiera określoną wersję danych przechowywanych w nazwanej kolumnie.</summary>
        <value><see cref="T:System.Object" /> Zawierający dane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie należy mylić tej wersji z <xref:System.Data.DataRow.RowState*> właściwością. `version` Argument opisuje stan danych zawartych w kolumnie względem pierwotnej wartości kolumny. Właściwość opisuje stan całego wiersza względem jego elementu nadrzędnego <xref:System.Data.DataTable>. <xref:System.Data.DataRow.RowState*>  
  
 Podczas ustawiania właściwości zostanie wygenerowany wyjątek, jeśli wystąpi wyjątek w <xref:System.Data.DataTable.ColumnChanging> zdarzeniu.  
  
 Jeśli jest to Natychmiastowa edycja, zobacz <xref:System.Data.DataRow.EndEdit%2A> sekcję dotyczącą wyjątków, które mogą być generowane.  
  
   
  
## Examples  
 Poniższy przykład pobiera bieżącą wersję danych przy klikniętej komórce <xref:System.Windows.Forms.DataGrid> kontrolki.  
  
 [!code-csharp[Classic WebData DataRow.this4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Nie można odnaleźć kolumny <paramref name="columnName" /> określonej przez.</exception>
        <exception cref="T:System.InvalidCastException">Typy danych wartości i kolumny nie są zgodne.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Wiersz nie ma tej wersji danych.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Wiersz został usunięty.</exception>
        <altmember cref="T:System.Data.DataRowVersion" />
      </Docs>
    </Member>
    <Member MemberName="ItemArray">
      <MemberSignature Language="C#" Value="public object[] ItemArray { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object[] ItemArray" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.ItemArray" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemArray As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Object ^&gt; ^ ItemArray { cli::array &lt;System::Object ^&gt; ^ get(); void set(cli::array &lt;System::Object ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemArray : obj[] with get, set" Usage="System.Data.DataRow.ItemArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wszystkie wartości dla tego wiersza za pomocą tablicy.</summary>
        <value>Tablica typu <see cref="T:System.Object" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy do ustawiania lub pobierania wartości dla tego wiersza za pomocą tablicy. Jeśli ta właściwość jest używana do ustawiania wartości, Tablica musi mieć ten sam rozmiar i kolejność, co kolekcja kolumn. `null` Przekazanie<xref:System.Data.DataRow.ItemArray%2A> w wskazuje, że nie określono wartości.  
  
 Użytkownicy mogą generować wyjątki w <xref:System.Data.DataTable.ColumnChanging> zdarzeniu <xref:System.Data.DataTable.RowChanging> lub zdarzeniu.  
  
   
  
## Examples  
 W poniższych przykładach pokazano, jak uzyskać i ustawić wartości przy <xref:System.Data.DataRow.ItemArray%2A> użyciu właściwości.  
  
 [!code-csharp[Classic WebData DataRow.ItemArray Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ItemArray Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ItemArray Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ItemArray Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Tablica jest większa niż liczba kolumn w tabeli.</exception>
        <exception cref="T:System.InvalidCastException">Wartość w tablicy nie pasuje do jej <see cref="P:System.Data.DataColumn.DataType" /> w odpowiedniej <see cref="T:System.Data.DataColumn" />wartości.</exception>
        <exception cref="T:System.Data.ConstraintException">Edycja przerwała ograniczenie.</exception>
        <exception cref="T:System.Data.ReadOnlyException">Edycja próbowała zmienić wartość kolumny tylko do odczytu.</exception>
        <exception cref="T:System.Data.NoNullAllowedException">Edycja próbowała wprowadzić wartość null w kolumnie, w której <see cref="P:System.Data.DataColumn.AllowDBNull" /> <see cref="T:System.Data.DataColumn" /> znajduje się <see langword="false" />obiekt.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Wiersz został usunięty.</exception>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="T:System.Data.DataColumn" />
      </Docs>
    </Member>
    <Member MemberName="RejectChanges">
      <MemberSignature Language="C#" Value="public void RejectChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RejectChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.RejectChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub RejectChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RejectChanges();" />
      <MemberSignature Language="F#" Value="member this.RejectChanges : unit -&gt; unit" Usage="dataRow.RejectChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Odrzuca wszystkie zmiany wprowadzone do wiersza od momentu <see cref="M:System.Data.DataRow.AcceptChanges" /> ostatniego wywołania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po wywołaniu <xref:System.Data.DataRow.RejectChanges%2A> metody Metoda jest wywoływana niejawnie, <xref:System.Data.DataRow.CancelEdit%2A> aby anulować wszelkie zmiany. Jeśli <xref:System.Data.DataRow.RowState*> zostanie usunięty lub zmodyfikowany, wiersz zostanie przywrócony do poprzednich wartości i <xref:System.Data.DataRow.RowState*> zmieni się na niezmieniony. <xref:System.Data.DataRow.RowState*> Jeśli zostanie dodany, wiersz zostanie usunięty.  
  
   
  
## Examples  
 Poniższy przykład tworzy prostą <xref:System.Data.DataTable> z 2 kolumnami i 10 wierszami. Po usunięciu kilku <xref:System.Data.DataRow> elementów <xref:System.Data.DataRow.Delete%2A> przy użyciu metody, jeden z wierszy jest cofany przez wywołanie <xref:System.Data.DataRow.RejectChanges%2A>.  
  
 [!code-csharp[Classic WebData DataRow.Delete Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Delete Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">Wiersz nie należy do tabeli.</exception>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.IsNull(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RowError">
      <MemberSignature Language="C#" Value="public string RowError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RowError" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.RowError" />
      <MemberSignature Language="VB.NET" Value="Public Property RowError As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RowError { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RowError : string with get, set" Usage="System.Data.DataRow.RowError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia niestandardowy opis błędu dla wiersza.</summary>
        <value>Tekst opisujący błąd.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Używa właściwości <xref:System.Data.DataRow.HasErrors%2A> , aby najpierw określić, <xref:System.Data.DataRow> czy zawiera błędy.  
  
   
  
## Examples  
 Poniższy przykład ustawia tekst błędu dla dziesięciu wierszy tabeli wyświetlanej w <xref:System.Windows.Forms.DataGrid> kontrolce.  
  
 [!code-csharp[Classic WebData DataRow.RowError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.RowError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.RowError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.RowError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
        <altmember cref="P:System.Data.DataSet.HasErrors" />
      </Docs>
    </Member>
    <Member MemberName="RowState">
      <MemberSignature Language="C#" Value="public System.Data.DataRowState RowState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowState RowState" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.RowState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowState As DataRowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRowState RowState { System::Data::DataRowState get(); };" />
      <MemberSignature Language="F#" Value="member this.RowState : System.Data.DataRowState" Usage="System.Data.DataRow.RowState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący stan wiersza w odniesieniu do jego relacji <see cref="T:System.Data.DataRowCollection" />z.</summary>
        <value>Jedna z <see cref="T:System.Data.DataRowState" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Data.DataRow.RowState*> zależy od dwóch czynników: rodzaju operacji wykonanej na wierszu i tego, czy <xref:System.Data.DataRow.AcceptChanges%2A> został on wywołany na <xref:System.Data.DataRow>.  
  
   
  
## Examples  
 Poniższy przykład tworzy najpierw nową <xref:System.Data.DataTable> z jedną kolumną, a następnie tworzy pojedynczą. <xref:System.Data.DataRow> Po utworzeniu, dodaniu, zmodyfikowaniu i usunięciu zostanie on <xref:System.Data.DataRow.RowState*> wydrukowany. <xref:System.Data.DataRow>  
  
 [!code-csharp[Classic WebData DataRow.RowState Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.RowState Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.RowState Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.RowState Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="T:System.Data.DataRowView" />
        <altmember cref="M:System.Data.DataRow.Delete" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
        <altmember cref="M:System.Data.DataRow.SetAdded" />
        <altmember cref="M:System.Data.DataRow.SetModified" />
      </Docs>
    </Member>
    <Member MemberName="SetAdded">
      <MemberSignature Language="C#" Value="public void SetAdded ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAdded() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetAdded" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAdded ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAdded();" />
      <MemberSignature Language="F#" Value="member this.SetAdded : unit -&gt; unit" Usage="dataRow.SetAdded " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zmienia wartość <see cref="P:System.Data.DataRow.RowState" /> <see cref="T:System.Data.DataRow" /> na .<see langword="Added" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zmienia wartość <xref:System.Data.DataRow.RowState*> <xref:System.Data.DataRow> na .`Added` Jeśli bieżący wiersz `Unchanged` nie znajduje się w `Added` ani w <xref:System.InvalidOperationException> stanie, zgłasza `DataRow` komunikat, który `SetAdded` może być wywoływany tylko w wystąpieniu, gdzie `RowState` is `Unchanged`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetModified" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColumnError">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia opis błędu dla kolumny.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (System.Data.DataColumn column, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(class System.Data.DataColumn column, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (column As DataColumn, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(System::Data::DataColumn ^ column, System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.SetColumnError : System.Data.DataColumn * string -&gt; unit" Usage="dataRow.SetColumnError (column, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column">, <see cref="T:System.Data.DataColumn" /> Aby ustawić opis błędu dla.</param>
        <param name="error">Opis błędu.</param>
        <summary>Ustawia opis błędu dla kolumny określonej jako <see cref="T:System.Data.DataColumn" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby zapoznać się z opisami błędów <xref:System.Data.DataRow.GetColumnError%2A> , użyj metody.  
  
 Aby ustalić, czy istnieją jakieś błędy dla kolekcji kolumn, użyj <xref:System.Data.DataRow.HasErrors%2A> właściwości. W związku z tym można użyć <xref:System.Data.DataRow.GetColumnsInError%2A> metody, aby pobrać wszystkie kolumny z błędami.  
  
 Jeśli `null` lub pusty ciąg jest przekazano `error` jako parametr, zachowuje się <xref:System.Data.DataRow> <xref:System.Data.DataRow.HasErrors%2A> tak, jakby nie został ustawiony błąd i właściwość zwróci wartość false.  
  
 Aby ustawić niestandardowy opis błędu dla całego wiersza, użyj <xref:System.Data.DataRow.RowError%2A> właściwości.  
  
 Aby ustalić, czy istnieją jakieś błędy dla kolekcji kolumn, użyj <xref:System.Data.DataRow.HasErrors%2A> metody.  
  
 Aby wyczyścić wszystkie błędy dla kolekcji Columns, użyj <xref:System.Data.DataRow.ClearErrors%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład ustawia opis błędu dla określonego <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (int columnIndex, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(int32 columnIndex, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (columnIndex As Integer, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(int columnIndex, System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.SetColumnError : int * string -&gt; unit" Usage="dataRow.SetColumnError (columnIndex, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Indeks kolumny liczony od zera.</param>
        <param name="error">Opis błędu.</param>
        <summary>Ustawia opis błędu dla kolumny określonej przez indeks.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda służy do ustawiania niestandardowych opisów błędów w określonych kolumnach. Możesz użyć <xref:System.Windows.Forms.ErrorProvider> kontrolki, aby wyświetlić tekst błędu.  
  
 Aby zapoznać się z opisami błędów <xref:System.Data.DataRow.GetColumnError%2A> , użyj metody.  
  
 Aby ustalić, czy istnieją jakieś błędy dla kolekcji kolumn, użyj <xref:System.Data.DataRow.HasErrors%2A> właściwości. W związku z tym można użyć <xref:System.Data.DataRow.GetColumnsInError%2A> metody, aby pobrać wszystkie kolumny z błędami.  
  
 Jeśli `null` lub pusty ciąg jest przekazano `error` jako parametr, zachowuje się <xref:System.Data.DataRow> <xref:System.Data.DataRow.HasErrors%2A> tak, jakby nie został ustawiony błąd i właściwość zwróci wartość false.  
  
 Aby ustawić niestandardowy opis błędu dla całego wiersza, użyj <xref:System.Data.DataRow.RowError%2A> właściwości.  
  
 Aby wyczyścić wszystkie błędy dla kolekcji Columns, użyj <xref:System.Data.DataRow.ClearErrors%2A> metody.  
  
 Aby ustawić tekst błędu, który ma zastosowanie do całego wiersza, ustaw <xref:System.Data.DataRow.RowError%2A> właściwość.  
  
   
  
## Examples  
 Poniższy przykład ustawia opis błędu dla określonego <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><paramref name="columnIndex" /> Argument jest poza zakresem</exception>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (string columnName, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(string columnName, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (columnName As String, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(System::String ^ columnName, System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.SetColumnError : string * string -&gt; unit" Usage="dataRow.SetColumnError (columnName, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">Nazwa kolumny.</param>
        <param name="error">Opis błędu.</param>
        <summary>Ustawia opis błędu dla kolumny określonej przez nazwę.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa kolumny jest ustawiana z <xref:System.Data.DataColumn.ColumnName%2A> właściwością <xref:System.Data.DataColumn> klasy.  
  
 Aby zapoznać się z opisami błędów <xref:System.Data.DataRow.GetColumnError%2A> , użyj metody.  
  
 Aby ustalić, czy istnieją jakieś błędy dla kolekcji kolumn, użyj <xref:System.Data.DataRow.HasErrors%2A> właściwości. W związku z tym można użyć <xref:System.Data.DataRow.GetColumnsInError%2A> metody, aby pobrać wszystkie kolumny z błędami.  
  
 Jeśli `null` lub pusty ciąg jest przekazano `error` jako parametr, zachowuje się <xref:System.Data.DataRow> <xref:System.Data.DataRow.HasErrors%2A> tak, jakby nie został ustawiony błąd i właściwość zwróci wartość false.  
  
 Aby ustawić niestandardowy opis błędu dla całego wiersza, użyj <xref:System.Data.DataRow.RowError%2A> właściwości.  
  
 Aby ustalić, czy istnieją jakieś błędy dla kolekcji kolumn, użyj <xref:System.Data.DataRow.HasErrors%2A> metody.  
  
 Aby wyczyścić wszystkie błędy dla kolekcji Columns, użyj <xref:System.Data.DataRow.ClearErrors%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład ustawia opis błędu dla określonego <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetModified">
      <MemberSignature Language="C#" Value="public void SetModified ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetModified" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetModified ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetModified();" />
      <MemberSignature Language="F#" Value="member this.SetModified : unit -&gt; unit" Usage="dataRow.SetModified " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zmienia wartość <see cref="P:System.Data.DataRow.RowState" /> <see cref="T:System.Data.DataRow" /> na .<see langword="Modified" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zmienia wartość <xref:System.Data.DataRow.RowState*> <xref:System.Data.DataRow> na .`Modified` Jeśli bieżący wiersz `Unchanged` nie znajduje się w `Added` ani w <xref:System.InvalidOperationException> stanie, zgłasza `DataRow` komunikat, który `SetModified` może być wywoływany tylko w wystąpieniu, gdzie `RowState` is `Unchanged`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetAdded" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <Member MemberName="SetNull">
      <MemberSignature Language="C#" Value="protected void SetNull (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNull(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetNull(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNull (column As DataColumn)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNull(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="member this.SetNull : System.Data.DataColumn -&gt; unit" Usage="dataRow.SetNull column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">A <see cref="T:System.Data.DataColumn" />.</param>
        <summary>Ustawia wartość określoną <see cref="T:System.Data.DataColumn" /> na wartość null.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Data.DataRow.IsNull%2A> , aby określić, czy kolumna zawiera wartość null.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetParentRow">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia wiersz <see cref="T:System.Data.DataRow" />nadrzędny obiektu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetParentRow">
      <MemberSignature Language="C#" Value="public void SetParentRow (System.Data.DataRow parentRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParentRow(class System.Data.DataRow parentRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParentRow (parentRow As DataRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParentRow(System::Data::DataRow ^ parentRow);" />
      <MemberSignature Language="F#" Value="member this.SetParentRow : System.Data.DataRow -&gt; unit" Usage="dataRow.SetParentRow parentRow" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentRow" Type="System.Data.DataRow" />
      </Parameters>
      <Docs>
        <param name="parentRow">Nowy element nadrzędny <see cref="T:System.Data.DataRow" />.</param>
        <summary>Ustawia wiersz <see cref="T:System.Data.DataRow" /> nadrzędny obiektu z określonym nowym elementem nadrzędnym <see cref="T:System.Data.DataRow" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetParentRow">
      <MemberSignature Language="C#" Value="public void SetParentRow (System.Data.DataRow parentRow, System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParentRow(class System.Data.DataRow parentRow, class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParentRow (parentRow As DataRow, relation As DataRelation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParentRow(System::Data::DataRow ^ parentRow, System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.SetParentRow : System.Data.DataRow * System.Data.DataRelation -&gt; unit" Usage="dataRow.SetParentRow (parentRow, relation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentRow" Type="System.Data.DataRow" />
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="parentRow">Nowy element nadrzędny <see cref="T:System.Data.DataRow" />.</param>
        <param name="relation">Relacja <see cref="T:System.Data.DataRelation" /> , która ma zostać użyta.</param>
        <summary>Ustawia wiersz <see cref="T:System.Data.DataRow" /> nadrzędny obiektu z określonym nowym elementem nadrzędnym <see cref="T:System.Data.DataRow" /> i <see cref="T:System.Data.DataRelation" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład ustawia wiersz nadrzędny określonego wiersza podrzędnego.  
  
 [!code-vb[Classic WebData DataRow.SetParentRow1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetParentRow1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">Jeden z wierszy nie należy do tabeli.</exception>
        <exception cref="T:System.ArgumentNullException">Jeden z wierszy jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Relacja nie należy do <see cref="T:System.Data.DataRelationCollection" /> <see cref="T:System.Data.DataSet" /> obiektu.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Element podrzędny <see cref="T:System.Data.DataTable" /> relacji nie jest tabelą, do której należy ten wiersz.</exception>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public System.Data.DataTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataTable Table" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Table" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Table As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataTable ^ Table { System::Data::DataTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Table : System.Data.DataTable" Usage="System.Data.DataRow.Table" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera, <see cref="T:System.Data.DataTable" /> dla którego ten wiersz zawiera schemat.</summary>
        <value><see cref="T:System.Data.DataTable" /> Do którego należy ten wiersz.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Data.DataRow> nie musi należeć do kolekcji wierszy żadnej tabeli. To zachowanie występuje, gdy <xref:System.Data.DataRow> został utworzony, ale nie został dodany <xref:System.Data.DataRowCollection>do. Jeśli właściwość zwraca `DataRowState.Detached`, wiersz nie znajduje się w żadnej kolekcji. <xref:System.Data.DataRow.RowState*>  
  
   
  
## Examples  
 Poniższy przykład używa właściwości, <xref:System.Data.DataRow.Table%2A> aby zwrócić odwołanie do kolekcji <xref:System.Data.DataTable>Columns.  
  
 [!code-csharp[Classic WebData DataRow.Table Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Table Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Table Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Table Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="T:System.Data.DataTable" />
      </Docs>
    </Member>
  </Members>
</Type>
