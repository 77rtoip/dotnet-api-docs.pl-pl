<Type Name="CommandBehavior" FullName="System.Data.CommandBehavior">
  <Metadata><Meta Name="ms.openlocfilehash" Value="091d35cbfb7dee7dd2fa9d626fed81c7e793f46b" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69122770" /></Metadata><TypeSignature Language="C#" Value="public enum CommandBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CommandBehavior extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.CommandBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Enum CommandBehavior" />
  <TypeSignature Language="C++ CLI" Value="public enum class CommandBehavior" />
  <TypeSignature Language="F#" Value="type CommandBehavior = " />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zawiera opis wyników zapytania i jego wpływ na bazę danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartości są używane <xref:System.Data.IDbCommand.ExecuteReader%2A> przez metodę <xref:System.Data.IDbCommand> i wszelkie implementujące klasy. `CommandBehavior`  
  
 Można użyć bitowej kombinacji tych wartości.  
  
`CommandBehavior`jest ignorowany, gdy jest używany <xref:System.Data.Sql.SqlNotificationRequest> do <xref:System.Data.SqlClient.SqlDependency> definiowania elementu lub i nie może być używany. Użyj konstruktora, który nie wymaga `CommandBehavior` parametru w tych dwóch przypadkach.  

### <a name="notes-on-individual-enumeration-members"></a>Uwagi dotyczące poszczególnych elementów członkowskich wyliczenia

W przypadku `KeyInfo`używania, dostawca danych .NET Framework dla SQL Server poprzedza instrukcji wykonywanej z `SET FMTONLY OFF` i `SET NO_BROWSETABLE ON`. Użytkownik powinien mieć świadomość potencjalnych efektów ubocznych, takich jak zakłócenia przy użyciu `SET FMTONLY ON` instrukcji. Aby uzyskać więcej informacji, zobacz [Set FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).

> [!NOTE]
>  Służy `SequentialAccess` do pobierania dużych wartości i danych binarnych. W przeciwnym razie <xref:System.OutOfMemoryException> może wystąpić, a połączenie zostanie zamknięte.  

Po określeniu `SequentialAccess`należy odczytać z kolumn w kolejności, w jakiej są zwracane, chociaż nie jest wymagane odczytywanie każdej kolumny. Po przeczytaniu poza lokalizacją w zwróconym strumieniu danych dane znajdujące się w lokalizacji lub przed tą lokalizacją nie mogą być `DataReader`już odczytywane z. W przypadku korzystania <xref:System.Data.OleDb.OleDbDataReader>z programu można odczytać bieżącą wartość kolumny, dopóki nie zostanie ona przeczytana. Przy użyciu <xref:System.Data.SqlClient.SqlDataReader>, można odczytać wartość kolumny tylko raz.  

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CloseConnection">
      <MemberSignature Language="C#" Value="CloseConnection" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandBehavior CloseConnection = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandBehavior.CloseConnection" />
      <MemberSignature Language="VB.NET" Value="CloseConnection" />
      <MemberSignature Language="C++ CLI" Value="CloseConnection" />
      <MemberSignature Language="F#" Value="CloseConnection = 32" Usage="System.Data.CommandBehavior.CloseConnection" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>Gdy jest wykonywane polecenie, skojarzony <see langword="Connection" /> obiekt zostanie zamknięty po zamknięciu skojarzonego <see langword="DataReader" /> obiektu.</summary>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandBehavior Default = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandBehavior.Default" />
      <MemberSignature Language="VB.NET" Value="Default" />
      <MemberSignature Language="C++ CLI" Value="Default" />
      <MemberSignature Language="F#" Value="Default = 0" Usage="System.Data.CommandBehavior.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Zapytanie może zwracać wiele zestawów wyników. Wykonanie zapytania może mieć wpływ na stan bazy danych. <see langword="Default" />nie ustawia <see cref="T:System.Data.CommandBehavior" /> żadnych flag, więc <see langword="ExecuteReader(CommandBehavior.Default)" /> wywołanie jest funkcjonalnie równoważne z <see langword="ExecuteReader()" />wywołaniem.</summary>
      </Docs>
    </Member>
    <Member MemberName="KeyInfo">
      <MemberSignature Language="C#" Value="KeyInfo" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandBehavior KeyInfo = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandBehavior.KeyInfo" />
      <MemberSignature Language="VB.NET" Value="KeyInfo" />
      <MemberSignature Language="C++ CLI" Value="KeyInfo" />
      <MemberSignature Language="F#" Value="KeyInfo = 4" Usage="System.Data.CommandBehavior.KeyInfo" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Zapytanie zwraca informacje o kolumnie i kluczu podstawowym. Dostawca dołącza dodatkowe kolumny do zestawu wyników dla istniejących kolumn klucza podstawowego i sygnatur czasowych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaOnly">
      <MemberSignature Language="C#" Value="SchemaOnly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandBehavior SchemaOnly = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandBehavior.SchemaOnly" />
      <MemberSignature Language="VB.NET" Value="SchemaOnly" />
      <MemberSignature Language="C++ CLI" Value="SchemaOnly" />
      <MemberSignature Language="F#" Value="SchemaOnly = 2" Usage="System.Data.CommandBehavior.SchemaOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Zapytanie zwraca tylko informacje o kolumnie. W przypadku <see cref="F:System.Data.CommandBehavior.SchemaOnly" />używania, dostawca danych .NET Framework dla SQL Server poprzedza instrukcji wykonywanej przy użyciu polecenia Set FMTONLY na.</summary>
      </Docs>
    </Member>
    <Member MemberName="SequentialAccess">
      <MemberSignature Language="C#" Value="SequentialAccess" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandBehavior SequentialAccess = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandBehavior.SequentialAccess" />
      <MemberSignature Language="VB.NET" Value="SequentialAccess" />
      <MemberSignature Language="C++ CLI" Value="SequentialAccess" />
      <MemberSignature Language="F#" Value="SequentialAccess = 16" Usage="System.Data.CommandBehavior.SequentialAccess" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>Zapewnia sposób <see langword="DataReader" /> obsługi wierszy zawierających kolumny o dużych wartościach binarnych. Zamiast ładowania całego wiersza, program <see langword="SequentialAccess" /> <see langword="DataReader" /> umożliwia ładowanie danych jako strumienia. Następnie można użyć metody lub <see langword="GetBytes" /> <see langword="GetChars" /> , aby określić lokalizację bajtów do uruchomienia operacji odczytu, oraz ograniczony rozmiar buforu dla zwracanych danych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SingleResult">
      <MemberSignature Language="C#" Value="SingleResult" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandBehavior SingleResult = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandBehavior.SingleResult" />
      <MemberSignature Language="VB.NET" Value="SingleResult" />
      <MemberSignature Language="C++ CLI" Value="SingleResult" />
      <MemberSignature Language="F#" Value="SingleResult = 1" Usage="System.Data.CommandBehavior.SingleResult" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Zapytanie zwraca pojedynczy zestaw wyników.</summary>
      </Docs>
    </Member>
    <Member MemberName="SingleRow">
      <MemberSignature Language="C#" Value="SingleRow" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandBehavior SingleRow = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandBehavior.SingleRow" />
      <MemberSignature Language="VB.NET" Value="SingleRow" />
      <MemberSignature Language="C++ CLI" Value="SingleRow" />
      <MemberSignature Language="F#" Value="SingleRow = 8" Usage="System.Data.CommandBehavior.SingleRow" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>Zapytanie powinno zwrócić pojedynczy wiersz pierwszego zestawu wyników. Wykonanie zapytania może mieć wpływ na stan bazy danych. Niektórzy dostawcy danych .NET Framework mogą, ale nie muszą, korzystać z tych informacji w celu optymalizacji wydajności polecenia. Po określeniu <see cref="F:System.Data.CommandBehavior.SingleRow" /> <see cref="M:System.Data.OleDb.OleDbCommand.ExecuteReader" /> przy użyciu metody <see cref="T:System.Data.OleDb.OleDbCommand" /> obiektu .NET Framework dostawca danych dla OLE DB wykonuje powiązanie przy użyciu interfejsu OLE DB <see langword="IRow" /> , jeśli jest dostępny. W przeciwnym razie używa <see langword="IRowset" /> interfejsu. Jeśli instrukcja SQL powinna zwrócić tylko jeden wiersz, określenie <see cref="F:System.Data.CommandBehavior.SingleRow" /> może również zwiększyć wydajność aplikacji. Można określić <see langword="SingleRow" /> , kiedy będą wykonywane zapytania, które powinny zwracać wiele zestawów wyników.  W takim przypadku, gdy określono zarówno kwerendę SQL z zestawem wieloskładnikowym, jak i pojedynczy wiersz, zwrócony wynik będzie zawierać tylko pierwszy wiersz pierwszego zestawu wyników. Inne zestawy wyników zapytania nie zostaną zwrócone.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
