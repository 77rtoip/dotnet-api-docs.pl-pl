<Type Name="IDataParameter" FullName="System.Data.IDataParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3a37de15589ab5af7c968c8bbb2c2438e9737786" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36745656" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDataParameter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataParameter" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDataParameter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataParameter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataParameter" />
  <TypeSignature Language="F#" Value="type IDataParameter = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje parametr obiekt polecenia, i opcjonalnie jego mapowanie <see cref="T:System.Data.DataSet" /> kolumn; i jest implementowany przez dostawców danych .NET Framework, które uzyskują dostęp do źródła danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.IDataParameter> Interfejs umożliwiający dziedziczące klasy do zaimplementowania klasy parametr, który reprezentuje parametr obiektu polecenia. Aby uzyskać więcej informacji na temat klas parametru zobacz [konfigurowania parametrów i typ danych parametru](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).  
  
 Aplikacja nie tworzy wystąpienie <xref:System.Data.IDataParameter> interfejsu bezpośrednio, ale powoduje utworzenie wystąpienia klasy, która dziedziczy <xref:System.Data.IDataParameter>.  
  
 Klasy, które dziedziczą <xref:System.Data.IDataParameter> musi implementować dziedziczone elementy członkowskie i zwykle zdefiniować dodatkowe elementy członkowskie Dodawanie funkcji specyficznych dla dostawcy. Na przykład <xref:System.Data.IDataParameter> interfejs definiuje <xref:System.Data.IDataParameter.DbType%2A> właściwości. Z kolei <xref:System.Data.OleDb.OleDbParameter> klasy dziedziczy tej właściwości, a także określa <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład tworzy wiele wystąpień klasy pochodnej, <xref:System.Data.SqlClient.SqlParameter>, za pomocą <xref:System.Data.SqlClient.SqlParameterCollection> kolekcji w ciągu <xref:System.Data.SqlClient.SqlDataAdapter>. Te parametry są używane do wybierz dane ze źródła danych i umieść dane w <xref:System.Data.DataSet>. W tym przykładzie założono, że <xref:System.Data.DataSet> i <xref:System.Data.SqlClient.SqlDataAdapter> zostały już utworzone z odpowiedniego schematu, poleceń i połączenia.  
  
 [!code-csharp[Classic WebData SqlParameter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Do podwyższenie poziomu spójności między dostawcy danych .NET Framework, nazwa klasy dziedziczące w formularzu <paramref name="Prv" /> parametru gdzie <paramref name="Prv" /> jest prefiksem uniform na wszystkie klasy w określonej przestrzeni nazw dostawcy danych .NET Framework. Na przykład <paramref name="Sql" /> jest prefiks <see cref="T:System.Data.SqlClient.SqlCommand" /> klasy w <see langword="System.Data.SqlClient" /> przestrzeni nazw.  Przy dziedziczeniu z <see cref="T:System.Data.IDataParameter" /> interfejsu, należy zaimplementować następujących konstruktorów: <list type="table"><listheader><term> elementu </term><description> opis </description></listheader><item><term> PrvParameter() </term><description> inicjuje nowe wystąpienie klasy parametru.  </description></item><item><term> PrvParameter (Nazwa ciągu, typu danych PrvDbType) </term><description> inicjuje nowe wystąpienie klasy parametru z typem parametru nazwy i danych.  </description></item><item><term> PrvParameter (Nazwa ciągu, wartości obiektu) </term><description> inicjuje nowe wystąpienie klasy parametr o nazwie parametru i obiekt, który jest wartość parametru.  </description></item><item><term> PrvParameter (Nazwa ciągu, typu danych PrvDbType, rozmiar int) </term><description> inicjuje nowe wystąpienie klasy z parametru Nazwa parametru, typu danych i szerokości.  </description></item><item><term> PrvParameter (Nazwa ciągu, PrvDbType dataType, rozmiar int, ciąg srcColumn) </term><description> inicjuje nowe wystąpienie klasy DbParameter o nazwę parametru, typu danych, szerokość i nazwa kolumny źródłowej.  </description></item><item><term> PrvParameter (nazwa parametru ciągu, PrvDbType dbType, int rozmiar, właściwość ParameterDirection kierunku, logiczna isNullable, dokładność bajtów, skali bajtów, srcColumn ciągu, DataRowVersion srcVersion, wartość obiektu) </term><description> inicjuje nowy wystąpienie <see cref="T:System.Data.OleDb.OleDbParameter" /> z nazwę parametru, typu danych, szerokość, nazwa kolumny źródłowej, kierunek parametru, dokładność liczbowych i inne właściwości.  </description></item></list></para>
    </block>
  </Docs>
  <Members>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public System.Data.DbType DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DbType DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Property DbType As DbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DbType DbType { System::Data::DbType get(); void set(System::Data::DbType value); };" />
      <MemberSignature Language="F#" Value="member this.DbType : System.Data.DbType with get, set" Usage="System.Data.IDataParameter.DbType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Data.DbType" /> parametru.</summary>
        <value>Jeden z <see cref="T:System.Data.DbType" /> wartości. Wartość domyślna to <see cref="F:System.Data.DbType.String" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 PrvDbType (gdzie Prv reprezentuje prefiks specyficznego dla dostawcy) i <xref:System.Data.SqlClient.SqlParameter.DbType%2A> są połączone. W związku z tym ustawienie <xref:System.Data.SqlClient.SqlParameter.DbType%2A> zmiany PrvDbType PrvDbType pomocniczych.  
  
 Aby uzyskać listę obsługiwanych typów danych Zobacz właściwego członka PrvDbType dostawcy danych .NET Framework. Aby uzyskać więcej informacji, zobacz [parametry element DataAdapter](~/docs/framework/data/adonet/dataadapter-parameters.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość nie został ustawiony na prawidłowy <see cref="T:System.Data.DbType" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public System.Data.ParameterDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ParameterDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As ParameterDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::ParameterDirection Direction { System::Data::ParameterDirection get(); void set(System::Data::ParameterDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Data.ParameterDirection with get, set" Usage="System.Data.IDataParameter.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.ParameterDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy parametr tylko wejściowym, jest tylko do danych wyjściowych, dwukierunkowego lub parametru wartości zwracanej procedury składowanej.</summary>
        <value>Jeden z <see cref="T:System.Data.ParameterDirection" /> wartości. Wartość domyślna to <see langword="Input" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Data.ParameterDirection> jest wyjścia i wykonanie skojarzonego <xref:System.Data.SqlClient.SqlCommand> nie zwraca wartości <xref:System.Data.IDataParameter> zawiera wartość null.  
  
 Po ostatnim wierszu z ostatni zestaw wyników jest do odczytu, `Output`, `InputOut`, i `ReturnValue` parametry zostały zaktualizowane.  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie klasy implementującej <xref:System.Data.SqlClient.SqlParameter>i ustawia niektóre jego właściwości.  
  
 [!code-csharp[Classic WebData SqlParameter.Direction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Direction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.Direction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Direction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Właściwość nie została ustawiona na jedną z prawidłowych <see cref="T:System.Data.ParameterDirection" /> wartości.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool" Usage="System.Data.IDataParameter.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy parametr akceptuje wartości null.</summary>
        <value>
          <see langword="true" /> Jeśli są akceptowane wartości zerowe; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartości null są obsługiwane przy użyciu <xref:System.DBNull> klasy.  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie klasy implementującej <xref:System.Data.SqlClient.SqlParameter>i ustawia niektóre jego właściwości.  
  
 [!code-csharp[Classic WebData SqlParameter.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterName">
      <MemberSignature Language="C#" Value="public string ParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.ParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property ParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ParameterName : string with get, set" Usage="System.Data.IDataParameter.ParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę <see cref="T:System.Data.IDataParameter" />.</summary>
        <value>Nazwa <see cref="T:System.Data.IDataParameter" />. Wartość domyślna to ciąg pusty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.IDataParameter.ParameterName%2A> Jest określona w postaci @paramname. Należy ustawić <xref:System.Data.IDataParameter.ParameterName%2A> przed wykonaniem polecenia, który korzysta z parametrów.  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie klasy implementującej <xref:System.Data.SqlClient.SqlParameter>i ustawia niektóre jego właściwości.  
  
 [!code-csharp[Classic WebData SqlParameter.ParameterName Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.ParameterName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.ParameterName Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.ParameterName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumn">
      <MemberSignature Language="C#" Value="public string SourceColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceColumn" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.SourceColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceColumn As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceColumn { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceColumn : string with get, set" Usage="System.Data.IDataParameter.SourceColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę kolumny źródłowej, który jest zamapowany na <see cref="T:System.Data.DataSet" /> i używane do ładowania lub zwracanie <see cref="P:System.Data.IDataParameter.Value" />.</summary>
        <value>Nazwa kolumny źródłowej, który jest zamapowany na <see cref="T:System.Data.DataSet" />. Wartość domyślna to ciąg pusty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Łącze między wartością <xref:System.Data.IDataParameter> i <xref:System.Data.DataTable> może być dwukierunkowe, w zależności od wartości <xref:System.Data.IDataParameter.Direction%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie klasy implementującej <xref:System.Data.SqlClient.SqlParameter>i ustawia niektóre jego właściwości.  
  
 [!code-csharp[Classic WebData SqlParameter.SourceColumn Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SourceColumn Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SourceColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SourceColumn Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceVersion">
      <MemberSignature Language="C#" Value="public System.Data.DataRowVersion SourceVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowVersion SourceVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.SourceVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceVersion As DataRowVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRowVersion SourceVersion { System::Data::DataRowVersion get(); void set(System::Data::DataRowVersion value); };" />
      <MemberSignature Language="F#" Value="member this.SourceVersion : System.Data.DataRowVersion with get, set" Usage="System.Data.IDataParameter.SourceVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Data.DataRowVersion" /> do użycia podczas ładowania <see cref="P:System.Data.IDataParameter.Value" />.</summary>
        <value>Jeden z <see cref="T:System.Data.DataRowVersion" /> wartości. Wartość domyślna to <see langword="Current" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest używana przez <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> podczas <xref:System.Data.Common.DbDataAdapter.Update%2A> można określić, czy wartość oryginalnego lub bieżącego jest używany dla wartości parametru. Dzięki temu kluczy podstawowych do zaktualizowania. Ta właściwość jest ignorowana przez <xref:System.Data.IDbDataAdapter.InsertCommand%2A> i <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>. Ta właściwość jest ustawiona na wersję <xref:System.Data.DataRow> używane przez <xref:System.Data.DataRow.Item%2A> właściwości, lub <xref:System.Data.DataRow.GetChildRows%2A> metody <xref:System.Data.DataRow> obiektu.  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie klasy implementującej <xref:System.Data.SqlClient.SqlParameter>i ustawia niektóre jego właściwości.  
  
 [!code-csharp[Classic WebData SqlParameter.SourceVersion Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SourceVersion Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SourceVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SourceVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Nie ustawiono właściwości jednego z <see cref="T:System.Data.DataRowVersion" /> wartości.</exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Data.IDataParameter.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość parametru.</summary>
        <value>
          <see cref="T:System.Object" /> Oznacza to wartość parametru. Wartość domyślna to null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dla parametrów wejściowych, wartość jest powiązany z <xref:System.Data.IDbCommand> wysyłanego do serwera. Dla danych wyjściowych i parametrów wartości zwracanej, wartość jest ustawiana po zakończeniu <xref:System.Data.IDbCommand> oraz po <xref:System.Data.IDataReader> jest zamknięty.  
  
 Podczas wysyłania wartości parametru wartości null na serwerze, użytkownik musi określić `DBNull`, niedopuszczania wartości null. Wartość null w systemie jest pusty obiekt, który nie ma wartości. `DBNull` jest używana do reprezentowania wartości null.  
  
 Jeśli aplikacja określa typ bazy danych, wiązana wartość jest konwertowana na tego typu, gdy dostawca wysyła dane do serwera. Dostawca próbuje przekonwertować dowolnego typu wartości, jeśli obsługuje <xref:System.IConvertible> interfejsu. Może spowodować błędy konwersji, jeśli określony typ nie jest zgodny z wartością.  
  
 <xref:System.Data.SqlClient.SqlParameter.Value%2A> Właściwości jest zastępowany przez <xref:System.Data.Common.DbDataAdapter.Update%2A>.  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie klasy implementującej <xref:System.Data.SqlClient.SqlParameter>i ustawia niektóre jego właściwości.  
  
 [!code-csharp[Classic WebData SqlParameter.Value Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Value Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.Value Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Value Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>