<Type Name="IDataParameter" FullName="System.Data.IDataParameter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bb507198ca6abf7062bbe907899c985b94fab73a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69367263" /></Metadata><TypeSignature Language="C#" Value="public interface IDataParameter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataParameter" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDataParameter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataParameter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataParameter" />
  <TypeSignature Language="F#" Value="type IDataParameter = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje parametr do obiektu polecenia, opcjonalnie jego mapowanie do <see cref="T:System.Data.DataSet" /> kolumn i jest implementowany przez .NET Framework dostawców danych, którzy uzyskują dostęp do źródeł danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.IDataParameter> Interfejs umożliwia dziedziczenie klasy w celu zaimplementowania klasy parametrów, która reprezentuje parametr do obiektu polecenia. Aby uzyskać więcej informacji na temat klas parametrów, zobacz [Konfigurowanie parametrów i typów danych parametrów](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).  
  
 Aplikacja nie tworzy wystąpienia <xref:System.Data.IDataParameter> interfejsu bezpośrednio, ale tworzy wystąpienie klasy, która dziedziczy. <xref:System.Data.IDataParameter>  
  
 Klasy dziedziczące <xref:System.Data.IDataParameter> muszą implementować dziedziczone elementy członkowskie i zwykle definiują dodatkowe elementy członkowskie do dodawania funkcji specyficznych dla dostawcy. Na przykład <xref:System.Data.IDataParameter> Interfejs <xref:System.Data.IDataParameter.DbType%2A> definiuje właściwość. Z kolei <xref:System.Data.OleDb.OleDbParameter> Klasa dziedziczy tę właściwość, a także <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> definiuje właściwość.  
  
   
  
## Examples  
 Poniższy przykład tworzy wiele wystąpień klasy <xref:System.Data.SqlClient.SqlParameter>pochodnej, <xref:System.Data.SqlClient.SqlParameterCollection> za pomocą kolekcji w ramach <xref:System.Data.SqlClient.SqlDataAdapter>. Te parametry służą do wybierania danych ze źródła danych i umieszczania danych w <xref:System.Data.DataSet>. W tym przykładzie przyjęto <xref:System.Data.DataSet> założenie <xref:System.Data.SqlClient.SqlDataAdapter> , że a i zostały już utworzone z odpowiednimi schematami, poleceniami i połączeniem.  
  
 [!code-csharp[Classic WebData SqlParameter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Aby podwyższyć poziom spójności między dostawcami danych .NET Framework, nadaj nazwę klasy dziedziczonej <paramref name="Prv" /> w <paramref name="Prv" /> parametrze, gdzie jest jednolite Prefiks określony dla wszystkich klas w określonej przestrzeni nazw dostawcy danych .NET Framework. Na przykład, <paramref name="Sql" /> jest prefiksem <see cref="T:System.Data.SqlClient.SqlCommand" /> klasy w <see langword="System.Data.SqlClient" /> przestrzeni nazw.  
  
W przypadku dziedziczenia z <see cref="T:System.Data.IDataParameter" /> interfejsu należy zaimplementować następujące konstruktory: 
 <list type="table"><listheader><term> Element 
 </term><description> Opis 
 </description></listheader><item><term> PrvParameter() 
 </term><description> Inicjuje nowe wystąpienie klasy Parameter.  
  
 </description></item><item><term> PrvParameter (Nazwa ciągu, PrvDbType typu danych) 
 </term><description> Inicjuje nowe wystąpienie klasy Parameter z nazwą parametru i typem danych.  
  
 </description></item><item><term> PrvParameter (Nazwa ciągu, wartość obiektu) 
 </term><description> Inicjuje nowe wystąpienie klasy Parameter z nazwą parametru i obiektem, który jest wartością parametru.  
  
 </description></item><item><term> PrvParameter (Nazwa ciągu, PrvDbType, rozmiar int) 
 </term><description> Inicjuje nowe wystąpienie klasy Parameter z nazwą parametru, typem danych i szerokością.  
  
 </description></item><item><term> PrvParameter (Nazwa ciągu, PrvDbType, rozmiar int, ciąg srcColumn) 
 </term><description> Inicjuje nowe wystąpienie klasy DbParameter z nazwą parametru, typem danych, szerokością i nazwą kolumny źródłowej.  
  
 </description></item><item><term> PrvParameter (String ParameterName, PrvDbType dbType, int size, ParameterDirection Direction, Boolean IsNullable IsNull, precyzja bajtów, skala bajtów, ciąg srcColumn, DataRowVersion srcVersion, wartość obiektu) 
 </term><description> Inicjuje nowe wystąpienie <see cref="T:System.Data.OleDb.OleDbParameter" /> klasy z nazwą parametru, typem danych, szerokością, nazwą kolumny źródłowej, kierunkiem parametru, dokładnością liczbową i innymi właściwościami.  
  
 </description></item></list></para></block>
  </Docs>
  <Members>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public System.Data.DbType DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DbType DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Property DbType As DbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DbType DbType { System::Data::DbType get(); void set(System::Data::DbType value); };" />
      <MemberSignature Language="F#" Value="member this.DbType : System.Data.DbType with get, set" Usage="System.Data.IDataParameter.DbType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Data.DbType" /> parametr.</summary>
        <value>Jedna z <see cref="T:System.Data.DbType" /> wartości. Wartość domyślna to <see cref="F:System.Data.DbType.String" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 PrvDbType (gdzie PRV reprezentuje prefiks specyficzny dla dostawcy) i <xref:System.Data.SqlClient.SqlParameter.DbType%2A> są połączone. W związku z tym <xref:System.Data.SqlClient.SqlParameter.DbType%2A> , ustawienie zmiany PrvDbType na pomocniczą PrvDbType.  
  
 Aby zapoznać się z listą obsługiwanych typów danych, zobacz odpowiedni PrvDbType .NET Framework dostawcy danych. Aby uzyskać więcej informacji, zobacz [DataAdapter Parameters](~/docs/framework/data/adonet/dataadapter-parameters.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość nie została ustawiona jako prawidłowa <see cref="T:System.Data.DbType" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public System.Data.ParameterDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ParameterDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As ParameterDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::ParameterDirection Direction { System::Data::ParameterDirection get(); void set(System::Data::ParameterDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Data.ParameterDirection with get, set" Usage="System.Data.IDataParameter.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.ParameterDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy parametr jest tylko wejściowy, tylko wyjście, dwukierunkowa lub parametr wartości zwracanej procedury składowanej.</summary>
        <value>Jedna z <see cref="T:System.Data.ParameterDirection" /> wartości. Wartość domyślna to <see langword="Input" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli jest wyjście, a wykonywanie skojarzone <xref:System.Data.SqlClient.SqlCommand> nie <xref:System.Data.IDataParameter> zwraca wartości, zawiera wartość null. <xref:System.Data.ParameterDirection>  
  
 Po zakończeniu ostatniego wiersza z ostatniego zestawu wyników są `Output`aktualizowane parametry,, `InputOut`i `ReturnValue` .  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie klasy implementującej, <xref:System.Data.SqlClient.SqlParameter>i ustawia niektóre jej właściwości.  
  
 [!code-csharp[Classic WebData SqlParameter.Direction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Direction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.Direction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Direction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Właściwość nie została ustawiona na jedną z prawidłowych <see cref="T:System.Data.ParameterDirection" /> wartości.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool" Usage="System.Data.IDataParameter.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy parametr akceptuje wartości null.</summary>
        <value><see langword="true" />Jeśli wartości null są akceptowane; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartości null są obsługiwane za pomocą <xref:System.DBNull> klasy.  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie klasy implementującej, <xref:System.Data.SqlClient.SqlParameter>i ustawia niektóre jej właściwości.  
  
 [!code-csharp[Classic WebData SqlParameter.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterName">
      <MemberSignature Language="C#" Value="public string ParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.ParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property ParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ParameterName : string with get, set" Usage="System.Data.IDataParameter.ParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę <see cref="T:System.Data.IDataParameter" />.</summary>
        <value>Nazwa <see cref="T:System.Data.IDataParameter" />. Wartość domyślna to pusty ciąg.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 Wartość <xref:System.Data.IDataParameter.ParameterName%2A> jest określona w formularzu \@ *paramName*. Przed wykonaniem <xref:System.Data.IDataParameter.ParameterName%2A> polecenia, które opiera się na parametrach, należy ustawić.  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie klasy implementującej, <xref:System.Data.SqlClient.SqlParameter>i ustawia niektóre jej właściwości.  
  
 [!code-csharp[Classic WebData SqlParameter.ParameterName Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.ParameterName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.ParameterName Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.ParameterName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumn">
      <MemberSignature Language="C#" Value="public string SourceColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceColumn" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.SourceColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceColumn As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceColumn { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceColumn : string with get, set" Usage="System.Data.IDataParameter.SourceColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę kolumny źródłowej, która jest mapowana na <see cref="T:System.Data.DataSet" /> i użyta do załadowania lub <see cref="P:System.Data.IDataParameter.Value" />zwrócenia.</summary>
        <value>Nazwa kolumny źródłowej, która jest mapowana na <see cref="T:System.Data.DataSet" />. Wartość domyślna to pusty ciąg.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Łącze między wartością <xref:System.Data.IDataParameter> <xref:System.Data.DataTable> i może być dwukierunkowe w zależności od wartości <xref:System.Data.IDataParameter.Direction%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie klasy implementującej, <xref:System.Data.SqlClient.SqlParameter>i ustawia niektóre jej właściwości.  
  
 [!code-csharp[Classic WebData SqlParameter.SourceColumn Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SourceColumn Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SourceColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SourceColumn Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceVersion">
      <MemberSignature Language="C#" Value="public System.Data.DataRowVersion SourceVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowVersion SourceVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.SourceVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceVersion As DataRowVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRowVersion SourceVersion { System::Data::DataRowVersion get(); void set(System::Data::DataRowVersion value); };" />
      <MemberSignature Language="F#" Value="member this.SourceVersion : System.Data.DataRowVersion with get, set" Usage="System.Data.IDataParameter.SourceVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Data.DataRowVersion" /> do użycia podczas ładowania <see cref="P:System.Data.IDataParameter.Value" />.</summary>
        <value>Jedna z <see cref="T:System.Data.DataRowVersion" /> wartości. Wartość domyślna to <see langword="Current" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest używana przez <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> <xref:System.Data.Common.DbDataAdapter.Update%2A> program w celu ustalenia, czy oryginalna lub bieżąca wartość jest używana jako wartość parametru. Dzięki temu klucze podstawowe mają być aktualizowane. Ta właściwość jest ignorowana przez <xref:System.Data.IDbDataAdapter.InsertCommand%2A> i <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>. Ta właściwość jest ustawiona na <xref:System.Data.DataRow> wersję użytą <xref:System.Data.DataRow.Item%2A> przez właściwość <xref:System.Data.DataRow> lub <xref:System.Data.DataRow.GetChildRows%2A> metodę obiektu.  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie klasy implementującej, <xref:System.Data.SqlClient.SqlParameter>i ustawia niektóre jej właściwości.  
  
 [!code-csharp[Classic WebData SqlParameter.SourceVersion Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SourceVersion Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SourceVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SourceVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Właściwość nie została ustawiona na jedną z <see cref="T:System.Data.DataRowVersion" /> wartości.</exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Data.IDataParameter.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość parametru.</summary>
        <value><see cref="T:System.Object" /> Jest to wartość parametru. Wartość domyślna to null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku parametrów wejściowych wartość jest powiązana z <xref:System.Data.IDbCommand> , która jest wysyłana do serwera. W przypadku parametrów danych wyjściowych i zwracanych wartość jest ustawiana po zakończeniu <xref:System.Data.IDbCommand> i <xref:System.Data.IDataReader> po zamknięciu.  
  
 Podczas wysyłania wartości parametru o wartości null do serwera, użytkownik musi określić `DBNull`, a nie wartość null. Wartość null w systemie jest pustym obiektem, który nie ma wartości. `DBNull`służy do reprezentowania wartości null.  
  
 Jeśli aplikacja określa typ bazy danych, wartość związana jest konwertowana na ten typ, gdy dostawca wysyła dane do serwera. Dostawca próbuje skonwertować dowolny typ wartości, <xref:System.IConvertible> Jeśli obsługuje interfejs. Błędy konwersji mogą wynikać, jeśli określony typ nie jest zgodny z wartością.  
  
 Właściwość jest zastępowana przez <xref:System.Data.Common.DbDataAdapter.Update%2A>. <xref:System.Data.SqlClient.SqlParameter.Value%2A>  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie klasy implementującej, <xref:System.Data.SqlClient.SqlParameter>i ustawia niektóre jej właściwości.  
  
 [!code-csharp[Classic WebData SqlParameter.Value Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Value Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.Value Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Value Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
