<Type Name="DataRelation" FullName="System.Data.DataRelation">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5a25ab19a92c9604b56de3fce2e0bc3e244b7d63" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36678829" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataRelation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataRelation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataRelation" />
  <TypeSignature Language="VB.NET" Value="Public Class DataRelation" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataRelation" />
  <TypeSignature Language="F#" Value="type DataRelation = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("RelationName")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataRelationEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.RelationshipConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje relacji nadrzędny/podrzędny między dwiema <see cref="T:System.Data.DataTable" /> obiektów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Data.DataRelation> jest używany do tworzenia powiązań dwa <xref:System.Data.DataTable> obiektów ze sobą za pośrednictwem <xref:System.Data.DataColumn> obiektów. Na przykład w relacji zamówienia/tabeli Klienci jest nadrzędny i tabeli zamówienia jest elementem podrzędnym relacji. Jest to podobne do podstawowego relacji klucza obcego/klucz. Aby uzyskać więcej informacji, zobacz [nawigowanie po DataRelations](~/docs/framework/data/adonet/dataset-datatable-dataview/navigating-datarelations.md).  
  
 Relacje są tworzone między kolumnami w tabeli nadrzędnej i podrzędnej. Oznacza to, że <xref:System.Data.DataColumn.DataType%2A> wartość dla obu kolumn muszą być takie same.  
  
 Relacje można również kaskadowo różnych zmian z obiektu nadrzędnego <xref:System.Data.DataRow> do jego wierszy podrzędnych. Aby kontrolować sposób wartości są zmieniane w wiersze podrzędne, Dodaj <xref:System.Data.ForeignKeyConstraint> do <xref:System.Data.ConstraintCollection> z <xref:System.Data.DataTable> obiektu. <xref:System.Data.ConstraintCollection> Określa, jakie działania w sytuacji, gdy wartości w tabeli nadrzędnej został usunięty lub zaktualizowany.  
  
 Gdy <xref:System.Data.DataRelation> jest tworzony, najpierw sprawdza można ustanowić relacji. Po dodaniu do <xref:System.Data.DataRelationCollection>, relacja obsługiwany przez brak zezwolenia wszelkie zmiany, które spowoduje unieważnienie go. Między okresem podczas <xref:System.Data.DataRelation> jest tworzony i dodawany do <xref:System.Data.DataRelationCollection>, jest możliwe wprowadzenie dodatkowych zmian w do wierszy nadrzędnych i podrzędnych. Wyjątek jest generowany, jeśli spowoduje relację, która nie jest już prawidłowy.  
  
> [!NOTE]
>  Jeśli zdefiniowano dwukierunkową relację między dwiema tabelami, może spowodować uszkodzenie danych. Relacja dwukierunkowego składa się z dwóch `DataRelation` obiektów, które same kolumny z przełączaniem rolami nadrzędny podrzędny. Nie wystąpił wyjątek podczas `DataRelation` obiekty są zapisywane; jednak może spowodować uszkodzenie danych.  
  
 <xref:System.Data.DataRelation> obiekty są zawarte w <xref:System.Data.DataRelationCollection>, które jest dostępne za pośrednictwem <xref:System.Data.DataSet.Relations%2A> właściwość <xref:System.Data.DataSet>i <xref:System.Data.DataTable.ChildRelations%2A> i <xref:System.Data.DataTable.ParentRelations%2A> właściwości <xref:System.Data.DataTable>.  
  
   
  
## Examples  
 Poniższy przykład tworzy nowy <xref:System.Data.DataRelation> i dodaje go do <xref:System.Data.DataRelationCollection> z <xref:System.Data.DataSet>.  
  
 [!code-csharp[Classic WebData DataRelation Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRelation Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRelation Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Tego typu są bezpieczne dla operacji wielowątkowych odczytu. Wszystkie operacje zapisu należy przeprowadzić synchronizację.</threadsafe>
    <altmember cref="P:System.Data.DataTable.ChildRelations" />
    <altmember cref="T:System.Data.DataColumn" />
    <altmember cref="T:System.Data.DataSet" />
    <altmember cref="T:System.Data.ForeignKeyConstraint" />
    <altmember cref="T:System.Data.DataRelationCollection" />
    <altmember cref="T:System.Data.UniqueConstraint" />
    <altmember cref="P:System.Data.DataTable.ParentRelations" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.DataRelation" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataRelation (string relationName, System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string relationName, class System.Data.DataColumn parentColumn, class System.Data.DataColumn childColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (relationName As String, parentColumn As DataColumn, childColumn As DataColumn)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataRelation(System::String ^ relationName, System::Data::DataColumn ^ parentColumn, System::Data::DataColumn ^ childColumn);" />
      <MemberSignature Language="F#" Value="new System.Data.DataRelation : string * System.Data.DataColumn * System.Data.DataColumn -&gt; System.Data.DataRelation" Usage="new System.Data.DataRelation (relationName, parentColumn, childColumn)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="parentColumn" Type="System.Data.DataColumn" />
        <Parameter Name="childColumn" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="relationName">Nazwa <see cref="T:System.Data.DataRelation" />. Jeśli <see langword="null" /> lub ciąg pusty (""), otrzyma nazwę domyślną, gdy utworzony obiekt zostanie dodany do <see cref="T:System.Data.DataRelationCollection" />.</param>
        <param name="parentColumn">Element nadrzędny <see cref="T:System.Data.DataColumn" /> w relacji.</param>
        <param name="childColumn">Obiekt podrzędny <see cref="T:System.Data.DataColumn" /> w relacji.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.DataRelation" /> przy użyciu określonego <see cref="T:System.Data.DataRelation" /> nazwa i nadrzędne i podrzędne <see cref="T:System.Data.DataColumn" /> obiektów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy nowy <xref:System.Data.DataRelation> i dodaje go do <xref:System.Data.DataRelationCollection> z <xref:System.Data.DataSet>.  
  
 [!code-csharp[Classic WebData DataRelation.DataRelation#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRelation.DataRelation/CS/datarelation.cs#1)]
 [!code-vb[Classic WebData DataRelation.DataRelation#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.DataRelation/VB/datarelation.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Jedno lub oba <see cref="T:System.Data.DataColumn" /> zawiera obiekty <see langword="null" />.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Kolumny mają różne typy danych - lub - tabele nie należą do tej samej <see cref="T:System.Data.DataSet" />.</exception>
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="P:System.Data.DataRelation.RelationName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataRelation (string relationName, System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string relationName, class System.Data.DataColumn[] parentColumns, class System.Data.DataColumn[] childColumns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (relationName As String, parentColumns As DataColumn(), childColumns As DataColumn())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataRelation(System::String ^ relationName, cli::array &lt;System::Data::DataColumn ^&gt; ^ parentColumns, cli::array &lt;System::Data::DataColumn ^&gt; ^ childColumns);" />
      <MemberSignature Language="F#" Value="new System.Data.DataRelation : string * System.Data.DataColumn[] * System.Data.DataColumn[] -&gt; System.Data.DataRelation" Usage="new System.Data.DataRelation (relationName, parentColumns, childColumns)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="parentColumns" Type="System.Data.DataColumn[]" />
        <Parameter Name="childColumns" Type="System.Data.DataColumn[]" />
      </Parameters>
      <Docs>
        <param name="relationName">Nazwa relacji. Jeśli <see langword="null" /> lub ciąg pusty (""), otrzyma nazwę domyślną, gdy utworzony obiekt zostanie dodany do <see cref="T:System.Data.DataRelationCollection" />.</param>
        <param name="parentColumns">Tablica nadrzędnej <see cref="T:System.Data.DataColumn" /> obiektów.</param>
        <param name="childColumns">Tablica podrzędnych <see cref="T:System.Data.DataColumn" /> obiektów.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.DataRelation" /> przy użyciu określonego <see cref="T:System.Data.DataRelation" /> nazwa i dopasowanych tablice obiektów nadrzędnych i podrzędnych <see cref="T:System.Data.DataColumn" /> obiektów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy nowy <xref:System.Data.DataRelation> i dodaje go do <xref:System.Data.DataRelationCollection> z <xref:System.Data.DataSet>.  
  
 [!code-vb[Classic WebData DataRelation.DataRelation2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.DataRelation2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Jedno lub oba <see cref="T:System.Data.DataColumn" /> zawiera obiekty <see langword="null" />.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">
          <see cref="T:System.Data.DataColumn" /> Obiekty mają dane różnych typów - lub - jednego lub obu tablic nie składają się z różnych kolumn z tej samej tabeli.  - Lub - tabele nie należą do tej samej <see cref="T:System.Data.DataSet" />.</exception>
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="T:System.Data.ForeignKeyConstraint" />
        <altmember cref="P:System.Data.DataRelation.RelationName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataRelation (string relationName, System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn, bool createConstraints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string relationName, class System.Data.DataColumn parentColumn, class System.Data.DataColumn childColumn, bool createConstraints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (relationName As String, parentColumn As DataColumn, childColumn As DataColumn, createConstraints As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataRelation(System::String ^ relationName, System::Data::DataColumn ^ parentColumn, System::Data::DataColumn ^ childColumn, bool createConstraints);" />
      <MemberSignature Language="F#" Value="new System.Data.DataRelation : string * System.Data.DataColumn * System.Data.DataColumn * bool -&gt; System.Data.DataRelation" Usage="new System.Data.DataRelation (relationName, parentColumn, childColumn, createConstraints)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="parentColumn" Type="System.Data.DataColumn" />
        <Parameter Name="childColumn" Type="System.Data.DataColumn" />
        <Parameter Name="createConstraints" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="relationName">Nazwa relacji. Jeśli <see langword="null" /> lub ciąg pusty (""), otrzyma nazwę domyślną, gdy utworzony obiekt zostanie dodany do <see cref="T:System.Data.DataRelationCollection" />.</param>
        <param name="parentColumn">Element nadrzędny <see cref="T:System.Data.DataColumn" /> w relacji.</param>
        <param name="childColumn">Obiekt podrzędny <see cref="T:System.Data.DataColumn" /> w relacji.</param>
        <param name="createConstraints">Wartość, która wskazuje, czy ograniczenia są tworzone. <see langword="true" />, jeśli ograniczenia są tworzone. w przeciwnym razie <see langword="false" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.DataRelation" /> przy użyciu określonej nazwy nadrzędną i podrzędną <see cref="T:System.Data.DataColumn" /> obiektów i wartość, która wskazuje, czy można utworzyć ograniczenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy nowy <xref:System.Data.DataRelation> i dodaje go do <xref:System.Data.DataRelationCollection> z <xref:System.Data.DataSet>.  
  
 [!code-vb[Classic WebData DataRelation.DataRelation1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.DataRelation1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Jedno lub oba <see cref="T:System.Data.DataColumn" /> zawiera obiekty <see langword="null" />.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Kolumny mają różne typy danych - lub - tabele nie należą do tej samej <see cref="T:System.Data.DataSet" />.</exception>
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="T:System.Data.ForeignKeyConstraint" />
        <altmember cref="P:System.Data.DataRelation.RelationName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataRelation (string relationName, System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns, bool createConstraints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string relationName, class System.Data.DataColumn[] parentColumns, class System.Data.DataColumn[] childColumns, bool createConstraints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (relationName As String, parentColumns As DataColumn(), childColumns As DataColumn(), createConstraints As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataRelation(System::String ^ relationName, cli::array &lt;System::Data::DataColumn ^&gt; ^ parentColumns, cli::array &lt;System::Data::DataColumn ^&gt; ^ childColumns, bool createConstraints);" />
      <MemberSignature Language="F#" Value="new System.Data.DataRelation : string * System.Data.DataColumn[] * System.Data.DataColumn[] * bool -&gt; System.Data.DataRelation" Usage="new System.Data.DataRelation (relationName, parentColumns, childColumns, createConstraints)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="parentColumns" Type="System.Data.DataColumn[]" />
        <Parameter Name="childColumns" Type="System.Data.DataColumn[]" />
        <Parameter Name="createConstraints" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="relationName">Nazwa relacji. Jeśli <see langword="null" /> lub ciąg pusty (""), otrzyma nazwę domyślną, gdy utworzony obiekt zostanie dodany do <see cref="T:System.Data.DataRelationCollection" />.</param>
        <param name="parentColumns">Tablica nadrzędnej <see cref="T:System.Data.DataColumn" /> obiektów.</param>
        <param name="childColumns">Tablica podrzędnych <see cref="T:System.Data.DataColumn" /> obiektów.</param>
        <param name="createConstraints">Wartość, która wskazuje, czy można utworzyć ograniczenia. <see langword="true" />, jeśli ograniczenia są tworzone. w przeciwnym razie <see langword="false" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.DataRelation" /> przy użyciu określonej nazwy dopasowane tablice elementów nadrzędnych i podrzędnych <see cref="T:System.Data.DataColumn" /> obiektów i wartość, która wskazuje, czy można utworzyć ograniczenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy nowy <xref:System.Data.DataRelation> i dodaje go do <xref:System.Data.DataRelationCollection> z <xref:System.Data.DataSet>.  
  
 [!code-vb[Classic WebData DataRelation.DataRelation3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.DataRelation3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Jedno lub oba <see cref="T:System.Data.DataColumn" /> obiektów jest <see langword="null" />.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Kolumny mają różne typy danych - lub - tabele nie należą do tej samej <see cref="T:System.Data.DataSet" />.</exception>
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="T:System.Data.ForeignKeyConstraint" />
        <altmember cref="P:System.Data.DataRelation.RelationName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataRelation (string relationName, string parentTableName, string childTableName, string[] parentColumnNames, string[] childColumnNames, bool nested);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string relationName, string parentTableName, string childTableName, string[] parentColumnNames, string[] childColumnNames, bool nested) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (relationName As String, parentTableName As String, childTableName As String, parentColumnNames As String(), childColumnNames As String(), nested As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataRelation(System::String ^ relationName, System::String ^ parentTableName, System::String ^ childTableName, cli::array &lt;System::String ^&gt; ^ parentColumnNames, cli::array &lt;System::String ^&gt; ^ childColumnNames, bool nested);" />
      <MemberSignature Language="F#" Value="new System.Data.DataRelation : string * string * string * string[] * string[] * bool -&gt; System.Data.DataRelation" Usage="new System.Data.DataRelation (relationName, parentTableName, childTableName, parentColumnNames, childColumnNames, nested)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="parentTableName" Type="System.String" />
        <Parameter Name="childTableName" Type="System.String" />
        <Parameter Name="parentColumnNames" Type="System.String[]" />
        <Parameter Name="childColumnNames" Type="System.String[]" />
        <Parameter Name="nested" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="relationName">Nazwa relacji. Jeśli <see langword="null" /> lub ciąg pusty (""), otrzyma nazwę domyślną, gdy utworzony obiekt zostanie dodany do <see cref="T:System.Data.DataRelationCollection" />.</param>
        <param name="parentTableName">Nazwa <see cref="T:System.Data.DataTable" /> czyli tabeli nadrzędnej w relacji.</param>
        <param name="childTableName">Nazwa <see cref="T:System.Data.DataTable" /> który jest tabelą podrzędną relacji.</param>
        <param name="parentColumnNames">Tablica <see cref="T:System.Data.DataColumn" /> nazwy w obiekcie nadrzędnym obiektów <see cref="T:System.Data.DataTable" /> relacji.</param>
        <param name="childColumnNames">Tablica <see cref="T:System.Data.DataColumn" /> nazwy w podrzędnych obiektów <see cref="T:System.Data.DataTable" /> relacji.</param>
        <param name="nested">Wartość, która wskazuje, czy relacje są zagnieżdżone.</param>
        <summary>Ten konstruktor zapewnia obsługę w czasie projektowania w środowisku Visual Studio.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wszelkie <xref:System.Data.DataRelation> obiektu utworzonego za pomocą tego konstruktora musi zostać dodany do kolekcji z <xref:System.Data.DataRelationCollection.AddRange%2A> metody wewnątrz <xref:System.Data.DataTable.BeginInit%2A> i <xref:System.Data.DataTable.EndInit%2A> bloku. Jeśli ten konstruktor nie jest wywoływany między <xref:System.Data.DataTable.BeginInit%2A> i <xref:System.Data.DataTable.EndInit%2A> <xref:System.NullReferenceException> zostanie przeprowadzona. Ponadto tabele i kolumny z określonymi nazwami musi istnieć w momencie wywołania konstruktora.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataRelation (string relationName, string parentTableName, string parentTableNamespace, string childTableName, string childTableNamespace, string[] parentColumnNames, string[] childColumnNames, bool nested);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string relationName, string parentTableName, string parentTableNamespace, string childTableName, string childTableNamespace, string[] parentColumnNames, string[] childColumnNames, bool nested) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (relationName As String, parentTableName As String, parentTableNamespace As String, childTableName As String, childTableNamespace As String, parentColumnNames As String(), childColumnNames As String(), nested As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataRelation(System::String ^ relationName, System::String ^ parentTableName, System::String ^ parentTableNamespace, System::String ^ childTableName, System::String ^ childTableNamespace, cli::array &lt;System::String ^&gt; ^ parentColumnNames, cli::array &lt;System::String ^&gt; ^ childColumnNames, bool nested);" />
      <MemberSignature Language="F#" Value="new System.Data.DataRelation : string * string * string * string * string * string[] * string[] * bool -&gt; System.Data.DataRelation" Usage="new System.Data.DataRelation (relationName, parentTableName, parentTableNamespace, childTableName, childTableNamespace, parentColumnNames, childColumnNames, nested)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="parentTableName" Type="System.String" />
        <Parameter Name="parentTableNamespace" Type="System.String" />
        <Parameter Name="childTableName" Type="System.String" />
        <Parameter Name="childTableNamespace" Type="System.String" />
        <Parameter Name="parentColumnNames" Type="System.String[]" />
        <Parameter Name="childColumnNames" Type="System.String[]" />
        <Parameter Name="nested" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="relationName">Nazwa <see cref="T:System.Data.DataRelation" />. Jeśli <see langword="null" /> lub ciąg pusty (""), otrzyma nazwę domyślną, gdy utworzony obiekt zostanie dodany do <see cref="T:System.Data.DataRelationCollection" />.</param>
        <param name="parentTableName">Nazwa <see cref="T:System.Data.DataTable" /> czyli tabeli nadrzędnej w relacji.</param>
        <param name="parentTableNamespace">Nazwa przestrzeni nazw tabeli nadrzędnej.</param>
        <param name="childTableName">Nazwa <see cref="T:System.Data.DataTable" /> który jest tabelą podrzędną relacji.</param>
        <param name="childTableNamespace">Nazwa przestrzeni nazw tabeli podrzędnej.</param>
        <param name="parentColumnNames">Tablica <see cref="T:System.Data.DataColumn" /> nazwy w obiekcie nadrzędnym obiektów <see cref="T:System.Data.DataTable" /> relacji.</param>
        <param name="childColumnNames">Tablica <see cref="T:System.Data.DataColumn" /> nazwy w podrzędnych obiektów <see cref="T:System.Data.DataTable" /> relacji.</param>
        <param name="nested">Wartość, która wskazuje, czy relacje są zagnieżdżone.</param>
        <summary>Ten konstruktor zapewnia obsługę w czasie projektowania w środowisku Visual Studio.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wszelkie <xref:System.Data.DataRelation> obiektu utworzonego za pomocą tego konstruktora należy następnie dodać do kolekcji z <xref:System.Data.DataRelationCollection.AddRange%2A>. Tabele i kolumny z określonymi nazwami musi istnieć w momencie wywołania metody, lub jeśli <xref:System.Data.DataTable.BeginInit%2A> została wywołana przed wywołaniem konstruktora, tabele i kolumny z określonymi nazwami musi istnieć w czasie który <xref:System.Data.DataTable.EndInit%2A> jest wywoływana.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckStateForProperty">
      <MemberSignature Language="C#" Value="protected void CheckStateForProperty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckStateForProperty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelation.CheckStateForProperty" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CheckStateForProperty ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CheckStateForProperty();" />
      <MemberSignature Language="F#" Value="member this.CheckStateForProperty : unit -&gt; unit" Usage="dataRelation.CheckStateForProperty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ta metoda obsługuje infrastrukturę programu .NET Framework i nie jest przeznaczona do użycia bezpośrednio w kodzie.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Data.DataException">Tabelą nadrzędną i podrzędną należą do różnych <see cref="T:System.Data.DataSet" /> obiektów.  - Lub - pary co najmniej jeden z obiektów nadrzędnych i podrzędnych <see cref="T:System.Data.DataColumn" /> obiekty mają niezgodne typy danych.  - Lub - nadrzędne i podrzędne <see cref="T:System.Data.DataColumn" /> obiektów są identyczne.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChildColumns">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataColumn[] ChildColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataColumn[] ChildColumns" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRelation.ChildColumns" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ChildColumns As DataColumn()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Data::DataColumn ^&gt; ^ ChildColumns { cli::array &lt;System::Data::DataColumn ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildColumns : System.Data.DataColumn[]" Usage="System.Data.DataRelation.ChildColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt podrzędny <see cref="T:System.Data.DataColumn" /> obiektów tej relacji.</summary>
        <value>Tablica <see cref="T:System.Data.DataColumn" /> obiektów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pobiera podrzędne <xref:System.Data.DataColumn> obiektów <xref:System.Data.DataRelation>.  
  
 [!code-vb[Classic WebData DataRelation.ChildColumns Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.ChildColumns Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="P:System.Data.DataRelation.ParentColumns" />
      </Docs>
    </Member>
    <Member MemberName="ChildKeyConstraint">
      <MemberSignature Language="C#" Value="public virtual System.Data.ForeignKeyConstraint ChildKeyConstraint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.ForeignKeyConstraint ChildKeyConstraint" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRelation.ChildKeyConstraint" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ChildKeyConstraint As ForeignKeyConstraint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ForeignKeyConstraint ^ ChildKeyConstraint { System::Data::ForeignKeyConstraint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildKeyConstraint : System.Data.ForeignKeyConstraint" Usage="System.Data.DataRelation.ChildKeyConstraint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.ForeignKeyConstraint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Data.ForeignKeyConstraint" /> dla relacji.</summary>
        <value>A <see langword="ForeignKeyConstraint" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie skojarzone <xref:System.Data.ForeignKeyConstraint> istnieje dla tej relacji, zostanie ono utworzone automatycznie i wskazywanego przez `ChildKeyConstraint`, gdy relacja zostanie dodany do kolekcji relacji.  
  
   
  
## Examples  
 W poniższym przykładzie `UpdateRule`, `DeleteRule`, i `AcceptReject` reguły dla `ForeignKeyConstraint` skojarzone z `DataRelation`.  
  
 [!code-vb[Classic WebData DataRelation.ChildKeyConstraint Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.ChildKeyConstraint Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.AcceptRejectRule" />
        <altmember cref="P:System.Data.DataRelation.ParentKeyConstraint" />
        <altmember cref="T:System.Data.Rule" />
      </Docs>
    </Member>
    <Member MemberName="ChildTable">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataTable ChildTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataTable ChildTable" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRelation.ChildTable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ChildTable As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::DataTable ^ ChildTable { System::Data::DataTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildTable : System.Data.DataTable" Usage="System.Data.DataRelation.ChildTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera tabelą podrzędną tej relacji.</summary>
        <value>A <see cref="T:System.Data.DataTable" /> który jest tabelą podrzędną relacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pobiera podrzędne <xref:System.Data.DataTable> z <xref:System.Data.DataRelation>.  
  
 [!code-vb[Classic WebData DataRelation.ChildTable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.ChildTable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataRelation.ParentTable" />
      </Docs>
    </Member>
    <Member MemberName="DataSet">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataSet DataSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataSet DataSet" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRelation.DataSet" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataSet As DataSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::DataSet ^ DataSet { System::Data::DataSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSet : System.Data.DataSet" Usage="System.Data.DataRelation.DataSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Data.DataSet" /> do którego <see cref="T:System.Data.DataRelation" /> należy.</summary>
        <value>A <see cref="T:System.Data.DataSet" /> do którego <see cref="T:System.Data.DataRelation" /> należy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataRelationCollection> Skojarzone z <xref:System.Data.DataSet> jest dostępny za pośrednictwem <xref:System.Data.DataSet.Relations%2A> właściwość <xref:System.Data.DataSet> obiektu.  
  
   
  
## Examples  
 Poniższy przykład pobiera <xref:System.Data.DataSet> z <xref:System.Data.DataRelation>.  
  
 [!code-vb[Classic WebData DataRelation.DataSet Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.DataSet Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="P:System.Data.DataSet.Relations" />
        <altmember cref="T:System.Data.DataRelationCollection" />
      </Docs>
    </Member>
    <Member MemberName="ExtendedProperties">
      <MemberSignature Language="C#" Value="public System.Data.PropertyCollection ExtendedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.PropertyCollection ExtendedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRelation.ExtendedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtendedProperties As PropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::PropertyCollection ^ ExtendedProperties { System::Data::PropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExtendedProperties : System.Data.PropertyCollection" Usage="System.Data.DataRelation.ExtendedProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.PropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję, która przechowuje niestandardowe właściwości.</summary>
        <value>A <see cref="T:System.Data.PropertyCollection" /> zawierający niestandardowe właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Data.DataRelation.ExtendedProperties%2A> Dodawanie niestandardowych informacji do <xref:System.Data.DataRelation> obiektu. Dodaj informacje z metody Add. Pobierać informacje z metodą elementu.  
  
 Rozszerzone właściwości musi być typu <xref:System.String>. Właściwości, które nie są typu ciąg nie są zachowywane podczas <xref:System.Data.DataRelation> jest zapisywany w formacie XML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Nested">
      <MemberSignature Language="C#" Value="public virtual bool Nested { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Nested" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRelation.Nested" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Nested As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Nested { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Nested : bool with get, set" Usage="System.Data.DataRelation.Nested" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Data.DataRelation" /> obiekty są zagnieżdżone.</summary>
        <value>
          <see langword="true" />, jeśli <see cref="T:System.Data.DataRelation" /> obiekty są zagnieżdżone w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć <xref:System.Data.DataRelation> obiektów, aby zdefiniować relacje hierarchiczne, takich jak określone w pliku XML. Aby uzyskać więcej informacji, zobacz [zagnieżdżania DataRelations](~/docs/framework/data/adonet/dataset-datatable-dataview/nesting-datarelations.md).  
  
> [!NOTE]
>  Jeśli <xref:System.Data.DataTable.TableName%2A> tabeli podrzędnej w relacji odpowiada <xref:System.Data.DataColumn.ColumnName%2A> kolumny w tabeli nadrzędnej w relacji, <xref:System.Data.DataRelation.Nested%2A> właściwość musi mieć wartość false. To nie wymagają programu .NET Framework w wersji 1.0.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanging">
      <MemberSignature Language="C#" Value="protected internal void OnPropertyChanging (System.ComponentModel.PropertyChangedEventArgs pcevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnPropertyChanging(class System.ComponentModel.PropertyChangedEventArgs pcevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelation.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub OnPropertyChanging (pcevent As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void OnPropertyChanging(System::ComponentModel::PropertyChangedEventArgs ^ pcevent);" />
      <MemberSignature Language="F#" Value="member this.OnPropertyChanging : System.ComponentModel.PropertyChangedEventArgs -&gt; unit" Usage="dataRelation.OnPropertyChanging pcevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcevent" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="pcevent">Odwołania do parametru.</param>
        <summary>Ten element członkowski obsługuje infrastrukturę programu .NET Framework i nie jest przeznaczony do użycia bezpośrednio w kodzie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentColumns">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataColumn[] ParentColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataColumn[] ParentColumns" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRelation.ParentColumns" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ParentColumns As DataColumn()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Data::DataColumn ^&gt; ^ ParentColumns { cli::array &lt;System::Data::DataColumn ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentColumns : System.Data.DataColumn[]" Usage="System.Data.DataRelation.ParentColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera tablicę <see cref="T:System.Data.DataColumn" /> obiektów, które są kolumny nadrzędne tego <see cref="T:System.Data.DataRelation" />.</summary>
        <value>Tablica <see cref="T:System.Data.DataColumn" /> obiektów, które są kolumny nadrzędne tego <see cref="T:System.Data.DataRelation" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pobiera tablicę <xref:System.Data.DataColumn> obiektów, które działają jako element nadrzędny kolumn dla relacji.  
  
 [!code-vb[Classic WebData DataRelation.ParentColumns Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.ParentColumns Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="P:System.Data.DataRelation.ChildColumns" />
      </Docs>
    </Member>
    <Member MemberName="ParentKeyConstraint">
      <MemberSignature Language="C#" Value="public virtual System.Data.UniqueConstraint ParentKeyConstraint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.UniqueConstraint ParentKeyConstraint" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRelation.ParentKeyConstraint" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ParentKeyConstraint As UniqueConstraint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::UniqueConstraint ^ ParentKeyConstraint { System::Data::UniqueConstraint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentKeyConstraint : System.Data.UniqueConstraint" Usage="System.Data.DataRelation.ParentKeyConstraint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.UniqueConstraint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Data.UniqueConstraint" /> pozwala to zagwarantować, że wartości w kolumnie nadrzędnej <see cref="T:System.Data.DataRelation" /> są unikatowe.</summary>
        <value>A <see cref="T:System.Data.UniqueConstraint" /> która sprawdza, czy wartości w kolumnie nadrzędne są unikatowe.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pobiera <xref:System.Data.DataRelation.ParentKeyConstraint%2A> z <xref:System.Data.DataRelation> obiektu.  
  
 [!code-vb[Classic WebData DataRelation.ParentKeyConstraint Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.ParentKeyConstraint Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataRelation.ChildKeyConstraint" />
        <altmember cref="T:System.Data.UniqueConstraint" />
      </Docs>
    </Member>
    <Member MemberName="ParentTable">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataTable ParentTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataTable ParentTable" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRelation.ParentTable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ParentTable As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::DataTable ^ ParentTable { System::Data::DataTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentTable : System.Data.DataTable" Usage="System.Data.DataRelation.ParentTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera element nadrzędny <see cref="T:System.Data.DataTable" /> tego <see cref="T:System.Data.DataRelation" />.</summary>
        <value>A <see cref="T:System.Data.DataTable" /> czyli tabeli nadrzędnej tej relacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pobiera nadrzędnego <xref:System.Data.DataTable> z <xref:System.Data.DataRelation>.  
  
 [!code-vb[Classic WebData DataRelation.ParentTable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.ParentTable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataRelation.ChildTable" />
      </Docs>
    </Member>
    <Member MemberName="RaisePropertyChanging">
      <MemberSignature Language="C#" Value="protected internal void RaisePropertyChanging (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void RaisePropertyChanging(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelation.RaisePropertyChanging(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub RaisePropertyChanging (name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void RaisePropertyChanging(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.RaisePropertyChanging : string -&gt; unit" Usage="dataRelation.RaisePropertyChanging name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Odwołania do parametru.</param>
        <summary>Ten element członkowski obsługuje infrastrukturę programu .NET Framework i nie jest przeznaczony do użycia bezpośrednio w kodzie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationName">
      <MemberSignature Language="C#" Value="public virtual string RelationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RelationName" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRelation.RelationName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RelationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ RelationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RelationName : string with get, set" Usage="System.Data.DataRelation.RelationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę używaną do pobrania <see cref="T:System.Data.DataRelation" /> z <see cref="T:System.Data.DataRelationCollection" />.</summary>
        <value>Nazwa <see cref="T:System.Data.DataRelation" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Data.DataRelation.RelationName%2A> właściwości do pobrania <xref:System.Data.DataRelation> z <xref:System.Data.DataRelationCollection>.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Data.DataRelation.RelationName%2A> właściwości do pobrania <xref:System.Data.DataRelation> z <xref:System.Data.DataRelationCollection>.  
  
 [!code-vb[Classic WebData DataRelation.RelationName Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.RelationName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see langword="null" /> lub jest pustym ciągiem ("") został przekazany <see cref="T:System.Data.DataColumn" /> czyli <see cref="T:System.Data.DataRelation" />.</exception>
        <exception cref="T:System.Data.DuplicateNameException">
          <see cref="T:System.Data.DataRelation" /> Należy do kolekcji, która zawiera już <see cref="T:System.Data.DataRelation" /> o takiej samej nazwie.</exception>
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="T:System.Data.DataRelationCollection" />
        <altmember cref="P:System.Data.DataRelationCollection.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRelation.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dataRelation.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera <see cref="P:System.Data.DataRelation.RelationName" />, jeśli taka istnieje.</summary>
        <returns>Wartość <see cref="P:System.Data.DataRelation.RelationName" /> właściwości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Data.DataColumn.ToString%2A> właściwość, aby zwrócić nazwę <xref:System.Data.DataRelation> obiektu.  
  
 [!code-csharp[Classic WebData DataRelation.ToString Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRelation.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRelation.ToString Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRelation.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
      </Docs>
    </Member>
  </Members>
</Type>