<Type Name="EntityKey" FullName="System.Data.EntityKey">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e8524ded681b3bba62f120a5c052ed678c51cd5a" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53463286" /></Metadata><TypeSignature Language="C#" Value="public sealed class EntityKey : IEquatable&lt;System.Data.EntityKey&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit EntityKey extends System.Object implements class System.IEquatable`1&lt;class System.Data.EntityKey&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.EntityKey" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityKey&#xA;Implements IEquatable(Of EntityKey)" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntityKey sealed : IEquatable&lt;System::Data::EntityKey ^&gt;" />
  <TypeSignature Language="F#" Value="type EntityKey = class&#xA;    interface IEquatable&lt;EntityKey&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Data.EntityKey&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("{ConcatKeyValue()}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.Serialization.DataContract(IsReference=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="98a86-101">Zapewnia niezawodne odwołanie do obiektu, który jest wystąpieniem typu jednostki.</span><span class="sxs-lookup"><span data-stu-id="98a86-101">Provides a durable reference to an object that is an instance of an entity type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98a86-102"><xref:System.Data.EntityKey> Obiekty są niezmienne; oznacza to, że po zostały skonstruowane nie można ich modyfikować.</span><span class="sxs-lookup"><span data-stu-id="98a86-102">The <xref:System.Data.EntityKey> objects are immutable; that is, after they are constructed they cannot be modified.</span></span>  
  
 <span data-ttu-id="98a86-103">Aby uzyskać więcej informacji, zobacz [Praca z kluczami jednostki](https://msdn.microsoft.com/library/fe3f4206-d277-43a1-a72f-4e86fdf12b9f).</span><span class="sxs-lookup"><span data-stu-id="98a86-103">For more information, see [Working with Entity Keys](https://msdn.microsoft.com/library/fe3f4206-d277-43a1-a72f-4e86fdf12b9f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98a86-104">Te przykłady są oparte na [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="98a86-104">These examples are based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="98a86-105">W przykładach pokazano sposób tworzenia i używania <xref:System.Data.EntityKey>.</span><span class="sxs-lookup"><span data-stu-id="98a86-105">The examples show you how to create and use an <xref:System.Data.EntityKey>.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#EntityKeyClass_TryGetObjectByKey](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#entitykeyclass_trygetobjectbykey)]
 [!code-vb[DP ObjectServices Concepts#EntityKeyClass_TryGetObjectByKey](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#entitykeyclass_trygetobjectbykey)]  
  
 [!code-csharp[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#addobjectusingkey)]
 [!code-vb[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#addobjectusingkey)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="98a86-106">Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.EntityKey" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="98a86-106">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityKey();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="98a86-107">Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.EntityKey" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="98a86-107">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityKey (string qualifiedEntitySetName, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; entityKeyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string qualifiedEntitySetName, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; entityKeyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (qualifiedEntitySetName As String, entityKeyValues As IEnumerable(Of KeyValuePair(Of String, Object)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityKey(System::String ^ qualifiedEntitySetName, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ entityKeyValues);" />
      <MemberSignature Language="F#" Value="new System.Data.EntityKey : string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt; -&gt; System.Data.EntityKey" Usage="new System.Data.EntityKey (qualifiedEntitySetName, entityKeyValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="qualifiedEntitySetName" Type="System.String" />
        <Parameter Name="entityKeyValues" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="qualifiedEntitySetName"><span data-ttu-id="98a86-108">A <see cref="T:System.String" /> to nazwa zestawu jednostek, kwalifikowana przez nazwę kontenera jednostek.</span><span class="sxs-lookup"><span data-stu-id="98a86-108">A <see cref="T:System.String" /> that is the entity set name qualified by the entity container name.</span></span></param>
        <param name="entityKeyValues"><span data-ttu-id="98a86-109">Element ogólny <see cref="T:System.Collections.Generic.KeyValuePair" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="98a86-109">A generic <see cref="T:System.Collections.Generic.KeyValuePair" /> collection.</span></span>  
  
<span data-ttu-id="98a86-110">Każda para klucz/wartość ma nazwę właściwości jako klucz i wartość właściwości jako wartość.</span><span class="sxs-lookup"><span data-stu-id="98a86-110">Each key/value pair has a property name as the key and the value of that property as the value.</span></span> <span data-ttu-id="98a86-111">Powinna istnieć jedna para dla każdej właściwości, która jest częścią <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="98a86-111">There should be one pair for each property that is part of the <see cref="T:System.Data.EntityKey" />.</span></span> <span data-ttu-id="98a86-112">Kolejność par klucz/wartość nie jest ważna, ale każda właściwość klucza mają zostać uwzględnione.</span><span class="sxs-lookup"><span data-stu-id="98a86-112">The order of the key/value pairs is not important, but each key property should be included.</span></span> <span data-ttu-id="98a86-113">Nazwy właściwości są proste nazw, które nie są kwalifikowany za pomocą nazwy typu jednostki lub nazwy schematu.</span><span class="sxs-lookup"><span data-stu-id="98a86-113">The property names are simple names that are not qualified with an entity type name or the schema name.</span></span></param>
        <summary><span data-ttu-id="98a86-114">Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.EntityKey" /> klasy przy użyciu nazwy zestawu jednostek i ogólnego <see cref="T:System.Collections.Generic.KeyValuePair" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="98a86-114">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class with an entity set name and a generic <see cref="T:System.Collections.Generic.KeyValuePair" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="98a86-115">Ten przykład jest oparty na [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="98a86-115">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="98a86-116">W przykładzie pokazano sposób tworzenia i używania <xref:System.Data.EntityKey>.</span><span class="sxs-lookup"><span data-stu-id="98a86-116">The example shows you how to create and use an <xref:System.Data.EntityKey>.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#addobjectusingkey)]
 [!code-vb[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#addobjectusingkey)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityKey (string qualifiedEntitySetName, System.Collections.Generic.IEnumerable&lt;System.Data.EntityKeyMember&gt; entityKeyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string qualifiedEntitySetName, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.EntityKeyMember&gt; entityKeyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (qualifiedEntitySetName As String, entityKeyValues As IEnumerable(Of EntityKeyMember))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityKey(System::String ^ qualifiedEntitySetName, System::Collections::Generic::IEnumerable&lt;System::Data::EntityKeyMember ^&gt; ^ entityKeyValues);" />
      <MemberSignature Language="F#" Value="new System.Data.EntityKey : string * seq&lt;System.Data.EntityKeyMember&gt; -&gt; System.Data.EntityKey" Usage="new System.Data.EntityKey (qualifiedEntitySetName, entityKeyValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="qualifiedEntitySetName" Type="System.String" />
        <Parameter Name="entityKeyValues" Type="System.Collections.Generic.IEnumerable&lt;System.Data.EntityKeyMember&gt;" />
      </Parameters>
      <Docs>
        <param name="qualifiedEntitySetName"><span data-ttu-id="98a86-117">A <see cref="T:System.String" /> to nazwa zestawu jednostek, kwalifikowana przez nazwę kontenera jednostek.</span><span class="sxs-lookup"><span data-stu-id="98a86-117">A <see cref="T:System.String" /> that is the entity set name qualified by the entity container name.</span></span></param>
        <param name="entityKeyValues"><span data-ttu-id="98a86-118"><see cref="T:System.Collections.Generic.IEnumerable`1" /> Zbiór <see cref="T:System.Data.EntityKeyMember" /> obiektów za pomocą którego można zainicjować klucza.</span><span class="sxs-lookup"><span data-stu-id="98a86-118">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of <see cref="T:System.Data.EntityKeyMember" /> objects with which to initialize the key.</span></span></param>
        <summary><span data-ttu-id="98a86-119">Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.EntityKey" /> klasy za pomocą nazwy zestawu jednostek i <see cref="T:System.Collections.Generic.IEnumerable`1" /> zbiór <see cref="T:System.Data.EntityKeyMember" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="98a86-119">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class with an entity set name and an <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of <see cref="T:System.Data.EntityKeyMember" /> objects.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityKey (string qualifiedEntitySetName, string keyName, object keyValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string qualifiedEntitySetName, string keyName, object keyValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.#ctor(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (qualifiedEntitySetName As String, keyName As String, keyValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityKey(System::String ^ qualifiedEntitySetName, System::String ^ keyName, System::Object ^ keyValue);" />
      <MemberSignature Language="F#" Value="new System.Data.EntityKey : string * string * obj -&gt; System.Data.EntityKey" Usage="new System.Data.EntityKey (qualifiedEntitySetName, keyName, keyValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="qualifiedEntitySetName" Type="System.String" />
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="keyValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="qualifiedEntitySetName"><span data-ttu-id="98a86-120">A <see cref="T:System.String" /> to nazwa zestawu jednostek, kwalifikowana przez nazwę kontenera jednostek.</span><span class="sxs-lookup"><span data-stu-id="98a86-120">A <see cref="T:System.String" /> that is the entity set name qualified by the entity container name.</span></span></param>
        <param name="keyName"><span data-ttu-id="98a86-121">A <see cref="T:System.String" /> czyli nazwę klucza.</span><span class="sxs-lookup"><span data-stu-id="98a86-121">A <see cref="T:System.String" /> that is the name of the key.</span></span></param>
        <param name="keyValue"><span data-ttu-id="98a86-122"><see cref="T:System.Object" /> Czyli wartość klucza.</span><span class="sxs-lookup"><span data-stu-id="98a86-122">An <see cref="T:System.Object" /> that is the key value.</span></span></param>
        <summary><span data-ttu-id="98a86-123">Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.EntityKey" /> klasy za pomocą nazwy zestawu jednostek i pary kluczy do określonej jednostki.</span><span class="sxs-lookup"><span data-stu-id="98a86-123">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class with an entity set name and specific entity key pair.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="98a86-124">Ten przykład jest oparty na [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="98a86-124">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="98a86-125">W przykładzie pokazano sposób tworzenia i używania <xref:System.Data.EntityKey>.</span><span class="sxs-lookup"><span data-stu-id="98a86-125">The example shows you how to create and use an <xref:System.Data.EntityKey>.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#addobjectusingkey)]
 [!code-vb[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#addobjectusingkey)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityContainerName">
      <MemberSignature Language="C#" Value="public string EntityContainerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EntityContainerName" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityKey.EntityContainerName" />
      <MemberSignature Language="VB.NET" Value="Public Property EntityContainerName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EntityContainerName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EntityContainerName : string with get, set" Usage="System.Data.EntityKey.EntityContainerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.Serialization.DataMember</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98a86-126">Pobiera lub ustawia nazwę kontenera jednostek.</span><span class="sxs-lookup"><span data-stu-id="98a86-126">Gets or sets the name of the entity container.</span></span></summary>
        <value><span data-ttu-id="98a86-127">A <see cref="T:System.String" /> wartość, która jest nazwą jednostki, do którego kontener jednostek <see cref="T:System.Data.EntityKey" /> należy.</span><span class="sxs-lookup"><span data-stu-id="98a86-127">A <see cref="T:System.String" /> value that is the name of the entity container for the entity to which the <see cref="T:System.Data.EntityKey" /> belongs.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityKeyValues">
      <MemberSignature Language="C#" Value="public System.Data.EntityKeyMember[] EntityKeyValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.EntityKeyMember[] EntityKeyValues" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityKey.EntityKeyValues" />
      <MemberSignature Language="VB.NET" Value="Public Property EntityKeyValues As EntityKeyMember()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Data::EntityKeyMember ^&gt; ^ EntityKeyValues { cli::array &lt;System::Data::EntityKeyMember ^&gt; ^ get(); void set(cli::array &lt;System::Data::EntityKeyMember ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EntityKeyValues : System.Data.EntityKeyMember[] with get, set" Usage="System.Data.EntityKey.EntityKeyValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.Serialization.DataMember</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.EntityKeyMember[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98a86-128">Pobiera lub ustawia wartości kluczy skojarzone z tym <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="98a86-128">Gets or sets the key values associated with this <see cref="T:System.Data.EntityKey" />.</span></span></summary>
        <value><span data-ttu-id="98a86-129">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> wartości kluczy, w tym <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="98a86-129">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of key values for this <see cref="T:System.Data.EntityKey" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98a86-130"><xref:System.Data.EntityKey> Klasy zawiera kopię wartości, które tworzą logiczne klucz który jest określony dla tego typu jednostki.</span><span class="sxs-lookup"><span data-stu-id="98a86-130">The <xref:System.Data.EntityKey> class contains a copy of the values that make up the logical key that is specified for this type of entity.</span></span>  
  
 <span data-ttu-id="98a86-131">Elementy członkowskie <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> mają nazwę właściwości i wartość w <xref:System.Collections.Generic.KeyValuePair%602>, gdy klucz jest nazwą właściwości i wartość jest rzeczywista wartość tej właściwości w obiekcie.</span><span class="sxs-lookup"><span data-stu-id="98a86-131">The members of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> each have a property name and a value in a <xref:System.Collections.Generic.KeyValuePair%602>, where the key is the property name and the value is the actual value of that property on the object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityNotValidKey">
      <MemberSignature Language="C#" Value="public static readonly System.Data.EntityKey EntityNotValidKey;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Data.EntityKey EntityNotValidKey" />
      <MemberSignature Language="DocId" Value="F:System.Data.EntityKey.EntityNotValidKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EntityNotValidKey As EntityKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Data::EntityKey ^ EntityNotValidKey;" />
      <MemberSignature Language="F#" Value=" staticval mutable EntityNotValidKey : System.Data.EntityKey" Usage="System.Data.EntityKey.EntityNotValidKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98a86-132">Prosty <see cref="T:System.Data.EntityKey" /> identyfikowania jednostki, która jest wynikiem niepowodzenia [TRAKTOWAĆ](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) operacji.</span><span class="sxs-lookup"><span data-stu-id="98a86-132">A simple <see cref="T:System.Data.EntityKey" /> identifying an entity that resulted from a failed [TREAT](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98a86-133">Istnieją różne sposoby uzyskania nieprawidłową jednostkę.</span><span class="sxs-lookup"><span data-stu-id="98a86-133">There are various ways to get an invalid entity.</span></span> <span data-ttu-id="98a86-134">Najbardziej typowym scenariuszem jest, gdy [!INCLUDE[esql](~/includes/esql-md.md)] zapytanie używa [TRAKTOWAĆ](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) operator interpretowanie wystąpienia typu polimorficznego jako określonego typu, a w danym wystąpieniu jest niezgodny.</span><span class="sxs-lookup"><span data-stu-id="98a86-134">The most common scenario is when an [!INCLUDE[esql](~/includes/esql-md.md)] query uses the [TREAT](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) operator to interpret an instance of a polymorphic type as a particular type, and the instance in question does not match.</span></span> <span data-ttu-id="98a86-135">([TRAKTOWAĆ](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) jest podobny do języka C# `as` operator).</span><span class="sxs-lookup"><span data-stu-id="98a86-135">([TREAT](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) is similar to the C# `as` operator).</span></span> <span data-ttu-id="98a86-136">W tym przypadku zapytanie zwraca jednostki, która nie jest prawidłowy, a klucz jednostki wynikowy jest ustawiona na <xref:System.Data.EntityKey.EntityNotValidKey>.</span><span class="sxs-lookup"><span data-stu-id="98a86-136">In this case, the query returns an entity that is not valid, and the entity key of the resulting entity is set to <xref:System.Data.EntityKey.EntityNotValidKey>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntitySetName">
      <MemberSignature Language="C#" Value="public string EntitySetName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EntitySetName" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityKey.EntitySetName" />
      <MemberSignature Language="VB.NET" Value="Public Property EntitySetName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EntitySetName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EntitySetName : string with get, set" Usage="System.Data.EntityKey.EntitySetName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.Serialization.DataMember</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98a86-137">Pobiera lub ustawia nazwę zestawu jednostek.</span><span class="sxs-lookup"><span data-stu-id="98a86-137">Gets or sets the name of the entity set.</span></span></summary>
        <value><span data-ttu-id="98a86-138">A <see cref="T:System.String" /> wartość, która jest nazwą obiektu ustawić dla jednostki, do którego <see cref="T:System.Data.EntityKey" /> należy.</span><span class="sxs-lookup"><span data-stu-id="98a86-138">A <see cref="T:System.String" /> value that is the name of the entity set for the entity to which the <see cref="T:System.Data.EntityKey" /> belongs.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="98a86-139">Zwraca wartość wskazującą, czy to wystąpienie jest równe podanemu obiektowi.</span><span class="sxs-lookup"><span data-stu-id="98a86-139">Returns a value that indicates whether this instance is equal to a specified object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Data.EntityKey other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Data.EntityKey other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.Equals(System.Data.EntityKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As EntityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Data::EntityKey ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Data.EntityKey -&gt; bool" Usage="entityKey.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Data.EntityKey" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="98a86-140"><see cref="T:System.Data.EntityKey" /> Obiekt do porównania z tym wystąpieniem.</span><span class="sxs-lookup"><span data-stu-id="98a86-140">An <see cref="T:System.Data.EntityKey" /> object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="98a86-141">Zwraca wartość wskazującą, czy to wystąpienie jest równe określonej <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="98a86-141">Returns a value that indicates whether this instance is equal to a specified <see cref="T:System.Data.EntityKey" />.</span></span></summary>
        <returns><span data-ttu-id="98a86-142"><see langword="true" /> Jeśli to wystąpienie i <paramref name="other" /> mają równe wartości; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="98a86-142"><see langword="true" /> if this instance and <paramref name="other" /> have equal values; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98a86-143">Klucze tymczasowe mają semantykę porównania inny niż stały klucze:</span><span class="sxs-lookup"><span data-stu-id="98a86-143">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="98a86-144">Klucze tymczasowe Użyj równości odwołań.</span><span class="sxs-lookup"><span data-stu-id="98a86-144">Temporary keys use reference equality.</span></span> <span data-ttu-id="98a86-145">Oznacza to, że dwa odwołuje się do dokładnie takie same tymczasowe <xref:System.Data.EntityKey> wystąpienia są równe, ale żadne inne <xref:System.Data.EntityKey> wystąpień są takie same.</span><span class="sxs-lookup"><span data-stu-id="98a86-145">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="98a86-146">Stałe klucze określenie równości, na podstawie wartości zawartej właściwości klucza i <xref:System.Data.Metadata.Edm.EntitySet>.</span><span class="sxs-lookup"><span data-stu-id="98a86-146">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="98a86-147">Oznacza to, że masz dwa oddzielne <xref:System.Data.EntityKey> wystąpień, które są równe, jeśli ich zestawy jednostek są takie same, a ich wartości klucza są takie same.</span><span class="sxs-lookup"><span data-stu-id="98a86-147">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="98a86-148">Ponadto, nie mają klucze tymczasowe <xref:System.Data.Metadata.Edm.EntitySet> lub wartości klucza, ale klawisze trwałe.</span><span class="sxs-lookup"><span data-stu-id="98a86-148">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but permanent keys do.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="entityKey.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="98a86-149"><see cref="T:System.Object" /> Do porównania z tym wystąpieniem.</span><span class="sxs-lookup"><span data-stu-id="98a86-149">An <see cref="T:System.Object" /> to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="98a86-150">Zwraca wartość wskazującą, czy to wystąpienie jest równe podanemu obiektowi.</span><span class="sxs-lookup"><span data-stu-id="98a86-150">Returns a value that indicates whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="98a86-151"><see langword="true" /> Jeśli to wystąpienie i <paramref name="obj" /> mają równe wartości; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="98a86-151"><see langword="true" /> if this instance and <paramref name="obj" /> have equal values; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98a86-152">Klucze tymczasowe mają semantykę porównania inny niż stały klucze:</span><span class="sxs-lookup"><span data-stu-id="98a86-152">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="98a86-153">Klucze tymczasowe Użyj równości odwołań.</span><span class="sxs-lookup"><span data-stu-id="98a86-153">Temporary keys use reference equality.</span></span> <span data-ttu-id="98a86-154">Oznacza to, że dwa odwołuje się do dokładnie takie same tymczasowe <xref:System.Data.EntityKey> wystąpienia są równe, ale żadne inne <xref:System.Data.EntityKey> wystąpień są takie same.</span><span class="sxs-lookup"><span data-stu-id="98a86-154">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="98a86-155">Stałe klucze określenie równości, na podstawie wartości zawartej właściwości klucza i <xref:System.Data.Metadata.Edm.EntitySet>.</span><span class="sxs-lookup"><span data-stu-id="98a86-155">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="98a86-156">Oznacza to, że masz dwa oddzielne <xref:System.Data.EntityKey> wystąpień, które są równe, jeżeli ich <xref:System.Data.Metadata.Edm.EntitySet> obiekty są takie same, i ich wartości klucza są takie same.</span><span class="sxs-lookup"><span data-stu-id="98a86-156">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their <xref:System.Data.Metadata.Edm.EntitySet> objects are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="98a86-157">Ponadto, nie mają klucze tymczasowe <xref:System.Data.Metadata.Edm.EntitySet> lub wartości klucza, ale klawisze trwałe.</span><span class="sxs-lookup"><span data-stu-id="98a86-157">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but permanent keys do.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntitySet">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EntitySet GetEntitySet (System.Data.Metadata.Edm.MetadataWorkspace metadataWorkspace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EntitySet GetEntitySet(class System.Data.Metadata.Edm.MetadataWorkspace metadataWorkspace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.GetEntitySet(System.Data.Metadata.Edm.MetadataWorkspace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EntitySet ^ GetEntitySet(System::Data::Metadata::Edm::MetadataWorkspace ^ metadataWorkspace);" />
      <MemberSignature Language="F#" Value="member this.GetEntitySet : System.Data.Metadata.Edm.MetadataWorkspace -&gt; System.Data.Metadata.Edm.EntitySet" Usage="entityKey.GetEntitySet metadataWorkspace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntitySet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataWorkspace" Type="System.Data.Metadata.Edm.MetadataWorkspace" />
      </Parameters>
      <Docs>
        <param name="metadataWorkspace"><span data-ttu-id="98a86-158">Obszar roboczy metadanych, który zawiera jednostkę.</span><span class="sxs-lookup"><span data-stu-id="98a86-158">The metadata workspace that contains the entity.</span></span></param>
        <summary><span data-ttu-id="98a86-159">Pobiera zestaw jednostek dla tego klucza jednostki z obszaru roboczego określonych metadanych.</span><span class="sxs-lookup"><span data-stu-id="98a86-159">Gets the entity set for this entity key from the given metadata workspace.</span></span></summary>
        <returns><span data-ttu-id="98a86-160"><see cref="T:System.Data.Metadata.Edm.EntitySet" /> Klucza jednostki.</span><span class="sxs-lookup"><span data-stu-id="98a86-160">The <see cref="T:System.Data.Metadata.Edm.EntitySet" /> for the entity key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98a86-161">Zestaw jednostek jest dostępny w oparciu o nazwę kontenera jednostek i nazwę klucza zestawu jednostek.</span><span class="sxs-lookup"><span data-stu-id="98a86-161">The entity set is accessed based on the entity container name and entity set name of the key.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="98a86-162">Nie można odnaleźć zestawu jednostek w obszarze roboczym określonych metadanych.</span><span class="sxs-lookup"><span data-stu-id="98a86-162">The entity set could not be located in the specified metadata workspace.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="entityKey.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="98a86-163">Służy jako funkcji wyznaczania wartości skrótu dla bieżącego <see cref="T:System.Data.EntityKey" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="98a86-163">Serves as a hash function for the current <see cref="T:System.Data.EntityKey" /> object.</span></span> <span data-ttu-id="98a86-164"><see cref="M:System.Data.EntityKey.GetHashCode" /> nadaje się do mieszania algorytmów i struktur danych, takich jak Tabela skrótów.</span><span class="sxs-lookup"><span data-stu-id="98a86-164"><see cref="M:System.Data.EntityKey.GetHashCode" /> is suitable for hashing algorithms and data structures such as a hash table.</span></span></summary>
        <returns><span data-ttu-id="98a86-165">Wartość skrótu dla bieżącego <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="98a86-165">A hash code for the current <see cref="T:System.Data.EntityKey" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTemporary">
      <MemberSignature Language="C#" Value="public bool IsTemporary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTemporary" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityKey.IsTemporary" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsTemporary As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTemporary { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTemporary : bool" Usage="System.Data.EntityKey.IsTemporary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98a86-166">Pobiera wartość wskazującą, czy <see cref="T:System.Data.EntityKey" /> jest tymczasowe.</span><span class="sxs-lookup"><span data-stu-id="98a86-166">Gets a value that indicates whether the <see cref="T:System.Data.EntityKey" /> is temporary.</span></span></summary>
        <value><span data-ttu-id="98a86-167"><see langword="true" /> Jeśli <see cref="T:System.Data.EntityKey" /> jest tymczasowy; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="98a86-167"><see langword="true" /> if the <see cref="T:System.Data.EntityKey" /> is temporary; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98a86-168">Po utworzeniu nowej jednostki [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] definiuje klucz tymczasowy i ustawia <xref:System.Data.EntityKey.IsTemporary%2A> właściwość `true`.</span><span class="sxs-lookup"><span data-stu-id="98a86-168">When a new entity is created, the [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] defines temporary key and sets the <xref:System.Data.EntityKey.IsTemporary%2A> property to `true`.</span></span> <span data-ttu-id="98a86-169">Gdy wywołujesz <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> metody [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] przypisuje trwałego klucz i ustawia <xref:System.Data.EntityKey.IsTemporary%2A> właściwość `false`.</span><span class="sxs-lookup"><span data-stu-id="98a86-169">When you call the <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> method, the [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] assigns a permanent key and sets the <xref:System.Data.EntityKey.IsTemporary%2A> property to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="98a86-170">Klucze tymczasowe są tworzone automatycznie przez strukturę; Nie można ich można konstruować bezpośrednio przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="98a86-170">Temporary keys are constructed automatically by the framework; they cannot be constructed directly by a user.</span></span>  
  
 <span data-ttu-id="98a86-171">Klucze tymczasowe mają semantykę porównania inny niż stały klucze:</span><span class="sxs-lookup"><span data-stu-id="98a86-171">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="98a86-172">Klucze tymczasowe Użyj równości odwołań.</span><span class="sxs-lookup"><span data-stu-id="98a86-172">Temporary keys use reference equality.</span></span> <span data-ttu-id="98a86-173">Oznacza to, że dwa odwołuje się do dokładnie takie same tymczasowe <xref:System.Data.EntityKey> wystąpienia są równe, ale żadne inne <xref:System.Data.EntityKey> wystąpień są takie same.</span><span class="sxs-lookup"><span data-stu-id="98a86-173">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="98a86-174">Stałe klucze określenie równości, na podstawie wartości zawartej właściwości klucza i <xref:System.Data.Metadata.Edm.EntitySet>.</span><span class="sxs-lookup"><span data-stu-id="98a86-174">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="98a86-175">Oznacza to, że masz dwa oddzielne <xref:System.Data.EntityKey> wystąpień, które są równe, jeśli ich zestawy jednostek są takie same, a ich wartości klucza są takie same.</span><span class="sxs-lookup"><span data-stu-id="98a86-175">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="98a86-176">Ponadto, nie mają klucze tymczasowe <xref:System.Data.Metadata.Edm.EntitySet> lub wartości klucza, ale klawisze trwałe.</span><span class="sxs-lookup"><span data-stu-id="98a86-176">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but permanent keys do.</span></span>  
  
 <span data-ttu-id="98a86-177">Gdy <xref:System.Data.Objects.ObjectStateEntry.AcceptChanges%2A> metoda jest wywoływana w jednostce <xref:System.Data.Objects.ObjectStateEntry> i przejścia jednostki z <xref:System.Data.EntityState.Added> do stanu <xref:System.Data.EntityState.Unchanged> stanu, [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] automatycznie oblicza nowy klucz stałe dla tej jednostki i synchronizuje wszystkie tymczasowe odwołania kluczy.</span><span class="sxs-lookup"><span data-stu-id="98a86-177">When the <xref:System.Data.Objects.ObjectStateEntry.AcceptChanges%2A> method is called on an entity's <xref:System.Data.Objects.ObjectStateEntry> and the entity transitions from the <xref:System.Data.EntityState.Added> state to <xref:System.Data.EntityState.Unchanged> state, the [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] automatically computes a new permanent key for the entity and synchronizes all temporary key references.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoEntitySetKey">
      <MemberSignature Language="C#" Value="public static readonly System.Data.EntityKey NoEntitySetKey;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Data.EntityKey NoEntitySetKey" />
      <MemberSignature Language="DocId" Value="F:System.Data.EntityKey.NoEntitySetKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoEntitySetKey As EntityKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Data::EntityKey ^ NoEntitySetKey;" />
      <MemberSignature Language="F#" Value=" staticval mutable NoEntitySetKey : System.Data.EntityKey" Usage="System.Data.EntityKey.NoEntitySetKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98a86-178">Wzorzec singleton <see cref="T:System.Data.EntityKey" /> , jest identyfikowana jednostki tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="98a86-178">A singleton <see cref="T:System.Data.EntityKey" /> by which a read-only entity is identified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98a86-179">Jednostka tylko do odczytu identyfikuje jednostkę, która jest prawidłowa w każdym sposób, z tą różnicą, że nie jest skojarzony z zestawu jednostek rzeczywiste.</span><span class="sxs-lookup"><span data-stu-id="98a86-179">A read-only entity identifies an entity that is valid in every way, except that it is not associated with an actual entity set.</span></span> <span data-ttu-id="98a86-180">Taka sytuacja może wystąpić jako część wynik [!INCLUDE[esql](~/includes/esql-md.md)] zapytanie, które tworzy i zwraca wystąpienie jednostki określone w tekście zapytania (w przeciwieństwie do jednostki, który został pobrany z tabeli bazy danych).</span><span class="sxs-lookup"><span data-stu-id="98a86-180">This can occur as part of the result of an [!INCLUDE[esql](~/includes/esql-md.md)] query that constructs and returns an entity instance specified within the text of the query (as opposed to an entity that was retrieved from a database table).</span></span> <span data-ttu-id="98a86-181">Nie może zostać utrwalona jednostki, która nie ma zestawu jednostek do bazy danych, dopóki nie zostanie skojarzony z niektórych zestawu jednostek.</span><span class="sxs-lookup"><span data-stu-id="98a86-181">An entity that does not have an entity set cannot be persisted to the database until it is associated with some entity set.</span></span> <span data-ttu-id="98a86-182">W związku z tym, materializer obiektu będzie traktować tego rodzaju jednostki tak, jakby <xref:System.Data.Objects.MergeOption.NoTracking> określono opcję scalania, niezależnie od opcji scalania rzeczywistego, który został określony.</span><span class="sxs-lookup"><span data-stu-id="98a86-182">Therefore, the object materializer will treat this kind of entity as if the <xref:System.Data.Objects.MergeOption.NoTracking> merge option was specified, regardless of the actual merge option that was specified.</span></span> <span data-ttu-id="98a86-183">Zostanie utworzony obiekt jednostki, ale jego tożsamości nie będą rozpoznawane i go nie zostanie dodany do menedżera stanu jako część procesu materializacja.</span><span class="sxs-lookup"><span data-stu-id="98a86-183">An entity object will be created, but its identity will not be resolved and it will not be added to the state manager as part of the materialization process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserialized">
      <MemberSignature Language="C#" Value="public void OnDeserialized (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnDeserialized(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.OnDeserialized(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnDeserialized (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnDeserialized(System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="member this.OnDeserialized : System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="entityKey.OnDeserialized context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.Serialization.OnDeserialized</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="98a86-184">Opisuje źródłowymi i docelowymi danego strumienia serializacji i zapewnia dodatkowy kontekst zdefiniowane przez obiekt wywołujący.</span><span class="sxs-lookup"><span data-stu-id="98a86-184">Describes the source and destination of a given serialized stream and provides an additional caller-defined context.</span></span></param>
        <summary><span data-ttu-id="98a86-185">Metoda pomocnika, która jest używana do deserializacji <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="98a86-185">Helper method that is used to deserialize an <see cref="T:System.Data.EntityKey" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98a86-186"><xref:System.Data.EntityKey.OnDeserialized%2A> jest używany przez usługi obiektów, podczas deserializacji <xref:System.Data.EntityKey>.</span><span class="sxs-lookup"><span data-stu-id="98a86-186"><xref:System.Data.EntityKey.OnDeserialized%2A> is used by Object Services when deserializing an <xref:System.Data.EntityKey>.</span></span> <span data-ttu-id="98a86-187">Aby uzyskać więcej informacji, zobacz [serializacji obiektów](https://msdn.microsoft.com/library/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99).</span><span class="sxs-lookup"><span data-stu-id="98a86-187">For more information, see [Serializing Objects](https://msdn.microsoft.com/library/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserializing">
      <MemberSignature Language="C#" Value="public void OnDeserializing (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnDeserializing(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.OnDeserializing(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnDeserializing (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnDeserializing(System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="member this.OnDeserializing : System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="entityKey.OnDeserializing context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.Serialization.OnDeserializing</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="98a86-188">Opisuje źródłowymi i docelowymi danego strumienia serializacji i zawiera dodatkowy kontekst zdefiniowane przez obiekt wywołujący.</span><span class="sxs-lookup"><span data-stu-id="98a86-188">Describes the source and destination of a given serialized stream, and provides an additional caller-defined context.</span></span></param>
        <summary><span data-ttu-id="98a86-189">Metoda pomocnika, która jest używana do deserializacji <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="98a86-189">Helper method that is used to deserialize an <see cref="T:System.Data.EntityKey" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98a86-190"><xref:System.Data.EntityKey.OnDeserializing%2A> jest używany przez usługi obiektów, podczas deserializacji <xref:System.Data.EntityKey>.</span><span class="sxs-lookup"><span data-stu-id="98a86-190"><xref:System.Data.EntityKey.OnDeserializing%2A> is used by Object Services when deserializing an <xref:System.Data.EntityKey>.</span></span> <span data-ttu-id="98a86-191">Aby uzyskać więcej informacji, zobacz [serializacji obiektów](https://msdn.microsoft.com/library/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99).</span><span class="sxs-lookup"><span data-stu-id="98a86-191">For more information, see [Serializing Objects](https://msdn.microsoft.com/library/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Data.EntityKey key1, System.Data.EntityKey key2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Data.EntityKey key1, class System.Data.EntityKey key2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (key1 As EntityKey, key2 As EntityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Data::EntityKey ^ key1, System::Data::EntityKey ^ key2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Data.EntityKey * System.Data.EntityKey -&gt; bool" Usage="key1 = key2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key1" Type="System.Data.EntityKey" />
        <Parameter Name="key2" Type="System.Data.EntityKey" />
      </Parameters>
      <Docs>
        <param name="key1"><span data-ttu-id="98a86-192">A <see cref="T:System.Data.EntityKey" /> do porównania.</span><span class="sxs-lookup"><span data-stu-id="98a86-192">A <see cref="T:System.Data.EntityKey" /> to compare.</span></span></param>
        <param name="key2"><span data-ttu-id="98a86-193">A <see cref="T:System.Data.EntityKey" /> do porównania.</span><span class="sxs-lookup"><span data-stu-id="98a86-193">A <see cref="T:System.Data.EntityKey" /> to compare.</span></span></param>
        <summary><span data-ttu-id="98a86-194">Porównuje dwa <see cref="T:System.Data.EntityKey" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="98a86-194">Compares two <see cref="T:System.Data.EntityKey" /> objects.</span></span></summary>
        <returns><span data-ttu-id="98a86-195"><see langword="true" /> Jeśli <paramref name="key1" /> i <paramref name="key2" /> wartości są równe; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="98a86-195"><see langword="true" /> if the <paramref name="key1" /> and <paramref name="key2" /> values are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98a86-196">Klucze tymczasowe mają semantykę porównania inny niż stały klucze:</span><span class="sxs-lookup"><span data-stu-id="98a86-196">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="98a86-197">Klucze tymczasowe Użyj równości odwołań.</span><span class="sxs-lookup"><span data-stu-id="98a86-197">Temporary keys use reference equality.</span></span> <span data-ttu-id="98a86-198">Oznacza to, że dwa odwołuje się do dokładnie takie same tymczasowe <xref:System.Data.EntityKey> wystąpienia są równe, ale żadne inne <xref:System.Data.EntityKey> wystąpień są takie same.</span><span class="sxs-lookup"><span data-stu-id="98a86-198">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="98a86-199">Stałe klucze określenie równości, na podstawie wartości zawartej właściwości klucza i <xref:System.Data.Metadata.Edm.EntitySet>.</span><span class="sxs-lookup"><span data-stu-id="98a86-199">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="98a86-200">Oznacza to, że masz dwa oddzielne <xref:System.Data.EntityKey> wystąpień, które są równe, jeśli ich zestawy jednostek są takie same, a ich wartości klucza są takie same.</span><span class="sxs-lookup"><span data-stu-id="98a86-200">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="98a86-201">Ponadto, nie mają klucze tymczasowe <xref:System.Data.Metadata.Edm.EntitySet> lub wartości klucza, ale klawisze trwałe.</span><span class="sxs-lookup"><span data-stu-id="98a86-201">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but permanent keys do.</span></span>  
  
 <span data-ttu-id="98a86-202">Jest równoważne metodę dla tego operatora <xref:System.Data.EntityKey.Equals%28System.Data.EntityKey%29?displayProperty=nameWithType></format>
        </span><span class="sxs-lookup"><span data-stu-id="98a86-202">The equivalent method for this operator is <xref:System.Data.EntityKey.Equals%28System.Data.EntityKey%29?displayProperty=nameWithType></format>
        </span></span></remarks>
      <span data-ttu-id="98a86-203"></Docs>
    </Member>
    <Member MemberName="op_Inequality"> <MemberSignature Language="C#" Value="public static bool op_Inequality (System.Data.EntityKey key1, System.Data.EntityKey key2);" /></span><span class="sxs-lookup"><span data-stu-id="98a86-203"></Docs>
    </Member>
    <Member MemberName="op_Inequality"> <MemberSignature Language="C#" Value="public static bool op_Inequality (System.Data.EntityKey key1, System.Data.EntityKey key2);" /></span></span>
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Data.EntityKey key1, class System.Data.EntityKey key2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)" />
      <span data-ttu-id="98a86-204"><MemberType>Metoda</MemberType> <AssemblyInfo> <AssemblyName>System.Data.Entity</AssemblyName> <AssemblyVersion>4.0.0.0</AssemblyVersion> </AssemblyInfo></span><span class="sxs-lookup"><span data-stu-id="98a86-204"><MemberType>Method</MemberType> <AssemblyInfo> <AssemblyName>System.Data.Entity</AssemblyName> <AssemblyVersion>4.0.0.0</AssemblyVersion> </AssemblyInfo></span></span>
      <span data-ttu-id="98a86-205"><ReturnValue> <ReturnType>System.Boolean</ReturnType> </ReturnValue></span><span class="sxs-lookup"><span data-stu-id="98a86-205"><ReturnValue> <ReturnType>System.Boolean</ReturnType> </ReturnValue></span></span>
      <span data-ttu-id="98a86-206"><Parameters> <Parameter Name="key1" Type="System.Data.EntityKey" /> <Parameter Name="key2" Type="System.Data.EntityKey" /> </Parameters></span><span class="sxs-lookup"><span data-stu-id="98a86-206"><Parameters> <Parameter Name="key1" Type="System.Data.EntityKey" /> <Parameter Name="key2" Type="System.Data.EntityKey" /> </Parameters></span></span>
      <Docs>
        <param name="key1"><span data-ttu-id="98a86-207">A <see cref="T:System.Data.EntityKey" /> do porównania.</span><span class="sxs-lookup"><span data-stu-id="98a86-207">A <see cref="T:System.Data.EntityKey" /> to compare.</span></span></param>
        <param name="key2"><span data-ttu-id="98a86-208">A <see cref="T:System.Data.EntityKey" /> do porównania.</span><span class="sxs-lookup"><span data-stu-id="98a86-208">A <see cref="T:System.Data.EntityKey" /> to compare.</span></span></param>
        <summary><span data-ttu-id="98a86-209">Porównuje dwa <see cref="T:System.Data.EntityKey" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="98a86-209">Compares two <see cref="T:System.Data.EntityKey" /> objects.</span></span></summary>
        <returns>
          <span data-ttu-id="98a86-210"><see langword="true" /> Jeśli <paramref name="key1" /> i <paramref name="key2" /> wartości nie są równe; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="98a86-210"><see langword="true" /> if the <paramref name="key1" /> and <paramref name="key2" /> values are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <span data-ttu-id="98a86-211"><format type="text/markdown">&LT;! [CDATA [</span><span class="sxs-lookup"><span data-stu-id="98a86-211"><format type="text/markdown"><![CDATA[</span></span>  
  
## Remarks  
 <span data-ttu-id="98a86-212">Klucze tymczasowe mają semantykę porównania inny niż stały klucze:</span><span class="sxs-lookup"><span data-stu-id="98a86-212">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="98a86-213">Klucze tymczasowe Użyj równości odwołań.</span><span class="sxs-lookup"><span data-stu-id="98a86-213">Temporary keys use reference equality.</span></span> <span data-ttu-id="98a86-214">Oznacza to, że dwa odwołuje się do dokładnie takie same tymczasowe <xref:System.Data.EntityKey> wystąpienia są równe, ale żadne inne <xref:System.Data.EntityKey> wystąpień są takie same.</span><span class="sxs-lookup"><span data-stu-id="98a86-214">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="98a86-215">Stałe klucze określenie równości, na podstawie wartości zawartej właściwości klucza i <xref:System.Data.Metadata.Edm.EntitySet>.</span><span class="sxs-lookup"><span data-stu-id="98a86-215">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="98a86-216">Oznacza to, że masz dwa oddzielne <xref:System.Data.EntityKey> wystąpień, które są równe, jeśli ich zestawy jednostek są takie same, a ich wartości klucza są takie same.</span><span class="sxs-lookup"><span data-stu-id="98a86-216">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="98a86-217">Ponadto, nie mają klucze tymczasowe <xref:System.Data.Metadata.Edm.EntitySet> lub wartości klucza, ale klucze regularne.</span><span class="sxs-lookup"><span data-stu-id="98a86-217">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but regular keys do.</span></span>  
  
 <span data-ttu-id="98a86-218">Jest równoważne metodę dla tego operatora <xref:System.Data.EntityKey.Equals%28System.Data.EntityKey%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="98a86-218">The equivalent method for this operator is <xref:System.Data.EntityKey.Equals%28System.Data.EntityKey%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Data.EntityKey key1, System.Data.EntityKey key2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Data.EntityKey key1, class System.Data.EntityKey key2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (key1 As EntityKey, key2 As EntityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Data::EntityKey ^ key1, System::Data::EntityKey ^ key2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Data.EntityKey * System.Data.EntityKey -&gt; bool" Usage="System.Data.EntityKey.op_Inequality (key1, key2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key1" Type="System.Data.EntityKey" />
        <Parameter Name="key2" Type="System.Data.EntityKey" />
      </Parameters>
      <Docs>
        <param name="key1"><span data-ttu-id="98a86-219">A <see cref="T:System.Data.EntityKey" /> do porównania.</span><span class="sxs-lookup"><span data-stu-id="98a86-219">A <see cref="T:System.Data.EntityKey" /> to compare.</span></span></param>
        <param name="key2"><span data-ttu-id="98a86-220">A <see cref="T:System.Data.EntityKey" /> do porównania.</span><span class="sxs-lookup"><span data-stu-id="98a86-220">A <see cref="T:System.Data.EntityKey" /> to compare.</span></span></param>
        <summary><span data-ttu-id="98a86-221">Porównuje dwa <see cref="T:System.Data.EntityKey" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="98a86-221">Compares two <see cref="T:System.Data.EntityKey" /> objects.</span></span></summary>
        <returns><span data-ttu-id="98a86-222"><see langword="true" /> Jeśli <paramref name="key1" /> i <paramref name="key2" /> wartości nie są równe; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="98a86-222"><see langword="true" /> if the <paramref name="key1" /> and <paramref name="key2" /> values are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98a86-223">Klucze tymczasowe mają semantykę porównania inny niż stały klucze:</span><span class="sxs-lookup"><span data-stu-id="98a86-223">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="98a86-224">Klucze tymczasowe Użyj równości odwołań.</span><span class="sxs-lookup"><span data-stu-id="98a86-224">Temporary keys use reference equality.</span></span> <span data-ttu-id="98a86-225">Oznacza to, że dwa odwołuje się do dokładnie takie same tymczasowe <xref:System.Data.EntityKey> wystąpienia są równe, ale żadne inne <xref:System.Data.EntityKey> wystąpień są takie same.</span><span class="sxs-lookup"><span data-stu-id="98a86-225">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="98a86-226">Stałe klucze określenie równości, na podstawie wartości zawartej właściwości klucza i <xref:System.Data.Metadata.Edm.EntitySet>.</span><span class="sxs-lookup"><span data-stu-id="98a86-226">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="98a86-227">Oznacza to, że masz dwa oddzielne <xref:System.Data.EntityKey> wystąpień, które są równe, jeśli ich zestawy jednostek są takie same, a ich wartości klucza są takie same.</span><span class="sxs-lookup"><span data-stu-id="98a86-227">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="98a86-228">Ponadto, nie mają klucze tymczasowe <xref:System.Data.Metadata.Edm.EntitySet> lub wartości klucza, ale klucze regularne.</span><span class="sxs-lookup"><span data-stu-id="98a86-228">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but regular keys do.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>