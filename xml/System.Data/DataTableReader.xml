<Type Name="DataTableReader" FullName="System.Data.DataTableReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="29593a8cafbdc6b69f6caeda60868612a408b7dc" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37670274" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DataTableReader : System.Data.Common.DbDataReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataTableReader extends System.Data.Common.DbDataReader" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataTableReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataTableReader&#xA;Inherits DbDataReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTableReader sealed : System::Data::Common::DbDataReader" />
  <TypeSignature Language="F#" Value="type DataTableReader = class&#xA;    inherit DbDataReader" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="15bec-101">
        <see cref="T:System.Data.DataTableReader" /> Uzyskuje zawartość jednego lub więcej <see cref="T:System.Data.DataTable" /> obiektów w postaci jednego lub więcej zestawów wyników tylko do odczytu, tylko do przodu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="15bec-101">The <see cref="T:System.Data.DataTableReader" /> obtains the contents of one or more <see cref="T:System.Data.DataTable" /> objects in the form of one or more read-only, forward-only result sets.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15bec-102"><xref:System.Data.DataTableReader> Działa podobnie jak inne czytnika danych, takich jak <xref:System.Data.SqlClient.SqlDataReader>, chyba że <xref:System.Data.DataTableReader> przewiduje Iterowanie wierszy w <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="15bec-102">The <xref:System.Data.DataTableReader> works much like any other data reader, such as the <xref:System.Data.SqlClient.SqlDataReader>, except that the <xref:System.Data.DataTableReader> provides for iterating over rows in a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="15bec-103">Innymi słowy oferuje ona Iterowanie wierszy w pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="15bec-103">In other words, it provides for iterating over rows in a cache.</span></span> <span data-ttu-id="15bec-104">Można modyfikować dane w pamięci podręcznej podczas <xref:System.Data.DataTableReader> jest aktywny, a czytnik również automatycznie obsługuje położenia.</span><span class="sxs-lookup"><span data-stu-id="15bec-104">The cached data can be modified while the <xref:System.Data.DataTableReader> is active, and the reader automatically maintains its position.</span></span>  
  
 <span data-ttu-id="15bec-105">Po utworzeniu <xref:System.Data.DataTableReader> z <xref:System.Data.DataTable>, wynikowy <xref:System.Data.DataTableReader> obiekt zawiera jeden zestaw wyników z tych samych danych co <xref:System.Data.DataTable> z której została utworzona, z wyjątkiem wszystkich wierszy, które zostały oznaczone jako usunięte.</span><span class="sxs-lookup"><span data-stu-id="15bec-105">When you create a <xref:System.Data.DataTableReader> from a <xref:System.Data.DataTable>, the resulting <xref:System.Data.DataTableReader> object contains one result set with the same data as the <xref:System.Data.DataTable> from which it was created, except for any rows that have been marked as deleted.</span></span> <span data-ttu-id="15bec-106">Kolumny są wyświetlane w tej samej kolejności jak w oryginalnym <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="15bec-106">The columns appear in the same order as in the original <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="15bec-107">Struktura zwracany wynik jest identyczne w schemat i dane z oryginalnego <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="15bec-107">The structure of the returned result is identical in schema and data to the original <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="15bec-108">A <xref:System.Data.DataTableReader> utworzony przez wywołanie metody <xref:System.Data.DataSet.CreateDataReader*> metody <xref:System.Data.DataSet> obiekt zawiera wiele zestawów wyników, jeśli <xref:System.Data.DataSet> zawiera więcej niż jedną tabelą.</span><span class="sxs-lookup"><span data-stu-id="15bec-108">A <xref:System.Data.DataTableReader> that was created by calling the <xref:System.Data.DataSet.CreateDataReader*> method of a <xref:System.Data.DataSet> object contains multiple result sets if the <xref:System.Data.DataSet> contains more than one table.</span></span> <span data-ttu-id="15bec-109">Wyniki są w tę samą sekwencję co <xref:System.Data.DataTable> obiekty w <xref:System.Data.DataTableCollection> z <xref:System.Data.DataSet> obiektu.</span><span class="sxs-lookup"><span data-stu-id="15bec-109">The results are in the same sequence as the <xref:System.Data.DataTable> objects in the <xref:System.Data.DataTableCollection> of the <xref:System.Data.DataSet> object.</span></span>  
  
 <span data-ttu-id="15bec-110">Zestaw wyników zwrócony zawiera tylko bieżącą wersję każdego <xref:System.Data.DataRow>; zostaną pominięte wiersze, które zostały oznaczone do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="15bec-110">The returned result set contains only the current version of each <xref:System.Data.DataRow>; rows that are marked for deletion are skipped.</span></span>  
  
 <span data-ttu-id="15bec-111">`DataTableReader` Zapewnia stabilnego iteratora, czyli zawartość `DataTableReader` nie są unieważniane, jeśli rozmiar kolekcji źródłowej jest modyfikowana podczas iteracji.</span><span class="sxs-lookup"><span data-stu-id="15bec-111">The `DataTableReader` provides a stable iterator; that is, the contents of the `DataTableReader` are not invalidated if the size of the underlying collection is modified during iteration.</span></span> <span data-ttu-id="15bec-112">Na przykład jeśli jeden lub więcej wierszy w <xref:System.Data.DataTable.Rows%2A> usunięta lub usunąć w trakcie iteracji, bieżącej pozycji w kolekcji `DataTableReader` są odpowiednio przechowywane i nie powoduje unieważnienia iteratora.</span><span class="sxs-lookup"><span data-stu-id="15bec-112">For example, if one or more rows in the <xref:System.Data.DataTable.Rows%2A> collection are deleted or removed during iteration, the current position within the `DataTableReader` is maintained appropriately and it does not invalidate the iterator.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="15bec-113">Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.DataTableReader" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-113">Initializes a new instance of the <see cref="T:System.Data.DataTableReader" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTableReader (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.#ctor(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTableReader(System::Data::DataTable ^ dataTable);" />
      <MemberSignature Language="F#" Value="new System.Data.DataTableReader : System.Data.DataTable -&gt; System.Data.DataTableReader" Usage="new System.Data.DataTableReader dataTable" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable">
          <span data-ttu-id="15bec-114">
            <see cref="T:System.Data.DataTable" /> z którego nowy <see cref="T:System.Data.DataTableReader" /> uzyskuje swój zestaw wyników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-114">The <see cref="T:System.Data.DataTable" /> from which the new <see cref="T:System.Data.DataTableReader" /> obtains its result set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15bec-115">Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.DataTableReader" /> klasy przy użyciu danych z podanym <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-115">Initializes a new instance of the <see cref="T:System.Data.DataTableReader" /> class by using data from the supplied <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTableReader (System.Data.DataTable[] dataTables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.DataTable[] dataTables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataTables As DataTable())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTableReader(cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables);" />
      <MemberSignature Language="F#" Value="new System.Data.DataTableReader : System.Data.DataTable[] -&gt; System.Data.DataTableReader" Usage="new System.Data.DataTableReader dataTables" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataTables" Type="System.Data.DataTable[]" />
      </Parameters>
      <Docs>
        <param name="dataTables">
          <span data-ttu-id="15bec-116">Tablica <see cref="T:System.Data.DataTable" /> obiektów, które dostarcza wyniki dla nowego <see cref="T:System.Data.DataTableReader" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-116">The array of <see cref="T:System.Data.DataTable" /> objects that supplies the results for the new <see cref="T:System.Data.DataTableReader" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15bec-117">Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.DataTableReader" /> klasy przy użyciu podanej tablicy <see cref="T:System.Data.DataTable" /> obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-117">Initializes a new instance of the <see cref="T:System.Data.DataTableReader" /> class using the supplied array of <see cref="T:System.Data.DataTable" /> objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15bec-118">Jeśli musisz utworzyć <xref:System.Data.DataTableReader> na podstawie wszystkie lub podzbiór tabel w określonym <xref:System.Data.DataSet>, wywołaj `DataSet`firmy <xref:System.Data.DataSet.CreateDataReader*> metody.</span><span class="sxs-lookup"><span data-stu-id="15bec-118">If you must create a <xref:System.Data.DataTableReader> based on all or a subset of the tables within a specific <xref:System.Data.DataSet>, call the `DataSet`'s <xref:System.Data.DataSet.CreateDataReader*> method.</span></span> <span data-ttu-id="15bec-119">Jeśli chcesz utworzyć nowy <xref:System.Data.DataTableReader> wystąpienia oparte na grupach `DataTable` wystąpień, które nie są inny sposób powiązane, użyć tego konstruktora.</span><span class="sxs-lookup"><span data-stu-id="15bec-119">If you want to create a new <xref:System.Data.DataTableReader> instance based on a group of `DataTable` instances that are not otherwise related, use this constructor.</span></span> <span data-ttu-id="15bec-120">Możesz również korzystać z zalet tego konstruktora, aby zmienić kolejność `DataTables` w ramach `DataTableReader`, jeśli ich kolejność w ich źródle `DataSet` nie spełnia Twoich potrzeb.</span><span class="sxs-lookup"><span data-stu-id="15bec-120">You can also take advantage of this constructor to rearrange the ordering of the `DataTables` within the `DataTableReader`, if their ordering within their source `DataSet` does not meet your needs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15bec-121">W poniższym przykładzie metoda TestConstructor tworzy dwa <xref:System.Data.DataTable> wystąpień.</span><span class="sxs-lookup"><span data-stu-id="15bec-121">In the following example, the TestConstructor method creates two <xref:System.Data.DataTable> instances.</span></span> <span data-ttu-id="15bec-122">W celu przedstawienia tej Konstruktor <xref:System.Data.DataTableReader> klasy Przykładowa aplikacja tworzy nową `DataTableReader` na podstawie tablicy, która zawiera dwa `DataTables`i wykonuje prostą operacją, Drukowanie zawartości z pierwszego mało kolumn w konsoli okno.</span><span class="sxs-lookup"><span data-stu-id="15bec-122">In order to demonstrate this constructor for the <xref:System.Data.DataTableReader> class, the sample creates a new `DataTableReader` based on an array that contains the two `DataTables`, and performs a simple operation, printing the contents from the first few columns to the console window.</span></span> <span data-ttu-id="15bec-123">Aby przetestować tę aplikację, Utwórz nową aplikację konsoli i wklej przykładowy kod do nowo utworzony plik.</span><span class="sxs-lookup"><span data-stu-id="15bec-123">In order to test this application, create a new Console application, and paste the sample code into the newly created file.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.ctor#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.ctor/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.ctor/VB/source.vb#1)]  
  
 <span data-ttu-id="15bec-124">W oknie konsoli zostaną wyświetlone następujące wyniki:</span><span class="sxs-lookup"><span data-stu-id="15bec-124">The Console window displays the following results:</span></span>  
  
```  
1 Mary  
2 Andy  
3 Peter  
4 Russ  
1 Wireless Network Card  
2 Hard Drive  
3 Monitor  
4 CPU  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="dataTableReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="15bec-125">Zamyka bieżące <see cref="T:System.Data.DataTableReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-125">Closes the current <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15bec-126">Wywoływanie `Close()` na zamkniętej `DataTableReader` obiektu nie powoduje błąd.</span><span class="sxs-lookup"><span data-stu-id="15bec-126">Calling `Close()` on a closed `DataTableReader` object does not raise an error.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Data.DataTableReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="15bec-127">Głębokość zagnieżdżenia bieżącego wiersza <see cref="T:System.Data.DataTableReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-127">The depth of nesting for the current row of the <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="15bec-128">Głębokość zagnieżdżenia dla bieżącego wiersza; zawsze zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-128">The depth of nesting for the current row; always zero.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15bec-129">`DataTableReader` nie obsługuje zagnieżdżania.</span><span class="sxs-lookup"><span data-stu-id="15bec-129">`DataTableReader` does not support nesting.</span></span> <span data-ttu-id="15bec-130">`Depth` Właściwość zawsze zwraca wartość zero.</span><span class="sxs-lookup"><span data-stu-id="15bec-130">The `Depth` property always returns zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldCount">
      <MemberSignature Language="C#" Value="public override int FieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.FieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldCount : int" Usage="System.Data.DataTableReader.FieldCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="15bec-131">Zwraca liczbę kolumn w bieżącym wierszu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-131">Returns the number of columns in the current row.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="15bec-132">Gdy nie znajduje się w zestawie prawidłowy wynik 0. w przeciwnym razie z liczbą kolumn w bieżącym wierszu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-132">When not positioned in a valid result set, 0; otherwise the number of columns in the current row.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="15bec-133">Próbowano pobrać liczba pól w zamkniętej <see cref="T:System.Data.DataTableReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-133">An attempt was made to retrieve the field count in a closed <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public override bool GetBoolean (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetBoolean(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBoolean (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetBoolean(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetBoolean : int -&gt; bool" Usage="dataTableReader.GetBoolean ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="15bec-134">Numer porządkowy kolumny liczony od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-134">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15bec-135">Pobiera wartość określonej kolumny jako <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-135">Gets the value of the specified column as a <see cref="T:System.Boolean" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15bec-136">Wartość określonej kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-136">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15bec-137">Konwersje nie są wykonywane; w związku z tym danych pobranych musi już być atrybut typu wartość logiczna lub zwracała wartość na wartość logiczną, lub generowany jest wyjątek.</span><span class="sxs-lookup"><span data-stu-id="15bec-137">No conversions are performed; therefore the data retrieved must either already be a Boolean or coercible to a Boolean, or an exception is generated.</span></span>  
  
 <span data-ttu-id="15bec-138">Wywołaj <xref:System.Data.DataTableReader.IsDBNull%2A> czy przed wywołaniem tej metody są wartości null.</span><span class="sxs-lookup"><span data-stu-id="15bec-138">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15bec-139">Poniższy przykład wyświetla zawartość kolumny numerowane 2 w ramach przekazany do <xref:System.Data.DataTableReader>.</span><span class="sxs-lookup"><span data-stu-id="15bec-139">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="15bec-140">Jeśli kolumna w określonym wierszu ma wartość null, ten kod wyświetla tekst \<NULL >.</span><span class="sxs-lookup"><span data-stu-id="15bec-140">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="15bec-141">Jeśli dane w kolumnie nie jest poprawnego typu, przykład wyświetla komunikat o błędzie dla każdego wiersza.</span><span class="sxs-lookup"><span data-stu-id="15bec-141">If the data within the column is not the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetBoolean#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBoolean/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetBoolean#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBoolean/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="15bec-142">Indeks przekazywane był poza zakresem od 0 do <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-142">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="15bec-143">Próbowano pobrać dane z usuniętego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-143">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="15bec-144">Nastąpiła próba odczytu lub uzyskać dostępu do kolumny w zamkniętej <see cref="T:System.Data.DataTableReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-144">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="15bec-145">Określona kolumna nie zawiera <see langword="Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-145">The specified column does not contain a <see langword="Boolean" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public override byte GetByte (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8 GetByte(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByte (ordinal As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Byte GetByte(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetByte : int -&gt; byte" Usage="dataTableReader.GetByte ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="15bec-146">Numer porządkowy kolumny liczony od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-146">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15bec-147">Pobiera wartość określonej kolumny w postaci bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-147">Gets the value of the specified column as a byte.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15bec-148">Wartość określonej kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-148">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15bec-149">Konwersje nie są wykonywane; w związku z tym danych pobranych musi być bajtów lub zwracała wartość na bajt.</span><span class="sxs-lookup"><span data-stu-id="15bec-149">No conversions are performed; therefore the data retrieved must already be a byte or coercible to a byte.</span></span>  
  
 <span data-ttu-id="15bec-150">Wywołaj <xref:System.Data.DataTableReader.IsDBNull%2A> czy przed wywołaniem tej metody są wartości null.</span><span class="sxs-lookup"><span data-stu-id="15bec-150">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15bec-151">Poniższy przykład wyświetla zawartość kolumny numerowane 2 w ramach przekazany do <xref:System.Data.DataTableReader>.</span><span class="sxs-lookup"><span data-stu-id="15bec-151">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="15bec-152">Jeśli kolumna w określonym wierszu ma wartość null, ten kod wyświetla tekst \<NULL >.</span><span class="sxs-lookup"><span data-stu-id="15bec-152">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="15bec-153">Jeśli dane w kolumnie nie jest poprawnego typu, przykład wyświetla komunikat o błędzie dla każdego wiersza.</span><span class="sxs-lookup"><span data-stu-id="15bec-153">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetByte#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetByte/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetByte#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetByte/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="15bec-154">Indeks przekazywane był poza zakresem od 0 do <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-154">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="15bec-155">Próbowano pobrać dane z usuniętego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-155">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="15bec-156">Nastąpiła próba odczytu lub uzyskać dostępu do kolumny w zamkniętej <see langword="DataTableReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-156">An attempt was made to read or access a column in a closed <see langword="DataTableReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="15bec-157">Określona kolumna nie zawiera typu byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-157">The specified column does not contain a byte.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override long GetBytes (int ordinal, long dataIndex, byte[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetBytes(int32 ordinal, int64 dataIndex, unsigned int8[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (ordinal As Integer, dataIndex As Long, buffer As Byte(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetBytes(int ordinal, long dataIndex, cli::array &lt;System::Byte&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : int * int64 * byte[] * int * int -&gt; int64" Usage="dataTableReader.GetBytes (ordinal, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="15bec-158">Numer porządkowy kolumny liczony od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-158">The zero-based column ordinal.</span>
          </span>
        </param>
        <param name="dataIndex">
          <span data-ttu-id="15bec-159">Indeks w obrębie pola, w którym można uruchomić operacji odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-159">The index within the field from which to start the read operation.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="15bec-160">Bufor, do którego można odczytać strumienia bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-160">The buffer into which to read the stream of bytes.</span>
          </span>
        </param>
        <param name="bufferIndex">
          <span data-ttu-id="15bec-161">Indeks buforu, w którym ma zostać rozpoczęte, umieszczając dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-161">The index within the buffer at which to start placing the data.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="15bec-162">Maksymalna długość do skopiowania w buforze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-162">The maximum length to copy into the buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15bec-163">Odczytuje strumień bajtów, rozpoczynając od przesunięcia określonej kolumny w buforze, w postaci tablicy, rozpoczynając od przesunięcia określonego bufora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-163">Reads a stream of bytes starting at the specified column offset into the buffer as an array starting at the specified buffer offset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15bec-164">Rzeczywista liczba odczytanych bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-164">The actual number of bytes read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15bec-165">`GetBytes` Zwraca liczbę bajtów dostępnych w tym polu.</span><span class="sxs-lookup"><span data-stu-id="15bec-165">`GetBytes` returns the number of available bytes in the field.</span></span> <span data-ttu-id="15bec-166">W większości przypadków jest to dokładnie długość pola.</span><span class="sxs-lookup"><span data-stu-id="15bec-166">Most of the time this is the exact length of the field.</span></span> <span data-ttu-id="15bec-167">Jednakże, zwrócona liczba może być mniejsza niż wartość true, długość pola Jeśli `GetBytes` został już użyty do uzyskania bajtów z pola.</span><span class="sxs-lookup"><span data-stu-id="15bec-167">However, the number returned may be less than the true length of the field if `GetBytes` has already been used to obtain bytes from the field.</span></span> <span data-ttu-id="15bec-168">Może to być tak, na przykład, gdy <xref:System.Data.DataTableReader> odczytuje struktury dużych ilości danych do buforu</span><span class="sxs-lookup"><span data-stu-id="15bec-168">This may be the case, for example, when the <xref:System.Data.DataTableReader> is reading a large data structure into a buffer</span></span>  
  
 <span data-ttu-id="15bec-169">W przypadku przekazania buforu, który jest `null` (`Nothing` w języku Visual Basic), `GetBytes` zwraca długość całe pole w bajtach, a nie do pozostałych rozmiaru na podstawie parametru przesunięcia buforu.</span><span class="sxs-lookup"><span data-stu-id="15bec-169">If you pass a buffer that is `null` (`Nothing` in Visual Basic), `GetBytes` returns the length of the entire field in bytes, not the remaining size based on the buffer offset parameter.</span></span>  
  
 <span data-ttu-id="15bec-170">Konwersje nie są wykonywane; w związku z tym danych pobranych już musi być tablicą bajtów lub zwracała wartość do tablicy typu byte.</span><span class="sxs-lookup"><span data-stu-id="15bec-170">No conversions are performed; therefore the data retrieved must already be a byte array or coercible to a byte array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15bec-171">Poniższy przykład tworzy <xref:System.Data.DataTableReader> na podstawie danych z przykładowej bazy danych AdventureWorks, a następnie zapisuje każdy obraz pobierane do osobnego pliku w folderze C:\.</span><span class="sxs-lookup"><span data-stu-id="15bec-171">The following example creates a <xref:System.Data.DataTableReader> based on data in the AdventureWorks sample database, and saves each image retrieved to a separate file in the C:\ folder.</span></span> <span data-ttu-id="15bec-172">Aby przetestować tę aplikację, Utwórz nową aplikację konsoli odwołują się do zestawu System.Drawing.dll i wkleić przykładowy kod do nowo utworzony plik.</span><span class="sxs-lookup"><span data-stu-id="15bec-172">In order to test this application, create a new Console application, reference the System.Drawing.dll assembly, and paste the sample code into the newly created file.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetBytes#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBytes/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetBytes#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBytes/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="15bec-173">Indeks przekazywane był poza zakresem od 0 do <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-173">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="15bec-174">Próbowano pobrać dane z usuniętego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-174">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="15bec-175">Nastąpiła próba odczytu lub uzyskać dostępu do kolumny w zamkniętej <see langword="DataTableReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-175">An attempt was made to read or access a column in a closed <see langword="DataTableReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="15bec-176">Określona kolumna nie zawiera tablicy bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-176">The specified column does not contain a byte array.</span>
          </span>
        </exception>
        <altmember cref="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public override char GetChar (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetChar(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChar (ordinal As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetChar(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetChar : int -&gt; char" Usage="dataTableReader.GetChar ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="15bec-177">Numer porządkowy kolumny liczony od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-177">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15bec-178">Pobiera wartość określonej kolumny w postaci znaku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-178">Gets the value of the specified column as a character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15bec-179">Wartość kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-179">The value of the column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15bec-180">Konwersje nie są wykonywane; w związku z tym danych pobranych musi być zwracała wartość do znaku lub znaków.</span><span class="sxs-lookup"><span data-stu-id="15bec-180">No conversions are performed; therefore the data retrieved must already be a character or coercible to a character.</span></span>  
  
 <span data-ttu-id="15bec-181">Wywołaj <xref:System.Data.DataTableReader.IsDBNull%2A> czy przed wywołaniem tej metody są wartości null.</span><span class="sxs-lookup"><span data-stu-id="15bec-181">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15bec-182">Poniższy przykład wyświetla zawartość kolumny numerowane 2 w ramach elementu DataTableReader przekazany w.</span><span class="sxs-lookup"><span data-stu-id="15bec-182">The following example displays the contents of the column numbered 2 within the passed-in DataTableReader.</span></span> <span data-ttu-id="15bec-183">Jeśli kolumna w określonym wierszu ma wartość null, ten kod wyświetla tekst \<NULL >.</span><span class="sxs-lookup"><span data-stu-id="15bec-183">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="15bec-184">Jeśli dane w kolumnie nie jest poprawnego typu, przykład wyświetla komunikat o błędzie dla każdego wiersza.</span><span class="sxs-lookup"><span data-stu-id="15bec-184">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetChar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChar/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetChar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChar/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="15bec-185">Indeks przekazywane był poza zakresem od 0 do <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-185">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="15bec-186">Próbowano pobrać dane z usuniętego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-186">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="15bec-187">Nastąpiła próba odczytu lub uzyskać dostępu do kolumny w zamkniętej <see langword="DataTableReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-187">An attempt was made to read or access a column in a closed <see langword="DataTableReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="15bec-188">Określone pole nie zawiera znaku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-188">The specified field does not contain a character.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override long GetChars (int ordinal, long dataIndex, char[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetChars(int32 ordinal, int64 dataIndex, char[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (ordinal As Integer, dataIndex As Long, buffer As Char(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetChars(int ordinal, long dataIndex, cli::array &lt;char&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetChars : int * int64 * char[] * int * int -&gt; int64" Usage="dataTableReader.GetChars (ordinal, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="15bec-189">Numer porządkowy kolumny liczony od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-189">The zero-based column ordinal.</span>
          </span>
        </param>
        <param name="dataIndex">
          <span data-ttu-id="15bec-190">Indeks w obrębie pola, w którym można uruchomić operacji odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-190">The index within the field from which to start the read operation.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="15bec-191">Bufor, do którego można odczytać strumienia znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-191">The buffer into which to read the stream of chars.</span>
          </span>
        </param>
        <param name="bufferIndex">
          <span data-ttu-id="15bec-192">Indeks buforu, w którym ma zostać rozpoczęte, umieszczając dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-192">The index within the buffer at which to start placing the data.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="15bec-193">Maksymalna długość do skopiowania w buforze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-193">The maximum length to copy into the buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15bec-194">Zwraca wartość określonej kolumny w postaci tablicy znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-194">Returns the value of the specified column as a character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15bec-195">Rzeczywista liczba znaków do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-195">The actual number of characters read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15bec-196">`GetChars` Zwraca liczbę znaków, dostępne w tym polu.</span><span class="sxs-lookup"><span data-stu-id="15bec-196">`GetChars` returns the number of available characters in the field.</span></span> <span data-ttu-id="15bec-197">W większości przypadków jest to dokładnie długość pola.</span><span class="sxs-lookup"><span data-stu-id="15bec-197">Most of the time this is the exact length of the field.</span></span> <span data-ttu-id="15bec-198">Jednakże, zwrócona liczba może być mniejsza niż wartość true, długość pola Jeśli `GetChars` został już użyty można uzyskać znaki z pola.</span><span class="sxs-lookup"><span data-stu-id="15bec-198">However, the number returned may be less than the true length of the field if `GetChars` has already been used to obtain characters from the field.</span></span>  
  
 <span data-ttu-id="15bec-199">Rzeczywista liczba znaków czytanych może być mniejsza niż żądana długość, jeśli osiągnięty zostanie koniec pola.</span><span class="sxs-lookup"><span data-stu-id="15bec-199">The actual number of characters read can be less than the requested length, if the end of the field is reached.</span></span> <span data-ttu-id="15bec-200">W przypadku przekazania buforu, który ma wartość null (`Nothing` w języku Visual Basic), `GetChars` zwraca długość całe pole znaków, nie pozostałe rozmiaru na podstawie parametru przesunięcia buforu.</span><span class="sxs-lookup"><span data-stu-id="15bec-200">If you pass a buffer that is null (`Nothing` in Visual Basic), `GetChars` returns the length of the entire field in characters, not the remaining size based on the buffer offset parameter.</span></span>  
  
 <span data-ttu-id="15bec-201">Konwersje nie są wykonywane; w związku z tym pobranie danych musi być już tablicy znaków lub zwracała wartość do tablicy znaków.</span><span class="sxs-lookup"><span data-stu-id="15bec-201">No conversions are performed; therefore the data to be retrieved must already be a character array or coercible to a character array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15bec-202">W poniższym przykładzie pokazano `GetChars` metody.</span><span class="sxs-lookup"><span data-stu-id="15bec-202">The following example demonstrates the `GetChars` method.</span></span> <span data-ttu-id="15bec-203">`TestGetChars` Metoda oczekuje, że przekazane `DataTableReader` wypełnione dwie kolumny danych: Nazwa pliku, w pierwszej kolumnie, a Tablica znaków w ciągu sekundy.</span><span class="sxs-lookup"><span data-stu-id="15bec-203">The `TestGetChars` method expects to be passed a `DataTableReader` filled with two columns of data: a file name in the first column, and an array of characters in the second.</span></span> <span data-ttu-id="15bec-204">Ponadto `TestGetChars` pozwala określić rozmiar buforu, która będzie używana jako odczytuje dane z tablicy znaków w `DataTableReader`.</span><span class="sxs-lookup"><span data-stu-id="15bec-204">In addition, `TestGetChars` lets you specify the buffer size to be used as it reads the data from the character array in the `DataTableReader`.</span></span> <span data-ttu-id="15bec-205">`TestGetChars` Tworzy plik odpowiadający każdego wiersza danych w `DataTableReader`, przy użyciu dostarczonych danych, w pierwszej kolumnie `DataTableReader` jako nazwę pliku.</span><span class="sxs-lookup"><span data-stu-id="15bec-205">`TestGetChars` creates a file corresponding to each row of data in the `DataTableReader`, using the supplied data in the first column of the `DataTableReader` as the file name.</span></span>  
  
 <span data-ttu-id="15bec-206">Poniższa procedura demonstruje użycie `GetChars` metoda odczytywanie danych przechowywanych w `DataTable` jako tablicę znaków.</span><span class="sxs-lookup"><span data-stu-id="15bec-206">This procedure demonstrates the use of the `GetChars` method reading data that was stored in the `DataTable` as a character array.</span></span> <span data-ttu-id="15bec-207">Dowolny inny typ danych powoduje, że `GetChars` metodę, aby zgłosić `InvalidCastException`.</span><span class="sxs-lookup"><span data-stu-id="15bec-207">Any other type of data causes the `GetChars` method to throw an `InvalidCastException`.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetChars#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChars/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChars/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="15bec-208">Indeks przekazywane był poza zakresem od 0 do <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-208">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="15bec-209">Próbowano pobrać dane z usuniętego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-209">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="15bec-210">Nastąpiła próba odczytu lub uzyskać dostępu do kolumny w zamkniętej <see langword="DataTableReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-210">An attempt was made to read or access a column in a closed <see langword="DataTableReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="15bec-211">Określona kolumna nie zawiera tablicy znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-211">The specified column does not contain a character array.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public override string GetDataTypeName (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDataTypeName(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDataTypeName (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDataTypeName(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDataTypeName : int -&gt; string" Usage="dataTableReader.GetDataTypeName ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="15bec-212">Numer porządkowy kolumny liczony od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-212">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15bec-213">Pobiera ciąg reprezentujący typ danych dla określonej kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-213">Gets a string representing the data type of the specified column.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15bec-214">Ciąg reprezentujący typ danych kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-214">A string representing the column's data type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15bec-215"><xref:System.Data.DataTableReader.GetDataTypeName%2A> Metoda zawsze zwraca typ elementu bazowego <xref:System.Data.DataColumn> zamiast typu właściwe dla dostawcy.</span><span class="sxs-lookup"><span data-stu-id="15bec-215">The <xref:System.Data.DataTableReader.GetDataTypeName%2A> method always returns the type of the underlying <xref:System.Data.DataColumn> instead of a provider-specific type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15bec-216">Następująca aplikacja konsoli Wyświetla listę pola i ich nazwy typ z prostą <xref:System.Data.DataTable>:</span><span class="sxs-lookup"><span data-stu-id="15bec-216">The following console application displays a list of fields and their type names from a simple <xref:System.Data.DataTable>:</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetDataTypeName#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDataTypeName/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDataTypeName#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDataTypeName/VB/source.vb#1)]  
  
 <span data-ttu-id="15bec-217">W oknie konsoli zostaną wyświetlone następujące wyniki:</span><span class="sxs-lookup"><span data-stu-id="15bec-217">The Console window displays the following results:</span></span>  
  
```  
ID: Int32  
Name: String  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="15bec-218">Indeks przekazywane był poza zakresem od 0 do <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-218">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="15bec-219">Nastąpiła próba odczytu lub uzyskać dostępu do kolumny w zamkniętej <see cref="T:System.Data.DataTableReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-219">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public override DateTime GetDateTime (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime GetDateTime(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDateTime (ordinal As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime GetDateTime(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDateTime : int -&gt; DateTime" Usage="dataTableReader.GetDateTime ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="15bec-220">Numer porządkowy kolumny liczony od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-220">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15bec-221">Pobiera wartość określonej kolumny jako <see cref="T:System.DateTime" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-221">Gets the value of the specified column as a <see cref="T:System.DateTime" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15bec-222">Wartość określonej kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-222">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15bec-223">Konwersje nie są wykonywane; w związku z tym musi już być danych pobranych <xref:System.DateTime> lub zwracała wartość do `DataTime`.</span><span class="sxs-lookup"><span data-stu-id="15bec-223">No conversions are performed; therefore the data retrieved must already be a <xref:System.DateTime> or coercible to a `DataTime`.</span></span>  
  
 <span data-ttu-id="15bec-224">Wywołaj <xref:System.Data.DataTableReader.IsDBNull%2A> czy przed wywołaniem tej metody są wartości null.</span><span class="sxs-lookup"><span data-stu-id="15bec-224">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15bec-225">Poniższy przykład wyświetla zawartość kolumny numerowane 2 w ramach przekazany do <xref:System.Data.DataTableReader>.</span><span class="sxs-lookup"><span data-stu-id="15bec-225">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="15bec-226">Jeśli kolumna w określonym wierszu ma wartość null, ten kod wyświetla tekst \<NULL >.</span><span class="sxs-lookup"><span data-stu-id="15bec-226">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="15bec-227">Jeśli dane w kolumnie nie jest poprawnego typu, przykład wyświetla komunikat o błędzie dla każdego wiersza.</span><span class="sxs-lookup"><span data-stu-id="15bec-227">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetDateTime#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDateTime/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDateTime#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDateTime/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="15bec-228">Indeks przekazywane był poza zakresem od 0 do <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-228">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="15bec-229">Próbowano pobrać dane z usuniętego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-229">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="15bec-230">Nastąpiła próba odczytu lub uzyskać dostępu do kolumny w zamkniętej <see langword="DataTableReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-230">An attempt was made to read or access a column in a closed <see langword="DataTableReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="15bec-231">Określona kolumna nie zawiera wartości daty/godziny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-231">The specified column does not contain a DateTime value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public override decimal GetDecimal (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Decimal GetDecimal(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecimal (ordinal As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Decimal GetDecimal(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDecimal : int -&gt; decimal" Usage="dataTableReader.GetDecimal ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="15bec-232">Numer porządkowy kolumny liczony od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-232">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15bec-233">Pobiera wartość określonej kolumny jako <see cref="T:System.Decimal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-233">Gets the value of the specified column as a <see cref="T:System.Decimal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15bec-234">Wartość określonej kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-234">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15bec-235">Konwersje nie są wykonywane; w związku z tym musi już być danych pobranych <xref:System.Decimal> lub zwracała wartość do `Decimal`.</span><span class="sxs-lookup"><span data-stu-id="15bec-235">No conversions are performed; therefore the data retrieved must already be a <xref:System.Decimal> or coercible to a `Decimal`.</span></span>  
  
 <span data-ttu-id="15bec-236">Wywołaj <xref:System.Data.DataTableReader.IsDBNull%2A> czy przed wywołaniem tej metody są wartości null.</span><span class="sxs-lookup"><span data-stu-id="15bec-236">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15bec-237">Poniższy przykład wyświetla zawartość kolumny numerowane 2 w ramach przekazany do <xref:System.Data.DataTableReader>.</span><span class="sxs-lookup"><span data-stu-id="15bec-237">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="15bec-238">Jeśli kolumna w określonym wierszu ma wartość null, ten kod wyświetla tekst \<NULL >.</span><span class="sxs-lookup"><span data-stu-id="15bec-238">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="15bec-239">Jeśli dane w kolumnie nie jest poprawnego typu, przykład wyświetla komunikat o błędzie dla każdego wiersza.</span><span class="sxs-lookup"><span data-stu-id="15bec-239">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetDecimal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDecimal/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDecimal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDecimal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="15bec-240">Indeks przekazywane był poza zakresem od 0 do <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-240">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="15bec-241">Próbowano pobrać dane z usuniętego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-241">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="15bec-242">Nastąpiła próba odczytu lub uzyskać dostępu do kolumny w zamkniętej <see langword="DataTableReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-242">An attempt was made to read or access a column in a closed <see langword="DataTableReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="15bec-243">Określona kolumna nie zawiera <see langword="Decimal" /> wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-243">The specified column does not contain a <see langword="Decimal" /> value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public override double GetDouble (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 GetDouble(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDouble (ordinal As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override double GetDouble(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDouble : int -&gt; double" Usage="dataTableReader.GetDouble ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="15bec-244">Liczony od zera numeru porządkowego kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-244">The zero-based ordinal of the column.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15bec-245">Pobiera wartość kolumny jako podwójnej precyzji liczbę zmiennoprzecinkową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-245">Gets the value of the column as a double-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15bec-246">Wartość określonej kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-246">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15bec-247">Konwersje nie są wykonywane; w związku z tym danych pobranych musi już być podwójnej precyzji liczb zmiennoprzecinkowych, lub musi być zwracała wartość do podwójnej precyzji liczbę zmiennoprzecinkową.</span><span class="sxs-lookup"><span data-stu-id="15bec-247">No conversions are performed; therefore the data retrieved must already be a double-precision floating point number or must be coercible to a double-precision floating point number.</span></span>  
  
 <span data-ttu-id="15bec-248">Wywołaj <xref:System.Data.DataTableReader.IsDBNull%2A> czy przed wywołaniem tej metody są wartości null.</span><span class="sxs-lookup"><span data-stu-id="15bec-248">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15bec-249">Poniższy przykład wyświetla zawartość kolumny numerowane 2 w ramach przekazany do <xref:System.Data.DataTableReader>.</span><span class="sxs-lookup"><span data-stu-id="15bec-249">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="15bec-250">Jeśli kolumna w określonym wierszu ma wartość null, ten kod wyświetla tekst \<NULL >.</span><span class="sxs-lookup"><span data-stu-id="15bec-250">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="15bec-251">Jeśli dane w kolumnie nie jest poprawnego typu, przykład wyświetla komunikat o błędzie dla każdego wiersza.</span><span class="sxs-lookup"><span data-stu-id="15bec-251">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetDouble#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDouble/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDouble#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDouble/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="15bec-252">Indeks przekazywane był poza zakresem od 0 do <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-252">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="15bec-253">Próbowano pobrać dane z usuniętego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-253">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="15bec-254">Nastąpiła próba odczytu lub uzyskać dostępu do kolumny w zamkniętej <see langword="DataTableReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-254">An attempt was made to read or access a column in a closed <see langword="DataTableReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="15bec-255">Określona kolumna nie zawiera podwójnej precyzji liczbę zmiennoprzecinkową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-255">The specified column does not contain a double-precision floating point number.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="dataTableReader.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="15bec-256">Zwraca moduł wyliczający, który może służyć do iterowania po kolekcji elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-256">Returns an enumerator that can be used to iterate through the item collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15bec-257">
            <see cref="T:System.Collections.IEnumerator" /> Obiekt, który reprezentuje kolekcję elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-257">An <see cref="T:System.Collections.IEnumerator" /> object that represents the item collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15bec-258">Moduły wyliczające Zezwalaj tylko do odczytu danych w <xref:System.Data.DataTableReader>.</span><span class="sxs-lookup"><span data-stu-id="15bec-258">Enumerators only allow for reading the data in the <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="15bec-259">Moduły wyliczające nie można modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="15bec-259">Enumerators cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="15bec-260">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="15bec-260">At first, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="15bec-261">Co to położenie, wywołanie <xref:System.Collections.IEnumerator.Current%2A> zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="15bec-261">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="15bec-262">W związku z tym, należy wywołać `MoveNext` do wyprzedzeniem modułu wyliczającego do pierwszego elementu kolekcji przed odczytaniem wartości właściwości `Current`.</span><span class="sxs-lookup"><span data-stu-id="15bec-262">Therefore, you must call `MoveNext` to advance the enumerator to the first element of the collection before reading the value of `Current`.</span></span>  
  
 <span data-ttu-id="15bec-263">`Current` Zwraca <xref:System.Data.Common.DbDataRecord>i zwraca ten sam obiekt, do momentu <xref:System.Collections.IEnumerator.MoveNext%2A> lub <xref:System.Collections.IEnumerator.Reset%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="15bec-263">`Current` returns a <xref:System.Data.Common.DbDataRecord>, and returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="15bec-264">`MoveNext` Ustawia `Current` do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="15bec-264">`MoveNext` sets `Current` to the next element.</span></span>  
  
 <span data-ttu-id="15bec-265">Przechodzi przez koniec kolekcji, moduł wyliczający po określonym położeniem za ostatnim elementem w kolekcji i wywoływania `MoveNext` zwraca wartość false.</span><span class="sxs-lookup"><span data-stu-id="15bec-265">After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling `MoveNext` returns false.</span></span> <span data-ttu-id="15bec-266">Jeśli ostatnie wywołanie `MoveNext` zwrócił `false`, wywoływania `Current` zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="15bec-266">If the last call to `MoveNext` returned `false`, calling `Current` throws an exception.</span></span> <span data-ttu-id="15bec-267">Ponadto ponieważ <xref:System.Data.DataTableReader> zapewnia dostęp tylko do przodu do swoich danych, wywoływania <xref:System.Collections.IEnumerator.Reset%2A> metoda IEnumerator zgłasza <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="15bec-267">In addition, because the <xref:System.Data.DataTableReader> provides forward-only access to its data, calling the <xref:System.Collections.IEnumerator.Reset%2A> method of the IEnumerator throws a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="15bec-268"><xref:System.Data.DataTableReader> Zapewnia stabilne modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="15bec-268">The <xref:System.Data.DataTableReader> provides a stable enumerator.</span></span> <span data-ttu-id="15bec-269">Oznacza to, że nawet jeśli występują w danych bazowych usunięcia wiersza lub dodatki moduł wyliczający jest zwracany przez wywołanie <xref:System.Data.DataTableReader.GetEnumerator%2A> jest nadal ważny.</span><span class="sxs-lookup"><span data-stu-id="15bec-269">This means that even if row deletions or additions occur within the underlying data, the enumerator returned by a call to <xref:System.Data.DataTableReader.GetEnumerator%2A> is still valid.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15bec-270">W poniższym przykładzie pokazano użycie <xref:System.Data.DataTableReader.GetEnumerator%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="15bec-270">The following example demonstrates the use of the <xref:System.Data.DataTableReader.GetEnumerator%2A> method.</span></span> <span data-ttu-id="15bec-271">Dotyczy to również zachowanie modułu wyliczającego wiersze są usuwane z bazowego <xref:System.Data.DataTable> , gdy moduł wyliczający jest aktywny.</span><span class="sxs-lookup"><span data-stu-id="15bec-271">This includes the behavior of the enumerator when rows are deleted from the underlying <xref:System.Data.DataTable> while the enumerator is active.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetEnumerator/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetEnumerator/VB/source.vb#1)]  
  
 <span data-ttu-id="15bec-272">Procedura wyświetla następujący tekst w oknie konsoli:</span><span class="sxs-lookup"><span data-stu-id="15bec-272">The procedure displays the following text in the Console window:</span></span>  
  
```  
Peter  
Mary  
Russ  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="15bec-273">Nastąpiła próba odczytu lub uzyskać dostępu do kolumny w zamkniętej <see cref="T:System.Data.DataTableReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-273">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public override Type GetFieldType (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetFieldType(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFieldType (ordinal As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetFieldType(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetFieldType : int -&gt; Type" Usage="dataTableReader.GetFieldType ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="15bec-274">Numer porządkowy kolumny liczony od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-274">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15bec-275">Pobiera <see cref="T:System.Type" /> który jest typem danych obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-275">Gets the <see cref="T:System.Type" /> that is the data type of the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15bec-276">
            <see cref="T:System.Type" /> Który jest typem danych obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-276">The <see cref="T:System.Type" /> that is the data type of the object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="15bec-277">Wywołaj procedurę, przekazując <xref:System.Data.DataTableReader> wystąpienia, aby wyświetlić listę wszystkich pól i Pełna nazwa dla każdego typu w oknie konsoli.</span><span class="sxs-lookup"><span data-stu-id="15bec-277">Call the following procedure, passing in a <xref:System.Data.DataTableReader> instance in order to display a list of all the fields and the full name for each type in the Console window.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetFieldType#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFieldType/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetFieldType#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFieldType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="15bec-278">Indeks przekazywane był poza zakresem od 0 do <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-278">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="15bec-279">Nastąpiła próba odczytu lub uzyskać dostępu do kolumny w zamkniętej <see cref="T:System.Data.DataTableReader" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-279">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /> .</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public override float GetFloat (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 GetFloat(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetFloat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFloat (ordinal As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override float GetFloat(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetFloat : int -&gt; single" Usage="dataTableReader.GetFloat ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="15bec-280">Numer porządkowy kolumny liczony od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-280">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15bec-281">Pobiera wartość określonej kolumny jako pojedynczej precyzji liczbę zmiennoprzecinkową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-281">Gets the value of the specified column as a single-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15bec-282">Wartość kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-282">The value of the column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15bec-283">Konwersje nie są wykonywane; w związku z tym danych pobranych musi już być pojedynczej precyzji liczb zmiennoprzecinkowych, lub musi być zwracała wartość do pojedynczej precyzji liczbę zmiennoprzecinkową.</span><span class="sxs-lookup"><span data-stu-id="15bec-283">No conversions are performed; therefore the data retrieved must already be a single-precision floating point number or must be coercible to a single-precision floating point number.</span></span>  
  
 <span data-ttu-id="15bec-284">Wywołaj <xref:System.Data.DataTableReader.IsDBNull%2A> czy przed wywołaniem tej metody są wartości null.</span><span class="sxs-lookup"><span data-stu-id="15bec-284">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15bec-285">Poniższy przykład wyświetla zawartość kolumny numerowane 2 w ramach przekazany do <xref:System.Data.DataTableReader>.</span><span class="sxs-lookup"><span data-stu-id="15bec-285">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="15bec-286">Jeśli kolumna w określonym wierszu ma wartość null, ten kod wyświetla tekst \<NULL >.</span><span class="sxs-lookup"><span data-stu-id="15bec-286">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="15bec-287">Jeśli dane w kolumnie nie jest poprawnego typu, przykład wyświetla komunikat o błędzie dla każdego wiersza.</span><span class="sxs-lookup"><span data-stu-id="15bec-287">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetFloat#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFloat/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetFloat#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFloat/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="15bec-288">Indeks przekazywane był poza zakresem od 0 do <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-288">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="15bec-289">Próbowano pobrać dane z usuniętego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-289">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="15bec-290">Nastąpiła próba odczytu lub uzyskać dostępu do kolumny w zamkniętej <see cref="T:System.Data.DataTableReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-290">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="15bec-291">Określona kolumna nie zawiera pojedynczej precyzji liczbę zmiennoprzecinkową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-291">The specified column does not contain a single-precision floating point number.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public override Guid GetGuid (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Guid GetGuid(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGuid (ordinal As Integer) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Guid GetGuid(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetGuid : int -&gt; Guid" Usage="dataTableReader.GetGuid ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="15bec-292">Numer porządkowy kolumny liczony od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-292">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15bec-293">Pobiera wartość określonej kolumny jako globalnie unikatowy identyfikator (globalny GUID).</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-293">Gets the value of the specified column as a globally-unique identifier (GUID).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15bec-294">Wartość określonej kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-294">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15bec-295">Konwersje nie są wykonywane; w związku z tym musi już być danych pobranych <xref:System.Guid> lub zwracała wartość do `Guid`.</span><span class="sxs-lookup"><span data-stu-id="15bec-295">No conversions are performed; therefore the data retrieved must already be a <xref:System.Guid> or coercible to a `Guid`.</span></span>  
  
 <span data-ttu-id="15bec-296">Wywołaj <xref:System.Data.DataTableReader.IsDBNull%2A> czy przed wywołaniem tej metody są wartości null.</span><span class="sxs-lookup"><span data-stu-id="15bec-296">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15bec-297">Poniższy przykład wyświetla zawartość kolumny numerowane 2 w ramach elementu DataTableReader przekazany w.</span><span class="sxs-lookup"><span data-stu-id="15bec-297">The following example displays the contents of the column numbered 2 within the passed-in DataTableReader.</span></span> <span data-ttu-id="15bec-298">Jeśli kolumna w określonym wierszu ma wartość null, ten kod wyświetla tekst \<NULL >.</span><span class="sxs-lookup"><span data-stu-id="15bec-298">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="15bec-299">Jeśli dane w kolumnie nie jest poprawnego typu, przykład wyświetla komunikat o błędzie dla każdego wiersza.</span><span class="sxs-lookup"><span data-stu-id="15bec-299">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetGuid#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetGuid/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetGuid#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetGuid/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="15bec-300">Indeks przekazywane był poza zakresem od 0 do <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-300">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="15bec-301">Próbowano pobrać dane z usuniętego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-301">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="15bec-302">Nastąpiła próba odczytu lub uzyskać dostępu do kolumny w zamkniętej <see cref="T:System.Data.DataTableReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-302">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="15bec-303">Określona kolumna nie zawiera identyfikatora GUID.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-303">The specified column does not contain a GUID.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public override short GetInt16 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int16 GetInt16(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt16 (ordinal As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override short GetInt16(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt16 : int -&gt; int16" Usage="dataTableReader.GetInt16 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="15bec-304">Liczony od zera numeru kolumny</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-304">The zero-based column ordinal</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15bec-305">Pobiera wartość określonej kolumny jako całkowita 16-bitowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-305">Gets the value of the specified column as a 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15bec-306">Wartość określonej kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-306">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15bec-307">Konwersje nie są wykonywane; w związku z tym, musi już być danych pobranych <xref:System.Int16> lub zwracała wartość do `Int16`.</span><span class="sxs-lookup"><span data-stu-id="15bec-307">No conversions are performed; therefore, the data retrieved must already be an <xref:System.Int16> or coercible to an `Int16`.</span></span>  
  
 <span data-ttu-id="15bec-308">Wywołaj <xref:System.Data.DataTableReader.IsDBNull%2A> czy przed wywołaniem tej metody są wartości null.</span><span class="sxs-lookup"><span data-stu-id="15bec-308">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15bec-309">Poniższy przykład wyświetla zawartość kolumny numerowane 2 w ramach przekazany do <xref:System.Data.DataTableReader>.</span><span class="sxs-lookup"><span data-stu-id="15bec-309">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="15bec-310">Jeśli kolumna w określonym wierszu ma wartość null, ten kod wyświetla tekst \<NULL >.</span><span class="sxs-lookup"><span data-stu-id="15bec-310">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="15bec-311">Jeśli dane w kolumnie nie jest poprawnego typu, przykład wyświetla komunikat o błędzie dla każdego wiersza.</span><span class="sxs-lookup"><span data-stu-id="15bec-311">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetInt16#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt16/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetInt16#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt16/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="15bec-312">Indeks przekazywane był poza zakresem od 0 do <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-312">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="15bec-313">Próbowano pobrać dane z usuniętego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-313">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="15bec-314">Nastąpiła próba odczytu lub uzyskać dostępu do kolumny w zamkniętej <see cref="T:System.Data.DataTableReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-314">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="15bec-315">Określona kolumna nie zawiera całkowita 16-bitowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-315">The specified column does not contain a 16-bit signed integer.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public override int GetInt32 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetInt32(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt32 (ordinal As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetInt32(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt32 : int -&gt; int" Usage="dataTableReader.GetInt32 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="15bec-316">Liczony od zera numeru kolumny</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-316">The zero-based column ordinal</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15bec-317">Pobiera wartość określonej kolumny jako całkowita 32-bitowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-317">Gets the value of the specified column as a 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15bec-318">Wartość określonej kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-318">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15bec-319">Konwersje nie są wykonywane; w związku z tym, musi już być danych pobranych <xref:System.Int32> lub zwracała wartość do `Int32`.</span><span class="sxs-lookup"><span data-stu-id="15bec-319">No conversions are performed; therefore, the data retrieved must already be an <xref:System.Int32> or coercible to an `Int32`.</span></span>  
  
 <span data-ttu-id="15bec-320">Wywołaj <xref:System.Data.DataTableReader.IsDBNull%2A> czy przed wywołaniem tej metody są wartości null.</span><span class="sxs-lookup"><span data-stu-id="15bec-320">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15bec-321">Poniższy przykład wyświetla zawartość kolumny numerowane 2 w ramach przekazany do <xref:System.Data.DataTableReader>.</span><span class="sxs-lookup"><span data-stu-id="15bec-321">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="15bec-322">Jeśli kolumna w określonym wierszu ma wartość null, ten kod wyświetla tekst \<NULL >.</span><span class="sxs-lookup"><span data-stu-id="15bec-322">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="15bec-323">Jeśli dane w kolumnie nie jest poprawnego typu, przykład wyświetla komunikat o błędzie dla każdego wiersza.</span><span class="sxs-lookup"><span data-stu-id="15bec-323">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetInt32#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt32/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetInt32#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt32/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="15bec-324">Indeks przekazywane był poza zakresem od 0 do <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-324">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="15bec-325">Próbowano pobrać dane z usuniętego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-325">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="15bec-326">Nastąpiła próba odczytu lub uzyskać dostępu do kolumny w zamkniętej <see cref="T:System.Data.DataTableReader" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-326">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /> .</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="15bec-327">Określona kolumna nie zawiera wartości 32-bitową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-327">The specified column does not contain a 32-bit signed integer value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public override long GetInt64 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetInt64(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt64 (ordinal As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetInt64(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt64 : int -&gt; int64" Usage="dataTableReader.GetInt64 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="15bec-328">Liczony od zera numeru kolumny</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-328">The zero-based column ordinal</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15bec-329">Pobiera wartość określonej kolumny jako całkowita 64-bitowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-329">Gets the value of the specified column as a 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15bec-330">Wartość określonej kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-330">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15bec-331">Konwersje nie są wykonywane; w związku z tym, musi już być danych pobranych <xref:System.Int64> lub zwracała wartość do `Int64`.</span><span class="sxs-lookup"><span data-stu-id="15bec-331">No conversions are performed; therefore, the data retrieved must already be an <xref:System.Int64> or coercible to an `Int64`.</span></span>  
  
 <span data-ttu-id="15bec-332">Wywołaj <xref:System.Data.DataTableReader.IsDBNull%2A> czy przed wywołaniem tej metody są wartości null.</span><span class="sxs-lookup"><span data-stu-id="15bec-332">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15bec-333">Poniższy przykład wyświetla zawartość kolumny numerowane 2 w ramach przekazany do <xref:System.Data.DataTableReader>.</span><span class="sxs-lookup"><span data-stu-id="15bec-333">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="15bec-334">Jeśli kolumna w określonym wierszu ma wartość null, ten kod wyświetla tekst \<NULL >.</span><span class="sxs-lookup"><span data-stu-id="15bec-334">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="15bec-335">Jeśli dane w kolumnie nie jest poprawnego typu, przykład wyświetla komunikat o błędzie dla każdego wiersza.</span><span class="sxs-lookup"><span data-stu-id="15bec-335">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetInt64#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt64/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetInt64#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt64/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="15bec-336">Indeks przekazywane był poza zakresem od 0 do <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-336">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="15bec-337">Próbowano pobrać dane z usuniętego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-337">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="15bec-338">Nastąpiła próba odczytu lub uzyskać dostępu do kolumny w zamkniętej <see cref="T:System.Data.DataTableReader" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-338">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /> .</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="15bec-339">Określona kolumna nie zawiera wartości liczby całkowitej ze znakiem 64-bitowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-339">The specified column does not contain a 64-bit signed integer value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public override string GetName (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetName(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetName (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetName(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetName : int -&gt; string" Usage="dataTableReader.GetName ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="15bec-340">Liczony od zera numeru kolumny</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-340">The zero-based column ordinal</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15bec-341">Pobiera wartość określonej kolumny jako <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-341">Gets the value of the specified column as a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15bec-342">Nazwa określonej kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-342">The name of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15bec-343">`GetName` i <xref:System.Data.DataTableReader.GetOrdinal%2A> metody zapewnienia odwrotność funkcji.</span><span class="sxs-lookup"><span data-stu-id="15bec-343">The `GetName` and <xref:System.Data.DataTableReader.GetOrdinal%2A> methods provide inverse functionality.</span></span> <span data-ttu-id="15bec-344">Oznacza to, że wywołanie `GetOrdinal` na wartość zwracaną przez wywołanie `GetName` powinna zwrócić pierwotny parametr przekazywany do `GetName`; to samo dotyczy wywoływanie procedur w kolejności przeciwnej.</span><span class="sxs-lookup"><span data-stu-id="15bec-344">That is, calling `GetOrdinal` on the return value of calling `GetName` should return the original parameter passed to `GetName`; the same applies to calling the procedures in the opposite order.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15bec-345">Prosty przykład zawiera procedury, która wyświetla nazwy wszystkich kolumn w ramach określonych `DataTableReader`i pozycję porządkowego kolumny, w oknie konsoli.</span><span class="sxs-lookup"><span data-stu-id="15bec-345">The following simple example includes a procedure that lists the names of all the columns within the specified `DataTableReader`, and the column's ordinal position, to the Console window.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetName#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetName/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetName#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetName/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="15bec-346">Indeks przekazywane był poza zakresem od 0 do <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-346">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="15bec-347">Nastąpiła próba odczytu lub uzyskać dostępu do kolumny w zamkniętej <see cref="T:System.Data.DataTableReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-347">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetOrdinal">
      <MemberSignature Language="C#" Value="public override int GetOrdinal (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetOrdinal(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetOrdinal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOrdinal (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetOrdinal(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetOrdinal : string -&gt; int" Usage="dataTableReader.GetOrdinal name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="15bec-348">Nazwa kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-348">The name of the column.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15bec-349">Pobiera kolumnę porządkowe, biorąc pod uwagę nazwę kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-349">Gets the column ordinal, given the name of the column.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15bec-350">Numer porządkowy kolumny liczony od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-350">The zero-based column ordinal.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15bec-351">Ponieważ większość metod dostarczonych przez <xref:System.Data.DataTableReader> klasy musi być podana przy użyciu numeru porządkowego kolumny, możesz użyć `GetOrdinal` metodę, która pobierze numer kolumny, biorąc pod uwagę nazwę kolumny.</span><span class="sxs-lookup"><span data-stu-id="15bec-351">Because most of the methods provided by the <xref:System.Data.DataTableReader> class must be provided with an ordinal column number, you can use the `GetOrdinal` method to retrieve the column number, given the name of the column.</span></span>  
  
 <span data-ttu-id="15bec-352">`GetOrdinal` najpierw wykonuje wyszukiwanie uwzględniana wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="15bec-352">`GetOrdinal` performs a case-sensitive lookup first.</span></span> <span data-ttu-id="15bec-353">Jeśli nie powiedzie się, zostanie przeprowadzona drugi wyszukiwanie bez uwzględniania wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="15bec-353">If it fails, a second case-insensitive search is made.</span></span> <span data-ttu-id="15bec-354">Jeśli nie zostanie znaleziony numer kolumny `IndexOutOfRangeException` zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="15bec-354">If the column number is not found an `IndexOutOfRangeException` is thrown.</span></span>  
  
 <span data-ttu-id="15bec-355">`GetOrdinal` znaki kana i szerokości jest rozróżniana wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="15bec-355">`GetOrdinal` is kana-width insensitive.</span></span>  
  
 <span data-ttu-id="15bec-356">Ponieważ wyszukiwań na podstawie liczba porządkowa są bardziej efektywne niż wyszukiwania o nazwie, jest nieefektywne wywołać `GetOrdinal` w pętli.</span><span class="sxs-lookup"><span data-stu-id="15bec-356">Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call `GetOrdinal` within a loop.</span></span> <span data-ttu-id="15bec-357">Oszczędzaj czas, przez wywołanie metody `GetOrdinal` jeden raz i przypisywanie wyniki do zmiennej całkowitej do użycia w ramach pętli</span><span class="sxs-lookup"><span data-stu-id="15bec-357">Save time by calling `GetOrdinal` one time and assigning the results to an integer variable for use within the loop</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15bec-358">Jeśli masz tylko nazwę kolumny, w takim przypadku nazwa kolumny jest podana, przez użytkownika i należy pobrać informacje z kolumny, procedura podobnie do poniższego umożliwia wyodrębnić wymaganych informacji.</span><span class="sxs-lookup"><span data-stu-id="15bec-358">If you have only a column name, in which case the column name is user supplied, and you must retrieve information from the column, you can use a procedure like the following to extract the required information.</span></span> <span data-ttu-id="15bec-359">W tym przykładzie procedury nazwa kolumny, która przyjmuje i zwraca dane, który znajduje się w tej kolumnie dla bieżącego wiersza w <xref:System.Data.DataTableReader> :</span><span class="sxs-lookup"><span data-stu-id="15bec-359">In this example, the procedure accepts a column name and returns the data that is contained within that column for the current row in the <xref:System.Data.DataTableReader> :</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetOrdinal/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="15bec-360">Nastąpiła próba odczytu lub uzyskać dostępu do kolumny w zamkniętej <see cref="T:System.Data.DataTableReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-360">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="15bec-361">Określona nazwa nie jest prawidłową nazwę kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-361">The name specified is not a valid column name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificFieldType">
      <MemberSignature Language="C#" Value="public override Type GetProviderSpecificFieldType (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetProviderSpecificFieldType(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificFieldType (ordinal As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetProviderSpecificFieldType(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificFieldType : int -&gt; Type" Usage="dataTableReader.GetProviderSpecificFieldType ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="15bec-362">Numer porządkowy kolumny liczony od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-362">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15bec-363">Pobiera typ określonej kolumny w formacie właściwe dla dostawcy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-363">Gets the type of the specified column in provider-specific format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15bec-364">
            <see cref="T:System.Type" /> Który jest typem danych obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-364">The <see cref="T:System.Type" /> that is the data type of the object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15bec-365">Ponieważ <xref:System.Data.DataTableReader> zawsze zwraca wartość typu przechowywane w ramach bazowego <xref:System.Data.DataColumn>, wartość zwracana przez wywołanie metody <xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A> metoda zawsze zwraca ten sam typ co typ przechowywane w ramach <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="15bec-365">Because the <xref:System.Data.DataTableReader> always returns the type stored within the underlying <xref:System.Data.DataColumn>, the value returned by calling the <xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A> method always returns the same type as the type stored within the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="15bec-366">Podczas pracy z <xref:System.Data.DataTableReader> klasy wywoływania <xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A> metoda zwraca tego samego typu co wywołanie metody <xref:System.Type.GetType%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="15bec-366">When you work with the <xref:System.Data.DataTableReader> class, calling the <xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A> method returns the same type as calling the <xref:System.Type.GetType%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="15bec-367">Indeks przekazywane był poza zakresem od 0 do <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-367">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="15bec-368">Nastąpiła próba odczytu lub uzyskać dostępu do kolumny w zamkniętej <see cref="T:System.Data.DataTableReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-368">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Data.DataTableReader.GetFieldType(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValue">
      <MemberSignature Language="C#" Value="public override object GetProviderSpecificValue (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetProviderSpecificValue(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValue (ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetProviderSpecificValue(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificValue : int -&gt; obj" Usage="dataTableReader.GetProviderSpecificValue ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="15bec-369">Liczony od zera numer kolumny, której wartość jest pobierana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-369">The zero-based number of the column whose value is retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15bec-370">Pobiera wartość określonej kolumny w formacie właściwe dla dostawcy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-370">Gets the value of the specified column in provider-specific format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15bec-371">Wartość określonej kolumny w formacie właściwe dla dostawcy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-371">The value of the specified column in provider-specific format.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15bec-372">Ponieważ <xref:System.Data.DataTableReader> zawsze zwraca wartość typu przechowywane w ramach bazowego <xref:System.Data.DataColumn>, wartość zwracana przez wywołanie metody <xref:System.Data.DataTableReader.GetProviderSpecificValue%2A> metoda zawsze zwraca dane z tego samego typu co dane przechowywane w <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="15bec-372">Because the <xref:System.Data.DataTableReader> always returns the type stored within the underlying <xref:System.Data.DataColumn>, the value returned by calling the <xref:System.Data.DataTableReader.GetProviderSpecificValue%2A> method always returns data of the same type as the data stored within the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="15bec-373">Podczas pracy z <xref:System.Data.DataTableReader> klasy wywoływania <xref:System.Data.DataTableReader.GetProviderSpecificValue%2A> metoda zwróci wartość taka sama wartość i wpisz co wywołanie metody <xref:System.Data.DataTableReader.GetValue%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="15bec-373">When you work with the <xref:System.Data.DataTableReader> class, calling the <xref:System.Data.DataTableReader.GetProviderSpecificValue%2A> method returns the same value and type as calling the <xref:System.Data.DataTableReader.GetValue%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="15bec-374">Indeks przekazywane był poza zakresem od 0 do <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-374">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="15bec-375">Próbowano pobrać dane z usuniętego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-375">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="15bec-376">Nastąpiła próba odczytu lub uzyskać dostępu do kolumny w zamkniętej <see cref="T:System.Data.DataTableReader" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-376">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /></span>
          </span>
        </exception>
        <altmember cref="M:System.Data.DataTableReader.GetValue(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValues">
      <MemberSignature Language="C#" Value="public override int GetProviderSpecificValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetProviderSpecificValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetProviderSpecificValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificValues : obj[] -&gt; int" Usage="dataTableReader.GetProviderSpecificValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="15bec-377">Tablica obiektów w celu wprowadzenia informacji o typie dla kolumn w <see cref="T:System.Data.DataTableReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-377">An array of objects to be filled in with type information for the columns in the <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15bec-378">Wypełnia tablicę podane informacje o typie właściwe dla dostawcy dla wszystkich kolumn w <see cref="T:System.Data.DataTableReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-378">Fills the supplied array with provider-specific type information for all the columns in the <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15bec-379">Liczba wartości w kolumnie jest kopiowana do tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-379">The number of column values copied into the array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15bec-380">Ponieważ <xref:System.Data.DataTableReader> zawsze zwraca dane typu przechowywane w ramach bazowego <xref:System.Data.DataColumn>, wartości zwracane przez wywołanie metody <xref:System.Data.DataTableReader.GetProviderSpecificValues%2A> metody zawsze ma te same typy danych są przechowywane w <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="15bec-380">Because the <xref:System.Data.DataTableReader> always returns the data of the type stored within the underlying <xref:System.Data.DataColumn>, the values returned by calling the <xref:System.Data.DataTableReader.GetProviderSpecificValues%2A> method is always of the same types as the data stored within the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="15bec-381">Podczas pracy z <xref:System.Data.DataTableReader> klasy wywoływania <xref:System.Data.DataTableReader.GetProviderSpecificValues%2A> metoda zwraca te same wartości i typy co wywołanie metody <xref:System.Data.DataTableReader.GetValues%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="15bec-381">When you work with the <xref:System.Data.DataTableReader> class, calling the <xref:System.Data.DataTableReader.GetProviderSpecificValues%2A> method returns the same values and types as calling the <xref:System.Data.DataTableReader.GetValues%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="15bec-382">Próbowano pobrać dane z usuniętego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-382">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="15bec-383">Nastąpiła próba odczytu lub uzyskać dostępu do kolumny w zamkniętej <see cref="T:System.Data.DataTableReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-383">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Data.DataTableReader.GetValues(System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchemaTable();" />
      <MemberSignature Language="F#" Value="override this.GetSchemaTable : unit -&gt; System.Data.DataTable" Usage="dataTableReader.GetSchemaTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="15bec-384">Zwraca <see cref="T:System.Data.DataTable" /> opisującą kolumny metadanych <see cref="T:System.Data.DataTableReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-384">Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15bec-385">A <see cref="T:System.Data.DataTable" /> opisujący metadanych kolumn.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-385">A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15bec-386">Metoda GetSchemaTable zwraca metadane dotyczące każdej kolumny w następującej kolejności:</span><span class="sxs-lookup"><span data-stu-id="15bec-386">The GetSchemaTable method returns metadata about each column in the following order:</span></span>  
  
|<span data-ttu-id="15bec-387">Kolumna elementu DataReader</span><span class="sxs-lookup"><span data-stu-id="15bec-387">DataReader column</span></span>|<span data-ttu-id="15bec-388">Opis</span><span class="sxs-lookup"><span data-stu-id="15bec-388">Description</span></span>|  
|-----------------------|-----------------|  
|<span data-ttu-id="15bec-389">NazwaKolumny</span><span class="sxs-lookup"><span data-stu-id="15bec-389">ColumnName</span></span>|<span data-ttu-id="15bec-390">Nazwa kolumny w postaci, w jakiej jest wyświetlana w <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="15bec-390">The name of the column as it appears in the <xref:System.Data.DataTable>.</span></span>|  
|<span data-ttu-id="15bec-391">ColumnOrdinal</span><span class="sxs-lookup"><span data-stu-id="15bec-391">ColumnOrdinal</span></span>|<span data-ttu-id="15bec-392">Numer kolumny</span><span class="sxs-lookup"><span data-stu-id="15bec-392">The ordinal of the column</span></span>|  
|<span data-ttu-id="15bec-393">ColumnSize</span><span class="sxs-lookup"><span data-stu-id="15bec-393">ColumnSize</span></span>|<span data-ttu-id="15bec-394">-1, jeśli <xref:System.Data.Common.SchemaTableColumn.ColumnSize> (lub <xref:System.Data.DataColumn.MaxLength%2A>) właściwość <xref:System.Data.DataColumn> nie może być określony lub nie jest istotne; w przeciwnym razie 0 lub dodatnia liczba całkowita, która zawiera `MaxLength` wartość.</span><span class="sxs-lookup"><span data-stu-id="15bec-394">-1 if the <xref:System.Data.Common.SchemaTableColumn.ColumnSize> (or <xref:System.Data.DataColumn.MaxLength%2A>) property of the <xref:System.Data.DataColumn> cannot be determined or is not relevant; otherwise, 0 or a positive integer that contains the `MaxLength` value.</span></span>|  
|<span data-ttu-id="15bec-395">NumericPrecision</span><span class="sxs-lookup"><span data-stu-id="15bec-395">NumericPrecision</span></span>|<span data-ttu-id="15bec-396">Jeśli typ kolumny jest typu liczbowego, jest to maksymalna dokładność kolumny.</span><span class="sxs-lookup"><span data-stu-id="15bec-396">If the column type is a numeric type, this is the maximum precision of the column.</span></span> <span data-ttu-id="15bec-397">Jeśli typ kolumny nie jest typu liczbowego, to jest wartość null.</span><span class="sxs-lookup"><span data-stu-id="15bec-397">If the column type is not a numeric data type, this is a null value.</span></span>|  
|<span data-ttu-id="15bec-398">NumericScale</span><span class="sxs-lookup"><span data-stu-id="15bec-398">NumericScale</span></span>|<span data-ttu-id="15bec-399">Jeśli typ danych kolumny zawiera składnik skali, zwraca liczbę cyfr po prawej stronie przecinka dziesiętnego.</span><span class="sxs-lookup"><span data-stu-id="15bec-399">If column data type has a scale component, return the number of digits to the right of the decimal point.</span></span> <span data-ttu-id="15bec-400">W przeciwnym razie zwraca wartość null.</span><span class="sxs-lookup"><span data-stu-id="15bec-400">Otherwise, return a null value.</span></span>|  
|<span data-ttu-id="15bec-401">Typ danych</span><span class="sxs-lookup"><span data-stu-id="15bec-401">DataType</span></span>|<span data-ttu-id="15bec-402">Podstawowy typ kolumny.</span><span class="sxs-lookup"><span data-stu-id="15bec-402">The underlying type of the column.</span></span>|  
|<span data-ttu-id="15bec-403">Typ dostawcy</span><span class="sxs-lookup"><span data-stu-id="15bec-403">ProviderType</span></span>|<span data-ttu-id="15bec-404">Wskazuje typ danych kolumny.</span><span class="sxs-lookup"><span data-stu-id="15bec-404">The indicator of the column's data type.</span></span> <span data-ttu-id="15bec-405">Jeśli typ danych kolumny zmienia się wiersz po wierszu, ta wartość jest <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="15bec-405">If the data type of the column varies from row to row, this value is <xref:System.Object>.</span></span> <span data-ttu-id="15bec-406">Ta kolumna nie może zawierać wartości null.</span><span class="sxs-lookup"><span data-stu-id="15bec-406">This column cannot contain a null value.</span></span>|  
|<span data-ttu-id="15bec-407">IsLong</span><span class="sxs-lookup"><span data-stu-id="15bec-407">IsLong</span></span>|<span data-ttu-id="15bec-408">`true` Jeśli typ danych kolumny jest <xref:System.String> i jego <xref:System.Data.DataColumn.MaxLength%2A> właściwość ma wartość -1.</span><span class="sxs-lookup"><span data-stu-id="15bec-408">`true` if the data type of the column is <xref:System.String> and its <xref:System.Data.DataColumn.MaxLength%2A> property is -1.</span></span> <span data-ttu-id="15bec-409">W przeciwnym razie `false`.</span><span class="sxs-lookup"><span data-stu-id="15bec-409">Otherwise, `false`.</span></span>|  
|<span data-ttu-id="15bec-410">AllowDBNull</span><span class="sxs-lookup"><span data-stu-id="15bec-410">AllowDBNull</span></span>|<span data-ttu-id="15bec-411">`true` Jeśli ustawiono ograniczenie AllowDbNull na wartość true dla kolumny; w przeciwnym razie `false`.</span><span class="sxs-lookup"><span data-stu-id="15bec-411">`true` if the AllowDbNull constraint is set to true for the column; otherwise, `false`.</span></span>|  
|<span data-ttu-id="15bec-412">IsReadOnly</span><span class="sxs-lookup"><span data-stu-id="15bec-412">IsReadOnly</span></span>|<span data-ttu-id="15bec-413">`true` Jeśli nie można zmodyfikować kolumny; w przeciwnym razie `false`.</span><span class="sxs-lookup"><span data-stu-id="15bec-413">`true` if the column cannot be modified; otherwise `false`.</span></span>|  
|<span data-ttu-id="15bec-414">IsRowVersion</span><span class="sxs-lookup"><span data-stu-id="15bec-414">IsRowVersion</span></span>|<span data-ttu-id="15bec-415">`false`, dla każdej kolumny.</span><span class="sxs-lookup"><span data-stu-id="15bec-415">`false`, for every column.</span></span>|  
|<span data-ttu-id="15bec-416">IsUnique</span><span class="sxs-lookup"><span data-stu-id="15bec-416">IsUnique</span></span>|<span data-ttu-id="15bec-417">`true`: Żadne dwa wiersze w <xref:System.Data.DataTable> może mieć taką samą wartość w tej kolumnie.</span><span class="sxs-lookup"><span data-stu-id="15bec-417">`true`: No two rows in the <xref:System.Data.DataTable> can have the same value in this column.</span></span> <span data-ttu-id="15bec-418">`IsUnique` gwarantuje to wartość true, jeśli kolumna reprezentuje klucz przez siebie lub czy istnieje ograniczenie typu UNIKATOWEGO, która ma zastosowanie tylko do tej kolumny.</span><span class="sxs-lookup"><span data-stu-id="15bec-418">`IsUnique` is guaranteed to be true if the column represents a key by itself or if there is a constraint of type UNIQUE that applies only to this column.</span></span> <span data-ttu-id="15bec-419">`false`: Kolumna może zawierać zduplikowanych wartości w `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="15bec-419">`false`: The column can contain duplicate values in the `DataTable`.</span></span> <span data-ttu-id="15bec-420">Domyślnie ta kolumna jest `false`.</span><span class="sxs-lookup"><span data-stu-id="15bec-420">The default of this column is `false`.</span></span>|  
|<span data-ttu-id="15bec-421">IsKey</span><span class="sxs-lookup"><span data-stu-id="15bec-421">IsKey</span></span>|<span data-ttu-id="15bec-422">`true`: Kolumna jest jednym z zestawów kolumn, razem jednoznacznie identyfikują wiersze, które w <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="15bec-422">`true`: The column is one of a set of columns that, taken together, uniquely identify the row in the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="15bec-423">Zestaw kolumn z `IsKey` równa `true` musi jednoznacznie identyfikować wiersza w `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="15bec-423">The set of columns with `IsKey` set to `true` must uniquely identify a row in the `DataTable`.</span></span> <span data-ttu-id="15bec-424">Nie istnieje wymóg ten zestaw kolumn to minimalny zestaw kolumn.</span><span class="sxs-lookup"><span data-stu-id="15bec-424">There is no requirement that this set of columns is a minimal set of columns.</span></span> <span data-ttu-id="15bec-425">Ten zestaw kolumn może zostać wygenerowany na podstawie `DataTable` klucza podstawowego, unikatowego ograniczenia lub unikatowego indeksu.</span><span class="sxs-lookup"><span data-stu-id="15bec-425">This set of columns may be generated from a `DataTable` primary key, a unique constraint or a unique index.</span></span> <span data-ttu-id="15bec-426">`false`: Kolumna nie jest wymagany do jednoznacznego identyfikowania wiersza.</span><span class="sxs-lookup"><span data-stu-id="15bec-426">`false`: The column is not required to uniquely identify the row.</span></span> <span data-ttu-id="15bec-427">Ta wartość jest `true` Jeśli kolumna uczestniczy w pojedynczym lub złożony klucz podstawowy.</span><span class="sxs-lookup"><span data-stu-id="15bec-427">This value is `true` if the column participates in a single or composite primary key.</span></span> <span data-ttu-id="15bec-428">W przeciwnym razie jego wartość wynosi `false`.</span><span class="sxs-lookup"><span data-stu-id="15bec-428">Otherwise, its value is `false`.</span></span>|  
|<span data-ttu-id="15bec-429">IsAutoIncrement</span><span class="sxs-lookup"><span data-stu-id="15bec-429">IsAutoIncrement</span></span>|<span data-ttu-id="15bec-430">`true`: Kolumna przypisuje wartości do nowych wierszy w przyrostach stały.</span><span class="sxs-lookup"><span data-stu-id="15bec-430">`true`: The column assigns values to new rows in fixed increments.</span></span> <span data-ttu-id="15bec-431">`false`: Kolumna nie przypisuje wartości do nowych wierszy w przyrostach stały.</span><span class="sxs-lookup"><span data-stu-id="15bec-431">`false`: The column does not assign values to new rows in fixed increments.</span></span> <span data-ttu-id="15bec-432">Domyślnie ta kolumna jest `false`.</span><span class="sxs-lookup"><span data-stu-id="15bec-432">The default of this column is `false`.</span></span>|  
|<span data-ttu-id="15bec-433">BaseCatalogName</span><span class="sxs-lookup"><span data-stu-id="15bec-433">BaseCatalogName</span></span>|<span data-ttu-id="15bec-434">Nazwa wykazu w magazynie danych, która zawiera kolumny.</span><span class="sxs-lookup"><span data-stu-id="15bec-434">The name of the catalog in the data store that contains the column.</span></span> <span data-ttu-id="15bec-435">`Null` Jeśli nie można ustalić nazwy katalogu podstawowego.</span><span class="sxs-lookup"><span data-stu-id="15bec-435">`Null` if the base catalog name cannot be determined.</span></span> <span data-ttu-id="15bec-436">Wartością domyślną dla tej kolumny jest `null` wartość.</span><span class="sxs-lookup"><span data-stu-id="15bec-436">The default value for this column is a `null` value.</span></span>|  
|<span data-ttu-id="15bec-437">BaseSchemaName</span><span class="sxs-lookup"><span data-stu-id="15bec-437">BaseSchemaName</span></span>|<span data-ttu-id="15bec-438">Ta wartość jest zawsze `Null`.</span><span class="sxs-lookup"><span data-stu-id="15bec-438">This value is always `Null`.</span></span>|  
|<span data-ttu-id="15bec-439">BaseTableName</span><span class="sxs-lookup"><span data-stu-id="15bec-439">BaseTableName</span></span>|<span data-ttu-id="15bec-440">Nazwa <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="15bec-440">The name of the <xref:System.Data.DataTable>.</span></span>|  
|<span data-ttu-id="15bec-441">BaseColumnName</span><span class="sxs-lookup"><span data-stu-id="15bec-441">BaseColumnName</span></span>|<span data-ttu-id="15bec-442">Nazwa kolumny w <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="15bec-442">The name of the column in the <xref:System.Data.DataTable>.</span></span>|  
|<span data-ttu-id="15bec-443">AutoIncrementSeed</span><span class="sxs-lookup"><span data-stu-id="15bec-443">AutoIncrementSeed</span></span>|<span data-ttu-id="15bec-444">Wartość <xref:System.Data.DataTable>firmy <xref:System.Data.DataColumn.AutoIncrementSeed%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="15bec-444">The value of the <xref:System.Data.DataTable>'s <xref:System.Data.DataColumn.AutoIncrementSeed%2A> property.</span></span>|  
|<span data-ttu-id="15bec-445">AutoIncrementStep</span><span class="sxs-lookup"><span data-stu-id="15bec-445">AutoIncrementStep</span></span>|<span data-ttu-id="15bec-446">Wartość <xref:System.Data.DataTable>firmy <xref:System.Data.DataColumn.AutoIncrementStep%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="15bec-446">The value of the <xref:System.Data.DataTable>'s <xref:System.Data.DataColumn.AutoIncrementStep%2A> property.</span></span>|  
|<span data-ttu-id="15bec-447">defaultValue</span><span class="sxs-lookup"><span data-stu-id="15bec-447">DefaultValue</span></span>|<span data-ttu-id="15bec-448">Wartość <xref:System.Data.DataColumn>firmy <xref:System.Data.DataColumn.DefaultValue%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="15bec-448">The value of the <xref:System.Data.DataColumn>'s <xref:System.Data.DataColumn.DefaultValue%2A> property.</span></span>|  
|<span data-ttu-id="15bec-449">Wyrażenie</span><span class="sxs-lookup"><span data-stu-id="15bec-449">Expression</span></span>|<span data-ttu-id="15bec-450">Ciąg wyrażenia, jeśli bieżąca kolumna jest kolumną wyrażenie, a wszystkie kolumny, używany w wyrażeniu należą do tej samej `T:System.Data.DataTable` zawierający kolumny wyrażenia; w przeciwnym razie `null`.</span><span class="sxs-lookup"><span data-stu-id="15bec-450">The expression string, if the current column is an expression column and all columns used in the expression belong to the same `T:System.Data.DataTable` that contains the expression column; otherwise `null`.</span></span>|  
|<span data-ttu-id="15bec-451">Mapowanie kolumny</span><span class="sxs-lookup"><span data-stu-id="15bec-451">ColumnMapping</span></span>|<span data-ttu-id="15bec-452"><xref:System.Data.MappingType> Wartość skojarzoną z <xref:System.Data.DataColumn>.</span><span class="sxs-lookup"><span data-stu-id="15bec-452">The <xref:System.Data.MappingType> value associated with the <xref:System.Data.DataColumn>.</span></span> <span data-ttu-id="15bec-453">Typ może być jednym z `Attribute`, `Element`, `Hidden`, lub `SimpleContent`.</span><span class="sxs-lookup"><span data-stu-id="15bec-453">The type can be one of `Attribute`, `Element`, `Hidden`, or `SimpleContent`.</span></span> <span data-ttu-id="15bec-454">Wartość domyślna to `Element`.</span><span class="sxs-lookup"><span data-stu-id="15bec-454">The default value is `Element`.</span></span>|  
|<span data-ttu-id="15bec-455">BaseTableNamespace</span><span class="sxs-lookup"><span data-stu-id="15bec-455">BaseTableNamespace</span></span>|<span data-ttu-id="15bec-456">Wartość <xref:System.Data.DataTable>firmy <xref:System.Data.DataTable.Namespace%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="15bec-456">The value of the <xref:System.Data.DataTable>'s <xref:System.Data.DataTable.Namespace%2A> property.</span></span>|  
|<span data-ttu-id="15bec-457">BaseColumnNamespace</span><span class="sxs-lookup"><span data-stu-id="15bec-457">BaseColumnNamespace</span></span>|<span data-ttu-id="15bec-458">Wartość <xref:System.Data.DataColumn>firmy <xref:System.Data.DataColumn.Namespace%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="15bec-458">The value of the <xref:System.Data.DataColumn>'s <xref:System.Data.DataColumn.Namespace%2A> property.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="15bec-459">W poniższym przykładzie aplikacja konsoli pobiera informacje o schemacie o określonej kolumny.</span><span class="sxs-lookup"><span data-stu-id="15bec-459">The following console application example retrieves schema information about the specified column.</span></span> <span data-ttu-id="15bec-460">Przekazać `DisplaySchemaTableInfo` procedury <xref:System.Data.DataTableReader> i liczba całkowita reprezentująca porządkowym kolumny w `DataTableReader`, a procedura generuje informacje o schemacie w oknie konsoli.</span><span class="sxs-lookup"><span data-stu-id="15bec-460">Pass the `DisplaySchemaTableInfo` procedure a <xref:System.Data.DataTableReader> and an integer representing the ordinal position of a column within the `DataTableReader`, and the procedure outputs schema information to the console window.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetSchemaTable#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetSchemaTable/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetSchemaTable#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetSchemaTable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="15bec-461">
            <see cref="T:System.Data.DataTableReader" /> Jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-461">The <see cref="T:System.Data.DataTableReader" /> is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetString : int -&gt; string" Usage="dataTableReader.GetString ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="15bec-462">Liczony od zera numeru kolumny</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-462">The zero-based column ordinal</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15bec-463">Pobiera wartość określonej kolumny jako ciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-463">Gets the value of the specified column as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15bec-464">Wartość określonej kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-464">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15bec-465">Wywołaj <xref:System.Data.DataTableReader.IsDBNull%2A> czy przed wywołaniem tej metody są wartości null.</span><span class="sxs-lookup"><span data-stu-id="15bec-465">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15bec-466">Poniższy przykład wyświetla zawartość kolumny numerowane 2 w ramach przekazany do <xref:System.Data.DataTableReader>.</span><span class="sxs-lookup"><span data-stu-id="15bec-466">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="15bec-467">Jeśli kolumna w określonym wierszu ma wartość null, ten kod wyświetla tekst \<NULL >.</span><span class="sxs-lookup"><span data-stu-id="15bec-467">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="15bec-468">Jeśli dane w kolumnie odpowiedniego typu, przykład jest wyświetlany komunikat o błędzie dla każdego wiersza.</span><span class="sxs-lookup"><span data-stu-id="15bec-468">If the data within the column of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetString#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetString/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetString#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetString/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="15bec-469">Indeks przekazywane był poza zakresem od 0 do <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-469">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="15bec-470">Próbowano pobrać dane z usuniętego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-470">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="15bec-471">Nastąpiła próba odczytu lub uzyskać dostępu do kolumny w zamkniętej <see cref="T:System.Data.DataTableReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-471">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="15bec-472">Określona kolumna nie zawiera ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-472">The specified column does not contain a string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetValue : int -&gt; obj" Usage="dataTableReader.GetValue ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="15bec-473">Liczony od zera numeru kolumny</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-473">The zero-based column ordinal</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15bec-474">Pobiera wartość określonej kolumny w formacie natywnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-474">Gets the value of the specified column in its native format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15bec-475">Wartość określonej kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-475">The value of the specified column.</span>
          </span>
          <span data-ttu-id="15bec-476">Ta metoda zwraca <see langword="DBNull" /> dla kolumn o wartości null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-476">This method returns <see langword="DBNull" /> for null columns.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15bec-477">Mimo że można wywołać <xref:System.Data.DataTableReader.IsDBNull%2A> aby zobaczyć, w przypadku wartości null przed wywołaniem tej metody, nie trzeba to zrobić.</span><span class="sxs-lookup"><span data-stu-id="15bec-477">Although you can call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method, you do not have to do this.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15bec-478">Poniższy przykład wykonuje iterację przez wszystkie kolumny w bieżącym wierszu w <xref:System.Data.DataTableReader>, wyświetlanie zawartość poszczególnych kolumn i nazwę kolumny.</span><span class="sxs-lookup"><span data-stu-id="15bec-478">The following example iterates through all the columns within the current row in a <xref:System.Data.DataTableReader>, displaying the contents of each column and the column name.</span></span> <span data-ttu-id="15bec-479">Ogólnie rzecz biorąc Jeśli jest zgodne z zamiarami użytkownika, do pracy ze wszystkimi kolumnami w wierszu pobierane przez <xref:System.Data.DataTableReader>, należy wziąć pod uwagę przy użyciu <xref:System.Data.DataTableReader.GetValues%2A> metody zamiast tego, ponieważ jest bardziej wydajne.</span><span class="sxs-lookup"><span data-stu-id="15bec-479">Generally, if your intent is to work with all the columns within a row retrieved by a <xref:System.Data.DataTableReader>, consider using the <xref:System.Data.DataTableReader.GetValues%2A> method instead, because it is more efficient.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetValue#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValue/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValue/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="15bec-480">Indeks przekazywane był poza zakresem od 0 do <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-480">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="15bec-481">Próbowano pobrać dane z usuniętego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-481">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="15bec-482">Nastąpiła próba odczytu lub dostęp do kolumn w zamkniętej <see cref="T:System.Data.DataTableReader" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-482">An attempt was made to read or access columns in a closed <see cref="T:System.Data.DataTableReader" /> .</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public override int GetValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetValues : obj[] -&gt; int" Usage="dataTableReader.GetValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="15bec-483">Tablica <see cref="T:System.Object" /> do którego skopiować wartości w kolumnach z <see cref="T:System.Data.DataTableReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-483">An array of <see cref="T:System.Object" /> into which to copy the column values from the <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15bec-484">Wypełnia tablicę obiektów przy użyciu wartości w kolumnach bieżącego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-484">Populates an array of objects with the column values of the current row.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15bec-485">Liczba wartości w kolumnie jest kopiowana do tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-485">The number of column values copied into the array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15bec-486">W przypadku większości aplikacji ta metoda zapewnia skuteczne do pobierania wszystkich kolumn, zamiast oddzielnie pobierania każdej kolumny.</span><span class="sxs-lookup"><span data-stu-id="15bec-486">For most applications, this method provides an efficient means for retrieving all columns, instead of retrieving each column individually.</span></span> <span data-ttu-id="15bec-487">Czy zgodne z zamiarami użytkownika, aby pobrać wszystkie wartości w kolumnach z wiersza w <xref:System.Data.DataTableReader>, `GetValues` metoda zapewnia najbardziej wydajne rozwiązanie.</span><span class="sxs-lookup"><span data-stu-id="15bec-487">If your intent is to retrieve all the column values from a row within the <xref:System.Data.DataTableReader>, the `GetValues` method provides the most efficient solution.</span></span>  
  
 <span data-ttu-id="15bec-488">Możesz przekazać <xref:System.Object> tablicę, która zawiera mniej niż liczba kolumn, które są zawarte w wynikowego wiersza.</span><span class="sxs-lookup"><span data-stu-id="15bec-488">You can pass an <xref:System.Object> array that contains fewer than the number of columns that are contained in the resulting row.</span></span> <span data-ttu-id="15bec-489">Ilość danych `Object` Tablica może przechowywać jest kopiowana do tablicy.</span><span class="sxs-lookup"><span data-stu-id="15bec-489">Only the amount of data the `Object` array can hold is copied to the array.</span></span> <span data-ttu-id="15bec-490">Można również przekazać `Object` tablicy, której długość jest większa niż liczba kolumn, które są zawarte w wynikowego wiersza, w którym przypadku elementy tablicy dodatkowe pozostaje bez zmian przez wywołanie metody.</span><span class="sxs-lookup"><span data-stu-id="15bec-490">You can also pass an `Object` array whose length is more than the number of columns that are contained in the resulting row, in which case the additional array elements remains unchanged by the method call.</span></span>  
  
 <span data-ttu-id="15bec-491">Ta metoda powoduje `DBNull` w tablicy danych wyjściowych dla kolumn o wartości null.</span><span class="sxs-lookup"><span data-stu-id="15bec-491">This method places `DBNull` in the output array for null columns.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15bec-492">W poniższym przykładzie pokazano użycie tablicy, która ma prawidłowy rozmiar, można odczytać wszystkie wartości z bieżącego wiersza w podanym <xref:System.Data.DataTableReader>.</span><span class="sxs-lookup"><span data-stu-id="15bec-492">The following example demonstrates using an array that is the correct size, to read all values from the current row in the supplied <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="15bec-493">Ponadto w przykładzie pokazano, przy użyciu stałych rozmiarach tablicy, która może być mniejszy lub większy niż liczba dostępnych kolumn.</span><span class="sxs-lookup"><span data-stu-id="15bec-493">In addition, the sample demonstrates using a fixed-sized array that could be either smaller or larger than the number of available columns.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetValueObject#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValueObject/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetValueObject#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValueObject/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="15bec-494">Indeks przekazywane był poza zakresem od 0 do <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-494">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="15bec-495">Próbowano pobrać dane z usuniętego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-495">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="15bec-496">Nastąpiła próba odczytu lub uzyskać dostępu do kolumny w zamkniętej <see cref="T:System.Data.DataTableReader" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-496">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /> .</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HasRows">
      <MemberSignature Language="C#" Value="public override bool HasRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRows" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.HasRows" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasRows { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasRows : bool" Usage="System.Data.DataTableReader.HasRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="15bec-497">Pobiera wartość wskazującą, czy <see cref="T:System.Data.DataTableReader" /> zawiera co najmniej jeden wiersz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-497">Gets a value that indicates whether the <see cref="T:System.Data.DataTableReader" /> contains one or more rows.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="15bec-498">
            <see langword="true" /> Jeśli <see cref="T:System.Data.DataTableReader" /> zawiera jeden lub więcej wierszy; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-498">
              <see langword="true" /> if the <see cref="T:System.Data.DataTableReader" /> contains one or more rows; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15bec-499">`HasRows` Właściwość zwraca informacje dotyczące bieżącego zestawu wyników.</span><span class="sxs-lookup"><span data-stu-id="15bec-499">The `HasRows` property returns information about the current result set.</span></span> <span data-ttu-id="15bec-500">Jeśli <xref:System.Data.DataTableReader> zawiera wynik wielu zestawów, należy sprawdzić wartość `HasRows` właściwość natychmiast, po wywołaniu metody <xref:System.Data.DataTableReader.NextResult%2A> metody w celu ustalenia, czy nowy zestaw wyników zawiera wiersze.</span><span class="sxs-lookup"><span data-stu-id="15bec-500">If the <xref:System.Data.DataTableReader> contains multiple result sets, you can examine the value of the `HasRows` property immediately after you call the <xref:System.Data.DataTableReader.NextResult%2A> method in order to determine whether the new result set contains rows.</span></span>  
  
 <span data-ttu-id="15bec-501">Użyj `HasRows` właściwości, aby uniknąć konieczności wywołać <xref:System.Data.DataTableReader.Read%2A> metody <xref:System.Data.DataTableReader> , jeśli nie ma żadnych wierszy w ramach bieżącego zestawu wyników.</span><span class="sxs-lookup"><span data-stu-id="15bec-501">Use the `HasRows` property to avoid the requirement to call the <xref:System.Data.DataTableReader.Read%2A> method of the <xref:System.Data.DataTableReader> if there are no rows within the current result set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15bec-502">Poniższy przykład wypełnia dwa <xref:System.Data.DataTable> wystąpień z danymi.</span><span class="sxs-lookup"><span data-stu-id="15bec-502">The following example fills two <xref:System.Data.DataTable> instances with data.</span></span> <span data-ttu-id="15bec-503">Pierwszy <xref:System.Data.DataTable> zawiera ona jeden wiersz, a druga nie zawiera wierszy.</span><span class="sxs-lookup"><span data-stu-id="15bec-503">The first <xref:System.Data.DataTable> contains one row, and the second contains no rows.</span></span> <span data-ttu-id="15bec-504">Przykład tworzy następnie <xref:System.Data.DataTableReader> zawiera zarówno <xref:System.Data.DataTable> obiektów i wywołuje metodę PrintData, aby wyświetlić zawartość poszczególnych usług, sprawdzając wartość <xref:System.Data.DataTableReader.HasRows%2A> właściwości każdego przed jego sprawia, że wywołanie PrintData.</span><span class="sxs-lookup"><span data-stu-id="15bec-504">The example then creates a <xref:System.Data.DataTableReader> that contains both <xref:System.Data.DataTable> objects, and calls the PrintData method to display the contents of each, checking the value of the <xref:System.Data.DataTableReader.HasRows%2A> property of each before it makes the call to PrintData.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.HasRows#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.HasRows/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.HasRows#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.HasRows/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="15bec-505">Nastąpiła próba można pobrać informacji na temat zamkniętej <see cref="T:System.Data.DataTableReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-505">An attempt was made to retrieve information about a closed <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Data.DataTableReader.NextResult" />
        <altmember cref="M:System.Data.DataTableReader.Read" />
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public override bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsClosed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="System.Data.DataTableReader.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="15bec-506">Pobiera wartość wskazującą, czy <see cref="T:System.Data.DataTableReader" /> jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-506">Gets a value that indicates whether the <see cref="T:System.Data.DataTableReader" /> is closed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="15bec-507">Zwraca <see langword="true" /> Jeśli <see cref="T:System.Data.DataTableReader" /> jest zamknięty; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-507">Returns <see langword="true" /> if the <see cref="T:System.Data.DataTableReader" /> is closed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15bec-508"><xref:System.Data.DataTableReader.Close%2A> to jedyna metoda i `IsClosed` i <xref:System.Data.DataTableReader.RecordsAffected%2A> to jedyne właściwości, które mogą być udostępniane po <xref:System.Data.DataTableReader> zostało zamknięte.</span><span class="sxs-lookup"><span data-stu-id="15bec-508"><xref:System.Data.DataTableReader.Close%2A> is the only method and `IsClosed` and <xref:System.Data.DataTableReader.RecordsAffected%2A> are the only properties that can be accessed after the <xref:System.Data.DataTableReader> has been closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public override bool IsDBNull (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDBNull(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.IsDBNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDBNull (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDBNull(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.IsDBNull : int -&gt; bool" Usage="dataTableReader.IsDBNull ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="15bec-509">Liczony od zera numeru kolumny</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-509">The zero-based column ordinal</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15bec-510">Pobiera wartość wskazującą, czy kolumna zawiera wartości, nie istnieje lub nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-510">Gets a value that indicates whether the column contains non-existent or missing values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15bec-511">
            <see langword="true" /> Jeśli wartość określona kolumna jest odpowiednikiem <see cref="T:System.DBNull" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-511">
              <see langword="true" /> if the specified column value is equivalent to <see cref="T:System.DBNull" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15bec-512">Wywołać tę metodę, aby sprawdzić, czy przed wywołaniem metody get wpisane są wartości w kolumnie o wartości null (na przykład <xref:System.Data.DataTableReader.GetByte%2A>, <xref:System.Data.DataTableReader.GetChar%2A>i tak dalej), aby uniknąć zgłaszania błędów.</span><span class="sxs-lookup"><span data-stu-id="15bec-512">Call this method to see if there are null column values before calling the typed get methods (for example, <xref:System.Data.DataTableReader.GetByte%2A>, <xref:System.Data.DataTableReader.GetChar%2A>, and so on) to avoid raising an error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15bec-513">Poniższy przykład wyświetla zawartość kolumny numerowane 2 w ramach przekazany do <xref:System.Data.DataTableReader>.</span><span class="sxs-lookup"><span data-stu-id="15bec-513">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="15bec-514">Jeśli kolumna w określonym wierszu ma wartość null, ten kod wyświetla tekst \<NULL >.</span><span class="sxs-lookup"><span data-stu-id="15bec-514">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="15bec-515">Jeśli dane w kolumnie odpowiedniego typu, przykład jest wyświetlany komunikat o błędzie dla każdego wiersza.</span><span class="sxs-lookup"><span data-stu-id="15bec-515">If the data within the column of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.IsDbNull#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.IsDbNull/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.IsDbNull#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.IsDbNull/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="15bec-516">Indeks przekazywane był poza zakresem od 0 do <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-516">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="15bec-517">Próbowano pobrać dane z usuniętego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-517">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="15bec-518">Nastąpiła próba odczytu lub uzyskać dostępu do kolumny w zamkniętej <see cref="T:System.Data.DataTableReader" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-518">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /> .</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="15bec-519">Pobiera wartość określonej kolumny w formacie natywnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-519">Gets the value of the specified column in its native format.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[int ordinal] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int ordinal); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="System.Data.DataTableReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="15bec-520">Numer porządkowy kolumny liczony od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-520">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15bec-521">Pobiera wartość określonej kolumny w formacie natywnym danego numeru kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-521">Gets the value of the specified column in its native format given the column ordinal.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="15bec-522">Wartość określonej kolumny w formacie natywnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-522">The value of the specified column in its native format.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15bec-523">To przeciążenie dla <xref:System.Data.DataTableReader.Item%2A> działa identycznie do <xref:System.Data.DataTableReader.GetValue%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="15bec-523">This overload for <xref:System.Data.DataTableReader.Item%2A> behaves identically to the <xref:System.Data.DataTableReader.GetValue%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15bec-524">Poniższy przykład wyświetla zawartość wszystkich kolumn wszystkich wierszy z podanym <xref:System.Data.DataTableReader>.</span><span class="sxs-lookup"><span data-stu-id="15bec-524">The following example displays the contents of all the columns, in all the rows from the supplied <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="15bec-525">Kod używa <xref:System.Data.DataTableReader.Item%2A> — metoda (indeksatora w Microsoft C#) można pobrać wartość, która jest zawarta w każdej kolumnie.</span><span class="sxs-lookup"><span data-stu-id="15bec-525">The code uses the <xref:System.Data.DataTableReader.Item%2A> method (the indexer, in Microsoft C#) to retrieve the value that is contained in each column.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.Item#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.Item/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.Item#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.Item/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="15bec-526">Indeks przekazywane był poza zakresem od 0 do <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-526">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <altmember cref="M:System.Data.DataTableReader.GetValue(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj" Usage="System.Data.DataTableReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="15bec-527">Nazwa kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-527">The name of the column.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="15bec-528">Pobiera wartość określonej kolumny w formacie natywnym otrzymuje nazwę kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-528">Gets the value of the specified column in its native format given the column name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="15bec-529">Wartość określonej kolumny w formacie natywnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-529">The value of the specified column in its native format.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15bec-530">Jest rozróżniana wielkość liter wyszukiwanie jest wykonywane jako pierwsze.</span><span class="sxs-lookup"><span data-stu-id="15bec-530">A case-sensitive lookup is performed first.</span></span> <span data-ttu-id="15bec-531">Jeśli nie powiedzie się, zostanie przeprowadzona drugi wyszukiwanie bez uwzględniania wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="15bec-531">If it fails, a second case-insensitive search is made.</span></span>  
  
 <span data-ttu-id="15bec-532">Ta metoda jest znaki kana szerokość nie liter.</span><span class="sxs-lookup"><span data-stu-id="15bec-532">This method is kana-width insensitive.</span></span>  
  
 <span data-ttu-id="15bec-533">Ta przeciążoną wersję <xref:System.Data.DataTableReader.Item%2A> odnosi się do wywoływania <xref:System.Data.DataTableReader.GetOrdinal%2A> metody, a następnie wywoływania <xref:System.Data.DataTableReader.GetValue%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="15bec-533">This overloaded version of <xref:System.Data.DataTableReader.Item%2A> corresponds to calling the <xref:System.Data.DataTableReader.GetOrdinal%2A> method, and then subsequently calling the <xref:System.Data.DataTableReader.GetValue%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15bec-534">Biorąc pod uwagę <xref:System.Data.DataTableReader> i nazwę kolumny w procedurze GetValueByName zwraca wartość określonej kolumny.</span><span class="sxs-lookup"><span data-stu-id="15bec-534">Given a <xref:System.Data.DataTableReader> and a column name, the GetValueByName procedure returns the value of the specified column.</span></span> <span data-ttu-id="15bec-535">Przed wywołaniem tej procedury, należy utworzyć nowy <xref:System.Data.DataTableReader> wystąpienia i wywołanie metody odczytu co najmniej jeden raz umieść wskaźnik wiersza w wierszu danych.</span><span class="sxs-lookup"><span data-stu-id="15bec-535">Before calling this procedure, you must create a new <xref:System.Data.DataTableReader> instance and call its Read method at least one time to position the row pointer on a row of data.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.ItemName#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.ItemName/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.ItemName#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.ItemName/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="15bec-536">Określona nazwa nie jest prawidłową nazwę kolumny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-536">The name specified is not a valid column name.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="15bec-537">Próbowano pobrać dane z usuniętego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-537">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="15bec-538">Nastąpiła próba odczytu lub uzyskać dostępu do kolumny w zamkniętej <see cref="T:System.Data.DataTableReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-538">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public override bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool NextResult();" />
      <MemberSignature Language="F#" Value="override this.NextResult : unit -&gt; bool" Usage="dataTableReader.NextResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="15bec-539">Przesuwa <see cref="T:System.Data.DataTableReader" /> do następnego zestawu wyników, jeśli istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-539">Advances the <see cref="T:System.Data.DataTableReader" /> to the next result set, if any.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15bec-540">
            <see langword="true" /> Jeśli wystąpił inny zestaw wyników; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-540">
              <see langword="true" /> if there was another result set; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15bec-541">Używani do przetwarzania wiele wyników, które mogą być generowane przez utworzenie <xref:System.Data.DataTableReader> za pośrednictwem <xref:System.Data.DataSet> zawierający co najmniej dwie tabele lub tablica, która zawiera co najmniej dwóch <xref:System.Data.DataTable> wystąpień.</span><span class="sxs-lookup"><span data-stu-id="15bec-541">Used to process multiple results that can be generated by creating a <xref:System.Data.DataTableReader> over a <xref:System.Data.DataSet> that contains two or more tables, or an array that contains two or more <xref:System.Data.DataTable> instances.</span></span>  
  
 <span data-ttu-id="15bec-542">Nowy <xref:System.Data.DataTableReader> jest ustawiony na pierwszego wyniku.</span><span class="sxs-lookup"><span data-stu-id="15bec-542">A new <xref:System.Data.DataTableReader> is positioned on the first result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15bec-543">W poniższym przykładzie metoda TestConstructor tworzy dwa <xref:System.Data.DataTable> wystąpień.</span><span class="sxs-lookup"><span data-stu-id="15bec-543">In the following example, the TestConstructor method creates two <xref:System.Data.DataTable> instances.</span></span> <span data-ttu-id="15bec-544">W celu przedstawienia tej Konstruktor <xref:System.Data.DataTableReader> klasy Przykładowa aplikacja tworzy nową `DataTableReader` na podstawie tablicy, która zawiera dwa `DataTables`i wykonuje prostą operacją, Drukowanie zawartości z pierwszego mało kolumn w konsoli okno.</span><span class="sxs-lookup"><span data-stu-id="15bec-544">In order to demonstrate this constructor for the <xref:System.Data.DataTableReader> class, the sample creates a new `DataTableReader` based on an array that contains the two `DataTables`, and performs a simple operation, printing the contents from the first few columns to the console window.</span></span> <span data-ttu-id="15bec-545">Aby przetestować tę aplikację, Utwórz nową aplikację konsoli i wklej przykładowy kod do nowo utworzony plik.</span><span class="sxs-lookup"><span data-stu-id="15bec-545">In order to test this application, create a new Console application, and paste the sample code into the newly created file.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.NextResult#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.NextResult/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.NextResult#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.NextResult/VB/source.vb#1)]  
  
 <span data-ttu-id="15bec-546">W oknie konsoli zostaną wyświetlone następujące wyniki:</span><span class="sxs-lookup"><span data-stu-id="15bec-546">The Console window displays the following results:</span></span>  
  
```  
1 Mary  
2 Andy  
3 Peter  
4 Russ  
1 Wireless Network Card  
2 Hard Drive  
3 Monitor  
4 CPU  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="15bec-547">Nastąpiła próba przejść w ramach zamkniętego <see cref="T:System.Data.DataTableReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-547">An attempt was made to navigate within a closed <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="dataTableReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="15bec-548">Przesuwa <see cref="T:System.Data.DataTableReader" /> do następnego rekordu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-548">Advances the <see cref="T:System.Data.DataTableReader" /> to the next record.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="15bec-549">
            <see langword="true" /> Jeśli wystąpił kolejny wiersz do odczytania. w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-549">
              <see langword="true" /> if there was another row to read; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15bec-550">Domyślne położenie <xref:System.Data.DataTableReader> przed pierwszym rekordzie.</span><span class="sxs-lookup"><span data-stu-id="15bec-550">The default position of the <xref:System.Data.DataTableReader> is before the first record.</span></span> <span data-ttu-id="15bec-551">W związku z tym, należy wywołać `Read` można rozpocząć uzyskiwanie dostępu do żadnych danych.</span><span class="sxs-lookup"><span data-stu-id="15bec-551">Therefore, you must call `Read` to start accessing any data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15bec-552">Procedura PrintColumns w pętli wszystkich wierszy w <xref:System.Data.DataTableReader>, wyświetlanie zawartość każdej kolumny w oknie konsoli.</span><span class="sxs-lookup"><span data-stu-id="15bec-552">The PrintColumns procedure loops through all the rows in the <xref:System.Data.DataTableReader>, displaying the contents of each column in the Console window.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.Read#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.Read/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.Read#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.Read/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="15bec-553">Nastąpiła próba odczytu lub uzyskać dostępu do kolumny w zamkniętej <see cref="T:System.Data.DataTableReader" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-553">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /> .</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public override int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RecordsAffected { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RecordsAffected : int" Usage="System.Data.DataTableReader.RecordsAffected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="15bec-554">Pobiera liczbę wierszy wstawionych, zmieniony lub usunięty przez wykonanie instrukcji SQL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-554">Gets the number of rows inserted, changed, or deleted by execution of the SQL statement.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="15bec-555">
            <see cref="T:System.Data.DataTableReader" /> Nie obsługuje tej właściwości i zawsze zwraca wartość 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="15bec-555">The <see cref="T:System.Data.DataTableReader" /> does not support this property and always returns 0.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>