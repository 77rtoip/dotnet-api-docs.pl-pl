<Type Name="IDataReader" FullName="System.Data.IDataReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0b235a9801e9eb18b960afb8e55cd0e1653390ff" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36745393" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDataReader : IDisposable, System.Data.IDataRecord" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataReader implements class System.Data.IDataRecord, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDataReader" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataReader&#xA;Implements IDataRecord, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataReader : IDisposable, System::Data::IDataRecord" />
  <TypeSignature Language="F#" Value="type IDataReader = interface&#xA;    interface IDisposable&#xA;    interface IDataRecord" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataRecord</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="5f0c4-101">Umożliwia odczytywanie jeden lub więcej tylko do przodu strumieni zestawach wyników generowanych, wykonując polecenie w źródle danych, a jest implementowany przez dostawców danych .NET Framework, które uzyskują dostęp do relacyjnych baz danych.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5f0c4-101">Provides a means of reading one or more forward-only streams of result sets obtained by executing a command at a data source, and is implemented by .NET Framework data providers that access relational databases.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f0c4-102"><xref:System.Data.IDataReader> i <xref:System.Data.IDataRecord> interfejsy umożliwiają dziedziczące klasy do zaimplementowania `DataReader` klasy, która umożliwia odczytywanie jeden lub więcej tylko do przodu strumieni zestawów wyników.</span><span class="sxs-lookup"><span data-stu-id="5f0c4-102">The <xref:System.Data.IDataReader> and <xref:System.Data.IDataRecord> interfaces allow an inheriting class to implement a `DataReader` class, which provides a means of reading one or more forward-only streams of result sets.</span></span> <span data-ttu-id="5f0c4-103">Aby uzyskać więcej informacji na temat `DataReader` klas, zobacz [pobierania danych przy użyciu elementu DataReader](~/docs/framework/data/adonet/retrieving-data-using-a-datareader.md).</span><span class="sxs-lookup"><span data-stu-id="5f0c4-103">For more information about `DataReader` classes, see [Retrieving Data Using a DataReader](~/docs/framework/data/adonet/retrieving-data-using-a-datareader.md).</span></span>  
  
 <span data-ttu-id="5f0c4-104">Aplikacja nie tworzy wystąpienie <xref:System.Data.IDataReader> interfejsu bezpośrednio, ale powoduje utworzenie wystąpienia klasy, która dziedziczy <xref:System.Data.IDataReader>.</span><span class="sxs-lookup"><span data-stu-id="5f0c4-104">An application does not create an instance of the <xref:System.Data.IDataReader> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDataReader>.</span></span>  
  
 <span data-ttu-id="5f0c4-105">Klasy, które dziedziczą <xref:System.Data.IDataReader> musi implementować dziedziczone elementy członkowskie i zwykle zdefiniować dodatkowe elementy członkowskie Dodawanie funkcji specyficznych dla dostawcy.</span><span class="sxs-lookup"><span data-stu-id="5f0c4-105">Classes that inherit <xref:System.Data.IDataReader> must implement the inherited members, and typically define additional members to add provider-specific functionality.</span></span>  
  
 <span data-ttu-id="5f0c4-106">Zmiany wprowadzone w zestawie innym wyników przetwarzania lub wątku, podczas gdy dane są odczytywane mogą być widoczne dla użytkownika klasy, która implementuje `IDataReader`.</span><span class="sxs-lookup"><span data-stu-id="5f0c4-106">Changes made to a result set by another process or thread while data is being read may be visible to the user of a class that implements an `IDataReader`.</span></span> <span data-ttu-id="5f0c4-107">Jednak dokładne zachowanie jest dostawcy i chronometrażu zależnych.</span><span class="sxs-lookup"><span data-stu-id="5f0c4-107">However, the precise behavior is both provider and timing dependent.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f0c4-108">Poniższy przykład tworzy wystąpienia klas pochodnych <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, i <xref:System.Data.SqlClient.SqlDataReader>.</span><span class="sxs-lookup"><span data-stu-id="5f0c4-108">The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, and <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="5f0c4-109">Przykład odczytuje dane wypisywanie do konsoli.</span><span class="sxs-lookup"><span data-stu-id="5f0c4-109">The example reads through the data, writing it out to the console.</span></span> <span data-ttu-id="5f0c4-110">Na koniec zamyka przykładzie <xref:System.Data.SqlClient.SqlDataReader>, a następnie <xref:System.Data.SqlClient.SqlConnection>.</span><span class="sxs-lookup"><span data-stu-id="5f0c4-110">Finally, the example closes the <xref:System.Data.SqlClient.SqlDataReader>, then the <xref:System.Data.SqlClient.SqlConnection>.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="5f0c4-111">
        <para>Do podwyższenie poziomu spójności między dostawcy danych .NET Framework, nazwa klasy dziedziczące w formularzu <paramref name="Prv" /> polecenia where <paramref name="Prv" /> jest prefiksem uniform na wszystkie klasy w określonej przestrzeni nazw dostawcy danych .NET Framework. Na przykład <paramref name="Sql" /> jest prefiks <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> klasy w <see langword="System.Data.SqlClient" /> przestrzeni nazw.  Użytkownicy nie twórz wystąpienia <see langword="DataReader" /> bezpośrednio klasa. Zamiast tego należy uzyskać <see langword="DataReader" /> wystąpienie za pośrednictwem <see langword="ExecuteReader" /> metody <see langword="Command" /> obiektu. W związku z tym należy oznaczyć <see langword="DataReader" /> konstruktorów jako wewnętrzne.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="5f0c4-111">
          <para>To promote consistency among .NET Framework data providers, name the inheriting class in the form <paramref name="Prv" /> Command where <paramref name="Prv" /> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace. For example, <paramref name="Sql" /> is the prefix of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class in the <see langword="System.Data.SqlClient" /> namespace.  Users do not create an instance of a <see langword="DataReader" /> class directly. Instead, they obtain the <see langword="DataReader" /> instance through the <see langword="ExecuteReader" /> method of the <see langword="Command" /> object. Therefore, you should mark <see langword="DataReader" /> constructors as internal.</para>
        </span>
      </span>
    </block>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="iDataReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5f0c4-112">Zamyka <see cref="T:System.Data.IDataReader" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f0c4-112">Closes the <see cref="T:System.Data.IDataReader" /> Object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f0c4-113">Należy jawnie wywołać <xref:System.Data.IDataReader.Close%2A> metody, gdy są przy użyciu <xref:System.Data.IDataReader> do użycia ze skojarzoną <xref:System.Data.IDbConnection> do innych celów.</span><span class="sxs-lookup"><span data-stu-id="5f0c4-113">You must explicitly call the <xref:System.Data.IDataReader.Close%2A> method when you are through using the <xref:System.Data.IDataReader> to use the associated <xref:System.Data.IDbConnection> for any other purpose.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Data.IDataReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f0c4-114">Pobiera wartość wskazującą głębokość zagnieżdżenia dla bieżącego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f0c4-114">Gets a value indicating the depth of nesting for the current row.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f0c4-115">Poziom zagnieżdżenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f0c4-115">The level of nesting.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f0c4-116">Tabela peryferyjnych ma głębokość o wartości zero.</span><span class="sxs-lookup"><span data-stu-id="5f0c4-116">The outermost table has a depth of zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ GetSchemaTable();" />
      <MemberSignature Language="F#" Value="abstract member GetSchemaTable : unit -&gt; System.Data.DataTable" Usage="iDataReader.GetSchemaTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5f0c4-117">Zwraca <see cref="T:System.Data.DataTable" /> opisujący metadane kolumny <see cref="T:System.Data.IDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f0c4-117">Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:System.Data.IDataReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f0c4-118">A <see cref="T:System.Data.DataTable" /> opisujący metadanych kolumn.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f0c4-118">A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f0c4-119">Implementacja <xref:System.Data.IDataReader.GetSchemaTable%2A> metodę dla .NET Framework Data Provider for OLE DB mapy do metody OLE DB IColumnsRowset::GetColumnsRowset, podczas implementacji dla inni dostawcy danych .NET Framework nie należy używać warstwy dostawcy OLE DB.</span><span class="sxs-lookup"><span data-stu-id="5f0c4-119">The implementation of <xref:System.Data.IDataReader.GetSchemaTable%2A> method for the .NET Framework Data Provider for OLE DB maps to the OLE DB IColumnsRowset::GetColumnsRowset method, while implementations for other .NET Framework data providers do not use an OLE DB provider layer.</span></span> <span data-ttu-id="5f0c4-120">Kolejność <xref:System.Data.IDataReader.GetSchemaTable%2A> zwraca metadane dotyczące każdej kolumny w tabeli, a kolumny DataReader, które są zwracane się różnić w zależności od tego, który dostawca danych użycia.</span><span class="sxs-lookup"><span data-stu-id="5f0c4-120">The order in which <xref:System.Data.IDataReader.GetSchemaTable%2A> returns metadata about each column in a table, and the DataReader columns that are returned, vary depending on which data provider you use.</span></span> <span data-ttu-id="5f0c4-121">W poniższej tabeli wymieniono dostawcy danych i ich elementy członkowskie, które implementują <xref:System.Data.IDataReader.GetSchemaTable%2A>.</span><span class="sxs-lookup"><span data-stu-id="5f0c4-121">The following table lists data providers and members that implement <xref:System.Data.IDataReader.GetSchemaTable%2A>.</span></span>  
  
|<span data-ttu-id="5f0c4-122">Dostawca danych</span><span class="sxs-lookup"><span data-stu-id="5f0c4-122">Data Provider</span></span>|<span data-ttu-id="5f0c4-123">Element członkowski</span><span class="sxs-lookup"><span data-stu-id="5f0c4-123">Member</span></span>|  
|-------------------|------------|  
|<span data-ttu-id="5f0c4-124">Dostawca danych programu .NET dla ODBC</span><span class="sxs-lookup"><span data-stu-id="5f0c4-124">.NET Data Provider for ODBC</span></span>|<span data-ttu-id="5f0c4-125"><xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="5f0c4-125"><xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.</span></span>|  
|<span data-ttu-id="5f0c4-126">Dostawca danych programu .NET dla OLE DB</span><span class="sxs-lookup"><span data-stu-id="5f0c4-126">.NET Data Provider for OLE DB</span></span>|<span data-ttu-id="5f0c4-127"><xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="5f0c4-127"><xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.</span></span>|  
|<span data-ttu-id="5f0c4-128">Dostawca danych programu .NET dla Oracle</span><span class="sxs-lookup"><span data-stu-id="5f0c4-128">.NET Data Provider for Oracle</span></span>|<span data-ttu-id="5f0c4-129"><xref:System.Data.OracleClient.OracleDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="5f0c4-129"><xref:System.Data.OracleClient.OracleDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.</span></span>|  
|<span data-ttu-id="5f0c4-130">Dostawca danych programu .NET dla programu SQL Server</span><span class="sxs-lookup"><span data-stu-id="5f0c4-130">.NET Data Provider for SQL Server</span></span>|<span data-ttu-id="5f0c4-131"><xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="5f0c4-131"><xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5f0c4-132">
            <see cref="T:System.Data.IDataReader" /> Jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f0c4-132">The <see cref="T:System.Data.IDataReader" /> is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsClosed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="System.Data.IDataReader.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f0c4-133">Pobiera wartość wskazującą, czy czytnik danych jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f0c4-133">Gets a value indicating whether the data reader is closed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f0c4-134">
            <see langword="true" /> Jeśli czytnik danych jest zamknięty; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f0c4-134">
              <see langword="true" /> if the data reader is closed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f0c4-135"><xref:System.Data.IDataReader.IsClosed%2A> i <xref:System.Data.IDataReader.RecordsAffected%2A> są tylko właściwości, które można wywołać po <xref:System.Data.IDataReader> jest zamknięty.</span><span class="sxs-lookup"><span data-stu-id="5f0c4-135"><xref:System.Data.IDataReader.IsClosed%2A> and <xref:System.Data.IDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.IDataReader> is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool NextResult();" />
      <MemberSignature Language="F#" Value="abstract member NextResult : unit -&gt; bool" Usage="iDataReader.NextResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5f0c4-136">Przesuwa czytnik danych do następnego wyniku podczas odczytywania wyników wsadowego instrukcji SQL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f0c4-136">Advances the data reader to the next result, when reading the results of batch SQL statements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f0c4-137">
            <see langword="true" /> Jeśli istnieje więcej wierszy; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f0c4-137">
              <see langword="true" /> if there are more rows; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f0c4-138">Używane do przetwarzania wiele wyników, których można uzyskać, wykonując instrukcje SQL partii.</span><span class="sxs-lookup"><span data-stu-id="5f0c4-138">Used to process multiple results, which can be obtained by executing batch SQL statements.</span></span>  
  
 <span data-ttu-id="5f0c4-139">Domyślnie czytnik danych jest ustawiony na pierwszego wyniku.</span><span class="sxs-lookup"><span data-stu-id="5f0c4-139">By default, the data reader is positioned on the first result.</span></span>  
  
 [!code-csharp[IDataReader_NextResult#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/idatareader_nextresult/cs/source.cs#1)]
 [!code-vb[IDataReader_NextResult#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/idatareader_nextresult/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Read();" />
      <MemberSignature Language="F#" Value="abstract member Read : unit -&gt; bool" Usage="iDataReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5f0c4-140">Przesuwa <see cref="T:System.Data.IDataReader" /> do następnego rekordu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f0c4-140">Advances the <see cref="T:System.Data.IDataReader" /> to the next record.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f0c4-141">
            <see langword="true" /> Jeśli istnieje więcej wierszy; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f0c4-141">
              <see langword="true" /> if there are more rows; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f0c4-142">To domyślne położenie <xref:System.Data.IDataReader> niż pierwszy rekord.</span><span class="sxs-lookup"><span data-stu-id="5f0c4-142">The default position of the <xref:System.Data.IDataReader> is prior to the first record.</span></span> <span data-ttu-id="5f0c4-143">W związku z tym należy wywołać <xref:System.Data.IDataReader.Read%2A> aby rozpocząć, uzyskiwanie dostępu do żadnych danych.</span><span class="sxs-lookup"><span data-stu-id="5f0c4-143">Therefore you must call <xref:System.Data.IDataReader.Read%2A> to begin accessing any data.</span></span>  
  
 <span data-ttu-id="5f0c4-144">Gdy czytnik danych jest w użyciu, skojarzone z nimi połączenie jest zajęty obsługujących <xref:System.Data.IDataReader>.</span><span class="sxs-lookup"><span data-stu-id="5f0c4-144">While the data reader is in use, the associated connection is busy serving the <xref:System.Data.IDataReader>.</span></span> <span data-ttu-id="5f0c4-145">Dotyczy to sytuacji, dopóki <xref:System.Data.IDataReader.Close%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="5f0c4-145">This is the case until <xref:System.Data.IDataReader.Close%2A> is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f0c4-146">Poniższy przykład tworzy wystąpienia klas pochodnych trzy <xref:System.Data.OleDb.OleDbConnection>, <xref:System.Data.OleDb.OleDbCommand>i <xref:System.Data.OleDb.OleDbDataReader>.</span><span class="sxs-lookup"><span data-stu-id="5f0c4-146">The following example creates instances of three derived classes <xref:System.Data.OleDb.OleDbConnection>, an <xref:System.Data.OleDb.OleDbCommand>, and an <xref:System.Data.OleDb.OleDbDataReader>.</span></span> <span data-ttu-id="5f0c4-147">Przykład odczytuje dane wypisywanie do konsoli.</span><span class="sxs-lookup"><span data-stu-id="5f0c4-147">The example reads through the data, writing it out to the console.</span></span> <span data-ttu-id="5f0c4-148">Na koniec zamyka przykładzie <xref:System.Data.OleDb.OleDbDataReader>, a następnie <xref:System.Data.OleDb.OleDbConnection>.</span><span class="sxs-lookup"><span data-stu-id="5f0c4-148">Finally, the example closes the <xref:System.Data.OleDb.OleDbDataReader>, then the <xref:System.Data.OleDb.OleDbConnection>.</span></span>  
  
 [!code-csharp[Classic WebData IDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RecordsAffected { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RecordsAffected : int" Usage="System.Data.IDataReader.RecordsAffected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f0c4-149">Pobiera liczbę wierszy zmienione, wstawione lub usunięte przez wykonanie instrukcji SQL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f0c4-149">Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f0c4-150">Liczba wierszy zmienione, wstawiania lub usuwania; 0, jeśli żadne wiersze nie zostały zainfekowane lub instrukcji nie powiodło się; i -1 dla instrukcji "SELECT".</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f0c4-150">The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f0c4-151"><xref:System.Data.IDataReader.RecordsAffected%2A> Właściwość nie jest ustawiona, dopóki wszystkie wiersze do odczytu i zostanie zamknięty <xref:System.Data.IDataReader>.</span><span class="sxs-lookup"><span data-stu-id="5f0c4-151">The <xref:System.Data.IDataReader.RecordsAffected%2A> property is not set until all rows are read and you close the <xref:System.Data.IDataReader>.</span></span>  
  
 <span data-ttu-id="5f0c4-152"><xref:System.Data.IDataReader.IsClosed%2A> i <xref:System.Data.IDataReader.RecordsAffected%2A> są tylko właściwości, które można wywołać po <xref:System.Data.IDataReader> jest zamknięty.</span><span class="sxs-lookup"><span data-stu-id="5f0c4-152"><xref:System.Data.IDataReader.IsClosed%2A> and <xref:System.Data.IDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.IDataReader> is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>