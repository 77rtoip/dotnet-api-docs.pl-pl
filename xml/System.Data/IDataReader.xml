<Type Name="IDataReader" FullName="System.Data.IDataReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6c244cfe2dd7763c936e830702dff8b5052b25c5" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69367246" /></Metadata><TypeSignature Language="C#" Value="public interface IDataReader : IDisposable, System.Data.IDataRecord" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataReader implements class System.Data.IDataRecord, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDataReader" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataReader&#xA;Implements IDataRecord, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataReader : IDisposable, System::Data::IDataRecord" />
  <TypeSignature Language="F#" Value="type IDataReader = interface&#xA;    interface IDisposable&#xA;    interface IDataRecord" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataRecord</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="97dcf-101">Umożliwia odczytywanie co najmniej jednego strumienia tylko do przesyłania dalej z zestawu wyników uzyskanych przez wykonanie polecenia w źródle danych i jest implementowany przez .NET Framework dostawców danych, którzy uzyskują dostęp do relacyjnych baz danych.</span><span class="sxs-lookup"><span data-stu-id="97dcf-101">Provides a means of reading one or more forward-only streams of result sets obtained by executing a command at a data source, and is implemented by .NET Framework data providers that access relational databases.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97dcf-102">Interfejsy <xref:System.Data.IDataReader> `DataReader` i <xref:System.Data.IDataRecord> umożliwiają dziedziczenie klasy w celu zaimplementowania klasy, co umożliwia odczytywanie co najmniej jednego strumienia "tylko do przodu" zestawów wyników.</span><span class="sxs-lookup"><span data-stu-id="97dcf-102">The <xref:System.Data.IDataReader> and <xref:System.Data.IDataRecord> interfaces allow an inheriting class to implement a `DataReader` class, which provides a means of reading one or more forward-only streams of result sets.</span></span> <span data-ttu-id="97dcf-103">Aby uzyskać więcej informacji `DataReader` na temat klas, zobacz [pobieranie danych za pomocą elementu DataReader](~/docs/framework/data/adonet/retrieving-data-using-a-datareader.md).</span><span class="sxs-lookup"><span data-stu-id="97dcf-103">For more information about `DataReader` classes, see [Retrieving Data Using a DataReader](~/docs/framework/data/adonet/retrieving-data-using-a-datareader.md).</span></span>  
  
 <span data-ttu-id="97dcf-104">Aplikacja nie tworzy wystąpienia <xref:System.Data.IDataReader> interfejsu bezpośrednio, ale tworzy wystąpienie klasy, która dziedziczy. <xref:System.Data.IDataReader></span><span class="sxs-lookup"><span data-stu-id="97dcf-104">An application does not create an instance of the <xref:System.Data.IDataReader> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDataReader>.</span></span>  
  
 <span data-ttu-id="97dcf-105">Klasy dziedziczące <xref:System.Data.IDataReader> muszą implementować dziedziczone elementy członkowskie i zwykle definiują dodatkowe elementy członkowskie do dodawania funkcji specyficznych dla dostawcy.</span><span class="sxs-lookup"><span data-stu-id="97dcf-105">Classes that inherit <xref:System.Data.IDataReader> must implement the inherited members, and typically define additional members to add provider-specific functionality.</span></span>  
  
 <span data-ttu-id="97dcf-106">Zmiany wprowadzone w wyniku określonym przez inny proces lub wątek podczas odczytywania danych mogą być widoczne dla użytkownika klasy implementującej `IDataReader`.</span><span class="sxs-lookup"><span data-stu-id="97dcf-106">Changes made to a result set by another process or thread while data is being read may be visible to the user of a class that implements an `IDataReader`.</span></span> <span data-ttu-id="97dcf-107">Jednak dokładne zachowanie jest zależne od dostawcy i chronometrażu.</span><span class="sxs-lookup"><span data-stu-id="97dcf-107">However, the precise behavior is both provider and timing dependent.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97dcf-108">Poniższy przykład tworzy wystąpienia klas pochodnych, <xref:System.Data.SqlClient.SqlConnection> <xref:System.Data.SqlClient.SqlCommand>, i <xref:System.Data.SqlClient.SqlDataReader>.</span><span class="sxs-lookup"><span data-stu-id="97dcf-108">The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, and <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="97dcf-109">Przykład odczytuje dane, pisząc je w konsoli programu.</span><span class="sxs-lookup"><span data-stu-id="97dcf-109">The example reads through the data, writing it out to the console.</span></span> <span data-ttu-id="97dcf-110">Na koniec przykład zamyka <xref:System.Data.SqlClient.SqlDataReader>polecenie, <xref:System.Data.SqlClient.SqlConnection>a następnie.</span><span class="sxs-lookup"><span data-stu-id="97dcf-110">Finally, the example closes the <xref:System.Data.SqlClient.SqlDataReader>, then the <xref:System.Data.SqlClient.SqlConnection>.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="97dcf-111">Aby podwyższyć poziom spójności między dostawcami danych .NET Framework, nazwij klasę dziedziczenia <paramref name="Prv" /> w formularzu <paramref name="Prv" /> polecenie, gdzie jest jednolite Prefiks nadany wszystkim klasom w określonej przestrzeni nazw dostawcy danych .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="97dcf-111">To promote consistency among .NET Framework data providers, name the inheriting class in the form <paramref name="Prv" /> Command where <paramref name="Prv" /> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</span></span> <span data-ttu-id="97dcf-112">Na przykład, <paramref name="Sql" /> jest prefiksem <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> klasy w <see langword="System.Data.SqlClient" /> przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="97dcf-112">For example, <paramref name="Sql" /> is the prefix of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class in the <see langword="System.Data.SqlClient" /> namespace.</span></span>  
  
<span data-ttu-id="97dcf-113">Użytkownicy nie tworzą bezpośrednio wystąpienia <see langword="DataReader" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="97dcf-113">Users do not create an instance of a <see langword="DataReader" /> class directly.</span></span> <span data-ttu-id="97dcf-114">Zamiast tego uzyskują <see langword="DataReader" /> one wystąpienie <see langword="ExecuteReader" /> za pomocą metody <see langword="Command" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="97dcf-114">Instead, they obtain the <see langword="DataReader" /> instance through the <see langword="ExecuteReader" /> method of the <see langword="Command" /> object.</span></span> <span data-ttu-id="97dcf-115">W związku z tym należy <see langword="DataReader" /> oznaczyć konstruktory jako wewnętrzne.</span><span class="sxs-lookup"><span data-stu-id="97dcf-115">Therefore, you should mark <see langword="DataReader" /> constructors as internal.</span></span></para></block>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="iDataReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="97dcf-116"><see cref="T:System.Data.IDataReader" /> Zamyka obiekt.</span><span class="sxs-lookup"><span data-stu-id="97dcf-116">Closes the <see cref="T:System.Data.IDataReader" /> Object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97dcf-117">Należy jawnie wywołać <xref:System.Data.IDataReader.Close%2A> metodę podczas korzystania z usługi, <xref:System.Data.IDataReader> aby użyć skojarzonej <xref:System.Data.IDbConnection> do dowolnego innego celu.</span><span class="sxs-lookup"><span data-stu-id="97dcf-117">You must explicitly call the <xref:System.Data.IDataReader.Close%2A> method when you are through using the <xref:System.Data.IDataReader> to use the associated <xref:System.Data.IDbConnection> for any other purpose.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Data.IDataReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="97dcf-118">Pobiera wartość wskazującą głębokość zagnieżdżenia dla bieżącego wiersza.</span><span class="sxs-lookup"><span data-stu-id="97dcf-118">Gets a value indicating the depth of nesting for the current row.</span></span></summary>
        <value><span data-ttu-id="97dcf-119">Poziom zagnieżdżenia.</span><span class="sxs-lookup"><span data-stu-id="97dcf-119">The level of nesting.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97dcf-120">Skrajna tabela ma głębokość zero.</span><span class="sxs-lookup"><span data-stu-id="97dcf-120">The outermost table has a depth of zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ GetSchemaTable();" />
      <MemberSignature Language="F#" Value="abstract member GetSchemaTable : unit -&gt; System.Data.DataTable" Usage="iDataReader.GetSchemaTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="97dcf-121">Zwraca, który opisuje metadane <see cref="T:System.Data.IDataReader" />kolumn. <see cref="T:System.Data.DataTable" /></span><span class="sxs-lookup"><span data-stu-id="97dcf-121">Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:System.Data.IDataReader" />.</span></span></summary>
        <returns><span data-ttu-id="97dcf-122">A <see cref="T:System.Data.DataTable" /> który opisuje metadane kolumn.</span><span class="sxs-lookup"><span data-stu-id="97dcf-122">A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97dcf-123">Implementacja <xref:System.Data.IDataReader.GetSchemaTable%2A> metody dla dostawca danych .NET Framework dla OLE DB mapy do OLE DB IColumnsRowset:: GetColumnsRowset, podczas gdy implementacje dla innych dostawców danych .NET Framework nie korzystają z warstwy dostawcy OLE DB.</span><span class="sxs-lookup"><span data-stu-id="97dcf-123">The implementation of <xref:System.Data.IDataReader.GetSchemaTable%2A> method for the .NET Framework Data Provider for OLE DB maps to the OLE DB IColumnsRowset::GetColumnsRowset method, while implementations for other .NET Framework data providers do not use an OLE DB provider layer.</span></span> <span data-ttu-id="97dcf-124">Kolejność, w której <xref:System.Data.IDataReader.GetSchemaTable%2A> zwracane są metadane dotyczące każdej kolumny w tabeli, a kolumny elementu DataReader, które zostały zwrócone, różnią się w zależności od używanego dostawcy danych.</span><span class="sxs-lookup"><span data-stu-id="97dcf-124">The order in which <xref:System.Data.IDataReader.GetSchemaTable%2A> returns metadata about each column in a table, and the DataReader columns that are returned, vary depending on which data provider you use.</span></span> <span data-ttu-id="97dcf-125">Poniższa tabela zawiera listę dostawców danych i członków, <xref:System.Data.IDataReader.GetSchemaTable%2A>które implementują.</span><span class="sxs-lookup"><span data-stu-id="97dcf-125">The following table lists data providers and members that implement <xref:System.Data.IDataReader.GetSchemaTable%2A>.</span></span>  
  
|<span data-ttu-id="97dcf-126">Dostawca danych</span><span class="sxs-lookup"><span data-stu-id="97dcf-126">Data Provider</span></span>|<span data-ttu-id="97dcf-127">Element członkowski</span><span class="sxs-lookup"><span data-stu-id="97dcf-127">Member</span></span>|  
|-------------------|------------|  
|<span data-ttu-id="97dcf-128">Dostawca danych .NET dla ODBC</span><span class="sxs-lookup"><span data-stu-id="97dcf-128">.NET Data Provider for ODBC</span></span>|<span data-ttu-id="97dcf-129"><xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="97dcf-129"><xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.</span></span>|  
|<span data-ttu-id="97dcf-130">Dostawca danych .NET dla OLE DB</span><span class="sxs-lookup"><span data-stu-id="97dcf-130">.NET Data Provider for OLE DB</span></span>|<span data-ttu-id="97dcf-131"><xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="97dcf-131"><xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.</span></span>|  
|<span data-ttu-id="97dcf-132">.NET Dostawca danych dla programu Oracle</span><span class="sxs-lookup"><span data-stu-id="97dcf-132">.NET Data Provider for Oracle</span></span>|<span data-ttu-id="97dcf-133"><xref:System.Data.OracleClient.OracleDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="97dcf-133"><xref:System.Data.OracleClient.OracleDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.</span></span>|  
|<span data-ttu-id="97dcf-134">Dostawca danych .NET dla SQL Server</span><span class="sxs-lookup"><span data-stu-id="97dcf-134">.NET Data Provider for SQL Server</span></span>|<span data-ttu-id="97dcf-135"><xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="97dcf-135"><xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="97dcf-136"><see cref="T:System.Data.IDataReader" /> Jest zamknięty.</span><span class="sxs-lookup"><span data-stu-id="97dcf-136">The <see cref="T:System.Data.IDataReader" /> is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsClosed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="System.Data.IDataReader.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="97dcf-137">Pobiera wartość wskazującą, czy czytnik danych jest zamknięty.</span><span class="sxs-lookup"><span data-stu-id="97dcf-137">Gets a value indicating whether the data reader is closed.</span></span></summary>
        <value><span data-ttu-id="97dcf-138"><see langword="true" />Jeśli czytnik danych jest zamknięty; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="97dcf-138"><see langword="true" /> if the data reader is closed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97dcf-139"><xref:System.Data.IDataReader.IsClosed%2A>i <xref:System.Data.IDataReader.RecordsAffected%2A> są jedynymi właściwościami, które można wywołać <xref:System.Data.IDataReader> po zakończeniu.</span><span class="sxs-lookup"><span data-stu-id="97dcf-139"><xref:System.Data.IDataReader.IsClosed%2A> and <xref:System.Data.IDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.IDataReader> is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool NextResult();" />
      <MemberSignature Language="F#" Value="abstract member NextResult : unit -&gt; bool" Usage="iDataReader.NextResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="97dcf-140">Przesuwa czytnik danych do następnego wyniku, odczytując wyniki instrukcji wsadowych SQL.</span><span class="sxs-lookup"><span data-stu-id="97dcf-140">Advances the data reader to the next result, when reading the results of batch SQL statements.</span></span></summary>
        <returns><span data-ttu-id="97dcf-141"><see langword="true" />Jeśli istnieje więcej wierszy; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="97dcf-141"><see langword="true" /> if there are more rows; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97dcf-142">Służy do przetwarzania wielu wyników, które można uzyskać, wykonując instrukcje wsadowe języka SQL.</span><span class="sxs-lookup"><span data-stu-id="97dcf-142">Used to process multiple results, which can be obtained by executing batch SQL statements.</span></span>  
  
 <span data-ttu-id="97dcf-143">Domyślnie czytnik danych jest ustawiany w pierwszym wyniku.</span><span class="sxs-lookup"><span data-stu-id="97dcf-143">By default, the data reader is positioned on the first result.</span></span>  
  
 [!code-csharp[IDataReader_NextResult#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/idatareader_nextresult/cs/source.cs#1)]
 [!code-vb[IDataReader_NextResult#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/idatareader_nextresult/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Read();" />
      <MemberSignature Language="F#" Value="abstract member Read : unit -&gt; bool" Usage="iDataReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="97dcf-144"><see cref="T:System.Data.IDataReader" /> Przechodzi do następnego rekordu.</span><span class="sxs-lookup"><span data-stu-id="97dcf-144">Advances the <see cref="T:System.Data.IDataReader" /> to the next record.</span></span></summary>
        <returns><span data-ttu-id="97dcf-145"><see langword="true" />Jeśli istnieje więcej wierszy; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="97dcf-145"><see langword="true" /> if there are more rows; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97dcf-146">Pozycja <xref:System.Data.IDataReader> domyślna jest wcześniejsza od pierwszego rekordu.</span><span class="sxs-lookup"><span data-stu-id="97dcf-146">The default position of the <xref:System.Data.IDataReader> is prior to the first record.</span></span> <span data-ttu-id="97dcf-147">W związku z tym <xref:System.Data.IDataReader.Read%2A> należy wywołać, aby rozpocząć dostęp do dowolnych danych.</span><span class="sxs-lookup"><span data-stu-id="97dcf-147">Therefore you must call <xref:System.Data.IDataReader.Read%2A> to begin accessing any data.</span></span>  
  
 <span data-ttu-id="97dcf-148">Gdy czytnik danych jest używany, skojarzone połączenie jest zajęte <xref:System.Data.IDataReader>.</span><span class="sxs-lookup"><span data-stu-id="97dcf-148">While the data reader is in use, the associated connection is busy serving the <xref:System.Data.IDataReader>.</span></span> <span data-ttu-id="97dcf-149">Jest to przypadek do momentu <xref:System.Data.IDataReader.Close%2A> wywołania.</span><span class="sxs-lookup"><span data-stu-id="97dcf-149">This is the case until <xref:System.Data.IDataReader.Close%2A> is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97dcf-150">Poniższy przykład tworzy wystąpienia trzech klas <xref:System.Data.OleDb.OleDbConnection>pochodnych <xref:System.Data.OleDb.OleDbCommand>, a i <xref:System.Data.OleDb.OleDbDataReader>.</span><span class="sxs-lookup"><span data-stu-id="97dcf-150">The following example creates instances of three derived classes <xref:System.Data.OleDb.OleDbConnection>, an <xref:System.Data.OleDb.OleDbCommand>, and an <xref:System.Data.OleDb.OleDbDataReader>.</span></span> <span data-ttu-id="97dcf-151">Przykład odczytuje dane, pisząc je w konsoli programu.</span><span class="sxs-lookup"><span data-stu-id="97dcf-151">The example reads through the data, writing it out to the console.</span></span> <span data-ttu-id="97dcf-152">Na koniec przykład zamyka <xref:System.Data.OleDb.OleDbDataReader>polecenie, <xref:System.Data.OleDb.OleDbConnection>a następnie.</span><span class="sxs-lookup"><span data-stu-id="97dcf-152">Finally, the example closes the <xref:System.Data.OleDb.OleDbDataReader>, then the <xref:System.Data.OleDb.OleDbConnection>.</span></span>  
  
 [!code-csharp[Classic WebData IDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RecordsAffected { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RecordsAffected : int" Usage="System.Data.IDataReader.RecordsAffected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="97dcf-153">Pobiera liczbę wierszy zmienionych, wstawionych lub usuniętych przez wykonanie instrukcji SQL.</span><span class="sxs-lookup"><span data-stu-id="97dcf-153">Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</span></span></summary>
        <value><span data-ttu-id="97dcf-154">Liczba zmienionych, wstawionych lub usuniętych wierszy. 0, jeśli nie wpłynęły żadne wiersze lub instrukcja nie powiodła się; i-1 dla instrukcji SELECT.</span><span class="sxs-lookup"><span data-stu-id="97dcf-154">The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97dcf-155">Właściwość nie jest ustawiona do momentu odczytania wszystkich wierszy i <xref:System.Data.IDataReader>zamknięcia. <xref:System.Data.IDataReader.RecordsAffected%2A></span><span class="sxs-lookup"><span data-stu-id="97dcf-155">The <xref:System.Data.IDataReader.RecordsAffected%2A> property is not set until all rows are read and you close the <xref:System.Data.IDataReader>.</span></span>  
  
 <span data-ttu-id="97dcf-156"><xref:System.Data.IDataReader.IsClosed%2A>i <xref:System.Data.IDataReader.RecordsAffected%2A> są jedynymi właściwościami, które można wywołać <xref:System.Data.IDataReader> po zakończeniu.</span><span class="sxs-lookup"><span data-stu-id="97dcf-156"><xref:System.Data.IDataReader.IsClosed%2A> and <xref:System.Data.IDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.IDataReader> is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
