<Type Name="EnumerableRowCollectionExtensions" FullName="System.Data.EnumerableRowCollectionExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8dec80236f4cee5cc2da43418151780c2a60b3f0" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69122224" /></Metadata><TypeSignature Language="C#" Value="public static class EnumerableRowCollectionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EnumerableRowCollectionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.EnumerableRowCollectionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module EnumerableRowCollectionExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class EnumerableRowCollectionExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type EnumerableRowCollectionExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7cefe-101">Zawiera metody rozszerzenia dla klas kolekcji wierszy danych.</span><span class="sxs-lookup"><span data-stu-id="7cefe-101">Contains the extension methods for the data row collection classes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cefe-102">Klasa zawiera statyczne metody rozszerzenia, które <xref:System.Data.EnumerableRowCollectionExtensions.Cast%2A> definiują metodę i <xref:System.Data.EnumerableRowCollection%601> standardowe operacje zapytań dla klas i <xref:System.Data.OrderedEnumerableRowCollection%601>. <xref:System.Data.EnumerableRowCollectionExtensions></span><span class="sxs-lookup"><span data-stu-id="7cefe-102">The <xref:System.Data.EnumerableRowCollectionExtensions> class contains static extension methods that define the <xref:System.Data.EnumerableRowCollectionExtensions.Cast%2A> method and standard query operations for the <xref:System.Data.EnumerableRowCollection%601> and <xref:System.Data.OrderedEnumerableRowCollection%601> classes.</span></span>  
  
 <span data-ttu-id="7cefe-103">Ta klasa nie może być dziedziczona i nie można utworzyć jej wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="7cefe-103">This class cannot be inherited and cannot be instantiated.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <altmember cref="T:System.Data.EnumerableRowCollection`1" />
    <altmember cref="T:System.Data.OrderedEnumerableRowCollection`1" />
    <related type="Article" href="https://msdn.microsoft.com/library/24cda21e-8af8-4632-b519-c404a839b9b2"><span data-ttu-id="7cefe-104">Standardowe operatory zapytań — przegląd</span><span class="sxs-lookup"><span data-stu-id="7cefe-104">Standard Query Operators Overview</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Cast&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.EnumerableRowCollection&lt;TResult&gt; Cast&lt;TResult&gt; (this System.Data.EnumerableRowCollection source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EnumerableRowCollection`1&lt;!!TResult&gt; Cast&lt;TResult&gt;(class System.Data.EnumerableRowCollection source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Cast(Of TResult) (source As EnumerableRowCollection) As EnumerableRowCollection(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::EnumerableRowCollection&lt;TResult&gt; ^ Cast(System::Data::EnumerableRowCollection ^ source);" />
      <MemberSignature Language="F#" Value="static member Cast : System.Data.EnumerableRowCollection -&gt; System.Data.EnumerableRowCollection&lt;'Result&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.Cast source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EnumerableRowCollection&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="7cefe-105">Typ, do którego mają zostać przekonwertowane elementy źródłowe.</span><span class="sxs-lookup"><span data-stu-id="7cefe-105">The type to convert the elements of source to.</span></span></typeparam>
        <param name="source"><span data-ttu-id="7cefe-106"><see cref="T:System.Data.EnumerableRowCollection" /> Zawiera elementy do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="7cefe-106">The <see cref="T:System.Data.EnumerableRowCollection" /> that contains the elements to be converted.</span></span></param>
        <summary><span data-ttu-id="7cefe-107">Konwertuje elementy <see cref="T:System.Data.EnumerableRowCollection" /> elementu do określonego typu.</span><span class="sxs-lookup"><span data-stu-id="7cefe-107">Converts the elements of an <see cref="T:System.Data.EnumerableRowCollection" /> to the specified type.</span></span></summary>
        <returns><span data-ttu-id="7cefe-108"><see cref="T:System.Data.EnumerableRowCollection" /> Zawiera każdy element sekwencji źródłowej przekonwertowany na określony typ.</span><span class="sxs-lookup"><span data-stu-id="7cefe-108">An <see cref="T:System.Data.EnumerableRowCollection" /> that contains each element of the source sequence converted to the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cefe-109">Ta metoda jest implementowana za pomocą odroczonego wykonania.</span><span class="sxs-lookup"><span data-stu-id="7cefe-109">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="7cefe-110">Bezpośrednio zwracana wartość jest obiektem, który przechowuje wszystkie informacje wymagane do wykonania akcji.</span><span class="sxs-lookup"><span data-stu-id="7cefe-110">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="7cefe-111">Zapytanie reprezentowane przez tę metodę nie jest wykonywane `GetEnumerator` do momentu wyliczenia obiektu przez wywołanie jego metody bezpośrednio lub przy użyciu `foreach` w wizualizacji C# lub `For Each` w Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="7cefe-111">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7cefe-112"><paramref name="source" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7cefe-112"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="7cefe-113">Elementu w sekwencji nie można rzutować na typ <paramref name="TResult" />.</span><span class="sxs-lookup"><span data-stu-id="7cefe-113">An element in the sequence cannot be cast to type <paramref name="TResult" />.</span></span></exception>
        <altmember cref="T:System.Data.EnumerableRowCollection" />
        <altmember cref="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderBy&lt;TRow,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7cefe-114">Sortuje wiersze <see cref="T:System.Data.EnumerableRowCollection" /> w kolejności rosnącej.</span><span class="sxs-lookup"><span data-stu-id="7cefe-114">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order.</span></span></summary>
        <forInternalUseOnly />
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderBy&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; OrderBy&lt;TRow,TKey&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; OrderBy&lt;TRow, TKey&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy(Of TRow, TKey) (source As EnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ OrderBy(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member OrderBy : System.Data.EnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.OrderBy (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow"><span data-ttu-id="7cefe-115">Typ elementów wiersza w <paramref name="source" />, zazwyczaj. <see cref="T:System.Data.DataRow" /></span><span class="sxs-lookup"><span data-stu-id="7cefe-115">The type of the row elements in <paramref name="source" />, typically <see cref="T:System.Data.DataRow" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="7cefe-116">Typ klucza zwracanego przez <paramref name="keySelector" />.</span><span class="sxs-lookup"><span data-stu-id="7cefe-116">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="7cefe-117"><see cref="T:System.Data.EnumerableRowCollection" /> Zawierający<see cref="T:System.Data.DataRow" /> elementy do uporządkowania.</span><span class="sxs-lookup"><span data-stu-id="7cefe-117">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span></span></param>
        <param name="keySelector"><span data-ttu-id="7cefe-118">Funkcja wyodrębniania klucza z elementu.</span><span class="sxs-lookup"><span data-stu-id="7cefe-118">A function to extract a key from an element.</span></span></param>
        <summary><span data-ttu-id="7cefe-119">Sortuje wiersze <see cref="T:System.Data.EnumerableRowCollection" /> w kolejności rosnącej zgodnie z określonym kluczem.</span><span class="sxs-lookup"><span data-stu-id="7cefe-119">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order according to the specified key.</span></span></summary>
        <returns><span data-ttu-id="7cefe-120">Elementów <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> , których elementy są sortowane według określonego klucza.</span><span class="sxs-lookup"><span data-stu-id="7cefe-120">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cefe-121">Ta metoda jest implementowana za pomocą odroczonego wykonania.</span><span class="sxs-lookup"><span data-stu-id="7cefe-121">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="7cefe-122">Bezpośrednio zwracana wartość jest obiektem, który przechowuje wszystkie informacje wymagane do wykonania akcji.</span><span class="sxs-lookup"><span data-stu-id="7cefe-122">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="7cefe-123">Zapytanie reprezentowane przez tę metodę nie jest wykonywane `GetEnumerator` do momentu wyliczenia obiektu przez wywołanie jego metody bezpośrednio lub przy użyciu `foreach` w wizualizacji C# lub `For Each` w Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="7cefe-123">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.ThenBy" />
        <altmember cref="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <Member MemberName="OrderBy&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; OrderBy&lt;TRow,TKey&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; OrderBy&lt;TRow, TKey&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy(Of TRow, TKey) (source As EnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey), comparer As IComparer(Of TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ OrderBy(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member OrderBy : System.Data.EnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.OrderBy (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow"><span data-ttu-id="7cefe-124">Typ elementów wiersza w <paramref name="source" />, zazwyczaj. <see cref="T:System.Data.DataRow" /></span><span class="sxs-lookup"><span data-stu-id="7cefe-124">The type of the row elements in <paramref name="source" />, typically <see cref="T:System.Data.DataRow" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="7cefe-125">Typ klucza zwracanego przez <paramref name="keySelector" />.</span><span class="sxs-lookup"><span data-stu-id="7cefe-125">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="7cefe-126"><see cref="T:System.Data.EnumerableRowCollection" /> Zawierający<see cref="T:System.Data.DataRow" /> elementy do uporządkowania.</span><span class="sxs-lookup"><span data-stu-id="7cefe-126">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span></span></param>
        <param name="keySelector"><span data-ttu-id="7cefe-127">Funkcja wyodrębniania klucza z elementu.</span><span class="sxs-lookup"><span data-stu-id="7cefe-127">A function to extract a key from an element.</span></span></param>
        <param name="comparer"><span data-ttu-id="7cefe-128"><see cref="T:System.Collections.Generic.IComparer`1" /> Do porównywania kluczy.</span><span class="sxs-lookup"><span data-stu-id="7cefe-128">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span></span></param>
        <summary><span data-ttu-id="7cefe-129">Sortuje wiersze <see cref="T:System.Data.EnumerableRowCollection" /> w kolejności rosnącej zgodnie z określonym kluczem i modułem porównującym.</span><span class="sxs-lookup"><span data-stu-id="7cefe-129">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order according to the specified key and comparer.</span></span></summary>
        <returns><span data-ttu-id="7cefe-130">Elementów <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> , których elementy są sortowane według określonego klucza i modułu porównującego.</span><span class="sxs-lookup"><span data-stu-id="7cefe-130">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key and comparer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cefe-131">Ta metoda jest implementowana za pomocą odroczonego wykonania.</span><span class="sxs-lookup"><span data-stu-id="7cefe-131">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="7cefe-132">Bezpośrednio zwracana wartość jest obiektem, który przechowuje wszystkie informacje wymagane do wykonania akcji.</span><span class="sxs-lookup"><span data-stu-id="7cefe-132">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="7cefe-133">Zapytanie reprezentowane przez tę metodę nie jest wykonywane `GetEnumerator` do momentu wyliczenia obiektu przez wywołanie jego metody bezpośrednio lub przy użyciu `foreach` w wizualizacji C# lub `For Each` w Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="7cefe-133">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.ThenBy" />
        <altmember cref="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderByDescending&lt;TRow,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7cefe-134">Sortuje wiersze <see cref="T:System.Data.EnumerableRowCollection" /> w kolejności malejącej.</span><span class="sxs-lookup"><span data-stu-id="7cefe-134">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order.</span></span></summary>
        <forInternalUseOnly />
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderByDescending&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; OrderByDescending&lt;TRow,TKey&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; OrderByDescending&lt;TRow, TKey&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending(Of TRow, TKey) (source As EnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ OrderByDescending(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member OrderByDescending : System.Data.EnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.OrderByDescending (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow"><span data-ttu-id="7cefe-135">Typ elementów wiersza w <paramref name="source" />, zazwyczaj. <see cref="T:System.Data.DataRow" /></span><span class="sxs-lookup"><span data-stu-id="7cefe-135">The type of the row elements in <paramref name="source" />, typically <see cref="T:System.Data.DataRow" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="7cefe-136">Typ klucza zwracanego przez <paramref name="keySelector" />.</span><span class="sxs-lookup"><span data-stu-id="7cefe-136">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="7cefe-137"><see cref="T:System.Data.EnumerableRowCollection" /> Zawierający<see cref="T:System.Data.DataRow" /> elementy do uporządkowania.</span><span class="sxs-lookup"><span data-stu-id="7cefe-137">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span></span></param>
        <param name="keySelector"><span data-ttu-id="7cefe-138">Funkcja wyodrębniania klucza z elementu.</span><span class="sxs-lookup"><span data-stu-id="7cefe-138">A function to extract a key from an element.</span></span></param>
        <summary><span data-ttu-id="7cefe-139">Sortuje wiersze <see cref="T:System.Data.EnumerableRowCollection" /> w kolejności malejącej zgodnie z określonym kluczem.</span><span class="sxs-lookup"><span data-stu-id="7cefe-139">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order according to the specified key.</span></span></summary>
        <returns><span data-ttu-id="7cefe-140">Elementów <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> , których elementy są sortowane według określonego klucza.</span><span class="sxs-lookup"><span data-stu-id="7cefe-140">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cefe-141">Ta metoda jest implementowana za pomocą odroczonego wykonania.</span><span class="sxs-lookup"><span data-stu-id="7cefe-141">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="7cefe-142">Bezpośrednio zwracana wartość jest obiektem, który przechowuje wszystkie informacje wymagane do wykonania akcji.</span><span class="sxs-lookup"><span data-stu-id="7cefe-142">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="7cefe-143">Zapytanie reprezentowane przez tę metodę nie jest wykonywane `GetEnumerator` do momentu wyliczenia obiektu przez wywołanie jego metody bezpośrednio lub przy użyciu `foreach` w wizualizacji C# lub `For Each` w Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="7cefe-143">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.ThenByDescending" />
        <altmember cref="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
      </Docs>
    </Member>
    <Member MemberName="OrderByDescending&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; OrderByDescending&lt;TRow,TKey&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; OrderByDescending&lt;TRow, TKey&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending(Of TRow, TKey) (source As EnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey), comparer As IComparer(Of TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ OrderByDescending(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member OrderByDescending : System.Data.EnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.OrderByDescending (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow"><span data-ttu-id="7cefe-144">Typ elementów wiersza w <paramref name="source" />, zazwyczaj. <see cref="T:System.Data.DataRow" /></span><span class="sxs-lookup"><span data-stu-id="7cefe-144">The type of the row elements in <paramref name="source" />, typically <see cref="T:System.Data.DataRow" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="7cefe-145">Typ klucza zwracanego przez <paramref name="keySelector" />.</span><span class="sxs-lookup"><span data-stu-id="7cefe-145">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="7cefe-146"><see cref="T:System.Data.EnumerableRowCollection" /> Zawierający<see cref="T:System.Data.DataRow" /> elementy do uporządkowania.</span><span class="sxs-lookup"><span data-stu-id="7cefe-146">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span></span></param>
        <param name="keySelector"><span data-ttu-id="7cefe-147">Funkcja wyodrębniania klucza z elementu.</span><span class="sxs-lookup"><span data-stu-id="7cefe-147">A function to extract a key from an element.</span></span></param>
        <param name="comparer"><span data-ttu-id="7cefe-148"><see cref="T:System.Collections.Generic.IComparer`1" /> Do porównywania kluczy.</span><span class="sxs-lookup"><span data-stu-id="7cefe-148">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span></span></param>
        <summary><span data-ttu-id="7cefe-149">Sortuje wiersze <see cref="T:System.Data.EnumerableRowCollection" /> w kolejności malejącej zgodnie z określonym kluczem i modułem porównującym.</span><span class="sxs-lookup"><span data-stu-id="7cefe-149">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order according to the specified key and comparer.</span></span></summary>
        <returns><span data-ttu-id="7cefe-150">Elementów <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> , których elementy są sortowane według określonego klucza i modułu porównującego.</span><span class="sxs-lookup"><span data-stu-id="7cefe-150">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key and comparer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cefe-151">Ta metoda jest implementowana za pomocą odroczonego wykonania.</span><span class="sxs-lookup"><span data-stu-id="7cefe-151">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="7cefe-152">Bezpośrednio zwracana wartość jest obiektem, który przechowuje wszystkie informacje wymagane do wykonania akcji.</span><span class="sxs-lookup"><span data-stu-id="7cefe-152">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="7cefe-153">Zapytanie reprezentowane przez tę metodę nie jest wykonywane `GetEnumerator` do momentu wyliczenia obiektu przez wywołanie jego metody bezpośrednio lub przy użyciu `foreach` w wizualizacji C# lub `For Each` w Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="7cefe-153">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.ThenByDescending" />
        <altmember cref="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <Member MemberName="Select&lt;TRow,S&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.EnumerableRowCollection&lt;S&gt; Select&lt;TRow,S&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,S&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EnumerableRowCollection`1&lt;!!S&gt; Select&lt;TRow, S&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!S&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of TRow, S) (source As EnumerableRowCollection(Of TRow), selector As Func(Of TRow, S)) As EnumerableRowCollection(Of S)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename S&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::EnumerableRowCollection&lt;S&gt; ^ Select(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, S&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Select : System.Data.EnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'S&gt; -&gt; System.Data.EnumerableRowCollection&lt;'S&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.Select (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EnumerableRowCollection&lt;S&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="S" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TRow,S&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow"><span data-ttu-id="7cefe-154">Typ elementów wiersza w <paramref name="source" />, zazwyczaj. <see cref="T:System.Data.DataRow" /></span><span class="sxs-lookup"><span data-stu-id="7cefe-154">The type of the row elements in <paramref name="source" />, typically <see cref="T:System.Data.DataRow" />.</span></span></typeparam>
        <typeparam name="S"><span data-ttu-id="7cefe-155">Typ, który <paramref name="TRow" /> zostanie przekształcony w.</span><span class="sxs-lookup"><span data-stu-id="7cefe-155">The type that <paramref name="TRow" /> will be transformed into.</span></span></typeparam>
        <param name="source"><span data-ttu-id="7cefe-156"><see cref="T:System.Data.EnumerableRowCollection`1" /> Zawierającyelementy<see cref="T:System.Data.DataRow" /> do wywołania funkcji transformacji.</span><span class="sxs-lookup"><span data-stu-id="7cefe-156">An <see cref="T:System.Data.EnumerableRowCollection`1" /> containing the <see cref="T:System.Data.DataRow" /> elements to invoke a transform function upon.</span></span></param>
        <param name="selector"><span data-ttu-id="7cefe-157">Funkcja transformacji do zastosowania do każdego elementu.</span><span class="sxs-lookup"><span data-stu-id="7cefe-157">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="7cefe-158">Projektuje każdy element <see cref="T:System.Data.EnumerableRowCollection`1" /> w nowym formularzu.</span><span class="sxs-lookup"><span data-stu-id="7cefe-158">Projects each element of an <see cref="T:System.Data.EnumerableRowCollection`1" /> into a new form.</span></span></summary>
        <returns><span data-ttu-id="7cefe-159">Których elementy są wynikiem wywołania funkcji Transform dla każdego <paramref name="source" />elementu. <see cref="T:System.Data.EnumerableRowCollection`1" /></span><span class="sxs-lookup"><span data-stu-id="7cefe-159">An <see cref="T:System.Data.EnumerableRowCollection`1" /> whose elements are the result of invoking the transform function on each element of <paramref name="source" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cefe-160">Ta metoda jest implementowana za pomocą odroczonego wykonania.</span><span class="sxs-lookup"><span data-stu-id="7cefe-160">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="7cefe-161">Bezpośrednio zwracana wartość jest obiektem, który przechowuje wszystkie informacje wymagane do wykonania akcji.</span><span class="sxs-lookup"><span data-stu-id="7cefe-161">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="7cefe-162">Zapytanie reprezentowane przez tę metodę nie jest wykonywane `GetEnumerator` do momentu wyliczenia obiektu przez wywołanie jego metody bezpośrednio lub przy użyciu `foreach` w wizualizacji C# lub `For Each` w Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="7cefe-162">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 <span data-ttu-id="7cefe-163">Ta metoda projekcji wymaga funkcji `selector`Transform, w celu utworzenia jednej wartości dla każdej wartości w `source`sekwencji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="7cefe-163">This projection method requires the transform function, `selector`, to produce one value for each value in the source sequence, `source`.</span></span> <span data-ttu-id="7cefe-164">Jeśli `selector` zwraca wartość, która jest sama kolekcją, to odbiorca przejdzie ręcznie przechodzenie sekwencji.</span><span class="sxs-lookup"><span data-stu-id="7cefe-164">If `selector` returns a value that is itself a collection, it is up to the consumer to traverse the subsequences manually.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenBy&lt;TRow,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7cefe-165">Wykonuje pomocniczą kolejność wierszy <see cref="T:System.Data.EnumerableRowCollection" /> w kolejności rosnącej.</span><span class="sxs-lookup"><span data-stu-id="7cefe-165">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order.</span></span></summary>
        <forInternalUseOnly />
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenBy&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; ThenBy&lt;TRow,TKey&gt; (this System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; ThenBy&lt;TRow, TKey&gt;(class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy(Of TRow, TKey) (source As OrderedEnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ ThenBy(System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member ThenBy : System.Data.OrderedEnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.ThenBy (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow"><span data-ttu-id="7cefe-166">Typ elementów wiersza w <paramref name="source" />, zazwyczaj. <see cref="T:System.Data.DataRow" /></span><span class="sxs-lookup"><span data-stu-id="7cefe-166">The type of the row elements in <paramref name="source" />, typically <see cref="T:System.Data.DataRow" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="7cefe-167">Typ klucza zwracanego przez <paramref name="keySelector" />.</span><span class="sxs-lookup"><span data-stu-id="7cefe-167">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="7cefe-168"><see cref="T:System.Data.EnumerableRowCollection" /> Zawierający<see cref="T:System.Data.DataRow" /> elementy do uporządkowania.</span><span class="sxs-lookup"><span data-stu-id="7cefe-168">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span></span></param>
        <param name="keySelector"><span data-ttu-id="7cefe-169">Funkcja wyodrębniania klucza z elementu.</span><span class="sxs-lookup"><span data-stu-id="7cefe-169">A function to extract a key from an element.</span></span></param>
        <summary><span data-ttu-id="7cefe-170">Wykonuje pomocniczą kolejność wierszy <see cref="T:System.Data.EnumerableRowCollection" /> w kolejności rosnącej zgodnie z określonym kluczem.</span><span class="sxs-lookup"><span data-stu-id="7cefe-170">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order according to the specified key.</span></span></summary>
        <returns><span data-ttu-id="7cefe-171">Elementów <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> , których elementy są sortowane według określonego klucza.</span><span class="sxs-lookup"><span data-stu-id="7cefe-171">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cefe-172">Użycie <xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A> operacji wymaga istniejącej głównej operacji sortowania przy użyciu <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span><span class="sxs-lookup"><span data-stu-id="7cefe-172">The use of a <xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A> operation requires an existing primary sorting operation using <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span></span>  
  
 <span data-ttu-id="7cefe-173">Ta metoda jest implementowana za pomocą odroczonego wykonania.</span><span class="sxs-lookup"><span data-stu-id="7cefe-173">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="7cefe-174">Bezpośrednio zwracana wartość jest obiektem, który przechowuje wszystkie informacje wymagane do wykonania akcji.</span><span class="sxs-lookup"><span data-stu-id="7cefe-174">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="7cefe-175">Zapytanie reprezentowane przez tę metodę nie jest wykonywane `GetEnumerator` do momentu wyliczenia obiektu przez wywołanie jego metody bezpośrednio lub przy użyciu `foreach` w wizualizacji C# lub `For Each` w Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="7cefe-175">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.OrderBy" />
        <altmember cref="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})" />
      </Docs>
    </Member>
    <Member MemberName="ThenBy&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; ThenBy&lt;TRow,TKey&gt; (this System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; ThenBy&lt;TRow, TKey&gt;(class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy(Of TRow, TKey) (source As OrderedEnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey), comparer As IComparer(Of TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ ThenBy(System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ThenBy : System.Data.OrderedEnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.ThenBy (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow"><span data-ttu-id="7cefe-176">Typ elementów wiersza w <paramref name="source" />, zazwyczaj. <see cref="T:System.Data.DataRow" /></span><span class="sxs-lookup"><span data-stu-id="7cefe-176">The type of the row elements in <paramref name="source" />, typically <see cref="T:System.Data.DataRow" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="7cefe-177">Typ klucza zwracanego przez <paramref name="keySelector" />.</span><span class="sxs-lookup"><span data-stu-id="7cefe-177">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="7cefe-178"><see cref="T:System.Data.EnumerableRowCollection" /> Zawierający<see cref="T:System.Data.DataRow" /> elementy do uporządkowania.</span><span class="sxs-lookup"><span data-stu-id="7cefe-178">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span></span></param>
        <param name="keySelector"><span data-ttu-id="7cefe-179">Funkcja wyodrębniania klucza z elementu.</span><span class="sxs-lookup"><span data-stu-id="7cefe-179">A function to extract a key from an element.</span></span></param>
        <param name="comparer"><span data-ttu-id="7cefe-180"><see cref="T:System.Collections.Generic.IComparer`1" /> Do porównywania kluczy.</span><span class="sxs-lookup"><span data-stu-id="7cefe-180">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span></span></param>
        <summary><span data-ttu-id="7cefe-181">Wykonuje pomocniczą kolejność wierszy <see cref="T:System.Data.EnumerableRowCollection" /> w kolejności rosnącej zgodnie z określonym kluczem i modułem porównującym.</span><span class="sxs-lookup"><span data-stu-id="7cefe-181">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order according to the specified key and comparer.</span></span></summary>
        <returns><span data-ttu-id="7cefe-182">Elementów <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> , których elementy są sortowane według określonego klucza i modułu porównującego.</span><span class="sxs-lookup"><span data-stu-id="7cefe-182">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key and comparer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cefe-183">Użycie <xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A> operacji wymaga istniejącej głównej operacji sortowania przy użyciu <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span><span class="sxs-lookup"><span data-stu-id="7cefe-183">The use of a <xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A> operation requires an existing primary sorting operation using <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span></span>  
  
 <span data-ttu-id="7cefe-184">Ta metoda jest implementowana za pomocą odroczonego wykonania.</span><span class="sxs-lookup"><span data-stu-id="7cefe-184">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="7cefe-185">Bezpośrednio zwracana wartość jest obiektem, który przechowuje wszystkie informacje wymagane do wykonania akcji.</span><span class="sxs-lookup"><span data-stu-id="7cefe-185">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="7cefe-186">Zapytanie reprezentowane przez tę metodę nie jest wykonywane `GetEnumerator` do momentu wyliczenia obiektu przez wywołanie jego metody bezpośrednio lub przy użyciu `foreach` w wizualizacji C# lub `For Each` w Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="7cefe-186">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.OrderBy" />
        <altmember cref="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenByDescending&lt;TRow,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7cefe-187">Wykonuje pomocniczą kolejność wierszy <see cref="T:System.Data.EnumerableRowCollection" /> w kolejności malejącej.</span><span class="sxs-lookup"><span data-stu-id="7cefe-187">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order.</span></span></summary>
        <forInternalUseOnly />
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenByDescending&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; ThenByDescending&lt;TRow,TKey&gt; (this System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; ThenByDescending&lt;TRow, TKey&gt;(class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending(Of TRow, TKey) (source As OrderedEnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ ThenByDescending(System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member ThenByDescending : System.Data.OrderedEnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.ThenByDescending (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow"><span data-ttu-id="7cefe-188">Typ elementów wiersza w <paramref name="source" />, zazwyczaj. <see cref="T:System.Data.DataRow" /></span><span class="sxs-lookup"><span data-stu-id="7cefe-188">The type of the row elements in <paramref name="source" />, typically <see cref="T:System.Data.DataRow" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="7cefe-189">Typ klucza zwracanego przez <paramref name="keySelector" />.</span><span class="sxs-lookup"><span data-stu-id="7cefe-189">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="7cefe-190"><see cref="T:System.Data.EnumerableRowCollection" /> Zawierający<see cref="T:System.Data.DataRow" /> elementy do uporządkowania.</span><span class="sxs-lookup"><span data-stu-id="7cefe-190">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span></span></param>
        <param name="keySelector"><span data-ttu-id="7cefe-191">Funkcja wyodrębniania klucza z elementu.</span><span class="sxs-lookup"><span data-stu-id="7cefe-191">A function to extract a key from an element.</span></span></param>
        <summary><span data-ttu-id="7cefe-192">Wykonuje pomocniczą kolejność wierszy <see cref="T:System.Data.EnumerableRowCollection" /> w kolejności malejącej zgodnie z określonym kluczem.</span><span class="sxs-lookup"><span data-stu-id="7cefe-192">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order according to the specified key.</span></span></summary>
        <returns><span data-ttu-id="7cefe-193">Elementów <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> , których elementy są sortowane według określonego klucza.</span><span class="sxs-lookup"><span data-stu-id="7cefe-193">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cefe-194">Użycie <xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A> operacji wymaga istniejącej głównej operacji sortowania przy użyciu <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span><span class="sxs-lookup"><span data-stu-id="7cefe-194">The use of a <xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A> operation requires an existing primary sorting operation using <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span></span>  
  
 <span data-ttu-id="7cefe-195">Ta metoda jest implementowana za pomocą odroczonego wykonania.</span><span class="sxs-lookup"><span data-stu-id="7cefe-195">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="7cefe-196">Bezpośrednio zwracana wartość jest obiektem, który przechowuje wszystkie informacje wymagane do wykonania akcji.</span><span class="sxs-lookup"><span data-stu-id="7cefe-196">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="7cefe-197">Zapytanie reprezentowane przez tę metodę nie jest wykonywane `GetEnumerator` do momentu wyliczenia obiektu przez wywołanie jego metody bezpośrednio lub przy użyciu `foreach` w wizualizacji C# lub `For Each` w Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="7cefe-197">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.OrderByDescending" />
        <altmember cref="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})" />
      </Docs>
    </Member>
    <Member MemberName="ThenByDescending&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; ThenByDescending&lt;TRow,TKey&gt; (this System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; ThenByDescending&lt;TRow, TKey&gt;(class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending(Of TRow, TKey) (source As OrderedEnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey), comparer As IComparer(Of TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ ThenByDescending(System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ThenByDescending : System.Data.OrderedEnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.ThenByDescending (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow"><span data-ttu-id="7cefe-198">Typ elementów wiersza w <paramref name="source" />, zazwyczaj. <see cref="T:System.Data.DataRow" /></span><span class="sxs-lookup"><span data-stu-id="7cefe-198">The type of the row elements in <paramref name="source" />, typically <see cref="T:System.Data.DataRow" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="7cefe-199">Typ klucza zwracanego przez <paramref name="keySelector" />.</span><span class="sxs-lookup"><span data-stu-id="7cefe-199">The type of the key returned by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="7cefe-200"><see cref="T:System.Data.EnumerableRowCollection" /> Zawierający<see cref="T:System.Data.DataRow" /> elementy do uporządkowania.</span><span class="sxs-lookup"><span data-stu-id="7cefe-200">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span></span></param>
        <param name="keySelector"><span data-ttu-id="7cefe-201">Funkcja wyodrębniania klucza z elementu.</span><span class="sxs-lookup"><span data-stu-id="7cefe-201">A function to extract a key from an element.</span></span></param>
        <param name="comparer"><span data-ttu-id="7cefe-202"><see cref="T:System.Collections.Generic.IComparer`1" /> Do porównywania kluczy.</span><span class="sxs-lookup"><span data-stu-id="7cefe-202">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span></span></param>
        <summary><span data-ttu-id="7cefe-203">Wykonuje pomocniczą kolejność wierszy <see cref="T:System.Data.EnumerableRowCollection" /> w kolejności malejącej zgodnie z określonym kluczem i modułem porównującym.</span><span class="sxs-lookup"><span data-stu-id="7cefe-203">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order according to the specified key and comparer.</span></span></summary>
        <returns><span data-ttu-id="7cefe-204">Elementów <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> , których elementy są sortowane według określonego klucza i modułu porównującego.</span><span class="sxs-lookup"><span data-stu-id="7cefe-204">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key and comparer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cefe-205">Użycie <xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A> operacji wymaga istniejącej głównej operacji sortowania przy użyciu <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span><span class="sxs-lookup"><span data-stu-id="7cefe-205">The use of a <xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A> operation requires an existing primary sorting operation using <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span></span>  
  
 <span data-ttu-id="7cefe-206">Ta metoda jest implementowana za pomocą odroczonego wykonania.</span><span class="sxs-lookup"><span data-stu-id="7cefe-206">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="7cefe-207">Bezpośrednio zwracana wartość jest obiektem, który przechowuje wszystkie informacje wymagane do wykonania akcji.</span><span class="sxs-lookup"><span data-stu-id="7cefe-207">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="7cefe-208">Zapytanie reprezentowane przez tę metodę nie jest wykonywane `GetEnumerator` do momentu wyliczenia obiektu przez wywołanie jego metody bezpośrednio lub przy użyciu `foreach` w wizualizacji C# lub `For Each` w Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="7cefe-208">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.OrderByDescending" />
        <altmember cref="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <Member MemberName="Where&lt;TRow&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.EnumerableRowCollection&lt;TRow&gt; Where&lt;TRow&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; Where&lt;TRow&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where(Of TRow) (source As EnumerableRowCollection(Of TRow), predicate As Func(Of TRow, Boolean)) As EnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::EnumerableRowCollection&lt;TRow&gt; ^ Where(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Where : System.Data.EnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, bool&gt; -&gt; System.Data.EnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.Where (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TRow,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow"><span data-ttu-id="7cefe-209">Typ elementów wiersza w <paramref name="source" />, zazwyczaj. <see cref="T:System.Data.DataRow" /></span><span class="sxs-lookup"><span data-stu-id="7cefe-209">The type of the row elements in <paramref name="source" />, typically <see cref="T:System.Data.DataRow" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="7cefe-210"><see cref="T:System.Data.EnumerableRowCollection" /> Zawierający<see cref="T:System.Data.DataRow" /> elementy do filtrowania.</span><span class="sxs-lookup"><span data-stu-id="7cefe-210">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to filter.</span></span></param>
        <param name="predicate"><span data-ttu-id="7cefe-211">Funkcja testowania każdego elementu na stanie.</span><span class="sxs-lookup"><span data-stu-id="7cefe-211">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="7cefe-212">Filtruje sekwencję wierszy na podstawie określonego predykatu.</span><span class="sxs-lookup"><span data-stu-id="7cefe-212">Filters a sequence of rows based on the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="7cefe-213"><see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> Zawiera wiersze z sekwencji wejściowej, które spełniają warunek.</span><span class="sxs-lookup"><span data-stu-id="7cefe-213">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> that contains rows from the input sequence that satisfy the condition.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7cefe-214">Ta metoda jest implementowana za pomocą odroczonego wykonania.</span><span class="sxs-lookup"><span data-stu-id="7cefe-214">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="7cefe-215">Bezpośrednio zwracana wartość jest obiektem, który przechowuje wszystkie informacje wymagane do wykonania akcji.</span><span class="sxs-lookup"><span data-stu-id="7cefe-215">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="7cefe-216">Zapytanie reprezentowane przez tę metodę nie jest wykonywane `GetEnumerator` do momentu wyliczenia obiektu przez wywołanie jego metody bezpośrednio lub przy użyciu `foreach` w wizualizacji C# lub `For Each` w Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="7cefe-216">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
        <altmember cref="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
      </Docs>
    </Member>
  </Members>
</Type>
