<Type Name="EnumerableRowCollectionExtensions" FullName="System.Data.EnumerableRowCollectionExtensions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6f0feaf1628a5917a6f467830f7d671c199bcc5f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36678173" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class EnumerableRowCollectionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EnumerableRowCollectionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.EnumerableRowCollectionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module EnumerableRowCollectionExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class EnumerableRowCollectionExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type EnumerableRowCollectionExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="221ae-101">Zawiera metody rozszerzenia dla klasy kolekcji wierszy danych.</span>
      <span class="sxs-lookup">
        <span data-stu-id="221ae-101">Contains the extension methods for the data row collection classes.</span>
      </span>
      <span data-ttu-id="221ae-102">Ten interfejs API obsługuje infrastrukturę programu .NET Framework i nie jest przeznaczony do użycia bezpośrednio w kodzie.</span>
      <span class="sxs-lookup">
        <span data-stu-id="221ae-102">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221ae-103"><xref:System.Data.EnumerableRowCollectionExtensions> Klasa zawiera metody rozszerzenia statycznych, które definiują <xref:System.Data.EnumerableRowCollectionExtensions.Cast%2A> — metoda i standardowe operacje zapytań dla <xref:System.Data.EnumerableRowCollection%601> i <xref:System.Data.OrderedEnumerableRowCollection%601> klasy.</span><span class="sxs-lookup"><span data-stu-id="221ae-103">The <xref:System.Data.EnumerableRowCollectionExtensions> class contains static extension methods that define the <xref:System.Data.EnumerableRowCollectionExtensions.Cast%2A> method and standard query operations for the <xref:System.Data.EnumerableRowCollection%601> and <xref:System.Data.OrderedEnumerableRowCollection%601> classes.</span></span>  
  
 <span data-ttu-id="221ae-104">Ta klasa nie może być dziedziczona i nie można utworzyć wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="221ae-104">This class cannot be inherited and cannot be instantiated.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.EnumerableRowCollection`1" />
    <altmember cref="T:System.Data.OrderedEnumerableRowCollection`1" />
  </Docs>
  <Members>
    <Member MemberName="Cast&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.EnumerableRowCollection&lt;TResult&gt; Cast&lt;TResult&gt; (this System.Data.EnumerableRowCollection source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EnumerableRowCollection`1&lt;!!TResult&gt; Cast&lt;TResult&gt;(class System.Data.EnumerableRowCollection source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Cast(Of TResult) (source As EnumerableRowCollection) As EnumerableRowCollection(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::EnumerableRowCollection&lt;TResult&gt; ^ Cast(System::Data::EnumerableRowCollection ^ source);" />
      <MemberSignature Language="F#" Value="static member Cast : System.Data.EnumerableRowCollection -&gt; System.Data.EnumerableRowCollection&lt;'Result&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.Cast source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EnumerableRowCollection&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="221ae-105">Typ docelowy konwersji elementów źródła.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-105">The type to convert the elements of source to.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="221ae-106">
            <see cref="T:System.Data.EnumerableRowCollection" /> Zawiera elementy, które ma zostać przekonwertowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-106">The <see cref="T:System.Data.EnumerableRowCollection" /> that contains the elements to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="221ae-107">Konwertuje elementy <see cref="T:System.Data.EnumerableRowCollection" /> do określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-107">Converts the elements of an <see cref="T:System.Data.EnumerableRowCollection" /> to the specified type.</span>
          </span>
          <span data-ttu-id="221ae-108">Ten interfejs API obsługuje infrastrukturę programu .NET Framework i nie jest przeznaczony do użycia bezpośrednio w kodzie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-108">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="221ae-109">
            <see cref="T:System.Data.EnumerableRowCollection" /> Zawierający każdy element przekonwertować na określony typ sekwencji źródłowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-109">An <see cref="T:System.Data.EnumerableRowCollection" /> that contains each element of the source sequence converted to the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221ae-110">Ta metoda jest implementowana za pomocą odroczonego wykonania.</span><span class="sxs-lookup"><span data-stu-id="221ae-110">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="221ae-111">Bezpośrednio zwracana wartość jest obiektem, który przechowuje wszystkie informacje wymagane do wykonania akcji.</span><span class="sxs-lookup"><span data-stu-id="221ae-111">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="221ae-112">Zapytanie reprezentowanego przez tę metodę nie została wykonana, aż obiekt wyliczeniu przez wywołanie jego `GetEnumerator` metody bezpośrednio lub za pomocą `foreach` języka Visual C# lub `For Each` w języku Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="221ae-112">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="221ae-113">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-113">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="221ae-114">Nie można rzutować elementu w sekwencji na typ <paramref name="TResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-114">An element in the sequence cannot be cast to type <paramref name="TResult" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Data.EnumerableRowCollection" />
        <altmember cref="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderBy&lt;TRow,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="221ae-115">Sortuje wiersze <see cref="T:System.Data.EnumerableRowCollection" /> w kolejności rosnącej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-115">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order.</span>
          </span>
          <span data-ttu-id="221ae-116">Ten interfejs API obsługuje infrastrukturę programu .NET Framework i nie jest przeznaczony do użycia bezpośrednio w kodzie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-116">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderBy&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; OrderBy&lt;TRow,TKey&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; OrderBy&lt;TRow, TKey&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy(Of TRow, TKey) (source As EnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ OrderBy(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member OrderBy : System.Data.EnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.OrderBy (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="221ae-117">Typ elementów wiersza w <c>źródła</c>, zwykle <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-117">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="221ae-118">Typ klucza zwróconego przez <c>keySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-118">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="221ae-119">
            <see cref="T:System.Data.EnumerableRowCollection" /> Zawierający <see cref="T:System.Data.DataRow" /> elementów może zostać określona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-119">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="221ae-120">Funkcja wyodrębniania klucza z elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-120">A function to extract a key from an element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="221ae-121">Sortuje wiersze <see cref="T:System.Data.EnumerableRowCollection" /> rosnąco zgodnie z określonym kluczem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-121">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order according to the specified key.</span>
          </span>
          <span data-ttu-id="221ae-122">Ten interfejs API obsługuje infrastrukturę programu .NET Framework i nie jest przeznaczony do użycia bezpośrednio w kodzie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-122">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="221ae-123">
            <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> Której elementy są sortowane według określonego klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-123">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221ae-124">Ta metoda jest implementowana za pomocą odroczonego wykonania.</span><span class="sxs-lookup"><span data-stu-id="221ae-124">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="221ae-125">Bezpośrednio zwracana wartość jest obiektem, który przechowuje wszystkie informacje wymagane do wykonania akcji.</span><span class="sxs-lookup"><span data-stu-id="221ae-125">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="221ae-126">Zapytanie reprezentowanego przez tę metodę nie została wykonana, aż obiekt wyliczeniu przez wywołanie jego `GetEnumerator` metody bezpośrednio lub za pomocą `foreach` języka Visual C# lub `For Each` w języku Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="221ae-126">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.ThenBy" />
        <altmember cref="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <Member MemberName="OrderBy&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; OrderBy&lt;TRow,TKey&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; OrderBy&lt;TRow, TKey&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy(Of TRow, TKey) (source As EnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey), comparer As IComparer(Of TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ OrderBy(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member OrderBy : System.Data.EnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.OrderBy (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="221ae-127">Typ elementów wiersza w <c>źródła</c>, zwykle <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-127">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="221ae-128">Typ klucza zwróconego przez <c>keySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-128">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="221ae-129">
            <see cref="T:System.Data.EnumerableRowCollection" /> Zawierający <see cref="T:System.Data.DataRow" /> elementów może zostać określona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-129">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="221ae-130">Funkcja wyodrębniania klucza z elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-130">A function to extract a key from an element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="221ae-131">
            <see cref="T:System.Collections.Generic.IComparer`1" /> Do porównania kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-131">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="221ae-132">Sortuje wiersze <see cref="T:System.Data.EnumerableRowCollection" /> rosnąco zgodnie z określonym kluczem i porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-132">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order according to the specified key and comparer.</span>
          </span>
          <span data-ttu-id="221ae-133">Ten interfejs API obsługuje infrastrukturę programu .NET Framework i nie jest przeznaczony do użycia bezpośrednio w kodzie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-133">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="221ae-134">
            <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> Której elementy są sortowane według określonego klucza i porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-134">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key and comparer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221ae-135">Ta metoda jest implementowana za pomocą odroczonego wykonania.</span><span class="sxs-lookup"><span data-stu-id="221ae-135">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="221ae-136">Bezpośrednio zwracana wartość jest obiektem, który przechowuje wszystkie informacje wymagane do wykonania akcji.</span><span class="sxs-lookup"><span data-stu-id="221ae-136">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="221ae-137">Zapytanie reprezentowanego przez tę metodę nie została wykonana, aż obiekt wyliczeniu przez wywołanie jego `GetEnumerator` metody bezpośrednio lub za pomocą `foreach` języka Visual C# lub `For Each` w języku Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="221ae-137">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.ThenBy" />
        <altmember cref="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderByDescending&lt;TRow,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="221ae-138">Sortuje wiersze <see cref="T:System.Data.EnumerableRowCollection" /> w kolejności malejącej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-138">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order.</span>
          </span>
          <span data-ttu-id="221ae-139">Ten interfejs API obsługuje infrastrukturę programu .NET Framework i nie jest przeznaczony do użycia bezpośrednio w kodzie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-139">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderByDescending&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; OrderByDescending&lt;TRow,TKey&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; OrderByDescending&lt;TRow, TKey&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending(Of TRow, TKey) (source As EnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ OrderByDescending(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member OrderByDescending : System.Data.EnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.OrderByDescending (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="221ae-140">Typ elementów wiersza w <c>źródła</c>, zwykle <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-140">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="221ae-141">Typ klucza zwróconego przez <c>keySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-141">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="221ae-142">
            <see cref="T:System.Data.EnumerableRowCollection" /> Zawierający <see cref="T:System.Data.DataRow" /> elementów może zostać określona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-142">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="221ae-143">Funkcja wyodrębniania klucza z elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-143">A function to extract a key from an element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="221ae-144">Sortuje wiersze <see cref="T:System.Data.EnumerableRowCollection" /> w porządku malejącym zgodnie z określonym kluczem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-144">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order according to the specified key.</span>
          </span>
          <span data-ttu-id="221ae-145">Ten interfejs API obsługuje infrastrukturę programu .NET Framework i nie jest przeznaczony do użycia bezpośrednio w kodzie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-145">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="221ae-146">
            <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> Której elementy są sortowane według określonego klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-146">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221ae-147">Ta metoda jest implementowana za pomocą odroczonego wykonania.</span><span class="sxs-lookup"><span data-stu-id="221ae-147">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="221ae-148">Bezpośrednio zwracana wartość jest obiektem, który przechowuje wszystkie informacje wymagane do wykonania akcji.</span><span class="sxs-lookup"><span data-stu-id="221ae-148">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="221ae-149">Zapytanie reprezentowanego przez tę metodę nie została wykonana, aż obiekt wyliczeniu przez wywołanie jego `GetEnumerator` metody bezpośrednio lub za pomocą `foreach` języka Visual C# lub `For Each` w języku Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="221ae-149">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.ThenByDescending" />
        <altmember cref="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
      </Docs>
    </Member>
    <Member MemberName="OrderByDescending&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; OrderByDescending&lt;TRow,TKey&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; OrderByDescending&lt;TRow, TKey&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending(Of TRow, TKey) (source As EnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey), comparer As IComparer(Of TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ OrderByDescending(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member OrderByDescending : System.Data.EnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.OrderByDescending (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="221ae-150">Typ elementów wiersza w <c>źródła</c>, zwykle <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-150">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="221ae-151">Typ klucza zwróconego przez <c>keySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-151">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="221ae-152">
            <see cref="T:System.Data.EnumerableRowCollection" /> Zawierający <see cref="T:System.Data.DataRow" /> elementów może zostać określona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-152">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="221ae-153">Funkcja wyodrębniania klucza z elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-153">A function to extract a key from an element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="221ae-154">
            <see cref="T:System.Collections.Generic.IComparer`1" /> Do porównania kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-154">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="221ae-155">Sortuje wiersze <see cref="T:System.Data.EnumerableRowCollection" /> w porządku malejącym zgodnie z określonym kluczem i porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-155">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order according to the specified key and comparer.</span>
          </span>
          <span data-ttu-id="221ae-156">Ten interfejs API obsługuje infrastrukturę programu .NET Framework i nie jest przeznaczony do użycia bezpośrednio w kodzie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-156">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="221ae-157">
            <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> Której elementy są sortowane według określonego klucza i porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-157">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key and comparer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221ae-158">Ta metoda jest implementowana za pomocą odroczonego wykonania.</span><span class="sxs-lookup"><span data-stu-id="221ae-158">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="221ae-159">Bezpośrednio zwracana wartość jest obiektem, który przechowuje wszystkie informacje wymagane do wykonania akcji.</span><span class="sxs-lookup"><span data-stu-id="221ae-159">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="221ae-160">Zapytanie reprezentowanego przez tę metodę nie została wykonana, aż obiekt wyliczeniu przez wywołanie jego `GetEnumerator` metody bezpośrednio lub za pomocą `foreach` języka Visual C# lub `For Each` w języku Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="221ae-160">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.ThenByDescending" />
        <altmember cref="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <Member MemberName="Select&lt;TRow,S&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.EnumerableRowCollection&lt;S&gt; Select&lt;TRow,S&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,S&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EnumerableRowCollection`1&lt;!!S&gt; Select&lt;TRow, S&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!S&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of TRow, S) (source As EnumerableRowCollection(Of TRow), selector As Func(Of TRow, S)) As EnumerableRowCollection(Of S)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename S&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::EnumerableRowCollection&lt;S&gt; ^ Select(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, S&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Select : System.Data.EnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'S&gt; -&gt; System.Data.EnumerableRowCollection&lt;'S&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.Select (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EnumerableRowCollection&lt;S&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="S" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TRow,S&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="221ae-161">Typ elementów wiersza w <c>źródła</c>, zwykle <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-161">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="S">
          <span data-ttu-id="221ae-162">Typ który <c>TRow</c> zostanie on przekształcony w.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-162">The type that <c>TRow</c> will be transformed into.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="221ae-163">
            <see cref="T:System.Data.EnumerableRowCollection`1" /> Zawierający <see cref="T:System.Data.DataRow" /> elementy do transformacji wywołania funkcji na.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-163">An <see cref="T:System.Data.EnumerableRowCollection`1" /> containing the <see cref="T:System.Data.DataRow" /> elements to invoke a transform function upon.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="221ae-164">Funkcja transformacji do zastosowania do każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-164">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="221ae-165">Projektów każdy element <see cref="T:System.Data.EnumerableRowCollection`1" /> do nowego formularza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-165">Projects each element of an <see cref="T:System.Data.EnumerableRowCollection`1" /> into a new form.</span>
          </span>
          <span data-ttu-id="221ae-166">Ten interfejs API obsługuje infrastrukturę programu .NET Framework i nie jest przeznaczony do użycia bezpośrednio w kodzie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-166">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="221ae-167">
            <see cref="T:System.Data.EnumerableRowCollection`1" /> Której elementy są wynik wywołania funkcji przekształcenia na każdym elemencie <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-167">An <see cref="T:System.Data.EnumerableRowCollection`1" /> whose elements are the result of invoking the transform function on each element of <paramref name="source" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221ae-168">Ta metoda jest implementowana za pomocą odroczonego wykonania.</span><span class="sxs-lookup"><span data-stu-id="221ae-168">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="221ae-169">Bezpośrednio zwracana wartość jest obiektem, który przechowuje wszystkie informacje wymagane do wykonania akcji.</span><span class="sxs-lookup"><span data-stu-id="221ae-169">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="221ae-170">Zapytanie reprezentowanego przez tę metodę nie została wykonana, aż obiekt wyliczeniu przez wywołanie jego `GetEnumerator` metody bezpośrednio lub za pomocą `foreach` języka Visual C# lub `For Each` w języku Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="221ae-170">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 <span data-ttu-id="221ae-171">Ta metoda projekcji wymaga funkcji przekształcenia `selector`, aby utworzyć pojedynczą wartość dla każdej wartości w sekwencji źródłowej `source`.</span><span class="sxs-lookup"><span data-stu-id="221ae-171">This projection method requires the transform function, `selector`, to produce one value for each value in the source sequence, `source`.</span></span> <span data-ttu-id="221ae-172">Jeśli `selector` zwraca wartość, która jest kolekcją, jest konsument przechodzenia podciągów ręcznie.</span><span class="sxs-lookup"><span data-stu-id="221ae-172">If `selector` returns a value that is itself a collection, it is up to the consumer to traverse the subsequences manually.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenBy&lt;TRow,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="221ae-173">Wykonuje dodatkowej kolejność wierszy <see cref="T:System.Data.EnumerableRowCollection" /> w kolejności rosnącej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-173">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order.</span>
          </span>
          <span data-ttu-id="221ae-174">Ten interfejs API obsługuje infrastrukturę programu .NET Framework i nie jest przeznaczony do użycia bezpośrednio w kodzie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-174">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenBy&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; ThenBy&lt;TRow,TKey&gt; (this System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; ThenBy&lt;TRow, TKey&gt;(class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy(Of TRow, TKey) (source As OrderedEnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ ThenBy(System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member ThenBy : System.Data.OrderedEnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.ThenBy (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="221ae-175">Typ elementów wiersza w <c>źródła</c>, zwykle <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-175">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="221ae-176">Typ klucza zwróconego przez <c>keySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-176">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="221ae-177">
            <see cref="T:System.Data.EnumerableRowCollection" /> Zawierający <see cref="T:System.Data.DataRow" /> elementów może zostać określona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-177">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="221ae-178">Funkcja wyodrębniania klucza z elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-178">A function to extract a key from an element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="221ae-179">Wykonuje dodatkowej kolejność wierszy <see cref="T:System.Data.EnumerableRowCollection" /> rosnąco zgodnie z określonym kluczem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-179">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order according to the specified key.</span>
          </span>
          <span data-ttu-id="221ae-180">Ten interfejs API obsługuje infrastrukturę programu .NET Framework i nie jest przeznaczony do użycia bezpośrednio w kodzie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-180">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="221ae-181">
            <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> Której elementy są sortowane według określonego klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-181">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221ae-182">Korzystanie z <xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A> operacja wymaga istniejących głównej sortowania operację przy użyciu <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span><span class="sxs-lookup"><span data-stu-id="221ae-182">The use of a <xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A> operation requires an existing primary sorting operation using <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span></span>  
  
 <span data-ttu-id="221ae-183">Ta metoda jest implementowana za pomocą odroczonego wykonania.</span><span class="sxs-lookup"><span data-stu-id="221ae-183">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="221ae-184">Bezpośrednio zwracana wartość jest obiektem, który przechowuje wszystkie informacje wymagane do wykonania akcji.</span><span class="sxs-lookup"><span data-stu-id="221ae-184">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="221ae-185">Zapytanie reprezentowanego przez tę metodę nie została wykonana, aż obiekt wyliczeniu przez wywołanie jego `GetEnumerator` metody bezpośrednio lub za pomocą `foreach` języka Visual C# lub `For Each` w języku Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="221ae-185">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.OrderBy" />
        <altmember cref="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})" />
      </Docs>
    </Member>
    <Member MemberName="ThenBy&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; ThenBy&lt;TRow,TKey&gt; (this System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; ThenBy&lt;TRow, TKey&gt;(class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy(Of TRow, TKey) (source As OrderedEnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey), comparer As IComparer(Of TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ ThenBy(System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ThenBy : System.Data.OrderedEnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.ThenBy (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="221ae-186">Typ elementów wiersza w <c>źródła</c>, zwykle <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-186">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="221ae-187">Typ klucza zwróconego przez <c>keySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-187">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="221ae-188">
            <see cref="T:System.Data.EnumerableRowCollection" /> Zawierający <see cref="T:System.Data.DataRow" /> elementów może zostać określona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-188">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="221ae-189">Funkcja wyodrębniania klucza z elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-189">A function to extract a key from an element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="221ae-190">
            <see cref="T:System.Collections.Generic.IComparer`1" /> Do porównania kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-190">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="221ae-191">Wykonuje dodatkowej kolejność wierszy <see cref="T:System.Data.EnumerableRowCollection" /> rosnąco zgodnie z określonym kluczem i porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-191">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order according to the specified key and comparer.</span>
          </span>
          <span data-ttu-id="221ae-192">Ten interfejs API obsługuje infrastrukturę programu .NET Framework i nie jest przeznaczony do użycia bezpośrednio w kodzie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-192">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="221ae-193">
            <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> Której elementy są sortowane według określonego klucza i porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-193">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key and comparer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221ae-194">Korzystanie z <xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A> operacja wymaga istniejących głównej sortowania operację przy użyciu <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span><span class="sxs-lookup"><span data-stu-id="221ae-194">The use of a <xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A> operation requires an existing primary sorting operation using <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span></span>  
  
 <span data-ttu-id="221ae-195">Ta metoda jest implementowana za pomocą odroczonego wykonania.</span><span class="sxs-lookup"><span data-stu-id="221ae-195">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="221ae-196">Bezpośrednio zwracana wartość jest obiektem, który przechowuje wszystkie informacje wymagane do wykonania akcji.</span><span class="sxs-lookup"><span data-stu-id="221ae-196">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="221ae-197">Zapytanie reprezentowanego przez tę metodę nie została wykonana, aż obiekt wyliczeniu przez wywołanie jego `GetEnumerator` metody bezpośrednio lub za pomocą `foreach` języka Visual C# lub `For Each` w języku Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="221ae-197">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.OrderBy" />
        <altmember cref="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenByDescending&lt;TRow,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="221ae-198">Wykonuje dodatkowej kolejność wierszy <see cref="T:System.Data.EnumerableRowCollection" /> w kolejności malejącej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-198">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order.</span>
          </span>
          <span data-ttu-id="221ae-199">Ten interfejs API obsługuje infrastrukturę programu .NET Framework i nie jest przeznaczony do użycia bezpośrednio w kodzie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-199">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenByDescending&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; ThenByDescending&lt;TRow,TKey&gt; (this System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; ThenByDescending&lt;TRow, TKey&gt;(class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending(Of TRow, TKey) (source As OrderedEnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ ThenByDescending(System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member ThenByDescending : System.Data.OrderedEnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.ThenByDescending (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="221ae-200">Typ elementów wiersza w <c>źródła</c>, zwykle <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-200">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="221ae-201">Typ klucza zwróconego przez <c>keySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-201">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="221ae-202">
            <see cref="T:System.Data.EnumerableRowCollection" /> Zawierający <see cref="T:System.Data.DataRow" /> elementów może zostać określona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-202">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="221ae-203">Funkcja wyodrębniania klucza z elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-203">A function to extract a key from an element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="221ae-204">Wykonuje dodatkowej kolejność wierszy <see cref="T:System.Data.EnumerableRowCollection" /> w porządku malejącym zgodnie z określonym kluczem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-204">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order according to the specified key.</span>
          </span>
          <span data-ttu-id="221ae-205">Ten interfejs API obsługuje infrastrukturę programu .NET Framework i nie jest przeznaczony do użycia bezpośrednio w kodzie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-205">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="221ae-206">
            <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> Której elementy są sortowane według określonego klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-206">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221ae-207">Korzystanie z <xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A> operacja wymaga istniejących głównej sortowania operację przy użyciu <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span><span class="sxs-lookup"><span data-stu-id="221ae-207">The use of a <xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A> operation requires an existing primary sorting operation using <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span></span>  
  
 <span data-ttu-id="221ae-208">Ta metoda jest implementowana za pomocą odroczonego wykonania.</span><span class="sxs-lookup"><span data-stu-id="221ae-208">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="221ae-209">Bezpośrednio zwracana wartość jest obiektem, który przechowuje wszystkie informacje wymagane do wykonania akcji.</span><span class="sxs-lookup"><span data-stu-id="221ae-209">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="221ae-210">Zapytanie reprezentowanego przez tę metodę nie została wykonana, aż obiekt wyliczeniu przez wywołanie jego `GetEnumerator` metody bezpośrednio lub za pomocą `foreach` języka Visual C# lub `For Each` w języku Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="221ae-210">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.OrderByDescending" />
        <altmember cref="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})" />
      </Docs>
    </Member>
    <Member MemberName="ThenByDescending&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; ThenByDescending&lt;TRow,TKey&gt; (this System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; ThenByDescending&lt;TRow, TKey&gt;(class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending(Of TRow, TKey) (source As OrderedEnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey), comparer As IComparer(Of TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ ThenByDescending(System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ThenByDescending : System.Data.OrderedEnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.ThenByDescending (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="221ae-211">Typ elementów wiersza w <c>źródła</c>, zwykle <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-211">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="221ae-212">Typ klucza zwróconego przez <c>keySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-212">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="221ae-213">
            <see cref="T:System.Data.EnumerableRowCollection" /> Zawierający <see cref="T:System.Data.DataRow" /> elementów może zostać określona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-213">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="221ae-214">Funkcja wyodrębniania klucza z elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-214">A function to extract a key from an element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="221ae-215">
            <see cref="T:System.Collections.Generic.IComparer`1" /> Do porównania kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-215">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="221ae-216">Wykonuje dodatkowej kolejność wierszy <see cref="T:System.Data.EnumerableRowCollection" /> w porządku malejącym zgodnie z określonym kluczem i porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-216">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order according to the specified key and comparer.</span>
          </span>
          <span data-ttu-id="221ae-217">Ten interfejs API obsługuje infrastrukturę programu .NET Framework i nie jest przeznaczony do użycia bezpośrednio w kodzie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-217">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="221ae-218">
            <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> Której elementy są sortowane według określonego klucza i porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-218">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key and comparer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221ae-219">Korzystanie z <xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A> operacja wymaga istniejących głównej sortowania operację przy użyciu <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span><span class="sxs-lookup"><span data-stu-id="221ae-219">The use of a <xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A> operation requires an existing primary sorting operation using <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span></span>  
  
 <span data-ttu-id="221ae-220">Ta metoda jest implementowana za pomocą odroczonego wykonania.</span><span class="sxs-lookup"><span data-stu-id="221ae-220">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="221ae-221">Bezpośrednio zwracana wartość jest obiektem, który przechowuje wszystkie informacje wymagane do wykonania akcji.</span><span class="sxs-lookup"><span data-stu-id="221ae-221">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="221ae-222">Zapytanie reprezentowanego przez tę metodę nie została wykonana, aż obiekt wyliczeniu przez wywołanie jego `GetEnumerator` metody bezpośrednio lub za pomocą `foreach` języka Visual C# lub `For Each` w języku Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="221ae-222">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.OrderByDescending" />
        <altmember cref="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <Member MemberName="Where&lt;TRow&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.EnumerableRowCollection&lt;TRow&gt; Where&lt;TRow&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; Where&lt;TRow&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where(Of TRow) (source As EnumerableRowCollection(Of TRow), predicate As Func(Of TRow, Boolean)) As EnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::EnumerableRowCollection&lt;TRow&gt; ^ Where(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Where : System.Data.EnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, bool&gt; -&gt; System.Data.EnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.Where (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TRow,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="221ae-223">Typ elementów wiersza w <c>źródła</c>, zwykle <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-223">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="221ae-224">
            <see cref="T:System.Data.EnumerableRowCollection" /> Zawierający <see cref="T:System.Data.DataRow" /> elementy do filtrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-224">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to filter.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="221ae-225">Funkcja testowania każdego elementu na stanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-225">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="221ae-226">Filtruje sekwencji wierszy w oparciu o określony predykat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-226">Filters a sequence of rows based on the specified predicate.</span>
          </span>
          <span data-ttu-id="221ae-227">Ten interfejs API obsługuje infrastrukturę programu .NET Framework i nie jest przeznaczony do użycia bezpośrednio w kodzie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-227">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="221ae-228">
            <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> Zawiera wiersze z sekwencji wejściowych, które spełniają warunek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="221ae-228">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> that contains rows from the input sequence that satisfy the condition.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221ae-229">Ta metoda jest implementowana za pomocą odroczonego wykonania.</span><span class="sxs-lookup"><span data-stu-id="221ae-229">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="221ae-230">Bezpośrednio zwracana wartość jest obiektem, który przechowuje wszystkie informacje wymagane do wykonania akcji.</span><span class="sxs-lookup"><span data-stu-id="221ae-230">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="221ae-231">Zapytanie reprezentowanego przez tę metodę nie została wykonana, aż obiekt wyliczeniu przez wywołanie jego `GetEnumerator` metody bezpośrednio lub za pomocą `foreach` języka Visual C# lub `For Each` w języku Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="221ae-231">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
      </Docs>
    </Member>
  </Members>
</Type>