<Type Name="XmlReadMode" FullName="System.Data.XmlReadMode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a5f18cde616de164446c89aa573066e2444e6afc" /><Meta Name="ms.sourcegitcommit" Value="9a6da88bd5455e8274257ca7ad259b42f1de114f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="05/22/2019" /><Meta Name="ms.locfileid" Value="66006356" /></Metadata><TypeSignature Language="C#" Value="public enum XmlReadMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XmlReadMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.XmlReadMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum XmlReadMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class XmlReadMode" />
  <TypeSignature Language="F#" Value="type XmlReadMode = " />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="b663e-101">Określa sposób odczytywania danych XML i schemat relacyjny do <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="b663e-101">Specifies how to read XML data and a relational schema into a <see cref="T:System.Data.DataSet" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b663e-102">Użyj elementów członkowskich to wyliczenie podczas ustawiania `ReadMode` parametru <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="b663e-102">Use the members of this enumeration when setting the `ReadMode` parameter of the <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b663e-103">`Auto` Tryb może być wolniejsze niż ustawienie <xref:System.Data.XmlReadMode> jawne opcji.</span><span class="sxs-lookup"><span data-stu-id="b663e-103">`Auto` mode may be slower than setting <xref:System.Data.XmlReadMode> to an explicit option.</span></span>  

<span data-ttu-id="b663e-104">`Auto` Wykonuje najodpowiedniejsze z tych akcji:</span><span class="sxs-lookup"><span data-stu-id="b663e-104">`Auto` performs the most appropriate of these actions:</span></span>  
  
- <span data-ttu-id="b663e-105">Jeśli dane są w formacie DiffGram, ustawia plik XML trybu odczytu do `DiffGram`.</span><span class="sxs-lookup"><span data-stu-id="b663e-105">If the data is a DiffGram, sets the XML read mode to `DiffGram`.</span></span>  

- <span data-ttu-id="b663e-106">Jeśli zestaw danych zawiera już schematu lub jeśli dokument zawiera schemat w tekście, ustawia plik XML trybu odczytu do `ReadSchema`.</span><span class="sxs-lookup"><span data-stu-id="b663e-106">If the dataset already has a schema, or if the document contains an in-line schema, sets the XML read mode  to `ReadSchema`.</span></span>  
  
- <span data-ttu-id="b663e-107">Jeśli zestaw danych nie ma jeszcze schematu, a dokument nie zawiera schemat w tekście, ustawia plik XML trybu odczytu do `InferSchema`.</span><span class="sxs-lookup"><span data-stu-id="b663e-107">If the dataset does not already have a schema and the document does not contain an in-line schema, sets the XML read mode to `InferSchema`.</span></span>

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Auto">
      <MemberSignature Language="C#" Value="Auto" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode Auto = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.Auto" />
      <MemberSignature Language="VB.NET" Value="Auto" />
      <MemberSignature Language="C++ CLI" Value="Auto" />
      <MemberSignature Language="F#" Value="Auto = 0" Usage="System.Data.XmlReadMode.Auto" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b663e-108">Wartość domyślna trybu odczytu.</span><span class="sxs-lookup"><span data-stu-id="b663e-108">The default read mode.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffGram">
      <MemberSignature Language="C#" Value="DiffGram" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode DiffGram = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.DiffGram" />
      <MemberSignature Language="VB.NET" Value="DiffGram" />
      <MemberSignature Language="C++ CLI" Value="DiffGram" />
      <MemberSignature Language="F#" Value="DiffGram = 4" Usage="System.Data.XmlReadMode.DiffGram" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b663e-109">Odczytuje format DiffGram, stosowanie zmian w formacie DiffGram do <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="b663e-109">Reads a DiffGram, applying changes from the DiffGram to the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="b663e-110">Semantyka są identyczne z <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> operacji.</span><span class="sxs-lookup"><span data-stu-id="b663e-110">The semantics are identical to those of a <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> operation.</span></span> <span data-ttu-id="b663e-111">Podobnie jak w przypadku <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> operacji <see cref="P:System.Data.DataRow.RowState" /> wartości są zachowywane.</span><span class="sxs-lookup"><span data-stu-id="b663e-111">As with the <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> operation, <see cref="P:System.Data.DataRow.RowState" /> values are preserved.</span></span> <span data-ttu-id="b663e-112">Dane wejściowe do <see cref="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)" /> z DataSets należy tylko można uzyskać przy użyciu danych wyjściowych <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> jako element w formacie DiffGram.</span><span class="sxs-lookup"><span data-stu-id="b663e-112">Input to <see cref="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)" /> with DiffGrams should only be obtained using the output from <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> as a DiffGram.</span></span>
        
<span data-ttu-id="b663e-113">Element docelowy <see cref="T:System.Data.DataSet" /> muszą mieć ten sam schemat, jak <see cref="T:System.Data.DataSet" /> na którym <see cref="Overload:System.Data.DataSet.WriteXml" /> nazywane w formacie DiffGram.</span><span class="sxs-lookup"><span data-stu-id="b663e-113">The target <see cref="T:System.Data.DataSet" /> must have the same schema as the <see cref="T:System.Data.DataSet" /> on which <see cref="Overload:System.Data.DataSet.WriteXml" /> as DiffGram is called.</span></span> <span data-ttu-id="b663e-114">W przeciwnym razie format DiffGram Operacja scalania nie powiedzie się i zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="b663e-114">Otherwise the DiffGram merge operation fails and an exception is thrown.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fragment">
      <MemberSignature Language="C#" Value="Fragment" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode Fragment = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.Fragment" />
      <MemberSignature Language="VB.NET" Value="Fragment" />
      <MemberSignature Language="C++ CLI" Value="Fragment" />
      <MemberSignature Language="F#" Value="Fragment = 5" Usage="System.Data.XmlReadMode.Fragment" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b663e-115">Odczytuje fragmenty XML, np. tych generowanych przez wykonanie zapytań FOR XML, wystąpienie programu SQL Server.</span><span class="sxs-lookup"><span data-stu-id="b663e-115">Reads XML fragments, such as those generated by executing FOR XML queries, against an instance of SQL Server.</span></span> <span data-ttu-id="b663e-116">Gdy <see cref="T:System.Data.XmlReadMode" /> ustawiono <see langword="Fragment" />, domyślny obszar nazw jest do odczytu jako wbudowany schemat.</span><span class="sxs-lookup"><span data-stu-id="b663e-116">When <see cref="T:System.Data.XmlReadMode" /> is set to <see langword="Fragment" />, the default namespace is read as the inline schema.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="IgnoreSchema">
      <MemberSignature Language="C#" Value="IgnoreSchema" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode IgnoreSchema = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.IgnoreSchema" />
      <MemberSignature Language="VB.NET" Value="IgnoreSchema" />
      <MemberSignature Language="C++ CLI" Value="IgnoreSchema" />
      <MemberSignature Language="F#" Value="IgnoreSchema = 2" Usage="System.Data.XmlReadMode.IgnoreSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b663e-117">Ignoruje wszelkie wbudowanego schematu i odczytuje dane z istniejącymi <see cref="T:System.Data.DataSet" /> schematu.</span><span class="sxs-lookup"><span data-stu-id="b663e-117">Ignores any inline schema and reads data into the existing <see cref="T:System.Data.DataSet" /> schema.</span></span> <span data-ttu-id="b663e-118">Jeśli danych jest niezgodny z istniejącego schematu, jest odrzucany (w tym dane z różnych obszarów nazw zdefiniowanych dla <see cref="T:System.Data.DataSet" />).</span><span class="sxs-lookup"><span data-stu-id="b663e-118">If any data does not match the existing schema, it is discarded (including data from differing namespaces defined for the <see cref="T:System.Data.DataSet" />).</span></span> <span data-ttu-id="b663e-119">Jeśli dane są w formacie DiffGram, <see langword="IgnoreSchema" /> ma taką samą funkcjonalność jak <see langword="DiffGram" />.</span><span class="sxs-lookup"><span data-stu-id="b663e-119">If the data is a DiffGram, <see langword="IgnoreSchema" /> has the same functionality as <see langword="DiffGram" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="InferSchema">
      <MemberSignature Language="C#" Value="InferSchema" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode InferSchema = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.InferSchema" />
      <MemberSignature Language="VB.NET" Value="InferSchema" />
      <MemberSignature Language="C++ CLI" Value="InferSchema" />
      <MemberSignature Language="F#" Value="InferSchema = 3" Usage="System.Data.XmlReadMode.InferSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b663e-120">Ignoruje wszelkie wbudowanego schematu, wnioskuje schemat z danych i służy do ładowania danych.</span><span class="sxs-lookup"><span data-stu-id="b663e-120">Ignores any inline schema, infers schema from the data and loads the data.</span></span> <span data-ttu-id="b663e-121">Jeśli <see cref="T:System.Data.DataSet" /> już zawiera schemat bieżącego schemat został rozszerzony, dodając nowe tabele lub dodawanie kolumn do istniejących tabel.</span><span class="sxs-lookup"><span data-stu-id="b663e-121">If the <see cref="T:System.Data.DataSet" /> already contains a schema, the current schema is extended by adding new tables or adding columns to existing tables.</span></span> <span data-ttu-id="b663e-122">Wyjątek jest generowany, jeśli wywnioskowane tabela już istnieje, ale z innej przestrzeni nazw lub jeśli żadna z wnioskowanym kolumn w konflikcie z istniejących kolumn.</span><span class="sxs-lookup"><span data-stu-id="b663e-122">An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="InferTypedSchema">
      <MemberSignature Language="C#" Value="InferTypedSchema" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode InferTypedSchema = int32(6)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.InferTypedSchema" />
      <MemberSignature Language="VB.NET" Value="InferTypedSchema" />
      <MemberSignature Language="C++ CLI" Value="InferTypedSchema" />
      <MemberSignature Language="F#" Value="InferTypedSchema = 6" Usage="System.Data.XmlReadMode.InferTypedSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b663e-123">Ignoruje wszelkie wbudowanego schematu, wnioskuje jednoznacznie określony schemat danych i służy do ładowania danych.</span><span class="sxs-lookup"><span data-stu-id="b663e-123">Ignores any inline schema, infers a strongly typed schema from the data, and loads the data.</span></span> <span data-ttu-id="b663e-124">Nie można wywnioskować typu danych, jest interpretowany jako ciąg znaków danych.</span><span class="sxs-lookup"><span data-stu-id="b663e-124">If the type cannot be inferred from the data, it is interpreted as string data.</span></span> <span data-ttu-id="b663e-125">Jeśli <see cref="T:System.Data.DataSet" /> już zawiera schemat bieżącego schemat został rozszerzony, dodając nowe tabele lub przez dodanie kolumn do istniejących tabel.</span><span class="sxs-lookup"><span data-stu-id="b663e-125">If the <see cref="T:System.Data.DataSet" /> already contains a schema, the current schema is extended, either by adding new tables or by adding columns to existing tables.</span></span> <span data-ttu-id="b663e-126">Wyjątek jest generowany, jeśli wywnioskowane tabela już istnieje, ale z innej przestrzeni nazw lub jeśli żadna z wnioskowanym kolumn w konflikcie z istniejących kolumn.</span><span class="sxs-lookup"><span data-stu-id="b663e-126">An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ReadSchema">
      <MemberSignature Language="C#" Value="ReadSchema" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode ReadSchema = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.ReadSchema" />
      <MemberSignature Language="VB.NET" Value="ReadSchema" />
      <MemberSignature Language="C++ CLI" Value="ReadSchema" />
      <MemberSignature Language="F#" Value="ReadSchema = 1" Usage="System.Data.XmlReadMode.ReadSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b663e-127">Odczytuje schemat w tekście i służy do ładowania danych.</span><span class="sxs-lookup"><span data-stu-id="b663e-127">Reads any inline schema and loads the data.</span></span> <span data-ttu-id="b663e-128">Jeśli <see cref="T:System.Data.DataSet" /> już zawiera schemat, nowe tabele mogą być dodane do schematu, ale jest zgłaszany wyjątek, jeśli wszystkie tabele w wbudowany schemat już istnieje w <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="b663e-128">If the <see cref="T:System.Data.DataSet" /> already contains schema, new tables may be added to the schema, but an exception is thrown if any tables in the inline schema already exist in the <see cref="T:System.Data.DataSet" />.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>