<Type Name="XmlReadMode" FullName="System.Data.XmlReadMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0f5b44937f66979262138121888b988fb88a1eda" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36677055" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum XmlReadMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XmlReadMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.XmlReadMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum XmlReadMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class XmlReadMode" />
  <TypeSignature Language="F#" Value="type XmlReadMode = " />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="59526-101">Określa, jak mają być odczytywane dane XML i schemat relacyjny do <see cref="T:System.Data.DataSet" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="59526-101">Specifies how to read XML data and a relational schema into a <see cref="T:System.Data.DataSet" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59526-102">Użyj elementów członkowskich to wyliczenie podczas ustawiania `ReadMode` parametr <xref:System.Data.DataSet.ReadXml%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="59526-102">Use the members of this enumeration when setting the `ReadMode` parameter of the <xref:System.Data.DataSet.ReadXml%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="59526-103">`Auto` Tryb może być mniejsza niż ustawienie <xref:System.Data.XmlReadMode> opcję explicit.</span><span class="sxs-lookup"><span data-stu-id="59526-103">`Auto` mode may be slower than setting <xref:System.Data.XmlReadMode> to an explicit option.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Auto">
      <MemberSignature Language="C#" Value="Auto" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode Auto = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.Auto" />
      <MemberSignature Language="VB.NET" Value="Auto" />
      <MemberSignature Language="C++ CLI" Value="Auto" />
      <MemberSignature Language="F#" Value="Auto = 0" Usage="System.Data.XmlReadMode.Auto" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="59526-104">Domyślne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59526-104">Default.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59526-105">Wykonuje najbardziej odpowiednie z następujących działań:</span><span class="sxs-lookup"><span data-stu-id="59526-105">Performs the most appropriate of these actions:</span></span>  
  
 <span data-ttu-id="59526-106">Jeśli dane są elementu DiffGram, ustawia `XmlReadMode` do `DiffGram`.</span><span class="sxs-lookup"><span data-stu-id="59526-106">If the data is a DiffGram, sets `XmlReadMode` to `DiffGram`.</span></span>  
  
 <span data-ttu-id="59526-107">—lub—</span><span class="sxs-lookup"><span data-stu-id="59526-107">-or-</span></span>  
  
 <span data-ttu-id="59526-108">Jeśli zestaw danych zawiera już schemat lub dokument zawiera schemat w tekście, ustawia `XmlReadMode` do `ReadSchema`.</span><span class="sxs-lookup"><span data-stu-id="59526-108">If the dataset already has a schema, or the document contains an in-line schema, sets `XmlReadMode` to `ReadSchema`.</span></span>  
  
 <span data-ttu-id="59526-109">—lub—</span><span class="sxs-lookup"><span data-stu-id="59526-109">-or-</span></span>  
  
 <span data-ttu-id="59526-110">Jeśli dokument nie zawiera schematu w wierszu zestawu danych nie ma jeszcze schematu, ustawia `XmlReadMode` do `InferSchema`.</span><span class="sxs-lookup"><span data-stu-id="59526-110">If the dataset does not already have a schema and the document does not contain an in-line schema, sets `XmlReadMode` to `InferSchema`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffGram">
      <MemberSignature Language="C#" Value="DiffGram" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode DiffGram = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.DiffGram" />
      <MemberSignature Language="VB.NET" Value="DiffGram" />
      <MemberSignature Language="C++ CLI" Value="DiffGram" />
      <MemberSignature Language="F#" Value="DiffGram = 4" Usage="System.Data.XmlReadMode.DiffGram" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="59526-111">Odczytuje elementu DiffGram, stosowanie zmian z elementu DiffGram do <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59526-111">Reads a DiffGram, applying changes from the DiffGram to the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="59526-112">Semantyka są identyczne z <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59526-112">The semantics are identical to those of a <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> operation.</span>
          </span>
          <span data-ttu-id="59526-113">Jak <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> operacji <see cref="P:System.Data.DataRow.RowState" /> wartości zostaną zachowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59526-113">As with the <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> operation, <see cref="P:System.Data.DataRow.RowState" /> values are preserved.</span>
          </span>
          <span data-ttu-id="59526-114">Dane wejściowe <see cref="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)" /> z DataSets powinien można uzyskać tylko za pomocą dane wyjściowe z <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> jako elementu DiffGram.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59526-114">Input to <see cref="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)" /> with DiffGrams should only be obtained using the output from <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> as a DiffGram.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59526-115">Element docelowy <xref:System.Data.DataSet> muszą mieć ten sam schemat jako <xref:System.Data.DataSet> na którym <xref:System.Data.DataSet.WriteXml%2A> po wywołaniu elementu DiffGram.</span><span class="sxs-lookup"><span data-stu-id="59526-115">The target <xref:System.Data.DataSet> must have the same schema as the <xref:System.Data.DataSet> on which <xref:System.Data.DataSet.WriteXml%2A> as DiffGram is called.</span></span> <span data-ttu-id="59526-116">W przeciwnym razie operacja scalania elementu DiffGram kończy się niepowodzeniem i jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="59526-116">Otherwise the DiffGram merge operation fails, and an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fragment">
      <MemberSignature Language="C#" Value="Fragment" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode Fragment = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.Fragment" />
      <MemberSignature Language="VB.NET" Value="Fragment" />
      <MemberSignature Language="C++ CLI" Value="Fragment" />
      <MemberSignature Language="F#" Value="Fragment = 5" Usage="System.Data.XmlReadMode.Fragment" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="59526-117">Odczytuje fragmenty XML, takich jak zasoby generowane przez wykonywanie kwerend FOR XML, względem wystąpienia programu SQL Server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59526-117">Reads XML fragments, such as those generated by executing FOR XML queries, against an instance of SQL Server.</span>
          </span>
          <span data-ttu-id="59526-118">Gdy <see cref="T:System.Data.XmlReadMode" /> ma ustawioną wartość <see langword="Fragment" />, domyślnej przestrzeni nazw jest do odczytu jako wbudowany schemat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59526-118">When <see cref="T:System.Data.XmlReadMode" /> is set to <see langword="Fragment" />, the default namespace is read as the inline schema.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="IgnoreSchema">
      <MemberSignature Language="C#" Value="IgnoreSchema" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode IgnoreSchema = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.IgnoreSchema" />
      <MemberSignature Language="VB.NET" Value="IgnoreSchema" />
      <MemberSignature Language="C++ CLI" Value="IgnoreSchema" />
      <MemberSignature Language="F#" Value="IgnoreSchema = 2" Usage="System.Data.XmlReadMode.IgnoreSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="59526-119">Ignoruje wszystkie wbudowanego schematu i odczytuje dane do istniejącego <see cref="T:System.Data.DataSet" /> schematu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59526-119">Ignores any inline schema and reads data into the existing <see cref="T:System.Data.DataSet" /> schema.</span>
          </span>
          <span data-ttu-id="59526-120">Jeśli żadnych danych jest niezgodny z istniejących schematów, zostaną odrzucone (w tym dane z różnych przestrzeni nazw zdefiniowane dla <see cref="T:System.Data.DataSet" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="59526-120">If any data does not match the existing schema, it is discarded (including data from differing namespaces defined for the <see cref="T:System.Data.DataSet" />).</span>
          </span>
          <span data-ttu-id="59526-121">Jeśli dane są elementu DiffGram <see langword="IgnoreSchema" /> ma te same funkcje co <see langword="DiffGram" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59526-121">If the data is a DiffGram, <see langword="IgnoreSchema" /> has the same functionality as <see langword="DiffGram" />.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="InferSchema">
      <MemberSignature Language="C#" Value="InferSchema" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode InferSchema = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.InferSchema" />
      <MemberSignature Language="VB.NET" Value="InferSchema" />
      <MemberSignature Language="C++ CLI" Value="InferSchema" />
      <MemberSignature Language="F#" Value="InferSchema = 3" Usage="System.Data.XmlReadMode.InferSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="59526-122">Ignoruje schemat w tekście, wnioskuje schemat z danych i ładuje dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59526-122">Ignores any inline schema, infers schema from the data and loads the data.</span>
          </span>
          <span data-ttu-id="59526-123">Jeśli <see cref="T:System.Data.DataSet" /> już zawiera schemat, bieżący schemat jest rozszerzony przez dodanie nowych tabel lub dodawanie kolumn do istniejących tabel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59526-123">If the <see cref="T:System.Data.DataSet" /> already contains a schema, the current schema is extended by adding new tables or adding columns to existing tables.</span>
          </span>
          <span data-ttu-id="59526-124">Jest zwracany wyjątek, jeśli wnioskowany tabela już istnieje, ale z inną przestrzeń nazw lub jeśli dowolnej kolumny wnioskowany konflikt z istniejących kolumn.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59526-124">An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="InferTypedSchema">
      <MemberSignature Language="C#" Value="InferTypedSchema" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode InferTypedSchema = int32(6)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.InferTypedSchema" />
      <MemberSignature Language="VB.NET" Value="InferTypedSchema" />
      <MemberSignature Language="C++ CLI" Value="InferTypedSchema" />
      <MemberSignature Language="F#" Value="InferTypedSchema = 6" Usage="System.Data.XmlReadMode.InferTypedSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="59526-125">Ignoruje schemat w tekście, wnioskuje schemat jednoznacznie z danych i ładuje dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59526-125">Ignores any inline schema, infers a strongly typed schema from the data, and loads the data.</span>
          </span>
          <span data-ttu-id="59526-126">Nie można wywnioskować typu danych, jest interpretowany jako danych ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59526-126">If the type cannot be inferred from the data, it is interpreted as string data.</span>
          </span>
          <span data-ttu-id="59526-127">Jeśli <see cref="T:System.Data.DataSet" /> już zawiera schemat, bieżący schemat jest rozszerzony, dodając nowe tabele lub przez dodawanie kolumn do istniejących tabel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59526-127">If the <see cref="T:System.Data.DataSet" /> already contains a schema, the current schema is extended, either by adding new tables or by adding columns to existing tables.</span>
          </span>
          <span data-ttu-id="59526-128">Jest zwracany wyjątek, jeśli wnioskowany tabela już istnieje, ale z inną przestrzeń nazw lub jeśli dowolnej kolumny wnioskowany konflikt z istniejących kolumn.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59526-128">An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ReadSchema">
      <MemberSignature Language="C#" Value="ReadSchema" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode ReadSchema = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.ReadSchema" />
      <MemberSignature Language="VB.NET" Value="ReadSchema" />
      <MemberSignature Language="C++ CLI" Value="ReadSchema" />
      <MemberSignature Language="F#" Value="ReadSchema = 1" Usage="System.Data.XmlReadMode.ReadSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="59526-129">Odczytuje wszystkie wbudowanego schematu i ładuje dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59526-129">Reads any inline schema and loads the data.</span>
          </span>
          <span data-ttu-id="59526-130">Jeśli <see cref="T:System.Data.DataSet" /> już zawiera schemat, nowe tabele mogą być dodane do schematu, ale jest zgłaszany wyjątek, jeśli wszystkie tabele w ten schemat już istnieje w <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59526-130">If the <see cref="T:System.Data.DataSet" /> already contains schema, new tables may be added to the schema, but an exception is thrown if any tables in the inline schema already exist in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>