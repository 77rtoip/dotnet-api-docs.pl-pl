<Type Name="IDbDataAdapter" FullName="System.Data.IDbDataAdapter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ef7fe0b84bec2618671b279ad6f9ff0996241062" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69367209" /></Metadata><TypeSignature Language="C#" Value="public interface IDbDataAdapter : System.Data.IDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDbDataAdapter implements class System.Data.IDataAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDbDataAdapter&#xA;Implements IDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDbDataAdapter : System::Data::IDataAdapter" />
  <TypeSignature Language="F#" Value="type IDbDataAdapter = interface&#xA;    interface IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataAdapter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Reprezentuje zestaw właściwości związanych z poleceniem, które są używane do wypełniania <see cref="T:System.Data.DataSet" /> i aktualizowania źródła danych, i jest implementowane przez .NET Framework dostawców danych, którzy uzyskują dostęp do relacyjnych baz danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.IDbDataAdapter> Interfejs dziedziczy<xref:System.Data.IDataAdapter> z interfejsu i umożliwia obiektowi utworzenie elementu DataAdapter zaprojektowanego do użycia z relacyjną bazą danych. Interfejs i, opcjonalnie, Klasa narzędzi, <xref:System.Data.Common.DbDataAdapter>, umożliwia dziedziczeniu klasy do implementowania klasy DataAdapter, która reprezentuje Most między źródłem danych a a <xref:System.Data.DataSet>. <xref:System.Data.IDbDataAdapter> Aby uzyskać więcej informacji na temat klas DataAdapter, zobacz zapełnianie [zestawu danych z elementu DataAdapter](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md). Aby uzyskać więcej informacji na temat implementowania dostawców danych .NET Framework, zobacz [implementowanie .NET Framework dostawca danych](https://docs.microsoft.com/previous-versions/dotnet/netframework-1.1/4ksaf9z5(v=vs.71)).  
  
 Aplikacja nie tworzy wystąpienia <xref:System.Data.IDbDataAdapter> interfejsu bezpośrednio, ale tworzy wystąpienie klasy, która dziedziczy <xref:System.Data.IDbDataAdapter> i <xref:System.Data.Common.DbDataAdapter>.  
  
 Klasy dziedziczące <xref:System.Data.IDbDataAdapter> muszą implementować dziedziczone elementy członkowskie i zwykle definiują dodatkowe elementy członkowskie do dodawania funkcji specyficznych dla dostawcy. Na przykład <xref:System.Data.IDbDataAdapter> Interfejs <xref:System.Data.IDbDataAdapter.SelectCommand%2A> definiuje właściwość, <xref:System.Data.Common.DbDataAdapter> <xref:System.Data.DataTable> a interfejs definiuje metodę, która przyjmuje jako parametr. <xref:System.Data.IDataAdapter.Fill%2A> Z kolei <xref:System.Data.OleDb.OleDbDataAdapter> Klasa <xref:System.Data.IDbDataAdapter.SelectCommand%2A> dziedziczy właściwość i <xref:System.Data.Common.DbDataAdapter.Fill%2A> metodę, <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> a także definiuje dwa dodatkowe przeciążenia metody, która przyjmuje obiekt zestawu rekordów ADO jako parametr.  
  
   
  
## Examples  
 Poniższy przykład używa klas pochodnych, <xref:System.Data.SqlClient.SqlCommand> <xref:System.Data.SqlClient.SqlDataAdapter> i <xref:System.Data.SqlClient.SqlConnection>, do wybierania rekordów ze źródła danych. Wypełnione <xref:System.Data.DataSet> pole jest następnie zwracane. W tym celu Metoda jest przenoszona jako zainicjowane <xref:System.Data.DataSet>, ciąg połączenia i ciąg zapytania, który jest instrukcją SELECT języka Transact-SQL.  
  
 [!code-csharp[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Aby podwyższyć poziom spójności między dostawcami danych .NET Framework, nazwij klasę dziedziczenia <paramref name="Prv" /> w formularzu <paramref name="Prv" /> DataAdapter gdzie jest jednolite Prefiks określony dla wszystkich klas w określonej przestrzeni nazw dostawcy danych .NET Framework. Na przykład, <paramref name="Sql" /> jest prefiksem <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> klasy w <see langword="System.Data.SqlClient" /> przestrzeni nazw.  
  
W przypadku dziedziczenia z <see cref="T:System.Data.IDbDataAdapter" /> interfejsu należy zaimplementować następujące konstruktory: 
 <list type="table"><listheader><term> Element 
 </term><description> Opis 
 </description></listheader><item><term> PrvDataAdapter() 
 </term><description> Inicjuje nowe wystąpienie klasy PrvDataAdapter.  
  
 </description></item><item><term> PrvDataAdapter (PrvCommand selectCommand) 
 </term><description> Inicjuje nowe wystąpienie klasy PrvDataAdapter z określoną instrukcją SELECT języka SQL.  
  
 </description></item><item><term> PrvDataAdapter (ciąg selectCommandText, ciąg selectConnectionString) 
 </term><description> Inicjuje nowe wystąpienie klasy PrvDataAdapter z instrukcją SELECT języka SQL i parametrami połączenia.  
  
 </description></item><item><term> PrvDataAdapter (ciąg selectCommandText, PrvConnection selectConnection) 
 </term><description> Inicjuje nowe wystąpienie klasy PrvDataAdapter z instrukcją SELECT języka SQL i obiektem PrvConnection.  
  
 </description></item></list></para></block>
  </Docs>
  <Members>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia instrukcję SQL do usuwania rekordów z zestawu danych.</summary>
        <value><see cref="T:System.Data.IDbCommand" /> Używane podczas<see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> usuwania rekordów ze źródła danych dla usuniętych wierszy w zestawie danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku <xref:System.Data.DataSet> <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> `SelectCommand` , jeśli ta właściwość nie jest ustawiona, a w elemencie są obecne informacje o kluczu podstawowym, mogą one być generowane automatycznie po ustawieniu właściwości dostawcy danych .NET Framework. <xref:System.Data.Common.DbDataAdapter.Update%2A> Następnie wszystkie dodatkowe polecenia, które nie są ustawione, są generowane przez CommandBuilder. Ta logika generowania wymaga, <xref:System.Data.DataSet>aby informacje o kolumnie klucza znajdowały się w. Aby uzyskać więcej informacji, zobacz [Generowanie poleceń z CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 Gdy <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> jest przypisany do wcześniej utworzonego <xref:System.Data.IDbCommand>elementu, <xref:System.Data.IDbCommand> nie jest sklonowany. Zachowuje odwołanie do wcześniej utworzonego <xref:System.Data.IDbCommand> obiektu. <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie klasy dziedziczonej <xref:System.Data.OleDb.OleDbDataAdapter> i <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> ustawia właściwości i <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> . Przyjęto założenie, że <xref:System.Data.OleDb.OleDbConnection> obiekt został już utworzony.  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia instrukcję SQL służącą do wstawiania nowych rekordów do źródła danych.</summary>
        <value><see cref="T:System.Data.IDbCommand" /> Używane podczas<see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> wstawiania rekordów w źródle danych dla nowych wierszy w zestawie danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku <xref:System.Data.DataSet> <xref:System.Data.IDbDataAdapter.InsertCommand%2A> `SelectCommand` , jeśli ta właściwość nie jest ustawiona, a w elemencie są obecne informacje o kluczu podstawowym, mogą one być generowane automatycznie po ustawieniu właściwości dostawcy danych .NET Framework. <xref:System.Data.Common.DbDataAdapter.Update%2A> Następnie wszystkie dodatkowe polecenia, które nie są ustawione, są generowane przez CommandBuilder. Ta logika generowania wymaga, <xref:System.Data.DataSet>aby informacje o kolumnie klucza znajdowały się w. Aby uzyskać więcej informacji, zobacz [Generowanie poleceń z CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 Gdy <xref:System.Data.IDbDataAdapter.InsertCommand%2A> jest przypisany do wcześniej utworzonego <xref:System.Data.IDbCommand>elementu, <xref:System.Data.IDbCommand> nie jest sklonowany. Zachowuje odwołanie do wcześniej utworzonego <xref:System.Data.IDbCommand> obiektu. <xref:System.Data.IDbDataAdapter.InsertCommand%2A>  
  
> [!NOTE]
>  Jeśli wykonanie tego polecenia zwraca wiersze, te wiersze mogą zostać dodane do w <xref:System.Data.DataSet> zależności od sposobu <xref:System.Data.IDbCommand.UpdatedRowSource%2A> ustawienia właściwości <xref:System.Data.IDbCommand> obiektu.  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie klasy dziedziczonej <xref:System.Data.OleDb.OleDbDataAdapter> i <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> ustawia właściwości i <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> . Przyjęto założenie, że <xref:System.Data.OleDb.OleDbConnection> obiekt został już utworzony.  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia instrukcję SQL służącą do wybierania rekordów w źródle danych.</summary>
        <value>Jest używany podczas <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> wybierania rekordów ze źródła danych do umieszczenia w zestawie danych. <see cref="T:System.Data.IDbCommand" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Data.IDbDataAdapter.SelectCommand%2A> jest przypisany do wcześniej utworzonego <xref:System.Data.IDbCommand>elementu, <xref:System.Data.IDbCommand> nie jest sklonowany. Zachowuje odwołanie do wcześniej utworzonego <xref:System.Data.IDbCommand> obiektu. <xref:System.Data.IDbDataAdapter.SelectCommand%2A>  
  
 Jeśli nie zwraca żadnych wierszy, żadne tabele nie są dodawane <xref:System.Data.DataSet>do i nie zostanie zgłoszony żaden wyjątek. <xref:System.Data.IDbDataAdapter.SelectCommand%2A>  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie klasy dziedziczonej <xref:System.Data.OleDb.OleDbDataAdapter> i <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> ustawia właściwości i <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> . Przyjęto założenie, że <xref:System.Data.OleDb.OleDbConnection> obiekt został już utworzony.  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia instrukcję SQL służącą do aktualizowania rekordów w źródle danych.</summary>
        <value><see cref="T:System.Data.IDbCommand" /> Używane podczas<see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> aktualizowania rekordów w źródle danych dla zmodyfikowanych wierszy w zestawie danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku <xref:System.Data.DataSet> <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> `SelectCommand` , jeśli ta właściwość nie jest ustawiona, a w elemencie są obecne informacje o kluczu podstawowym, mogą one być generowane automatycznie po ustawieniu właściwości dostawcy danych .NET Framework. <xref:System.Data.Common.DbDataAdapter.Update%2A> Następnie wszystkie dodatkowe polecenia, które nie są ustawione, są generowane przez CommandBuilder. Ta logika generowania wymaga, <xref:System.Data.DataSet>aby informacje o kolumnie klucza znajdowały się w. Aby uzyskać więcej informacji, zobacz [Generowanie poleceń z CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 Gdy <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> jest przypisany do wcześniej utworzonego <xref:System.Data.IDbCommand>elementu, <xref:System.Data.IDbCommand> nie jest sklonowany. Zachowuje odwołanie do wcześniej utworzonego <xref:System.Data.IDbCommand> obiektu. <xref:System.Data.IDbDataAdapter.UpdateCommand%2A>  
  
> [!NOTE]
>  Jeśli wykonanie tego polecenia zwróci wiersze, te wiersze są dodawane do <xref:System.Data.DataSet>.  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie klasy dziedziczonej <xref:System.Data.OleDb.OleDbDataAdapter> i <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> ustawia właściwości i <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> . Przyjęto założenie, że <xref:System.Data.OleDb.OleDbConnection> obiekt został już utworzony.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
