<Type Name="IDbDataAdapter" FullName="System.Data.IDbDataAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ad7ef39687c100899e7bccb842a442f2c82c114b" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37668545" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDbDataAdapter : System.Data.IDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDbDataAdapter implements class System.Data.IDataAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDbDataAdapter&#xA;Implements IDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDbDataAdapter : System::Data::IDataAdapter" />
  <TypeSignature Language="F#" Value="type IDbDataAdapter = interface&#xA;    interface IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataAdapter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="4fb95-101">Reprezentuje zestaw właściwości powiązane polecenia, które są używane do wypełnienia <see cref="T:System.Data.DataSet" /> zaktualizować źródło danych i jest implementowany przez dostawcy danych .NET Framework, uzyskujących dostęp do relacyjnych baz danych.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4fb95-101">Represents a set of command-related properties that are used to fill the <see cref="T:System.Data.DataSet" /> and update a data source, and is implemented by .NET Framework data providers that access relational databases.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fb95-102"><xref:System.Data.IDbDataAdapter> Interfejs dziedziczy z <xref:System.Data.IDataAdapter> interfejs i umożliwia obiekt do utworzenia elementu DataAdapter przeznaczony do użytku z relacyjnej bazy danych.</span><span class="sxs-lookup"><span data-stu-id="4fb95-102">The <xref:System.Data.IDbDataAdapter> interface inherits from the <xref:System.Data.IDataAdapter> interface and allows an object to create a DataAdapter designed for use with a relational database.</span></span> <span data-ttu-id="4fb95-103"><xref:System.Data.IDbDataAdapter> Interfejsu i, opcjonalnie, klasa utility <xref:System.Data.Common.DbDataAdapter>, Zezwalaj na klasie dziedziczącej zaimplementować klasę DataAdapter, co stanowi Most między źródłem danych i <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="4fb95-103">The <xref:System.Data.IDbDataAdapter> interface and, optionally, the utility class, <xref:System.Data.Common.DbDataAdapter>, allow an inheriting class to implement a DataAdapter class, which represents the bridge between a data source and a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="4fb95-104">Aby uzyskać więcej informacji na temat klasy elementu DataAdapter zobacz [wypełnianie zestawu danych z elementu DataAdapter](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md).</span><span class="sxs-lookup"><span data-stu-id="4fb95-104">For more information about DataAdapter classes, see [Populating a DataSet from a DataAdapter](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md).</span></span> <span data-ttu-id="4fb95-105">Aby uzyskać więcej informacji na temat implementowania dostawcy danych .NET Framework, zobacz [ &#91; \<topic://cpconimplementingnetdataprovider >&#93;](http://msdn.microsoft.com/library/a9fa1926-071b-4c6f-997d-a16bac633852).</span><span class="sxs-lookup"><span data-stu-id="4fb95-105">For more information about implementing .NET Framework data providers, see [&#91;\<topic://cpconimplementingnetdataprovider>&#93;](http://msdn.microsoft.com/library/a9fa1926-071b-4c6f-997d-a16bac633852).</span></span>  
  
 <span data-ttu-id="4fb95-106">Aplikacja nie tworzy wystąpienie <xref:System.Data.IDbDataAdapter> interfejsu bezpośrednio, ale tworzy wystąpienie klasy, która dziedziczy <xref:System.Data.IDbDataAdapter> i <xref:System.Data.Common.DbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="4fb95-106">An application does not create an instance of the <xref:System.Data.IDbDataAdapter> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDbDataAdapter> and <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="4fb95-107">Klasy, które dziedziczą <xref:System.Data.IDbDataAdapter> należy zaimplementować dziedziczone elementy członkowskie, a zwykle definiuje dodatkowe elementy członkowskie, aby dodać funkcje właściwe dla dostawcy.</span><span class="sxs-lookup"><span data-stu-id="4fb95-107">Classes that inherit <xref:System.Data.IDbDataAdapter> must implement the inherited members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="4fb95-108">Na przykład <xref:System.Data.IDbDataAdapter> interfejs definiuje <xref:System.Data.IDbDataAdapter.SelectCommand%2A> właściwości i <xref:System.Data.Common.DbDataAdapter> interfejs definiuje <xref:System.Data.IDataAdapter.Fill%2A> metody, która przyjmuje <xref:System.Data.DataTable> jako parametr.</span><span class="sxs-lookup"><span data-stu-id="4fb95-108">For example, the <xref:System.Data.IDbDataAdapter> interface defines the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property, and the <xref:System.Data.Common.DbDataAdapter> interface defines a <xref:System.Data.IDataAdapter.Fill%2A> method that takes a <xref:System.Data.DataTable> as a parameter.</span></span> <span data-ttu-id="4fb95-109">Z kolei <xref:System.Data.OleDb.OleDbDataAdapter> klasa dziedziczy <xref:System.Data.IDbDataAdapter.SelectCommand%2A> właściwości i <xref:System.Data.Common.DbDataAdapter.Fill%2A> metody, a także określa dwa dodatkowe przeciążenia metody <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> metody, które umożliwiają wykorzystywanie zestawu rekordów ADO obiekt jako parametr.</span><span class="sxs-lookup"><span data-stu-id="4fb95-109">In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property and the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method, and also defines two additional overloads of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method that take an ADO Recordset object as a parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fb95-110">W poniższym przykładzie użyto klasy pochodne <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter> i <xref:System.Data.SqlClient.SqlConnection>, aby wybrać rekordy ze źródła danych.</span><span class="sxs-lookup"><span data-stu-id="4fb95-110">The following example uses the derived classes, <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter> and <xref:System.Data.SqlClient.SqlConnection>, to select records from a data source.</span></span> <span data-ttu-id="4fb95-111">Wypełniony <xref:System.Data.DataSet> jest zwracana.</span><span class="sxs-lookup"><span data-stu-id="4fb95-111">The filled <xref:System.Data.DataSet> is then returned.</span></span> <span data-ttu-id="4fb95-112">Aby to osiągnąć, metoda jest przekazywana zainicjowane <xref:System.Data.DataSet>, ciąg połączenia i ciągu zapytania, który jest instrukcją języka Transact-SQL ZAZNACZYĆ.</span><span class="sxs-lookup"><span data-stu-id="4fb95-112">To accomplish this, the method is passed an initialized <xref:System.Data.DataSet>, a connection string, and a query string that is a Transact-SQL SELECT statement.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="4fb95-113">
        <para>Podwyższenie poziomu spójności między dostawcy danych .NET Framework, nazwa klasy dziedziczącej, w postaci <paramref name="Prv" /> DataAdapter gdzie <paramref name="Prv" /> jest prefiksem jednolite, biorąc pod uwagę wszystkie klasy w określonej przestrzeni nazw dostawcy danych .NET Framework. Na przykład <paramref name="Sql" /> to prefiks wartości <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> klasy w <see langword="System.Data.SqlClient" /> przestrzeni nazw.  Przy dziedziczeniu z <see cref="T:System.Data.IDbDataAdapter" /> interfejsu, należy zaimplementować następujących konstruktorów: <list type="table"><listheader><term> elementu </term><description> opis </description></listheader><item><term> PrvDataAdapter() </term><description> inicjuje nowe wystąpienie klasy PrvDataAdapter.  </description></item><item><term> PrvDataAdapter (PrvCommand selectCommand) </term><description> inicjuje nowe wystąpienie klasy PrvDataAdapter instrukcję SQL SELECT.  </description></item><item><term> PrvDataAdapter (selectCommandText ciąg, ciąg selectConnectionString) </term><description> inicjuje nowe wystąpienie klasy PrvDataAdapter instrukcję SQL SELECT i parametry połączenia.  </description></item><item><term> PrvDataAdapter (selectCommandText ciągu, PrvConnection selectConnection) </term><description> inicjuje nowe wystąpienie klasy PrvDataAdapter instrukcję SQL SELECT i PrvConnection obiektu.  </description></item></list></para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="4fb95-113">
          <para>To promote consistency among .NET Framework data providers, name the inheriting class in the form <paramref name="Prv" /> DataAdapter where <paramref name="Prv" /> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace. For example, <paramref name="Sql" /> is the prefix of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class in the <see langword="System.Data.SqlClient" /> namespace.  When you inherit from the <see cref="T:System.Data.IDbDataAdapter" /> interface, you should implement the following constructors:  <list type="table"><listheader><term> Item  </term><description> Description  </description></listheader><item><term> PrvDataAdapter()  </term><description> Initializes a new instance of the PrvDataAdapter class.  </description></item><item><term> PrvDataAdapter(PrvCommand selectCommand)  </term><description> Initializes a new instance of the PrvDataAdapter class with the specified SQL SELECT statement.  </description></item><item><term> PrvDataAdapter(string selectCommandText, string selectConnectionString)  </term><description> Initializes a new instance of the PrvDataAdapter class with an SQL SELECT statement and a connection string.  </description></item><item><term> PrvDataAdapter(string selectCommandText, PrvConnection selectConnection)  </term><description> Initializes a new instance of the PrvDataAdapter class with an SQL SELECT statement and a PrvConnection object.  </description></item></list></para>
        </span>
      </span>
    </block>
  </Docs>
  <Members>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4fb95-114">Pobiera lub ustawia instrukcję SQL do usuwania rekordów z zestawu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fb95-114">Gets or sets an SQL statement for deleting records from the data set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4fb95-115">
            <see cref="T:System.Data.IDbCommand" /> Używane podczas <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> do usuwania rekordów w źródle danych, która ma być usunięte wiersze w zestawie danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fb95-115">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fb95-116">Podczas <xref:System.Data.Common.DbDataAdapter.Update%2A>, jeśli ta właściwość nie jest ustawiona i informacje o kluczu podstawowym znajduje się w <xref:System.Data.DataSet>, <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> mogą być generowane automatycznie, jeśli ustawisz `SelectCommand` właściwości dostawcy danych .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="4fb95-116">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="4fb95-117">Następnie dowolne dodatkowe polecenia, które nie należy ustawiać są generowane przez CommandBuilder.</span><span class="sxs-lookup"><span data-stu-id="4fb95-117">Then, any additional commands that you do not set are generated by the CommandBuilder.</span></span> <span data-ttu-id="4fb95-118">Tę logikę generowania wymaga informacji o kolumnie klucza znajdować się w <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="4fb95-118">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="4fb95-119">Aby uzyskać więcej informacji, zobacz [Generowanie poleceń za pomocą CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="4fb95-119">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="4fb95-120">Gdy <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> jest przypisany do wcześniej utworzonego <xref:System.Data.IDbCommand>, <xref:System.Data.IDbCommand> nie są klonowane.</span><span class="sxs-lookup"><span data-stu-id="4fb95-120">When <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="4fb95-121"><xref:System.Data.IDbDataAdapter.DeleteCommand%2A> Obsługuje odwołania do utworzonej wcześniej <xref:System.Data.IDbCommand> obiektu.</span><span class="sxs-lookup"><span data-stu-id="4fb95-121">The <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fb95-122">Poniższy przykład tworzy wystąpienie dziedziczonego <xref:System.Data.OleDb.OleDbDataAdapter> klasy i zestawy <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> i <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="4fb95-122">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> properties.</span></span> <span data-ttu-id="4fb95-123">Przyjęto założenie, że utworzono już <xref:System.Data.OleDb.OleDbConnection> obiektu.</span><span class="sxs-lookup"><span data-stu-id="4fb95-123">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4fb95-124">Pobiera lub ustawia instrukcji SQL umożliwia wstawianie nowych rekordów do źródła danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fb95-124">Gets or sets an SQL statement used to insert new records into the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4fb95-125">
            <see cref="T:System.Data.IDbCommand" /> Używane podczas <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> do wstawiania rekordów do źródła danych dla nowych wierszy w zestawie danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fb95-125">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fb95-126">Podczas <xref:System.Data.Common.DbDataAdapter.Update%2A>, jeśli ta właściwość nie jest ustawiona i informacje o kluczu podstawowym znajduje się w <xref:System.Data.DataSet>, <xref:System.Data.IDbDataAdapter.InsertCommand%2A> mogą być generowane automatycznie, jeśli ustawisz `SelectCommand` właściwości dostawcy danych .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="4fb95-126">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.InsertCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="4fb95-127">Następnie dowolne dodatkowe polecenia, które nie należy ustawiać są generowane przez CommandBuilder.</span><span class="sxs-lookup"><span data-stu-id="4fb95-127">Then, any additional commands that you do not set are generated by the CommandBuilder.</span></span> <span data-ttu-id="4fb95-128">Tę logikę generowania wymaga informacji o kolumnie klucza znajdować się w <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="4fb95-128">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="4fb95-129">Aby uzyskać więcej informacji, zobacz [Generowanie poleceń za pomocą CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="4fb95-129">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="4fb95-130">Gdy <xref:System.Data.IDbDataAdapter.InsertCommand%2A> jest przypisany do wcześniej utworzonego <xref:System.Data.IDbCommand>, <xref:System.Data.IDbCommand> nie są klonowane.</span><span class="sxs-lookup"><span data-stu-id="4fb95-130">When <xref:System.Data.IDbDataAdapter.InsertCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="4fb95-131"><xref:System.Data.IDbDataAdapter.InsertCommand%2A> Obsługuje odwołania do utworzonej wcześniej <xref:System.Data.IDbCommand> obiektu.</span><span class="sxs-lookup"><span data-stu-id="4fb95-131">The <xref:System.Data.IDbDataAdapter.InsertCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4fb95-132">Jeśli wykonanie tego polecenia zwraca wiersze, te wiersze mogą być dodawane do <xref:System.Data.DataSet> w zależności od tego, jak ustawić <xref:System.Data.IDbCommand.UpdatedRowSource%2A> właściwość <xref:System.Data.IDbCommand> obiektu.</span><span class="sxs-lookup"><span data-stu-id="4fb95-132">If execution of this command returns rows, these rows may be added to the <xref:System.Data.DataSet> depending on how you set the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property of the <xref:System.Data.IDbCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fb95-133">Poniższy przykład tworzy wystąpienie dziedziczonego <xref:System.Data.OleDb.OleDbDataAdapter> klasy i zestawy <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> i <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="4fb95-133">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties.</span></span> <span data-ttu-id="4fb95-134">Przyjęto założenie, że utworzono już <xref:System.Data.OleDb.OleDbConnection> obiektu.</span><span class="sxs-lookup"><span data-stu-id="4fb95-134">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4fb95-135">Pobiera lub ustawia instrukcji SQL używany do wybierania rekordów w źródle danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fb95-135">Gets or sets an SQL statement used to select records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4fb95-136">
            <see cref="T:System.Data.IDbCommand" /> Używany podczas <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> do wybierania rekordów ze źródła danych do umieszczenia w zestawie danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fb95-136">An <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fb95-137">Gdy <xref:System.Data.IDbDataAdapter.SelectCommand%2A> jest przypisany do wcześniej utworzonego <xref:System.Data.IDbCommand>, <xref:System.Data.IDbCommand> nie są klonowane.</span><span class="sxs-lookup"><span data-stu-id="4fb95-137">When <xref:System.Data.IDbDataAdapter.SelectCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="4fb95-138"><xref:System.Data.IDbDataAdapter.SelectCommand%2A> Obsługuje odwołania do utworzonej wcześniej <xref:System.Data.IDbCommand> obiektu.</span><span class="sxs-lookup"><span data-stu-id="4fb95-138">The <xref:System.Data.IDbDataAdapter.SelectCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
 <span data-ttu-id="4fb95-139">Jeśli <xref:System.Data.IDbDataAdapter.SelectCommand%2A> nie zwraca wszystkie wiersze tabel nie są dodawane do <xref:System.Data.DataSet>, i nie jest zgłaszany żaden wyjątek.</span><span class="sxs-lookup"><span data-stu-id="4fb95-139">If the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fb95-140">Poniższy przykład tworzy wystąpienie dziedziczonego <xref:System.Data.OleDb.OleDbDataAdapter> klasy i zestawy <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> i <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="4fb95-140">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties.</span></span> <span data-ttu-id="4fb95-141">Przyjęto założenie, że utworzono już <xref:System.Data.OleDb.OleDbConnection> obiektu.</span><span class="sxs-lookup"><span data-stu-id="4fb95-141">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4fb95-142">Pobiera lub ustawia instrukcji SQL używane do aktualizowania rekordów w źródle danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fb95-142">Gets or sets an SQL statement used to update records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4fb95-143">
            <see cref="T:System.Data.IDbCommand" /> Używane podczas <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> do aktualizowania rekordów w źródle danych, która ma być zmodyfikowane wiersze w zestawie danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4fb95-143">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fb95-144">Podczas <xref:System.Data.Common.DbDataAdapter.Update%2A>, jeśli ta właściwość nie jest ustawiona i informacje o kluczu podstawowym znajduje się w <xref:System.Data.DataSet>, <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> mogą być generowane automatycznie, jeśli ustawisz `SelectCommand` właściwości dostawcy danych .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="4fb95-144">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="4fb95-145">Następnie dowolne dodatkowe polecenia, które nie należy ustawiać są generowane przez CommandBuilder.</span><span class="sxs-lookup"><span data-stu-id="4fb95-145">Then, any additional commands that you do not set are generated by the CommandBuilder.</span></span> <span data-ttu-id="4fb95-146">Tę logikę generowania wymaga informacji o kolumnie klucza znajdować się w <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="4fb95-146">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="4fb95-147">Aby uzyskać więcej informacji, zobacz [Generowanie poleceń za pomocą CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="4fb95-147">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="4fb95-148">Gdy <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> jest przypisany do wcześniej utworzonego <xref:System.Data.IDbCommand>, <xref:System.Data.IDbCommand> nie są klonowane.</span><span class="sxs-lookup"><span data-stu-id="4fb95-148">When <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="4fb95-149"><xref:System.Data.IDbDataAdapter.UpdateCommand%2A> Obsługuje odwołania do utworzonej wcześniej <xref:System.Data.IDbCommand> obiektu.</span><span class="sxs-lookup"><span data-stu-id="4fb95-149">The <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4fb95-150">Jeśli wykonanie tego polecenia zwraca wiersze, te wiersze są dodawane do <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="4fb95-150">If execution of this command returns rows, these rows are added to the <xref:System.Data.DataSet>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fb95-151">Poniższy przykład tworzy wystąpienie dziedziczonego <xref:System.Data.OleDb.OleDbDataAdapter> klasy i zestawy <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> i <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="4fb95-151">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> properties.</span></span> <span data-ttu-id="4fb95-152">Przyjęto założenie, że utworzono już <xref:System.Data.OleDb.OleDbConnection> obiektu.</span><span class="sxs-lookup"><span data-stu-id="4fb95-152">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>