<Type Name="IDbDataAdapter" FullName="System.Data.IDbDataAdapter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="934cba1ef38b5e43a64f3175374561b74be885e1" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51924575" /></Metadata><TypeSignature Language="C#" Value="public interface IDbDataAdapter : System.Data.IDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDbDataAdapter implements class System.Data.IDataAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDbDataAdapter&#xA;Implements IDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDbDataAdapter : System::Data::IDataAdapter" />
  <TypeSignature Language="F#" Value="type IDbDataAdapter = interface&#xA;    interface IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataAdapter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Reprezentuje zestaw właściwości powiązane polecenia, które są używane do wypełnienia <see cref="T:System.Data.DataSet" /> zaktualizować źródło danych i jest implementowany przez dostawcy danych .NET Framework, uzyskujących dostęp do relacyjnych baz danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.IDbDataAdapter> Interfejs dziedziczy z <xref:System.Data.IDataAdapter> interfejs i umożliwia obiekt do utworzenia elementu DataAdapter przeznaczony do użytku z relacyjnej bazy danych. <xref:System.Data.IDbDataAdapter> Interfejsu i, opcjonalnie, klasa utility <xref:System.Data.Common.DbDataAdapter>, Zezwalaj na klasie dziedziczącej zaimplementować klasę DataAdapter, co stanowi Most między źródłem danych i <xref:System.Data.DataSet>. Aby uzyskać więcej informacji na temat klasy elementu DataAdapter zobacz [wypełnianie zestawu danych z elementu DataAdapter](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md). Aby uzyskać więcej informacji na temat implementowania dostawcy danych .NET Framework, zobacz [ &#91; \<topic://cpconimplementingnetdataprovider >&#93;](https://msdn.microsoft.com/library/a9fa1926-071b-4c6f-997d-a16bac633852).  
  
 Aplikacja nie tworzy wystąpienie <xref:System.Data.IDbDataAdapter> interfejsu bezpośrednio, ale tworzy wystąpienie klasy, która dziedziczy <xref:System.Data.IDbDataAdapter> i <xref:System.Data.Common.DbDataAdapter>.  
  
 Klasy, które dziedziczą <xref:System.Data.IDbDataAdapter> należy zaimplementować dziedziczone elementy członkowskie, a zwykle definiuje dodatkowe elementy członkowskie, aby dodać funkcje właściwe dla dostawcy. Na przykład <xref:System.Data.IDbDataAdapter> interfejs definiuje <xref:System.Data.IDbDataAdapter.SelectCommand%2A> właściwości i <xref:System.Data.Common.DbDataAdapter> interfejs definiuje <xref:System.Data.IDataAdapter.Fill%2A> metody, która przyjmuje <xref:System.Data.DataTable> jako parametr. Z kolei <xref:System.Data.OleDb.OleDbDataAdapter> klasa dziedziczy <xref:System.Data.IDbDataAdapter.SelectCommand%2A> właściwości i <xref:System.Data.Common.DbDataAdapter.Fill%2A> metody, a także określa dwa dodatkowe przeciążenia metody <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> metody, które umożliwiają wykorzystywanie zestawu rekordów ADO obiekt jako parametr.  
  
   
  
## Examples  
 W poniższym przykładzie użyto klasy pochodne <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter> i <xref:System.Data.SqlClient.SqlConnection>, aby wybrać rekordy ze źródła danych. Wypełniony <xref:System.Data.DataSet> jest zwracana. Aby to osiągnąć, metoda jest przekazywana zainicjowane <xref:System.Data.DataSet>, ciąg połączenia i ciągu zapytania, który jest instrukcją języka Transact-SQL ZAZNACZYĆ.  
  
 [!code-csharp[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Podwyższenie poziomu spójności między dostawcy danych .NET Framework, nazwa klasy dziedziczącej, w postaci <paramref name="Prv" /> DataAdapter gdzie <paramref name="Prv" /> jest prefiksem jednolite, biorąc pod uwagę wszystkie klasy w określonej przestrzeni nazw dostawcy danych .NET Framework. Na przykład <paramref name="Sql" /> to prefiks wartości <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> klasy w <see langword="System.Data.SqlClient" /> przestrzeni nazw.  
  
Przy dziedziczeniu z <see cref="T:System.Data.IDbDataAdapter" /> interfejsu, należy zaimplementować następujących konstruktorów: 
 <list type="table"><listheader><term> Element 
 </term><description> Opis 
 </description></listheader><item><term> PrvDataAdapter() 
 </term><description> Inicjuje nowe wystąpienie klasy PrvDataAdapter.  
  
 </description></item><item><term> PrvDataAdapter (PrvCommand selectCommand) 
 </term><description> Inicjuje nowe wystąpienie klasy PrvDataAdapter instrukcję SQL SELECT.  
  
 </description></item><item><term> PrvDataAdapter (selectCommandText ciąg, ciąg selectConnectionString) 
 </term><description> Inicjuje nowe wystąpienie klasy PrvDataAdapter instrukcję SQL SELECT i parametry połączenia.  
  
 </description></item><item><term> PrvDataAdapter (selectCommandText ciągu, PrvConnection selectConnection) 
 </term><description> Inicjuje nowe wystąpienie klasy PrvDataAdapter instrukcję SQL SELECT i PrvConnection obiektu.  
  
 </description></item></list></para></block>
  </Docs>
  <Members>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia instrukcję SQL do usuwania rekordów z zestawu danych.</summary>
        <value><see cref="T:System.Data.IDbCommand" /> Używane podczas <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> do usuwania rekordów w źródle danych, która ma być usunięte wiersze w zestawie danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas <xref:System.Data.Common.DbDataAdapter.Update%2A>, jeśli ta właściwość nie jest ustawiona i informacje o kluczu podstawowym znajduje się w <xref:System.Data.DataSet>, <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> mogą być generowane automatycznie, jeśli ustawisz `SelectCommand` właściwości dostawcy danych .NET Framework. Następnie dowolne dodatkowe polecenia, które nie należy ustawiać są generowane przez CommandBuilder. Tę logikę generowania wymaga informacji o kolumnie klucza znajdować się w <xref:System.Data.DataSet>. Aby uzyskać więcej informacji, zobacz [Generowanie poleceń za pomocą CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 Gdy <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> jest przypisany do wcześniej utworzonego <xref:System.Data.IDbCommand>, <xref:System.Data.IDbCommand> nie są klonowane. <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> Obsługuje odwołania do utworzonej wcześniej <xref:System.Data.IDbCommand> obiektu.  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie dziedziczonego <xref:System.Data.OleDb.OleDbDataAdapter> klasy i zestawy <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> i <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> właściwości. Przyjęto założenie, że utworzono już <xref:System.Data.OleDb.OleDbConnection> obiektu.  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia instrukcji SQL umożliwia wstawianie nowych rekordów do źródła danych.</summary>
        <value><see cref="T:System.Data.IDbCommand" /> Używane podczas <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> do wstawiania rekordów do źródła danych dla nowych wierszy w zestawie danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas <xref:System.Data.Common.DbDataAdapter.Update%2A>, jeśli ta właściwość nie jest ustawiona i informacje o kluczu podstawowym znajduje się w <xref:System.Data.DataSet>, <xref:System.Data.IDbDataAdapter.InsertCommand%2A> mogą być generowane automatycznie, jeśli ustawisz `SelectCommand` właściwości dostawcy danych .NET Framework. Następnie dowolne dodatkowe polecenia, które nie należy ustawiać są generowane przez CommandBuilder. Tę logikę generowania wymaga informacji o kolumnie klucza znajdować się w <xref:System.Data.DataSet>. Aby uzyskać więcej informacji, zobacz [Generowanie poleceń za pomocą CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 Gdy <xref:System.Data.IDbDataAdapter.InsertCommand%2A> jest przypisany do wcześniej utworzonego <xref:System.Data.IDbCommand>, <xref:System.Data.IDbCommand> nie są klonowane. <xref:System.Data.IDbDataAdapter.InsertCommand%2A> Obsługuje odwołania do utworzonej wcześniej <xref:System.Data.IDbCommand> obiektu.  
  
> [!NOTE]
>  Jeśli wykonanie tego polecenia zwraca wiersze, te wiersze mogą być dodawane do <xref:System.Data.DataSet> w zależności od tego, jak ustawić <xref:System.Data.IDbCommand.UpdatedRowSource%2A> właściwość <xref:System.Data.IDbCommand> obiektu.  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie dziedziczonego <xref:System.Data.OleDb.OleDbDataAdapter> klasy i zestawy <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> i <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> właściwości. Przyjęto założenie, że utworzono już <xref:System.Data.OleDb.OleDbConnection> obiektu.  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia instrukcji SQL używany do wybierania rekordów w źródle danych.</summary>
        <value><see cref="T:System.Data.IDbCommand" /> Używany podczas <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> do wybierania rekordów ze źródła danych do umieszczenia w zestawie danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Data.IDbDataAdapter.SelectCommand%2A> jest przypisany do wcześniej utworzonego <xref:System.Data.IDbCommand>, <xref:System.Data.IDbCommand> nie są klonowane. <xref:System.Data.IDbDataAdapter.SelectCommand%2A> Obsługuje odwołania do utworzonej wcześniej <xref:System.Data.IDbCommand> obiektu.  
  
 Jeśli <xref:System.Data.IDbDataAdapter.SelectCommand%2A> nie zwraca wszystkie wiersze tabel nie są dodawane do <xref:System.Data.DataSet>, i nie jest zgłaszany żaden wyjątek.  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie dziedziczonego <xref:System.Data.OleDb.OleDbDataAdapter> klasy i zestawy <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> i <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> właściwości. Przyjęto założenie, że utworzono już <xref:System.Data.OleDb.OleDbConnection> obiektu.  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia instrukcji SQL używane do aktualizowania rekordów w źródle danych.</summary>
        <value><see cref="T:System.Data.IDbCommand" /> Używane podczas <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> do aktualizowania rekordów w źródle danych, która ma być zmodyfikowane wiersze w zestawie danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas <xref:System.Data.Common.DbDataAdapter.Update%2A>, jeśli ta właściwość nie jest ustawiona i informacje o kluczu podstawowym znajduje się w <xref:System.Data.DataSet>, <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> mogą być generowane automatycznie, jeśli ustawisz `SelectCommand` właściwości dostawcy danych .NET Framework. Następnie dowolne dodatkowe polecenia, które nie należy ustawiać są generowane przez CommandBuilder. Tę logikę generowania wymaga informacji o kolumnie klucza znajdować się w <xref:System.Data.DataSet>. Aby uzyskać więcej informacji, zobacz [Generowanie poleceń za pomocą CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 Gdy <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> jest przypisany do wcześniej utworzonego <xref:System.Data.IDbCommand>, <xref:System.Data.IDbCommand> nie są klonowane. <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> Obsługuje odwołania do utworzonej wcześniej <xref:System.Data.IDbCommand> obiektu.  
  
> [!NOTE]
>  Jeśli wykonanie tego polecenia zwraca wiersze, te wiersze są dodawane do <xref:System.Data.DataSet>.  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie dziedziczonego <xref:System.Data.OleDb.OleDbDataAdapter> klasy i zestawy <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> i <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> właściwości. Przyjęto założenie, że utworzono już <xref:System.Data.OleDb.OleDbConnection> obiektu.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>