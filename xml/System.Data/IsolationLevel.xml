<Type Name="IsolationLevel" FullName="System.Data.IsolationLevel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c338d1a30e31915ae70914694b2d70ff4b6d1fe0" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37668480" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum IsolationLevel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed IsolationLevel extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.IsolationLevel" />
  <TypeSignature Language="VB.NET" Value="Public Enum IsolationLevel" />
  <TypeSignature Language="C++ CLI" Value="public enum class IsolationLevel" />
  <TypeSignature Language="F#" Value="type IsolationLevel = " />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Określa zachowanie blokowania transakcji dla połączenia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.IsolationLevel> Wartości są używane przez dostawcę danych .NET Framework podczas wykonywania transakcji.  
  
 <xref:System.Data.IsolationLevel> Będą nadal obowiązywać do momentu jawnego zmieniony, ale można ją zmienić w dowolnym momencie. Nowa wartość jest używana w czasie wykonywania, nie czas analizy. Jeśli zmianie podczas wykonywania transakcji, oczekiwane zachowanie serwera stosuje się nowy poziom blokady do instrukcji wszystkie pozostałe.  
  
   
  
## Examples  
 Ta aplikacja demonstruje sposób skorzystania <xref:System.Data.IsolationLevel> w <xref:System.Data.Common.DbTransaction>. Przykład zademonstruje, która z poniższych zachowań są dozwolone w izolacji różne poziomy:  
  
-   Odczytów.  
  
-   Odczytuje bez powtarzalne.  
  
-   Fantomów.  
  
 Ta aplikacja będzie wykonywany w następujące poziomy izolacji:  
  
-   ReadUncommitted  
  
-   ReadCommitted  
  
-   Wskazówki RepeatableRead  
  
-   Możliwy do serializacji  
  
-   Migawka  
  
 Klasa PhantomReadThreads pokazuje umożliwia zachowanie fantom odczytu, jeśli określonej transakcji. Jeśli transakcja umożliwia zachowanie, wątki będą działać w następującej kolejności:  
  
-   W pierwszym wątku należy wybrać products(All).  
  
-   W drugim wątku należy wstawić nowy produkt.  
  
-   Zatwierdzenia transakcji w drugim wątku.  
  
-   Wybierz produkty, ponownie.  
  
-   Zatwierdzenia transakcji w pierwszym wątku.  
  
 Jeśli transakcja pozwala na zachowanie, dwie operacje wybierz otrzyma różne wyniki.  
  
 Klasa NonrepeatableReadThreads pokazuje umożliwia zachowanie zanieczyszczonych odczytu, jeśli określonej transakcji. Jeśli transakcja umożliwia zachowanie, wątki będą działać w następującej kolejności:  
  
-   W pierwszym wątku należy wybrać product(ProductId=1).  
  
-   W drugim wątku należy zaktualizować value(ProductId=1) ilość.  
  
-   Zatwierdzenia transakcji w drugim wątku.  
  
-   Wybierz ponownie produkt.  
  
-   Zatwierdzenia transakcji w pierwszym wątku.  
  
 Jeśli transakcja pozwala na zachowanie, dwie operacje wybierz otrzyma różne wyniki.  
  
 Klasa ExchangeValuesThreads pokazano różnicę między transakcji Serializable i migawki. Możliwy do serializacji transakcji wątków będzie działać w następującej kolejności:  
  
-   W pierwszym wątku należy pobrać cen product(ProductId=2) i magazynu w zmiennej.  
  
-   W pierwszym wątku należy zaktualizować cena product(ProductId=1) z ceną product(ProductId=2).  
  
-   Zatwierdzenia transakcji w pierwszym wątku.  
  
-   W drugim wątku należy pobrać cen product(ProductId=1) i magazynu w zmiennej.  
  
-   W drugim wątku należy zaktualizować cena product(ProductId=2) z ceną product(ProductId=1).  
  
-   Zatwierdzenia transakcji w drugim wątku.  
  
 Teraz wartości ceny (ProductId = 1 i ProductId = 2) są jako takie same jak ceny oryginalnego Product(ProductId=2).  
  
 Dla transakcji migawki wątków będzie działać w następującej kolejności:  
  
-   W pierwszym wątku uzyskać ceny product(ProductId=2) i magazynu w zmiennej;  
  
-   W pierwszym wątku należy zaktualizować cena product(ProductId=1) z ceną product(ProductId=2).  
  
-   W drugim wątku uzyskiwanie cena product(ProductId=1) migawki i przechowywać w zmiennej.  
  
-   W drugim wątku należy zaktualizować cena product(ProductId=2) z ceną product(ProductId=1).  
  
-   Zatwierdzenia transakcji w drugim wątku.  
  
-   Zatwierdzenia transakcji w pierwszym wątku.  
  
 Teraz wymiany ceny produktów (ProductId = 1 i ProductId = 2).  
  
 Klasa DirtyReadThreads pokazuje umożliwia zachowanie odczytu zanieczyszczony, jeśli określonej transakcji. Jeśli transakcja umożliwia zachowanie, wątki będą działać w następującej kolejności:  
  
-   W pierwszym wątku należy rozpocząć transakcji i Dodaj value(ProductId=1) ilość.  
  
-   W drugim wątku odczytać wartości ilość, a następnie ponownie Dodaj wartość.  
  
-   Zatwierdzenia transakcji w drugim wątku.  
  
-   Wycofaj tę transakcję w pierwszym wątku.  
  
 Jeśli transakcja umożliwia zachowanie, ilości wartości zostaną dodane dwa razy.  
  
 Projekty języka C# i Visual Basic z tego przykładu kodu można znaleźć na [Developer Code Samples](https://code.msdn.microsoft.com/site/search?query=How%20to%20use%20IsolationLevel%20Enumeration%20in%20DbTransaction&f%5B0%5D.Value=How%20to%20use%20IsolationLevel%20Enumeration%20in%20DbTransaction&f%5B0%5D.Type=SearchText&ac=4).  
  
 [!code-csharp[system_data_IsolationLevel#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/system_data_isolationlevel/cs/source.cs#1)]
 [!code-vb[system_data_IsolationLevel#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/system_data_isolationlevel/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Chaos">
      <MemberSignature Language="C#" Value="Chaos" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel Chaos = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.Chaos" />
      <MemberSignature Language="VB.NET" Value="Chaos" />
      <MemberSignature Language="C++ CLI" Value="Chaos" />
      <MemberSignature Language="F#" Value="Chaos = 16" Usage="System.Data.IsolationLevel.Chaos" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>Nie można zastąpić oczekujące zmiany z bardziej szczegółowymi izolowanych transakcji.</summary>
      </Docs>
    </Member>
    <Member MemberName="ReadCommitted">
      <MemberSignature Language="C#" Value="ReadCommitted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel ReadCommitted = int32(4096)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.ReadCommitted" />
      <MemberSignature Language="VB.NET" Value="ReadCommitted" />
      <MemberSignature Language="C++ CLI" Value="ReadCommitted" />
      <MemberSignature Language="F#" Value="ReadCommitted = 4096" Usage="System.Data.IsolationLevel.ReadCommitted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary>Udostępnione blokady są przechowywane dane są odczytywane w celu uniknięcia odczytów, ale dane można zmienić przed zakończeniem transakcji — powtarzalnego odczytu lub fantomu danych.</summary>
      </Docs>
    </Member>
    <Member MemberName="ReadUncommitted">
      <MemberSignature Language="C#" Value="ReadUncommitted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel ReadUncommitted = int32(256)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.ReadUncommitted" />
      <MemberSignature Language="VB.NET" Value="ReadUncommitted" />
      <MemberSignature Language="C++ CLI" Value="ReadUncommitted" />
      <MemberSignature Language="F#" Value="ReadUncommitted = 256" Usage="System.Data.IsolationLevel.ReadUncommitted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary>Jest to możliwe, co oznacza, że blokady udostępniony, nie są wydawane i blokady na wyłączność nie są uznawane jest zanieczyszczony odczytu.</summary>
      </Docs>
    </Member>
    <Member MemberName="RepeatableRead">
      <MemberSignature Language="C#" Value="RepeatableRead" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel RepeatableRead = int32(65536)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.RepeatableRead" />
      <MemberSignature Language="VB.NET" Value="RepeatableRead" />
      <MemberSignature Language="C++ CLI" Value="RepeatableRead" />
      <MemberSignature Language="F#" Value="RepeatableRead = 65536" Usage="System.Data.IsolationLevel.RepeatableRead" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary>Blokady są umieszczane na wszystkie dane, które jest używane w zapytaniu, uniemożliwiając innym użytkownikom aktualizowanie danych. Zapobiega-powtarzalnego odczytu, ale fantom wiersze są nadal możliwe.</summary>
      </Docs>
    </Member>
    <Member MemberName="Serializable">
      <MemberSignature Language="C#" Value="Serializable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel Serializable = int32(1048576)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.Serializable" />
      <MemberSignature Language="VB.NET" Value="Serializable" />
      <MemberSignature Language="C++ CLI" Value="Serializable" />
      <MemberSignature Language="F#" Value="Serializable = 1048576" Usage="System.Data.IsolationLevel.Serializable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>1048576</MemberValue>
      <Docs>
        <summary>Zablokuj zakres znajduje się na <see cref="T:System.Data.DataSet" />, co uniemożliwia innym użytkownikom aktualizowania i wstawiania wierszy do zestawu danych, do czasu ukończenia transakcji.</summary>
      </Docs>
    </Member>
    <Member MemberName="Snapshot">
      <MemberSignature Language="C#" Value="Snapshot" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel Snapshot = int32(16777216)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.Snapshot" />
      <MemberSignature Language="VB.NET" Value="Snapshot" />
      <MemberSignature Language="C++ CLI" Value="Snapshot" />
      <MemberSignature Language="F#" Value="Snapshot = 16777216" Usage="System.Data.IsolationLevel.Snapshot" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>16777216</MemberValue>
      <Docs>
        <summary>Zmniejsza, blokowanie, przechowując wersję danych, który może być odczytany jednej aplikacji, podczas gdy inny modyfikuje te same dane. Wskazuje, że z jednej transakcji nie widzisz zmiany wprowadzone w innych transakcjach, nawet wtedy, gdy użytkownik requery.</summary>
      </Docs>
    </Member>
    <Member MemberName="Unspecified">
      <MemberSignature Language="C#" Value="Unspecified" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel Unspecified = int32(-1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.Unspecified" />
      <MemberSignature Language="VB.NET" Value="Unspecified" />
      <MemberSignature Language="C++ CLI" Value="Unspecified" />
      <MemberSignature Language="F#" Value="Unspecified = -1" Usage="System.Data.IsolationLevel.Unspecified" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>Poziom izolacji różnych niż określona, jest on używany, ale nie może być określony poziom.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Korzystając z <xref:System.Data.Odbc.OdbcTransaction>, jeśli nie ustawisz <xref:System.Data.IsolationLevel> lub ustawisz <xref:System.Data.IsolationLevel> do `Unspecified`, transakcja jest wykonywana zgodnie z poziomem izolacji, który jest określany przez sterownik, który jest używany.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>