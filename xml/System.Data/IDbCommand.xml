<Type Name="IDbCommand" FullName="System.Data.IDbCommand">
  <Metadata><Meta Name="ms.openlocfilehash" Value="58ad3fafb184846d4759ac62eb165df89643cee3" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37668584" /></Metadata><TypeSignature Language="C#" Value="public interface IDbCommand : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDbCommand implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDbCommand" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDbCommand&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDbCommand : IDisposable" />
  <TypeSignature Language="F#" Value="type IDbCommand = interface&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Reprezentuje instrukcji SQL, który jest wykonywany po nawiązaniu połączenia ze źródłem danych i jest implementowany przez dostawcy danych .NET Framework, uzyskujących dostęp do relacyjnych baz danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.IDbCommand> Interfejs umożliwia klasie dziedziczącej zaimplementować klasę polecenia, który reprezentuje instrukcji SQL, który jest wykonywany w źródle danych. Aby uzyskać więcej informacji na temat klasy poleceń, zobacz [wykonywania polecenia](~/docs/framework/data/adonet/executing-a-command.md).  
  
 Aplikacja nie tworzy wystąpienie <xref:System.Data.IDbCommand> interfejsu bezpośrednio, ale tworzy wystąpienie klasy, która implementuje <xref:System.Data.IDbCommand> interfejsu.  
  
 Klasy, które implementują <xref:System.Data.IDbCommand> należy zaimplementować wszystkich jej członków, a zwykle definiuje dodatkowe elementy członkowskie, aby dodać funkcje właściwe dla dostawcy. Na przykład <xref:System.Data.IDbCommand> interfejs definiuje <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> metody. Z kolei <xref:System.Data.SqlClient.SqlCommand> klasa dziedziczy tę metodę i definiuje również <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienia klasy pochodne <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, i <xref:System.Data.SqlClient.SqlDataReader>. Przykład odczytuje dane pisania w konsoli. Na koniec kod z przykładu zamyka <xref:System.Data.SqlClient.SqlDataReader>, a następnie <xref:System.Data.SqlClient.SqlConnection>.  
  
 [!code-csharp[Classic WebData SqlCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Podwyższenie poziomu spójności między dostawcy danych .NET Framework, nazwa klasy dziedziczącej, w postaci <paramref name="PrvClassname" /> gdzie <paramref name="Prv" /> jest prefiksem jednolite, biorąc pod uwagę wszystkie klasy w określonej przestrzeni nazw dostawcy danych .NET Framework. Na przykład <paramref name="Sql" /> to prefiks wartości <see cref="T:System.Data.SqlClient.SqlCommand" /> klasy w <see langword="System.Data.SqlClient" /> przestrzeni nazw.  Przy dziedziczeniu z <see cref="T:System.Data.IDbCommand" /> interfejsu, należy zaimplementować następujących konstruktorów: <list type="table"> <listheader> <term> elementu </term> <description> opis </description> </listheader> <item> <term> PrvCommand() </term> <description> inicjuje nowe wystąpienie klasy PrvCommand.  </description></item><item><term> PrvCommand (ciąg cmdText) </term> <description> inicjuje nowe wystąpienie klasy PrvCommand tekst zapytania.  </description></item><item><term> PrvCommand (cmdText ciągu, połączenia PrvConnection) </term> <description> inicjuje nowe wystąpienie klasy PrvCommand tekst zapytania i PrvConnection.  </description></item><item><term> PrvCommand (cmdText ciągu, połączenia PrvConnection transakcji PrvTransaction) </term> <description> inicjuje nowe wystąpienie klasy PrvCommand tekst zapytania, PrvConnection i PrvTransaction.  </description></item></list></para></block>
    <altmember cref="T:System.Data.Common.DbDataAdapter" />
    <altmember cref="T:System.Data.IDbConnection" />
    <altmember cref="T:System.Data.OleDb.OleDbCommand" />
    <altmember cref="T:System.Data.SqlClient.SqlCommand" />
  </Docs>
  <Members>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel();" />
      <MemberSignature Language="F#" Value="abstract member Cancel : unit -&gt; unit" Usage="iDbCommand.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Próby powoduje anulowanie wykonywania <see cref="T:System.Data.IDbCommand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie ma nic do anulowania, nic się nie dzieje. Jednak jeśli jest poleceniem w procesie, a próba anulowania nie powiedzie się, jest generowany żaden wyjątek.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public string CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandText : string with get, set" Usage="System.Data.IDbCommand.CommandText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst polecenia do uruchomienia względem źródła danych.</summary>
        <value>Tekst polecenia do wykonania. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Data.IDbCommand.CommandType%2A> właściwość jest ustawiona na `StoredProcedure`ustaw <xref:System.Data.IDbCommand.CommandText%2A> właściwość na nazwę procedury składowanej. Użytkownik może być wymagane do używania składni znaku ucieczki, jeśli nazwa procedury składowanej zawiera żadnych znaków specjalnych. Polecenie wywoła tę procedurę składowaną podczas wywoływania jednej z metod wykonania.  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie klasy pochodnej <xref:System.Data.OleDb.OleDbCommand> i ustawia niektóre jego właściwości.  
  
 [!code-csharp[Classic WebData IDbCommand.CommandText Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandText Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.CommandText Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.IDbCommand.CommandType" />
        <altmember cref="P:System.Data.IDbCommand.UpdatedRowSource" />
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CommandTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CommandTimeout : int with get, set" Usage="System.Data.IDbCommand.CommandTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia czas oczekiwania przed zakończeniem próby wykonania polecenia i wygenerowaniem błędu.</summary>
        <value>Czas (w sekundach) oczekiwania na wykonanie polecenia. Wartość domyślna to 30 sekund.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy wystąpienie klasy pochodnej <xref:System.Data.SqlClient.SqlCommand> i ustawia niektóre jego właściwości.  
  
 [!code-csharp[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Przypisaną wartość właściwości jest mniejsza niż 0.</exception>
        <altmember cref="P:System.Data.IDbCommand.CommandText" />
        <altmember cref="P:System.Data.IDbCommand.Connection" />
        <altmember cref="P:System.Data.IDbCommand.CommandType" />
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public System.Data.CommandType CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandType CommandType" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandType As CommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::CommandType CommandType { System::Data::CommandType get(); void set(System::Data::CommandType value); };" />
      <MemberSignature Language="F#" Value="member this.CommandType : System.Data.CommandType with get, set" Usage="System.Data.IDbCommand.CommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje lub określa sposób, w jaki <see cref="P:System.Data.IDbCommand.CommandText" /> właściwość jest interpretowany.</summary>
        <value>Jedną z <see cref="T:System.Data.CommandType" /> wartości. Wartość domyślna to <see langword="Text" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po ustawieniu <xref:System.Data.IDbCommand.CommandType%2A> właściwości `StoredProcedure`, należy ustawić <xref:System.Data.IDbCommand.CommandText%2A> właściwość na nazwę procedury składowanej. Polecenie wykonuje tę procedurę składowaną podczas wywoływania jednej z metod wykonania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.IDbConnection Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As IDbConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbConnection ^ Connection { System::Data::IDbConnection ^ get(); void set(System::Data::IDbConnection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.IDbConnection with get, set" Usage="System.Data.IDbCommand.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Data.IDbConnection" /> używane przez to wystąpienie elementu <see cref="T:System.Data.IDbCommand" />.</summary>
        <value>Połączenie ze źródłem danych.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public System.Data.IDbDataParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDbDataParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateParameter () As IDbDataParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::IDbDataParameter ^ CreateParameter();" />
      <MemberSignature Language="F#" Value="abstract member CreateParameter : unit -&gt; System.Data.IDbDataParameter" Usage="iDbCommand.CreateParameter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbDataParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Data.IDbDataParameter" /> obiektu.</summary>
        <returns><see langword="IDbDataParameter" /> Obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy dziedziczenie z <xref:System.Data.IDbCommand>, dostawcy danych .NET Framework implementuje silnie typizowaną wersję <xref:System.Data.IDbCommand.CreateParameter%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public int ExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.ExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteNonQuery () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteNonQuery();" />
      <MemberSignature Language="F#" Value="abstract member ExecuteNonQuery : unit -&gt; int" Usage="iDbCommand.ExecuteNonQuery " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wykonuje instrukcję SQL względem <see langword="Connection" /> obiekt dostawcy danych .NET Framework i zwraca liczbę wierszy wpływ.</summary>
        <returns>Liczba zmodyfikowanych wierszy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> wykonywanie operacji katalogu (na przykład podczas badania struktury bazy danych lub tworzenie obiektów bazy danych, takich jak tabele) lub zmień dane w bazie danych bez używania <xref:System.Data.DataSet> , wykonując UPDATE, INSERT czy DELETE instrukcje.  
  
 Mimo że <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> zwraca wszystkie wiersze, wszelkie parametry danych wyjściowych lub nie zwracają wartości mapowane na parametry są wypełniane przy użyciu danych.  
  
 Dla instrukcji UPDATE, INSERT i DELETE wartość zwracana jest liczba wierszy na polecenie. Dla wszystkich innych typów instrukcji wartość zwracana jest wartość -1.  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie klasy pochodnej <xref:System.Data.OleDb.OleDbCommand>, a następnie go wykonuje. Aby to osiągnąć, metoda jest przekazywany ciąg, który jest instrukcję SQL SELECT i parametry służące do połączenia ze źródłem danych.  
  
 [!code-csharp[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteNonQuery Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteNonQuery Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Połączenie nie istnieje.  
  
—lub— 
Połączenie nie jest otwarty.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wykonuje <see cref="P:System.Data.IDbCommand.CommandText" /> względem <see cref="P:System.Data.IDbCommand.Connection" /> i kompilacje <see cref="T:System.Data.IDataReader" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.IDataReader ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDataReader ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader () As IDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::IDataReader ^ ExecuteReader();" />
      <MemberSignature Language="F#" Value="abstract member ExecuteReader : unit -&gt; System.Data.IDataReader" Usage="iDbCommand.ExecuteReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wykonuje <see cref="P:System.Data.IDbCommand.CommandText" /> względem <see cref="P:System.Data.IDbCommand.Connection" /> i kompilacje <see cref="T:System.Data.IDataReader" />.</summary>
        <returns><see cref="T:System.Data.IDataReader" /> Obiektu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.IDataReader ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDataReader ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader (behavior As CommandBehavior) As IDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::IDataReader ^ ExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteReader : System.Data.CommandBehavior -&gt; System.Data.IDataReader" Usage="iDbCommand.ExecuteReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">Jedną z <see cref="T:System.Data.CommandBehavior" /> wartości.</param>
        <summary>Wykonuje <see cref="P:System.Data.IDbCommand.CommandText" /> względem <see cref="P:System.Data.IDbCommand.Connection" />i tworzy <see cref="T:System.Data.IDataReader" /> przy użyciu jednej z <see cref="T:System.Data.CommandBehavior" /> wartości.</summary>
        <returns><see cref="T:System.Data.IDataReader" /> Obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt wywołujący musi wywołać <xref:System.Data.IDbConnection.Open%2A> metody <xref:System.Data.IDbCommand.Connection%2A> właściwości.  
  
 Gdy <xref:System.Data.IDbCommand.CommandType%2A> właściwość jest ustawiona na `StoredProcedure`, <xref:System.Data.IDbCommand.CommandText%2A> właściwość powinna być ustawiona na nazwę procedury składowanej. Polecenie wykonuje tę procedurę składowaną, gdy wywołujesz <xref:System.Data.IDbCommand.ExecuteReader%2A>.  
  
> [!NOTE]
>  Użyj <xref:System.Data.CommandBehavior.SequentialAccess> pobieranie dużej wartości i danych binarnych. W przeciwnym razie <xref:System.OutOfMemoryException> może wystąpić, a następnie połączenie zostanie zamknięte.  
  
 Gdy <xref:System.Data.IDataReader> jest używany, skojarzonego <xref:System.Data.IDbConnection> jest zajęty obsługująca <xref:System.Data.IDataReader>. W tym stanie, można wykonać żadnych innych operacji na <xref:System.Data.IDbConnection> innego niż jego zamknięciu. Dotyczy to do momentu <xref:System.Data.IDataReader.Close%2A> zostanie wywołana metoda elementu DataReader. Jeśli elementu DataReader jest tworzona przy użyciu <xref:System.Data.CommandBehavior> równa `CloseConnection`, zamykanie elementu DataReader automatycznie zamyka połączenie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public object ExecuteScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ExecuteScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.ExecuteScalar" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ExecuteScalar();" />
      <MemberSignature Language="F#" Value="abstract member ExecuteScalar : unit -&gt; obj" Usage="iDbCommand.ExecuteScalar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wykonuje zapytanie i zwraca pierwszą kolumnę pierwszego wiersza w zestawie wyników zwróconych przez zapytanie. Dodatkowe kolumny lub wiersze są ignorowane.</summary>
        <returns>Pierwszą kolumnę pierwszego wiersza w zestawie wyników.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Data.IDbCommand.ExecuteScalar%2A> metody do odzyskania pojedynczej wartości (na przykład wartości zagregowanej) z bazy danych. Ta migracja wymaga mniejszej ilości kodu niż przy użyciu <xref:System.Data.IDbCommand.ExecuteReader%2A> metody, a następnie wykonuje operacje, które są niezbędne do wygenerowania pojedynczą wartość przy użyciu danych zwróconych przez <xref:System.Data.IDataReader>.  
  
 Typowa <xref:System.Data.IDbCommand.ExecuteScalar%2A> zapytania mogą być sformatowane tak jak w poniższym przykładzie C#:  
  
```  
CommandText = "select count(*) as NumberOfRegions from region";  
Int32 count = (int) ExecuteScalar();  
```  
  
 Jeśli pierwszą kolumnę pierwszego wiersza w zestawie wyników nie zostanie znaleziony, odwołanie o wartości null (`Nothing` w języku Visual Basic) jest zwracany. Jeśli wartość w bazie danych jest `null`, zapytanie zwraca `DBNull.Value`.  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie klasy pochodnej <xref:System.Data.SqlClient.SqlCommand>, a następnie uruchamia go za pomocą <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>. Przykład jest przekazywany ciąg, który jest instrukcją Transact-SQL, która zwraca wynik agregacji i parametry służące do połączenia ze źródłem danych.  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteScalar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteScalar/CS/mysample.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteScalar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteScalar/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.IDataParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDataParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As IDataParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDataParameterCollection ^ Parameters { System::Data::IDataParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Data.IDataParameterCollection" Usage="System.Data.IDbCommand.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Data.IDataParameterCollection" />.</summary>
        <value>Parametry instrukcji SQL lub procedury składowanej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy wystąpienie klasy pochodnej <xref:System.Data.SqlClient.SqlCommand>i wyświetla jego parametrów. W tym przykładzie aplikacja przekazuje <xref:System.Data.SqlClient.SqlConnection>, ciąg zapytania, który jest instrukcji języka Transact-SQL ZAZNACZYĆ, a tablica <xref:System.Data.SqlClient.SqlParameter> obiektów.  
  
 [!code-csharp[Classic WebData IDbCommand.Parameters Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.Parameters Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.Parameters Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.Parameters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.IDataParameter" />
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.Prepare" />
      <MemberSignature Language="VB.NET" Value="Public Sub Prepare ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Prepare();" />
      <MemberSignature Language="F#" Value="abstract member Prepare : unit -&gt; unit" Usage="iDbCommand.Prepare " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy przygotowany (lub skompilowanych) wersja polecenia w źródle danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Data.IDbCommand.CommandType%2A> właściwość jest ustawiona na `TableDirect`, <xref:System.Data.IDbCommand.Prepare%2A> nic nie robi. Jeśli <xref:System.Data.IDbCommand.CommandType%2A> ustawiono `StoredProcedure`, wywołanie <xref:System.Data.IDbCommand.Prepare%2A> powinny zakończyć się pomyślnie, chociaż może to spowodować pusta. Serwer automatycznie zapisuje w pamięci podręcznej planów do ponownego wykorzystania w razie potrzeby; w związku z tym nie ma potrzeby aby wywołać tę metodę bezpośrednio w aplikacji klienckiej.  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie klasy pochodnej <xref:System.Data.OleDb.OleDbCommand>i otwiera połączenie. Przykład następnie przygotowuje procedury składowanej w źródle danych, przekazując ciąg, który jest instrukcję SQL Select i parametry służące do połączenia ze źródłem danych.  
  
 [!code-csharp[Classic WebData OleDbCommand.Prepare Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Prepare Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.Prepare Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Prepare Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> Nie jest ustawiona.  
  
—lub— 
<see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> Nie <see cref="M:System.Data.OleDb.OleDbConnection.Open" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.IDbTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As IDbTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbTransaction ^ Transaction { System::Data::IDbTransaction ^ get(); void set(System::Data::IDbTransaction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transaction : System.Data.IDbTransaction with get, set" Usage="System.Data.IDbCommand.Transaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia transakcji w ramach którego <see langword="Command" /> wykonuje obiekt dostawcy danych .NET Framework.</summary>
        <value><see langword="Command" /> wykonuje obiekt dostawcy danych .NET Framework. Wartość domyślna to <see langword="null" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedRowSource">
      <MemberSignature Language="C#" Value="public System.Data.UpdateRowSource UpdatedRowSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.UpdateRowSource UpdatedRowSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.UpdatedRowSource" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdatedRowSource As UpdateRowSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::UpdateRowSource UpdatedRowSource { System::Data::UpdateRowSource get(); void set(System::Data::UpdateRowSource value); };" />
      <MemberSignature Language="F#" Value="member this.UpdatedRowSource : System.Data.UpdateRowSource with get, set" Usage="System.Data.IDbCommand.UpdatedRowSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.UpdateRowSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia, w jaki sposób wyniki polecenia są stosowane do <see cref="T:System.Data.DataRow" /> gdy jest używana przez <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> metody <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
        <value>Jedną z <see cref="T:System.Data.UpdateRowSource" /> wartości. Wartość domyślna to <see langword="Both" /> chyba, że polecenie jest generowany automatycznie. Wartość domyślna to <see langword="None" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Wprowadzona wartość nie jest jedną z <see cref="T:System.Data.UpdateRowSource" /> wartości.</exception>
      </Docs>
    </Member>
  </Members>
</Type>