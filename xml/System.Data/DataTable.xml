<Type Name="DataTable" FullName="System.Data.DataTable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1ca059a55e7219b43068a0a701adfb187f239dc3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataTable : System.ComponentModel.MarshalByValueComponent, System.ComponentModel.IListSource, System.ComponentModel.ISupportInitialize, System.ComponentModel.ISupportInitializeNotification, System.Runtime.Serialization.ISerializable, System.Xml.Serialization.IXmlSerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit DataTable extends System.ComponentModel.MarshalByValueComponent implements class System.ComponentModel.IListSource, class System.ComponentModel.ISupportInitialize, class System.ComponentModel.ISupportInitializeNotification, class System.Runtime.Serialization.ISerializable, class System.Xml.Serialization.IXmlSerializable" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataTable" />
  <TypeSignature Language="VB.NET" Value="Public Class DataTable&#xA;Inherits MarshalByValueComponent&#xA;Implements IListSource, ISerializable, ISupportInitialize, ISupportInitializeNotification, IXmlSerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTable : System::ComponentModel::MarshalByValueComponent, System::ComponentModel::IListSource, System::ComponentModel::ISupportInitialize, System::ComponentModel::ISupportInitializeNotification, System::Runtime::Serialization::ISerializable, System::Xml::Serialization::IXmlSerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.ComponentModel.MarshalByValueComponent</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IListSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitializeNotification</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.Serialization.IXmlSerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("RowChanging")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("TableName")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataTableEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Xml.Serialization.XmlSchemaProvider("GetDataTableSchema")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a591e-101">Reprezentuje jedna tabela danych w pamięci.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a591e-101">Represents one table of in-memory data.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-102"><xref:System.Data.DataTable> Jest obiektem centralnej w bibliotece programu ADO.NET.</span><span class="sxs-lookup"><span data-stu-id="a591e-102">The <xref:System.Data.DataTable> is a central object in the ADO.NET library.</span></span> <span data-ttu-id="a591e-103">Inne obiekty, które używają <xref:System.Data.DataTable> obejmują <xref:System.Data.DataSet> i <xref:System.Data.DataView>.</span><span class="sxs-lookup"><span data-stu-id="a591e-103">Other objects that use the <xref:System.Data.DataTable> include the <xref:System.Data.DataSet> and the <xref:System.Data.DataView>.</span></span>  
  
 <span data-ttu-id="a591e-104">Podczas uzyskiwania dostępu do <xref:System.Data.DataTable> obiektów, należy pamiętać, że są one warunkowo z uwzględnieniem wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="a591e-104">When accessing <xref:System.Data.DataTable> objects, note that they are conditionally case sensitive.</span></span> <span data-ttu-id="a591e-105">Na przykład, jeśli jeden <xref:System.Data.DataTable> o nazwie "mydatatable" i drugiego o nazwie "Mydatatable", ciąg używany do wyszukania go tabel jest traktowany jako wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="a591e-105">For example, if one <xref:System.Data.DataTable> is named "mydatatable" and another is named "Mydatatable", a string used to search for one of the tables is regarded as case sensitive.</span></span> <span data-ttu-id="a591e-106">Jednak jeśli istnieje "mydatatable" i "Mydatatable" nie ma, ciąg wyszukiwania jest traktowany jako bez uwzględniania wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="a591e-106">However, if "mydatatable" exists and "Mydatatable" does not, the search string is regarded as case insensitive.</span></span> <span data-ttu-id="a591e-107">A <xref:System.Data.DataSet> może zawierać dwóch <xref:System.Data.DataTable> obiektów, które mają taki sam <xref:System.Data.DataTable.TableName%2A> wartość właściwości, ale o różnych <xref:System.Data.DataTable.Namespace%2A> wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="a591e-107">A <xref:System.Data.DataSet> can contain two <xref:System.Data.DataTable> objects that have the same <xref:System.Data.DataTable.TableName%2A> property value but different <xref:System.Data.DataTable.Namespace%2A> property values.</span></span> <span data-ttu-id="a591e-108">Aby uzyskać więcej informacji na temat pracy z <xref:System.Data.DataTable> obiekty, zobacz [tworzenie DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-a-datatable.md).</span><span class="sxs-lookup"><span data-stu-id="a591e-108">For more information about working with <xref:System.Data.DataTable> objects, see [Creating a DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-a-datatable.md).</span></span>  
  
 <span data-ttu-id="a591e-109">Jeśli tworzysz <xref:System.Data.DataTable> programowo, należy najpierw zdefiniować schematem przez dodanie <xref:System.Data.DataColumn> obiekty do <xref:System.Data.DataColumnCollection> (dostępnej za pośrednictwem <xref:System.Data.DataTable.Columns%2A> właściwości).</span><span class="sxs-lookup"><span data-stu-id="a591e-109">If you are creating a <xref:System.Data.DataTable> programmatically, you must first define its schema by adding <xref:System.Data.DataColumn> objects to the <xref:System.Data.DataColumnCollection> (accessed through the <xref:System.Data.DataTable.Columns%2A> property).</span></span> <span data-ttu-id="a591e-110">Aby uzyskać więcej informacji o dodawaniu <xref:System.Data.DataColumn> obiekty, zobacz [Dodawanie kolumn do DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md).</span><span class="sxs-lookup"><span data-stu-id="a591e-110">For more information about adding <xref:System.Data.DataColumn> objects, see [Adding Columns to a DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md).</span></span>  
  
 <span data-ttu-id="a591e-111">Aby dodać wierszy do <xref:System.Data.DataTable>, należy najpierw użyć <xref:System.Data.DataTable.NewRow%2A> metodę, aby zwrócić nowe <xref:System.Data.DataRow> obiektu.</span><span class="sxs-lookup"><span data-stu-id="a591e-111">To add rows to a <xref:System.Data.DataTable>, you must first use the <xref:System.Data.DataTable.NewRow%2A> method to return a new <xref:System.Data.DataRow> object.</span></span> <span data-ttu-id="a591e-112"><xref:System.Data.DataTable.NewRow%2A> Metoda zwraca wiersza ze schematem <xref:System.Data.DataTable>, ponieważ jest on zdefiniowany w tabeli <xref:System.Data.DataColumnCollection>.</span><span class="sxs-lookup"><span data-stu-id="a591e-112">The <xref:System.Data.DataTable.NewRow%2A> method returns a row with the schema of the <xref:System.Data.DataTable>, as it is defined by the table's <xref:System.Data.DataColumnCollection>.</span></span> <span data-ttu-id="a591e-113">Maksymalna liczba wierszy, które <xref:System.Data.DataTable> można magazyn jest 16,777,216.</span><span class="sxs-lookup"><span data-stu-id="a591e-113">The maximum number of rows that a <xref:System.Data.DataTable> can store is 16,777,216.</span></span> <span data-ttu-id="a591e-114">Aby uzyskać więcej informacji, zobacz [Dodawanie danych do elementu DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-data-to-a-datatable.md).</span><span class="sxs-lookup"><span data-stu-id="a591e-114">For more information, see [Adding Data to a DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-data-to-a-datatable.md).</span></span>  
  
 <span data-ttu-id="a591e-115"><xref:System.Data.DataTable> Również zawiera kolekcję <xref:System.Data.Constraint> obiektów, które mogą służyć do zapewnienia integralności danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-115">The <xref:System.Data.DataTable> also contains a collection of <xref:System.Data.Constraint> objects that can be used to ensure the integrity of the data.</span></span> <span data-ttu-id="a591e-116">Aby uzyskać więcej informacji, zobacz [ograniczenia DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md).</span><span class="sxs-lookup"><span data-stu-id="a591e-116">For more information, see [DataTable Constraints](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md).</span></span>  
  
 <span data-ttu-id="a591e-117">Istnieje wiele <xref:System.Data.DataTable> zdarzenia, które mogą służyć do określenia, kiedy zmian w tabeli.</span><span class="sxs-lookup"><span data-stu-id="a591e-117">There are many <xref:System.Data.DataTable> events that can be used to determine when changes are made to a table.</span></span> <span data-ttu-id="a591e-118">Obejmują one <xref:System.Data.DataTable.RowChanged>, <xref:System.Data.DataTable.RowChanging>, <xref:System.Data.DataTable.RowDeleting>, i <xref:System.Data.DataTable.RowDeleted>.</span><span class="sxs-lookup"><span data-stu-id="a591e-118">These include <xref:System.Data.DataTable.RowChanged>, <xref:System.Data.DataTable.RowChanging>, <xref:System.Data.DataTable.RowDeleting>, and <xref:System.Data.DataTable.RowDeleted>.</span></span> <span data-ttu-id="a591e-119">Aby uzyskać więcej informacji o zdarzeniach, które mogą być używane z <xref:System.Data.DataTable>, zobacz [obsługi zdarzeń DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span><span class="sxs-lookup"><span data-stu-id="a591e-119">For more information about the events that can be used with a <xref:System.Data.DataTable>, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
 <span data-ttu-id="a591e-120">Gdy wystąpienie klasy <xref:System.Data.DataTable> jest tworzony, niektóre z odczytu/zapisu właściwości są ustawione na wartości początkowe.</span><span class="sxs-lookup"><span data-stu-id="a591e-120">When an instance of <xref:System.Data.DataTable> is created, some of the read/write properties are set to initial values.</span></span> <span data-ttu-id="a591e-121">Aby uzyskać listę tych wartości, zobacz <xref:System.Data.DataTable.%23ctor%2A?displayProperty=nameWithType> tematu konstruktora.</span><span class="sxs-lookup"><span data-stu-id="a591e-121">For a list of these values, see the <xref:System.Data.DataTable.%23ctor%2A?displayProperty=nameWithType> constructor topic.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a591e-122"><xref:System.Data.DataSet> i <xref:System.Data.DataTable> obiekty dziedziczyć <xref:System.ComponentModel.MarshalByValueComponent>i obsługuje <xref:System.Runtime.Serialization.ISerializable> interfejs dla niego komunikację zdalną środowiska .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="a591e-122">The <xref:System.Data.DataSet> and <xref:System.Data.DataTable> objects inherit from <xref:System.ComponentModel.MarshalByValueComponent>, and support the <xref:System.Runtime.Serialization.ISerializable> interface for .NET Framework remoting.</span></span> <span data-ttu-id="a591e-123">Są to jedyne obiekty ADO.NET, używanych do komunikacji zdalnej .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="a591e-123">These are the only ADO.NET objects that you can use for .NET Framework remoting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-124">Poniższy przykład tworzy dwa <xref:System.Data.DataTable> obiektów i jeden <xref:System.Data.DataRelation> obiektu i dodaje nowe obiekty do <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="a591e-124">The following example creates two <xref:System.Data.DataTable> objects and one <xref:System.Data.DataRelation> object, and adds the new objects to a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="a591e-125">Tabele są następnie wyświetlane w <xref:System.Windows.Forms.DataGridView> formantu.</span><span class="sxs-lookup"><span data-stu-id="a591e-125">The tables are then displayed in a <xref:System.Windows.Forms.DataGridView> control.</span></span>  
  
 [!code-csharp[Classic WebData DataTable Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable Example/VB/source.vb#1)]  
  
 <span data-ttu-id="a591e-126">W tym przykładzie pokazano, jak ręcznie utworzyć DataTable z definicjami schematu:</span><span class="sxs-lookup"><span data-stu-id="a591e-126">This sample demonstrates how to create a DataTable manually with specific schema definitions:</span></span>  
  
-   <span data-ttu-id="a591e-127">Tworzenie wielu DataTables i definiowanie początkowych kolumn.</span><span class="sxs-lookup"><span data-stu-id="a591e-127">Create multiple DataTables and define the initial columns.</span></span>  
  
-   <span data-ttu-id="a591e-128">Tworzenie powiązanych tabel.</span><span class="sxs-lookup"><span data-stu-id="a591e-128">Create the table constraints.</span></span>  
  
-   <span data-ttu-id="a591e-129">Wstaw wartości i wyświetlania w tabelach.</span><span class="sxs-lookup"><span data-stu-id="a591e-129">Insert the values and display the tables.</span></span>  
  
-   <span data-ttu-id="a591e-130">Utwórz wyrażenie kolumny i Wyświetl tabele.</span><span class="sxs-lookup"><span data-stu-id="a591e-130">Create the expression columns and display the tables.</span></span>  
  
 <span data-ttu-id="a591e-131">C# i Visual Basic projektów z tym przykładowym kodzie można znaleźć w [przykłady kodu dewelopera](http://code.msdn.microsoft.com/How-to-create-DataTable-7abb4914).</span><span class="sxs-lookup"><span data-stu-id="a591e-131">C# and Visual Basic projects with this code sample can be found on [Developer Code Samples](http://code.msdn.microsoft.com/How-to-create-DataTable-7abb4914).</span></span>  
  
 [!code-csharp[Classic WebData DataTable Example2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/classic webdata datatable example2/cs/source.cs#1)]
 [!code-vb[Classic WebData DataTable Example2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/classic webdata datatable example2/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="a591e-132">Tego typu są bezpieczne dla operacji wielowątkowych odczytu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a591e-132">This type is safe for multithreaded read operations.</span>
      </span>
      <span data-ttu-id="a591e-133">Wszystkie operacje zapisu należy przeprowadzić synchronizację.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a591e-133">You must synchronize any write operations.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-134">Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.DataTable" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-134">Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a591e-135">Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.DataTable" /> klasy bez argumentów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-135">Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class with no arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-136">Konstruktor ustawia wartości początkowe dla wszystkich właściwości <xref:System.Data.DataTable> obiektu.</span><span class="sxs-lookup"><span data-stu-id="a591e-136">The constructor sets initial values for all properties of the <xref:System.Data.DataTable> object.</span></span> <span data-ttu-id="a591e-137">W poniższej tabeli przedstawiono właściwości i ich wartości domyślne.</span><span class="sxs-lookup"><span data-stu-id="a591e-137">The following table shows the properties and their default values.</span></span> <span data-ttu-id="a591e-138">Gdy wystąpienie klasy <xref:System.Data.DataTable> utworzono następujące właściwości są ustawione na wartości początkowe odczytu/zapisu.</span><span class="sxs-lookup"><span data-stu-id="a591e-138">When an instance of <xref:System.Data.DataTable> is created, the following read/write properties are set to initial values.</span></span>  
  
|<span data-ttu-id="a591e-139">Właściwość</span><span class="sxs-lookup"><span data-stu-id="a591e-139">Property</span></span>|<span data-ttu-id="a591e-140">Wartość domyślna</span><span class="sxs-lookup"><span data-stu-id="a591e-140">Default value</span></span>|  
|--------------|-------------------|  
|<span data-ttu-id="a591e-141">**CaseSensitive**</span><span class="sxs-lookup"><span data-stu-id="a591e-141">**CaseSensitive**</span></span>|<span data-ttu-id="a591e-142">Taki sam jak element nadrzędny <xref:System.Data.DataSet>, jeśli należy do jednego.</span><span class="sxs-lookup"><span data-stu-id="a591e-142">Same as the parent <xref:System.Data.DataSet>, if it belongs to one.</span></span> <span data-ttu-id="a591e-143">W przeciwnym razie `false`.</span><span class="sxs-lookup"><span data-stu-id="a591e-143">Otherwise, `false`.</span></span>|  
|<span data-ttu-id="a591e-144">**DisplayExpression**</span><span class="sxs-lookup"><span data-stu-id="a591e-144">**DisplayExpression**</span></span>|<span data-ttu-id="a591e-145">Pusty ciąg ("")</span><span class="sxs-lookup"><span data-stu-id="a591e-145">Empty string ("")</span></span>|  
|<span data-ttu-id="a591e-146">**Wersja regionalna**</span><span class="sxs-lookup"><span data-stu-id="a591e-146">**Locale**</span></span>|<span data-ttu-id="a591e-147">Taki sam jak element nadrzędny <xref:System.Data.DataSet> obiektu <xref:System.Globalization.CultureInfo> (zwrócony przez <xref:System.Data.DataSet.Locale%2A> właściwości); Jeśli nadrzędny nie istnieje, wartość domyślna to bieżący system <xref:System.Globalization.CultureInfo>.</span><span class="sxs-lookup"><span data-stu-id="a591e-147">Same as the parent <xref:System.Data.DataSet> object's <xref:System.Globalization.CultureInfo> (returned by the <xref:System.Data.DataSet.Locale%2A> property); if no parent exists, the default is the current system <xref:System.Globalization.CultureInfo>.</span></span>|  
|<span data-ttu-id="a591e-148">**MinimumCapacity**</span><span class="sxs-lookup"><span data-stu-id="a591e-148">**MinimumCapacity**</span></span>|<span data-ttu-id="a591e-149">50 wierszy.</span><span class="sxs-lookup"><span data-stu-id="a591e-149">50 rows.</span></span>|  
  
 <span data-ttu-id="a591e-150">Można zmienić wartości dla żadnego z tych właściwości, za pomocą oddzielnego wywołania do właściwości.</span><span class="sxs-lookup"><span data-stu-id="a591e-150">You can change the value for any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-151">Poniższy przykład tworzy nowy <xref:System.Data.DataTable> z <xref:System.Data.DataColumn> i <xref:System.Data.DataRow>i wyświetla je w <xref:System.Windows.Forms.DataGridView> formantu.</span><span class="sxs-lookup"><span data-stu-id="a591e-151">The following example creates a new <xref:System.Data.DataTable> with <xref:System.Data.DataColumn> and <xref:System.Data.DataRow>, and displays it in a <xref:System.Windows.Forms.DataGridView> control.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.DataTable Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.DataTable Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.DataTable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.DataTable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTable (string tableName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tableName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tableName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTable(System::String ^ tableName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tableName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tableName">
          <span data-ttu-id="a591e-152">Nazwa umożliwiają tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-152">The name to give the table.</span>
          </span>
          <span data-ttu-id="a591e-153">Jeśli <c>tableName</c> jest <see langword="null" /> lub pusty ciąg, domyślna nazwa znajduje się po dodaniu do <see cref="T:System.Data.DataTableCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-153">If <c>tableName</c> is <see langword="null" /> or an empty string, a default name is given when added to the <see cref="T:System.Data.DataTableCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-154">Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.DataTable" /> klasy o nazwie określonej tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-154">Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class with the specified table name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a591e-155">Poniższy przykład tworzy <xref:System.Data.DataTable> i wyświetla je w <xref:System.Windows.Forms.DataGridView> formantu.</span><span class="sxs-lookup"><span data-stu-id="a591e-155">The following example creates a <xref:System.Data.DataTable> and displays it in a <xref:System.Windows.Forms.DataGridView> control.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.DataTable1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.DataTable1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.DataTable1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.DataTable1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataTable (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataTable(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="a591e-156">Dane potrzebne do serializacji lub deserializacji obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-156">The data needed to serialize or deserialize an object.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="a591e-157">Źródło i miejsce docelowe danego strumieniu serializowanym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-157">The source and destination of a given serialized stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-158">Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.DataTable" /> klasy z <see cref="T:System.Runtime.Serialization.SerializationInfo" /> i <see cref="T:System.Runtime.Serialization.StreamingContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-158">Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class with the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and the <see cref="T:System.Runtime.Serialization.StreamingContext" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-159">Ta implementacja <xref:System.Data.DataTable> Konstruktor jest wymagany dla <xref:System.Runtime.Serialization.ISerializable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-159">This implementation of the <xref:System.Data.DataTable> constructor is required for <xref:System.Runtime.Serialization.ISerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTable (string tableName, string tableNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tableName, string tableNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tableName As String, tableNamespace As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTable(System::String ^ tableName, System::String ^ tableNamespace);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="tableNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tableName">
          <span data-ttu-id="a591e-160">Nazwa umożliwiają tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-160">The name to give the table.</span>
          </span>
          <span data-ttu-id="a591e-161">Jeśli <c>tableName</c> jest <see langword="null" /> lub pusty ciąg, domyślna nazwa znajduje się po dodaniu do <see cref="T:System.Data.DataTableCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-161">If <c>tableName</c> is <see langword="null" /> or an empty string, a default name is given when added to the <see cref="T:System.Data.DataTableCollection" />.</span>
          </span>
        </param>
        <param name="tableNamespace">
          <span data-ttu-id="a591e-162">Obszar nazw XML reprezentację danych przechowywanych w <see langword="DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-162">The namespace for the XML representation of the data stored in the <see langword="DataTable" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-163">Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.DataTable" /> przy użyciu nazwy określonej tabeli i przestrzeni nazw.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-163">Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class using the specified table name and namespace.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptChanges">
      <MemberSignature Language="C#" Value="public void AcceptChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AcceptChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.AcceptChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub AcceptChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AcceptChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a591e-164">Zatwierdza wszystkie zmiany wprowadzone do tej tabeli od czasu ostatniego <see cref="M:System.Data.DataTable.AcceptChanges" /> została wywołana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-164">Commits all the changes made to this table since the last time <see cref="M:System.Data.DataTable.AcceptChanges" /> was called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-165">Gdy <xref:System.Data.DataTable.AcceptChanges%2A> po wywołaniu dowolnej <xref:System.Data.DataRow> obiektu nadal w trybie edycji kończy się pomyślnie jego edycji.</span><span class="sxs-lookup"><span data-stu-id="a591e-165">When <xref:System.Data.DataTable.AcceptChanges%2A> is called, any <xref:System.Data.DataRow> object still in edit mode successfully ends its edits.</span></span> <span data-ttu-id="a591e-166"><xref:System.Data.DataRowState> Zmieniają się także: wszystkie `Added` i `Modified` wierszy stają się `Unchanged`, i `Deleted` wiersze zostaną usunięte.</span><span class="sxs-lookup"><span data-stu-id="a591e-166">The <xref:System.Data.DataRowState> also changes: all `Added` and `Modified` rows become `Unchanged`, and `Deleted` rows are removed.</span></span>  
  
 <span data-ttu-id="a591e-167"><xref:System.Data.DataTable.AcceptChanges%2A> Wywoływana jest metoda zazwyczaj <xref:System.Data.DataTable> po próbę aktualizacji <xref:System.Data.DataSet> przy użyciu <xref:System.Data.Common.DbDataAdapter.Update%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-167">The <xref:System.Data.DataTable.AcceptChanges%2A> method is generally called on a <xref:System.Data.DataTable> after you attempt to update the <xref:System.Data.DataSet> using the <xref:System.Data.Common.DbDataAdapter.Update%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-168">Poniższy przykład testy każdej tabeli błędów.</span><span class="sxs-lookup"><span data-stu-id="a591e-168">The following example tests each table for errors.</span></span> <span data-ttu-id="a591e-169">Jeśli błędy tabeli można uzgodnić (przez przekazanie jej do niezdefiniowanej funkcji), <xref:System.Data.DataTable.AcceptChanges%2A> jest wywołana; w przeciwnym razie <xref:System.Data.DataTable.RejectChanges%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="a591e-169">If the table's errors can be reconciled (by passing it to an undefined function), <xref:System.Data.DataTable.AcceptChanges%2A> is called; otherwise, <xref:System.Data.DataTable.RejectChanges%2A> is called.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.AcceptChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.AcceptChanges Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.AcceptChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.AcceptChanges Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public virtual void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a591e-170">Rozpoczyna inicjowanie <see cref="T:System.Data.DataTable" /> który jest używany w formularzu lub używany przez inny składnik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-170">Begins the initialization of a <see cref="T:System.Data.DataTable" /> that is used on a form or used by another component.</span>
          </span>
          <span data-ttu-id="a591e-171">Inicjowanie występuje w czasie wykonywania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-171">The initialization occurs at run time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-172">Środowisku projektowania programu Visual Studio .NET używa tej metody, aby rozpocząć inicjowanie składnik, który jest używany w formularzu lub używany przez inny składnik.</span><span class="sxs-lookup"><span data-stu-id="a591e-172">The Visual Studio .NET design environment uses this method to start the initialization of a component that is used on a form or used by another component.</span></span> <span data-ttu-id="a591e-173"><xref:System.Data.DataTable.EndInit%2A> Metoda kończy się inicjowania.</span><span class="sxs-lookup"><span data-stu-id="a591e-173">The <xref:System.Data.DataTable.EndInit%2A> method ends the initialization.</span></span> <span data-ttu-id="a591e-174">Przy użyciu <xref:System.Data.DataTable.BeginInit%2A> i <xref:System.Data.DataTable.EndInit%2A> metody uniemożliwia użycie przed pełnym zainicjowaniem formantu.</span><span class="sxs-lookup"><span data-stu-id="a591e-174">Using the <xref:System.Data.DataTable.BeginInit%2A> and <xref:System.Data.DataTable.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadData">
      <MemberSignature Language="C#" Value="public void BeginLoadData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginLoadData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.BeginLoadData" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginLoadData ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginLoadData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a591e-175">Powoduje wyłączenie powiadomień, indeks konserwacji i ograniczeń podczas ładowania danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-175">Turns off notifications, index maintenance, and constraints while loading data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-176">Użyj <xref:System.Data.DataTable.BeginLoadData%2A> w połączeniu z <xref:System.Data.DataTable.LoadDataRow%2A> i <xref:System.Data.DataTable.EndLoadData%2A>.</span><span class="sxs-lookup"><span data-stu-id="a591e-176">Use <xref:System.Data.DataTable.BeginLoadData%2A> in conjunction with <xref:System.Data.DataTable.LoadDataRow%2A> and <xref:System.Data.DataTable.EndLoadData%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaseSensitive">
      <MemberSignature Language="C#" Value="public bool CaseSensitive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CaseSensitive" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.CaseSensitive" />
      <MemberSignature Language="VB.NET" Value="Public Property CaseSensitive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CaseSensitive { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-177">Wskazuje, czy porównywanie ciągów wewnątrz tabeli jest rozróżniana wielkość liter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-177">Indicates whether string comparisons within the table are case-sensitive.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a591e-178">
            <see langword="true" /> Jeśli wynikiem porównania jest rozróżniana wielkość liter; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-178">
              <see langword="true" /> if the comparison is case-sensitive; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a591e-179">Domyślnym ustawieniem jest nadrzędny <see cref="T:System.Data.DataSet" /> obiektu <see cref="P:System.Data.DataSet.CaseSensitive" /> właściwości, lub <see langword="false" /> Jeśli <see cref="T:System.Data.DataTable" /> utworzono niezależnie od <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-179">The default is set to the parent <see cref="T:System.Data.DataSet" /> object's <see cref="P:System.Data.DataSet.CaseSensitive" /> property, or <see langword="false" /> if the <see cref="T:System.Data.DataTable" /> was created independently of a <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-180"><xref:System.Data.DataTable.CaseSensitive%2A> Właściwość ma wpływ na porównywanie ciągów w sortowanie, wyszukiwanie i filtrowanie.</span><span class="sxs-lookup"><span data-stu-id="a591e-180">The <xref:System.Data.DataTable.CaseSensitive%2A> property affects string comparisons in sorting, searching, and filtering.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-181">Następujące przykładowe wywołania <xref:System.Data.DataTable.Select%2A> metody dwa razy na <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-181">The following example calls the <xref:System.Data.DataTable.Select%2A> method twice on a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="a591e-182">Po raz pierwszy, <xref:System.Data.DataTable.CaseSensitive%2A> właściwość jest ustawiona na `false`, drugi do `true`.</span><span class="sxs-lookup"><span data-stu-id="a591e-182">The first time, the <xref:System.Data.DataTable.CaseSensitive%2A> property is set to `false`, the second, to `true`.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.CaseSensitive Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.CaseSensitive Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.CaseSensitive Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.CaseSensitive Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.Select" />
      </Docs>
    </Member>
    <Member MemberName="ChildRelations">
      <MemberSignature Language="C#" Value="public System.Data.DataRelationCollection ChildRelations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataRelationCollection ChildRelations" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.ChildRelations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildRelations As DataRelationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRelationCollection ^ ChildRelations { System::Data::DataRelationCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRelationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-183">Pobiera kolekcję relacje podrzędne dla tej <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-183">Gets the collection of child relations for this <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a591e-184">A <see cref="T:System.Data.DataRelationCollection" /> zawiera relacje podrzędne dla tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-184">A <see cref="T:System.Data.DataRelationCollection" /> that contains the child relations for the table.</span>
          </span>
          <span data-ttu-id="a591e-185">Zwracany jest pustą kolekcję, jeśli nie <see cref="T:System.Data.DataRelation" /> istnieją obiekty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-185">An empty collection is returned if no <see cref="T:System.Data.DataRelation" /> objects exist.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-186">A <xref:System.Data.DataRelation> definiuje relację między dwiema tabelami.</span><span class="sxs-lookup"><span data-stu-id="a591e-186">A <xref:System.Data.DataRelation> defines the relationship between two tables.</span></span> <span data-ttu-id="a591e-187">Zazwyczaj dwie tabele są połączone za pośrednictwem jednego pola, który zawiera te same dane.</span><span class="sxs-lookup"><span data-stu-id="a591e-187">Typically, two tables are linked through a single field that contains the same data.</span></span> <span data-ttu-id="a591e-188">Na przykład tabeli, która zawiera dane adresów może mieć jedno pole zawierający kody, które reprezentują krajów i regionów.</span><span class="sxs-lookup"><span data-stu-id="a591e-188">For example, a table which contains address data may have a single field containing codes that represent countries/regions.</span></span> <span data-ttu-id="a591e-189">Druga tabela, która zawiera dane kraj/region będzie mieć jedno pole, który zawiera kod, który identyfikuje kraj/region, a jest ten kod, który jest wstawiany do odpowiednich pól w pierwszej tabeli.</span><span class="sxs-lookup"><span data-stu-id="a591e-189">A second table that contains country/region data will have a single field that contains the code that identifies the country/region, and it is this code which is inserted into the corresponding field in the first table.</span></span> <span data-ttu-id="a591e-190">A <xref:System.Data.DataRelation>, następnie zawiera co najmniej cztery elementy informacji: (1) Nazwa pierwszej tabeli, (2) z nazwą kolumny w pierwszej tabeli, (3) nazwa drugiej tabeli i (4) Nazwa kolumny w drugiej tabeli.</span><span class="sxs-lookup"><span data-stu-id="a591e-190">A <xref:System.Data.DataRelation>, then, contains at least four pieces of information: (1) the name of the first table, (2) the column name in the first table, (3) the name of the second table, and (4) the column name in the second table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-191">W poniższym przykładzie użyto <xref:System.Data.DataTable.ChildRelations%2A> właściwości, aby powrócić do każdego elementu podrzędnego <xref:System.Data.DataRelation> w <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-191">The following example uses the <xref:System.Data.DataTable.ChildRelations%2A> property to return each child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="a591e-192">Każda relacja jest następnie używany jako argument w <xref:System.Data.DataRow.GetChildRows%2A> metody <xref:System.Data.DataRow> aby zwracało tablicę wierszy.</span><span class="sxs-lookup"><span data-stu-id="a591e-192">Each relation is then used as an argument in the <xref:System.Data.DataRow.GetChildRows%2A> method of the <xref:System.Data.DataRow> to return an array of rows.</span></span> <span data-ttu-id="a591e-193">Następnie wydrukowaniu wartość każdej kolumny w wierszu.</span><span class="sxs-lookup"><span data-stu-id="a591e-193">The value of each column in the row is then printed.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.ChildRelations Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ChildRelations Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ChildRelations Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ChildRelations Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.ParentRelations" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a591e-194">Czyści <see cref="T:System.Data.DataTable" /> wszystkie dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-194">Clears the <see cref="T:System.Data.DataTable" /> of all data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-195">Zostaną usunięte wszystkie wiersze we wszystkich tabelach.</span><span class="sxs-lookup"><span data-stu-id="a591e-195">All rows in all tables are removed.</span></span> <span data-ttu-id="a591e-196">Wyjątek jest generowany, jeśli tabela zawiera wszystkie relacje podrzędne wymuszone, powodujących wiersze podrzędne być oddzielony.</span><span class="sxs-lookup"><span data-stu-id="a591e-196">An exception is generated if the table has any enforced child relations that would cause child rows to be orphaned.</span></span>  
  
 <span data-ttu-id="a591e-197">Jeśli <xref:System.Data.DataSet> jest powiązany z <xref:System.Xml.XmlDataDocument>, wywoływania <xref:System.Data.DataSet.Clear%2A?displayProperty=nameWithType> lub <xref:System.Data.DataTable.Clear%2A?displayProperty=nameWithType> zgłasza <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="a591e-197">If the <xref:System.Data.DataSet> is bound to an <xref:System.Xml.XmlDataDocument>, calling <xref:System.Data.DataSet.Clear%2A?displayProperty=nameWithType> or <xref:System.Data.DataTable.Clear%2A?displayProperty=nameWithType> raises the <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="a591e-198">Aby tego uniknąć, przechodzenie przez każdej tabeli, usunięcie każdego wiersza, w jednym naraz.</span><span class="sxs-lookup"><span data-stu-id="a591e-198">To avoid this situation, traverse each table, removing each row one at a time.</span></span> <span data-ttu-id="a591e-199">Jeśli używasz <xref:System.Data.DataTable.NewRow%2A> Aby utworzyć nowe wiersze, wiersze muszą zostać przetworzone przed wywołaniem <xref:System.Data.DataTable.Clear%2A>.</span><span class="sxs-lookup"><span data-stu-id="a591e-199">When you use <xref:System.Data.DataTable.NewRow%2A> to create new rows, the rows must be processed before you call <xref:System.Data.DataTable.Clear%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-200">Poniższy przykład czyści wszystkie dane w tabeli.</span><span class="sxs-lookup"><span data-stu-id="a591e-200">The following example clears the table of all data.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataTable Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.DataTable Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::DataTable ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a591e-201">Struktura klonów <see cref="T:System.Data.DataTable" />, wraz ze wszystkimi <see cref="T:System.Data.DataTable" /> schematy i ograniczeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-201">Clones the structure of the <see cref="T:System.Data.DataTable" />, including all <see cref="T:System.Data.DataTable" /> schemas and constraints.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a591e-202">Nowy <see cref="T:System.Data.DataTable" /> z tego samego schematu, ponieważ bieżący <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-202">A new <see cref="T:System.Data.DataTable" /> with the same schema as the current <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-203">Jeśli zostały uzyskane tych klas, klonu będzie również tej samej klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="a591e-203">If these classes have been derived, the clone will also be of the same derived classes.</span></span>  
  
 <span data-ttu-id="a591e-204">Tworzy nowy klon <xref:System.Data.DataTable> z taką samą strukturę co oryginalny <xref:System.Data.DataTable>, ale nie kopiuje danych (nowego <xref:System.Data.DataTable> nie będzie zawierać `DataRows`).</span><span class="sxs-lookup"><span data-stu-id="a591e-204">Clone creates a new <xref:System.Data.DataTable> with the same structure as the original <xref:System.Data.DataTable>, but does not copy any data (the new <xref:System.Data.DataTable> will not contain any `DataRows`).</span></span> <span data-ttu-id="a591e-205">Aby skopiować struktury i danych do nowego <xref:System.Data.DataTable>, użyj <xref:System.Data.DataTable.Copy%2A>.</span><span class="sxs-lookup"><span data-stu-id="a591e-205">To copy both the structure and data into a new <xref:System.Data.DataTable>, use <xref:System.Data.DataTable.Copy%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-206">W poniższym przykładzie pokazano, jak zaktualizować strukturę i ograniczenia tabeli docelowej po wykonaniu DataTable.Clone.</span><span class="sxs-lookup"><span data-stu-id="a591e-206">The following sample demonstrates how to update the structure and constraints of the destination table after you execute DataTable.Clone.</span></span> <span data-ttu-id="a591e-207">Klasa ClonedDataTable zwróci tabeli docelowej i zawiera wszystkie zdarzenia aktualizacji.</span><span class="sxs-lookup"><span data-stu-id="a591e-207">The ClonedDataTable class will return a destination table and includes all the updating events.</span></span> <span data-ttu-id="a591e-208">Po klonowania zmiany struktury tabeli źródłowej nie zostaną odzwierciedlone w tabeli docelowej.</span><span class="sxs-lookup"><span data-stu-id="a591e-208">After the clone, structure changes in the source table won’t be reflected in the destination table.</span></span> <span data-ttu-id="a591e-209">W szczególności zostanie w tym przykładzie:</span><span class="sxs-lookup"><span data-stu-id="a591e-209">Specifically, this sample will:</span></span>  
  
-   <span data-ttu-id="a591e-210">Zaktualizuj zmiany kolumny w tabeli źródłowej.</span><span class="sxs-lookup"><span data-stu-id="a591e-210">Update the changes of the columns in source table.</span></span>  
  
-   <span data-ttu-id="a591e-211">Zaktualizuj zmiany UniqueConstraint w tabeli źródłowej.</span><span class="sxs-lookup"><span data-stu-id="a591e-211">Update the changes of the UniqueConstraint in source table.</span></span>  
  
-   <span data-ttu-id="a591e-212">Zaktualizuj zmiany ForeignKeyConstraint w tabeli źródłowej.</span><span class="sxs-lookup"><span data-stu-id="a591e-212">Update the changes of the ForeignKeyConstraint in source table.</span></span>  
  
 <span data-ttu-id="a591e-213">C# i Visual Basic projektów z tym przykładowym kodzie można znaleźć w [przykłady kodu dewelopera](http://code.msdn.microsoft.com/site/search?f%5B0%5D.Type=SearchText&f%5B0%5D.Value=How%20to%20automically%20update%20the%20structure%20of%20a%20cloned%20DataTable).</span><span class="sxs-lookup"><span data-stu-id="a591e-213">C# and Visual Basic projects with this code sample can be found on [Developer Code Samples](http://code.msdn.microsoft.com/site/search?f%5B0%5D.Type=SearchText&f%5B0%5D.Value=How%20to%20automically%20update%20the%20structure%20of%20a%20cloned%20DataTable).</span></span>  
  
```csharp  
using System;  
using System.Linq;  
using System.Data;  
using System.ComponentModel;  
  
class Program {  
   static void Main(string[] args) {  
      DataTable courses = NewCourseDataTable();  
      Console.WriteLine("This is the source table:");  
      WriteDataTable(courses);  
  
      ClonedDataTable clonedResult = new ClonedDataTable(courses);  
      DataTable clonedCourses = clonedResult.DestinationTable;  
      Console.WriteLine("This is the destination table:");  
      WriteDataTable(clonedCourses);  
  
      // Add the events of updating column collection into the source table.  
      clonedResult.UpdateAddedColumn();  
      clonedResult.UpdateDeletedColumn();  
      // Add a DataColumn in source table.  
      DataColumn columnCreidts = new DataColumn("Credits", typeof(Int32));  
      courses.Columns.Add(columnCreidts);  
      Console.WriteLine("After add a column in source table, it's the result in the destination:");  
      WriteDataTable(clonedCourses);  
  
      // Add the event of updating UniqueConstraint into the source table.  
      clonedResult.UpdateUniqueConstraint();  
  
      // Add the unique constraint in source table.  
      UniqueConstraint uniqueConstraint = new UniqueConstraint(courses.Columns["CourseId"]);  
      courses.Constraints.Add(uniqueConstraint);  
  
      Console.WriteLine(@"If we add the unique constraint in source table and then insert the duplicate   
rows into the destination table, we will get the following error:");  
      InsertDuplicateData(clonedCourses);  
      Console.WriteLine();  
  
      // Add the event of updating ForeignKeyConstraint into the source table.  
      clonedResult.UpdateForeignKeyConstraint();  
  
      // Add the ForeignKeyConstraint into the source table.  
      DataTable deparments = NewDeparmentDataTable();  
      DataSet dataset = new DataSet();  
  
      dataset.Tables.Add(courses);  
      dataset.Tables.Add(clonedCourses);  
      dataset.Tables.Add(deparments);  
  
      ForeignKeyConstraint foreignKey = new ForeignKeyConstraint(deparments.Columns["DepartmentId"], courses.Columns["DepartmentId"]);  
      courses.Constraints.Add(foreignKey);  
  
      Console.WriteLine(@"If we add the foreign key constraint in source table and then insert a row   
without the parent  into the destination table, we will get the following error:");  
      InsertNoParentRow(clonedCourses);  
      Console.WriteLine();  
  
      Console.WriteLine("Please press any key to exit...");  
      Console.ReadKey();  
   }  
  
   static private DataTable NewCourseDataTable() {  
      DataTable newTable = new DataTable();  
  
      DataColumn[] columns ={   
                                      new DataColumn("CourseId", typeof(String)),  
                                      new DataColumn("CourseName",typeof(String)),                                        
                                      new DataColumn("DepartmentId", typeof(Int32))  
                                  };  
  
      newTable.Columns.AddRange(columns);  
  
      newTable.Rows.Add("C1045", "Calculus", 7);  
      newTable.Rows.Add("C1061", "Physics", 1);  
      newTable.Rows.Add("C2021", "Composition", 2);  
      newTable.Rows.Add("C2042", "Literature", 2);  
  
      return newTable;  
   }  
  
   static private DataTable NewDeparmentDataTable() {  
      DataTable newTable = new DataTable();  
  
      DataColumn[] columns ={   
                                      new DataColumn("DepartmentId", typeof(Int32)),  
                                      new DataColumn("Name",typeof(String)),  
                                  };  
  
      newTable.Columns.AddRange(columns);  
  
      newTable.Rows.Add(1, "Engineering");  
      newTable.Rows.Add(2, "English");  
      newTable.Rows.Add(4, "Economics");  
      newTable.Rows.Add(7, "Mathematics");  
  
      return newTable;  
   }  
  
   static private void WriteDataTable(DataTable table) {  
      if (table == null)  
         return;  
  
      foreach (DataColumn column in table.Columns) {  
         Console.Write("{0,-15}", column.ColumnName);  
      }  
      Console.WriteLine();  
  
      foreach (DataRow row in table.Rows) {  
         for (int i = 0; i < table.Columns.Count; i++)  
            Console.Write("{0,-15}", row[i].ToString());  
         Console.WriteLine();  
      }  
  
      Console.WriteLine();  
   }  
  
   static private void InsertDuplicateData(DataTable table) {  
      try {  
         table.Rows.Add("C1045", "Calculus", 7);  
         table.Rows.Add("C1045", "Calculus", 7);  
      } catch (Exception e) {  
         Console.WriteLine("\"" + e.Message + "\"");  
      }  
   }  
  
   private static void InsertNoParentRow(DataTable table) {  
      try {  
         table.Rows.Add("C1061", "Physics", 11);  
      } catch (Exception e) {  
         Console.WriteLine("\"" + e.Message + "\"");  
      }  
   }  
}  
  
public class ClonedDataTable {  
   private DataTable sourceTable;  
   private DataTable destinationTable;  
  
   public ClonedDataTable(DataTable source) {  
      sourceTable = source;  
      // set the cloned result  
      destinationTable = sourceTable.Clone();  
   }  
  
   public void UpdateAddedColumn() {  
      sourceTable.Columns.CollectionChanged += new CollectionChangeEventHandler(ColumnAdded);  
   }  
  
   public void UpdateDeletedColumn() {  
      sourceTable.Columns.CollectionChanged += new CollectionChangeEventHandler(ColumnDeleted);  
   }  
  
   public void UpdateUniqueConstraint() {  
      sourceTable.Constraints.CollectionChanged += new CollectionChangeEventHandler(UniqueConstraint_Changed);  
   }  
  
   public void UpdateForeignKeyConstraint() {  
      sourceTable.Constraints.CollectionChanged += new CollectionChangeEventHandler(ForeignKeyConstraint_Changed);  
   }  
  
   // After the source table adds a column, the method will add the same column in the destination table.  
   void ColumnAdded(object sender, System.ComponentModel.CollectionChangeEventArgs e) {  
      if (e.Action == CollectionChangeAction.Add) {  
         DataColumn column = e.Element as DataColumn;  
  
         if (column != null) {  
            DataColumn newColumn = new DataColumn(column.ColumnName, column.DataType, column.Expression, column.ColumnMapping);  
  
            if (!destinationTable.Columns.Contains(newColumn.ColumnName))  
               destinationTable.Columns.Add(newColumn);  
         }  
      }  
   }  
  
   // After the source table deletes a column, the method will delete the same column in the destination table.  
   void ColumnDeleted(object sender, CollectionChangeEventArgs e) {  
      if (e.Action == CollectionChangeAction.Remove) {  
         DataColumn column = e.Element as DataColumn;  
  
         if (column != null)  
            if (destinationTable.Columns.Contains(column.ColumnName))  
               destinationTable.Columns.Remove(column.ColumnName);  
      }  
   }  
  
   // After the source table changes the UniqueConstraint, this method changes the same UniqueConstraint in destination table.        
   void UniqueConstraint_Changed(object sender, CollectionChangeEventArgs e) {  
      UniqueConstraint constraint = e.Element as UniqueConstraint;  
  
      if (constraint == null)  
         return;  
  
      String constraintName = constraint.ConstraintName;  
  
      if (e.Action == CollectionChangeAction.Add) {  
         DataColumn[] columns = new DataColumn[constraint.Columns.Count()];  
         Boolean isPrimaryKey = constraint.IsPrimaryKey;  
  
         // Get the columns used in new constraint from the destiantion table.  
         for (Int32 i = 0; i < constraint.Columns.Count(); i++) {  
            String columnName = constraint.Columns[i].ColumnName;  
  
            if (destinationTable.Columns.Contains(columnName))  
               columns[i] = destinationTable.Columns[columnName];  
            else  
               return;  
         }  
  
         UniqueConstraint newConstraint = new UniqueConstraint(constraintName, columns, isPrimaryKey);  
  
         if (!destinationTable.Constraints.Contains(constraintName))  
            destinationTable.Constraints.Add(newConstraint);  
  
      } else if (e.Action == CollectionChangeAction.Remove)  
         if (destinationTable.Constraints.Contains(constraintName))  
            destinationTable.Constraints.Remove(constraintName);  
   }  
  
   // After the source table changes the ForeignKeyConstraint, this method changes    
   // the same ForeignKeyConstraint in the destination table.  
   void ForeignKeyConstraint_Changed(object sender, CollectionChangeEventArgs e) {  
      ForeignKeyConstraint constraint = e.Element as ForeignKeyConstraint;  
  
      if (constraint == null)  
         return;  
  
      // If the source and destination are not in the same DataSet, don't change the ForeignKeyConstraint.  
      if (sourceTable.DataSet != destinationTable.DataSet)  
         return;  
  
      String constraintName = constraint.ConstraintName;  
  
      if (e.Action == CollectionChangeAction.Add) {  
         DataColumn[] columns = new DataColumn[constraint.Columns.Count()];  
         DataColumn[] parentColumns = constraint.RelatedColumns;  
  
         // Get the columns used in new constraint from the destination table.  
         for (int i = 0; i < constraint.Columns.Count(); i++) {  
            String columnName = constraint.Columns[i].ColumnName;  
  
            if (destinationTable.Columns.Contains(columnName))  
               columns[i] = destinationTable.Columns[columnName];  
            else  
               return;  
         }  
  
         ForeignKeyConstraint newConstraint = new ForeignKeyConstraint(constraintName, parentColumns, columns);  
         newConstraint.AcceptRejectRule = constraint.AcceptRejectRule;  
         newConstraint.DeleteRule = constraint.DeleteRule;  
         newConstraint.UpdateRule = constraint.UpdateRule;  
  
         if (!destinationTable.Constraints.Contains(constraintName))  
            destinationTable.Constraints.Add(newConstraint);  
      } else if (e.Action == CollectionChangeAction.Remove)  
         if (destinationTable.Constraints.Contains(constraintName))  
            destinationTable.Constraints.Remove(constraintName);  
   }  
  
   // return the destination table.  
   public DataTable DestinationTable {  
      get { return destinationTable; }  
   }  
}  
```  
  
 <span data-ttu-id="a591e-214">W tym przykładzie pokazano, jak modyfikować danych w DataTable i zaktualizować źródła danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-214">This sample shows how to modify data in a DataTable and update the data source.</span></span>  
  
 <span data-ttu-id="a591e-215">Najpierw utwórz bazę danych:</span><span class="sxs-lookup"><span data-stu-id="a591e-215">First, create a database:</span></span>  
  
```  
USE [master]  
GO  
  
CREATE DATABASE [MySchool]   
  
GO  
  
USE [MySchool]  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Course]([CourseID] [nvarchar](10) NOT NULL,  
[Year] [smallint] NOT NULL,  
[Title] [nvarchar](100) NOT NULL,  
[Credits] [int] NOT NULL,  
[DepartmentID] [int] NOT NULL,  
 CONSTRAINT [PK_Course] PRIMARY KEY CLUSTERED   
(  
[CourseID] ASC,  
[Year] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Department]([DepartmentID] [int] IDENTITY(1,1) NOT NULL,  
[Name] [nvarchar](50) NOT NULL,  
[Budget] [money] NOT NULL,  
[StartDate] [datetime] NOT NULL,  
[Administrator] [int] NULL,  
 CONSTRAINT [PK_Department] PRIMARY KEY CLUSTERED   
(  
[DepartmentID] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1045', 2012, N'Calculus', 4, 7)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1061', 2012, N'Physics', 4, 1)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2021', 2012, N'Composition', 3, 2)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2042', 2012, N'Literature', 4, 2)  
  
SET IDENTITY_INSERT [dbo].[Department] ON   
  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (1, N'Engineering', 350000.0000, CAST(0x0000999C00000000 AS DateTime), 2)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (2, N'English', 120000.0000, CAST(0x0000999C00000000 AS DateTime), 6)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (4, N'Economics', 200000.0000, CAST(0x0000999C00000000 AS DateTime), 4)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (7, N'Mathematics', 250024.0000, CAST(0x0000999C00000000 AS DateTime), 3)  
SET IDENTITY_INSERT [dbo].[Department] OFF  
  
ALTER TABLE [dbo].[Course]  WITH CHECK ADD  CONSTRAINT [FK_Course_Department] FOREIGN KEY([DepartmentID])  
REFERENCES [dbo].[Department] ([DepartmentID])  
GO  
ALTER TABLE [dbo].[Course] CHECK CONSTRAINT [FK_Course_Department]  
GO  
```  
  
 <span data-ttu-id="a591e-216">Teraz można skompilować i uruchomić próbki.</span><span class="sxs-lookup"><span data-stu-id="a591e-216">You can now compile and run the sample.</span></span> <span data-ttu-id="a591e-217">[Jak zmodyfikować danych w tabeli DataTable i zaktualizuj go do źródła danych](http://code.msdn.microsoft.com/How-to-modify-data-in-c68d35f4) projekty Visual Basic i C# tego przykładu.</span><span class="sxs-lookup"><span data-stu-id="a591e-217">[How to modify data in DataTable and update to the data source](http://code.msdn.microsoft.com/How-to-modify-data-in-c68d35f4) has Visual Basic and C# projects of this sample.</span></span>  
  
```csharp  
using System;  
using System.Data;  
using System.Data.SqlClient;  
  
class Program {  
   static void Main(string[] args) {  
  
   string MySchoolConnectionString = "Data Source=(local);Initial Catalog=MySchool;Integrated Security=True";  
  
      // Get Data  
      String selectString =  
       @"Select [CourseID],[Year],[Title],[Credits],[DepartmentID] From [dbo].[Course];  
               Select [DepartmentID],[Name],[Budget],[StartDate],[Administrator] From [dbo].[Department] ";  
  
      DataSet dataSet = new DataSet();  
      DataTable course = dataSet.Tables.Add("Course");  
      DataTable department = dataSet.Tables.Add("Department");  
  
      Console.WriteLine("Get data from database:");  
      GetDataTables(MySchoolConnectionString, selectString, dataSet, course, department);  
      Console.WriteLine();  
  
      // Use DataTable Edits to edit the data  
      String updateString =  
              @"Update [dbo].[Course] Set [Credits]=@Credits Where [CourseID]=@CourseID;";  
  
      course.ColumnChanged += OnColumnChanged;  
  
      // Set the Credits of first row is negative value, and set the Credits of second row is plus.  
      ChangeCredits(course, course.Rows[0], -1);  
      ChangeCredits(course, course.Rows[1], 11);  
  
      UpdateDataTables(MySchoolConnectionString, updateString, dataSet, "Course",  
          new SqlParameter("@CourseID", SqlDbType.NVarChar, 10, "CourseID"),  
          new SqlParameter("@Credits", SqlDbType.Int, 4, "Credits"));  
      Console.WriteLine("Only the Credits of second row is changed.");  
      ShowDataTable(course);  
      Console.WriteLine();  
  
      // Delete and Remove from DataTable  
      // Create the foreign key constraint, and set the DeleteRule with Cascade.  
      ForeignKeyConstraint courseDepartFK = new ForeignKeyConstraint("CourseDepartFK", department.Columns["DepartmentID"], course.Columns["DepartmentID"]);  
      courseDepartFK.DeleteRule = Rule.Cascade;  
      courseDepartFK.UpdateRule = Rule.Cascade;  
      courseDepartFK.AcceptRejectRule = AcceptRejectRule.None;  
      course.Constraints.Add(courseDepartFK);  
  
      String deleteString = @"Delete From [dbo].[Course] Where [CourseID]=@CourseID;";  
  
      department.Rows[0].Delete();  
      Console.WriteLine("If One row in Department table is deleted, the related rows in Course table will also be deleted.");  
      Console.WriteLine("Department DataTable:");  
      ShowDataTable(department);  
      Console.WriteLine();  
      Console.WriteLine("Course DataTable:");  
      ShowDataTable(course);  
      Console.WriteLine();  
      // Update the delete operation  
      DeleteDataTables(MySchoolConnectionString, deleteString, dataSet, "Course",  
          new SqlParameter("@CourseID", SqlDbType.NVarChar, 10, "CourseID"));  
      Console.WriteLine("After delete operation:");  
      Console.WriteLine("Course DataTable:");  
      ShowDataTable(course);  
      Console.WriteLine();  
  
      course.Rows.RemoveAt(0);  
      Console.WriteLine("Now we remove one row from Course:");  
      ShowDataTable(course);  
      DeleteDataTables(MySchoolConnectionString, deleteString, dataSet, "Course",  
          new SqlParameter("@CourseID", SqlDbType.NVarChar, 10, "CourseID"));  
   }  
  
   // Use SqlDataAdapter to get data.  
   private static void GetDataTables(String connectionString, String selectString,  
       DataSet dataSet, params DataTable[] tables) {  
      using (SqlDataAdapter adapter = new SqlDataAdapter()) {  
         adapter.SelectCommand = new SqlCommand(selectString);  
         adapter.SelectCommand.Connection = new SqlConnection(connectionString);  
  
         adapter.Fill(0, 0, tables);  
  
         foreach (DataTable table in dataSet.Tables) {  
            Console.WriteLine("Data in {0}:", table.TableName);  
            ShowDataTable(table);  
            Console.WriteLine();  
         }  
      }  
   }  
  
   // Use SqlDataAdapter to update the updata operation.  
   private static void UpdateDataTables(String connectionString, String updateString,  
       DataSet dataSet, String tableName, params SqlParameter[] parameters) {  
      using (SqlDataAdapter adapter = new SqlDataAdapter()) {  
         adapter.UpdateCommand = new SqlCommand(updateString);  
         adapter.UpdateCommand.Parameters.AddRange(parameters);  
         adapter.UpdateCommand.Connection = new SqlConnection(connectionString);  
  
         adapter.Update(dataSet, tableName);  
      }  
   }  
  
   // Use SqlDataAdapter to update delete operation.  
   private static void DeleteDataTables(String connectionString, String deleteString,  
       DataSet dataSet, String tableName, params SqlParameter[] parameters) {  
      using (SqlDataAdapter adapter = new SqlDataAdapter()) {  
         adapter.DeleteCommand = new SqlCommand(deleteString);  
         adapter.DeleteCommand.Parameters.AddRange(parameters);  
         adapter.DeleteCommand.Connection = new SqlConnection(connectionString);  
  
         adapter.Update(dataSet, tableName);  
      }  
   }  
  
   // Use DataTable Edits to modify the data.  
   private static void ChangeCredits(DataTable table, DataRow row, Int32 credits) {  
      row.BeginEdit();  
      Console.WriteLine("We change row {0}", table.Rows.IndexOf(row));  
      row["Credits"] = credits;  
      row.EndEdit();  
   }  
  
   // The method will be invoked when the value in DataTable is changed.  
   private static void OnColumnChanged(Object sender, DataColumnChangeEventArgs args) {  
      Int32 credits = 0;  
      // If Credits is changed and the value is negative, we'll cancel the edit.  
      if ((args.Column.ColumnName == "Credits") &&  
          (!Int32.TryParse(args.ProposedValue.ToString(), out credits) || credits < 0)) {  
         Console.WriteLine("The value of Credits is invalid. Edit canceled.");  
         args.Row.CancelEdit();  
      }  
   }  
  
   // Display the column and value of DataTable.  
   private static void ShowDataTable(DataTable table) {  
      foreach (DataColumn col in table.Columns) {  
         Console.Write("{0,-14}", col.ColumnName);  
      }  
      Console.WriteLine("{0,-14}", "RowState");  
  
      foreach (DataRow row in table.Rows) {  
         if (row.RowState == DataRowState.Deleted) {  
            foreach (DataColumn col in table.Columns) {  
               if (col.DataType.Equals(typeof(DateTime)))  
                  Console.Write("{0,-14:d}", row[col, DataRowVersion.Original]);  
               else if (col.DataType.Equals(typeof(Decimal)))  
                  Console.Write("{0,-14:C}", row[col, DataRowVersion.Original]);  
               else  
                  Console.Write("{0,-14}", row[col, DataRowVersion.Original]);  
            }  
         }  
         else {  
            foreach (DataColumn col in table.Columns) {  
               if (col.DataType.Equals(typeof(DateTime)))  
                  Console.Write("{0,-14:d}", row[col]);  
               else if (col.DataType.Equals(typeof(Decimal)))  
                  Console.Write("{0,-14:C}", row[col]);  
               else  
                  Console.Write("{0,-14}", row[col]);  
            }  
         }  
         Console.WriteLine("{0,-14}", row.RowState);  
      }  
   }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.Copy" />
      </Docs>
    </Member>
    <Member MemberName="ColumnChanged">
      <MemberSignature Language="C#" Value="public event System.Data.DataColumnChangeEventHandler ColumnChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataColumnChangeEventHandler ColumnChanged" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.ColumnChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnChanged As DataColumnChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataColumnChangeEventHandler ^ ColumnChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumnChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-218">Występuje po zmianie wartości dla określonego <see cref="T:System.Data.DataColumn" /> w <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-218">Occurs after a value has been changed for the specified <see cref="T:System.Data.DataColumn" /> in a <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-219">Aby uzyskać więcej informacji, zobacz [obsługi zdarzeń DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span><span class="sxs-lookup"><span data-stu-id="a591e-219">For more information, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.ColumnChanged Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ColumnChanged Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ColumnChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ColumnChanged Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumnChangeEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ColumnChanging">
      <MemberSignature Language="C#" Value="public event System.Data.DataColumnChangeEventHandler ColumnChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataColumnChangeEventHandler ColumnChanging" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.ColumnChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnChanging As DataColumnChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataColumnChangeEventHandler ^ ColumnChanging;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumnChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-220">Występuje po zmianie wartości dla określonego <see cref="T:System.Data.DataColumn" /> w <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-220">Occurs when a value is being changed for the specified <see cref="T:System.Data.DataColumn" /> in a <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-221">Aby uzyskać więcej informacji, zobacz [obsługi zdarzeń DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span><span class="sxs-lookup"><span data-stu-id="a591e-221">For more information, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.ColumnChanging Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ColumnChanging Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ColumnChanging Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ColumnChanging Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public System.Data.DataColumnCollection Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataColumnCollection Columns" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As DataColumnCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataColumnCollection ^ Columns { System::Data::DataColumnCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataColumnCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-222">Pobiera kolekcję kolumn, które należą do tej tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-222">Gets the collection of columns that belong to this table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a591e-223">A <see cref="T:System.Data.DataColumnCollection" /> zawierający kolekcję <see cref="T:System.Data.DataColumn" /> obiektów dla tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-223">A <see cref="T:System.Data.DataColumnCollection" /> that contains the collection of <see cref="T:System.Data.DataColumn" /> objects for the table.</span>
          </span>
          <span data-ttu-id="a591e-224">Zwracany jest pustą kolekcję, jeśli nie <see cref="T:System.Data.DataColumn" /> istnieją obiekty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-224">An empty collection is returned if no <see cref="T:System.Data.DataColumn" /> objects exist.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-225"><xref:System.Data.DataColumnCollection> Określa schemat tabeli przez określenie typu danych każdej kolumny.</span><span class="sxs-lookup"><span data-stu-id="a591e-225">The <xref:System.Data.DataColumnCollection> determines the schema of a table by defining the data type of each column.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-226">Poniższy przykład drukuje każda wartość każdego wiersza w tabeli za pomocą <xref:System.Data.DataTable.Columns%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="a591e-226">The following example prints each value of each row in a table using the <xref:System.Data.DataTable.Columns%2A> property.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Columns Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Columns Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Columns Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Columns Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compute">
      <MemberSignature Language="C#" Value="public object Compute (string expression, string filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Compute(string expression, string filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Compute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compute (expression As String, filter As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Compute(System::String ^ expression, System::String ^ filter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="a591e-227">Wyrażenie do obliczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-227">The expression to compute.</span>
          </span>
        </param>
        <param name="filter">
          <span data-ttu-id="a591e-228">Filtr, aby ograniczyć liczbę wierszy, które oceny w wyrażeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-228">The filter to limit the rows that evaluate in the expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-229">Oblicza danego wyrażenia na bieżącym wierszy, na które spełniać kryteria filtru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-229">Computes the given expression on the current rows that pass the filter criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a591e-230">
            <see cref="T:System.Object" />, Ustaw dla wyniku obliczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-230">An <see cref="T:System.Object" />, set to the result of the computation.</span>
          </span>
          <span data-ttu-id="a591e-231">Jeśli wyrażenie ma wartość null, wartość zwracana będzie <see cref="F:System.DBNull.Value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-231">If the expression evaluates to null, the return value will be <see cref="F:System.DBNull.Value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-232">`expression` Parametr wymaga funkcji agregującej.</span><span class="sxs-lookup"><span data-stu-id="a591e-232">The `expression` parameter requires an aggregate function.</span></span> <span data-ttu-id="a591e-233">Na przykład Oto wyrażenia prawnych:</span><span class="sxs-lookup"><span data-stu-id="a591e-233">For example, the following is a legal expression:</span></span>  
  
 `Count(Quantity)`  
  
 <span data-ttu-id="a591e-234">Ale nie jest to wyrażenie:</span><span class="sxs-lookup"><span data-stu-id="a591e-234">But this expression is not:</span></span>  
  
 `Sum (Quantity * UnitPrice)`  
  
 <span data-ttu-id="a591e-235">Wykonaj operację na dwóch lub więcej kolumn, należy utworzyć <xref:System.Data.DataColumn>, ustaw jej <xref:System.Data.DataColumn.Expression%2A> odpowiedniego wyrażenia, a wyrażenie agregujące w wierszach kolumny dla właściwości.</span><span class="sxs-lookup"><span data-stu-id="a591e-235">If you must perform an operation on two or more columns, you should create a <xref:System.Data.DataColumn>, set its <xref:System.Data.DataColumn.Expression%2A> property to an appropriate expression, and use an aggregate expression on the resulting column.</span></span> <span data-ttu-id="a591e-236">W takim przypadku podane <xref:System.Data.DataColumn> z nazwy "Suma" i <xref:System.Data.DataColumn.Expression%2A> właściwość to:</span><span class="sxs-lookup"><span data-stu-id="a591e-236">In that case, given a <xref:System.Data.DataColumn> with the name "total", and the <xref:System.Data.DataColumn.Expression%2A> property set to this:</span></span>  
  
 `"Quantity * UnitPrice"`  
  
 <span data-ttu-id="a591e-237">Argument wyrażenia <xref:System.Data.DataTable.Compute%2A> metoda będzie wówczas to:</span><span class="sxs-lookup"><span data-stu-id="a591e-237">The expression argument for the <xref:System.Data.DataTable.Compute%2A> method would then be this:</span></span>  
  
 `Sum(total)`  
  
 <span data-ttu-id="a591e-238">Drugi parametr `filter`, określa wiersze, które są używane w wyrażeniu.</span><span class="sxs-lookup"><span data-stu-id="a591e-238">The second parameter, `filter`, determines which rows are used in the expression.</span></span> <span data-ttu-id="a591e-239">Na przykład jeśli tabela zawiera kolumnę dat o nazwie "colDate", można ograniczyć wiersze z następującym wyrażeniem:</span><span class="sxs-lookup"><span data-stu-id="a591e-239">For example, if the table contains a date column named "colDate", you could limit the rows with the following expression:</span></span>  
  
 `colDate > 1/1/99 AND colDate < 17/1/99`  
  
 <span data-ttu-id="a591e-240">W przypadku reguł dotyczących tworzenia wyrażenia w obydwu tych parametrów, zobacz <xref:System.Data.DataColumn.Expression%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="a591e-240">For rules on creating expressions for both parameters, see the <xref:System.Data.DataColumn.Expression%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-241">Poniższy przykład sumuje wartości kolumny o nazwie "Suma" sprzedawców, których numer identyfikacyjny jest pięć.</span><span class="sxs-lookup"><span data-stu-id="a591e-241">The following example sums the values of a column named "Total", for the salesperson whose identification number is five.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Compute Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Compute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Compute Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Compute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Constraints">
      <MemberSignature Language="C#" Value="public System.Data.ConstraintCollection Constraints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.ConstraintCollection Constraints" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Constraints" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Constraints As ConstraintCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::ConstraintCollection ^ Constraints { System::Data::ConstraintCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConstraintCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-242">Pobiera kolekcję ograniczenia obsługiwanego przez tej tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-242">Gets the collection of constraints maintained by this table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a591e-243">A <see cref="T:System.Data.ConstraintCollection" /> zawierający kolekcję <see cref="T:System.Data.Constraint" /> obiektów dla tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-243">A <see cref="T:System.Data.ConstraintCollection" /> that contains the collection of <see cref="T:System.Data.Constraint" /> objects for the table.</span>
          </span>
          <span data-ttu-id="a591e-244">Zwracany jest pustą kolekcję, jeśli nie <see cref="T:System.Data.Constraint" /> istnieją obiekty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-244">An empty collection is returned if no <see cref="T:System.Data.Constraint" /> objects exist.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-245">A <xref:System.Data.ForeignKeyConstraint> ogranicza akcję wykonaną gdy usunąć lub zaktualizować wartości w kolumnie (lub kolumny).</span><span class="sxs-lookup"><span data-stu-id="a591e-245">A <xref:System.Data.ForeignKeyConstraint> restricts the action performed when a value in a column (or columns) is either deleted or updated.</span></span> <span data-ttu-id="a591e-246">Takie ograniczenie jest przeznaczony do użycia z kolumn klucza podstawowego.</span><span class="sxs-lookup"><span data-stu-id="a591e-246">Such a constraint is intended to be used with primary key columns.</span></span> <span data-ttu-id="a591e-247">W relacji nadrzędny/podrzędny między dwiema tabelami usunięcie wartość z tabeli nadrzędnej może wpłynąć na wiersze podrzędne w jednym z następujących sposobów.</span><span class="sxs-lookup"><span data-stu-id="a591e-247">In a parent/child relationship between two tables, deleting a value from the parent table can affect the child rows in one of the following ways.</span></span>  
  
-   <span data-ttu-id="a591e-248">Podrzędne, które wiersze mogą być również usuwane (Akcja kaskadowych).</span><span class="sxs-lookup"><span data-stu-id="a591e-248">The child rows can also be deleted (a cascading action).</span></span>  
  
-   <span data-ttu-id="a591e-249">Wartości w kolumnie podrzędnej (lub kolumny) może być równa wartości null.</span><span class="sxs-lookup"><span data-stu-id="a591e-249">The values in the child column (or columns) can be set to null values.</span></span>  
  
-   <span data-ttu-id="a591e-250">Wartości domyślne można ustawić wartości w kolumnie podrzędnej (lub kolumny).</span><span class="sxs-lookup"><span data-stu-id="a591e-250">The values in the child column (or columns) can be set to default values.</span></span>  
  
-   <span data-ttu-id="a591e-251">Może zostać wygenerowany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a591e-251">An exception can be generated.</span></span>  
  
 <span data-ttu-id="a591e-252">A <xref:System.Data.UniqueConstraint> staje się aktywny podczas ustawiania wartości klucza podstawowego nie jest unikatowa wartość.</span><span class="sxs-lookup"><span data-stu-id="a591e-252">A <xref:System.Data.UniqueConstraint> becomes active when attempting to set a value in a primary key to a non-unique value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-253">W poniższym przykładzie dodano <xref:System.Data.ForeignKeyConstraint> do kolekcji ograniczeń.</span><span class="sxs-lookup"><span data-stu-id="a591e-253">The following example adds a <xref:System.Data.ForeignKeyConstraint> to the collection of constraints.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Constraints Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Constraints Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Constraints Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Constraints Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Data.DataTable Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a591e-254">Kopiuje strukturę i dane dla tego <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-254">Copies both the structure and data for this <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a591e-255">Nowy <see cref="T:System.Data.DataTable" /> z taką samą strukturę (schematy tabeli i ograniczenia) oraz dane jako to <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-255">A new <see cref="T:System.Data.DataTable" /> with the same structure (table schemas and constraints) and data as this <see cref="T:System.Data.DataTable" />.</span>
          </span>
          <span data-ttu-id="a591e-256">Jeśli zostały uzyskane tych klas, kopia będzie również tej samej klasy pochodnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-256">If these classes have been derived, the copy will also be of the same derived classes.</span>
          </span>
          <span data-ttu-id="a591e-257">
            <see cref="M:System.Data.DataTable.Copy" /> Tworzy nowy <see cref="T:System.Data.DataTable" /> z taką samą strukturę oraz danych jak oryginał <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-257">
              <see cref="M:System.Data.DataTable.Copy" /> creates a new <see cref="T:System.Data.DataTable" /> with the same structure and data as the original <see cref="T:System.Data.DataTable" />.</span>
          </span>
          <span data-ttu-id="a591e-258">Kopiowanie struktury na nowe <see cref="T:System.Data.DataTable" />, ale nie dane używane przez <see cref="M:System.Data.DataTable.Clone" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-258">To copy the structure to a new <see cref="T:System.Data.DataTable" />, but not the data, use <see cref="M:System.Data.DataTable.Clone" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a591e-259">W poniższym przykładzie użyto <xref:System.Data.DataTable.Copy%2A> metody, aby utworzyć kopię oryginału <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-259">The following example uses the <xref:System.Data.DataTable.Copy%2A> method to create a copy of the original <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="a591e-260">Nazwa przestrzeni nazw nie są zachowywane, jeśli zostało ono odziedziczone z nadrzędnego <xref:System.Data.DataTable> lub <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="a591e-260">The namespace name is not retained if it is inherited from a parent <xref:System.Data.DataTable> or <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Copy Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Copy Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Copy Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Copy Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataView.ToTable" />
        <altmember cref="M:System.Data.DataTable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="CreateDataReader">
      <MemberSignature Language="C#" Value="public System.Data.DataTableReader CreateDataReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTableReader CreateDataReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.CreateDataReader" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDataReader () As DataTableReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTableReader ^ CreateDataReader();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTableReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a591e-261">Zwraca <see cref="T:System.Data.DataTableReader" /> odpowiadający danych w ramach tego <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-261">Returns a <see cref="T:System.Data.DataTableReader" /> corresponding to the data within this <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a591e-262">A <see cref="T:System.Data.DataTableReader" /> zawierających jeden zestaw wyników, odpowiadający źródło <see cref="T:System.Data.DataTable" /> wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-262">A <see cref="T:System.Data.DataTableReader" /> containing one result set, corresponding to the source <see cref="T:System.Data.DataTable" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a591e-263">Tworzy następującej aplikacji konsoli <xref:System.Data.DataTable> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a591e-263">The following console application creates a <xref:System.Data.DataTable> instance.</span></span> <span data-ttu-id="a591e-264">Przykład następnie przekazuje wypełniony <xref:System.Data.DataTable> do procedury, która wywołuje <xref:System.Data.DataTable.CreateDataReader%2A> metodę, która iterację w wynikach zawartych w <xref:System.Data.DataTableReader>.</span><span class="sxs-lookup"><span data-stu-id="a591e-264">The example then passes the filled <xref:System.Data.DataTable> to a procedure that calls the <xref:System.Data.DataTable.CreateDataReader%2A> method, which iterates through the results contained within the <xref:System.Data.DataTableReader>.</span></span>  
  
 [!code-csharp[DataWorks DataTable.CreateDataReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.CreateDataReader/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.CreateDataReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.CreateDataReader/VB/source.vb#1)]  
  
 <span data-ttu-id="a591e-265">W przykładzie przedstawiono następujące wyniki w oknie konsoli:</span><span class="sxs-lookup"><span data-stu-id="a591e-265">The example displays the following output in the console window:</span></span>  
  
 `1 Mary`  
  
 `2 Andy`  
  
 `3 Peter`  
  
 `4 Russ`  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataSet.CreateDataReader" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable CreateInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable CreateInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.CreateInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateInstance () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataTable ^ CreateInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a591e-266">Tworzy nowe wystąpienie klasy <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-266">Creates a new instance of <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a591e-267">Nowe wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-267">The new expression.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSet">
      <MemberSignature Language="C#" Value="public System.Data.DataSet DataSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataSet DataSet" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.DataSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataSet As DataSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataSet ^ DataSet { System::Data::DataSet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-268">Pobiera <see cref="T:System.Data.DataSet" /> do której należy ta tabela.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-268">Gets the <see cref="T:System.Data.DataSet" /> to which this table belongs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a591e-269">
            <see cref="T:System.Data.DataSet" /> Do której należy ta tabela.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-269">The <see cref="T:System.Data.DataSet" /> to which this table belongs.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-270">Jeśli formant jest powiązany z danymi do <xref:System.Data.DataTable>, i tabela należy do <xref:System.Data.DataSet>, aby przejść do <xref:System.Data.DataSet> za pomocą tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="a591e-270">If a control is data bound to a <xref:System.Data.DataTable>, and the table belongs to a <xref:System.Data.DataSet>, you can get to the <xref:System.Data.DataSet> through this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-271">Poniższy przykład zwraca element nadrzędny <xref:System.Data.DataSet> danej tabeli za pomocą <xref:System.Data.DataTable.DataSet%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="a591e-271">The following example returns the parent <xref:System.Data.DataSet> of a given table through the <xref:System.Data.DataTable.DataSet%2A> property.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.DataSet Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.DataSet Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.DataSet Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.DataSet Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultView">
      <MemberSignature Language="C#" Value="public System.Data.DataView DefaultView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataView DefaultView" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.DefaultView" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultView As DataView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataView ^ DefaultView { System::Data::DataView ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-272">Pobiera dostosowany widok tabeli, która może obejmować widok filtrowany lub pozycją kursora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-272">Gets a customized view of the table that may include a filtered view, or a cursor position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a591e-273">
            <see cref="T:System.Data.DataView" /> Skojarzone z <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-273">The <see cref="T:System.Data.DataView" /> associated with the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-274"><xref:System.Data.DataTable.DefaultView%2A> Zwraca <xref:System.Data.DataView> służy do sortowania, filtrować i wyszukiwać <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-274">The <xref:System.Data.DataTable.DefaultView%2A> property returns a <xref:System.Data.DataView> you can use to sort, filter, and search a <xref:System.Data.DataTable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-275">W poniższym przykładzie ustawiono właściwość <xref:System.Data.DataTable> obiektu <xref:System.Data.DataView> za pośrednictwem <xref:System.Data.DataTable.DefaultView%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="a591e-275">The following example sets a property of the <xref:System.Data.DataTable> object's <xref:System.Data.DataView> through the <xref:System.Data.DataTable.DefaultView%2A> property.</span></span> <span data-ttu-id="a591e-276">W przykładzie przedstawiono również powiązanie <xref:System.Windows.Forms.DataGridView> formant <xref:System.Data.DataTable> o nazwie "Dostawcy", które zawiera kolumnę o nazwie "NazwaFirmy".</span><span class="sxs-lookup"><span data-stu-id="a591e-276">The example also shows the binding of a <xref:System.Windows.Forms.DataGridView> control to a <xref:System.Data.DataTable> named "Suppliers" that includes a column named "CompanyName."</span></span>  
  
 [!code-csharp[Classic WebData DataTable.DefaultView Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.DefaultView Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.DefaultView Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.DefaultView Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayExpression">
      <MemberSignature Language="C#" Value="public string DisplayExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayExpression" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.DisplayExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-277">Pobiera lub ustawia wyrażenie zwracające wartość używana do reprezentowania tej tabeli w interfejsie użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-277">Gets or sets the expression that returns a value used to represent this table in the user interface.</span>
          </span>
          <span data-ttu-id="a591e-278">
            <see langword="DisplayExpression" /> Właściwości umożliwia wyświetlanie nazwy tej tabeli w interfejsie użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-278">The <see langword="DisplayExpression" /> property lets you display the name of this table in a user interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a591e-279">Wyświetlany ciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-279">A display string.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Data.DataColumn.Expression" />
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public virtual void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a591e-280">Kończy się inicjowanie <see cref="T:System.Data.DataTable" /> który jest używany w formularzu lub używany przez inny składnik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-280">Ends the initialization of a <see cref="T:System.Data.DataTable" /> that is used on a form or used by another component.</span>
          </span>
          <span data-ttu-id="a591e-281">Inicjowanie występuje w czasie wykonywania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-281">The initialization occurs at run time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-282">Środowisku projektowania programu Visual Studio .NET używa tej metody, aby zakończyć inicjowanie składnik, który jest używany w formularzu lub używany przez inny składnik.</span><span class="sxs-lookup"><span data-stu-id="a591e-282">The Visual Studio .NET design environment uses this method to end the initialization of a component that is used on a form or used by another component.</span></span> <span data-ttu-id="a591e-283"><xref:System.Data.DataTable.BeginInit%2A> Metoda uruchamia inicjowania.</span><span class="sxs-lookup"><span data-stu-id="a591e-283">The <xref:System.Data.DataTable.BeginInit%2A> method starts the initialization.</span></span> <span data-ttu-id="a591e-284">Przy użyciu <xref:System.Data.DataTable.BeginInit%2A> i <xref:System.Data.DataTable.EndInit%2A> metody uniemożliwia użycie przed pełnym zainicjowaniem formantu.</span><span class="sxs-lookup"><span data-stu-id="a591e-284">Using the <xref:System.Data.DataTable.BeginInit%2A> and <xref:System.Data.DataTable.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoadData">
      <MemberSignature Language="C#" Value="public void EndLoadData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndLoadData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.EndLoadData" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndLoadData ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndLoadData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a591e-285">Włącza funkcję powiadomień, indeks konserwacji i ograniczenia po załadowaniu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-285">Turns on notifications, index maintenance, and constraints after loading data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-286">Użyj <xref:System.Data.DataTable.EndLoadData%2A> w połączeniu z <xref:System.Data.DataTable.LoadDataRow%2A> i <xref:System.Data.DataTable.BeginLoadData%2A>.</span><span class="sxs-lookup"><span data-stu-id="a591e-286">Use <xref:System.Data.DataTable.EndLoadData%2A> in conjunction with <xref:System.Data.DataTable.LoadDataRow%2A> and <xref:System.Data.DataTable.BeginLoadData%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendedProperties">
      <MemberSignature Language="C#" Value="public System.Data.PropertyCollection ExtendedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.PropertyCollection ExtendedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.ExtendedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtendedProperties As PropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::PropertyCollection ^ ExtendedProperties { System::Data::PropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.PropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-287">Pobiera kolekcję informacji użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-287">Gets the collection of customized user information.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a591e-288">A <see cref="T:System.Data.PropertyCollection" /> zawiera niestandardowe informacje użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-288">A <see cref="T:System.Data.PropertyCollection" /> that contains custom user information.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-289">Użyj <xref:System.Data.DataTable.ExtendedProperties%2A> Dodawanie niestandardowych informacji do <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-289">Use the <xref:System.Data.DataTable.ExtendedProperties%2A> to add custom information to a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="a591e-290">Dodawanie informacji o `Add` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-290">Add information with the `Add` method.</span></span> <span data-ttu-id="a591e-291">Pobieranie informacji z `Item` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-291">Retrieve information with the `Item` method.</span></span>  
  
 <span data-ttu-id="a591e-292">Rozszerzone właściwości musi być typu <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="a591e-292">Extended properties must be of type <xref:System.String>.</span></span> <span data-ttu-id="a591e-293">Właściwości, które nie są typu ciąg nie są zachowywane podczas <xref:System.Data.DataTable> jest zapisywany w formacie XML.</span><span class="sxs-lookup"><span data-stu-id="a591e-293">Properties that are not of type String are not persisted when the <xref:System.Data.DataTable> is written as XML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-294">W poniższym przykładzie dodano wartość sygnatury czasowej do <xref:System.Data.DataTable> za pośrednictwem <xref:System.Data.DataTable.ExtendedProperties%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="a591e-294">The following example adds a timestamp value to the <xref:System.Data.DataTable> through the <xref:System.Data.DataTable.ExtendedProperties%2A> property.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.ExtendedProperties Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ExtendedProperties Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ExtendedProperties Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ExtendedProperties Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="fInitInProgress">
      <MemberSignature Language="C#" Value="protected internal bool fInitInProgress;" />
      <MemberSignature Language="ILAsm" Value=".field familyorassembly bool fInitInProgress" />
      <MemberSignature Language="DocId" Value="F:System.Data.DataTable.fInitInProgress" />
      <MemberSignature Language="VB.NET" Value="Protected Friend fInitInProgress As Boolean " />
      <MemberSignature Language="C++ CLI" Value="protected public: bool fInitInProgress;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-295">Sprawdza, czy trwa inicjowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-295">Checks whether initialization is in progress.</span>
          </span>
          <span data-ttu-id="a591e-296">Inicjowanie występuje w czasie wykonywania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-296">The initialization occurs at run time.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChanges">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-297">Pobiera kopię <see cref="T:System.Data.DataTable" /> zawierający wszystkie zmiany wprowadzone od czasu ostatniego załadowania lub od <see cref="M:System.Data.DataTable.AcceptChanges" /> została wywołana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-297">Gets a copy of the <see cref="T:System.Data.DataTable" /> containing all changes made to it since it was last loaded, or since <see cref="M:System.Data.DataTable.AcceptChanges" /> was called.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChanges">
      <MemberSignature Language="C#" Value="public System.Data.DataTable GetChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable GetChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetChanges" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChanges () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ GetChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a591e-298">Pobiera kopię <see cref="T:System.Data.DataTable" /> zawierający wszystkie zmiany wprowadzone od momentu załadowania lub <see cref="M:System.Data.DataTable.AcceptChanges" /> ostatniego została wywołana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-298">Gets a copy of the <see cref="T:System.Data.DataTable" /> that contains all changes made to it since it was loaded or <see cref="M:System.Data.DataTable.AcceptChanges" /> was last called.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a591e-299">Zmian z tego <see cref="T:System.Data.DataTable" />, lub <see langword="null" /> Jeśli żadne zmiany nie zostaną znalezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-299">A copy of the changes from this <see cref="T:System.Data.DataTable" />, or <see langword="null" /> if no changes are found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-300">Tworzy nowy <xref:System.Data.DataSet> zawierający kopię wszystkich wierszy w oryginalnym <xref:System.Data.DataSet> , która ma oczekujące zmiany.</span><span class="sxs-lookup"><span data-stu-id="a591e-300">Creates a new <xref:System.Data.DataSet> containing a copy of all rows in the original <xref:System.Data.DataSet> that have pending changes.</span></span> <span data-ttu-id="a591e-301">Ograniczenia relacji może spowodować dodatkowe wiersze bez zmian do dodania do nowej <xref:System.Data.DataSet> Jeśli niezmienione wiersze zawierają kluczy podstawowych odpowiadający klucze obce w zmienionych wierszy.</span><span class="sxs-lookup"><span data-stu-id="a591e-301">Relationship constraints can cause additional unchanged rows to be added to the new <xref:System.Data.DataSet> if the unchanged rows contain primary keys corresponding to foreign keys in the changed rows.</span></span> <span data-ttu-id="a591e-302">Metoda zwraca `null` (`Nothing` w języku Visual Basic), jeśli nie ma żadnych wierszy w oryginalnym <xref:System.Data.DataSet> z oczekujących zmian.</span><span class="sxs-lookup"><span data-stu-id="a591e-302">The method returns `null` (`Nothing` in Visual Basic) if there are no rows in the original <xref:System.Data.DataSet> with pending changes.</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.GetChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.GetChanges Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.GetChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.GetChanges Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChanges">
      <MemberSignature Language="C#" Value="public System.Data.DataTable GetChanges (System.Data.DataRowState rowStates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable GetChanges(valuetype System.Data.DataRowState rowStates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChanges (rowStates As DataRowState) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ GetChanges(System::Data::DataRowState rowStates);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowStates" Type="System.Data.DataRowState" />
      </Parameters>
      <Docs>
        <param name="rowStates">
          <span data-ttu-id="a591e-303">Jeden z <see cref="T:System.Data.DataRowState" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-303">One of the <see cref="T:System.Data.DataRowState" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-304">Pobiera kopię <see cref="T:System.Data.DataTable" /> zawierający wszystkie zmiany wprowadzone od czasu ostatniego załadowania lub od <see cref="M:System.Data.DataTable.AcceptChanges" /> została wywołana, filtrowane według <see cref="T:System.Data.DataRowState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-304">Gets a copy of the <see cref="T:System.Data.DataTable" /> containing all changes made to it since it was last loaded, or since <see cref="M:System.Data.DataTable.AcceptChanges" /> was called, filtered by <see cref="T:System.Data.DataRowState" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a591e-305">Filtrowane kopię <see cref="T:System.Data.DataTable" /> zawierających akcje wykonać na nim i nowszych można scalić w <see cref="T:System.Data.DataTable" /> przy użyciu <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-305">A filtered copy of the <see cref="T:System.Data.DataTable" /> that can have actions performed on it, and later be merged back in the <see cref="T:System.Data.DataTable" /> using <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />.</span>
          </span>
          <span data-ttu-id="a591e-306">Jeśli żadne wiersze z żądaną <see cref="T:System.Data.DataRowState" /> zostaną znalezione, metoda zwraca <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-306">If no rows of the desired <see cref="T:System.Data.DataRowState" /> are found, the method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-307"><xref:System.Data.DataTable.GetChanges%2A> Metoda jest używana do utworzenia drugiej <xref:System.Data.DataTable> obiekt, który zawiera tylko zmiany wprowadzone do oryginalnej.</span><span class="sxs-lookup"><span data-stu-id="a591e-307">The <xref:System.Data.DataTable.GetChanges%2A> method is used to produce a second <xref:System.Data.DataTable> object that contains only the changes introduced into the original.</span></span> <span data-ttu-id="a591e-308">Użyj `rowStates` argumentu, aby określić typ zmiany powinien zawierać nowy obiekt.</span><span class="sxs-lookup"><span data-stu-id="a591e-308">Use the `rowStates` argument to specify the type of changes the new object should include.</span></span>  
  
 <span data-ttu-id="a591e-309">Ograniczenia relacji może spowodować wierszy nadrzędnych bez zmian, które zostaną uwzględnione.</span><span class="sxs-lookup"><span data-stu-id="a591e-309">Relationship constraints may cause unchanged parent rows to be included.</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.GetChanges1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.GetChanges1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.GetChanges1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.GetChanges1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataTableSchema">
      <MemberSignature Language="C#" Value="public static System.Xml.Schema.XmlSchemaComplexType GetDataTableSchema (System.Xml.Schema.XmlSchemaSet schemaSet);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Schema.XmlSchemaComplexType GetDataTableSchema(class System.Xml.Schema.XmlSchemaSet schemaSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDataTableSchema (schemaSet As XmlSchemaSet) As XmlSchemaComplexType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::Schema::XmlSchemaComplexType ^ GetDataTableSchema(System::Xml::Schema::XmlSchemaSet ^ schemaSet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaComplexType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaSet" Type="System.Xml.Schema.XmlSchemaSet" />
      </Parameters>
      <Docs>
        <param name="schemaSet">
          <span data-ttu-id="a591e-310">
            <see cref="T:System.Xml.Schema.XmlSchemaSet" /> Wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-310">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-311">Ta metoda zwraca <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zawierające sieci Web Services Description Language (WSDL), który opisuje <see cref="T:System.Data.DataTable" /> dla usług sieci Web.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-311">This method returns an <see cref="T:System.Xml.Schema.XmlSchemaSet" /> instance containing the Web Services Description Language (WSDL) that describes the <see cref="T:System.Data.DataTable" /> for Web Services.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a591e-312">
            <see cref="T:System.Xml.Schema.XmlSchemaSet" /> Wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-312">The <see cref="T:System.Xml.Schema.XmlSchemaSet" /> instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetErrors">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetErrors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetErrors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetErrors" />
      <MemberSignature Language="VB.NET" Value="Public Function GetErrors () As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetErrors();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a591e-313">Pobiera tablicę <see cref="T:System.Data.DataRow" /> obiektów, które zawierają błędy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-313">Gets an array of <see cref="T:System.Data.DataRow" /> objects that contain errors.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a591e-314">Tablica <see cref="T:System.Data.DataRow" /> obiektów, które mają błędy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-314">An array of <see cref="T:System.Data.DataRow" /> objects that have errors.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-315">Zwraca listę <xref:System.Data.DataRow> obiektów, które mają <xref:System.Data.DataRow.RowError%2A> ustawiony.</span><span class="sxs-lookup"><span data-stu-id="a591e-315">Returns the list of <xref:System.Data.DataRow> objects that have <xref:System.Data.DataRow.RowError%2A> set.</span></span> <span data-ttu-id="a591e-316">Na przykład mogą wystąpić błędy podczas wywoływania metody <xref:System.Data.Common.DataAdapter.Update%2A> z <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> ustawioną **true**.</span><span class="sxs-lookup"><span data-stu-id="a591e-316">For example, errors can occur when calling <xref:System.Data.Common.DataAdapter.Update%2A> with <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> set to **true**.</span></span> <span data-ttu-id="a591e-317">Nie wywołuj <xref:System.Data.DataTable.AcceptChanges%2A> na <xref:System.Data.DataTable> dopóki Usuń wszystkie błędy i ponownie prześlij <xref:System.Data.DataSet> aktualizacji.</span><span class="sxs-lookup"><span data-stu-id="a591e-317">Do not invoke <xref:System.Data.DataTable.AcceptChanges%2A> on the <xref:System.Data.DataTable> until you resolve all errors and resubmit the <xref:System.Data.DataSet> for updating.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-318">W poniższym przykładzie użyto <xref:System.Data.DataTable.GetErrors%2A> metoda zwraca tablicę <xref:System.Data.DataRow> obiektów, które mają błędy.</span><span class="sxs-lookup"><span data-stu-id="a591e-318">The following example uses the <xref:System.Data.DataTable.GetErrors%2A> method to return an array of <xref:System.Data.DataRow> objects that have errors.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.GetErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.GetErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.GetErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.GetErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="a591e-319">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> obiekt przechowujący dane serializowane skojarzone z <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-319">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized data associated with the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="a591e-320">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> obiekt, który zawiera źródłowy i docelowy serializowanego strumienia skojarzonego z <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-320">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains the source and destination of the serialized stream associated with the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-321">Wypełnia obiekt informacje serializacji dane potrzebne do serializacji <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-321">Populates a serialization information object with the data needed to serialize the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a591e-322">
            <paramref name="info" /> Parametr jest odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-322">The <paramref name="info" /> parameter is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRowType">
      <MemberSignature Language="C#" Value="protected virtual Type GetRowType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type GetRowType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetRowType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetRowType () As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Type ^ GetRowType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a591e-323">Pobiera typ wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-323">Gets the row type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a591e-324">Zwraca typ <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-324">Returns the type of the <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.Schema.XmlSchema GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.Schema.XmlSchema GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSchema () As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::Schema::XmlSchema ^ GetSchema();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.GetSchema</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a591e-325">Opis tego elementu członkowskiego, zobacz <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-325">For a description of this member, see <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a591e-326">
            <see cref="T:System.Xml.Schema.XmlSchema" /> Opisujący reprezentację XML obiektu, który jest generowany przez <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> — metoda i używane przez <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-326">An <see cref="T:System.Xml.Schema.XmlSchema" /> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> method.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasErrors">
      <MemberSignature Language="C#" Value="public bool HasErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasErrors" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.HasErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasErrors { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-327">Pobiera wartość wskazującą, czy występują błędy w każdym wierszy w tych tabelach <see cref="T:System.Data.DataSet" /> do której należy tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-327">Gets a value indicating whether there are errors in any of the rows in any of the tables of the <see cref="T:System.Data.DataSet" /> to which the table belongs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a591e-328">
            <see langword="true" /> Jeśli występują błędy; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-328">
              <see langword="true" /> if errors exist; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-329">Przez użytkowników podczas pracy w zestawie danych zawartych w <xref:System.Data.DataTable>, można oznaczyć każdej zmiany z powodu błędu, jeśli zmiana powoduje, że niektóre niepowodzenia weryfikacji.</span><span class="sxs-lookup"><span data-stu-id="a591e-329">As users work on a set of data contained in a <xref:System.Data.DataTable>, you can mark each change with an error if the change causes some validation failure.</span></span> <span data-ttu-id="a591e-330">Można zaznaczyć cały <xref:System.Data.DataRow> z komunikat błędu przy użyciu <xref:System.Data.DataRow.RowError%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="a591e-330">You can mark an entire <xref:System.Data.DataRow> with an error message using the <xref:System.Data.DataRow.RowError%2A> property.</span></span> <span data-ttu-id="a591e-331">Można również ustawić błędów w każdej kolumnie wiersz mający <xref:System.Data.DataRow.SetColumnError%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-331">You can also set errors on each column of the row with the <xref:System.Data.DataRow.SetColumnError%2A> method.</span></span>  
  
 <span data-ttu-id="a591e-332">Przed zaktualizowaniem źródła danych z <xref:System.Data.DataSet>, zaleca się, że należy najpierw wywołać <xref:System.Data.DataSet.GetChanges%2A> metody w celu <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="a591e-332">Before updating a data source with a <xref:System.Data.DataSet>, it's recommended that you first invoke the <xref:System.Data.DataSet.GetChanges%2A> method on the target <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="a591e-333">Metoda powoduje <xref:System.Data.DataSet> zawierający tylko zmiany wprowadzone w oryginalnej.</span><span class="sxs-lookup"><span data-stu-id="a591e-333">The method results in a <xref:System.Data.DataSet> that contains only the changes made to the original.</span></span> <span data-ttu-id="a591e-334">Przed wysłaniem <xref:System.Data.DataSet> do aktualizowania źródła danych, sprawdź <xref:System.Data.DataTable.HasErrors%2A> właściwości każdej tabeli, aby zobaczyć, czy błędy zostały dołączone do wierszy lub kolumn w wierszach.</span><span class="sxs-lookup"><span data-stu-id="a591e-334">Before sending the <xref:System.Data.DataSet> to the data source for updating, check the <xref:System.Data.DataTable.HasErrors%2A> property of each table to see if any errors have been attached to the rows or columns in the rows.</span></span>  
  
 <span data-ttu-id="a591e-335">Po uzgodnieniu każdego błędu, usuń błędy występujące w <xref:System.Data.DataRow.ClearErrors%2A> metody `DataRow`.</span><span class="sxs-lookup"><span data-stu-id="a591e-335">After reconciling each error, clear the errors with the <xref:System.Data.DataRow.ClearErrors%2A> method of the `DataRow`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-336">W poniższym przykładzie użyto <xref:System.Data.DataTable.HasErrors%2A> właściwość do sprawdzenia, czy tabela zawiera błędy.</span><span class="sxs-lookup"><span data-stu-id="a591e-336">The following example uses the <xref:System.Data.DataTable.HasErrors%2A> property to check if a table contains errors.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.HasErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.HasErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.HasErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.HasErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.GetErrors" />
      </Docs>
    </Member>
    <Member MemberName="ImportRow">
      <MemberSignature Language="C#" Value="public void ImportRow (System.Data.DataRow row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ImportRow(class System.Data.DataRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ImportRow(System.Data.DataRow)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ImportRow (row As DataRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ImportRow(System::Data::DataRow ^ row);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" />
      </Parameters>
      <Docs>
        <param name="row">
          <span data-ttu-id="a591e-337">
            <see cref="T:System.Data.DataRow" /> Do zaimportowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-337">The <see cref="T:System.Data.DataRow" /> to be imported.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-338">Kopie <see cref="T:System.Data.DataRow" /> do <see cref="T:System.Data.DataTable" />, zachowując wszystkie ustawienia właściwości, a także oryginalny i bieżące wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-338">Copies a <see cref="T:System.Data.DataRow" /> into a <see cref="T:System.Data.DataTable" />, preserving any property settings, as well as original and current values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-339">Wywoływanie <xref:System.Data.DataTable.NewRow%2A> powoduje dodanie wiersza do tabeli przy użyciu istniejącego schematu tabeli, ale z wartościami domyślnymi dla wiersza i ustawia <xref:System.Data.DataRowState> do `Detached`.</span><span class="sxs-lookup"><span data-stu-id="a591e-339">Calling <xref:System.Data.DataTable.NewRow%2A> adds a row to the table using the existing table schema, but with default values for the row, and sets the <xref:System.Data.DataRowState> to `Detached`.</span></span> <span data-ttu-id="a591e-340">Wywoływanie <xref:System.Data.DataTable.ImportRow%2A> zachowuje istniejące <xref:System.Data.DataRowState> oraz innych wartości w wierszu.</span><span class="sxs-lookup"><span data-stu-id="a591e-340">Calling <xref:System.Data.DataTable.ImportRow%2A> preserves the existing <xref:System.Data.DataRowState> along with other values in the row.</span></span> <span data-ttu-id="a591e-341">Jeśli `DataRow` przekazanego jako parametr jest w stanie odłączony, zostanie zignorowany, a nie wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a591e-341">If the `DataRow` that is passed as a parameter is in a detached state, it is ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="a591e-342">Nowy wiersz zostanie dodany na końcu tabeli danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-342">The new row will be added to the end of the data table.</span></span>  
  
 <span data-ttu-id="a591e-343">Jeśli nowy wiersz narusza ograniczenie nie zostanie dodany do tabeli danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-343">If the new row violates a Constraint it won’t be added to the data table.</span></span>  
  
 <span data-ttu-id="a591e-344">Możesz uzyskać indeks nowy wiersz z DataTable.Rows.Find i DataTable.Rows.IndexOf.</span><span class="sxs-lookup"><span data-stu-id="a591e-344">You can get the index of the new row with as DataTable.Rows.Find and DataTable.Rows.IndexOf.</span></span> <span data-ttu-id="a591e-345">Zobacz <xref:System.Data.DataRowCollection> i <xref:System.Data.DataTable.Rows%2A> Aby uzyskać więcej informacji.</span><span class="sxs-lookup"><span data-stu-id="a591e-345">See <xref:System.Data.DataRowCollection> and <xref:System.Data.DataTable.Rows%2A> for more information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialized">
      <MemberSignature Language="C#" Value="public event EventHandler Initialized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Initialized" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.Initialized" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Initialized As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Initialized;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-346">Występuje po <see cref="T:System.Data.DataTable" /> został zainicjowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-346">Occurs after the <see cref="T:System.Data.DataTable" /> is initialized.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-347">Aby uzyskać więcej informacji, zobacz <xref:System.Data.DataTable.IsInitialized%2A>.</span><span class="sxs-lookup"><span data-stu-id="a591e-347">For more information, see <xref:System.Data.DataTable.IsInitialized%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInitialized">
      <MemberSignature Language="C#" Value="public bool IsInitialized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInitialized" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.IsInitialized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInitialized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInitialized { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-348">Pobiera wartość wskazującą, czy <see cref="T:System.Data.DataTable" /> został zainicjowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-348">Gets a value that indicates whether the <see cref="T:System.Data.DataTable" /> is initialized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a591e-349">
            <see langword="true" /> Aby wskazać składnika została ukończona inicjowania; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-349">
              <see langword="true" /> to indicate the component has completed initialization; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-350">Zwraca stan <xref:System.Data.DataTable> podczas jego jest tworzona, na przykład przez program Visual Studio.</span><span class="sxs-lookup"><span data-stu-id="a591e-350">Returns the status of the <xref:System.Data.DataTable> while it’s being constructed, for instance by Visual Studio.</span></span> <span data-ttu-id="a591e-351"><xref:System.Data.DataTable.BeginInit%2A> Metody ustawia ją na `false` i <xref:System.Data.DataTable.EndInit%2A> metody ustawia ją na `true`.</span><span class="sxs-lookup"><span data-stu-id="a591e-351">The <xref:System.Data.DataTable.BeginInit%2A> method sets it to `false` and <xref:System.Data.DataTable.EndInit%2A> method sets it to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-352">Wypełnia <see cref="T:System.Data.DataTable" /> z wartości ze źródłem danych przy użyciu dostarczonego <see cref="T:System.Data.IDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-352">Fills a <see cref="T:System.Data.DataTable" /> with values from a data source using the supplied <see cref="T:System.Data.IDataReader" />.</span>
          </span>
          <span data-ttu-id="a591e-353">Jeśli <see langword="DataTable" /> już zawiera wiersze, dane przychodzące od źródła danych jest scalany z istniejących wierszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-353">If the <see langword="DataTable" /> already contains rows, the incoming data from the data source is merged with the existing rows.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-354">`Load` Metoda może być używana w kilka typowych scenariuszy, wszystkie wyśrodkowany wokół pobieranie danych z określonego źródła danych i dodanie go do bieżącego kontenera danych (w tym przypadku `DataTable`).</span><span class="sxs-lookup"><span data-stu-id="a591e-354">The `Load` method can be used in several common scenarios, all centered around getting data from a specified data source and adding it to the current data container (in this case, a `DataTable`).</span></span> <span data-ttu-id="a591e-355">Te scenariusze opisano standardowego użycia dla `DataTable`, opisujący jej aktualizacji i scal zachowanie.</span><span class="sxs-lookup"><span data-stu-id="a591e-355">These scenarios describe standard usage for a `DataTable`, describing its update and merge behavior.</span></span>  
  
 <span data-ttu-id="a591e-356">A `DataTable` synchronizuje lub aktualizuje z pojedynczego podstawowego źródła danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-356">A `DataTable` synchronizes or updates with a single primary data source.</span></span> <span data-ttu-id="a591e-357">`DataTable` Śledzi zmiany, dzięki czemu synchronizacji z podstawowego źródła danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-357">The `DataTable` tracks changes, allowing synchronization with the primary data source.</span></span> <span data-ttu-id="a591e-358">Ponadto `DataTable` może zaakceptować danych pierwotnych z co najmniej jedno źródło danych pomocniczych.</span><span class="sxs-lookup"><span data-stu-id="a591e-358">In addition, a `DataTable` can accept incremental data from one or more secondary data sources.</span></span> <span data-ttu-id="a591e-359">`DataTable` Nie jest odpowiedzialny za śledzenia zmian w celu umożliwienia synchronizacji z pomocnicze źródło danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-359">The `DataTable` isn't responsible for tracking changes in order to allow synchronization with the secondary data source.</span></span>  
  
 <span data-ttu-id="a591e-360">Podana tych dwóch źródeł danych hipotetyczny, użytkownik prawdopodobnie muszą mieć jedną z następujących problemów:</span><span class="sxs-lookup"><span data-stu-id="a591e-360">Given these two hypothetical data sources, a user is likely to require one of the following behaviors:</span></span>  
  
-   <span data-ttu-id="a591e-361">Inicjowanie `DataTable` ze źródła danych podstawowych.</span><span class="sxs-lookup"><span data-stu-id="a591e-361">Initialize `DataTable` from a primary data source.</span></span> <span data-ttu-id="a591e-362">W tym scenariuszu użytkownik chce zainicjować pustą `DataTable` wartościami z podstawowego źródła danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-362">In this scenario, the user wants to initialize an empty `DataTable` with values from the primary data source.</span></span> <span data-ttu-id="a591e-363">Użytkownik zamierza później propagowanie zmian z powrotem na podstawowego źródła danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-363">Later the user intends to propagate changes back to the primary data source.</span></span>  
  
-   <span data-ttu-id="a591e-364">Zachować zmiany, a następnie przeprowadź ponowną synchronizację z podstawowego źródła danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-364">Preserve changes and re-synchronize from the primary data source.</span></span> <span data-ttu-id="a591e-365">W tym scenariuszu użytkownik chce przejąć `DataTable` wypełnione w poprzednim scenariuszu i wykonywać synchronizację przyrostową z podstawowego źródła danych, zachowując zmian wprowadzonych w `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="a591e-365">In this scenario, the user wants to take the `DataTable` filled in the previous scenario and perform an incremental synchronization with the primary data source, preserving modifications made in the `DataTable`.</span></span>  
  
-   <span data-ttu-id="a591e-366">Źródła danych pierwotnych z pomocniczych źródeł danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-366">Incremental data feed from secondary data sources.</span></span> <span data-ttu-id="a591e-367">W tym scenariuszu użytkownik chce scalić zmiany z co najmniej jedno źródło danych pomocniczych i Propaguj tych zmian z powrotem na podstawowego źródła danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-367">In this scenario, the user wants to merge changes from one or more secondary data sources, and propagate those changes back to the primary data source.</span></span>  
  
 <span data-ttu-id="a591e-368">`Load` Metody umożliwia tych scenariuszy.</span><span class="sxs-lookup"><span data-stu-id="a591e-368">The `Load` method makes all these scenarios possible.</span></span> <span data-ttu-id="a591e-369">Wszystkie, oprócz jednego z przeciążeń dla tej metody można określić parametr opcji obciążenia, wskazującą sposób wierszy znajdujących się w <xref:System.Data.DataTable> łączyć z wierszy ładowany.</span><span class="sxs-lookup"><span data-stu-id="a591e-369">All but one of the overloads for this method allows you to specify a load option parameter, indicating how rows already in a <xref:System.Data.DataTable> combine with rows being loaded.</span></span> <span data-ttu-id="a591e-370">(Przeciążenie, które nie zezwala na określenie zachowania używa domyślną opcją obciążenia). W poniższej tabeli opisano opcje trzy obciążenia pochodzącymi <xref:System.Data.LoadOption> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="a591e-370">(The overload that doesn't allow you to specify the behavior uses the default load option.) The following table describes the three load options provided by the <xref:System.Data.LoadOption> enumeration.</span></span> <span data-ttu-id="a591e-371">W każdym przypadku opis wskazuje zachowanie, gdy klucz podstawowy wiersza w danych przychodzących jest zgodna z klucza podstawowego istniejącego wiersza.</span><span class="sxs-lookup"><span data-stu-id="a591e-371">In each case, the description indicates the behavior when the primary key of a row in the incoming data matches the primary key of an existing row.</span></span>  
  
|<span data-ttu-id="a591e-372">Opcja obciążenia</span><span class="sxs-lookup"><span data-stu-id="a591e-372">Load Option</span></span>|<span data-ttu-id="a591e-373">Opis</span><span class="sxs-lookup"><span data-stu-id="a591e-373">Description</span></span>|  
|-----------------|-----------------|  
|<span data-ttu-id="a591e-374">`PreserveChanges` (ustawienie domyślne)</span><span class="sxs-lookup"><span data-stu-id="a591e-374">`PreserveChanges` (default)</span></span>|<span data-ttu-id="a591e-375">Aktualizuje wartości przychodzących wiersza oryginalnej wersji wiersza.</span><span class="sxs-lookup"><span data-stu-id="a591e-375">Updates the original version of the row with the value of the incoming row.</span></span>|  
|`OverwriteChanges`|<span data-ttu-id="a591e-376">Aktualizuje wersje bieżących i oryginalnych wiersza wartości przychodzących wiersza.</span><span class="sxs-lookup"><span data-stu-id="a591e-376">Updates the current and original versions of the row with the value of the incoming row.</span></span>|  
|`Upsert`|<span data-ttu-id="a591e-377">Aktualizuje wartości wiersza przychodzące bieżącej wersji wiersza.</span><span class="sxs-lookup"><span data-stu-id="a591e-377">Updates the current version of the row with the value of the incoming row.</span></span>|  
  
 <span data-ttu-id="a591e-378">Ogólnie rzecz biorąc `PreserveChanges` i `OverwriteChanges` opcje są przeznaczone dla scenariuszy, w których użytkownik chce synchronizować `DataSet` i jego zmiany z podstawowego źródła danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-378">In general, the `PreserveChanges` and `OverwriteChanges` options are intended for scenarios in which the user needs to synchronize the `DataSet` and its changes with the primary data source.</span></span> <span data-ttu-id="a591e-379">`Upsert` Opcja umożliwia agregację zmiany z co najmniej jedno źródło danych pomocniczych.</span><span class="sxs-lookup"><span data-stu-id="a591e-379">The `Upsert` option facilitates aggregating changes from one or more secondary data sources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-380">W poniższym przykładzie pokazano kilka zagadnień związanych z wywołaniem <xref:System.Data.DataTable.Load%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-380">The following example demonstrates several of the issues involved with calling the <xref:System.Data.DataTable.Load%2A> method.</span></span> <span data-ttu-id="a591e-381">Najpierw przykładzie koncentruje się na problemy schematu, łącznie z wnioskowanie schematu z załadować <xref:System.Data.IDataReader>, a następnie Obsługa niezgodne schematów i schematów, dla których brakuje lub dodatkowych kolumn.</span><span class="sxs-lookup"><span data-stu-id="a591e-381">First, the example focuses on schema issues, including inferring a schema from the loaded <xref:System.Data.IDataReader>, and then handling incompatible schemas, and schemas with missing or additional columns.</span></span> <span data-ttu-id="a591e-382">Przykład następnie koncentruje się na problemy z danych, w tym obsługi różnych opcji ładowania.</span><span class="sxs-lookup"><span data-stu-id="a591e-382">The example then focuses on data issues, including handling the various loading options.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a591e-383">W tym przykładzie pokazano, jak używać jednej z zastąpionej wersji `Load`.</span><span class="sxs-lookup"><span data-stu-id="a591e-383">This example shows how to use one of the overloaded versions of `Load`.</span></span> <span data-ttu-id="a591e-384">Inne przykłady, które mogą być dostępne znajduje się w tematach poszczególnych przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="a591e-384">For other examples that might be available, see the individual overload topics.</span></span>  
  
 [!code-csharp[DataWorks DataTableLoad#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableLoad/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableLoad#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableLoad/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Data.DataSet.Load" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Data.IDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Data.IDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Load(System.Data.IDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (reader As IDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Data::IDataReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="a591e-385">
            <see cref="T:System.Data.IDataReader" /> Udostępniająca zestaw wyników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-385">An <see cref="T:System.Data.IDataReader" /> that provides a result set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-386">Wypełnia <see cref="T:System.Data.DataTable" /> z wartości ze źródłem danych przy użyciu dostarczonego <see cref="T:System.Data.IDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-386">Fills a <see cref="T:System.Data.DataTable" /> with values from a data source using the supplied <see cref="T:System.Data.IDataReader" />.</span>
          </span>
          <span data-ttu-id="a591e-387">Jeśli <see cref="T:System.Data.DataTable" /> już zawiera wiersze, dane przychodzące od źródła danych jest scalany z istniejących wierszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-387">If the <see cref="T:System.Data.DataTable" /> already contains rows, the incoming data from the data source is merged with the existing rows.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-388"><xref:System.Data.DataTable.Load%2A> — Metoda korzysta z pierwszego zestawu wyników z załadować <xref:System.Data.IDataReader>i po pomyślnym ukończeniu ustawia czytelnika pozycji dalej zestaw wyników, jeśli istnieją.</span><span class="sxs-lookup"><span data-stu-id="a591e-388">The <xref:System.Data.DataTable.Load%2A> method consumes the first result set from the loaded <xref:System.Data.IDataReader>, and after successful completion, sets the reader's position to the next result set, if any.</span></span> <span data-ttu-id="a591e-389">Podczas konwertowania danych, `Load` — metoda korzysta z tej samej reguły konwersji jako <xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-389">When converting data, the `Load` method uses the same conversion rules as the <xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="a591e-390"><xref:System.Data.DataTable.Load%2A> Metody należy wziąć pod uwagę trzy określonych problemów podczas ładowania danych z <xref:System.Data.IDataReader> wystąpienie: operacje schematu, dane i zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a591e-390">The <xref:System.Data.DataTable.Load%2A> method must take into account three specific issues when loading the data from an <xref:System.Data.IDataReader> instance: schema, data, and event operations.</span></span> <span data-ttu-id="a591e-391">Podczas pracy ze schematem, <xref:System.Data.DataTable.Load%2A> metody mogą wystąpić warunki, zgodnie z opisem w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="a591e-391">When working with the schema, the <xref:System.Data.DataTable.Load%2A> method may encounter conditions as described in the following table.</span></span> <span data-ttu-id="a591e-392">Operacje schematu została wykonana dla wszystkich zestawów wyników importowane, nawet tych, które zawierają żadnych danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-392">The schema operations take place for all imported result sets, even those containing no data.</span></span>  
  
|<span data-ttu-id="a591e-393">Warunek</span><span class="sxs-lookup"><span data-stu-id="a591e-393">Condition</span></span>|<span data-ttu-id="a591e-394">Zachowanie</span><span class="sxs-lookup"><span data-stu-id="a591e-394">Behavior</span></span>|  
|---------------|--------------|  
|<span data-ttu-id="a591e-395"><xref:System.Data.DataTable> Ma nie schematu.</span><span class="sxs-lookup"><span data-stu-id="a591e-395">The <xref:System.Data.DataTable> has no schema.</span></span>|<span data-ttu-id="a591e-396"><xref:System.Data.DataTable.Load%2A> Metody wnioskuje schemat oparte na zestawu wyników z importowanego <xref:System.Data.IDataReader>.</span><span class="sxs-lookup"><span data-stu-id="a591e-396">The <xref:System.Data.DataTable.Load%2A> method infers the schema based on the result set from the imported <xref:System.Data.IDataReader>.</span></span>|  
|<span data-ttu-id="a591e-397"><xref:System.Data.DataTable> Ma schematu, ale nie jest zgodny ze schematem załadowany.</span><span class="sxs-lookup"><span data-stu-id="a591e-397">The <xref:System.Data.DataTable> has a schema, but it is incompatible with the loaded schema.</span></span>|<span data-ttu-id="a591e-398"><xref:System.Data.DataTable.Load%2A> Metoda zgłosi wyjątek odpowiadający określonym błąd występujący podczas próby załadowania danych do schematu niezgodne.</span><span class="sxs-lookup"><span data-stu-id="a591e-398">The <xref:System.Data.DataTable.Load%2A> method throws an exception corresponding to the particular error that occurs when attempting to load data into the incompatible schema.</span></span>|  
|<span data-ttu-id="a591e-399">Schematy są zgodne, ale schemat zestawu załadować wynik zawiera kolumny, które nie istnieją w <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-399">The schemas are compatible, but the loaded result set schema contains columns that do not exist in the <xref:System.Data.DataTable>.</span></span>|<span data-ttu-id="a591e-400"><xref:System.Data.DataTable.Load%2A> Metoda dodaje dodatkowe kolumny `DataTable`tego schematu.</span><span class="sxs-lookup"><span data-stu-id="a591e-400">The <xref:System.Data.DataTable.Load%2A> method adds the extra columns to `DataTable`'s schema.</span></span> <span data-ttu-id="a591e-401">Metoda zgłasza wyjątek, jeśli odpowiadającego kolumn w <xref:System.Data.DataTable> i zestawu wyników załadować nie są zgodne wartości.</span><span class="sxs-lookup"><span data-stu-id="a591e-401">The method throws an exception if corresponding columns in the <xref:System.Data.DataTable> and the loaded result set are not value compatible.</span></span> <span data-ttu-id="a591e-402">Metoda pobiera również informacje o ograniczeniach z zestawu wyników dla wszystkich dodanych kolumn.</span><span class="sxs-lookup"><span data-stu-id="a591e-402">The method also retrieves constraint information from the result set for all added columns.</span></span> <span data-ttu-id="a591e-403">Z wyjątkiem w przypadku ograniczenia Primary Key, te informacje ograniczenie jest używane tylko wtedy, gdy bieżący <xref:System.Data.DataTable> nie zawiera żadnych kolumn w chwili rozpoczęcia operacji ładowania.</span><span class="sxs-lookup"><span data-stu-id="a591e-403">Except for the case of Primary Key constraint, this constraint information is used only if the current <xref:System.Data.DataTable> does not contain any columns at the start of the load operation.</span></span>|  
|<span data-ttu-id="a591e-404">Schematy są zgodne, ale schemat zestawu załadować wynik zawiera mniejszą liczbę kolumn niż `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="a591e-404">The schemas are compatible, but the loaded result set schema contains fewer columns than does the `DataTable`.</span></span>|<span data-ttu-id="a591e-405">Jeśli brakuje kolumna ma zdefiniowanej wartości domyślnej lub wartości null, jest typ danych kolumny <xref:System.Data.DataTable.Load%2A> metoda pozwala wierszy ma zostać dodany, zastępując wartość domyślna lub `null` wartości w kolumnie brak.</span><span class="sxs-lookup"><span data-stu-id="a591e-405">If a missing column has a default value defined or the column's data type is nullable, the <xref:System.Data.DataTable.Load%2A> method allows the rows to be added, substituting the default or `null` value for the missing column.</span></span> <span data-ttu-id="a591e-406">Jeśli ma wartości domyślnej lub `null` mogą być używane, a następnie `Load` metoda zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a591e-406">If no default value or `null` can be used, then the `Load` method throws an exception.</span></span> <span data-ttu-id="a591e-407">Jeśli zostały podane nie wybraną wartość domyślną, `Load` używa metody `null` wartość jako wartość domyślną domyślnych.</span><span class="sxs-lookup"><span data-stu-id="a591e-407">If no specific default value has been supplied, the `Load` method uses the `null` value as the implied default value.</span></span>|  
  
 <span data-ttu-id="a591e-408">Przed biorąc pod uwagę zachowanie `Load` metody w odniesieniu do operacji danych uważają, że każdy wiersz w <xref:System.Data.DataTable> obsługuje zarówno bieżąca wartość i oryginalnej wartości dla każdej kolumny.</span><span class="sxs-lookup"><span data-stu-id="a591e-408">Before considering the behavior of the `Load` method in terms of data operations, consider that each row within a <xref:System.Data.DataTable> maintains both the current value and the original value for each column.</span></span> <span data-ttu-id="a591e-409">Te wartości mogą być równoważna lub mogą być inne, jeśli dane w wierszu zostały zmienione od czasu wypełnianie `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="a591e-409">These values may be equivalent, or may be different if the data in the row has been changed since filling the `DataTable`.</span></span>  <span data-ttu-id="a591e-410">Aby uzyskać więcej informacji, zobacz [stany wiersza i wersje wiersza](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md).</span><span class="sxs-lookup"><span data-stu-id="a591e-410">For more information, see [Row States and Row Versions](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md).</span></span>  
  
 <span data-ttu-id="a591e-411">Ta wersja `Load` metoda próbuje zachować bieżące wartości w każdym wierszu, pozostawiając bez zmian oryginalnej wartości.</span><span class="sxs-lookup"><span data-stu-id="a591e-411">This version of the `Load` method attempts to preserve the current values in each row, leaving the original value intact.</span></span> <span data-ttu-id="a591e-412">(Aby uzyskać bardziej precyzyjną kontrolę nad zachowaniem przychodzących danych zobacz <xref:System.Data.DataTable.Load%2A?displayProperty=nameWithType>.) Jeśli istniejący wiersz i wiersz zawiera odpowiednie wartości klucza podstawowego, wiersz jest przetwarzany za pomocą jego wartość stanu bieżącego wiersza, w przeciwnym razie jest ona traktowana jako nowy wiersz.</span><span class="sxs-lookup"><span data-stu-id="a591e-412">(If you want finer control over the behavior of incoming data, see <xref:System.Data.DataTable.Load%2A?displayProperty=nameWithType>.) If the existing row and the incoming row contain corresponding primary key values, the row is processed using its current row state value, otherwise it's treated as a new row.</span></span>  
  
 <span data-ttu-id="a591e-413">W odniesieniu do operacji zdarzeń <xref:System.Data.DataTable.RowChanging> zdarzenie przed każdego wiersza zostanie zmieniona i <xref:System.Data.DataTable.RowChanged> zdarzenie po zmianie każdego wiersza.</span><span class="sxs-lookup"><span data-stu-id="a591e-413">In terms of event operations, the <xref:System.Data.DataTable.RowChanging> event occurs before each row is changed, and the <xref:System.Data.DataTable.RowChanged> event occurs after each row has been changed.</span></span> <span data-ttu-id="a591e-414">W każdym przypadku <xref:System.Data.DataRowChangeEventArgs.Action%2A> właściwość <xref:System.Data.DataRowChangeEventArgs> wystąpienia przekazane do programu obsługi zdarzeń zawiera informacje o określonej akcji, skojarzone ze zdarzeniem.</span><span class="sxs-lookup"><span data-stu-id="a591e-414">In each case, the <xref:System.Data.DataRowChangeEventArgs.Action%2A> property of the <xref:System.Data.DataRowChangeEventArgs> instance passed to the event handler contains information about the particular action associated with the event.</span></span> <span data-ttu-id="a591e-415">Ta wartość akcji zależny od stanu wiersza przed operacji ładowania.</span><span class="sxs-lookup"><span data-stu-id="a591e-415">This action value depends on the state of the row before the load operation.</span></span> <span data-ttu-id="a591e-416">W każdym przypadku wystąpienia obu zdarzeń, a akcja jest taka sama dla każdego.</span><span class="sxs-lookup"><span data-stu-id="a591e-416">In each case, both events occur, and the action is the same for each.</span></span> <span data-ttu-id="a591e-417">Akcja może być stosowany do bieżącej lub oryginalnej wersji każdego wiersza i/lub w zależności od bieżącego stanu wiersza.</span><span class="sxs-lookup"><span data-stu-id="a591e-417">The action may be applied to either the current or original version of each row, or both, depending on the current row state.</span></span>  
  
 <span data-ttu-id="a591e-418">W poniższej tabeli przedstawiono zachowania dla `Load` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-418">The following table displays behavior for the `Load` method.</span></span> <span data-ttu-id="a591e-419">Wiersza końcowego (oznaczony "(Brak)") określa zachowanie dla przychodzących wierszy, które nie odpowiadają dowolnego istniejącego wiersza.</span><span class="sxs-lookup"><span data-stu-id="a591e-419">The final row (labeled "(Not present)") describes the behavior for incoming rows that don't match any existing row.</span></span> <span data-ttu-id="a591e-420">Każdej komórki w poniższej tabeli opisano bieżących i oryginalnych wartości pola w wierszu, wraz z <xref:System.Data.DataRowState> wartości po `Load` metody została ukończona.</span><span class="sxs-lookup"><span data-stu-id="a591e-420">Each cell in this table describes the current and original value for a field within a row, along with the <xref:System.Data.DataRowState> for the value after the `Load` method has completed.</span></span> <span data-ttu-id="a591e-421">W tym przypadku metoda nie zezwala na wskazać opcja obciążenia i używa domyślnie `PreserveChanges`.</span><span class="sxs-lookup"><span data-stu-id="a591e-421">In this case, the method doesn't allow you to indicate the load option, and uses the default, `PreserveChanges`.</span></span>  
  
|<span data-ttu-id="a591e-422">Istniejącą właściwością DataRowState.</span><span class="sxs-lookup"><span data-stu-id="a591e-422">Existing DataRowState</span></span>|<span data-ttu-id="a591e-423">Wartości po `Load` — metoda i zdarzenie akcji</span><span class="sxs-lookup"><span data-stu-id="a591e-423">Values after `Load` method, and event action</span></span>|  
|---------------------------|--------------------------------------------------|  
|<span data-ttu-id="a591e-424">Dodane</span><span class="sxs-lookup"><span data-stu-id="a591e-424">Added</span></span>|<span data-ttu-id="a591e-425">Bieżący = \<istniejących ></span><span class="sxs-lookup"><span data-stu-id="a591e-425">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="a591e-426">Oryginalny = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-426">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-427">Stan = \<zmodyfikować ></span><span class="sxs-lookup"><span data-stu-id="a591e-427">State = \<Modified></span></span><br /><br /> <span data-ttu-id="a591e-428">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="a591e-428">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="a591e-429">Zmodyfikowano</span><span class="sxs-lookup"><span data-stu-id="a591e-429">Modified</span></span>|<span data-ttu-id="a591e-430">Bieżący = \<istniejących ></span><span class="sxs-lookup"><span data-stu-id="a591e-430">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="a591e-431">Oryginalny = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-431">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-432">Stan = \<zmodyfikować ></span><span class="sxs-lookup"><span data-stu-id="a591e-432">State = \<Modified></span></span><br /><br /> <span data-ttu-id="a591e-433">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="a591e-433">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="a591e-434">Usunięte</span><span class="sxs-lookup"><span data-stu-id="a591e-434">Deleted</span></span>|<span data-ttu-id="a591e-435">Bieżący = \<nie jest dostępny ></span><span class="sxs-lookup"><span data-stu-id="a591e-435">Current = \<Not available></span></span><br /><br /> <span data-ttu-id="a591e-436">Oryginalny = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-436">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-437">Stan = \<usunięty ></span><span class="sxs-lookup"><span data-stu-id="a591e-437">State = \<Deleted></span></span><br /><br /> <span data-ttu-id="a591e-438">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="a591e-438">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="a591e-439">Bez zmian</span><span class="sxs-lookup"><span data-stu-id="a591e-439">Unchanged</span></span>|<span data-ttu-id="a591e-440">Bieżący = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-440">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-441">Oryginalny = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-441">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-442">Stan = \<niezmienione ></span><span class="sxs-lookup"><span data-stu-id="a591e-442">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="a591e-443">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="a591e-443">RowAction = ChangeCurrentAndOriginal</span></span>|  
|<span data-ttu-id="a591e-444">(Brak)</span><span class="sxs-lookup"><span data-stu-id="a591e-444">(Not present)</span></span>|<span data-ttu-id="a591e-445">Bieżący = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-445">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-446">Oryginalny = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-446">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-447">Stan = \<niezmienione ></span><span class="sxs-lookup"><span data-stu-id="a591e-447">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="a591e-448">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="a591e-448">RowAction = ChangeCurrentAndOriginal</span></span>|  
  
 <span data-ttu-id="a591e-449">Wartości w <xref:System.Data.DataColumn> może być ograniczona przy użyciu właściwości takich jak <xref:System.Data.DataColumn.ReadOnly%2A> i <xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="a591e-449">Values in a <xref:System.Data.DataColumn> can be constrained through use of properties such as <xref:System.Data.DataColumn.ReadOnly%2A> and <xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="a591e-450">`Load` Metoda obsługuje takich kolumn w taki sposób, który jest zgodny z zachowaniem zdefiniowany za pomocą właściwości kolumny.</span><span class="sxs-lookup"><span data-stu-id="a591e-450">The `Load` method handles such columns in a manner that is consistent with the behavior defined by the column's properties.</span></span> <span data-ttu-id="a591e-451">Ograniczenie odczytu tylko <xref:System.Data.DataColumn> ma zastosowanie tylko w przypadku zmiany wprowadzone w pamięci.</span><span class="sxs-lookup"><span data-stu-id="a591e-451">The read only constraint on a <xref:System.Data.DataColumn> is applicable only for changes that occur in memory.</span></span> <span data-ttu-id="a591e-452">`Load` Metody spowoduje zastąpienie wartości kolumny tylko do odczytu, jeśli to konieczne.</span><span class="sxs-lookup"><span data-stu-id="a591e-452">The `Load` method's overwrites the read-only column values, if needed.</span></span>  
  
 <span data-ttu-id="a591e-453">Aby ustalić, która wersja klucz podstawowy dla porównanie bieżącego wiersza z wierszem przychodzące `Load` — metoda korzysta z oryginalną wersją wartość klucza podstawowego w wierszu, a jeśli istnieje.</span><span class="sxs-lookup"><span data-stu-id="a591e-453">To determine which version of the primary key field to use for comparing the current row with an incoming row, the `Load` method uses the original version of the primary key value within a row, if it exists.</span></span> <span data-ttu-id="a591e-454">W przeciwnym razie `Load` — metoda korzysta z bieżącej wersji klucz podstawowy.</span><span class="sxs-lookup"><span data-stu-id="a591e-454">Otherwise, the `Load` method uses the current version of the primary key field.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-455">W poniższym przykładzie pokazano kilka zagadnień związanych z wywołaniem <xref:System.Data.DataTable.Load%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-455">The following example demonstrates several of the issues involved with calling the <xref:System.Data.DataTable.Load%2A> method.</span></span> <span data-ttu-id="a591e-456">Najpierw przykładzie koncentruje się na problemy schematu, łącznie z wnioskowanie schematu z załadować <xref:System.Data.IDataReader>, a następnie Obsługa niezgodne schematów i schematów, dla których brakuje lub dodatkowych kolumn.</span><span class="sxs-lookup"><span data-stu-id="a591e-456">First, the example focuses on schema issues, including inferring a schema from the loaded <xref:System.Data.IDataReader>, and then handling incompatible schemas, and schemas with missing or additional columns.</span></span> <span data-ttu-id="a591e-457">Przykład wywołuje `Load` metoda wyświetla dane przed i po operacji ładowania.</span><span class="sxs-lookup"><span data-stu-id="a591e-457">The example then calls the `Load` method, displaying the data both before and after the load operation.</span></span>  
  
 [!code-csharp[DataWorks DataTableLoad.IDataReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableLoad.IDataReader/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableLoad.IDataReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableLoad.IDataReader/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Data.IDataReader reader, System.Data.LoadOption loadOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Data.IDataReader reader, valuetype System.Data.LoadOption loadOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Data::IDataReader ^ reader, System::Data::LoadOption loadOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" />
        <Parameter Name="loadOption" Type="System.Data.LoadOption" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="a591e-458">
            <see cref="T:System.Data.IDataReader" /> Zapewnia jeden lub więcej zestawów wyników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-458">An <see cref="T:System.Data.IDataReader" /> that provides one or more result sets.</span>
          </span>
        </param>
        <param name="loadOption">
          <span data-ttu-id="a591e-459">Wartość z zakresu od <see cref="T:System.Data.LoadOption" /> wyliczenia, która wskazuje, jak wierszy znajdujących się w <see cref="T:System.Data.DataTable" /> są łączone z przychodzącego wierszy, które mają taki sam klucz podstawowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-459">A value from the <see cref="T:System.Data.LoadOption" /> enumeration that indicates how rows already in the <see cref="T:System.Data.DataTable" /> are combined with incoming rows that share the same primary key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-460">Wypełnia <see cref="T:System.Data.DataTable" /> z wartości ze źródłem danych przy użyciu dostarczonego <see cref="T:System.Data.IDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-460">Fills a <see cref="T:System.Data.DataTable" /> with values from a data source using the supplied <see cref="T:System.Data.IDataReader" />.</span>
          </span>
          <span data-ttu-id="a591e-461">Jeśli <see langword="DataTable" /> już zawiera wiersze, dane przychodzące od źródła danych jest scalany z istniejących wierszy, zgodnie z wartością <paramref name="loadOption" /> parametru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-461">If the <see langword="DataTable" /> already contains rows, the incoming data from the data source is merged with the existing rows according to the value of the <paramref name="loadOption" /> parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-462">`Load` — Metoda korzysta z pierwszego zestawu wyników z załadować <xref:System.Data.IDataReader>i po pomyślnym ukończeniu ustawia czytelnika pozycji dalej zestaw wyników, jeśli istnieją.</span><span class="sxs-lookup"><span data-stu-id="a591e-462">The `Load` method consumes the first result set from the loaded <xref:System.Data.IDataReader>, and after successful completion, sets the reader's position to the next result set, if any.</span></span> <span data-ttu-id="a591e-463">Podczas konwertowania danych, `Load` — metoda korzysta z tej samej reguły konwersji jako <xref:System.Data.Common.DbDataAdapter.Fill%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-463">When converting data, the `Load` method uses the same conversion rules as the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method.</span></span>  
  
 <span data-ttu-id="a591e-464">`Load` Metody należy wziąć pod uwagę trzy określonych problemów podczas ładowania danych z <xref:System.Data.IDataReader> wystąpienie: operacje schematu, dane i zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a591e-464">The `Load` method must take into account three specific issues when loading the data from an <xref:System.Data.IDataReader> instance: schema, data, and event operations.</span></span> <span data-ttu-id="a591e-465">Podczas pracy ze schematem, `Load` metody mogą wystąpić warunki, zgodnie z opisem w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="a591e-465">When working with the schema, the `Load` method may encounter conditions as described in the following table.</span></span> <span data-ttu-id="a591e-466">Operacje schematu została wykonana dla wszystkich zestawów wyników importowane, nawet tych, które zawierają żadnych danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-466">The schema operations take place for all imported result sets, even those containing no data.</span></span>  
  
|<span data-ttu-id="a591e-467">Warunek</span><span class="sxs-lookup"><span data-stu-id="a591e-467">Condition</span></span>|<span data-ttu-id="a591e-468">Zachowanie</span><span class="sxs-lookup"><span data-stu-id="a591e-468">Behavior</span></span>|  
|---------------|--------------|  
|<span data-ttu-id="a591e-469"><xref:System.Data.DataTable> Ma nie schematu.</span><span class="sxs-lookup"><span data-stu-id="a591e-469">The <xref:System.Data.DataTable> has no schema.</span></span>|<span data-ttu-id="a591e-470">`Load` Metody wnioskuje schemat oparte na zestawu wyników z importowanego <xref:System.Data.IDataReader>.</span><span class="sxs-lookup"><span data-stu-id="a591e-470">The `Load` method infers the schema based on the result set from the imported <xref:System.Data.IDataReader>.</span></span>|  
|<span data-ttu-id="a591e-471"><xref:System.Data.DataTable> Ma schematu, ale nie jest zgodny ze schematem załadowany.</span><span class="sxs-lookup"><span data-stu-id="a591e-471">The <xref:System.Data.DataTable> has a schema, but it is incompatible with the loaded schema.</span></span>|<span data-ttu-id="a591e-472">`Load` Metoda zgłosi wyjątek odpowiadający określonym błąd występujący podczas próby załadowania danych do schematu niezgodne.</span><span class="sxs-lookup"><span data-stu-id="a591e-472">The `Load` method throws an exception corresponding to the particular error that occurs when attempting to load data into the incompatible schema.</span></span>|  
|<span data-ttu-id="a591e-473">Schematy są zgodne, ale schemat zestawu załadować wynik zawiera kolumny, które nie istnieją w `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="a591e-473">The schemas are compatible, but the loaded result set schema contains columns that don't exist in the `DataTable`.</span></span>|<span data-ttu-id="a591e-474">`Load` Metoda dodaje dodatkowe kolumny `DataTable`tego schematu.</span><span class="sxs-lookup"><span data-stu-id="a591e-474">The `Load` method adds the extra columns to `DataTable`’s schema.</span></span> <span data-ttu-id="a591e-475">Metoda zgłasza wyjątek, jeśli odpowiadającego kolumn w <xref:System.Data.DataTable> i zestawu wyników załadować nie są zgodne wartości.</span><span class="sxs-lookup"><span data-stu-id="a591e-475">The method throws an exception if corresponding columns in the <xref:System.Data.DataTable> and the loaded result set are not value compatible.</span></span> <span data-ttu-id="a591e-476">Metoda pobiera również informacje o ograniczeniach z zestawu wyników dla wszystkich dodanych kolumn.</span><span class="sxs-lookup"><span data-stu-id="a591e-476">The method also retrieves constraint information from the result set for all added columns.</span></span> <span data-ttu-id="a591e-477">Z wyjątkiem w przypadku ograniczenia Primary Key, te informacje ograniczenie jest używane tylko wtedy, gdy bieżący <xref:System.Data.DataTable> nie zawiera żadnych kolumn w chwili rozpoczęcia operacji ładowania.</span><span class="sxs-lookup"><span data-stu-id="a591e-477">Except for the case of Primary Key constraint, this constraint information is used only if the current <xref:System.Data.DataTable> does not contain any columns at the start of the load operation.</span></span>|  
|<span data-ttu-id="a591e-478">Schematy są zgodne, ale schemat zestawu załadować wynik zawiera mniejszą liczbę kolumn niż `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="a591e-478">The schemas are compatible, but the loaded result set schema contains fewer columns than does the `DataTable`.</span></span>|<span data-ttu-id="a591e-479">Jeśli brakuje kolumna ma zdefiniowanej wartości domyślnej lub wartości null, jest typ danych kolumny `Load` metoda pozwala wierszy ma zostać dodany, zastępując wartości domyślne lub wartość null w kolumnie brak.</span><span class="sxs-lookup"><span data-stu-id="a591e-479">If a missing column has a default value defined or the column's data type is nullable, the `Load` method allows the rows to be added, substituting the default or null value for the missing column.</span></span> <span data-ttu-id="a591e-480">Jeśli może być używany nie wartości domyślnej lub wartość null, a następnie `Load` metoda zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a591e-480">If no default value or null can be used, then the `Load` method throws an exception.</span></span> <span data-ttu-id="a591e-481">Jeśli zostały podane nie wybraną wartość domyślną, `Load` — metoda korzysta z wartości null jako wartość domyślną domyślnych.</span><span class="sxs-lookup"><span data-stu-id="a591e-481">If no specific default value has been supplied, the `Load` method uses the null value as the implied default value.</span></span>|  
  
 <span data-ttu-id="a591e-482">Przed biorąc pod uwagę zachowanie `Load` metody w odniesieniu do operacji danych uważają, że każdy wiersz w <xref:System.Data.DataTable> obsługuje zarówno bieżąca wartość i oryginalnej wartości dla każdej kolumny.</span><span class="sxs-lookup"><span data-stu-id="a591e-482">Before considering the behavior of the `Load` method in terms of data operations, consider that each row within a <xref:System.Data.DataTable> maintains both the current value and the original value for each column.</span></span> <span data-ttu-id="a591e-483">Te wartości mogą być równoważna lub mogą być inne, jeśli dane w wierszu zostały zmienione od czasu wypełnianie `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="a591e-483">These values may be equivalent, or may be different if the data in the row has been changed since filling the `DataTable`.</span></span> <span data-ttu-id="a591e-484">Zobacz [stany wiersza i wersje wiersza](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md) Aby uzyskać więcej informacji.</span><span class="sxs-lookup"><span data-stu-id="a591e-484">See [Row States and Row Versions](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md) for more information.</span></span>  
  
 <span data-ttu-id="a591e-485">W tym wywołania metody, określony <xref:System.Data.LoadOption> parametr ma wpływ przetwarzania przychodzących danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-485">In this method call, the specified <xref:System.Data.LoadOption> parameter influences the processing of the incoming data.</span></span> <span data-ttu-id="a591e-486">Jak metoda obciążenia powinna obsługiwać ładowania wierszy, które mają taki sam klucz podstawowy, jak istniejące wiersze</span><span class="sxs-lookup"><span data-stu-id="a591e-486">How should the Load method handle loading rows that have the same primary key as existing rows?</span></span> <span data-ttu-id="a591e-487">Należy go zmodyfikować wartości bieżących i oryginalnych wartości?</span><span class="sxs-lookup"><span data-stu-id="a591e-487">Should it modify current values, original values, or both?</span></span> <span data-ttu-id="a591e-488">Te problemy i inne, są kontrolowane przez `loadOption` parametru.</span><span class="sxs-lookup"><span data-stu-id="a591e-488">These issues, and more, are controlled by the `loadOption` parameter.</span></span>  
  
 <span data-ttu-id="a591e-489">Jeśli istniejący wiersz i wiersz zawiera odpowiednie wartości klucza podstawowego, wiersz jest przetwarzany za pomocą jego wartość stanu bieżącego wiersza, w przeciwnym razie jest ona traktowana jako nowy wiersz.</span><span class="sxs-lookup"><span data-stu-id="a591e-489">If the existing row and the incoming row contain corresponding primary key values, the row is processed using its current row state value, otherwise it's treated as a new row.</span></span>  
  
 <span data-ttu-id="a591e-490">W odniesieniu do operacji zdarzeń <xref:System.Data.DataTable.RowChanging> zdarzenie przed każdego wiersza zostanie zmieniona i <xref:System.Data.DataTable.RowChanged> zdarzenie po zmianie każdego wiersza.</span><span class="sxs-lookup"><span data-stu-id="a591e-490">In terms of event operations, the <xref:System.Data.DataTable.RowChanging> event occurs before each row is changed, and the <xref:System.Data.DataTable.RowChanged> event occurs after each row has been changed.</span></span> <span data-ttu-id="a591e-491">W każdym przypadku <xref:System.Data.DataRowChangeEventArgs.Action%2A> właściwość <xref:System.Data.DataRowChangeEventArgs> wystąpienia przekazane do programu obsługi zdarzeń zawiera informacje o określonej akcji, skojarzone ze zdarzeniem.</span><span class="sxs-lookup"><span data-stu-id="a591e-491">In each case, the <xref:System.Data.DataRowChangeEventArgs.Action%2A> property of the <xref:System.Data.DataRowChangeEventArgs> instance passed to the event handler contains information about the particular action associated with the event.</span></span> <span data-ttu-id="a591e-492">Wartość tego działania różni się w zależności od stanu wiersz przed operacji ładowania.</span><span class="sxs-lookup"><span data-stu-id="a591e-492">This action value varies, depending on the state of the row before the load operation.</span></span> <span data-ttu-id="a591e-493">W każdym przypadku wystąpienia obu zdarzeń, a akcja jest taka sama dla każdego.</span><span class="sxs-lookup"><span data-stu-id="a591e-493">In each case, both events occur, and the action is the same for each.</span></span> <span data-ttu-id="a591e-494">Akcja może być stosowany do bieżącej lub oryginalnej wersji każdego wiersza i/lub w zależności od bieżącego stanu wiersza.</span><span class="sxs-lookup"><span data-stu-id="a591e-494">The action may be applied to either the current or original version of each row, or both, depending on the current row state.</span></span>  
  
 <span data-ttu-id="a591e-495">W poniższej tabeli przedstawiono zachowania dla metody Load, gdy wywoływana z każdym z `LoadOption` wartości, a także przedstawia interakcje wartości ze stanem wiersza dla wiersza ładowany.</span><span class="sxs-lookup"><span data-stu-id="a591e-495">The following table displays behavior for the Load method when called with each of the `LoadOption` values, and also shows how the values interact with the row state for the row being loaded.</span></span> <span data-ttu-id="a591e-496">Wiersza końcowego (oznaczony "(Brak)") określa zachowanie dla przychodzących wierszy, które nie odpowiadają dowolnego istniejącego wiersza.</span><span class="sxs-lookup"><span data-stu-id="a591e-496">The final row (labeled "(Not present)") describes the behavior for incoming rows that don't match any existing row.</span></span> <span data-ttu-id="a591e-497">Każdej komórki w poniższej tabeli opisano bieżących i oryginalnych wartości pola w wierszu, wraz z <xref:System.Data.DataRowState> wartości po `Load` metody została ukończona.</span><span class="sxs-lookup"><span data-stu-id="a591e-497">Each cell in this table describes the current and original value for a field within a row, along with the <xref:System.Data.DataRowState> for the value after the `Load` method has completed.</span></span>  
  
|<span data-ttu-id="a591e-498">Istniejącą właściwością DataRowState.</span><span class="sxs-lookup"><span data-stu-id="a591e-498">Existing DataRowState</span></span>|<span data-ttu-id="a591e-499">UPSERT</span><span class="sxs-lookup"><span data-stu-id="a591e-499">Upsert</span></span>|<span data-ttu-id="a591e-500">OverwriteChanges</span><span class="sxs-lookup"><span data-stu-id="a591e-500">OverwriteChanges</span></span>|<span data-ttu-id="a591e-501">PreserveChanges (domyślnie)</span><span class="sxs-lookup"><span data-stu-id="a591e-501">PreserveChanges (Default behavior)</span></span>|  
|---------------------------|------------|----------------------|------------------------------------------|  
|<span data-ttu-id="a591e-502">Dodane</span><span class="sxs-lookup"><span data-stu-id="a591e-502">Added</span></span>|<span data-ttu-id="a591e-503">Bieżący = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-503">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-504">Oryginalny = -\<nie jest dostępny ></span><span class="sxs-lookup"><span data-stu-id="a591e-504">Original = -\<Not available></span></span><br /><br /> <span data-ttu-id="a591e-505">Stan = \<dodane ></span><span class="sxs-lookup"><span data-stu-id="a591e-505">State = \<Added></span></span><br /><br /> <span data-ttu-id="a591e-506">RowAction = zmiany</span><span class="sxs-lookup"><span data-stu-id="a591e-506">RowAction = Change</span></span>|<span data-ttu-id="a591e-507">Bieżący = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-507">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-508">Oryginalny = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-508">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-509">Stan = \<niezmienione ></span><span class="sxs-lookup"><span data-stu-id="a591e-509">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="a591e-510">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="a591e-510">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="a591e-511">Bieżący = \<istniejących ></span><span class="sxs-lookup"><span data-stu-id="a591e-511">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="a591e-512">Oryginalny = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-512">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-513">Stan = \<zmodyfikować ></span><span class="sxs-lookup"><span data-stu-id="a591e-513">State = \<Modified></span></span><br /><br /> <span data-ttu-id="a591e-514">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="a591e-514">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="a591e-515">Zmodyfikowano</span><span class="sxs-lookup"><span data-stu-id="a591e-515">Modified</span></span>|<span data-ttu-id="a591e-516">Bieżący = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-516">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-517">Oryginalny = \<istniejących ></span><span class="sxs-lookup"><span data-stu-id="a591e-517">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="a591e-518">Stan = \<zmodyfikować ></span><span class="sxs-lookup"><span data-stu-id="a591e-518">State = \<Modified></span></span><br /><br /> <span data-ttu-id="a591e-519">RowAction = zmiany</span><span class="sxs-lookup"><span data-stu-id="a591e-519">RowAction = Change</span></span>|<span data-ttu-id="a591e-520">Bieżący = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-520">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-521">Oryginalny = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-521">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-522">Stan = \<niezmienione ></span><span class="sxs-lookup"><span data-stu-id="a591e-522">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="a591e-523">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="a591e-523">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="a591e-524">Bieżący = \<istniejących ></span><span class="sxs-lookup"><span data-stu-id="a591e-524">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="a591e-525">Oryginalny = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-525">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-526">Stan = \<zmodyfikować ></span><span class="sxs-lookup"><span data-stu-id="a591e-526">State = \<Modified></span></span><br /><br /> <span data-ttu-id="a591e-527">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="a591e-527">RowAction =ChangeOriginal</span></span>|  
<span data-ttu-id="a591e-528">ersję usuniętą</span><span class="sxs-lookup"><span data-stu-id="a591e-528">eleted</span></span>|<span data-ttu-id="a591e-529">(Nie wpływają na usunięte wiersze nie obciążenia)</span><span class="sxs-lookup"><span data-stu-id="a591e-529">(Load does not affect deleted rows)</span></span><br /><br /> <span data-ttu-id="a591e-530">Bieżący =---</span><span class="sxs-lookup"><span data-stu-id="a591e-530">Current = ---</span></span><br /><br /> <span data-ttu-id="a591e-531">Oryginalny = \<istniejących ></span><span class="sxs-lookup"><span data-stu-id="a591e-531">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="a591e-532">Stan = \<usunięty ></span><span class="sxs-lookup"><span data-stu-id="a591e-532">State = \<Deleted></span></span><br /><br /> <span data-ttu-id="a591e-533">(Dodaniu nowego rzędu o następującej charakterystyce)</span><span class="sxs-lookup"><span data-stu-id="a591e-533">(New row is added with the following characteristics)</span></span><br /><br /> <span data-ttu-id="a591e-534">Bieżący = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-534">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-535">Oryginalny = \<nie jest dostępny ></span><span class="sxs-lookup"><span data-stu-id="a591e-535">Original = \<Not available></span></span><br /><br /> <span data-ttu-id="a591e-536">Stan = \<dodane ></span><span class="sxs-lookup"><span data-stu-id="a591e-536">State = \<Added></span></span><br /><br /> <span data-ttu-id="a591e-537">RowAction = Dodaj</span><span class="sxs-lookup"><span data-stu-id="a591e-537">RowAction = Add</span></span>|<span data-ttu-id="a591e-538">Cofanie usuwania i</span><span class="sxs-lookup"><span data-stu-id="a591e-538">Undo delete and</span></span><br /><br /> <span data-ttu-id="a591e-539">Bieżący = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-539">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-540">Oryginalny = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-540">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-541">Stan = \<niezmienione ></span><span class="sxs-lookup"><span data-stu-id="a591e-541">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="a591e-542">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="a591e-542">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="a591e-543">Bieżący = \<nie jest dostępny ></span><span class="sxs-lookup"><span data-stu-id="a591e-543">Current = \<Not available></span></span><br /><br /> <span data-ttu-id="a591e-544">Oryginalny = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-544">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-545">Stan = \<usunięty ></span><span class="sxs-lookup"><span data-stu-id="a591e-545">State = \<Deleted></span></span><br /><br /> <span data-ttu-id="a591e-546">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="a591e-546">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="a591e-547">Bez zmian</span><span class="sxs-lookup"><span data-stu-id="a591e-547">Unchanged</span></span>|<span data-ttu-id="a591e-548">Bieżący = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-548">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-549">Oryginalny = \<istniejących ></span><span class="sxs-lookup"><span data-stu-id="a591e-549">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="a591e-550">Jeśli nowa wartość jest taka sama jak wartość następnie</span><span class="sxs-lookup"><span data-stu-id="a591e-550">If new value is the same as the existing value then</span></span><br /><br /> <span data-ttu-id="a591e-551">Stan = \<niezmienione ></span><span class="sxs-lookup"><span data-stu-id="a591e-551">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="a591e-552">RowAction = nic nie</span><span class="sxs-lookup"><span data-stu-id="a591e-552">RowAction = Nothing</span></span><br /><br /> <span data-ttu-id="a591e-553">else</span><span class="sxs-lookup"><span data-stu-id="a591e-553">Else</span></span><br /><br /> <span data-ttu-id="a591e-554">Stan = \<zmodyfikować ></span><span class="sxs-lookup"><span data-stu-id="a591e-554">State = \<Modified></span></span><br /><br /> <span data-ttu-id="a591e-555">RowAction = zmiany</span><span class="sxs-lookup"><span data-stu-id="a591e-555">RowAction = Change</span></span>|<span data-ttu-id="a591e-556">Bieżący = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-556">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-557">Oryginalny = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-557">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-558">Stan = \<niezmienione ></span><span class="sxs-lookup"><span data-stu-id="a591e-558">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="a591e-559">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="a591e-559">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="a591e-560">Bieżący = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-560">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-561">Oryginalny = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-561">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-562">Stan = \<niezmienione ></span><span class="sxs-lookup"><span data-stu-id="a591e-562">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="a591e-563">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="a591e-563">RowAction = ChangeCurrentAndOriginal</span></span>|  
<span data-ttu-id="a591e-564">Nie istnieje)</span><span class="sxs-lookup"><span data-stu-id="a591e-564">Not present)</span></span>|<span data-ttu-id="a591e-565">Bieżący = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-565">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-566">Oryginalny = \<nie jest dostępny ></span><span class="sxs-lookup"><span data-stu-id="a591e-566">Original = \<Not available></span></span><br /><br /> <span data-ttu-id="a591e-567">Stan = \<dodane ></span><span class="sxs-lookup"><span data-stu-id="a591e-567">State = \<Added></span></span><br /><br /> <span data-ttu-id="a591e-568">RowAction = Dodaj</span><span class="sxs-lookup"><span data-stu-id="a591e-568">RowAction = Add</span></span>|<span data-ttu-id="a591e-569">Bieżący = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-569">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-570">Oryginalny = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-570">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-571">Stan = \<niezmienione ></span><span class="sxs-lookup"><span data-stu-id="a591e-571">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="a591e-572">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="a591e-572">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="a591e-573">Bieżący = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-573">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-574">Oryginalny = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-574">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-575">Stan = \<niezmienione ></span><span class="sxs-lookup"><span data-stu-id="a591e-575">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="a591e-576">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="a591e-576">RowAction = ChangeCurrentAndOriginal</span></span>|  
  
 <span data-ttu-id="a591e-577">Wartości w <xref:System.Data.DataColumn> może być ograniczona przy użyciu właściwości takich jak <xref:System.Data.DataColumn.ReadOnly%2A> i <xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="a591e-577">Values in a <xref:System.Data.DataColumn> can be constrained through use of properties such as <xref:System.Data.DataColumn.ReadOnly%2A> and <xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="a591e-578">`Load` Metoda obsługuje takich kolumn w taki sposób, który jest zgodny z zachowaniem zdefiniowany za pomocą właściwości kolumny.</span><span class="sxs-lookup"><span data-stu-id="a591e-578">The `Load` method handles such columns in a manner that is consistent with the behavior defined by the column's properties.</span></span> <span data-ttu-id="a591e-579">Ograniczenie odczytu tylko <xref:System.Data.DataColumn> ma zastosowanie tylko w przypadku zmiany wprowadzone w pamięci.</span><span class="sxs-lookup"><span data-stu-id="a591e-579">The read only constraint on a <xref:System.Data.DataColumn> is applicable only for changes that occur in memory.</span></span> <span data-ttu-id="a591e-580">`Load` Metody spowoduje zastąpienie wartości kolumny tylko do odczytu, jeśli to konieczne.</span><span class="sxs-lookup"><span data-stu-id="a591e-580">The `Load` method's overwrites the read-only column values, if needed.</span></span>  
  
 <span data-ttu-id="a591e-581">Jeśli można określić opcji OverwriteChanges lub PreserveChanges podczas wywoływania metody `Load` metody, a następnie zakładając staje się czy danych przychodzących jest pochodzi z `DataTable`przez podstawowe źródło danych i DataTable śledzi zmiany i można propagować zmian z powrotem do źródła danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-581">If you specify the OverwriteChanges or PreserveChanges options when calling the `Load` method, then the assumption is made that the incoming data is coming from the `DataTable`'s primary data source, and the DataTable tracks changes and can propagate the changes back to the data source.</span></span> <span data-ttu-id="a591e-582">Jeśli wybrano opcję Upsert zakłada się, że pochodzą dane z jednego z pomocnicze źródło danych, takich jak dane dostarczone przez składnik warstwy środkowej, być może zostały zmienione przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a591e-582">If you select the Upsert option, it is assumed that the data is coming from one of a secondary data source, such as data provided by a middle-tier component, perhaps altered by a user.</span></span> <span data-ttu-id="a591e-583">W takim przypadku założenie jest celem do agregowania danych z jednego lub więcej źródeł danych w `DataTable`i być może propagować danych do podstawowego źródła danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-583">In this case, the assumption is that the intent is to aggregate data from one or more data sources in the `DataTable`, and then perhaps propagate the data back to the primary data source.</span></span> <span data-ttu-id="a591e-584"><xref:System.Data.LoadOption> Parametr jest używany do określania wersji wiersza, który ma być używana do porównania klucza podstawowego.</span><span class="sxs-lookup"><span data-stu-id="a591e-584">The <xref:System.Data.LoadOption> parameter is used for determining the specific version of the row that is to be used for primary key comparison.</span></span> <span data-ttu-id="a591e-585">Poniższa tabela zawiera szczegółowe informacje.</span><span class="sxs-lookup"><span data-stu-id="a591e-585">The table below provides the details.</span></span>  
  
|<span data-ttu-id="a591e-586">Opcja obciążenia</span><span class="sxs-lookup"><span data-stu-id="a591e-586">Load option</span></span>|<span data-ttu-id="a591e-587">Wersja DataRow używana na potrzeby porównania klucza podstawowego</span><span class="sxs-lookup"><span data-stu-id="a591e-587">DataRow version used for primary key comparison</span></span>|  
|-----------------|-----------------------------------------------------|  
|`OverwriteChanges`|<span data-ttu-id="a591e-588">Oryginalnej wersji, jeśli istnieje, w przeciwnym razie bieżącej wersji</span><span class="sxs-lookup"><span data-stu-id="a591e-588">Original version, if it exists, otherwise Current version</span></span>|  
|`PreserveChanges`|<span data-ttu-id="a591e-589">Oryginalnej wersji, jeśli istnieje, w przeciwnym razie bieżącej wersji</span><span class="sxs-lookup"><span data-stu-id="a591e-589">Original version, if it exists, otherwise Current version</span></span>|  
|`Upsert`|<span data-ttu-id="a591e-590">Bieżąca wersja, jeśli istnieje, w przeciwnym razie oryginalnej wersji</span><span class="sxs-lookup"><span data-stu-id="a591e-590">Current version, if it exists, otherwise Original version</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a591e-591">W poniższym przykładzie pokazano kilka zagadnień związanych z wywołaniem <xref:System.Data.DataTable.Load%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-591">The following example demonstrates several of the issues involved with calling the <xref:System.Data.DataTable.Load%2A> method.</span></span> <span data-ttu-id="a591e-592">Najpierw przykładzie koncentruje się na problemy schematu, łącznie z wnioskowanie schematu z załadować <xref:System.Data.IDataReader>, a następnie Obsługa niezgodne schematów i schematów, dla których brakuje lub dodatkowych kolumn.</span><span class="sxs-lookup"><span data-stu-id="a591e-592">First, the example focuses on schema issues, including inferring a schema from the loaded <xref:System.Data.IDataReader>, and then handling incompatible schemas, and schemas with missing or additional columns.</span></span> <span data-ttu-id="a591e-593">Przykład następnie koncentruje się na problemy z danych, w tym obsługi różnych opcji ładowania.</span><span class="sxs-lookup"><span data-stu-id="a591e-593">The example then focuses on data issues, including handling the various loading options.</span></span>  
  
 [!code-csharp[DataWorks DataTableLoad.LoadOption#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableLoad.LoadOption/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableLoad.LoadOption#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableLoad.LoadOption/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public virtual void Load (System.Data.IDataReader reader, System.Data.LoadOption loadOption, System.Data.FillErrorEventHandler errorHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class System.Data.IDataReader reader, valuetype System.Data.LoadOption loadOption, class System.Data.FillErrorEventHandler errorHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Load(System::Data::IDataReader ^ reader, System::Data::LoadOption loadOption, System::Data::FillErrorEventHandler ^ errorHandler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" />
        <Parameter Name="loadOption" Type="System.Data.LoadOption" />
        <Parameter Name="errorHandler" Type="System.Data.FillErrorEventHandler" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="a591e-594">A <see cref="T:System.Data.IDataReader" /> udostępniająca zestaw wyników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-594">A <see cref="T:System.Data.IDataReader" /> that provides a result set.</span>
          </span>
        </param>
        <param name="loadOption">
          <span data-ttu-id="a591e-595">Wartość z zakresu od <see cref="T:System.Data.LoadOption" /> wyliczenia, która wskazuje, jak wierszy znajdujących się w <see cref="T:System.Data.DataTable" /> są łączone z przychodzącego wierszy, które mają taki sam klucz podstawowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-595">A value from the <see cref="T:System.Data.LoadOption" /> enumeration that indicates how rows already in the <see cref="T:System.Data.DataTable" /> are combined with incoming rows that share the same primary key.</span>
          </span>
        </param>
        <param name="errorHandler">
          <span data-ttu-id="a591e-596">A <see cref="T:System.Data.FillErrorEventHandler" /> delegata do wywołania, gdy wystąpi błąd podczas ładowania danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-596">A <see cref="T:System.Data.FillErrorEventHandler" /> delegate to call when an error occurs while loading data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-597">Wypełnia <see cref="T:System.Data.DataTable" /> z wartości ze źródłem danych przy użyciu dostarczonego <see cref="T:System.Data.IDataReader" /> za pomocą obiektu delegowanego obsługi błędów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-597">Fills a <see cref="T:System.Data.DataTable" /> with values from a data source using the supplied <see cref="T:System.Data.IDataReader" /> using an error-handling delegate.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-598">`Load` — Metoda korzysta z pierwszego zestawu wyników z załadować <xref:System.Data.IDataReader>i po pomyślnym ukończeniu ustawia czytelnika pozycji dalej zestaw wyników, jeśli istnieją.</span><span class="sxs-lookup"><span data-stu-id="a591e-598">The `Load` method consumes the first result set from the loaded <xref:System.Data.IDataReader>, and after successful completion, sets the reader's position to the next result set, if any.</span></span> <span data-ttu-id="a591e-599">Podczas konwertowania danych, `Load` — metoda korzysta z tej samej reguły konwersji jako <xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-599">When converting data, the `Load` method uses the same conversion rules as the <xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="a591e-600">`Load` Metody należy wziąć pod uwagę trzy określonych problemów podczas ładowania danych z <xref:System.Data.IDataReader> wystąpienie: operacje schematu, dane i zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a591e-600">The `Load` method must take into account three specific issues when loading the data from an <xref:System.Data.IDataReader> instance: schema, data, and event operations.</span></span> <span data-ttu-id="a591e-601">Podczas pracy ze schematem, `Load` metody mogą wystąpić warunki, zgodnie z opisem w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="a591e-601">When working with the schema, the `Load` method may encounter conditions as described in the following table.</span></span> <span data-ttu-id="a591e-602">Operacje schematu została wykonana dla wszystkich zestawów wyników importowane, nawet tych, które zawierają żadnych danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-602">The schema operations take place for all imported result sets, even those containing no data.</span></span>  
  
|<span data-ttu-id="a591e-603">Warunek</span><span class="sxs-lookup"><span data-stu-id="a591e-603">Condition</span></span>|<span data-ttu-id="a591e-604">Zachowanie</span><span class="sxs-lookup"><span data-stu-id="a591e-604">Behavior</span></span>|  
|---------------|--------------|  
|<span data-ttu-id="a591e-605"><xref:System.Data.DataTable> Ma nie schematu.</span><span class="sxs-lookup"><span data-stu-id="a591e-605">The <xref:System.Data.DataTable> has no schema.</span></span>|<span data-ttu-id="a591e-606">`Load` Metody wnioskuje schemat oparte na zestawu wyników z importowanego <xref:System.Data.IDataReader>.</span><span class="sxs-lookup"><span data-stu-id="a591e-606">The `Load` method infers the schema based on the result set from the imported <xref:System.Data.IDataReader>.</span></span>|  
|<span data-ttu-id="a591e-607"><xref:System.Data.DataTable> Ma schematu, ale nie jest zgodny ze schematem załadowany.</span><span class="sxs-lookup"><span data-stu-id="a591e-607">The <xref:System.Data.DataTable> has a schema, but it is incompatible with the loaded schema.</span></span>|<span data-ttu-id="a591e-608">`Load` Metoda zgłosi wyjątek odpowiadający określonym błąd występujący podczas próby załadowania danych do schematu niezgodne.</span><span class="sxs-lookup"><span data-stu-id="a591e-608">The `Load` method throws an exception corresponding to the particular error that occurs when attempting to load data into the incompatible schema.</span></span>|  
|<span data-ttu-id="a591e-609">Schematy są zgodne, ale schemat zestawu załadować wynik zawiera kolumny, które nie istnieją w `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="a591e-609">The schemas are compatible, but the loaded result set schema contains columns that don't exist in the `DataTable`.</span></span>|<span data-ttu-id="a591e-610">`Load` Metoda dodaje dodatkowe kolumny do `DataTable`tego schematu.</span><span class="sxs-lookup"><span data-stu-id="a591e-610">The `Load` method adds the extra column(s) to `DataTable`’s schema.</span></span> <span data-ttu-id="a591e-611">Metoda zgłasza wyjątek, jeśli odpowiadającego kolumn w <xref:System.Data.DataTable> i zestawu wyników załadować nie są zgodne wartości.</span><span class="sxs-lookup"><span data-stu-id="a591e-611">The method throws an exception if corresponding columns in the <xref:System.Data.DataTable> and the loaded result set are not value compatible.</span></span> <span data-ttu-id="a591e-612">Metoda pobiera również informacje o ograniczeniach z zestawu wyników dla wszystkich dodanych kolumn.</span><span class="sxs-lookup"><span data-stu-id="a591e-612">The method also retrieves constraint information from the result set for all added columns.</span></span> <span data-ttu-id="a591e-613">Z wyjątkiem w przypadku ograniczenia Primary Key, te informacje ograniczenie jest używane tylko wtedy, gdy bieżący <xref:System.Data.DataTable> nie zawiera żadnych kolumn w chwili rozpoczęcia operacji ładowania.</span><span class="sxs-lookup"><span data-stu-id="a591e-613">Except for the case of Primary Key constraint, this constraint information is used only if the current <xref:System.Data.DataTable> does not contain any columns at the start of the load operation.</span></span>|  
|<span data-ttu-id="a591e-614">Schematy są zgodne, ale schemat zestawu załadować wynik zawiera mniejszą liczbę kolumn niż `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="a591e-614">The schemas are compatible, but the loaded result set schema contains fewer columns than does the `DataTable`.</span></span>|<span data-ttu-id="a591e-615">Jeśli brakuje kolumna ma zdefiniowanej wartości domyślnej lub wartości null, jest typ danych kolumny `Load` metoda pozwala wierszy ma zostać dodany, zastępując wartości domyślne lub wartość null w kolumnie brak.</span><span class="sxs-lookup"><span data-stu-id="a591e-615">If a missing column has a default value defined or the column's data type is nullable, the `Load` method allows the rows to be added, substituting the default or null value for the missing column.</span></span> <span data-ttu-id="a591e-616">Jeśli może być używany nie wartości domyślnej lub wartość null, a następnie `Load` metoda zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a591e-616">If no default value or null can be used, then the `Load` method throws an exception.</span></span> <span data-ttu-id="a591e-617">Jeśli zostały podane nie wybraną wartość domyślną, `Load` — metoda korzysta z wartości null jako wartość domyślną domyślnych.</span><span class="sxs-lookup"><span data-stu-id="a591e-617">If no specific default value has been supplied, the `Load` method uses the null value as the implied default value.</span></span>|  
  
 <span data-ttu-id="a591e-618">Przed biorąc pod uwagę zachowanie `Load` metody w odniesieniu do operacji danych uważają, że każdy wiersz w <xref:System.Data.DataTable> obsługuje zarówno bieżąca wartość i oryginalnej wartości dla każdej kolumny.</span><span class="sxs-lookup"><span data-stu-id="a591e-618">Before considering the behavior of the `Load` method in terms of data operations, consider that each row within a <xref:System.Data.DataTable> maintains both the current value and the original value for each column.</span></span> <span data-ttu-id="a591e-619">Te wartości mogą być równoważna lub mogą być inne, jeśli dane w wierszu zostały zmienione od czasu wypełnianie `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="a591e-619">These values may be equivalent, or may be different if the data in the row has been changed since filling the `DataTable`.</span></span> <span data-ttu-id="a591e-620">Zobacz [stany wiersza i wersje wiersza](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md) Aby uzyskać więcej informacji.</span><span class="sxs-lookup"><span data-stu-id="a591e-620">See [Row States and Row Versions](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md) for more information.</span></span>  
  
 <span data-ttu-id="a591e-621">W tym wywołania metody, określony <xref:System.Data.LoadOption> parametr ma wpływ przetwarzania przychodzących danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-621">In this method call, the specified <xref:System.Data.LoadOption> parameter influences the processing of the incoming data.</span></span> <span data-ttu-id="a591e-622">Jak metoda obciążenia powinna obsługiwać ładowania wierszy, które mają taki sam klucz podstawowy, jak istniejące wiersze</span><span class="sxs-lookup"><span data-stu-id="a591e-622">How should the Load method handle loading rows that have the same primary key as existing rows?</span></span> <span data-ttu-id="a591e-623">Należy go zmodyfikować wartości bieżących i oryginalnych wartości?</span><span class="sxs-lookup"><span data-stu-id="a591e-623">Should it modify current values, original values, or both?</span></span> <span data-ttu-id="a591e-624">Te problemy i inne, są kontrolowane przez `loadOption` parametru.</span><span class="sxs-lookup"><span data-stu-id="a591e-624">These issues, and more, are controlled by the `loadOption` parameter.</span></span>  
  
 <span data-ttu-id="a591e-625">Jeśli istniejący wiersz i wiersz zawiera odpowiednie wartości klucza podstawowego, wiersz jest przetwarzany za pomocą jego wartość stanu bieżącego wiersza, w przeciwnym razie jest ona traktowana jako nowy wiersz.</span><span class="sxs-lookup"><span data-stu-id="a591e-625">If the existing row and the incoming row contain corresponding primary key values, the row is processed using its current row state value, otherwise it's treated as a new row.</span></span>  
  
 <span data-ttu-id="a591e-626">W odniesieniu do operacji zdarzeń <xref:System.Data.DataTable.RowChanging> zdarzenie przed każdego wiersza zostanie zmieniona i <xref:System.Data.DataTable.RowChanged> zdarzenie po zmianie każdego wiersza.</span><span class="sxs-lookup"><span data-stu-id="a591e-626">In terms of event operations, the <xref:System.Data.DataTable.RowChanging> event occurs before each row is changed, and the <xref:System.Data.DataTable.RowChanged> event occurs after each row has been changed.</span></span> <span data-ttu-id="a591e-627">W każdym przypadku <xref:System.Data.DataRowChangeEventArgs.Action%2A> właściwość <xref:System.Data.DataRowChangeEventArgs> wystąpienia przekazane do programu obsługi zdarzeń zawiera informacje o określonej akcji, skojarzone ze zdarzeniem.</span><span class="sxs-lookup"><span data-stu-id="a591e-627">In each case, the <xref:System.Data.DataRowChangeEventArgs.Action%2A> property of the <xref:System.Data.DataRowChangeEventArgs> instance passed to the event handler contains information about the particular action associated with the event.</span></span> <span data-ttu-id="a591e-628">Wartość tego działania różni się w zależności od stanu wiersz przed operacji ładowania.</span><span class="sxs-lookup"><span data-stu-id="a591e-628">This action value varies, depending on the state of the row before the load operation.</span></span> <span data-ttu-id="a591e-629">W każdym przypadku wystąpienia obu zdarzeń, a akcja jest taka sama dla każdego.</span><span class="sxs-lookup"><span data-stu-id="a591e-629">In each case, both events occur, and the action is the same for each.</span></span> <span data-ttu-id="a591e-630">Akcja może być stosowany do bieżącej lub oryginalnej wersji każdego wiersza i/lub w zależności od bieżącego stanu wiersza.</span><span class="sxs-lookup"><span data-stu-id="a591e-630">The action may be applied to either the current or original version of each row, or both, depending on the current row state.</span></span>  
  
 <span data-ttu-id="a591e-631">W poniższej tabeli przedstawiono zachowania dla metody Load, gdy wywoływana z każdym z `LoadOption` wartości, a także przedstawia interakcje wartości ze stanem wiersza dla wiersza ładowany.</span><span class="sxs-lookup"><span data-stu-id="a591e-631">The following table displays behavior for the Load method when called with each of the `LoadOption` values, and also shows how the values interact with the row state for the row being loaded.</span></span> <span data-ttu-id="a591e-632">Wiersza końcowego (oznaczony "(Brak)") określa zachowanie dla przychodzących wierszy, które nie odpowiadają dowolnego istniejącego wiersza.</span><span class="sxs-lookup"><span data-stu-id="a591e-632">The final row (labeled "(Not present)") describes the behavior for incoming rows that don't match any existing row.</span></span> <span data-ttu-id="a591e-633">Każdej komórki w poniższej tabeli opisano bieżących i oryginalnych wartości pola w wierszu, wraz z <xref:System.Data.DataRowState> wartości po `Load` metody została ukończona.</span><span class="sxs-lookup"><span data-stu-id="a591e-633">Each cell in this table describes the current and original value for a field within a row, along with the <xref:System.Data.DataRowState> for the value after the `Load` method has completed.</span></span>  
  
|<span data-ttu-id="a591e-634">Istniejącą właściwością DataRowState.</span><span class="sxs-lookup"><span data-stu-id="a591e-634">Existing DataRowState</span></span>|<span data-ttu-id="a591e-635">UPSERT</span><span class="sxs-lookup"><span data-stu-id="a591e-635">Upsert</span></span>|<span data-ttu-id="a591e-636">OverwriteChanges</span><span class="sxs-lookup"><span data-stu-id="a591e-636">OverwriteChanges</span></span>|<span data-ttu-id="a591e-637">PreserveChanges (domyślnie)</span><span class="sxs-lookup"><span data-stu-id="a591e-637">PreserveChanges (Default behavior)</span></span>|  
|---------------------------|------------|----------------------|------------------------------------------|  
|<span data-ttu-id="a591e-638">Dodane</span><span class="sxs-lookup"><span data-stu-id="a591e-638">Added</span></span>|<span data-ttu-id="a591e-639">Bieżący = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-639">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-640">Oryginalny = -\<nie jest dostępny ></span><span class="sxs-lookup"><span data-stu-id="a591e-640">Original = -\<Not available></span></span><br /><br /> <span data-ttu-id="a591e-641">Stan = \<dodane ></span><span class="sxs-lookup"><span data-stu-id="a591e-641">State = \<Added></span></span><br /><br /> <span data-ttu-id="a591e-642">RowAction = zmiany</span><span class="sxs-lookup"><span data-stu-id="a591e-642">RowAction = Change</span></span>|<span data-ttu-id="a591e-643">Bieżący = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-643">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-644">Oryginalny = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-644">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-645">Stan = \<niezmienione ></span><span class="sxs-lookup"><span data-stu-id="a591e-645">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="a591e-646">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="a591e-646">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="a591e-647">Bieżący = \<istniejących ></span><span class="sxs-lookup"><span data-stu-id="a591e-647">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="a591e-648">Oryginalny = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-648">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-649">Stan = \<zmodyfikować ></span><span class="sxs-lookup"><span data-stu-id="a591e-649">State = \<Modified></span></span><br /><br /> <span data-ttu-id="a591e-650">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="a591e-650">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="a591e-651">Zmodyfikowano</span><span class="sxs-lookup"><span data-stu-id="a591e-651">Modified</span></span>|<span data-ttu-id="a591e-652">Bieżący = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-652">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-653">Oryginalny = \<istniejących ></span><span class="sxs-lookup"><span data-stu-id="a591e-653">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="a591e-654">Stan = \<zmodyfikować ></span><span class="sxs-lookup"><span data-stu-id="a591e-654">State = \<Modified></span></span><br /><br /> <span data-ttu-id="a591e-655">RowAction = zmiany</span><span class="sxs-lookup"><span data-stu-id="a591e-655">RowAction = Change</span></span>|<span data-ttu-id="a591e-656">Bieżący = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-656">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-657">Oryginalny = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-657">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-658">Stan = \<niezmienione ></span><span class="sxs-lookup"><span data-stu-id="a591e-658">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="a591e-659">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="a591e-659">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="a591e-660">Bieżący = \<istniejących ></span><span class="sxs-lookup"><span data-stu-id="a591e-660">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="a591e-661">Oryginalny = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-661">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-662">Stan = \<zmodyfikować ></span><span class="sxs-lookup"><span data-stu-id="a591e-662">State = \<Modified></span></span><br /><br /> <span data-ttu-id="a591e-663">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="a591e-663">RowAction =ChangeOriginal</span></span>|  
<span data-ttu-id="a591e-664">ersję usuniętą</span><span class="sxs-lookup"><span data-stu-id="a591e-664">eleted</span></span>|<span data-ttu-id="a591e-665">(Nie wpływają na usunięte wiersze nie obciążenia)</span><span class="sxs-lookup"><span data-stu-id="a591e-665">(Load does not affect deleted rows)</span></span><br /><br /> <span data-ttu-id="a591e-666">Bieżący =---</span><span class="sxs-lookup"><span data-stu-id="a591e-666">Current = ---</span></span><br /><br /> <span data-ttu-id="a591e-667">Oryginalny = \<istniejących ></span><span class="sxs-lookup"><span data-stu-id="a591e-667">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="a591e-668">Stan = \<usunięty ></span><span class="sxs-lookup"><span data-stu-id="a591e-668">State = \<Deleted></span></span><br /><br /> <span data-ttu-id="a591e-669">(Dodaniu nowego rzędu o następującej charakterystyce)</span><span class="sxs-lookup"><span data-stu-id="a591e-669">(New row is added with the following characteristics)</span></span><br /><br /> <span data-ttu-id="a591e-670">Bieżący = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-670">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-671">Oryginalny = \<nie jest dostępny ></span><span class="sxs-lookup"><span data-stu-id="a591e-671">Original = \<Not available></span></span><br /><br /> <span data-ttu-id="a591e-672">Stan = \<dodane ></span><span class="sxs-lookup"><span data-stu-id="a591e-672">State = \<Added></span></span><br /><br /> <span data-ttu-id="a591e-673">RowAction = Dodaj</span><span class="sxs-lookup"><span data-stu-id="a591e-673">RowAction = Add</span></span>|<span data-ttu-id="a591e-674">Cofanie usuwania i</span><span class="sxs-lookup"><span data-stu-id="a591e-674">Undo delete and</span></span><br /><br /> <span data-ttu-id="a591e-675">Bieżący = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-675">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-676">Oryginalny = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-676">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-677">Stan = \<niezmienione ></span><span class="sxs-lookup"><span data-stu-id="a591e-677">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="a591e-678">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="a591e-678">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="a591e-679">Bieżący = \<nie jest dostępny ></span><span class="sxs-lookup"><span data-stu-id="a591e-679">Current = \<Not available></span></span><br /><br /> <span data-ttu-id="a591e-680">Oryginalny = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-680">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-681">Stan = \<usunięty ></span><span class="sxs-lookup"><span data-stu-id="a591e-681">State = \<Deleted></span></span><br /><br /> <span data-ttu-id="a591e-682">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="a591e-682">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="a591e-683">Bez zmian</span><span class="sxs-lookup"><span data-stu-id="a591e-683">Unchanged</span></span>|<span data-ttu-id="a591e-684">Bieżący = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-684">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-685">Oryginalny = \<istniejących ></span><span class="sxs-lookup"><span data-stu-id="a591e-685">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="a591e-686">Jeśli nowa wartość jest taka sama jak wartość następnie</span><span class="sxs-lookup"><span data-stu-id="a591e-686">If new value is the same as the existing value then</span></span><br /><br /> <span data-ttu-id="a591e-687">Stan = \<niezmienione ></span><span class="sxs-lookup"><span data-stu-id="a591e-687">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="a591e-688">RowAction = nic nie</span><span class="sxs-lookup"><span data-stu-id="a591e-688">RowAction = Nothing</span></span><br /><br /> <span data-ttu-id="a591e-689">else</span><span class="sxs-lookup"><span data-stu-id="a591e-689">Else</span></span><br /><br /> <span data-ttu-id="a591e-690">Stan = \<zmodyfikować ></span><span class="sxs-lookup"><span data-stu-id="a591e-690">State = \<Modified></span></span><br /><br /> <span data-ttu-id="a591e-691">RowAction = zmiany</span><span class="sxs-lookup"><span data-stu-id="a591e-691">RowAction = Change</span></span>|<span data-ttu-id="a591e-692">Bieżący = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-692">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-693">Oryginalny = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-693">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-694">Stan = \<niezmienione ></span><span class="sxs-lookup"><span data-stu-id="a591e-694">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="a591e-695">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="a591e-695">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="a591e-696">Bieżący = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-696">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-697">Oryginalny = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-697">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-698">Stan = \<niezmienione ></span><span class="sxs-lookup"><span data-stu-id="a591e-698">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="a591e-699">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="a591e-699">RowAction = ChangeCurrentAndOriginal</span></span>|  
<span data-ttu-id="a591e-700">Nie istnieje)</span><span class="sxs-lookup"><span data-stu-id="a591e-700">Not present)</span></span>|<span data-ttu-id="a591e-701">Bieżący = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-701">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-702">Oryginalny = \<nie jest dostępny ></span><span class="sxs-lookup"><span data-stu-id="a591e-702">Original = \<Not available></span></span><br /><br /> <span data-ttu-id="a591e-703">Stan = \<dodane ></span><span class="sxs-lookup"><span data-stu-id="a591e-703">State = \<Added></span></span><br /><br /> <span data-ttu-id="a591e-704">RowAction = Dodaj</span><span class="sxs-lookup"><span data-stu-id="a591e-704">RowAction = Add</span></span>|<span data-ttu-id="a591e-705">Bieżący = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-705">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-706">Oryginalny = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-706">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-707">Stan = \<niezmienione ></span><span class="sxs-lookup"><span data-stu-id="a591e-707">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="a591e-708">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="a591e-708">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="a591e-709">Bieżący = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-709">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-710">Oryginalny = \<przychodzące ></span><span class="sxs-lookup"><span data-stu-id="a591e-710">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="a591e-711">Stan = \<niezmienione ></span><span class="sxs-lookup"><span data-stu-id="a591e-711">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="a591e-712">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="a591e-712">RowAction = ChangeCurrentAndOriginal</span></span>|  
  
 <span data-ttu-id="a591e-713">Wartości w <xref:System.Data.DataColumn> może być ograniczona przy użyciu właściwości takich jak <xref:System.Data.DataColumn.ReadOnly%2A> i <xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="a591e-713">Values in a <xref:System.Data.DataColumn> can be constrained through use of properties such as <xref:System.Data.DataColumn.ReadOnly%2A> and <xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="a591e-714">`Load` Metoda obsługuje takich kolumn w taki sposób, który jest zgodny z zachowaniem zdefiniowany za pomocą właściwości kolumny.</span><span class="sxs-lookup"><span data-stu-id="a591e-714">The `Load` method handles such columns in a manner that is consistent with the behavior defined by the column's properties.</span></span> <span data-ttu-id="a591e-715">Ograniczenie odczytu tylko <xref:System.Data.DataColumn> ma zastosowanie tylko w przypadku zmiany wprowadzone w pamięci.</span><span class="sxs-lookup"><span data-stu-id="a591e-715">The read only constraint on a <xref:System.Data.DataColumn> is applicable only for changes that occur in memory.</span></span> <span data-ttu-id="a591e-716">`Load` Metody spowoduje zastąpienie wartości kolumny tylko do odczytu, jeśli to konieczne.</span><span class="sxs-lookup"><span data-stu-id="a591e-716">The `Load` method's overwrites the read-only column values, if needed.</span></span>  
  
 <span data-ttu-id="a591e-717">Jeśli można określić opcji OverwriteChanges lub PreserveChanges podczas wywoływania metody `Load` metody, a następnie zakładając staje się czy danych przychodzących jest pochodzi z `DataTable`przez podstawowe źródło danych i DataTable śledzi zmiany i można propagować zmian z powrotem do źródła danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-717">If you specify the OverwriteChanges or PreserveChanges options when calling the `Load` method, then the assumption is made that the incoming data is coming from the `DataTable`'s primary data source, and the DataTable tracks changes and can propagate the changes back to the data source.</span></span> <span data-ttu-id="a591e-718">Jeśli wybrano opcję Upsert zakłada się, że pochodzą dane z jednego z pomocnicze źródło danych, takich jak dane dostarczone przez składnik warstwy środkowej, być może zostały zmienione przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a591e-718">If you select the Upsert option, it is assumed that the data is coming from one of a secondary data source, such as data provided by a middle-tier component, perhaps altered by a user.</span></span> <span data-ttu-id="a591e-719">W takim przypadku założenie jest celem do agregowania danych z jednego lub więcej źródeł danych w `DataTable`i być może propagować danych do podstawowego źródła danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-719">In this case, the assumption is that the intent is to aggregate data from one or more data sources in the `DataTable`, and then perhaps propagate the data back to the primary data source.</span></span> <span data-ttu-id="a591e-720"><xref:System.Data.LoadOption> Parametr jest używany do określania wersji wiersza, który ma być używana do porównania klucza podstawowego.</span><span class="sxs-lookup"><span data-stu-id="a591e-720">The <xref:System.Data.LoadOption> parameter is used for determining the specific version of the row that is to be used for primary key comparison.</span></span> <span data-ttu-id="a591e-721">Poniższa tabela zawiera szczegółowe informacje.</span><span class="sxs-lookup"><span data-stu-id="a591e-721">The table below provides the details.</span></span>  
  
|<span data-ttu-id="a591e-722">Opcja obciążenia</span><span class="sxs-lookup"><span data-stu-id="a591e-722">Load option</span></span>|<span data-ttu-id="a591e-723">Wersja DataRow używana na potrzeby porównania klucza podstawowego</span><span class="sxs-lookup"><span data-stu-id="a591e-723">DataRow version used for primary key comparison</span></span>|  
|-----------------|-----------------------------------------------------|  
|`OverwriteChanges`|<span data-ttu-id="a591e-724">Oryginalnej wersji, jeśli istnieje, w przeciwnym razie bieżącej wersji</span><span class="sxs-lookup"><span data-stu-id="a591e-724">Original version, if it exists, otherwise Current version</span></span>|  
|`PreserveChanges`|<span data-ttu-id="a591e-725">Oryginalnej wersji, jeśli istnieje, w przeciwnym razie bieżącej wersji</span><span class="sxs-lookup"><span data-stu-id="a591e-725">Original version, if it exists, otherwise Current version</span></span>|  
|`Upsert`|<span data-ttu-id="a591e-726">Bieżąca wersja, jeśli istnieje, w przeciwnym razie oryginalnej wersji</span><span class="sxs-lookup"><span data-stu-id="a591e-726">Current version, if it exists, otherwise Original version</span></span>|  
  
 <span data-ttu-id="a591e-727">`errorHandler` Parametr jest <xref:System.Data.FillErrorEventHandler> delegata, który odwołuje się do procedury, która jest wywoływana, gdy wystąpi błąd podczas ładowania danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-727">The `errorHandler` parameter is a <xref:System.Data.FillErrorEventHandler> delegate that refers to a procedure that is called when an error occurs while loading data.</span></span> <span data-ttu-id="a591e-728"><xref:System.Data.FillErrorEventArgs> Parametr przekazany do procedury dostarcza właściwości, które umożliwiają pobieranie informacji o błędzie, który wystąpił, bieżący wiersz danych, i <xref:System.Data.DataTable> są wypełnione.</span><span class="sxs-lookup"><span data-stu-id="a591e-728">The <xref:System.Data.FillErrorEventArgs> parameter passed to the procedure provides properties that allow you to retrieve information about the error that occurred, the current row of data, and the <xref:System.Data.DataTable> being filled.</span></span> <span data-ttu-id="a591e-729">Za pomocą mechanizm ten delegat, zamiast prostsze bloku try/catch, służy do określania błędu, obsłużyć sytuację i kontynuować przetwarzanie, jeśli chcesz.</span><span class="sxs-lookup"><span data-stu-id="a591e-729">Using this delegate mechanism, rather than a simpler try/catch block, allows you to determine the error, handle the situation, and continue processing if you like.</span></span> <span data-ttu-id="a591e-730"><xref:System.Data.FillErrorEventArgs> Parametr dostarcza <xref:System.Data.FillErrorEventArgs.Continue%2A> właściwość: wartość tej właściwości `true` oznacza zapewnienia obsługi błędu i kontynuować przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="a591e-730">The <xref:System.Data.FillErrorEventArgs> parameter supplies a <xref:System.Data.FillErrorEventArgs.Continue%2A> property: set this property to `true` to indicate that you have handled the error and wish to continue processing.</span></span> <span data-ttu-id="a591e-731">Ustaw dla właściwości `false` wskazująca, czy chcesz zatrzymać przetwarzanie.</span><span class="sxs-lookup"><span data-stu-id="a591e-731">Set the property to `false` to indicate that you wish to halt processing.</span></span> <span data-ttu-id="a591e-732">Należy pamiętać, że ustawienie właściwości `false` powoduje, że kod, która wyzwoliła problem do zgłoszenia wyjątku.</span><span class="sxs-lookup"><span data-stu-id="a591e-732">Be aware that setting the property to `false` causes the code that triggered the problem to throw an exception.</span></span>  
  
   
  
## Examples  
 [!code-csharp[DataWorks DataTableLoad.ErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableLoad.ErrorEventHandler/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableLoad.ErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableLoad.ErrorEventHandler/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadDataRow">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-733">Wyszukuje i aktualizuje określonego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-733">Finds and updates a specific row.</span>
          </span>
          <span data-ttu-id="a591e-734">Jeśli zostanie znaleziony ma pasującego wiersza, nowy wiersz jest tworzony przy użyciu podanej wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-734">If no matching row is found, a new row is created using the given values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadDataRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow LoadDataRow (object[] values, bool fAcceptChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow LoadDataRow(object[] values, bool fAcceptChanges) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadDataRow (values As Object(), fAcceptChanges As Boolean) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ LoadDataRow(cli::array &lt;System::Object ^&gt; ^ values, bool fAcceptChanges);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
        <Parameter Name="fAcceptChanges" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="a591e-735">Tablica wartości użyte do utworzenia nowego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-735">An array of values used to create the new row.</span>
          </span>
        </param>
        <param name="fAcceptChanges">
          <span data-ttu-id="a591e-736">
            <see langword="true" /> Aby zaakceptować zmiany. w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-736">
              <see langword="true" /> to accept changes; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-737">Wyszukuje i aktualizuje określonego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-737">Finds and updates a specific row.</span>
          </span>
          <span data-ttu-id="a591e-738">Jeśli zostanie znaleziony ma pasującego wiersza, nowy wiersz jest tworzony przy użyciu podanej wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-738">If no matching row is found, a new row is created using the given values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a591e-739">Nowe <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-739">The new <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-740"><xref:System.Data.DataTable.LoadDataRow%2A> Metoda pobiera tablicę wartości i znajduje dopasowywania wartości z kolumn klucza podstawowego.</span><span class="sxs-lookup"><span data-stu-id="a591e-740">The <xref:System.Data.DataTable.LoadDataRow%2A> method takes an array of values and finds the matching value(s) in the primary key column(s).</span></span>  
  
 <span data-ttu-id="a591e-741">Jeśli kolumna ma wartość domyślną, należy przekazać wartość null w tablicy, tak aby ustawiać domyślną wartość dla tej kolumny.</span><span class="sxs-lookup"><span data-stu-id="a591e-741">If a column has a default value, pass a null value in the array to set the default value for that column.</span></span> <span data-ttu-id="a591e-742">Podobnie jeśli kolumna zawiera jego <xref:System.Data.DataColumn.AutoIncrement%2A> właściwości ustawiono wartość true, należy przekazać wartość null w tablicy można ustawić wartości automatycznie generowanego wiersza.</span><span class="sxs-lookup"><span data-stu-id="a591e-742">Similarly, if a column has its <xref:System.Data.DataColumn.AutoIncrement%2A> property set to true, pass a null value in the array to set the automatically generated value for the row.</span></span>  
  
 <span data-ttu-id="a591e-743">Jeśli `fAcceptChanges` parametr jest `true` lub nie jest określony, dodaje nowe dane, a następnie <xref:System.Data.DataTable.AcceptChanges%2A> jest wywoływana, aby zaakceptować wszystkie zmiany w <xref:System.Data.DataTable>; Jeśli wartością argumentu jest `false`, nowo dodanych wierszy są oznaczone jako wstawienia i zmiany istniejące wiersze zostały oznaczone jako modyfikacje.</span><span class="sxs-lookup"><span data-stu-id="a591e-743">If the `fAcceptChanges` parameter is `true` or not specified, the new data is added and then <xref:System.Data.DataTable.AcceptChanges%2A> is called to accept all changes in the <xref:System.Data.DataTable>; if the argument is `false`, newly added rows are marked as insertions, and changes to existing rows are marked as modifications.</span></span>  
  
 <span data-ttu-id="a591e-744">Wyjątki może również wystąpić podczas albo <xref:System.Data.DataTable.ColumnChanging> lub <xref:System.Data.DataTable.RowChanging> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="a591e-744">Exceptions can also occur during either a <xref:System.Data.DataTable.ColumnChanging> or <xref:System.Data.DataTable.RowChanging> event.</span></span> <span data-ttu-id="a591e-745">Jeśli wystąpi wyjątek, wiersz nie został dodany do tabeli.</span><span class="sxs-lookup"><span data-stu-id="a591e-745">If an exception occurs, the row is not added to the table.</span></span>  
  
 <span data-ttu-id="a591e-746">Użyj <xref:System.Data.DataTable.LoadDataRow%2A> w połączeniu z <xref:System.Data.DataTable.BeginLoadData%2A> i <xref:System.Data.DataTable.EndLoadData%2A>.</span><span class="sxs-lookup"><span data-stu-id="a591e-746">Use <xref:System.Data.DataTable.LoadDataRow%2A> in conjunction with <xref:System.Data.DataTable.BeginLoadData%2A> and <xref:System.Data.DataTable.EndLoadData%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-747">W poniższym przykładzie użyto <xref:System.Data.DataTable.LoadDataRow%2A> metoda próbuje odnaleźć wiersza.</span><span class="sxs-lookup"><span data-stu-id="a591e-747">The following example uses the <xref:System.Data.DataTable.LoadDataRow%2A> method to attempt to find a row.</span></span> <span data-ttu-id="a591e-748">Przypadku nieznalezienia ma takie wiersza, wartości są używane do tworzenia nowego wiersza.</span><span class="sxs-lookup"><span data-stu-id="a591e-748">If no such row is found, the values are used to create a new row.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.LoadDataRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.LoadDataRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.LoadDataRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.LoadDataRow Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a591e-749">Tablica jest większa niż liczba kolumn w tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-749">The array is larger than the number of columns in the table.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="a591e-750">Wartość nie pasuje do typu jego odpowiednich kolumn.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-750">A value doesn't match its respective column type.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.ConstraintException">
          <span data-ttu-id="a591e-751">Dodawanie wiersza unieważnia ograniczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-751">Adding the row invalidates a constraint.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.NoNullAllowedException">
          <span data-ttu-id="a591e-752">Próba umieścić wartość null w kolumnie gdzie <see cref="P:System.Data.DataColumn.AllowDBNull" /> ma wartość false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-752">Attempting to put a null in a column where <see cref="P:System.Data.DataColumn.AllowDBNull" /> is false.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LoadDataRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow LoadDataRow (object[] values, System.Data.LoadOption loadOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow LoadDataRow(object[] values, valuetype System.Data.LoadOption loadOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ LoadDataRow(cli::array &lt;System::Object ^&gt; ^ values, System::Data::LoadOption loadOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
        <Parameter Name="loadOption" Type="System.Data.LoadOption" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="a591e-753">Tablica wartości użyte do utworzenia nowego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-753">An array of values used to create the new row.</span>
          </span>
        </param>
        <param name="loadOption">
          <span data-ttu-id="a591e-754">Używany do określania, jak wartości są stosowane do odpowiedniej wartości w istniejącym wierszu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-754">Used to determine how the array values are applied to the corresponding values in an existing row.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-755">Wyszukuje i aktualizuje określonego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-755">Finds and updates a specific row.</span>
          </span>
          <span data-ttu-id="a591e-756">Jeśli zostanie znaleziony ma pasującego wiersza, nowy wiersz jest tworzony przy użyciu podanej wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-756">If no matching row is found, a new row is created using the given values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a591e-757">Nowe <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-757">The new <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-758"><xref:System.Data.DataTable.LoadDataRow%2A> Metoda pobiera tablicę wartości i znajduje dopasowywania wartości z kolumn klucza podstawowego.</span><span class="sxs-lookup"><span data-stu-id="a591e-758">The <xref:System.Data.DataTable.LoadDataRow%2A> method takes an array of values and finds the matching value(s) in the primary key column(s).</span></span>  
  
 <span data-ttu-id="a591e-759">Jeśli kolumna ma wartość domyślną, należy przekazać wartość null w tablicy, tak aby ustawiać domyślną wartość dla tej kolumny.</span><span class="sxs-lookup"><span data-stu-id="a591e-759">If a column has a default value, pass a null value in the array to set the default value for that column.</span></span> <span data-ttu-id="a591e-760">Podobnie jeśli kolumna zawiera jego <xref:System.Data.DataColumn.AutoIncrement%2A> właściwości ustawiono wartość true, należy przekazać wartość null w tablicy można ustawić wartości automatycznie generowanego wiersza.</span><span class="sxs-lookup"><span data-stu-id="a591e-760">Similarly, if a column has its <xref:System.Data.DataColumn.AutoIncrement%2A> property set to true, pass a null value in the array to set the automatically generated value for the row.</span></span>  
  
 <span data-ttu-id="a591e-761">Wartość `loadOption` parametr jest używany do określenia sposobu wartości w tablicy są stosowane do istniejącego wiersza.</span><span class="sxs-lookup"><span data-stu-id="a591e-761">The value of the `loadOption` parameter is used to determine how the values in the array are applied to an existing row.</span></span> <span data-ttu-id="a591e-762">Na przykład jeśli `loadOption` ustawiono `OverwriteChanges`, `Original` i `Current` wartości kolumn są zamieniane na wartości w wierszu przychodzące i `RowState` właściwość jest ustawiona na `Unchanged`.</span><span class="sxs-lookup"><span data-stu-id="a591e-762">For example, if `loadOption` is set to `OverwriteChanges`, the `Original` and `Current` values of each column are replaced with the values in the incoming row and the `RowState` property is set to `Unchanged`.</span></span>  
  
 <span data-ttu-id="a591e-763">Wyjątki może również wystąpić podczas albo <xref:System.Data.DataTable.ColumnChanging> lub <xref:System.Data.DataTable.RowChanging> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="a591e-763">Exceptions can also occur during either a <xref:System.Data.DataTable.ColumnChanging> or <xref:System.Data.DataTable.RowChanging> event.</span></span> <span data-ttu-id="a591e-764">Jeśli wystąpi wyjątek, wiersz nie został dodany do tabeli.</span><span class="sxs-lookup"><span data-stu-id="a591e-764">If an exception occurs, the row is not added to the table.</span></span>  
  
 <span data-ttu-id="a591e-765">Użyj <xref:System.Data.DataTable.LoadDataRow%2A> w połączeniu z <xref:System.Data.DataTable.BeginLoadData%2A> i <xref:System.Data.DataTable.EndLoadData%2A>.</span><span class="sxs-lookup"><span data-stu-id="a591e-765">Use <xref:System.Data.DataTable.LoadDataRow%2A> in conjunction with <xref:System.Data.DataTable.BeginLoadData%2A> and <xref:System.Data.DataTable.EndLoadData%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Locale">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Locale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Locale" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Locale" />
      <MemberSignature Language="VB.NET" Value="Public Property Locale As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Locale { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-766">Pobiera lub ustawia informacje dotyczące ustawień regionalnych używanych do porównania ciągów wewnątrz tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-766">Gets or sets the locale information used to compare strings within the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a591e-767">A <see cref="T:System.Globalization.CultureInfo" /> zawierający dane dotyczące ustawień regionalnych komputera użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-767">A <see cref="T:System.Globalization.CultureInfo" /> that contains data about the user's machine locale.</span>
          </span>
          <span data-ttu-id="a591e-768">Wartość domyślna to <see cref="T:System.Data.DataSet" /> obiektu <see cref="T:System.Globalization.CultureInfo" /> (zwrócony przez <see cref="P:System.Data.DataSet.Locale" /> właściwości) do której <see cref="T:System.Data.DataTable" /> należy; Jeśli tabeli nie należy do <see cref="T:System.Data.DataSet" />, wartość domyślna to bieżący system <see cref="T:System.Globalization.CultureInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-768">The default is the <see cref="T:System.Data.DataSet" /> object's <see cref="T:System.Globalization.CultureInfo" /> (returned by the <see cref="P:System.Data.DataSet.Locale" /> property) to which the <see cref="T:System.Data.DataTable" /> belongs; if the table doesn't belong to a <see cref="T:System.Data.DataSet" />, the default is the current system <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-769">A <xref:System.Globalization.CultureInfo> reprezentuje preferencje oprogramowania określonej kultury lub społeczności.</span><span class="sxs-lookup"><span data-stu-id="a591e-769">A <xref:System.Globalization.CultureInfo> represents the software preferences of a particular culture or community.</span></span>  
  
 <span data-ttu-id="a591e-770">Gdy jest używany do porównywnania ciągów <xref:System.Globalization.CultureInfo> wpływa na filtrowanie i sortowanie porównania.</span><span class="sxs-lookup"><span data-stu-id="a591e-770">When used for string comparisons, the <xref:System.Globalization.CultureInfo> affects sorting, comparisons, and filtering.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a591e-771">W kolumnach, które zawierają wyrażenia <xref:System.StringComparison.InvariantCulture> jest używany.</span><span class="sxs-lookup"><span data-stu-id="a591e-771">In columns that contain expressions, the <xref:System.StringComparison.InvariantCulture> is used.</span></span> <span data-ttu-id="a591e-772"><xref:System.StringComparison.CurrentCulture> Jest ignorowana.</span><span class="sxs-lookup"><span data-stu-id="a591e-772">The <xref:System.StringComparison.CurrentCulture> is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-773">W poniższym przykładzie <xref:System.Globalization.CultureInfo> za pośrednictwem <xref:System.Data.DataTable.Locale%2A> i wyświetla nazwę języka ISO.</span><span class="sxs-lookup"><span data-stu-id="a591e-773">The following example sets the <xref:System.Globalization.CultureInfo> through the <xref:System.Data.DataTable.Locale%2A> and prints the ISO language name.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Locale Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Locale Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Locale Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Locale Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Merge">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-774">Scal określonego <see cref="T:System.Data.DataTable" /> z bieżącym <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-774">Merge the specified <see cref="T:System.Data.DataTable" /> with the current <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-775">`Merge` Metoda jest używana do scalenia dwa <xref:System.Data.DataTable> obiektów, które mają schematów w znacznym stopniu podobne.</span><span class="sxs-lookup"><span data-stu-id="a591e-775">The `Merge` method is used to merge two <xref:System.Data.DataTable> objects that have largely similar schemas.</span></span> <span data-ttu-id="a591e-776">Scalanie jest zwykle używana w aplikacji klienta do zastosować ostatnie zmiany ze źródła danych w istniejącej <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-776">A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="a591e-777">Umożliwia to aplikacji klienta odświeżyć <xref:System.Data.DataTable> przy użyciu najnowszych danych ze źródła danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-777">This allows the client application to have a refreshed <xref:System.Data.DataTable> with the latest data from the data source.</span></span>  
  
 <span data-ttu-id="a591e-778">Operacja scalania uwzględnia oryginalnej tabeli, a tabela, która ma być scalone.</span><span class="sxs-lookup"><span data-stu-id="a591e-778">The merge operation takes into account only the original table, and the table to be merged.</span></span> <span data-ttu-id="a591e-779">Nie dotyczy lub częścią tabele podrzędne.</span><span class="sxs-lookup"><span data-stu-id="a591e-779">Child tables are not affected or included.</span></span> <span data-ttu-id="a591e-780">Jeśli tabela ma co najmniej jednej tabeli podrzędnej definiowane jako część relacji każdej tabeli podrzędnej muszą zostać połączone pojedynczo.</span><span class="sxs-lookup"><span data-stu-id="a591e-780">If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-781">Następującej aplikacji konsoli Pokazuje zachowanie `missingSchemaAction` parametr <xref:System.Data.DataTable.Merge%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-781">The following console application demonstrates the behavior of the `missingSchemaAction` parameter of the <xref:System.Data.DataTable.Merge%2A> method.</span></span> <span data-ttu-id="a591e-782">W tym przykładzie tworzy dwie wersje tej samej tabeli modyfikowania schematu dla drugiego wersji.</span><span class="sxs-lookup"><span data-stu-id="a591e-782">This example creates two versions of the same table, modifying the schema for the second version.</span></span> <span data-ttu-id="a591e-783">Kod podejmuje próbę scalenia drugiej tabeli pierwszy.</span><span class="sxs-lookup"><span data-stu-id="a591e-783">The code then attempts to merge the second table into the first.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a591e-784">Ten przykład przedstawia sposób użycia jednej z wersji przeciążone scalania.</span><span class="sxs-lookup"><span data-stu-id="a591e-784">This example shows how to use one of the overloaded versions of Merge.</span></span> <span data-ttu-id="a591e-785">Inne przykłady, które mogą być dostępne znajduje się w tematach poszczególnych przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="a591e-785">For other examples that might be available, see the individual overload topics.</span></span>  
  
 [!code-csharp[DataWorks DataTableMergeOverload#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableMergeOverload/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableMergeOverload#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableMergeOverload/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public void Merge (System.Data.DataTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Merge(class System.Data.DataTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Merge(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Merge (table As DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Merge(System::Data::DataTable ^ table);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="table">
          <span data-ttu-id="a591e-786">
            <see cref="T:System.Data.DataTable" /> Do scalenia z bieżącym <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-786">The <see cref="T:System.Data.DataTable" /> to be merged with the current <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-787">Scal określonego <see cref="T:System.Data.DataTable" /> z bieżącym <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-787">Merge the specified <see cref="T:System.Data.DataTable" /> with the current <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-788">Merge — metoda jest używana do scalenia dwa <xref:System.Data.DataTable> obiektów, które mają schematów w znacznym stopniu podobne.</span><span class="sxs-lookup"><span data-stu-id="a591e-788">The Merge method is used to merge two <xref:System.Data.DataTable> objects that have largely similar schemas.</span></span> <span data-ttu-id="a591e-789">Scalanie jest zwykle używana w aplikacji klienta do zastosować ostatnie zmiany ze źródła danych w istniejącej <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-789">A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="a591e-790">Umożliwia to aplikacji klienta odświeżyć <xref:System.Data.DataTable> przy użyciu najnowszych danych ze źródła danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-790">This allows the client application to have a refreshed <xref:System.Data.DataTable> with the latest data from the data source.</span></span>  
  
 <span data-ttu-id="a591e-791">Operacja scalania uwzględnia oryginalnej tabeli, a tabela, która ma być scalone.</span><span class="sxs-lookup"><span data-stu-id="a591e-791">The merge operation takes into account only the original table, and the table to be merged.</span></span> <span data-ttu-id="a591e-792">Nie dotyczy lub częścią tabele podrzędne.</span><span class="sxs-lookup"><span data-stu-id="a591e-792">Child tables are not affected or included.</span></span> <span data-ttu-id="a591e-793">Jeśli tabela ma co najmniej jednej tabeli podrzędnej definiowane jako część relacji każdej tabeli podrzędnej muszą zostać połączone pojedynczo.</span><span class="sxs-lookup"><span data-stu-id="a591e-793">If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</span></span>  
  
 <span data-ttu-id="a591e-794">`Merge` Zazwyczaj wywoływana jest metoda na końcu szereg procedur obejmujących sprawdzanie poprawności zmiany, uzgadnianie błędy aktualizacji źródła danych ze zmianami i na koniec odświeżanie istniejącego <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-794">The `Merge` method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="a591e-795">Podczas przeprowadzania scalania, zmiany wprowadzone w istniejących danych przed scaleniem są zachowywane domyślnie podczas operacji scalania.</span><span class="sxs-lookup"><span data-stu-id="a591e-795">When performing a merge, changes made to the existing data before the merge are preserved by default during the merge operation.</span></span> <span data-ttu-id="a591e-796">Deweloperzy można modyfikować tego zachowania wywołaniem inne przeciążenia tej metody, a następnie określając wartość false dla `preserveChanges` parametru.</span><span class="sxs-lookup"><span data-stu-id="a591e-796">Developers can modify this behavior by calling one of the other two overloads for this method, and specifying a false value for the `preserveChanges` parameter.</span></span>  
  
 <span data-ttu-id="a591e-797">W aplikacji klienckiej jest zwykle ma jednego przycisku, który użytkownik może kliknąć zbiera dane zmienione, a następnie zweryfikuje go przed wysłaniem go z powrotem do składników warstwy środkowej.</span><span class="sxs-lookup"><span data-stu-id="a591e-797">In a client application, it is usual to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle tier component.</span></span> <span data-ttu-id="a591e-798">W tym scenariuszu <xref:System.Data.DataTable.GetChanges%2A> wywołaniu metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-798">In this scenario, the <xref:System.Data.DataTable.GetChanges%2A> method is first invoked.</span></span> <span data-ttu-id="a591e-799">Metoda zwraca wartość drugiej <xref:System.Data.DataTable> zoptymalizowane pod kątem sprawdzania poprawności i scalania.</span><span class="sxs-lookup"><span data-stu-id="a591e-799">That method returns a second <xref:System.Data.DataTable> optimized for validating and merging.</span></span> <span data-ttu-id="a591e-800">Drugą <xref:System.Data.DataTable> obiekt zawiera tylko <xref:System.Data.DataRow> obiektów, które zostały zmienione, wynikające z podzbioru oryginalnej <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-800">This second <xref:System.Data.DataTable> object contains only the <xref:System.Data.DataRow> objects that were changed, resulting in a subset of the original <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="a591e-801">Ten podzestaw jest zwykle mniejsze i w związku z tym wydajniej przekazywane z powrotem do składników warstwy środkowej.</span><span class="sxs-lookup"><span data-stu-id="a591e-801">This subset is generally smaller and thus more efficiently passed back to a middle tier component.</span></span> <span data-ttu-id="a591e-802">Składnik warstwy środkowej następnie aktualizuje oryginalne źródło danych zmiany za pomocą procedur składowanych.</span><span class="sxs-lookup"><span data-stu-id="a591e-802">The middle tier component then updates the original data source with the changes through stored procedures.</span></span> <span data-ttu-id="a591e-803">Warstwy środkowej może wysyłać kopii albo nowy <xref:System.Data.DataTable> zawierającą oryginalnych danych oraz najnowsze dane ze źródła danych (przez ponowne uruchomienie oryginalnego zapytania) lub Wyślij ponownie podzbiór o zmianach, które zostały wprowadzone do niej ze źródła danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-803">The middle tier can then send back either a new <xref:System.Data.DataTable> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</span></span> <span data-ttu-id="a591e-804">(Na przykład, jeśli źródło danych automatycznie tworzy unikatowe wartości kluczy podstawowych, te wartości można propagowane do aplikacji klienckiej.) W obu przypadkach zwróconego <xref:System.Data.DataTable> mogą być scalone aplikacji klienckiej, oryginalne <xref:System.Data.DataTable> z <xref:System.Data.DataTable.Merge%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-804">(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <xref:System.Data.DataTable> can be merged back into the client application's original <xref:System.Data.DataTable> with the <xref:System.Data.DataTable.Merge%2A> method.</span></span>  
  
 <span data-ttu-id="a591e-805">Podczas scalania nowe źródło <xref:System.Data.DataTable> do obiektu docelowego, każde źródło wiersze z <xref:System.Data.DataRowState> wartość `Unchanged`, `Modified`, lub `Deleted`, jest dopasowywany do docelowego wierszy z tej samej wartości klucza podstawowego.</span><span class="sxs-lookup"><span data-stu-id="a591e-805">When merging a new source <xref:System.Data.DataTable> into the target, any source rows with a <xref:System.Data.DataRowState> value of `Unchanged`, `Modified`, or `Deleted`, is matched to target rows with the same primary key values.</span></span> <span data-ttu-id="a591e-806">Źródło wiersze z <xref:System.Data.DataRowState> wartość `Added` są dopasowywane do nowych wierszy docelowych z tej samej wartości klucza podstawowego jako nowe wiersze źródła.</span><span class="sxs-lookup"><span data-stu-id="a591e-806">Source rows with a <xref:System.Data.DataRowState> value of `Added` are matched to new target rows with the same primary key values as the new source rows.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-807">Następującej aplikacji konsoli tworzy prosty <xref:System.Data.DataTable> i dodaje dane do tabeli.</span><span class="sxs-lookup"><span data-stu-id="a591e-807">The following console application creates a simple <xref:System.Data.DataTable> and adds data to the table.</span></span> <span data-ttu-id="a591e-808">Przykład następnie tworzy kopię tabeli Dodawanie wierszy do kopiowania.</span><span class="sxs-lookup"><span data-stu-id="a591e-808">The example then creates a copy of the table, adding rows to the copy.</span></span> <span data-ttu-id="a591e-809">Na koniec przykład wywołuje <xref:System.Data.DataTable.Merge%2A> sposób scalania danych w drugiej tabeli z danymi w pierwszej tabeli.</span><span class="sxs-lookup"><span data-stu-id="a591e-809">Finally, the example calls the <xref:System.Data.DataTable.Merge%2A> method to merge the data in the second table with the data in the first table.</span></span>  
  
 [!code-csharp[DataWorks DataTable.Merge#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.Merge/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.Merge#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.Merge/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public void Merge (System.Data.DataTable table, bool preserveChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Merge(class System.Data.DataTable table, bool preserveChanges) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Merge (table As DataTable, preserveChanges As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Merge(System::Data::DataTable ^ table, bool preserveChanges);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" />
        <Parameter Name="preserveChanges" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="table">
          <span data-ttu-id="a591e-810">
            <see langword="DataTable" /> Do scalenia z bieżącym <see langword="DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-810">The <see langword="DataTable" /> to be merged with the current <see langword="DataTable" />.</span>
          </span>
        </param>
        <param name="preserveChanges">
          <span data-ttu-id="a591e-811">
            <see langword="true" />, aby zachować zmiany w bieżącym <see langword="DataTable" />; w przeciwnym razie <see langword="false" />.<see langword="" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-811">
              <see langword="true" />, to preserve changes in the current <see langword="DataTable" />; otherwise <see langword="false" />.<see langword="" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-812">Scal określonego <see cref="T:System.Data.DataTable" /> z bieżącym <see langword="DataTable" />, wskazującą, czy chcesz zachować zmiany w bieżącym <see langword="DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-812">Merge the specified <see cref="T:System.Data.DataTable" /> with the current <see langword="DataTable" />, indicating whether to preserve changes in the current <see langword="DataTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-813">Merge — metoda jest używana do scalenia dwa <xref:System.Data.DataTable> obiektów, które mają schematów w znacznym stopniu podobne.</span><span class="sxs-lookup"><span data-stu-id="a591e-813">The Merge method is used to merge two <xref:System.Data.DataTable> objects that have largely similar schemas.</span></span> <span data-ttu-id="a591e-814">Scalanie jest zwykle używana w aplikacji klienta do zastosować ostatnie zmiany ze źródła danych w istniejącej <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-814">A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="a591e-815">Umożliwia to aplikacji klienta odświeżyć <xref:System.Data.DataTable> przy użyciu najnowszych danych ze źródła danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-815">This allows the client application to have a refreshed <xref:System.Data.DataTable> with the latest data from the data source.</span></span>  
  
 <span data-ttu-id="a591e-816">Operacja scalania uwzględnia oryginalnej tabeli, a tabela, która ma być scalone.</span><span class="sxs-lookup"><span data-stu-id="a591e-816">The merge operation takes into account only the original table, and the table to be merged.</span></span> <span data-ttu-id="a591e-817">Nie dotyczy lub częścią tabele podrzędne.</span><span class="sxs-lookup"><span data-stu-id="a591e-817">Child tables are not affected or included.</span></span> <span data-ttu-id="a591e-818">Jeśli tabela ma co najmniej jednej tabeli podrzędnej definiowane jako część relacji każdej tabeli podrzędnej muszą zostać połączone pojedynczo.</span><span class="sxs-lookup"><span data-stu-id="a591e-818">If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</span></span>  
  
 <span data-ttu-id="a591e-819">`Merge` Zazwyczaj wywoływana jest metoda na końcu szereg procedur obejmujących sprawdzanie poprawności zmiany, uzgadnianie błędy aktualizacji źródła danych ze zmianami i na koniec odświeżanie istniejącego <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-819">The `Merge` method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="a591e-820">Podczas scalania, zmiany wprowadzone w istniejących danych przed scaleniem są zachowywane podczas operacji scalania, chyba że deweloper określa wartość false dla `preserveChanges` parametru.</span><span class="sxs-lookup"><span data-stu-id="a591e-820">When performing a merge, changes made to the existing data before the merge are preserved during the merge operation unless the developer specifies false for the `preserveChanges` parameter.</span></span> <span data-ttu-id="a591e-821">Jeśli `preserveChanges` ustawiono parametr `true`, wartości przychodzących nie zastępują istniejące wartości w bieżącej wersji wierszy istniejącego wiersza.</span><span class="sxs-lookup"><span data-stu-id="a591e-821">If the `preserveChanges` parameter is set to `true`, incoming values do not overwrite existing values in the Current row version of the existing row.</span></span> <span data-ttu-id="a591e-822">Jeśli `preserveChanges` ustawiono parametr `false`, wartości przychodzących zastąpić istniejące wartości w bieżącej wersji wierszy istniejącego wiersza.</span><span class="sxs-lookup"><span data-stu-id="a591e-822">If the `preserveChanges` parameter is set to `false`, incoming values do overwrite the existing values in the Current row version of the existing row.</span></span> <span data-ttu-id="a591e-823">Aby uzyskać więcej informacji dotyczących wersji wierszy, zobacz [stany wiersza i wersje wiersza](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md).</span><span class="sxs-lookup"><span data-stu-id="a591e-823">For more information about row versions, see [Row States and Row Versions](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md).</span></span>  
  
 <span data-ttu-id="a591e-824">W aplikacji klienckiej jest zwykle ma jednego przycisku, który użytkownik może kliknąć zbiera dane zmienione, a następnie zweryfikuje go przed wysłaniem go z powrotem do składników warstwy środkowej.</span><span class="sxs-lookup"><span data-stu-id="a591e-824">In a client application, it is usual to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle tier component.</span></span> <span data-ttu-id="a591e-825">W tym scenariuszu <xref:System.Data.DataTable.GetChanges%2A> wywołaniu metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-825">In this scenario, the <xref:System.Data.DataTable.GetChanges%2A> method is first invoked.</span></span> <span data-ttu-id="a591e-826">Metoda zwraca wartość drugiej <xref:System.Data.DataTable> zoptymalizowane pod kątem sprawdzania poprawności i scalania.</span><span class="sxs-lookup"><span data-stu-id="a591e-826">That method returns a second <xref:System.Data.DataTable> optimized for validating and merging.</span></span> <span data-ttu-id="a591e-827">Drugą <xref:System.Data.DataTable> obiekt zawiera tylko <xref:System.Data.DataTable> i <xref:System.Data.DataRow> obiektów, które zostały zmienione, wynikające z podzbioru oryginalnej <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-827">This second <xref:System.Data.DataTable> object contains only the <xref:System.Data.DataTable> and <xref:System.Data.DataRow> objects that were changed, resulting in a subset of the original <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="a591e-828">Ten podzestaw jest zwykle mniejsze, a zatem ten podzestaw wydajniej jest przekazywane z powrotem do składników warstwy środkowej.</span><span class="sxs-lookup"><span data-stu-id="a591e-828">This subset is generally smaller, and thus this subset is more efficiently passed back to a middle tier component.</span></span> <span data-ttu-id="a591e-829">Składnik warstwy środkowej następnie aktualizuje oryginalne źródło danych zmiany za pomocą procedur składowanych.</span><span class="sxs-lookup"><span data-stu-id="a591e-829">The middle tier component then updates the original data source with the changes through stored procedures.</span></span> <span data-ttu-id="a591e-830">Warstwy środkowej może wysyłać kopii albo nowy <xref:System.Data.DataTable> zawierającą oryginalnych danych oraz najnowsze dane ze źródła danych (przez ponowne uruchomienie oryginalnego zapytania) lub Wyślij ponownie podzbiór o zmianach, które zostały wprowadzone do niej ze źródła danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-830">The middle tier can then send back either a new <xref:System.Data.DataTable> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</span></span> <span data-ttu-id="a591e-831">(Na przykład, jeśli źródło danych automatycznie tworzy unikatowe wartości kluczy podstawowych, te wartości można propagowane do aplikacji klienckiej.) W obu przypadkach zwróconego <xref:System.Data.DataTable> mogą być scalone aplikacji klienckiej, oryginalne <xref:System.Data.DataTable> z <xref:System.Data.DataTable.Merge%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-831">(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <xref:System.Data.DataTable> can be merged back into the client application's original <xref:System.Data.DataTable> with the <xref:System.Data.DataTable.Merge%2A> method.</span></span>  
  
 <span data-ttu-id="a591e-832">Podczas scalania nowe źródło <xref:System.Data.DataTable> do obiektu docelowego, każde źródło wiersze z <xref:System.Data.DataRowState> wartość `Unchanged`, `Modified`, lub `Deleted` są dopasowywane do docelowego wierszy z tej samej wartości klucza podstawowego.</span><span class="sxs-lookup"><span data-stu-id="a591e-832">When merging a new source <xref:System.Data.DataTable> into the target, any source rows with a <xref:System.Data.DataRowState> value of `Unchanged`, `Modified`, or `Deleted` are matched to target rows with the same primary key values.</span></span> <span data-ttu-id="a591e-833">Źródło wiersze z <xref:System.Data.DataRowState> wartość `Added` są dopasowywane do nowych wierszy docelowych z tej samej wartości klucza podstawowego jako nowe wiersze źródła.</span><span class="sxs-lookup"><span data-stu-id="a591e-833">Source rows with a <xref:System.Data.DataRowState> value of `Added` are matched to new target rows with the same primary key values as the new source rows.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-834">Tworzy następującej aplikacji konsoli <xref:System.Data.DataTable> zawierająca wiersze, modyfikuje niektóre dane w tych wierszach i próbuje przeprowadzić scalać dane z innego <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-834">The following console application creates a <xref:System.Data.DataTable> containing rows, modifies some of the data in those rows, and attempts to merge data from a different <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="a591e-835">W przykładzie pokazano różne zachowania dla `preserveChanges` parametru.</span><span class="sxs-lookup"><span data-stu-id="a591e-835">The example demonstrates the different behaviors for the `preserveChanges` parameter.</span></span>  
  
 [!code-csharp[DataWorks DataTable.MergePreserveChanges#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.MergePreserveChanges/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.MergePreserveChanges#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.MergePreserveChanges/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public void Merge (System.Data.DataTable table, bool preserveChanges, System.Data.MissingSchemaAction missingSchemaAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Merge(class System.Data.DataTable table, bool preserveChanges, valuetype System.Data.MissingSchemaAction missingSchemaAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Merge(System::Data::DataTable ^ table, bool preserveChanges, System::Data::MissingSchemaAction missingSchemaAction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" />
        <Parameter Name="preserveChanges" Type="System.Boolean" />
        <Parameter Name="missingSchemaAction" Type="System.Data.MissingSchemaAction" />
      </Parameters>
      <Docs>
        <param name="table">
          <span data-ttu-id="a591e-836">
            <see cref="T:System.Data.DataTable" /> Do scalenia z bieżącym <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-836">The <see cref="T:System.Data.DataTable" /> to be merged with the current <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </param>
        <param name="preserveChanges">
          <span data-ttu-id="a591e-837">
            <see langword="true" />, aby zachować zmiany w bieżącym <see cref="T:System.Data.DataTable" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-837">
              <see langword="true" />, to preserve changes in the current <see cref="T:System.Data.DataTable" />; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <param name="missingSchemaAction">
          <span data-ttu-id="a591e-838">Jeden z <see cref="T:System.Data.MissingSchemaAction" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-838">One of the <see cref="T:System.Data.MissingSchemaAction" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-839">Scal określonego <see cref="T:System.Data.DataTable" /> z bieżącym <see langword="DataTable" />, wskazującą, czy chcesz zachować zmiany i sposób obsługi Brak schematu w bieżącym <see langword="DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-839">Merge the specified <see cref="T:System.Data.DataTable" /> with the current <see langword="DataTable" />, indicating whether to preserve changes and how to handle missing schema in the current <see langword="DataTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-840">`Merge` Metoda jest używana do scalenia dwa <xref:System.Data.DataTable> obiektów, które mają schematów w znacznym stopniu podobne.</span><span class="sxs-lookup"><span data-stu-id="a591e-840">The `Merge` method is used to merge two <xref:System.Data.DataTable> objects that have largely similar schemas.</span></span> <span data-ttu-id="a591e-841">Scalanie jest zwykle używana w aplikacji klienta do zastosować ostatnie zmiany ze źródła danych w istniejącej <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-841">A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="a591e-842">Umożliwia to aplikacji klienta odświeżyć <xref:System.Data.DataTable> przy użyciu najnowszych danych ze źródła danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-842">This allows the client application to have a refreshed <xref:System.Data.DataTable> with the latest data from the data source.</span></span>  
  
 <span data-ttu-id="a591e-843">Operacja scalania uwzględnia oryginalnej tabeli, a tabela, która ma być scalone.</span><span class="sxs-lookup"><span data-stu-id="a591e-843">The merge operation takes into account only the original table, and the table to be merged.</span></span> <span data-ttu-id="a591e-844">Nie dotyczy lub częścią tabele podrzędne.</span><span class="sxs-lookup"><span data-stu-id="a591e-844">Child tables are not affected or included.</span></span> <span data-ttu-id="a591e-845">Jeśli tabela ma co najmniej jednej tabeli podrzędnej definiowane jako część relacji każdej tabeli podrzędnej muszą zostać połączone pojedynczo.</span><span class="sxs-lookup"><span data-stu-id="a591e-845">If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</span></span>  
  
 <span data-ttu-id="a591e-846">`Merge` Zazwyczaj wywoływana jest metoda na końcu szereg procedur obejmujących sprawdzanie poprawności zmiany, uzgadnianie błędy aktualizacji źródła danych ze zmianami i na koniec odświeżanie istniejącego <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-846">The `Merge` method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="a591e-847">Podczas scalania, zmiany wprowadzone w istniejących danych przed scaleniem są zachowywane podczas operacji scalania, chyba że deweloper określa wartość false dla `preserveChanges` parametru.</span><span class="sxs-lookup"><span data-stu-id="a591e-847">When performing a merge, changes made to the existing data before the merge are preserved during the merge operation unless the developer specifies false for the `preserveChanges` parameter.</span></span> <span data-ttu-id="a591e-848">Jeśli `preserveChanges` ustawiono parametr `true`, wartości przychodzących nie zastępują istniejące wartości w bieżącej wersji wierszy istniejącego wiersza.</span><span class="sxs-lookup"><span data-stu-id="a591e-848">If the `preserveChanges` parameter is set to `true`, incoming values do not overwrite existing values in the Current row version of the existing row.</span></span> <span data-ttu-id="a591e-849">Jeśli `preserveChanges` ustawiono parametr `false`, wartości przychodzących zastąpić istniejące wartości w bieżącej wersji wierszy istniejącego wiersza.</span><span class="sxs-lookup"><span data-stu-id="a591e-849">If the `preserveChanges` parameter is set to `false`, incoming values do overwrite the existing values in the Current row version of the existing row.</span></span> <span data-ttu-id="a591e-850">Aby uzyskać więcej informacji dotyczących wersji wierszy, zobacz [stany wiersza i wersje wiersza](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md).</span><span class="sxs-lookup"><span data-stu-id="a591e-850">For more information about row versions, see [Row States and Row Versions](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md).</span></span>  
  
 <span data-ttu-id="a591e-851">W aplikacji klienckiej jest zwykle ma jednego przycisku, który użytkownik może kliknąć zbiera dane zmienione, a następnie zweryfikuje go przed wysłaniem go z powrotem do składników warstwy środkowej.</span><span class="sxs-lookup"><span data-stu-id="a591e-851">In a client application, it is usual to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle tier component.</span></span> <span data-ttu-id="a591e-852">W tym scenariuszu <xref:System.Data.DataTable.GetChanges%2A> wywołaniu metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-852">In this scenario, the <xref:System.Data.DataTable.GetChanges%2A> method is first invoked.</span></span> <span data-ttu-id="a591e-853">Metoda zwraca wartość drugiej <xref:System.Data.DataTable> zoptymalizowane pod kątem sprawdzania poprawności i scalania.</span><span class="sxs-lookup"><span data-stu-id="a591e-853">That method returns a second <xref:System.Data.DataTable> optimized for validating and merging.</span></span> <span data-ttu-id="a591e-854">Drugą <xref:System.Data.DataTable> obiekt zawiera tylko <xref:System.Data.DataTable> i <xref:System.Data.DataRow> obiektów, które zostały zmienione, wynikające z podzbioru oryginalnej <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-854">This second <xref:System.Data.DataTable> object contains only the <xref:System.Data.DataTable> and <xref:System.Data.DataRow> objects that were changed, resulting in a subset of the original <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="a591e-855">Ten podzestaw jest zwykle mniejsze, a zatem ten podzestaw wydajniej jest przekazywane z powrotem do składników warstwy środkowej.</span><span class="sxs-lookup"><span data-stu-id="a591e-855">This subset is generally smaller, and thus this subset is more efficiently passed back to a middle tier component.</span></span> <span data-ttu-id="a591e-856">Składnik warstwy środkowej następnie aktualizuje oryginalne źródło danych zmiany za pomocą procedur składowanych.</span><span class="sxs-lookup"><span data-stu-id="a591e-856">The middle tier component then updates the original data source with the changes through stored procedures.</span></span> <span data-ttu-id="a591e-857">Warstwy środkowej może wysyłać kopii albo nowy <xref:System.Data.DataTable> zawierającą oryginalnych danych oraz najnowsze dane ze źródła danych (przez ponowne uruchomienie oryginalnego zapytania) lub Wyślij ponownie podzbiór o zmianach, które zostały wprowadzone do niej ze źródła danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-857">The middle tier can then send back either a new <xref:System.Data.DataTable> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</span></span> <span data-ttu-id="a591e-858">(Na przykład, jeśli źródło danych automatycznie tworzy unikatowe wartości kluczy podstawowych, te wartości można propagowane do aplikacji klienckiej.) W obu przypadkach zwróconego <xref:System.Data.DataTable> mogą być scalone aplikacji klienckiej, oryginalne <xref:System.Data.DataTable> z <xref:System.Data.DataTable.Merge%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-858">(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <xref:System.Data.DataTable> can be merged back into the client application's original <xref:System.Data.DataTable> with the <xref:System.Data.DataTable.Merge%2A> method.</span></span>  
  
 <span data-ttu-id="a591e-859">Gdy <xref:System.Data.DataTable.Merge%2A> metoda jest wywoływana, schematów dwa <xref:System.Data.DataTable> obiekty są porównywane, ponieważ jest to możliwe, że schematy mogły zostać zmienione.</span><span class="sxs-lookup"><span data-stu-id="a591e-859">When the <xref:System.Data.DataTable.Merge%2A> method is called, the schemas of the two <xref:System.Data.DataTable> objects are compared, because it is possible that the schemas may have been changed.</span></span> <span data-ttu-id="a591e-860">Na przykład w przypadku business-to-business, nowe kolumny może zostały dodane do schematu XML przez zautomatyzowany proces.</span><span class="sxs-lookup"><span data-stu-id="a591e-860">For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</span></span> <span data-ttu-id="a591e-861">Jeśli źródło <xref:System.Data.DataTable> zawiera elementy schematu (dodany <xref:System.Data.DataColumn> obiektów) brakuje w miejscu docelowym, elementy schematu mogą zostać dodane do obiektu docelowego, ustawiając `missingSchemaAction` argument `MissingSchemaAction.Add`.</span><span class="sxs-lookup"><span data-stu-id="a591e-861">If the source <xref:System.Data.DataTable> contains schema elements (added <xref:System.Data.DataColumn> objects) that are missing in the target, the schema elements can be added to the target by setting the `missingSchemaAction` argument to `MissingSchemaAction.Add`.</span></span> <span data-ttu-id="a591e-862">W takim przypadku scalonych <xref:System.Data.DataTable> zawiera dodany schemat i dane.</span><span class="sxs-lookup"><span data-stu-id="a591e-862">In that case, the merged <xref:System.Data.DataTable> contains the added schema and data.</span></span>  
  
 <span data-ttu-id="a591e-863">Po scaleniu schematów, scalania danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-863">After merging schemas, the data is merged.</span></span>  
  
 <span data-ttu-id="a591e-864">Podczas scalania nowe źródło <xref:System.Data.DataTable> do obiektu docelowego, każde źródło wiersze z <xref:System.Data.DataRowState> wartość `Unchanged`, `Modified`, lub `Deleted` są dopasowywane do docelowego wierszy z tej samej wartości klucza podstawowego.</span><span class="sxs-lookup"><span data-stu-id="a591e-864">When merging a new source <xref:System.Data.DataTable> into the target, any source rows with a <xref:System.Data.DataRowState> value of `Unchanged`, `Modified`, or `Deleted` are matched to target rows with the same primary key values.</span></span> <span data-ttu-id="a591e-865">Źródło wiersze z <xref:System.Data.DataRowState> wartość `Added` są dopasowywane do nowych wierszy docelowych z tej samej wartości klucza podstawowego jako nowe wiersze źródła.</span><span class="sxs-lookup"><span data-stu-id="a591e-865">Source rows with a <xref:System.Data.DataRowState> value of `Added` are matched to new target rows with the same primary key values as the new source rows.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-866">Następującej aplikacji konsoli Pokazuje zachowanie `missingSchemaAction` parametr <xref:System.Data.DataTable.Merge%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-866">The following console application demonstrates the behavior of the `missingSchemaAction` parameter of the <xref:System.Data.DataTable.Merge%2A> method.</span></span> <span data-ttu-id="a591e-867">W tym przykładzie tworzy dwie wersje tej samej tabeli modyfikowania schematu dla drugiego wersji.</span><span class="sxs-lookup"><span data-stu-id="a591e-867">This example creates two versions of the same table, modifying the schema for the second version.</span></span> <span data-ttu-id="a591e-868">Kod podejmuje próbę scalenia drugiej tabeli pierwszy.</span><span class="sxs-lookup"><span data-stu-id="a591e-868">The code then attempts to merge the second table into the first.</span></span>  
  
 [!code-csharp[DataWorks DataTable.MergeMissingSchemaAction#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.MergeMissingSchemaAction/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.MergeMissingSchemaAction#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.MergeMissingSchemaAction/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumCapacity">
      <MemberSignature Language="C#" Value="public int MinimumCapacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumCapacity" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.MinimumCapacity" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimumCapacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinimumCapacity { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(50)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-869">Pobiera lub ustawia początkowy rozmiar tej tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-869">Gets or sets the initial starting size for this table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a591e-870">Początkowy rozmiar początkowy w wiersze tej tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-870">The initial starting size in rows of this table.</span>
          </span>
          <span data-ttu-id="a591e-871">Wartością domyślną jest 50.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-871">The default is 50.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-872"><xref:System.Data.DataTable.MinimumCapacity%2A> Umożliwi systemowi Utwórz odpowiedni zestaw zasobów przed pobieranie danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-872">The <xref:System.Data.DataTable.MinimumCapacity%2A> allows the system to create an appropriate set of resources before fetching data.</span></span> <span data-ttu-id="a591e-873">W sytuacji, gdy ma kluczowe znaczenie, ustawienie dla tej właściwości można zoptymalizować wydajność.</span><span class="sxs-lookup"><span data-stu-id="a591e-873">In a situation when performance is critical, setting this property can optimize performance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-874">W poniższym przykładzie <xref:System.Data.DataTable.MinimumCapacity%2A> z <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-874">The following example sets the <xref:System.Data.DataTable.MinimumCapacity%2A> of a <xref:System.Data.DataTable>.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.MinimumCapacity Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.MinimumCapacity Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.MinimumCapacity Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.MinimumCapacity Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-875">Pobiera lub ustawia obszar nazw XML reprezentację danych przechowywanych w <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-875">Gets or sets the namespace for the XML representation of the data stored in the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a591e-876">Przestrzeń nazw <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-876">The namespace of the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow NewRow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow NewRow() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.NewRow" />
      <MemberSignature Language="VB.NET" Value="Public Function NewRow () As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ NewRow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a591e-877">Tworzy nową <see cref="T:System.Data.DataRow" /> ze schematem tej samej tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-877">Creates a new <see cref="T:System.Data.DataRow" /> with the same schema as the table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a591e-878">A <see cref="T:System.Data.DataRow" /> z tym samym schematem co <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-878">A <see cref="T:System.Data.DataRow" /> with the same schema as the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-879">Należy użyć <xref:System.Data.DataTable.NewRow%2A> metody, aby utworzyć nowy <xref:System.Data.DataRow> obiekty z tym samym schematem co <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-879">You must use the <xref:System.Data.DataTable.NewRow%2A> method to create new <xref:System.Data.DataRow> objects with the same schema as the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="a591e-880">Po utworzeniu <xref:System.Data.DataRow>, można dodać go do <xref:System.Data.DataRowCollection>, za pomocą <xref:System.Data.DataTable> obiektu <xref:System.Data.DataTable.Rows%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="a591e-880">After creating a <xref:System.Data.DataRow>, you can add it to the <xref:System.Data.DataRowCollection>, through the <xref:System.Data.DataTable> object's <xref:System.Data.DataTable.Rows%2A> property.</span></span> <span data-ttu-id="a591e-881">Jeśli używasz <xref:System.Data.DataTable.NewRow%2A> Aby utworzyć nowe wiersze, należy dodać do lub usunięte z tabeli danych przed wywołaniem wiersze <xref:System.Data.DataTable.Clear%2A>.</span><span class="sxs-lookup"><span data-stu-id="a591e-881">When you use <xref:System.Data.DataTable.NewRow%2A> to create new rows, the rows must be added to or deleted from the data table before you call <xref:System.Data.DataTable.Clear%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-882">Poniższy przykład tworzy <xref:System.Data.DataTable>, dodaje dwa <xref:System.Data.DataColumn> obiekty, które ustalić schemat tabeli i tworzy kilka nowych <xref:System.Data.DataRow> obiektów przy użyciu <xref:System.Data.DataTable.NewRow%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-882">The following example creates a <xref:System.Data.DataTable>, adds two <xref:System.Data.DataColumn> objects that determine the table's schema, and creates several new <xref:System.Data.DataRow> objects using the <xref:System.Data.DataTable.NewRow%2A> method.</span></span> <span data-ttu-id="a591e-883">Te <xref:System.Data.DataRow> obiekty zostaną następnie dodane do <xref:System.Data.DataRowCollection> przy użyciu <xref:System.Data.DataRowCollection.Add%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-883">Those <xref:System.Data.DataRow> objects are then added to the <xref:System.Data.DataRowCollection> using the <xref:System.Data.DataRowCollection.Add%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.NewRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.NewRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.NewRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.NewRow Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewRowArray">
      <MemberSignature Language="C#" Value="protected internal System.Data.DataRow[] NewRowArray (int size);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Data.DataRow[] NewRowArray(int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.NewRowArray(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function NewRowArray (size As Integer) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ NewRowArray(int size);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="size">
          <span data-ttu-id="a591e-884">A <see cref="T:System.Int32" /> wartość, która opisuje rozmiar tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-884">A <see cref="T:System.Int32" /> value that describes the size of the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-885">Zwraca tablicę <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-885">Returns an array of <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a591e-886">Nowej tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-886">The new array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewRowFromBuilder">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataRow NewRowFromBuilder (System.Data.DataRowBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataRow NewRowFromBuilder(class System.Data.DataRowBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function NewRowFromBuilder (builder As DataRowBuilder) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataRow ^ NewRowFromBuilder(System::Data::DataRowBuilder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Data.DataRowBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="a591e-887">A <see cref="T:System.Data.DataRowBuilder" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-887">A <see cref="T:System.Data.DataRowBuilder" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-888">Tworzy nowy wiersz na podstawie istniejącego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-888">Creates a new row from an existing row.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a591e-889">A <see cref="T:System.Data.DataRow" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-889">A <see cref="T:System.Data.DataRow" /> derived class.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnColumnChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnColumnChanged (System.Data.DataColumnChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnColumnChanged(class System.Data.DataColumnChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnColumnChanged (e As DataColumnChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnColumnChanged(System::Data::DataColumnChangeEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataColumnChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a591e-890">A <see cref="T:System.Data.DataColumnChangeEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-890">A <see cref="T:System.Data.DataColumnChangeEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-891">Zgłasza <see cref="E:System.Data.DataTable.ColumnChanged" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-891">Raises the <see cref="E:System.Data.DataTable.ColumnChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-892">Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata.</span><span class="sxs-lookup"><span data-stu-id="a591e-892">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="a591e-893">Aby uzyskać ogólne informacje, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="a591e-893">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a591e-894">W przypadku przesłaniania <see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" /> metody.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a591e-894">When overriding <see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnColumnChanging">
      <MemberSignature Language="C#" Value="protected internal virtual void OnColumnChanging (System.Data.DataColumnChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnColumnChanging(class System.Data.DataColumnChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnColumnChanging (e As DataColumnChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnColumnChanging(System::Data::DataColumnChangeEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataColumnChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a591e-895">A <see cref="T:System.Data.DataColumnChangeEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-895">A <see cref="T:System.Data.DataColumnChangeEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-896">Zgłasza <see cref="E:System.Data.DataTable.ColumnChanging" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-896">Raises the <see cref="E:System.Data.DataTable.ColumnChanging" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-897">Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata.</span><span class="sxs-lookup"><span data-stu-id="a591e-897">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="a591e-898">Aby uzyskać ogólne informacje, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="a591e-898">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a591e-899">W przypadku przesłaniania <see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" /> metody.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a591e-899">When overriding <see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanging (System.ComponentModel.PropertyChangedEventArgs pcevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanging(class System.ComponentModel.PropertyChangedEventArgs pcevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanging (pcevent As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanging(System::ComponentModel::PropertyChangedEventArgs ^ pcevent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcevent" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="pcevent">
          <span data-ttu-id="a591e-900">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-900">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-901">Zgłasza <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-901">Raises the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-902">Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata.</span><span class="sxs-lookup"><span data-stu-id="a591e-902">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="a591e-903">Aby uzyskać ogólne informacje, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="a591e-903">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a591e-904">W przypadku przesłaniania <see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /> metody.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a591e-904">When overriding <see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRemoveColumn">
      <MemberSignature Language="C#" Value="protected virtual void OnRemoveColumn (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRemoveColumn(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRemoveColumn (column As DataColumn)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRemoveColumn(System::Data::DataColumn ^ column);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">
          <span data-ttu-id="a591e-905">
            <see cref="T:System.Data.DataColumn" /> Usuwana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-905">The <see cref="T:System.Data.DataColumn" /> being removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-906">Powiadamia <see cref="T:System.Data.DataTable" /> który <see cref="T:System.Data.DataColumn" /> jest usuwana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-906">Notifies the <see cref="T:System.Data.DataTable" /> that a <see cref="T:System.Data.DataColumn" /> is being removed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-907">Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata.</span><span class="sxs-lookup"><span data-stu-id="a591e-907">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="a591e-908">Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="a591e-908">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a591e-909">W przypadku przesłaniania <see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" /> metody.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a591e-909">When overriding <see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRowChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowChanged (System.Data.DataRowChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowChanged(class System.Data.DataRowChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowChanged (e As DataRowChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowChanged(System::Data::DataRowChangeEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataRowChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a591e-910">A <see cref="T:System.Data.DataRowChangeEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-910">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-911">Zgłasza <see cref="E:System.Data.DataTable.RowChanged" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-911">Raises the <see cref="E:System.Data.DataTable.RowChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-912">Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata.</span><span class="sxs-lookup"><span data-stu-id="a591e-912">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="a591e-913">Aby uzyskać ogólne informacje, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="a591e-913">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a591e-914">W przypadku przesłaniania <see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" /> metody.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a591e-914">When overriding <see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRowChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnRowChanging (System.Data.DataRowChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowChanging(class System.Data.DataRowChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowChanging (e As DataRowChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowChanging(System::Data::DataRowChangeEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataRowChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a591e-915">A <see cref="T:System.Data.DataRowChangeEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-915">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-916">Zgłasza <see cref="E:System.Data.DataTable.RowChanging" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-916">Raises the <see cref="E:System.Data.DataTable.RowChanging" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-917">Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata.</span><span class="sxs-lookup"><span data-stu-id="a591e-917">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="a591e-918">Aby uzyskać ogólne informacje, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="a591e-918">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a591e-919">W przypadku przesłaniania <see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" /> metody.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a591e-919">When overriding <see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRowDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDeleted (System.Data.DataRowChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDeleted(class System.Data.DataRowChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowDeleted (e As DataRowChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowDeleted(System::Data::DataRowChangeEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataRowChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a591e-920">A <see cref="T:System.Data.DataRowChangeEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-920">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-921">Zgłasza <see cref="E:System.Data.DataTable.RowDeleted" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-921">Raises the <see cref="E:System.Data.DataTable.RowDeleted" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-922">Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata.</span><span class="sxs-lookup"><span data-stu-id="a591e-922">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="a591e-923">Aby uzyskać ogólne informacje, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="a591e-923">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a591e-924">W przypadku przesłaniania <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /> metody.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a591e-924">When overriding <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRowDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDeleting (System.Data.DataRowChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDeleting(class System.Data.DataRowChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowDeleting (e As DataRowChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowDeleting(System::Data::DataRowChangeEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataRowChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a591e-925">A <see cref="T:System.Data.DataRowChangeEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-925">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-926">Zgłasza <see cref="E:System.Data.DataTable.RowDeleting" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-926">Raises the <see cref="E:System.Data.DataTable.RowDeleting" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-927">Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata.</span><span class="sxs-lookup"><span data-stu-id="a591e-927">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="a591e-928">Aby uzyskać ogólne informacje, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="a591e-928">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a591e-929">W przypadku przesłaniania <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /> metody.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a591e-929">When overriding <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnTableCleared">
      <MemberSignature Language="C#" Value="protected virtual void OnTableCleared (System.Data.DataTableClearEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTableCleared(class System.Data.DataTableClearEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTableCleared (e As DataTableClearEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTableCleared(System::Data::DataTableClearEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataTableClearEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a591e-930">A <see cref="T:System.Data.DataTableClearEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-930">A <see cref="T:System.Data.DataTableClearEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-931">Zgłasza <see cref="E:System.Data.DataTable.TableCleared" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-931">Raises the <see cref="E:System.Data.DataTable.TableCleared" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-932">Zgłasza <xref:System.Data.DataTable.TableCleared> zdarzeń, który jest uruchamiany natychmiast po wszystkie wiersze zostały pomyślnie wyczyszczone ale przed wysłaniem <xref:System.Data.DataTable.Clear%2A> metoda zwraca sterowanie do obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="a591e-932">Raises the <xref:System.Data.DataTable.TableCleared> event, which is fired immediately after all rows have been successfully cleared but before the <xref:System.Data.DataTable.Clear%2A> method returns control back to the caller.</span></span>  
  
 <span data-ttu-id="a591e-933">Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata.</span><span class="sxs-lookup"><span data-stu-id="a591e-933">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="a591e-934">Aby uzyskać ogólne informacje, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="a591e-934">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTableClearing">
      <MemberSignature Language="C#" Value="protected virtual void OnTableClearing (System.Data.DataTableClearEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTableClearing(class System.Data.DataTableClearEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTableClearing (e As DataTableClearEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTableClearing(System::Data::DataTableClearEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataTableClearEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a591e-935">A <see cref="T:System.Data.DataTableClearEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-935">A <see cref="T:System.Data.DataTableClearEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-936">Zgłasza <see cref="E:System.Data.DataTable.TableClearing" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-936">Raises the <see cref="E:System.Data.DataTable.TableClearing" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-937">Zgłasza <xref:System.Data.DataTable.TableClearing> zdarzenie, które jest wywoływane przed przetwarzania <xref:System.Data.DataTable.Clear%2A> rozpocznie się wykonywanie operacji.</span><span class="sxs-lookup"><span data-stu-id="a591e-937">Raises the <xref:System.Data.DataTable.TableClearing> event, which is fired before processing of the <xref:System.Data.DataTable.Clear%2A> operation begins.</span></span>  
  
 <span data-ttu-id="a591e-938">Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata.</span><span class="sxs-lookup"><span data-stu-id="a591e-938">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="a591e-939">Aby uzyskać ogólne informacje, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="a591e-939">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTableNewRow">
      <MemberSignature Language="C#" Value="protected virtual void OnTableNewRow (System.Data.DataTableNewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTableNewRow(class System.Data.DataTableNewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTableNewRow (e As DataTableNewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTableNewRow(System::Data::DataTableNewRowEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataTableNewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a591e-940">A <see cref="T:System.Data.DataTableNewRowEventArgs" /> zawierający dane zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-940">A <see cref="T:System.Data.DataTableNewRowEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-941">Zgłasza <see cref="E:System.Data.DataTable.TableNewRow" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-941">Raises the <see cref="E:System.Data.DataTable.TableNewRow" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-942">Zgłasza <xref:System.Data.DataTable.TableNewRow> zdarzenie, które są generowane po nowy <xref:System.Data.DataRow> został utworzony przy użyciu <xref:System.Data.DataTable.NewRow%2A>.</span><span class="sxs-lookup"><span data-stu-id="a591e-942">Raises the <xref:System.Data.DataTable.TableNewRow> event, which fires after a new <xref:System.Data.DataRow> has been created using <xref:System.Data.DataTable.NewRow%2A>.</span></span>  
  
 <span data-ttu-id="a591e-943">Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata.</span><span class="sxs-lookup"><span data-stu-id="a591e-943">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="a591e-944">Aby uzyskać ogólne informacje, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="a591e-944">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentRelations">
      <MemberSignature Language="C#" Value="public System.Data.DataRelationCollection ParentRelations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataRelationCollection ParentRelations" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.ParentRelations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentRelations As DataRelationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRelationCollection ^ ParentRelations { System::Data::DataRelationCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRelationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-945">Pobiera kolekcję relacji nadrzędny tego <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-945">Gets the collection of parent relations for this <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a591e-946">A <see cref="T:System.Data.DataRelationCollection" /> zawiera relacje nadrzędne dla tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-946">A <see cref="T:System.Data.DataRelationCollection" /> that contains the parent relations for the table.</span>
          </span>
          <span data-ttu-id="a591e-947">Zwracany jest pustą kolekcję, jeśli nie <see cref="T:System.Data.DataRelation" /> istnieją obiekty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-947">An empty collection is returned if no <see cref="T:System.Data.DataRelation" /> objects exist.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a591e-948">W poniższym przykładzie użyto <xref:System.Data.DataTable.ParentRelations%2A> właściwości, aby powrócić do każdego elementu nadrzędnego <xref:System.Data.DataRelation> w <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-948">The following example uses the <xref:System.Data.DataTable.ParentRelations%2A> property to return each parent <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="a591e-949">Każda relacja jest następnie używany jako argument w <xref:System.Data.DataRow.GetParentRows%2A> metody <xref:System.Data.DataRow> aby zwracało tablicę wierszy.</span><span class="sxs-lookup"><span data-stu-id="a591e-949">Each relation is then used as an argument in the <xref:System.Data.DataRow.GetParentRows%2A> method of the <xref:System.Data.DataRow> to return an array of rows.</span></span> <span data-ttu-id="a591e-950">Następnie wydrukowaniu wartość każdej kolumny w wierszu.</span><span class="sxs-lookup"><span data-stu-id="a591e-950">The value of each column in the row is then printed.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.ParentRelations Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ParentRelations Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ParentRelations Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ParentRelations Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public string Prefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Prefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-951">Pobiera lub ustawia obszar nazw XML reprezentację danych przechowywanych w <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-951">Gets or sets the namespace for the XML representation of the data stored in the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a591e-952">Prefiks <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-952">The prefix of the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryKey">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn[] PrimaryKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataColumn[] PrimaryKey" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.PrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public Property PrimaryKey As DataColumn()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Data::DataColumn ^&gt; ^ PrimaryKey { cli::array &lt;System::Data::DataColumn ^&gt; ^ get(); void set(cli::array &lt;System::Data::DataColumn ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.PrimaryKeyEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.PrimaryKeyTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-953">Pobiera lub ustawia tablicę kolumn tej funkcji jako kluczy podstawowych w tabeli danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-953">Gets or sets an array of columns that function as primary keys for the data table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a591e-954">Tablica <see cref="T:System.Data.DataColumn" /> obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-954">An array of <see cref="T:System.Data.DataColumn" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-955">Klucz podstawowy tabeli muszą być unikatowe do identyfikowania rekordu w tabeli.</span><span class="sxs-lookup"><span data-stu-id="a591e-955">The primary key of a table must be unique to identify the record in the table.</span></span> <span data-ttu-id="a591e-956">Jest również możliwe z składają się z dwóch lub więcej kolumn klucza podstawowego tabeli.</span><span class="sxs-lookup"><span data-stu-id="a591e-956">It's also possible to have a table with a primary key made up of two or more columns.</span></span> <span data-ttu-id="a591e-957">Dzieje się tak, gdy pojedyncza kolumna nie zawiera wystarczającej liczby unikatowych wartości.</span><span class="sxs-lookup"><span data-stu-id="a591e-957">This occurs when a single column can't contain enough unique values.</span></span> <span data-ttu-id="a591e-958">Na przykład dwie kolumny klucza podstawowego może obejmować kolumny "Imię" i "Nazwisko".</span><span class="sxs-lookup"><span data-stu-id="a591e-958">For example, a two column primary key might consist of a "FirstName" and "LastName" column.</span></span> <span data-ttu-id="a591e-959">Ponieważ kluczy podstawowych może składać się z więcej niż jednej kolumny <xref:System.Data.DataTable.PrimaryKey%2A> właściwości składa się z tablicą <xref:System.Data.DataColumn> obiektów.</span><span class="sxs-lookup"><span data-stu-id="a591e-959">Because primary keys can be made up of more than one column, the <xref:System.Data.DataTable.PrimaryKey%2A> property consists of an array of <xref:System.Data.DataColumn> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-960">Pierwszym przykładzie przedstawiono sposób zwracania kolumn klucza podstawowego dla <xref:System.Data.DataTable> wyświetlane w `DataGrid`.</span><span class="sxs-lookup"><span data-stu-id="a591e-960">The first example shows how to return the primary key columns for a <xref:System.Data.DataTable> displayed in a `DataGrid`.</span></span> <span data-ttu-id="a591e-961">Drugim przykładzie pokazano, jak ustawić kolumn klucza podstawowego dla <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-961">The second example demonstrates how to set the primary key columns for a <xref:System.Data.DataTable>.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.PrimaryKey Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.PrimaryKey Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.PrimaryKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.PrimaryKey Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DataException">
          <span data-ttu-id="a591e-962">Klucz jest kluczem obcym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-962">The key is a foreign key.</span>
          </span>
        </exception>
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="P:System.Data.DataTable.PrimaryKey" />
        <altmember cref="T:System.Data.DataColumnCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadXml">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-963">Odczytuje XML: schemat i dane do <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-963">Reads XML schema and data into the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-964"><xref:System.Data.DataTable.ReadXml%2A> Metoda zapewnia sposób odczytać tylko dane lub zarówno danych i schematu do <xref:System.Data.DataTable> z dokumentu XML, podczas gdy <xref:System.Data.DataTable.ReadXmlSchema%2A> metoda odczytuje tylko schemat.</span><span class="sxs-lookup"><span data-stu-id="a591e-964">The <xref:System.Data.DataTable.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataTable> from an XML document, whereas the <xref:System.Data.DataTable.ReadXmlSchema%2A> method reads only the schema.</span></span> <span data-ttu-id="a591e-965">Aby odczytać zarówno danych, jak i schematu, użyj jednej z `ReadXML` przeciążenia, które obejmują `XmlReadMode` parametru i ustaw jej wartość `ReadSchema`.</span><span class="sxs-lookup"><span data-stu-id="a591e-965">To read both data and schema, use one of the `ReadXML` overloads that include the `XmlReadMode` parameter, and set its value to `ReadSchema`.</span></span>  
  
 <span data-ttu-id="a591e-966">Należy pamiętać, że to samo dotyczy dla <xref:System.Data.DataTable.WriteXml%2A> i <xref:System.Data.DataTable.WriteXmlSchema%2A> metod, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="a591e-966">Note that the same is true for the <xref:System.Data.DataTable.WriteXml%2A> and <xref:System.Data.DataTable.WriteXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="a591e-967">Można zapisać danych XML lub schemat i dane z `DataTable`, użyj `WriteXml` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-967">To write XML data, or both schema and data from the `DataTable`, use the `WriteXml` method.</span></span> <span data-ttu-id="a591e-968">Aby zapisać tylko schemat, należy użyć `WriteXmlSchema` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-968">To write just the schema, use the `WriteXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a591e-969"><xref:System.InvalidOperationException> Zostanie wygenerowany, jeśli typ kolumny w `DataRow` trwa od zapisu lub odczytu implementuje <xref:System.Dynamic.IDynamicMetaObjectProvider> i nie implementuje <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-969">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Data.DataSet.ReadXml" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public System.Data.XmlReadMode ReadXml (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.XmlReadMode ReadXml(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXml(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::XmlReadMode ReadXml(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="a591e-970">Obiekt, który jest pochodną <see cref="T:System.IO.Stream" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-970">An object that derives from <see cref="T:System.IO.Stream" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-971">Odczytuje XML: schemat i dane do <see cref="T:System.Data.DataTable" /> przy użyciu określonego <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-971">Reads XML schema and data into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a591e-972">
            <see cref="T:System.Data.XmlReadMode" /> Używany do odczytu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-972">The <see cref="T:System.Data.XmlReadMode" /> used to read the data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-973">Bieżący <xref:System.Data.DataTable> i jego elementów podrzędnych są ładowane przy użyciu danych z podane <xref:System.IO.Stream>.</span><span class="sxs-lookup"><span data-stu-id="a591e-973">The current <xref:System.Data.DataTable> and its descendents are loaded with the data from the supplied <xref:System.IO.Stream>.</span></span> <span data-ttu-id="a591e-974">Zachowanie tej metody jest identyczna ze <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> metody, z wyjątkiem danych to w tym przypadku jest załadowany tylko dla bieżącej tabeli i jego obiektów podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="a591e-974">The behavior of this method is identical to that of the <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> method, except that in this case, data is loaded only for the current table and its descendants.</span></span>  
  
 <span data-ttu-id="a591e-975"><xref:System.Data.DataTable.ReadXml%2A> Metoda zapewnia sposób odczytać tylko dane lub zarówno danych i schematu do <xref:System.Data.DataTable> z dokumentu XML, podczas gdy <xref:System.Data.DataTable.ReadXmlSchema%2A> metoda odczytuje tylko schemat.</span><span class="sxs-lookup"><span data-stu-id="a591e-975">The <xref:System.Data.DataTable.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataTable> from an XML document, whereas the <xref:System.Data.DataTable.ReadXmlSchema%2A> method reads only the schema.</span></span>  
  
 <span data-ttu-id="a591e-976">Należy pamiętać, że to samo dotyczy dla <xref:System.Data.DataTable.WriteXml%2A> i <xref:System.Data.DataTable.WriteXmlSchema%2A> metod, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="a591e-976">Note that the same is true for the <xref:System.Data.DataTable.WriteXml%2A> and <xref:System.Data.DataTable.WriteXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="a591e-977">Można zapisać danych XML lub schemat i dane z `DataTable`, użyj `WriteXml` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-977">To write XML data, or both schema and data from the `DataTable`, use the `WriteXml` method.</span></span> <span data-ttu-id="a591e-978">Aby zapisać tylko schemat, należy użyć `WriteXmlSchema` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-978">To write just the schema, use the `WriteXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a591e-979"><xref:System.InvalidOperationException> Zostanie wygenerowany, jeśli typ kolumny w `DataRow` trwa od zapisu lub odczytu implementuje <xref:System.Dynamic.IDynamicMetaObjectProvider> i nie implementuje <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-979">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 <span data-ttu-id="a591e-980">Jeśli określono schemat w tekście, schematu w wierszu służy do rozszerzania istniejącej struktury relacyjne przed załadowaniem danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-980">If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</span></span> <span data-ttu-id="a591e-981">Jeśli występują konflikty (na przykład tej samej kolumny w tej samej tabeli zdefiniowane przy użyciu różnych typów danych) jest wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a591e-981">If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</span></span>  
  
 <span data-ttu-id="a591e-982">Jeśli schemat nie-line jest określony, struktura relacyjnej został rozszerzony za pośrednictwem wnioskowania odpowiednio do potrzeb zgodnie ze struktury dokumentu XML.</span><span class="sxs-lookup"><span data-stu-id="a591e-982">If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</span></span> <span data-ttu-id="a591e-983">Jeśli schemat nie może zostać rozszerzony za pomocą wnioskowania, aby udostępnić wszystkie dane, jest wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a591e-983">If the schema cannot be extended through inference in order to expose all data, an exception is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a591e-984">`DataSet` Nie wiąże — element XML z odpowiadającymi mu dostawcami `DataColumn` lub `DataTable` po prawidłowe znaki XML, takich jak ("_") są anulowane w serializacji XML.</span><span class="sxs-lookup"><span data-stu-id="a591e-984">The `DataSet` does not associate an XML element with its corresponding `DataColumn` or `DataTable` when legal XML characters like ("_") are escaped in the serialized XML.</span></span> <span data-ttu-id="a591e-985">`DataSet` Się tylko specjalne niedozwolone znaki XML w nazwach elementów XML i dlatego tylko zajmowane są takie same.</span><span class="sxs-lookup"><span data-stu-id="a591e-985">The `DataSet` itself only escapes illegal XML characters in XML element names and hence can only consume the same.</span></span> <span data-ttu-id="a591e-986">Gdy będą miały zmienione znaczenie prawidłowe znaki w nazwie elementu XML, element jest ignorowany podczas przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="a591e-986">When legal characters in XML element name are escaped, the element is ignored while processing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-987">Poniższy przykład tworzy <xref:System.Data.DataTable> zawierających dwie kolumny i dziesięć wierszy.</span><span class="sxs-lookup"><span data-stu-id="a591e-987">The following example creates a <xref:System.Data.DataTable> containing two columns and ten rows.</span></span> <span data-ttu-id="a591e-988">W przykładzie polecenie zapisuje <xref:System.Data.DataTable> schemat i dane do strumienia pamięci, wywołując <xref:System.Data.DataTable.WriteXml%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-988">The example writes the <xref:System.Data.DataTable> schema and data to a memory stream, by invoking the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span> <span data-ttu-id="a591e-989">W przykładzie jest tworzony drugiej <xref:System.Data.DataTable> i wywołuje <xref:System.Data.DataTable.ReadXml%2A> metodę, aby wypełnić go schemat i dane.</span><span class="sxs-lookup"><span data-stu-id="a591e-989">The example creates a second <xref:System.Data.DataTable> and calls the <xref:System.Data.DataTable.ReadXml%2A> method to fill it with schema and data.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXml#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXml/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXml#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXml/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public System.Data.XmlReadMode ReadXml (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.XmlReadMode ReadXml(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXml(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadXml (reader As TextReader) As XmlReadMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::XmlReadMode ReadXml(System::IO::TextReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="a591e-990">
            <see cref="T:System.IO.TextReader" /> Które będą używane do odczytywania danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-990">The <see cref="T:System.IO.TextReader" /> that will be used to read the data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-991">Odczytuje XML: schemat i dane do <see cref="T:System.Data.DataTable" /> przy użyciu określonego <see cref="T:System.IO.TextReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-991">Reads XML schema and data into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.TextReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a591e-992">
            <see cref="T:System.Data.XmlReadMode" /> Używany do odczytu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-992">The <see cref="T:System.Data.XmlReadMode" /> used to read the data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-993">Bieżący <xref:System.Data.DataTable> i jego elementów podrzędnych są ładowane przy użyciu danych z podane <xref:System.IO.TextReader>.</span><span class="sxs-lookup"><span data-stu-id="a591e-993">The current <xref:System.Data.DataTable> and its descendents are loaded with the data from the supplied <xref:System.IO.TextReader>.</span></span> <span data-ttu-id="a591e-994">Zachowanie tej metody jest identyczna ze <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> metody, z wyjątkiem danych to w tym przypadku jest załadowany tylko dla bieżącej tabeli i jego obiektów podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="a591e-994">The behavior of this method is identical to that of the <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> method, except that in this case, data is loaded only for the current table and its descendants.</span></span>  
  
 <span data-ttu-id="a591e-995"><xref:System.Data.DataTable.ReadXml%2A> Metoda zapewnia sposób odczytać tylko dane lub zarówno danych i schematu do <xref:System.Data.DataTable> z dokumentu XML, podczas gdy <xref:System.Data.DataTable.ReadXmlSchema%2A> metoda odczytuje tylko schemat.</span><span class="sxs-lookup"><span data-stu-id="a591e-995">The <xref:System.Data.DataTable.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataTable> from an XML document, whereas the <xref:System.Data.DataTable.ReadXmlSchema%2A> method reads only the schema.</span></span>  
  
 <span data-ttu-id="a591e-996">Należy pamiętać, że to samo dotyczy dla <xref:System.Data.DataTable.WriteXml%2A> i <xref:System.Data.DataTable.WriteXmlSchema%2A> metod, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="a591e-996">Note that the same is true for the <xref:System.Data.DataTable.WriteXml%2A> and <xref:System.Data.DataTable.WriteXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="a591e-997">Można zapisać danych XML lub schemat i dane z `DataTable`, użyj `WriteXml` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-997">To write XML data, or both schema and data from the `DataTable`, use the `WriteXml` method.</span></span> <span data-ttu-id="a591e-998">Aby zapisać tylko schemat, należy użyć `WriteXmlSchema` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-998">To write just the schema, use the `WriteXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a591e-999"><xref:System.InvalidOperationException> Zostanie wygenerowany, jeśli typ kolumny w `DataRow` trwa od zapisu lub odczytu implementuje <xref:System.Dynamic.IDynamicMetaObjectProvider> i nie implementuje <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-999">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 <span data-ttu-id="a591e-1000">Jeśli określono schemat w tekście, schematu w wierszu służy do rozszerzania istniejącej struktury relacyjne przed załadowaniem danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-1000">If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</span></span> <span data-ttu-id="a591e-1001">Jeśli występują konflikty (na przykład tej samej kolumny w tej samej tabeli zdefiniowane przy użyciu różnych typów danych) jest wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a591e-1001">If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</span></span>  
  
 <span data-ttu-id="a591e-1002">Jeśli schemat nie-line jest określony, struktura relacyjnej został rozszerzony za pośrednictwem wnioskowania odpowiednio do potrzeb zgodnie ze struktury dokumentu XML.</span><span class="sxs-lookup"><span data-stu-id="a591e-1002">If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</span></span> <span data-ttu-id="a591e-1003">Jeśli schemat nie może zostać rozszerzony za pomocą wnioskowania, aby udostępnić wszystkie dane, jest wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a591e-1003">If the schema cannot be extended through inference in order to expose all data, an exception is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a591e-1004">`DataSet` Nie wiąże — element XML z odpowiadającymi mu dostawcami `DataColumn` lub `DataTable` po prawidłowe znaki XML, takich jak ("_") są anulowane w serializacji XML.</span><span class="sxs-lookup"><span data-stu-id="a591e-1004">The `DataSet` does not associate an XML element with its corresponding `DataColumn` or `DataTable` when legal XML characters like ("_") are escaped in the serialized XML.</span></span> <span data-ttu-id="a591e-1005">`DataSet` Się tylko specjalne niedozwolone znaki XML w nazwach elementów XML i dlatego tylko zajmowane są takie same.</span><span class="sxs-lookup"><span data-stu-id="a591e-1005">The `DataSet` itself only escapes illegal XML characters in XML element names and hence can only consume the same.</span></span> <span data-ttu-id="a591e-1006">Gdy będą miały zmienione znaczenie prawidłowe znaki w nazwie elementu XML, element jest ignorowany podczas przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="a591e-1006">When legal characters in XML element name are escaped, the element is ignored while processing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-1007">Poniższy przykład tworzy <xref:System.Data.DataTable> zawierających dwie kolumny i dziesięć wierszy.</span><span class="sxs-lookup"><span data-stu-id="a591e-1007">The following example creates a <xref:System.Data.DataTable> containing two columns and ten rows.</span></span> <span data-ttu-id="a591e-1008">W przykładzie polecenie zapisuje <xref:System.Data.DataTable> schemat i dane do strumienia pamięci, wywołując <xref:System.Data.DataTable.WriteXml%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1008">The example writes the <xref:System.Data.DataTable> schema and data to a memory stream, by invoking the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span> <span data-ttu-id="a591e-1009">W przykładzie jest tworzony drugiej <xref:System.Data.DataTable> i wywołuje <xref:System.Data.DataTable.ReadXml%2A> metodę, aby wypełnić go schemat i dane.</span><span class="sxs-lookup"><span data-stu-id="a591e-1009">The example creates a second <xref:System.Data.DataTable> and calls the <xref:System.Data.DataTable.ReadXml%2A> method to fill it with schema and data.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlText#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlText/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlText#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlText/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public System.Data.XmlReadMode ReadXml (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.XmlReadMode ReadXml(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadXml (fileName As String) As XmlReadMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::XmlReadMode ReadXml(System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="a591e-1010">Nazwa pliku, z której mają być odczytywane dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1010">The name of the file from which to read the data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-1011">Odczytuje XML: schemat i dane do <see cref="T:System.Data.DataTable" /> z określonego pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1011">Reads XML schema and data into the <see cref="T:System.Data.DataTable" /> from the specified file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a591e-1012">
            <see cref="T:System.Data.XmlReadMode" /> Używany do odczytu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1012">The <see cref="T:System.Data.XmlReadMode" /> used to read the data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1013">Bieżący <xref:System.Data.DataTable> i jego elementów podrzędnych są ładowane przy użyciu danych z pliku o nazwie w podane <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1013">The current <xref:System.Data.DataTable> and its descendents are loaded with the data from the file named in the supplied <xref:System.String>.</span></span> <span data-ttu-id="a591e-1014">Zachowanie tej metody jest identyczna ze <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> metody, z wyjątkiem danych to w tym przypadku jest załadowany tylko dla bieżącej tabeli i jego obiektów podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="a591e-1014">The behavior of this method is identical to that of the <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> method, except that in this case, data is loaded only for the current table and its descendants.</span></span>  
  
 <span data-ttu-id="a591e-1015"><xref:System.Data.DataTable.ReadXml%2A> Metoda zapewnia sposób odczytać tylko dane lub zarówno danych i schematu do <xref:System.Data.DataTable> z dokumentu XML, podczas gdy <xref:System.Data.DataTable.ReadXmlSchema%2A> metoda odczytuje tylko schemat.</span><span class="sxs-lookup"><span data-stu-id="a591e-1015">The <xref:System.Data.DataTable.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataTable> from an XML document, whereas the <xref:System.Data.DataTable.ReadXmlSchema%2A> method reads only the schema.</span></span>  
  
 <span data-ttu-id="a591e-1016">Należy pamiętać, że to samo dotyczy dla <xref:System.Data.DataTable.WriteXml%2A> i <xref:System.Data.DataTable.WriteXmlSchema%2A> metod, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="a591e-1016">Note that the same is true for the <xref:System.Data.DataTable.WriteXml%2A> and <xref:System.Data.DataTable.WriteXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="a591e-1017">Można zapisać danych XML lub schemat i dane z `DataTable`, użyj `WriteXml` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1017">To write XML data, or both schema and data from the `DataTable`, use the `WriteXml` method.</span></span> <span data-ttu-id="a591e-1018">Aby zapisać tylko schemat, należy użyć `WriteXmlSchema` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1018">To write just the schema, use the `WriteXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a591e-1019"><xref:System.InvalidOperationException> Zostanie wygenerowany, jeśli typ kolumny w `DataRow` trwa od zapisu lub odczytu implementuje <xref:System.Dynamic.IDynamicMetaObjectProvider> i nie implementuje <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1019">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 <span data-ttu-id="a591e-1020">Jeśli określono schemat w tekście, schematu w wierszu służy do rozszerzania istniejącej struktury relacyjne przed załadowaniem danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-1020">If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</span></span> <span data-ttu-id="a591e-1021">Jeśli występują konflikty (na przykład tej samej kolumny w tej samej tabeli zdefiniowane przy użyciu różnych typów danych) jest wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a591e-1021">If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</span></span>  
  
 <span data-ttu-id="a591e-1022">Jeśli schemat nie-line jest określony, struktura relacyjnej został rozszerzony za pośrednictwem wnioskowania odpowiednio do potrzeb zgodnie ze struktury dokumentu XML.</span><span class="sxs-lookup"><span data-stu-id="a591e-1022">If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</span></span> <span data-ttu-id="a591e-1023">Jeśli schemat nie może zostać rozszerzony za pomocą wnioskowania, aby udostępnić wszystkie dane, jest wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a591e-1023">If the schema cannot be extended through inference in order to expose all data, an exception is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a591e-1024">`DataSet` Nie wiąże — element XML z odpowiadającymi mu dostawcami `DataColumn` lub `DataTable` po prawidłowe znaki XML, takich jak ("_") są anulowane w serializacji XML.</span><span class="sxs-lookup"><span data-stu-id="a591e-1024">The `DataSet` does not associate an XML element with its corresponding `DataColumn` or `DataTable` when legal XML characters like ("_") are escaped in the serialized XML.</span></span> <span data-ttu-id="a591e-1025">`DataSet` Się tylko specjalne niedozwolone znaki XML w nazwach elementów XML i dlatego tylko zajmowane są takie same.</span><span class="sxs-lookup"><span data-stu-id="a591e-1025">The `DataSet` itself only escapes illegal XML characters in XML element names and hence can only consume the same.</span></span> <span data-ttu-id="a591e-1026">Gdy będą miały zmienione znaczenie prawidłowe znaki w nazwie elementu XML, element jest ignorowany podczas przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="a591e-1026">When legal characters in XML element name are escaped, the element is ignored while processing.</span></span>  
  
```csharp  
using System.Data;  
public class A {  
   static void Main(string[] args) {  
      DataTable tabl = new DataTable("mytable");  
      tabl.Columns.Add(new DataColumn("id", typeof(int)));  
      for (int i = 0; i < 10; i++) {  
         DataRow row = tabl.NewRow();  
         row["id"] = i;  
         tabl.Rows.Add(row);  
      }  
      tabl.WriteXml("f.xml", XmlWriteMode.WriteSchema);  
      DataTable newt = new DataTable();  
      newt.ReadXml("f.xml");  
   }  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="a591e-1027">Poniższy przykład tworzy <xref:System.Data.DataTable> zawierających dwie kolumny i dziesięć wierszy.</span><span class="sxs-lookup"><span data-stu-id="a591e-1027">The following example creates a <xref:System.Data.DataTable> containing two columns and ten rows.</span></span> <span data-ttu-id="a591e-1028">W przykładzie polecenie zapisuje <xref:System.Data.DataTable> schematu i danych na dysku.</span><span class="sxs-lookup"><span data-stu-id="a591e-1028">The example writes the <xref:System.Data.DataTable> schema and data to disk.</span></span> <span data-ttu-id="a591e-1029">W przykładzie jest tworzony drugiej <xref:System.Data.DataTable> i wywołuje <xref:System.Data.DataTable.ReadXml%2A> metodę, aby wypełnić go schemat i dane.</span><span class="sxs-lookup"><span data-stu-id="a591e-1029">The example creates a second <xref:System.Data.DataTable> and calls the <xref:System.Data.DataTable.ReadXml%2A> method to fill it with schema and data.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlString#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlString/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlString#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlString/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public System.Data.XmlReadMode ReadXml (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.XmlReadMode ReadXml(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadXml (reader As XmlReader) As XmlReadMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::XmlReadMode ReadXml(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="a591e-1030">
            <see cref="T:System.Xml.XmlReader" /> Które będą używane do odczytywania danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1030">The <see cref="T:System.Xml.XmlReader" /> that will be used to read the data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-1031">Odczytuje XML: schemat i dane do <see cref="T:System.Data.DataTable" /> przy użyciu określonego <see cref="T:System.Xml.XmlReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1031">Reads XML Schema and Data into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a591e-1032">
            <see cref="T:System.Data.XmlReadMode" /> Używany do odczytu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1032">The <see cref="T:System.Data.XmlReadMode" /> used to read the data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1033">Bieżący <xref:System.Data.DataTable> i jego elementów podrzędnych są ładowane przy użyciu danych z pliku o nazwie w podane <xref:System.Xml.XmlReader>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1033">The current <xref:System.Data.DataTable> and its descendents are loaded with the data from the file named in the supplied <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="a591e-1034">Zachowanie tej metody jest identyczna ze <xref:System.Data.DataTable.ReadXml%2A> metody, z wyjątkiem danych to w tym przypadku jest załadowany tylko dla bieżącej tabeli i jego obiektów podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="a591e-1034">The behavior of this method is identical to that of the <xref:System.Data.DataTable.ReadXml%2A> method, except that in this case, data is loaded only for the current table and its descendants.</span></span>  
  
 <span data-ttu-id="a591e-1035"><xref:System.Data.DataTable.ReadXml%2A> Metoda zapewnia sposób odczytać tylko dane lub zarówno danych i schematu do <xref:System.Data.DataTable> z dokumentu XML, podczas gdy <xref:System.Data.DataTable.ReadXmlSchema%2A> metoda odczytuje tylko schemat.</span><span class="sxs-lookup"><span data-stu-id="a591e-1035">The <xref:System.Data.DataTable.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataTable> from an XML document, whereas the <xref:System.Data.DataTable.ReadXmlSchema%2A> method reads only the schema.</span></span>  
  
 <span data-ttu-id="a591e-1036">Należy pamiętać, że to samo dotyczy dla <xref:System.Data.DataTable.WriteXml%2A> i <xref:System.Data.DataTable.WriteXmlSchema%2A> metod, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="a591e-1036">Note that the same is true for the <xref:System.Data.DataTable.WriteXml%2A> and <xref:System.Data.DataTable.WriteXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="a591e-1037">Można zapisać danych XML lub schemat i dane z `DataTable`, użyj `WriteXml` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1037">To write XML data, or both schema and data from the `DataTable`, use the `WriteXml` method.</span></span> <span data-ttu-id="a591e-1038">Aby zapisać tylko schemat, należy użyć `WriteXmlSchema` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1038">To write just the schema, use the `WriteXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a591e-1039"><xref:System.InvalidOperationException> Zostanie wygenerowany, jeśli typ kolumny w `DataRow` trwa od zapisu lub odczytu implementuje <xref:System.Dynamic.IDynamicMetaObjectProvider> i nie implementuje <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1039">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 <span data-ttu-id="a591e-1040">Jeśli określono schemat w tekście, schematu w wierszu służy do rozszerzania istniejącej struktury relacyjne przed załadowaniem danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-1040">If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</span></span> <span data-ttu-id="a591e-1041">Jeśli występują konflikty (na przykład tej samej kolumny w tej samej tabeli zdefiniowane przy użyciu różnych typów danych) jest wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a591e-1041">If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</span></span>  
  
 <span data-ttu-id="a591e-1042">Jeśli schemat nie-line jest określony, struktura relacyjnej został rozszerzony za pośrednictwem wnioskowania odpowiednio do potrzeb zgodnie ze struktury dokumentu XML.</span><span class="sxs-lookup"><span data-stu-id="a591e-1042">If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</span></span> <span data-ttu-id="a591e-1043">Jeśli schemat nie może zostać rozszerzony za pomocą wnioskowania, aby udostępnić wszystkie dane, jest wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a591e-1043">If the schema cannot be extended through inference in order to expose all data, an exception is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a591e-1044">`DataSet` Nie wiąże — element XML z odpowiadającymi mu dostawcami `DataColumn` lub `DataTable` po prawidłowe znaki XML, takich jak ("_") są anulowane w serializacji XML.</span><span class="sxs-lookup"><span data-stu-id="a591e-1044">The `DataSet` does not associate an XML element with its corresponding `DataColumn` or `DataTable` when legal XML characters like ("_") are escaped in the serialized XML.</span></span> <span data-ttu-id="a591e-1045">`DataSet` Się tylko specjalne niedozwolone znaki XML w nazwach elementów XML i dlatego tylko zajmowane są takie same.</span><span class="sxs-lookup"><span data-stu-id="a591e-1045">The `DataSet` itself only escapes illegal XML characters in XML element names and hence can only consume the same.</span></span> <span data-ttu-id="a591e-1046">Gdy będą miały zmienione znaczenie prawidłowe znaki w nazwie elementu XML, element jest ignorowany podczas przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="a591e-1046">When legal characters in XML element name are escaped, the element is ignored while processing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-1047">Poniższy przykład tworzy <xref:System.Data.DataTable> zawierających dwie kolumny i dziesięć wierszy.</span><span class="sxs-lookup"><span data-stu-id="a591e-1047">The following example creates a <xref:System.Data.DataTable> containing two columns and ten rows.</span></span> <span data-ttu-id="a591e-1048">W przykładzie polecenie zapisuje <xref:System.Data.DataTable> schemat i dane do <xref:System.Xml.XmlReader>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1048">The example writes the <xref:System.Data.DataTable> schema and data to an <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="a591e-1049">W przykładzie jest tworzony drugiej <xref:System.Data.DataTable> i wywołuje <xref:System.Data.DataTable.ReadXml%2A> metodę, aby wypełnić go schemat i dane z <xref:System.Xml.XmlReader> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a591e-1049">The example creates a second <xref:System.Data.DataTable> and calls the <xref:System.Data.DataTable.ReadXml%2A> method to fill it with schema and data from the <xref:System.Xml.XmlReader> instance.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlXmlReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlXmlReader/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlXmlReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlXmlReader/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadXmlSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-1050">Odczytuje schematu XML w <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1050">Reads an XML schema into the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1051">Użyj `ReadXmlSchema` metodę w celu utworzenia schematu <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1051">Use the `ReadXmlSchema` method to create the schema for a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="a591e-1052">Schemat zawiera definicji tabeli, relacji i ograniczenia.</span><span class="sxs-lookup"><span data-stu-id="a591e-1052">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="a591e-1053">Aby zapisać schemat dokumentu XML, użyj <xref:System.Data.DataTable.WriteXmlSchema%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1053">To write a schema to an XML document, use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method.</span></span>  
  
 <span data-ttu-id="a591e-1054">Schemat XML jest interpretowany zgodnie ze standardowych XSD.</span><span class="sxs-lookup"><span data-stu-id="a591e-1054">The XML schema is interpreted according to the XSD standard.</span></span>  
  
 <span data-ttu-id="a591e-1055">`ReadXmlSchema` Zazwyczaj wywoływana jest metoda przed wywołaniem <xref:System.Data.DataTable.ReadXml%2A> metodę, która jest używany do wypełniania <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1055">The `ReadXmlSchema` method is generally invoked before invoking the <xref:System.Data.DataTable.ReadXml%2A> method which is used to fill the <xref:System.Data.DataTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Data.DataSet.ReadXmlSchema" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadXmlSchema">
      <MemberSignature Language="C#" Value="public void ReadXmlSchema (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadXmlSchema(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXmlSchema(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="a591e-1056">Strumień używany do odczytu schematu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1056">The stream used to read the schema.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-1057">Odczytuje schematu XML w <see cref="T:System.Data.DataTable" /> przy użyciu określonego strumienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1057">Reads an XML schema into the <see cref="T:System.Data.DataTable" /> using the specified stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1058">Użyj <xref:System.Data.DataTable.ReadXmlSchema%2A> metodę w celu utworzenia schematu <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1058">Use the <xref:System.Data.DataTable.ReadXmlSchema%2A> method to create the schema for a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="a591e-1059">Schemat zawiera definicji tabeli, relacji i ograniczenia.</span><span class="sxs-lookup"><span data-stu-id="a591e-1059">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="a591e-1060">Aby zapisać schemat dokumentu XML, użyj <xref:System.Data.DataTable.WriteXmlSchema%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1060">To write a schema to an XML document, use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method.</span></span>  
  
 <span data-ttu-id="a591e-1061">Schemat XML jest interpretowany zgodnie ze standardowych XSD.</span><span class="sxs-lookup"><span data-stu-id="a591e-1061">The XML schema is interpreted according to the XSD standard.</span></span>  
  
 <span data-ttu-id="a591e-1062">Jeśli msdata:DataType i typy xs:type nie są zgodne, może spowodować uszkodzenie danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-1062">Data corruption can occur if the msdata:DataType and the xs:type types do not match.</span></span> <span data-ttu-id="a591e-1063">Nie zostanie wygenerowany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a591e-1063">No exception will be thrown.</span></span>  
  
 <span data-ttu-id="a591e-1064">`ReadXmlSchema` Zazwyczaj wywoływana jest metoda przed wywołaniem <xref:System.Data.DataTable.ReadXml%2A> metodę, która jest używany do wypełniania <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1064">The `ReadXmlSchema` method is generally invoked before invoking the <xref:System.Data.DataTable.ReadXml%2A> method which is used to fill the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="a591e-1065">Aby utworzyć relacji zagnieżdżonej przy użyciu schematu XML, użyj niejawne elementów zagnieżdżonych.</span><span class="sxs-lookup"><span data-stu-id="a591e-1065">To create a nested relation using XML schema, use implicit nested elements.</span></span> <span data-ttu-id="a591e-1066">Można również skonfigurować relacji zagnieżdżonej można używać nazw kolumn jawnego.</span><span class="sxs-lookup"><span data-stu-id="a591e-1066">You can also configure the nested relation to use explicit column names.</span></span> <span data-ttu-id="a591e-1067">Elementy musi być niejawnie zagnieżdżone, aby odpowiednie DataTables brać udziału w relacji zagnieżdżonej.</span><span class="sxs-lookup"><span data-stu-id="a591e-1067">Elements must be implicitly nested in order for the corresponding DataTables to participate in a nested relation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-1068">Tworzy nową klasę następującej aplikacji konsoli <xref:System.Data.DataTable>i zapisuje schematu dla tej tabeli do <xref:System.IO.MemoryStream>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1068">The following console application creates a new <xref:System.Data.DataTable>, and writes the schema for that table to a <xref:System.IO.MemoryStream>.</span></span> <span data-ttu-id="a591e-1069">Następnie, w przykładzie jest tworzony nowy <xref:System.Data.DataTable> i odczytuje schematem z zapisanym schematu XML.</span><span class="sxs-lookup"><span data-stu-id="a591e-1069">Then, the example creates a new <xref:System.Data.DataTable> and reads its schema from the saved XML schema.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlIOStream#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlIOStream/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlIOStream#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlIOStream/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="ReadXmlSchema">
      <MemberSignature Language="C#" Value="public void ReadXmlSchema (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadXmlSchema(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadXmlSchema (reader As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXmlSchema(System::IO::TextReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="a591e-1070">
            <see cref="T:System.IO.TextReader" /> Używany do odczytu informacji o schemacie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1070">The <see cref="T:System.IO.TextReader" /> used to read the schema information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-1071">Odczytuje schematu XML w <see cref="T:System.Data.DataTable" /> przy użyciu określonego <see cref="T:System.IO.TextReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1071">Reads an XML schema into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.TextReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1072">Użyj <xref:System.Data.DataTable.ReadXmlSchema%2A> metodę w celu utworzenia schematu <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1072">Use the <xref:System.Data.DataTable.ReadXmlSchema%2A> method to create the schema for a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="a591e-1073">Schemat zawiera definicji tabeli, relacji i ograniczenia.</span><span class="sxs-lookup"><span data-stu-id="a591e-1073">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="a591e-1074">Aby zapisać schemat dokumentu XML, użyj <xref:System.Data.DataTable.WriteXmlSchema%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1074">To write a schema to an XML document, use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method.</span></span>  
  
 <span data-ttu-id="a591e-1075">Schemat XML jest interpretowany zgodnie ze standardowych XSD.</span><span class="sxs-lookup"><span data-stu-id="a591e-1075">The XML schema is interpreted according to the XSD standard.</span></span>  
  
 <span data-ttu-id="a591e-1076">Jeśli msdata:DataType i typy xs:type nie są zgodne, może spowodować uszkodzenie danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-1076">Data corruption can occur if the msdata:DataType and the xs:type types do not match.</span></span> <span data-ttu-id="a591e-1077">Nie zostanie wygenerowany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a591e-1077">No exception will be thrown.</span></span>  
  
 <span data-ttu-id="a591e-1078">`ReadXmlSchema` Zazwyczaj wywoływana jest metoda przed wywołaniem <xref:System.Data.DataTable.ReadXml%2A> metodę, która jest używany do wypełniania <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1078">The `ReadXmlSchema` method is generally invoked before invoking the <xref:System.Data.DataTable.ReadXml%2A> method which is used to fill the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="a591e-1079">Aby utworzyć relacji zagnieżdżonej przy użyciu schematu XML, użyj niejawne elementów zagnieżdżonych.</span><span class="sxs-lookup"><span data-stu-id="a591e-1079">To create a nested relation using XML schema, use implicit nested elements.</span></span> <span data-ttu-id="a591e-1080">Można także ponownie skonfigurować relacji zagnieżdżonej można używać nazw kolumn jawnego.</span><span class="sxs-lookup"><span data-stu-id="a591e-1080">You can also reconfigure the nested relation to use explicit column names.</span></span> <span data-ttu-id="a591e-1081">Elementy musi być niejawnie zagnieżdżone, aby odpowiednie DataTables brać udziału w relacji zagnieżdżonej.</span><span class="sxs-lookup"><span data-stu-id="a591e-1081">Elements must be implicitly nested in order for the corresponding DataTables to participate in a nested relation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-1082">Tworzy nową klasę następującej aplikacji konsoli <xref:System.Data.DataTable>i zapisuje schematu dla tej tabeli do <xref:System.IO.MemoryStream>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1082">The following console application creates a new <xref:System.Data.DataTable>, and writes the schema for that table to a <xref:System.IO.MemoryStream>.</span></span> <span data-ttu-id="a591e-1083">Następnie, w przykładzie jest tworzony nowy <xref:System.Data.DataTable> i odczytuje schematem z zapisanym schematu XML, za pomocą <xref:System.IO.StreamReader> (który dziedziczy z <xref:System.IO.TextReader>) jako źródło.</span><span class="sxs-lookup"><span data-stu-id="a591e-1083">Then, the example creates a new <xref:System.Data.DataTable> and reads its schema from the saved XML schema, using a <xref:System.IO.StreamReader> (which inherits from <xref:System.IO.TextReader>) as its source.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlSchema#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchema/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlSchema#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchema/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)" />
      </Docs>
    </Member>
    <Member MemberName="ReadXmlSchema">
      <MemberSignature Language="C#" Value="public void ReadXmlSchema (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadXmlSchema(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXmlSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadXmlSchema (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXmlSchema(System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="a591e-1084">Nazwa pliku, z którego można odczytać informacji o schemacie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1084">The name of the file from which to read the schema information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-1085">Odczytuje schematu XML w <see cref="T:System.Data.DataTable" /> z określonego pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1085">Reads an XML schema into the <see cref="T:System.Data.DataTable" /> from the specified file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1086">Użyj <xref:System.Data.DataTable.ReadXmlSchema%2A> metodę w celu utworzenia schematu <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1086">Use the <xref:System.Data.DataTable.ReadXmlSchema%2A> method to create the schema for a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="a591e-1087">Schemat zawiera definicji tabeli, relacji i ograniczenia.</span><span class="sxs-lookup"><span data-stu-id="a591e-1087">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="a591e-1088">Aby zapisać schemat dokumentu XML, użyj <xref:System.Data.DataTable.WriteXmlSchema%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1088">To write a schema to an XML document, use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method.</span></span>  
  
 <span data-ttu-id="a591e-1089">Schemat XML jest interpretowany zgodnie ze standardowych XSD.</span><span class="sxs-lookup"><span data-stu-id="a591e-1089">The XML schema is interpreted according to the XSD standard.</span></span>  
  
 <span data-ttu-id="a591e-1090">Jeśli msdata:DataType i typy xs:type nie są zgodne, może spowodować uszkodzenie danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-1090">Data corruption can occur if the msdata:DataType and the xs:type types do not match.</span></span> <span data-ttu-id="a591e-1091">Nie zostanie wygenerowany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a591e-1091">No exception will be thrown.</span></span>  
  
 <span data-ttu-id="a591e-1092">`ReadXmlSchema` Zazwyczaj wywoływana jest metoda przed wywołaniem <xref:System.Data.DataTable.ReadXml%2A> metodę, która jest używany do wypełniania `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="a591e-1092">The `ReadXmlSchema` method is generally invoked before invoking the <xref:System.Data.DataTable.ReadXml%2A> method which is used to fill the `DataTable`.</span></span>  
  
 <span data-ttu-id="a591e-1093">Aby utworzyć relacji zagnieżdżonej przy użyciu schematu XML, użyj niejawne elementów zagnieżdżonych.</span><span class="sxs-lookup"><span data-stu-id="a591e-1093">To create a nested relation using XML schema, use implicit nested elements.</span></span> <span data-ttu-id="a591e-1094">Można także ponownie skonfigurować relacji zagnieżdżonej można używać nazw kolumn jawnego.</span><span class="sxs-lookup"><span data-stu-id="a591e-1094">You can also reconfigure the nested relation to use explicit column names.</span></span> <span data-ttu-id="a591e-1095">Elementy musi być niejawnie zagnieżdżone, aby odpowiednie DataTables brać udziału w relacji zagnieżdżonej.</span><span class="sxs-lookup"><span data-stu-id="a591e-1095">Elements must be implicitly nested in order for the corresponding DataTables to participate in a nested relation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-1096">Tworzy nową klasę następującej aplikacji konsoli <xref:System.Data.DataTable>i zapisuje w pliku schematu dla tej tabeli.</span><span class="sxs-lookup"><span data-stu-id="a591e-1096">The following console application creates a new <xref:System.Data.DataTable>, and writes the schema for that table to a file.</span></span> <span data-ttu-id="a591e-1097">Następnie, w przykładzie jest tworzony nowy <xref:System.Data.DataTable> i odczytuje schematem z zapisanym schematu XML, korzystając z pliku jako źródła.</span><span class="sxs-lookup"><span data-stu-id="a591e-1097">Then, the example creates a new <xref:System.Data.DataTable> and reads its schema from the saved XML schema, using the file as its source.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlSchemaString#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchemaString/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlSchemaString#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchemaString/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataSet.ReadXmlSchema(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ReadXmlSchema">
      <MemberSignature Language="C#" Value="public void ReadXmlSchema (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadXmlSchema(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadXmlSchema (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXmlSchema(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="a591e-1098">
            <see cref="T:System.Xml.XmlReader" /> Używany do odczytu informacji o schemacie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1098">The <see cref="T:System.Xml.XmlReader" /> used to read the schema information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-1099">Odczytuje schematu XML w <see cref="T:System.Data.DataTable" /> przy użyciu określonego <see cref="T:System.Xml.XmlReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1099">Reads an XML schema into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1100">Użyj <xref:System.Data.DataTable.ReadXmlSchema%2A> metodę w celu utworzenia schematu <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1100">Use the <xref:System.Data.DataTable.ReadXmlSchema%2A> method to create the schema for a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="a591e-1101">Schemat zawiera definicji tabeli, relacji i ograniczenia.</span><span class="sxs-lookup"><span data-stu-id="a591e-1101">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="a591e-1102">Aby zapisać schemat dokumentu XML, użyj <xref:System.Data.DataTable.WriteXmlSchema%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1102">To write a schema to an XML document, use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method.</span></span>  
  
 <span data-ttu-id="a591e-1103">Schemat XML jest interpretowany zgodnie ze standardowych XSD.</span><span class="sxs-lookup"><span data-stu-id="a591e-1103">The XML schema is interpreted according to the XSD standard.</span></span>  
  
 <span data-ttu-id="a591e-1104">Jeśli msdata:DataType i typy xs:type nie są zgodne, może spowodować uszkodzenie danych.</span><span class="sxs-lookup"><span data-stu-id="a591e-1104">Data corruption can occur if the msdata:DataType and the xs:type types do not match.</span></span> <span data-ttu-id="a591e-1105">Nie zostanie wygenerowany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a591e-1105">No exception will be thrown.</span></span>  
  
 <span data-ttu-id="a591e-1106">`ReadXmlSchema` Zazwyczaj wywoływana jest metoda przed wywołaniem <xref:System.Data.DataTable.ReadXml%2A> metodę, która jest używany do wypełniania <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1106">The `ReadXmlSchema` method is generally invoked before invoking the <xref:System.Data.DataTable.ReadXml%2A> method which is used to fill the <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a591e-1107">Sposób tworzenia relacji zagnieżdżonej przy użyciu schematu XML ma niejawne elementów zagnieżdżonych.</span><span class="sxs-lookup"><span data-stu-id="a591e-1107">The way to create a nested relation using XML schema is to have implicit nested elements.</span></span> <span data-ttu-id="a591e-1108">Ponadto można ponownie przewodowej, aby używać nazw kolumn jawne relacji zagnieżdżonej.</span><span class="sxs-lookup"><span data-stu-id="a591e-1108">Additionally, the nested relation could be re-wired, to use explicit column names.</span></span> <span data-ttu-id="a591e-1109">Jest to konieczne dla elementów być niejawnie zagnieżdżony odpowiedniego DataTables brać udziału w relacji zagnieżdżonej.</span><span class="sxs-lookup"><span data-stu-id="a591e-1109">It is mandatory for elements to be implicitly nested for the corresponding DataTables to participate in a nested relation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-1110">Tworzy nową klasę następującej aplikacji konsoli <xref:System.Data.DataTable>i zapisuje schematu dla tej tabeli do <xref:System.IO.MemoryStream>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1110">The following console application creates a new <xref:System.Data.DataTable>, and writes the schema for that table to a <xref:System.IO.MemoryStream>.</span></span> <span data-ttu-id="a591e-1111">Następnie, w przykładzie jest tworzony nowy <xref:System.Data.DataTable> i odczytuje schematem z zapisanym schematu XML, za pomocą <xref:System.Xml.XmlTextReader> (który dziedziczy z <xref:System.Xml.XmlReader>) jako źródło.</span><span class="sxs-lookup"><span data-stu-id="a591e-1111">Then, the example creates a new <xref:System.Data.DataTable> and reads its schema from the saved XML schema, using a <xref:System.Xml.XmlTextReader> (which inherits from <xref:System.Xml.XmlReader>) as its source.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlSchemaReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchemaReader/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlSchemaReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchemaReader/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)" />
      </Docs>
    </Member>
    <Member MemberName="ReadXmlSerializable">
      <MemberSignature Language="C#" Value="protected virtual void ReadXmlSerializable (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ReadXmlSerializable(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ReadXmlSerializable (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ReadXmlSerializable(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="a591e-1112">A <see cref="T:System.Xml.XmlReader" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1112">A <see cref="T:System.Xml.XmlReader" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-1113">Odczytuje dane ze strumienia XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1113">Reads from an XML stream.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RejectChanges">
      <MemberSignature Language="C#" Value="public void RejectChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RejectChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.RejectChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub RejectChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RejectChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a591e-1114">Wycofuje wszystkie zmiany wprowadzone do tabeli, ponieważ została załadowana lub czas ostatniego <see cref="M:System.Data.DataTable.AcceptChanges" /> została wywołana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1114">Rolls back all changes that have been made to the table since it was loaded, or the last time <see cref="M:System.Data.DataTable.AcceptChanges" /> was called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1115">Gdy <xref:System.Data.DataTable.RejectChanges%2A> po wywołaniu dowolnej <xref:System.Data.DataRow> obiektów, które są nadal w trybie edycji Anuluj ich edycji.</span><span class="sxs-lookup"><span data-stu-id="a591e-1115">When <xref:System.Data.DataTable.RejectChanges%2A> is called, any <xref:System.Data.DataRow> objects that are still in edit-mode cancel their edits.</span></span> <span data-ttu-id="a591e-1116">Nowe wiersze zostaną usunięte.</span><span class="sxs-lookup"><span data-stu-id="a591e-1116">New rows are removed.</span></span> <span data-ttu-id="a591e-1117">Wiersze z <xref:System.Data.DataRowState> ustawioną `Modified` lub `Deleted` zwrotu z powrotem do pierwotnego stanu.</span><span class="sxs-lookup"><span data-stu-id="a591e-1117">Rows with the <xref:System.Data.DataRowState> set to `Modified` or `Deleted` return back to their original state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-1118">Poniższy przykład powoduje, że wiele zmian do <xref:System.Data.DataTable>, ale odrzuca zmiany wywołując <xref:System.Data.DataTable.RejectChanges%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1118">The following example makes several changes to a <xref:System.Data.DataTable>, but rejects the changes by invoking the <xref:System.Data.DataTable.RejectChanges%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.RejectChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.RejectChanges Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.RejectChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.RejectChanges Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemotingFormat">
      <MemberSignature Language="C#" Value="public System.Data.SerializationFormat RemotingFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.SerializationFormat RemotingFormat" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.RemotingFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property RemotingFormat As SerializationFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SerializationFormat RemotingFormat { System::Data::SerializationFormat get(); void set(System::Data::SerializationFormat value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SerializationFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-1119">Pobiera lub ustawia format serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1119">Gets or sets the serialization format.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a591e-1120">A <see cref="T:System.Data.SerializationFormat" /> wyliczenie opisujące albo <see langword="Binary" /> lub <see langword="Xml" /> szeregowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1120">A <see cref="T:System.Data.SerializationFormat" /> enumeration specifying either <see langword="Binary" /> or <see langword="Xml" /> serialization.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a591e-1121">Resetuje <see cref="T:System.Data.DataTable" /> do stanu pierwotnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1121">Resets the <see cref="T:System.Data.DataTable" /> to its original state.</span>
          </span>
          <span data-ttu-id="a591e-1122">Resetowanie usuwa wszystkie dane, indeksy relacje i kolumn tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1122">Reset removes all data, indexes, relations, and columns of the table.</span>
          </span>
          <span data-ttu-id="a591e-1123">Jeśli zestaw danych zawiera element DataTable, tabeli nadal będzie częścią elementu DataSet po zresetowaniu tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1123">If a DataSet includes a DataTable, the table will still be part of the DataSet after the table is reset.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowChanged">
      <MemberSignature Language="C#" Value="public event System.Data.DataRowChangeEventHandler RowChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataRowChangeEventHandler RowChanged" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.RowChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowChanged As DataRowChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataRowChangeEventHandler ^ RowChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-1124">Występuje po <see cref="T:System.Data.DataRow" /> został pomyślnie zmieniony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1124">Occurs after a <see cref="T:System.Data.DataRow" /> has been changed successfully.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1125">Aby uzyskać więcej informacji, zobacz [obsługi zdarzeń DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span><span class="sxs-lookup"><span data-stu-id="a591e-1125">For more information, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.RowChanged Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.RowChanged Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.RowChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.RowChanged Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowChanging">
      <MemberSignature Language="C#" Value="public event System.Data.DataRowChangeEventHandler RowChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataRowChangeEventHandler RowChanging" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.RowChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowChanging As DataRowChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataRowChangeEventHandler ^ RowChanging;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-1126">Występuje, gdy <see cref="T:System.Data.DataRow" /> jest zmieniany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1126">Occurs when a <see cref="T:System.Data.DataRow" /> is changing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1127">Aby uzyskać więcej informacji, zobacz [obsługi zdarzeń DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span><span class="sxs-lookup"><span data-stu-id="a591e-1127">For more information, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.RowChanging Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.RowChanging Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.RowChanging Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.RowChanging Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowDeleted">
      <MemberSignature Language="C#" Value="public event System.Data.DataRowChangeEventHandler RowDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataRowChangeEventHandler RowDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.RowDeleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowDeleted As DataRowChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataRowChangeEventHandler ^ RowDeleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-1128">Występuje po usunięciu wiersza w tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1128">Occurs after a row in the table has been deleted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1129">Aby uzyskać więcej informacji, zobacz [obsługi zdarzeń DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span><span class="sxs-lookup"><span data-stu-id="a591e-1129">For more information, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.RowDeleted Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.RowDeleted Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.RowDeleted Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.RowDeleted Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowDeleting">
      <MemberSignature Language="C#" Value="public event System.Data.DataRowChangeEventHandler RowDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataRowChangeEventHandler RowDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.RowDeleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowDeleting As DataRowChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataRowChangeEventHandler ^ RowDeleting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-1130">Występuje przed wiersza w tabeli ma zostać usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1130">Occurs before a row in the table is about to be deleted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1131">Aby uzyskać więcej informacji, zobacz [obsługi zdarzeń DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span><span class="sxs-lookup"><span data-stu-id="a591e-1131">For more information, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.RowDeleting Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.RowDeleting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.RowDeleting Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.RowDeleting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public System.Data.DataRowCollection Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataRowCollection Rows" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Rows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rows As DataRowCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRowCollection ^ Rows { System::Data::DataRowCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRowCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-1132">Pobiera kolekcję wierszy, które należą do tej tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1132">Gets the collection of rows that belong to this table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a591e-1133">A <see cref="T:System.Data.DataRowCollection" /> zawierający <see cref="T:System.Data.DataRow" /> obiekty; w przeciwnym razie wartość null, jeśli nie <see cref="T:System.Data.DataRow" /> istnieją obiekty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1133">A <see cref="T:System.Data.DataRowCollection" /> that contains <see cref="T:System.Data.DataRow" /> objects; otherwise a null value if no <see cref="T:System.Data.DataRow" /> objects exist.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1134">Aby utworzyć nową <xref:System.Data.DataRow>, należy użyć <xref:System.Data.DataTable.NewRow%2A> metoda zwraca nowy obiekt.</span><span class="sxs-lookup"><span data-stu-id="a591e-1134">To create a new <xref:System.Data.DataRow>, you must use the <xref:System.Data.DataTable.NewRow%2A> method to return a new object.</span></span> <span data-ttu-id="a591e-1135">Taki obiekt jest automatycznie konfigurowany schemat zdefiniowane dla <xref:System.Data.DataTable> za pośrednictwem jego Kolekcja <xref:System.Data.DataColumn> obiektów.</span><span class="sxs-lookup"><span data-stu-id="a591e-1135">Such an object is automatically configured according to the schema defined for the <xref:System.Data.DataTable> through its collection of <xref:System.Data.DataColumn> objects.</span></span> <span data-ttu-id="a591e-1136">Po utworzeniu nowego wiersza i ustawianie wartości dla każdej kolumny w wierszu, Dodaj wiersz, aby <xref:System.Data.DataRowCollection> przy użyciu `Add` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1136">After creating a new row and setting the values for each column in the row, add the row to the <xref:System.Data.DataRowCollection> using the `Add` method.</span></span>  
  
 <span data-ttu-id="a591e-1137">Każdy <xref:System.Data.DataRow> w kolekcji reprezentuje wiersz danych w tabeli.</span><span class="sxs-lookup"><span data-stu-id="a591e-1137">Each <xref:System.Data.DataRow> in the collection represents a row of data in the table.</span></span> <span data-ttu-id="a591e-1138">Aby zatwierdzić zmiany w wartości kolumny w wierszu, należy wywołać <xref:System.Data.DataTable.AcceptChanges%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1138">To commit a change to the value of a column in the row, you must invoke the <xref:System.Data.DataTable.AcceptChanges%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-1139">Poniżej przedstawiono dwa przykłady zwracanie i ustawiania wierszy.</span><span class="sxs-lookup"><span data-stu-id="a591e-1139">The following shows two examples of returning and setting rows.</span></span> <span data-ttu-id="a591e-1140">W pierwszym przykładzie użyto <xref:System.Data.DataTable.Rows%2A> właściwości i wartość każdej kolumny dla każdego wiersza.</span><span class="sxs-lookup"><span data-stu-id="a591e-1140">The first example uses the <xref:System.Data.DataTable.Rows%2A> property and prints the value of each column for every row.</span></span> <span data-ttu-id="a591e-1141">W drugim przykładzie użyto <xref:System.Data.DataTable> obiektu <xref:System.Data.DataTable.NewRow%2A> metody, aby utworzyć nową <xref:System.Data.DataRow> obiektu ze schematem <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1141">The second example uses the <xref:System.Data.DataTable> object's <xref:System.Data.DataTable.NewRow%2A> method to create a new <xref:System.Data.DataRow> object with the schema of the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="a591e-1142">Po ustawieniu wartości wierszy, wiersz został dodany do <xref:System.Data.DataRowCollection> za pośrednictwem `Add` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1142">After setting the row values, the row is added to the <xref:System.Data.DataRowCollection> through the `Add` method.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Rows Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Rows Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Rows Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Rows Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="T:System.Data.DataRow" />
        <altmember cref="T:System.Data.DataRowCollection" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Select">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-1143">Pobiera tablicę <see cref="T:System.Data.DataRow" /> obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1143">Gets an array of <see cref="T:System.Data.DataRow" /> objects.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Select" />
      <MemberSignature Language="VB.NET" Value="Public Function Select () As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ Select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a591e-1144">Pobiera tablicę wszystkich <see cref="T:System.Data.DataRow" /> obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1144">Gets an array of all <see cref="T:System.Data.DataRow" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a591e-1145">Tablica <see cref="T:System.Data.DataRow" /> obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1145">An array of <see cref="T:System.Data.DataRow" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1146">W celu zapewnienia prawidłowego sortowania, określ kryteria sortowania z <xref:System.Data.DataTable.Select%2A> lub <xref:System.Data.DataTable.Select%2A>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1146">To ensure the proper sort order, specify sort criteria with <xref:System.Data.DataTable.Select%2A> or <xref:System.Data.DataTable.Select%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-1147">Poniższy przykład zwraca tablicę <xref:System.Data.DataRow> obiektów za pomocą <xref:System.Data.DataTable.Select%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1147">The following example returns an array of <xref:System.Data.DataRow> objects through the <xref:System.Data.DataTable.Select%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Select Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Select Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Select Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Select Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.CaseSensitive" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] Select (string filterExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] Select(string filterExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Select(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (filterExpression As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ Select(System::String ^ filterExpression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterExpression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filterExpression">
          <span data-ttu-id="a591e-1148">Kryteria służące do filtrowania wierszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1148">The criteria to use to filter the rows.</span>
          </span>
          <span data-ttu-id="a591e-1149">Przykłady dotyczące do filtru wierszy, zobacz [DataView RowFilter składni C#](http://www.csharp-examples.net/dataview-rowfilter/).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1149">For examples on how to filter rows, see [DataView RowFilter Syntax [C#]](http://www.csharp-examples.net/dataview-rowfilter/).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-1150">Pobiera tablicę wszystkich <see cref="T:System.Data.DataRow" /> obiektów spełniających kryteria filtrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1150">Gets an array of all <see cref="T:System.Data.DataRow" /> objects that match the filter criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a591e-1151">Tablica <see cref="T:System.Data.DataRow" /> obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1151">An array of <see cref="T:System.Data.DataRow" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1152">Aby utworzyć `filterExpression` argumentu, użyj tego samego reguły, które są stosowane do <xref:System.Data.DataColumn> klasy <xref:System.Data.DataColumn.Expression%2A> wartości właściwości dla tworzenia filtrów.</span><span class="sxs-lookup"><span data-stu-id="a591e-1152">To create the `filterExpression` argument, use the same rules that apply to the <xref:System.Data.DataColumn> class's <xref:System.Data.DataColumn.Expression%2A> property value for creating filters.</span></span>  
  
 <span data-ttu-id="a591e-1153">W celu zapewnienia prawidłowego sortowania, określ kryteria sortowania z <xref:System.Data.DataTable.Select%2A> lub <xref:System.Data.DataTable.Select%2A>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1153">To ensure the proper sort order, specify sort criteria with <xref:System.Data.DataTable.Select%2A> or <xref:System.Data.DataTable.Select%2A>.</span></span>  
  
 <span data-ttu-id="a591e-1154">Jeśli kolumna w filtrze zawiera wartość null, nie będzie częścią wyniku.</span><span class="sxs-lookup"><span data-stu-id="a591e-1154">If the column on the filter contains a null value, it will not be part of the result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-1155">W poniższym przykładzie użyto wyrażenia filtru, aby powrócić na tablicę <xref:System.Data.DataRow> obiektów.</span><span class="sxs-lookup"><span data-stu-id="a591e-1155">The following example uses a filter expression to return an array of <xref:System.Data.DataRow> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Select1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Select1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Select1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Select1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.CaseSensitive" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] Select (string filterExpression, string sort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] Select(string filterExpression, string sort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Select(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (filterExpression As String, sort As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ Select(System::String ^ filterExpression, System::String ^ sort);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterExpression" Type="System.String" />
        <Parameter Name="sort" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filterExpression">
          <span data-ttu-id="a591e-1156">Kryteria służące do filtrowania wierszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1156">The criteria to use to filter the rows.</span>
          </span>
          <span data-ttu-id="a591e-1157">Przykłady dotyczące do filtru wierszy, zobacz [DataView RowFilter składni C#](http://www.csharp-examples.net/dataview-rowfilter/).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1157">For examples on how to filter rows, see [DataView RowFilter Syntax [C#]](http://www.csharp-examples.net/dataview-rowfilter/).</span>
          </span>
        </param>
        <param name="sort">
          <span data-ttu-id="a591e-1158">Ciąg określający kierunku kolumny i sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1158">A string specifying the column and sort direction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-1159">Pobiera tablicę wszystkich <see cref="T:System.Data.DataRow" /> obiektów spełniających kryteria filtru w określonej kolejności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1159">Gets an array of all <see cref="T:System.Data.DataRow" /> objects that match the filter criteria, in the specified sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a591e-1160">Tablica <see cref="T:System.Data.DataRow" /> obiektów spełniających wyrażenia filtru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1160">An array of <see cref="T:System.Data.DataRow" /> objects matching the filter expression.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1161">Do formularza `filterExpression` argumentu, użyj tego samego reguł do tworzenia <xref:System.Data.DataColumn> klasy <xref:System.Data.DataColumn.Expression%2A> wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="a591e-1161">To form the `filterExpression` argument, use the same rules for creating the <xref:System.Data.DataColumn> class's <xref:System.Data.DataColumn.Expression%2A> property value.</span></span> <span data-ttu-id="a591e-1162">`Sort` Argument również używa tego samego reguł do tworzenia klasy <xref:System.Data.DataColumn.Expression%2A> ciągów.</span><span class="sxs-lookup"><span data-stu-id="a591e-1162">The `Sort` argument also uses the same rules for creating class's <xref:System.Data.DataColumn.Expression%2A> strings.</span></span>  
  
 <span data-ttu-id="a591e-1163">Jeśli kolumna w filtrze zawiera wartość null, nie będzie częścią wyniku.</span><span class="sxs-lookup"><span data-stu-id="a591e-1163">If the column on the filter contains a null value, it will not be part of the result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-1164">W poniższym przykładzie użyto wyrażenia filtru, aby powrócić na tablicę <xref:System.Data.DataRow> obiektów.</span><span class="sxs-lookup"><span data-stu-id="a591e-1164">The following example uses a filter expression to return an array of <xref:System.Data.DataRow> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Select2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Select2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Select2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Select2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.CaseSensitive" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] Select (string filterExpression, string sort, System.Data.DataViewRowState recordStates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] Select(string filterExpression, string sort, valuetype System.Data.DataViewRowState recordStates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (filterExpression As String, sort As String, recordStates As DataViewRowState) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ Select(System::String ^ filterExpression, System::String ^ sort, System::Data::DataViewRowState recordStates);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterExpression" Type="System.String" />
        <Parameter Name="sort" Type="System.String" />
        <Parameter Name="recordStates" Type="System.Data.DataViewRowState" />
      </Parameters>
      <Docs>
        <param name="filterExpression">
          <span data-ttu-id="a591e-1165">Kryteria służące do filtrowania wierszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1165">The criteria to use to filter the rows.</span>
          </span>
          <span data-ttu-id="a591e-1166">Przykłady dotyczące do filtru wierszy, zobacz [DataView RowFilter składni C#](http://www.csharp-examples.net/dataview-rowfilter/).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1166">For examples on how to filter rows, see [DataView RowFilter Syntax [C#]](http://www.csharp-examples.net/dataview-rowfilter/).</span>
          </span>
        </param>
        <param name="sort">
          <span data-ttu-id="a591e-1167">Ciąg określający kierunku kolumny i sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1167">A string specifying the column and sort direction.</span>
          </span>
        </param>
        <param name="recordStates">
          <span data-ttu-id="a591e-1168">Jeden z <see cref="T:System.Data.DataViewRowState" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1168">One of the <see cref="T:System.Data.DataViewRowState" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-1169">Pobiera tablicę wszystkich <see cref="T:System.Data.DataRow" /> obiekty spełniające kryteria filtru, kolejności sortowania, które odpowiadają określonego stanu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1169">Gets an array of all <see cref="T:System.Data.DataRow" /> objects that match the filter in the order of the sort that match the specified state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a591e-1170">Tablica <see cref="T:System.Data.DataRow" /> obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1170">An array of <see cref="T:System.Data.DataRow" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1171">Do formularza `filterExpression` argumentu, użyj tego samego reguł do tworzenia <xref:System.Data.DataColumn> klasy <xref:System.Data.DataColumn.Expression%2A> wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="a591e-1171">To form the `filterExpression` argument, use the same rules for creating the <xref:System.Data.DataColumn> class's <xref:System.Data.DataColumn.Expression%2A> property value.</span></span> <span data-ttu-id="a591e-1172">`Sort` Argument również używa tego samego reguł do tworzenia klasy <xref:System.Data.DataColumn.Expression%2A> ciągów.</span><span class="sxs-lookup"><span data-stu-id="a591e-1172">The `Sort` argument also uses the same rules for creating class's <xref:System.Data.DataColumn.Expression%2A> strings.</span></span>  
  
 <span data-ttu-id="a591e-1173">Jeśli kolumna w filtrze zawiera wartość null, nie będzie częścią wyniku.</span><span class="sxs-lookup"><span data-stu-id="a591e-1173">If the column on the filter contains a null value, it will not be part of the result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-1174">W poniższym przykładzie użyto stan filtru wyrażeń i rejestrowanie, aby zwracało tablicę z <xref:System.Data.DataRow> obiektów.</span><span class="sxs-lookup"><span data-stu-id="a591e-1174">The following example uses a filter expression and record state to return an array of <xref:System.Data.DataRow> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Select3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Select3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Select3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Select3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Site" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ISite ^ Site { System::ComponentModel::ISite ^ get(); void set(System::ComponentModel::ISite ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-1175">Pobiera lub ustawia <see cref="T:System.ComponentModel.ISite" /> dla <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1175">Gets or sets an <see cref="T:System.ComponentModel.ISite" /> for the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a591e-1176">
            <see cref="T:System.ComponentModel.ISite" /> Dla <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1176">An <see cref="T:System.ComponentModel.ISite" /> for the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1177">Powiązania witryny <xref:System.ComponentModel.Component> do <xref:System.ComponentModel.Container> i umożliwić komunikację między nimi, a także umożliwiają kontener, aby zarządzać jego składniki.</span><span class="sxs-lookup"><span data-stu-id="a591e-1177">Sites bind a <xref:System.ComponentModel.Component> to a <xref:System.ComponentModel.Container> and enable communication between them, as well as provide a way for the container to manage its components.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.ContainsListCollection">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IListSource.ContainsListCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ContainsListCollection As Boolean Implements IListSource.ContainsListCollection" />
      <MemberSignature Language="C++ CLI" Value="property bool System.ComponentModel.IListSource.ContainsListCollection { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-1178">Opis tego elementu członkowskiego, zobacz <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1178">For a description of this member, see <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a591e-1179">
            <see langword="true" /> Jeśli kolekcja jest kolekcją <see cref="T:System.Collections.IList" /> obiekty; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1179">
              <see langword="true" /> if the collection is a collection of <see cref="T:System.Collections.IList" /> objects; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1180">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="a591e-1180">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a591e-1181">Można go używać tylko wtedy, gdy <xref:System.Data.DataTable> wystąpienia jest rzutowane na <xref:System.ComponentModel.IListSource> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="a591e-1181">It can be used only when the <xref:System.Data.DataTable> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.GetList">
      <MemberSignature Language="C#" Value="System.Collections.IList IListSource.GetList ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IList System.ComponentModel.IListSource.GetList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList" />
      <MemberSignature Language="VB.NET" Value="Function GetList () As IList Implements IListSource.GetList" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IList ^ System.ComponentModel.IListSource.GetList() = System::ComponentModel::IListSource::GetList;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a591e-1182">Opis tego elementu członkowskiego, zobacz <see cref="M:System.ComponentModel.IListSource.GetList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1182">For a description of this member, see <see cref="M:System.ComponentModel.IListSource.GetList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a591e-1183">
            <see cref="T:System.Collections.IList" /> Który może być powiązana ze źródłem danych z obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1183">An <see cref="T:System.Collections.IList" /> that can be bound to a data source from the object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1184">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="a591e-1184">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a591e-1185">Można go używać tylko wtedy, gdy <xref:System.Data.DataTable> wystąpienia jest rzutowane na <xref:System.ComponentModel.IListSource> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="a591e-1185">It can be used only when the <xref:System.Data.DataTable> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.GetSchema">
      <MemberSignature Language="C#" Value="System.Xml.Schema.XmlSchema IXmlSerializable.GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Xml.Schema.XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema" />
      <MemberSignature Language="VB.NET" Value="Function GetSchema () As XmlSchema Implements IXmlSerializable.GetSchema" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Xml::Schema::XmlSchema ^ System.Xml.Serialization.IXmlSerializable.GetSchema() = System::Xml::Serialization::IXmlSerializable::GetSchema;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.GetSchema</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a591e-1186">Opis tego elementu członkowskiego, zobacz <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1186">For a description of this member, see <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a591e-1187">
            <see cref="T:System.Xml.Schema.XmlSchema" /> Opisujący reprezentację XML obiektu, który jest generowany przez <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> — metoda i używane przez <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1187">An <see cref="T:System.Xml.Schema.XmlSchema" /> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1188">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="a591e-1188">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a591e-1189">Można go używać tylko wtedy, gdy <xref:System.Data.DataSet> wystąpienia jest rzutowane na <xref:System.Xml.Serialization.IXmlSerializable> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="a591e-1189">It can be used only when the <xref:System.Data.DataSet> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.ReadXml">
      <MemberSignature Language="C#" Value="void IXmlSerializable.ReadXml (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Xml.Serialization.IXmlSerializable.ReadXml(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Sub ReadXml (reader As XmlReader) Implements IXmlSerializable.ReadXml" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Xml.Serialization.IXmlSerializable.ReadXml(System::Xml::XmlReader ^ reader) = System::Xml::Serialization::IXmlSerializable::ReadXml;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="a591e-1190">Element XmlReader.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1190">An XmlReader.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-1191">Opis tego elementu członkowskiego, zobacz <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1191">For a description of this member, see <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1192">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="a591e-1192">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a591e-1193">Można go używać tylko wtedy, gdy <xref:System.Data.DataSet> wystąpienia jest rzutowane na <xref:System.Xml.Serialization.IXmlSerializable> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="a591e-1193">It can be used only when the <xref:System.Data.DataSet> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.WriteXml">
      <MemberSignature Language="C#" Value="void IXmlSerializable.WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Xml.Serialization.IXmlSerializable.WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Sub WriteXml (writer As XmlWriter) Implements IXmlSerializable.WriteXml" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Xml.Serialization.IXmlSerializable.WriteXml(System::Xml::XmlWriter ^ writer) = System::Xml::Serialization::IXmlSerializable::WriteXml;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a591e-1194">Element XmlWriter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1194">An XmlWriter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-1195">Opis tego elementu członkowskiego, zobacz <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1195">For a description of this member, see <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1196">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="a591e-1196">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a591e-1197">Można go używać tylko wtedy, gdy <xref:System.Data.DataSet> wystąpienia jest rzutowane na <xref:System.Xml.Serialization.IXmlSerializable> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="a591e-1197">It can be used only when the <xref:System.Data.DataSet> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TableCleared">
      <MemberSignature Language="C#" Value="public event System.Data.DataTableClearEventHandler TableCleared;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataTableClearEventHandler TableCleared" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.TableCleared" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TableCleared As DataTableClearEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataTableClearEventHandler ^ TableCleared;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTableClearEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-1198">Występuje po <see cref="T:System.Data.DataTable" /> jest wyczyszczone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1198">Occurs after a <see cref="T:System.Data.DataTable" /> is cleared.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1199"><xref:System.Data.DataTable.TableCleared> Zdarzenie jest wywoływane bezpośrednio po wszystkie wiersze zostały pomyślnie wyczyszczone ale przed wysłaniem <xref:System.Data.DataTable.Clear%2A> metoda zwraca sterowanie do obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="a591e-1199">The <xref:System.Data.DataTable.TableCleared> event is fired immediately after all rows have been successfully cleared but before the <xref:System.Data.DataTable.Clear%2A> method returns control back to the caller.</span></span> <span data-ttu-id="a591e-1200"><xref:System.Data.DataTable.TableCleared> Zdarzeń nie jest uruchamiany, jeśli ma żadnych wyjątków podczas operacji Wyczyść.</span><span class="sxs-lookup"><span data-stu-id="a591e-1200">The <xref:System.Data.DataTable.TableCleared> event is not fired if there are any exceptions during the clear operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TableClearing">
      <MemberSignature Language="C#" Value="public event System.Data.DataTableClearEventHandler TableClearing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataTableClearEventHandler TableClearing" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.TableClearing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TableClearing As DataTableClearEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataTableClearEventHandler ^ TableClearing;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTableClearEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-1201">Występuje, gdy <see cref="T:System.Data.DataTable" /> jest wyczyszczone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1201">Occurs when a <see cref="T:System.Data.DataTable" /> is cleared.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1202"><xref:System.Data.DataTable.TableClearing> Zdarzenie jest wywoływane przed przetwarzania <xref:System.Data.DataTable.Clear%2A> rozpocznie się wykonywanie operacji.</span><span class="sxs-lookup"><span data-stu-id="a591e-1202">The <xref:System.Data.DataTable.TableClearing> event is fired before processing of the <xref:System.Data.DataTable.Clear%2A> operation begins.</span></span> <span data-ttu-id="a591e-1203">To zdarzenie jest wywoływane zawsze, gdy <xref:System.Data.DataTable.Clear%2A> wywoływana jest metoda, nawet jeśli tabela nie zawiera żadnych wierszy.</span><span class="sxs-lookup"><span data-stu-id="a591e-1203">This event is always fired when the <xref:System.Data.DataTable.Clear%2A> method is invoked, even if the table contains zero rows.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TableName">
      <MemberSignature Language="C#" Value="public string TableName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TableName" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.TableName" />
      <MemberSignature Language="VB.NET" Value="Public Property TableName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TableName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-1204">Pobiera lub ustawia nazwę <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1204">Gets or sets the name of the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a591e-1205">Nazwa <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1205">The name of the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1206"><xref:System.Data.DataTable.TableName%2A> Służy do zwracania tabeli z obiektu nadrzędnego <xref:System.Data.DataSet> obiektu <xref:System.Data.DataTableCollection> (zwrócony przez <xref:System.Data.DataSet.Tables%2A> właściwości).</span><span class="sxs-lookup"><span data-stu-id="a591e-1206">The <xref:System.Data.DataTable.TableName%2A> is used to return this table from the parent <xref:System.Data.DataSet> object's <xref:System.Data.DataTableCollection> (returned by the <xref:System.Data.DataSet.Tables%2A> property).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-1207">W poniższym przykładzie <xref:System.Data.DataTable.TableName%2A> dla każdej tabeli w kolekcji <xref:System.Data.DataTable> obiektów.</span><span class="sxs-lookup"><span data-stu-id="a591e-1207">The following example prints the <xref:System.Data.DataTable.TableName%2A> for each table in a collection of <xref:System.Data.DataTable> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.TableName Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.TableName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.TableName Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.TableName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a591e-1208">
            <see langword="null" /> lub jest pustym ciągiem ("") jest przekazywany w i tej tabeli należy do kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1208">
              <see langword="null" /> or empty string ("") is passed in and this table belongs to a collection.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DuplicateNameException">
          <span data-ttu-id="a591e-1209">Tabela należy do kolekcji, która już istnieje tabela o takiej samej nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1209">The table belongs to a collection that already has a table with the same name.</span>
          </span>
          <span data-ttu-id="a591e-1210">(Porównanie jest rozróżniana wielkość liter).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1210">(Comparison is case-sensitive).</span>
          </span>
        </exception>
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="P:System.Data.DataSet.Tables" />
      </Docs>
    </Member>
    <Member MemberName="TableNewRow">
      <MemberSignature Language="C#" Value="public event System.Data.DataTableNewRowEventHandler TableNewRow;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataTableNewRowEventHandler TableNewRow" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.TableNewRow" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TableNewRow As DataTableNewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataTableNewRowEventHandler ^ TableNewRow;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTableNewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-1211">Występuje, gdy nowy <see cref="T:System.Data.DataRow" /> dodaje się.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1211">Occurs when a new <see cref="T:System.Data.DataRow" /> is inserted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1212">Uruchamiany po nowy <xref:System.Data.DataRow> został utworzony przy użyciu <xref:System.Data.DataTable.NewRow%2A>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1212">Fires after a new <xref:System.Data.DataRow> has been created using <xref:System.Data.DataTable.NewRow%2A>.</span></span> <span data-ttu-id="a591e-1213">To zdarzenie jest wywoływane przed wywołanej `NewRow` zwraca metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1213">This event is fired before the invoked `NewRow` method returns.</span></span> <span data-ttu-id="a591e-1214">Nowe <xref:System.Data.DataRow> odłączono wystąpienia; nie został dodany do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="a591e-1214">The new <xref:System.Data.DataRow> instance is detached; it has not been added to the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a591e-1215">Pobiera <see cref="P:System.Data.DataTable.TableName" /> i <see cref="P:System.Data.DataTable.DisplayExpression" />, jeśli są określone jako połączony ciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1215">Gets the <see cref="P:System.Data.DataTable.TableName" /> and <see cref="P:System.Data.DataTable.DisplayExpression" />, if there is one as a concatenated string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a591e-1216">Ciąg zawierający <see cref="P:System.Data.DataTable.TableName" /> i <see cref="P:System.Data.DataTable.DisplayExpression" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1216">A string consisting of the <see cref="P:System.Data.DataTable.TableName" /> and the <see cref="P:System.Data.DataTable.DisplayExpression" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1217">Pobiera <xref:System.Data.DataTable.TableName%2A> i <xref:System.Data.DataTable.DisplayExpression%2A> dla <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1217">Gets the <xref:System.Data.DataTable.TableName%2A> and <xref:System.Data.DataTable.DisplayExpression%2A> for the <xref:System.Data.DataTable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-1218">Poniższy przykład zwraca <xref:System.Data.DataTable.TableName%2A> i <xref:System.Data.DataTable.DisplayExpression%2A> przy użyciu <xref:System.Data.DataTable.ToString%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1218">The following example returns the <xref:System.Data.DataTable.TableName%2A> and <xref:System.Data.DataTable.DisplayExpression%2A> using the <xref:System.Data.DataTable.ToString%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.ToString Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ToString Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteXml">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-1219">Zapisuje bieżącą zawartość <see cref="T:System.Data.DataTable" /> jako XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1219">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1220"><xref:System.Data.DataTable.WriteXml%2A> Metoda zapewnia sposób można zapisać tylko dane lub zarówno danych i schemat z <xref:System.Data.DataTable> do dokumentu XML, podczas gdy <xref:System.Data.DataTable.WriteXmlSchema%2A> metoda zapisuje tylko schemat.</span><span class="sxs-lookup"><span data-stu-id="a591e-1220">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="a591e-1221">Aby napisać zarówno danych, jak i schematu, użyj jednego z przeciążeń, które obejmują <xref:System.Data.XmlWriteMode> parametru i ustaw dla niego wartość `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="a591e-1221">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="a591e-1222">Należy pamiętać, że to samo dotyczy dla <xref:System.Data.DataTable.ReadXml%2A> i <xref:System.Data.DataTable.ReadXmlSchema%2A> metod, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="a591e-1222">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="a591e-1223">Mają być odczytywane dane XML lub schemat i dane do `DataTable`, użyj `ReadXml` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1223">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="a591e-1224">Aby odczytać tylko schemat, należy użyć `ReadXmlSchema` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1224">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a591e-1225"><xref:System.InvalidOperationException> Zostanie wygenerowany, jeśli typ kolumny w `DataRow` trwa od zapisu lub odczytu implementuje <xref:System.Dynamic.IDynamicMetaObjectProvider> i nie implementuje <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1225">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-1226">Następującej aplikacji konsoli tworzy dwa <xref:System.Data.DataTable> wystąpienia, dodaje do <xref:System.Data.DataSet>, tworzy <xref:System.Data.DataRelation> dotyczące dwóch tabel, a następnie używa <xref:System.Data.DataTable.WriteXml%2A> metody do zapisania danych zawartych w tabeli nadrzędnej w celu <xref:System.IO.TextWriter>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1226">The following console application creates two <xref:System.Data.DataTable> instances, adds each to a <xref:System.Data.DataSet>, creates a <xref:System.Data.DataRelation> relating the two tables, and then uses the <xref:System.Data.DataTable.WriteXml%2A> method to write the data contained within the parent table to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="a591e-1227">W przykładzie pokazano zachowanie podczas ustawiania `writeHierarchy` parametru do każdego z jego wartości.</span><span class="sxs-lookup"><span data-stu-id="a591e-1227">The example demonstrates the behavior when setting the `writeHierarchy` parameter to each of its values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a591e-1228">W tym przykładzie pokazano, jak używać jednej z zastąpionej wersji WriteXml.</span><span class="sxs-lookup"><span data-stu-id="a591e-1228">This example shows how to use one of the overloaded versions of WriteXml.</span></span> <span data-ttu-id="a591e-1229">Inne przykłady, które mogą być dostępne znajduje się w tematach poszczególnych przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="a591e-1229">For other examples that might be available, see the individual overload topics.</span></span>  
  
 [!code-csharp[DataWorks DataTable.WriteXmlOverload#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlOverload/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.WriteXmlOverload#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlOverload/VB/source.vb#1)]  
  
 <span data-ttu-id="a591e-1230">W przykładzie przedstawiono następujące wyniki w oknie konsoli:</span><span class="sxs-lookup"><span data-stu-id="a591e-1230">The example displays the following output in the console window:</span></span>  
  
```  
==============================  
Customer table, without hierarchy  
==============================  
<NewDataSet>  
  <xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema  
" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
    <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
      <xs:complexType>  
        <xs:choice minOccurs="0" maxOccurs="unbounded">  
          <xs:element name="Table1">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="ID" type="xs:int" />  
                <xs:element name="Name" type="xs:string" minOccurs="0" />  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
        </xs:choice>  
      </xs:complexType>  
      <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table1" />  
        <xs:field xpath="ID" />  
      </xs:unique>  
    </xs:element>  
  </xs:schema>  
  <Table1>  
    <ID>1</ID>  
    <Name>Mary</Name>  
  </Table1>  
  <Table1>  
    <ID>2</ID>  
    <Name>Andy</Name>  
  </Table1>  
  <Table1>  
    <ID>3</ID>  
    <Name>Peter</Name>  
  </Table1>  
  <Table1>  
    <ID>4</ID>  
    <Name>Russ</Name>  
  </Table1>  
</NewDataSet>  
==============================  
Customer table, with hierarchy  
==============================  
<NewDataSet>  
  <xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema  
" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
    <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
      <xs:complexType>  
        <xs:choice minOccurs="0" maxOccurs="unbounded">  
          <xs:element name="Table1">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="ID" type="xs:int" />  
                <xs:element name="Name" type="xs:string" minOccurs="0" />  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
          <xs:element name="Table2">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="OrderID" type="xs:int" />  
                <xs:element name="CustomerID" type="xs:int" minOccurs="0" />  
                <xs:element name="OrderDate" type="xs:dateTime" minOccurs="0" />  
  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
        </xs:choice>  
      </xs:complexType>  
      <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table1" />  
        <xs:field xpath="ID" />  
      </xs:unique>  
      <xs:unique name="Table2_Constraint1" msdata:ConstraintName="Constraint1" m  
sdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table2" />  
        <xs:field xpath="OrderID" />  
      </xs:unique>  
      <xs:keyref name="CustomerOrder" refer="Constraint1">  
        <xs:selector xpath=".//Table2" />  
        <xs:field xpath="CustomerID" />  
      </xs:keyref>  
    </xs:element>  
  </xs:schema>  
  <Table1>  
    <ID>1</ID>  
    <Name>Mary</Name>  
  </Table1>  
  <Table1>  
    <ID>2</ID>  
    <Name>Andy</Name>  
  </Table1>  
  <Table1>  
    <ID>3</ID>  
    <Name>Peter</Name>  
  </Table1>  
  <Table1>  
    <ID>4</ID>  
    <Name>Russ</Name>  
  </Table1>  
  <Table2>  
    <OrderID>1</OrderID>  
    <CustomerID>1</CustomerID>  
    <OrderDate>2003-12-02T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>2</OrderID>  
    <CustomerID>1</CustomerID>  
    <OrderDate>2004-01-03T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>3</OrderID>  
    <CustomerID>2</CustomerID>  
    <OrderDate>2004-11-13T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>4</OrderID>  
    <CustomerID>3</CustomerID>  
    <OrderDate>2004-05-16T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>5</OrderID>  
    <CustomerID>3</CustomerID>  
    <OrderDate>2004-05-22T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>6</OrderID>  
    <CustomerID>4</CustomerID>  
    <OrderDate>2004-06-15T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
</NewDataSet>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="a591e-1231">Strumień, z którym będą zapisywane dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1231">The stream to which the data will be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-1232">Zapisuje bieżącą zawartość <see cref="T:System.Data.DataTable" /> jako XML przy użyciu określonego <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1232">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1233"><xref:System.Data.DataTable.WriteXml%2A> Metoda zapewnia sposób można zapisać tylko dane lub zarówno danych i schemat z <xref:System.Data.DataTable> do dokumentu XML, podczas gdy <xref:System.Data.DataTable.WriteXmlSchema%2A> metoda zapisuje tylko schemat.</span><span class="sxs-lookup"><span data-stu-id="a591e-1233">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="a591e-1234">Aby napisać zarówno danych, jak i schematu, użyj jednego z przeciążeń, które obejmuje <xref:System.Data.XmlWriteMode> parametru i ustaw dla niego wartość `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="a591e-1234">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="a591e-1235">Należy pamiętać, że to samo dotyczy dla <xref:System.Data.DataTable.ReadXml%2A> i <xref:System.Data.DataTable.ReadXmlSchema%2A> metod, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="a591e-1235">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="a591e-1236">Mają być odczytywane dane XML lub schemat i dane do `DataTable`, użyj `ReadXml` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1236">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="a591e-1237">Aby odczytać tylko schemat, należy użyć `ReadXmlSchema` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1237">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a591e-1238"><xref:System.InvalidOperationException> Zostanie wygenerowany, jeśli typ kolumny w `DataRow` trwa od zapisu lub odczytu implementuje <xref:System.Dynamic.IDynamicMetaObjectProvider> i nie implementuje <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1238">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::TextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a591e-1239">
            <see cref="T:System.IO.TextWriter" /> z którym można zapisać zawartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1239">The <see cref="T:System.IO.TextWriter" /> with which to write the content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-1240">Zapisuje bieżącą zawartość <see cref="T:System.Data.DataTable" /> jako XML przy użyciu określonego <see cref="T:System.IO.TextWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1240">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1241"><xref:System.Data.DataTable.WriteXml%2A> Metoda zapewnia sposób można zapisać tylko dane lub zarówno danych i schemat z <xref:System.Data.DataTable> do dokumentu XML, podczas gdy <xref:System.Data.DataTable.WriteXmlSchema%2A> metoda zapisuje tylko schemat.</span><span class="sxs-lookup"><span data-stu-id="a591e-1241">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="a591e-1242">Aby napisać zarówno danych, jak i schematu, użyj jednego z przeciążeń, które obejmuje <xref:System.Data.XmlWriteMode> parametru i ustaw dla niego wartość `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="a591e-1242">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="a591e-1243">Należy pamiętać, że to samo dotyczy dla <xref:System.Data.DataTable.ReadXml%2A> i <xref:System.Data.DataTable.ReadXmlSchema%2A> metod, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="a591e-1243">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="a591e-1244">Mają być odczytywane dane XML lub schemat i dane do `DataTable`, użyj `ReadXml` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1244">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="a591e-1245">Aby odczytać tylko schemat, należy użyć `ReadXmlSchema` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1245">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a591e-1246"><xref:System.InvalidOperationException> Zostanie wygenerowany, jeśli typ kolumny w `DataRow` trwa od zapisu lub odczytu implementuje <xref:System.Dynamic.IDynamicMetaObjectProvider> i nie implementuje <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1246">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="a591e-1247">Plik, do którego można zapisać danych XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1247">The file to which to write the XML data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-1248">Zapisuje bieżącą zawartość <see cref="T:System.Data.DataTable" /> jako XML przy użyciu określonego pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1248">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1249"><xref:System.Data.DataTable.WriteXml%2A> Metoda zapewnia sposób można zapisać tylko dane lub zarówno danych i schemat z <xref:System.Data.DataTable> do dokumentu XML, podczas gdy <xref:System.Data.DataTable.WriteXmlSchema%2A> metoda zapisuje tylko schemat.</span><span class="sxs-lookup"><span data-stu-id="a591e-1249">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="a591e-1250">Aby napisać zarówno danych, jak i schematu, użyj jednego z przeciążeń, które obejmuje <xref:System.Data.XmlWriteMode> parametru i ustaw dla niego wartość `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="a591e-1250">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="a591e-1251">Należy pamiętać, że to samo dotyczy dla <xref:System.Data.DataTable.ReadXml%2A> i <xref:System.Data.DataTable.ReadXmlSchema%2A> metod, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="a591e-1251">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="a591e-1252">Mają być odczytywane dane XML lub schemat i dane do `DataTable`, użyj `ReadXml` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1252">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="a591e-1253">Aby odczytać tylko schemat, należy użyć `ReadXmlSchema` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1253">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a591e-1254"><xref:System.InvalidOperationException> Zostanie wygenerowany, jeśli typ kolumny w `DataRow` trwa od zapisu lub odczytu implementuje <xref:System.Dynamic.IDynamicMetaObjectProvider> i nie implementuje <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1254">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a591e-1255">
            <see cref="T:System.Xml.XmlWriter" /> Umożliwiające zapisanie zawartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1255">The <see cref="T:System.Xml.XmlWriter" /> with which to write the contents.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-1256">Zapisuje bieżącą zawartość <see cref="T:System.Data.DataTable" /> jako XML przy użyciu określonego <see cref="T:System.Xml.XmlWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1256">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1257"><xref:System.Data.DataTable.WriteXml%2A> Metoda zapewnia sposób można zapisać tylko dane lub zarówno danych i schemat z <xref:System.Data.DataTable> do dokumentu XML, podczas gdy <xref:System.Data.DataTable.WriteXmlSchema%2A> metoda zapisuje tylko schemat.</span><span class="sxs-lookup"><span data-stu-id="a591e-1257">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="a591e-1258">Aby napisać zarówno danych, jak i schematu, użyj jednego z przeciążeń, które obejmują <xref:System.Data.XmlWriteMode> parametru i ustaw dla niego wartość `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="a591e-1258">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="a591e-1259">Należy pamiętać, że to samo dotyczy dla <xref:System.Data.DataTable.ReadXml%2A> i <xref:System.Data.DataTable.ReadXmlSchema%2A> metod, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="a591e-1259">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="a591e-1260">Mają być odczytywane dane XML lub schemat i dane do `DataTable`, użyj `ReadXml` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1260">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="a591e-1261">Aby odczytać tylko schemat, należy użyć `ReadXmlSchema` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1261">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a591e-1262"><xref:System.InvalidOperationException> Zostanie wygenerowany, jeśli typ kolumny w `DataRow` trwa od zapisu lub odczytu implementuje <xref:System.Dynamic.IDynamicMetaObjectProvider> i nie implementuje <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1262">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.Stream stream, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.Stream stream, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::Stream ^ stream, bool writeHierarchy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="a591e-1263">Strumień, z którym będą zapisywane dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1263">The stream to which the data will be written.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="a591e-1264">Jeśli <see langword="true" />, zapisywanie zawartości w bieżącej tabeli i wszystkich jego elementów podrzędnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1264">If <see langword="true" />, write the contents of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="a591e-1265">Jeśli <see langword="false" /> (wartość domyślna), zapis danych dla bieżącej tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1265">If <see langword="false" /> (the default value), write the data for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-1266">Zapisuje bieżącą zawartość <see cref="T:System.Data.DataTable" /> jako XML przy użyciu określonego <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1266">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.IO.Stream" />.</span>
          </span>
          <span data-ttu-id="a591e-1267">Aby zapisać dane dla tabeli i wszystkich jego elementów podrzędnych, ustawić <paramref name="writeHierarchy" /> parametr <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1267">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1268">Użyj <xref:System.Data.DataTable.WriteXmlSchema%2A> metodę, aby zapisać schematu <xref:System.Data.DataTable> do dokumentu XML.</span><span class="sxs-lookup"><span data-stu-id="a591e-1268">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="a591e-1269">Schemat zawiera definicji tabeli, relacji i ograniczenia.</span><span class="sxs-lookup"><span data-stu-id="a591e-1269">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="a591e-1270">Schemat XML jest zapisywany przy użyciu standardu XSD.</span><span class="sxs-lookup"><span data-stu-id="a591e-1270">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="a591e-1271">Aby zapisać dane dokumentu XML, użyj <xref:System.Data.DataTable.WriteXml%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1271">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="a591e-1272">Zwykle `WriteXml` metody zapisuje dane tylko dla bieżącej tabeli.</span><span class="sxs-lookup"><span data-stu-id="a591e-1272">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="a591e-1273">Można zapisać danych w bieżącej tabeli i wszystkich jego obiektu podrzędnego powiązane tabele, wywołaj metodę z `writeHierarchy` ustawiono parametr `true`.</span><span class="sxs-lookup"><span data-stu-id="a591e-1273">To write the data for the current table and all of its descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a591e-1274"><xref:System.InvalidOperationException> Zostanie wygenerowany, jeśli typ kolumny w `DataRow` trwa od zapisu lub odczytu implementuje <xref:System.Dynamic.IDynamicMetaObjectProvider> i nie implementuje <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1274">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.Stream stream, System.Data.XmlWriteMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.Stream stream, valuetype System.Data.XmlWriteMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::Stream ^ stream, System::Data::XmlWriteMode mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="a591e-1275">Strumień, z którym będą zapisywane dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1275">The stream to which the data will be written.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="a591e-1276">Jeden z <see cref="T:System.Data.XmlWriteMode" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1276">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-1277">Zapisuje bieżące dane i opcjonalnie schematu dla <see cref="T:System.Data.DataTable" /> do określonego pliku przy użyciu określonego <see cref="T:System.Data.XmlWriteMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1277">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> to the specified file using the specified <see cref="T:System.Data.XmlWriteMode" />.</span>
          </span>
          <span data-ttu-id="a591e-1278">Aby napisać schemat, należy ustawić wartość <paramref name="mode" /> parametr <see langword="WriteSchema" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1278">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1279"><xref:System.Data.DataTable.WriteXml%2A> Metoda zapewnia sposób można zapisać tylko dane lub zarówno danych i schemat z <xref:System.Data.DataTable> do dokumentu XML, podczas gdy <xref:System.Data.DataTable.WriteXmlSchema%2A> metoda zapisuje tylko schemat.</span><span class="sxs-lookup"><span data-stu-id="a591e-1279">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="a591e-1280">Aby napisać zarówno danych, jak i schematu, użyj jednego z przeciążeń, które obejmuje <xref:System.Data.XmlWriteMode> parametru i ustaw dla niego wartość `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="a591e-1280">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="a591e-1281">Należy pamiętać, że to samo dotyczy dla <xref:System.Data.DataTable.ReadXml%2A> i <xref:System.Data.DataTable.ReadXmlSchema%2A> metod, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="a591e-1281">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="a591e-1282">Mają być odczytywane dane XML lub schemat i dane do `DataTable`, użyj `ReadXml` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1282">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="a591e-1283">Aby odczytać tylko schemat, należy użyć `ReadXmlSchema` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1283">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a591e-1284"><xref:System.InvalidOperationException> Zostanie wygenerowany, jeśli typ kolumny w `DataRow` trwa od zapisu lub odczytu implementuje <xref:System.Dynamic.IDynamicMetaObjectProvider> i nie implementuje <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1284">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.TextWriter writer, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.TextWriter writer, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As TextWriter, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::TextWriter ^ writer, bool writeHierarchy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a591e-1285">
            <see cref="T:System.IO.TextWriter" /> z którym można zapisać zawartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1285">The <see cref="T:System.IO.TextWriter" /> with which to write the content.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="a591e-1286">Jeśli <see langword="true" />, zapisywanie zawartości w bieżącej tabeli i wszystkich jego elementów podrzędnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1286">If <see langword="true" />, write the contents of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="a591e-1287">Jeśli <see langword="false" /> (wartość domyślna), zapis danych dla bieżącej tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1287">If <see langword="false" /> (the default value), write the data for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-1288">Zapisuje bieżącą zawartość <see cref="T:System.Data.DataTable" /> jako XML przy użyciu określonego <see cref="T:System.IO.TextWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1288">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.IO.TextWriter" />.</span>
          </span>
          <span data-ttu-id="a591e-1289">Aby zapisać dane dla tabeli i wszystkich jego elementów podrzędnych, ustawić <paramref name="writeHierarchy" /> parametr <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1289">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1290"><xref:System.Data.DataTable.WriteXml%2A> Metoda zapewnia sposób można zapisać tylko dane lub zarówno danych i schemat z <xref:System.Data.DataTable> do dokumentu XML, podczas gdy <xref:System.Data.DataTable.WriteXmlSchema%2A> metoda zapisuje tylko schemat.</span><span class="sxs-lookup"><span data-stu-id="a591e-1290">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="a591e-1291">Aby napisać zarówno danych, jak i schematu, użyj jednego z przeciążeń, które obejmuje <xref:System.Data.XmlWriteMode> parametru i ustaw dla niego wartość `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="a591e-1291">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="a591e-1292">Zwykle `WriteXml` metody zapisuje dane tylko dla bieżącej tabeli.</span><span class="sxs-lookup"><span data-stu-id="a591e-1292">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="a591e-1293">Można zapisać danych do bieżącej tabeli i wszystkich jego elementów podrzędnych, powiązane tabele, wywołaj metodę z `writeHierarchy` ustawiono parametr `true`.</span><span class="sxs-lookup"><span data-stu-id="a591e-1293">To write the data for the current table and all its descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a591e-1294"><xref:System.InvalidOperationException> Zostanie wygenerowany, jeśli typ kolumny w `DataRow` trwa od zapisu lub odczytu implementuje <xref:System.Dynamic.IDynamicMetaObjectProvider> i nie implementuje <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1294">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-1295">Następującej aplikacji konsoli tworzy dwa <xref:System.Data.DataTable> wystąpienia, dodaje do <xref:System.Data.DataSet>, tworzy <xref:System.Data.DataRelation> dotyczące dwóch tabel, a następnie używa <xref:System.Data.DataTable.WriteXml%2A> metody do zapisania danych zawartych w tabeli nadrzędnej w celu <xref:System.IO.TextWriter>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1295">The following console application creates two <xref:System.Data.DataTable> instances, adds each to a <xref:System.Data.DataSet>, creates a <xref:System.Data.DataRelation> relating the two tables, and then uses the <xref:System.Data.DataTable.WriteXml%2A> method to write the data contained within the parent table to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="a591e-1296">W przykładzie pokazano zachowanie podczas ustawiania `writeHierarchy` parametr `true`.</span><span class="sxs-lookup"><span data-stu-id="a591e-1296">The example demonstrates the behavior when setting the `writeHierarchy` parameter to `true`.</span></span>  
  
 [!code-csharp[DataWorks DataTable.WriteXml#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXml/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.WriteXml#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXml/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.TextWriter writer, System.Data.XmlWriteMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.TextWriter writer, valuetype System.Data.XmlWriteMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As TextWriter, mode As XmlWriteMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::TextWriter ^ writer, System::Data::XmlWriteMode mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a591e-1297">
            <see cref="T:System.IO.TextWriter" /> Używany do zapisywania dokumentu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1297">The <see cref="T:System.IO.TextWriter" /> used to write the document.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="a591e-1298">Jeden z <see cref="T:System.Data.XmlWriteMode" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1298">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-1299">Zapisuje bieżące dane i opcjonalnie schematu dla <see cref="T:System.Data.DataTable" /> przy użyciu określonego <see cref="T:System.IO.TextWriter" /> i <see cref="T:System.Data.XmlWriteMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1299">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.TextWriter" /> and <see cref="T:System.Data.XmlWriteMode" />.</span>
          </span>
          <span data-ttu-id="a591e-1300">Aby napisać schemat, należy ustawić wartość <paramref name="mode" /> parametr <see langword="WriteSchema" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1300">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1301"><xref:System.Data.DataTable.WriteXml%2A> Metoda zapewnia sposób można zapisać tylko dane lub zarówno danych i schemat z <xref:System.Data.DataTable> do dokumentu XML, podczas gdy <xref:System.Data.DataTable.WriteXmlSchema%2A> metoda zapisuje tylko schemat.</span><span class="sxs-lookup"><span data-stu-id="a591e-1301">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="a591e-1302">Aby napisać zarówno danych, jak i schematu, użyj jednego z przeciążeń, które obejmuje <xref:System.Data.XmlWriteMode> parametru i ustaw dla niego wartość `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="a591e-1302">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="a591e-1303">Należy pamiętać, że to samo dotyczy dla <xref:System.Data.DataTable.ReadXml%2A> i <xref:System.Data.DataTable.ReadXmlSchema%2A> metod, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="a591e-1303">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="a591e-1304">Mają być odczytywane dane XML lub schemat i dane do `DataTable`, użyj `ReadXml` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1304">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="a591e-1305">Aby odczytać tylko schemat, należy użyć `ReadXmlSchema` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1305">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a591e-1306"><xref:System.InvalidOperationException> Zostanie wygenerowany, jeśli typ kolumny w `DataRow` trwa od zapisu lub odczytu implementuje <xref:System.Dynamic.IDynamicMetaObjectProvider> i nie implementuje <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1306">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (string fileName, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(string fileName, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (fileName As String, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::String ^ fileName, bool writeHierarchy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="a591e-1307">Plik, do którego można zapisać danych XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1307">The file to which to write the XML data.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="a591e-1308">Jeśli <see langword="true" />, zapisywanie zawartości w bieżącej tabeli i wszystkich jego elementów podrzędnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1308">If <see langword="true" />, write the contents of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="a591e-1309">Jeśli <see langword="false" /> (wartość domyślna), zapis danych dla bieżącej tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1309">If <see langword="false" /> (the default value), write the data for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-1310">Zapisuje bieżącą zawartość <see cref="T:System.Data.DataTable" /> jako XML przy użyciu określonego pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1310">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified file.</span>
          </span>
          <span data-ttu-id="a591e-1311">Aby zapisać dane dla tabeli i wszystkich jego elementów podrzędnych, ustawić <paramref name="writeHierarchy" /> parametr <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1311">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1312"><xref:System.Data.DataTable.WriteXml%2A> Metoda zapewnia sposób można zapisać tylko dane lub zarówno danych i schemat z <xref:System.Data.DataTable> do dokumentu XML, podczas gdy <xref:System.Data.DataTable.WriteXmlSchema%2A> metoda zapisuje tylko schemat.</span><span class="sxs-lookup"><span data-stu-id="a591e-1312">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="a591e-1313">Aby napisać zarówno danych, jak i schematu, użyj jednego z przeciążeń, które obejmuje <xref:System.Data.XmlWriteMode> parametru i ustaw dla niego wartość `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="a591e-1313">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="a591e-1314">Należy pamiętać, że to samo dotyczy dla <xref:System.Data.DataTable.ReadXml%2A> i <xref:System.Data.DataTable.ReadXmlSchema%2A> metod, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="a591e-1314">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="a591e-1315">Mają być odczytywane dane XML lub schemat i dane do `DataTable`, użyj `ReadXml` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1315">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="a591e-1316">Aby odczytać tylko schemat, należy użyć `ReadXmlSchema` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1316">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="a591e-1317">Zwykle `WriteXml` metody zapisuje dane tylko dla bieżącej tabeli.</span><span class="sxs-lookup"><span data-stu-id="a591e-1317">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="a591e-1318">Można zapisać danych w bieżącej tabeli i wszystkich jego obiektu podrzędnego powiązane tabele, wywołaj metodę z `writeHierarchy` ustawiono parametr `true`.</span><span class="sxs-lookup"><span data-stu-id="a591e-1318">To write the data for the current table and all of its descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a591e-1319"><xref:System.InvalidOperationException> Zostanie wygenerowany, jeśli typ kolumny w `DataRow` trwa od zapisu lub odczytu implementuje <xref:System.Dynamic.IDynamicMetaObjectProvider> i nie implementuje <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1319">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (string fileName, System.Data.XmlWriteMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(string fileName, valuetype System.Data.XmlWriteMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (fileName As String, mode As XmlWriteMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::String ^ fileName, System::Data::XmlWriteMode mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="a591e-1320">Nazwa pliku, do którego zostaną zapisane dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1320">The name of the file to which the data will be written.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="a591e-1321">Jeden z <see cref="T:System.Data.XmlWriteMode" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1321">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-1322">Zapisuje bieżące dane i opcjonalnie schematu dla <see cref="T:System.Data.DataTable" /> przy użyciu określonego pliku i <see cref="T:System.Data.XmlWriteMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1322">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified file and <see cref="T:System.Data.XmlWriteMode" />.</span>
          </span>
          <span data-ttu-id="a591e-1323">Aby napisać schemat, należy ustawić wartość <paramref name="mode" /> parametr <see langword="WriteSchema" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1323">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1324"><xref:System.Data.DataTable.WriteXml%2A> Metoda zapewnia sposób można zapisać tylko dane lub zarówno danych i schemat z <xref:System.Data.DataTable> do dokumentu XML, podczas gdy <xref:System.Data.DataTable.WriteXmlSchema%2A> metoda zapisuje tylko schemat.</span><span class="sxs-lookup"><span data-stu-id="a591e-1324">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="a591e-1325">Aby napisać zarówno danych, jak i schematu, użyj jednego z przeciążeń, które obejmują <xref:System.Data.XmlWriteMode> parametru i ustaw dla niego wartość `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="a591e-1325">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="a591e-1326">Należy pamiętać, że to samo dotyczy dla <xref:System.Data.DataTable.ReadXml%2A> i <xref:System.Data.DataTable.ReadXmlSchema%2A> metod, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="a591e-1326">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="a591e-1327">Mają być odczytywane dane XML lub schemat i dane do `DataTable`, użyj `ReadXml` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1327">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="a591e-1328">Aby odczytać tylko schemat, należy użyć `ReadXmlSchema` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1328">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a591e-1329"><xref:System.InvalidOperationException> Zostanie wygenerowany, jeśli typ kolumny w `DataRow` trwa od zapisu lub odczytu implementuje <xref:System.Dynamic.IDynamicMetaObjectProvider> i nie implementuje <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1329">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.Xml.XmlWriter writer, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer, bool writeHierarchy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a591e-1330">
            <see cref="T:System.Xml.XmlWriter" /> Umożliwiające zapisanie zawartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1330">The <see cref="T:System.Xml.XmlWriter" /> with which to write the contents.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="a591e-1331">Jeśli <see langword="true" />, zapisywanie zawartości w bieżącej tabeli i wszystkich jego elementów podrzędnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1331">If <see langword="true" />, write the contents of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="a591e-1332">Jeśli <see langword="false" /> (wartość domyślna), zapis danych dla bieżącej tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1332">If <see langword="false" /> (the default value), write the data for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-1333">Zapisuje bieżącą zawartość <see cref="T:System.Data.DataTable" /> jako XML przy użyciu określonego <see cref="T:System.Xml.XmlWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1333">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1334"><xref:System.Data.DataTable.WriteXml%2A> Metoda zapewnia sposób można zapisać tylko dane lub zarówno danych i schemat z <xref:System.Data.DataTable> do dokumentu XML, podczas gdy <xref:System.Data.DataTable.WriteXmlSchema%2A> metoda zapisuje tylko schemat.</span><span class="sxs-lookup"><span data-stu-id="a591e-1334">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="a591e-1335">Aby napisać zarówno danych, jak i schematu, użyj jednego z przeciążeń, które obejmują <xref:System.Data.XmlWriteMode> parametru i ustaw dla niego wartość `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="a591e-1335">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="a591e-1336">Należy pamiętać, że to samo dotyczy dla <xref:System.Data.DataTable.ReadXml%2A> i <xref:System.Data.DataTable.ReadXmlSchema%2A> metod, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="a591e-1336">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="a591e-1337">Mają być odczytywane dane XML lub schemat i dane do `DataTable`, użyj `ReadXml` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1337">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="a591e-1338">Aby odczytać tylko schemat, należy użyć `ReadXmlSchema` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1338">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="a591e-1339">Zwykle `WriteXml` metody zapisuje dane tylko dla bieżącej tabeli.</span><span class="sxs-lookup"><span data-stu-id="a591e-1339">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="a591e-1340">Można zapisać danych do bieżącej tabeli i jego całą podrzędne, powiązane tabele, wywołaj metodę z `writeHierarchy` ustawiono parametr `true`.</span><span class="sxs-lookup"><span data-stu-id="a591e-1340">To write the data for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a591e-1341"><xref:System.InvalidOperationException> Zostanie wygenerowany, jeśli typ kolumny w `DataRow` trwa od zapisu lub odczytu implementuje <xref:System.Dynamic.IDynamicMetaObjectProvider> i nie implementuje <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1341">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer, System.Data.XmlWriteMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.Xml.XmlWriter writer, valuetype System.Data.XmlWriteMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter, mode As XmlWriteMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer, System::Data::XmlWriteMode mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a591e-1342">
            <see cref="T:System.Xml.XmlWriter" /> Używany do zapisywania dokumentu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1342">The <see cref="T:System.Xml.XmlWriter" /> used to write the document.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="a591e-1343">Jeden z <see cref="T:System.Data.XmlWriteMode" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1343">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-1344">Zapisuje bieżące dane i opcjonalnie schematu dla <see cref="T:System.Data.DataTable" /> przy użyciu określonego <see cref="T:System.Xml.XmlWriter" /> i <see cref="T:System.Data.XmlWriteMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1344">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.Xml.XmlWriter" /> and <see cref="T:System.Data.XmlWriteMode" />.</span>
          </span>
          <span data-ttu-id="a591e-1345">Aby napisać schemat, należy ustawić wartość <paramref name="mode" /> parametr <see langword="WriteSchema" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1345">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1346"><xref:System.Data.DataTable.WriteXml%2A> Metoda zapewnia sposób można zapisać tylko dane lub zarówno danych i schemat z <xref:System.Data.DataTable> do dokumentu XML, podczas gdy <xref:System.Data.DataTable.WriteXmlSchema%2A> metoda zapisuje tylko schemat.</span><span class="sxs-lookup"><span data-stu-id="a591e-1346">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="a591e-1347">Aby napisać zarówno danych, jak i schematu, użyj jednego z przeciążeń, które obejmują <xref:System.Data.XmlWriteMode> parametru i ustaw dla niego wartość `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="a591e-1347">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="a591e-1348">Należy pamiętać, że to samo dotyczy dla <xref:System.Data.DataTable.ReadXml%2A> i <xref:System.Data.DataTable.ReadXmlSchema%2A> metod, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="a591e-1348">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="a591e-1349">Mają być odczytywane dane XML lub schemat i dane do `DataTable`, użyj `ReadXml` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1349">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="a591e-1350">Aby odczytać tylko schemat, należy użyć `ReadXmlSchema` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1350">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a591e-1351"><xref:System.InvalidOperationException> Zostanie wygenerowany, jeśli typ kolumny w `DataRow` trwa od zapisu lub odczytu implementuje <xref:System.Dynamic.IDynamicMetaObjectProvider> i nie implementuje <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1351">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.Stream stream, System.Data.XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.Stream stream, valuetype System.Data.XmlWriteMode mode, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::Stream ^ stream, System::Data::XmlWriteMode mode, bool writeHierarchy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="a591e-1352">Strumień, z którym będą zapisywane dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1352">The stream to which the data will be written.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="a591e-1353">Jeden z <see cref="T:System.Data.XmlWriteMode" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1353">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="a591e-1354">Jeśli <see langword="true" />, zapisywanie zawartości w bieżącej tabeli i wszystkich jego elementów podrzędnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1354">If <see langword="true" />, write the contents of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="a591e-1355">Jeśli <see langword="false" /> (wartość domyślna), zapis danych dla bieżącej tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1355">If <see langword="false" /> (the default value), write the data for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-1356">Zapisuje bieżące dane i opcjonalnie schematu dla <see cref="T:System.Data.DataTable" /> do określonego pliku przy użyciu określonego <see cref="T:System.Data.XmlWriteMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1356">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> to the specified file using the specified <see cref="T:System.Data.XmlWriteMode" />.</span>
          </span>
          <span data-ttu-id="a591e-1357">Aby napisać schemat, należy ustawić wartość <paramref name="mode" /> parametr <see langword="WriteSchema" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1357">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span>
          </span>
          <span data-ttu-id="a591e-1358">Aby zapisać dane dla tabeli i wszystkich jego elementów podrzędnych, ustawić <paramref name="writeHierarchy" /> parametr <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1358">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1359"><xref:System.Data.DataTable.WriteXml%2A> Metoda zapewnia sposób można zapisać tylko dane lub zarówno danych i schemat z `DataTable` do dokumentu XML, podczas gdy <xref:System.Data.DataTable.WriteXmlSchema%2A> metoda zapisuje tylko schemat.</span><span class="sxs-lookup"><span data-stu-id="a591e-1359">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a `DataTable` into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="a591e-1360">Aby napisać zarówno danych, jak i schematu, użyj jednego z przeciążeń, które obejmuje `XmlWriteMode` parametru i ustaw dla niego wartość `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="a591e-1360">To write both data and schema, use one of the overloads that includes the `XmlWriteMode` parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="a591e-1361">Należy pamiętać, że to samo dotyczy dla <xref:System.Data.DataTable.ReadXml%2A> i <xref:System.Data.DataTable.ReadXmlSchema%2A> metod, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="a591e-1361">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="a591e-1362">Mają być odczytywane dane XML lub schemat i dane do `DataTable`, użyj `ReadXml` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1362">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="a591e-1363">Aby odczytać tylko schemat, należy użyć `ReadXmlSchema` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1363">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="a591e-1364">Zwykle `WriteXml` metoda zapisuje dane tylko dla bieżącej tabeli.</span><span class="sxs-lookup"><span data-stu-id="a591e-1364">Normally, the `WriteXml` method saves data only for the current table.</span></span> <span data-ttu-id="a591e-1365">`WriteXml` Metoda zapewnia sposób można zapisać tylko dane lub zarówno danych i schemat z `DataTable` do dokumentu XML, podczas gdy `WriteXmlSchema` metoda zapisuje tylko schemat.</span><span class="sxs-lookup"><span data-stu-id="a591e-1365">The `WriteXml` method provides a way to write either data only, or both data and schema from a `DataTable` into an XML document, whereas the `WriteXmlSchema` method writes only the schema.</span></span> <span data-ttu-id="a591e-1366">Aby napisać zarówno danych, jak i schematu, użyj jednego z przeciążeń, które obejmuje `XmlWriteMode` parametru i ustaw dla niego wartość `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="a591e-1366">To write both data and schema, use one of the overloads that includes the `XmlWriteMode` parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="a591e-1367">Należy pamiętać, że to samo dotyczy dla <xref:System.Data.DataTable.ReadXml%2A> i <xref:System.Data.DataTable.ReadXmlSchema%2A> metod, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="a591e-1367">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="a591e-1368">Mają być odczytywane dane XML lub schemat i dane do `DataTable`, użyj `ReadXml` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1368">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="a591e-1369">Aby odczytać tylko schemat, należy użyć `ReadXmlSchema` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1369">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="a591e-1370">Zwykle `WriteXml` metody zapisuje dane tylko dla bieżącej tabeli.</span><span class="sxs-lookup"><span data-stu-id="a591e-1370">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="a591e-1371">Można zapisać danych w bieżącej tabeli i wszystkich jego obiektu podrzędnego powiązane tabele, wywołaj metodę z `writeHierarchy` ustawiono parametr `true`.</span><span class="sxs-lookup"><span data-stu-id="a591e-1371">To write the data for the current table and all of its descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a591e-1372"><xref:System.InvalidOperationException> Zostanie wygenerowany, jeśli typ kolumny w `DataRow` trwa od zapisu lub odczytu implementuje <xref:System.Dynamic.IDynamicMetaObjectProvider> i nie implementuje <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1372">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.TextWriter writer, System.Data.XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.TextWriter writer, valuetype System.Data.XmlWriteMode mode, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As TextWriter, mode As XmlWriteMode, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::TextWriter ^ writer, System::Data::XmlWriteMode mode, bool writeHierarchy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a591e-1373">
            <see cref="T:System.IO.TextWriter" /> Używany do zapisywania dokumentu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1373">The <see cref="T:System.IO.TextWriter" /> used to write the document.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="a591e-1374">Jeden z <see cref="T:System.Data.XmlWriteMode" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1374">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="a591e-1375">Jeśli <see langword="true" />, zapisywanie zawartości w bieżącej tabeli i wszystkich jego elementów podrzędnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1375">If <see langword="true" />, write the contents of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="a591e-1376">Jeśli <see langword="false" /> (wartość domyślna), zapis danych dla bieżącej tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1376">If <see langword="false" /> (the default value), write the data for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-1377">Zapisuje bieżące dane i opcjonalnie schematu dla <see cref="T:System.Data.DataTable" /> przy użyciu określonego <see cref="T:System.IO.TextWriter" /> i <see cref="T:System.Data.XmlWriteMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1377">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.TextWriter" /> and <see cref="T:System.Data.XmlWriteMode" />.</span>
          </span>
          <span data-ttu-id="a591e-1378">Aby napisać schemat, należy ustawić wartość <paramref name="mode" /> parametr <see langword="WriteSchema" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1378">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span>
          </span>
          <span data-ttu-id="a591e-1379">Aby zapisać dane dla tabeli i wszystkich jego elementów podrzędnych, ustawić <paramref name="writeHierarchy" /> parametr <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1379">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1380"><xref:System.Data.DataTable.WriteXml%2A> Metoda zapewnia sposób można zapisać tylko dane lub zarówno danych i schemat z <xref:System.Data.DataTable> do dokumentu XML, podczas gdy <xref:System.Data.DataTable.WriteXmlSchema%2A> metoda zapisuje tylko schemat.</span><span class="sxs-lookup"><span data-stu-id="a591e-1380">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="a591e-1381">Aby napisać zarówno danych, jak i schematu, użyj jednego z przeciążeń, które obejmuje <xref:System.Data.XmlWriteMode> parametru i ustaw dla niego wartość `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="a591e-1381">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="a591e-1382">Należy pamiętać, że to samo dotyczy dla <xref:System.Data.DataTable.ReadXml%2A> i <xref:System.Data.DataTable.ReadXmlSchema%2A> metod, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="a591e-1382">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="a591e-1383">Mają być odczytywane dane XML lub schemat i dane do `DataTable`, użyj `ReadXml` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1383">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="a591e-1384">Aby odczytać tylko schemat, należy użyć `ReadXmlSchema` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1384">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="a591e-1385">Zwykle `WriteXml` metoda zapisuje dane tylko dla bieżącej tabeli.</span><span class="sxs-lookup"><span data-stu-id="a591e-1385">Normally, the `WriteXml` method saves data only for the current table.</span></span> <span data-ttu-id="a591e-1386"><xref:System.Data.DataTable.WriteXml%2A> Metoda zapewnia sposób można zapisać tylko dane lub zarówno danych i schemat z <xref:System.Data.DataTable> do dokumentu XML, podczas gdy <xref:System.Data.DataTable.WriteXmlSchema%2A> metoda zapisuje tylko schemat.</span><span class="sxs-lookup"><span data-stu-id="a591e-1386">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="a591e-1387">Aby napisać zarówno danych, jak i schematu, użyj jednego z przeciążeń, które obejmuje <xref:System.Data.XmlWriteMode> parametru i ustaw dla niego wartość `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="a591e-1387">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="a591e-1388">Należy pamiętać, że to samo dotyczy dla <xref:System.Data.DataTable.ReadXml%2A> i <xref:System.Data.DataTable.ReadXmlSchema%2A> metod, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="a591e-1388">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="a591e-1389">Mają być odczytywane dane XML lub schemat i dane do `DataTable`, użyj `ReadXml` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1389">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="a591e-1390">Aby odczytać tylko schemat, należy użyć `ReadXmlSchema` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1390">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="a591e-1391">Zwykle `WriteXml` metody zapisuje dane tylko dla bieżącej tabeli.</span><span class="sxs-lookup"><span data-stu-id="a591e-1391">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="a591e-1392">Można zapisać danych w bieżącej tabeli i wszystkich jego obiektu podrzędnego powiązane tabele, wywołaj metodę z `writeHierarchy` ustawiono parametr `true`.</span><span class="sxs-lookup"><span data-stu-id="a591e-1392">To write the data for the current table and all of its descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a591e-1393"><xref:System.InvalidOperationException> Zostanie wygenerowany, jeśli typ kolumny w `DataRow` trwa od zapisu lub odczytu implementuje <xref:System.Dynamic.IDynamicMetaObjectProvider> i nie implementuje <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1393">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-1394">Następującej aplikacji konsoli tworzy dwa <xref:System.Data.DataTable> wystąpienia, dodaje do <xref:System.Data.DataSet>, tworzy <xref:System.Data.DataRelation> dotyczące dwóch tabel, a następnie używa <xref:System.Data.DataTable.WriteXml%2A> metody do zapisania danych zawartych w tabeli nadrzędnej w celu <xref:System.IO.TextWriter>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1394">The following console application creates two <xref:System.Data.DataTable> instances, adds each to a <xref:System.Data.DataSet>, creates a <xref:System.Data.DataRelation> relating the two tables, and then uses the <xref:System.Data.DataTable.WriteXml%2A> method to write the data contained within the parent table to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="a591e-1395">W przykładzie pokazano zachowanie podczas ustawiania `writeHierarchy` parametru do każdego z jego wartości.</span><span class="sxs-lookup"><span data-stu-id="a591e-1395">The example demonstrates the behavior when setting the `writeHierarchy` parameter to each of its values.</span></span>  
  
 [!code-csharp[DataWorks DataTable.WriteXmlIO#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlIO/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.WriteXmlIO#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlIO/VB/source.vb#1)]  
  
 <span data-ttu-id="a591e-1396">W przykładzie przedstawiono następujące wyniki w oknie konsoli:</span><span class="sxs-lookup"><span data-stu-id="a591e-1396">The example displays the following output in the console window:</span></span>  
  
```  
==============================  
Customer table, without hierarchy  
==============================  
<NewDataSet>  
  <xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema  
" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
    <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
      <xs:complexType>  
        <xs:choice minOccurs="0" maxOccurs="unbounded">  
          <xs:element name="Table1">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="ID" type="xs:int" />  
                <xs:element name="Name" type="xs:string" minOccurs="0" />  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
        </xs:choice>  
      </xs:complexType>  
      <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table1" />  
        <xs:field xpath="ID" />  
      </xs:unique>  
    </xs:element>  
  </xs:schema>  
  <Table1>  
    <ID>1</ID>  
    <Name>Mary</Name>  
  </Table1>  
  <Table1>  
    <ID>2</ID>  
    <Name>Andy</Name>  
  </Table1>  
  <Table1>  
    <ID>3</ID>  
    <Name>Peter</Name>  
  </Table1>  
  <Table1>  
    <ID>4</ID>  
    <Name>Russ</Name>  
  </Table1>  
</NewDataSet>  
==============================  
Customer table, with hierarchy  
==============================  
<NewDataSet>  
  <xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema  
" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
    <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
      <xs:complexType>  
        <xs:choice minOccurs="0" maxOccurs="unbounded">  
          <xs:element name="Table1">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="ID" type="xs:int" />  
                <xs:element name="Name" type="xs:string" minOccurs="0" />  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
          <xs:element name="Table2">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="OrderID" type="xs:int" />  
                <xs:element name="CustomerID" type="xs:int" minOccurs="0" />  
                <xs:element name="OrderDate" type="xs:dateTime" minOccurs="0" />  
  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
        </xs:choice>  
      </xs:complexType>  
      <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table1" />  
        <xs:field xpath="ID" />  
      </xs:unique>  
      <xs:unique name="Table2_Constraint1" msdata:ConstraintName="Constraint1" m  
sdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table2" />  
        <xs:field xpath="OrderID" />  
      </xs:unique>  
      <xs:keyref name="CustomerOrder" refer="Constraint1">  
        <xs:selector xpath=".//Table2" />  
        <xs:field xpath="CustomerID" />  
      </xs:keyref>  
    </xs:element>  
  </xs:schema>  
  <Table1>  
    <ID>1</ID>  
    <Name>Mary</Name>  
  </Table1>  
  <Table1>  
    <ID>2</ID>  
    <Name>Andy</Name>  
  </Table1>  
  <Table1>  
    <ID>3</ID>  
    <Name>Peter</Name>  
  </Table1>  
  <Table1>  
    <ID>4</ID>  
    <Name>Russ</Name>  
  </Table1>  
  <Table2>  
    <OrderID>1</OrderID>  
    <CustomerID>1</CustomerID>  
    <OrderDate>2003-12-02T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>2</OrderID>  
    <CustomerID>1</CustomerID>  
    <OrderDate>2004-01-03T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>3</OrderID>  
    <CustomerID>2</CustomerID>  
    <OrderDate>2004-11-13T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>4</OrderID>  
    <CustomerID>3</CustomerID>  
    <OrderDate>2004-05-16T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>5</OrderID>  
    <CustomerID>3</CustomerID>  
    <OrderDate>2004-05-22T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>6</OrderID>  
    <CustomerID>4</CustomerID>  
    <OrderDate>2004-06-15T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
</NewDataSet>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (string fileName, System.Data.XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(string fileName, valuetype System.Data.XmlWriteMode mode, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (fileName As String, mode As XmlWriteMode, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::String ^ fileName, System::Data::XmlWriteMode mode, bool writeHierarchy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="a591e-1397">Nazwa pliku, do którego zostaną zapisane dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1397">The name of the file to which the data will be written.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="a591e-1398">Jeden z <see cref="T:System.Data.XmlWriteMode" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1398">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="a591e-1399">Jeśli <see langword="true" />, zapisywanie zawartości w bieżącej tabeli i wszystkich jego elementów podrzędnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1399">If <see langword="true" />, write the contents of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="a591e-1400">Jeśli <see langword="false" /> (wartość domyślna), zapis danych dla bieżącej tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1400">If <see langword="false" /> (the default value), write the data for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-1401">Zapisuje bieżące dane i opcjonalnie schematu dla <see cref="T:System.Data.DataTable" /> przy użyciu określonego pliku i <see cref="T:System.Data.XmlWriteMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1401">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified file and <see cref="T:System.Data.XmlWriteMode" />.</span>
          </span>
          <span data-ttu-id="a591e-1402">Aby napisać schemat, należy ustawić wartość <paramref name="mode" /> parametr <see langword="WriteSchema" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1402">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span>
          </span>
          <span data-ttu-id="a591e-1403">Aby zapisać dane dla tabeli i wszystkich jego elementów podrzędnych, ustawić <paramref name="writeHierarchy" /> parametr <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1403">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1404"><xref:System.Data.DataTable.WriteXml%2A> Metoda zapewnia sposób można zapisać tylko dane lub zarówno danych i schemat z <xref:System.Data.DataTable> do dokumentu XML, podczas gdy <xref:System.Data.DataTable.WriteXmlSchema%2A> metoda zapisuje tylko schemat.</span><span class="sxs-lookup"><span data-stu-id="a591e-1404">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="a591e-1405">Aby napisać zarówno danych, jak i schematu, użyj jednego z przeciążeń, które obejmują <xref:System.Data.XmlWriteMode> parametru i ustaw dla niego wartość `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="a591e-1405">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="a591e-1406">Należy pamiętać, że to samo dotyczy dla <xref:System.Data.DataTable.ReadXml%2A> i <xref:System.Data.DataTable.ReadXmlSchema%2A> metod, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="a591e-1406">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="a591e-1407">Mają być odczytywane dane XML lub schemat i dane do `DataTable`, użyj `ReadXml` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1407">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="a591e-1408">Aby odczytać tylko schemat, należy użyć `ReadXmlSchema` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1408">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="a591e-1409">Zwykle `WriteXml` metoda zapisuje dane tylko dla bieżącej tabeli.</span><span class="sxs-lookup"><span data-stu-id="a591e-1409">Normally, the `WriteXml` method saves data only for the current table.</span></span> <span data-ttu-id="a591e-1410">Jeśli chcesz zapisać dane w bieżącej tabeli i wszystkich schematu, <xref:System.Data.DataTable.WriteXml%2A> metoda zapewnia sposób można zapisać tylko dane lub zarówno danych i schemat z <xref:System.Data.DataTable> w dokumencie XML natomiast <xref:System.Data.DataTable.WriteXmlSchema%2A> metoda zapisuje tylko schemat.</span><span class="sxs-lookup"><span data-stu-id="a591e-1410">If you want to save the data for the current table and all of schema, the <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="a591e-1411">Aby napisać zarówno danych, jak i schematu, użyj jednego z przeciążeń, które obejmują <xref:System.Data.XmlWriteMode> parametru i ustaw dla niego wartość `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="a591e-1411">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="a591e-1412">Należy pamiętać, że to samo dotyczy dla <xref:System.Data.DataTable.ReadXml%2A> i <xref:System.Data.DataTable.ReadXmlSchema%2A> metod, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="a591e-1412">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="a591e-1413">Mają być odczytywane dane XML lub schemat i dane do `DataTable`, użyj `ReadXml` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1413">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="a591e-1414">Aby odczytać tylko schemat, należy użyć `ReadXmlSchema` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1414">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="a591e-1415">Zwykle `WriteXml` metody zapisuje dane tylko dla bieżącej tabeli.</span><span class="sxs-lookup"><span data-stu-id="a591e-1415">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="a591e-1416">Można zapisać danych do bieżącej tabeli i wszystkie podrzędne, powiązane tabele, wywołaj metodę z `writeHierarchy` ustawiono parametr `true`.</span><span class="sxs-lookup"><span data-stu-id="a591e-1416">To write the data for the current table and all descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a591e-1417"><xref:System.InvalidOperationException> Zostanie wygenerowany, jeśli typ kolumny w `DataRow` trwa od zapisu lub odczytu implementuje <xref:System.Dynamic.IDynamicMetaObjectProvider> i nie implementuje <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1417">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer, System.Data.XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.Xml.XmlWriter writer, valuetype System.Data.XmlWriteMode mode, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter, mode As XmlWriteMode, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer, System::Data::XmlWriteMode mode, bool writeHierarchy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a591e-1418">
            <see cref="T:System.Xml.XmlWriter" /> Używany do zapisywania dokumentu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1418">The <see cref="T:System.Xml.XmlWriter" /> used to write the document.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="a591e-1419">Jeden z <see cref="T:System.Data.XmlWriteMode" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1419">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="a591e-1420">Jeśli <see langword="true" />, zapisywanie zawartości w bieżącej tabeli i wszystkich jego elementów podrzędnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1420">If <see langword="true" />, write the contents of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="a591e-1421">Jeśli <see langword="false" /> (wartość domyślna), zapis danych dla bieżącej tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1421">If <see langword="false" /> (the default value), write the data for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-1422">Zapisuje bieżące dane i opcjonalnie schematu dla <see cref="T:System.Data.DataTable" /> przy użyciu określonego <see cref="T:System.Xml.XmlWriter" /> i <see cref="T:System.Data.XmlWriteMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1422">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.Xml.XmlWriter" /> and <see cref="T:System.Data.XmlWriteMode" />.</span>
          </span>
          <span data-ttu-id="a591e-1423">Aby napisać schemat, należy ustawić wartość <paramref name="mode" /> parametr <see langword="WriteSchema" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1423">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span>
          </span>
          <span data-ttu-id="a591e-1424">Aby zapisać dane dla tabeli i wszystkich jego elementów podrzędnych, ustawić <paramref name="writeHierarchy" /> parametr <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1424">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1425"><xref:System.Data.DataTable.WriteXml%2A> Metoda zapewnia sposób można zapisać tylko dane lub zarówno danych i schemat z <xref:System.Data.DataTable> do dokumentu XML, podczas gdy <xref:System.Data.DataTable.WriteXmlSchema%2A> metoda zapisuje tylko schemat.</span><span class="sxs-lookup"><span data-stu-id="a591e-1425">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="a591e-1426">Aby napisać zarówno danych, jak i schematu, użyj jednego z przeciążeń, które obejmują <xref:System.Data.XmlWriteMode> parametru i ustaw dla niego wartość `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="a591e-1426">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="a591e-1427">Należy pamiętać, że to samo dotyczy dla <xref:System.Data.DataTable.ReadXml%2A> i <xref:System.Data.DataTable.ReadXmlSchema%2A> metod, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="a591e-1427">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="a591e-1428">Mają być odczytywane dane XML lub schemat i dane do `DataTable`, użyj `ReadXml` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1428">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="a591e-1429">Aby odczytać tylko schemat, należy użyć `ReadXmlSchema` metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1429">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="a591e-1430">Zwykle `WriteXml` metody zapisuje dane tylko dla bieżącej tabeli.</span><span class="sxs-lookup"><span data-stu-id="a591e-1430">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="a591e-1431">Można zapisać danych do bieżącej tabeli i jego całą podrzędne, powiązane tabele, wywołaj metodę z `writeHierarchy` ustawiono parametr `true`.</span><span class="sxs-lookup"><span data-stu-id="a591e-1431">To write the data for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a591e-1432"><xref:System.InvalidOperationException> Zostanie wygenerowany, jeśli typ kolumny w `DataRow` trwa od zapisu lub odczytu implementuje <xref:System.Dynamic.IDynamicMetaObjectProvider> i nie implementuje <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1432">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteXmlSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a591e-1433">Zapisuje bieżący struktury danych <see cref="T:System.Data.DataTable" /> jako schematu XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1433">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1434">Użyj <xref:System.Data.DataTable.WriteXmlSchema%2A> metodę, aby zapisać schematu <xref:System.Data.DataTable> do dokumentu XML.</span><span class="sxs-lookup"><span data-stu-id="a591e-1434">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="a591e-1435">Schemat zawiera definicji tabeli, relacji i ograniczenia.</span><span class="sxs-lookup"><span data-stu-id="a591e-1435">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="a591e-1436">Schemat XML jest zapisywany przy użyciu standardu XSD.</span><span class="sxs-lookup"><span data-stu-id="a591e-1436">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="a591e-1437">Aby zapisać dane dokumentu XML, użyj <xref:System.Data.DataTable.WriteXml%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1437">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-1438">Następującej aplikacji konsoli tworzy dwa <xref:System.Data.DataTable> wystąpienia, dodaje do <xref:System.Data.DataSet>, tworzy <xref:System.Data.DataRelation> dotyczące dwóch tabel, a następnie używa <xref:System.Data.DataTable.WriteXmlSchema%2A> metody do zapisania danych zawartych w tabeli nadrzędnej w celu <xref:System.IO.TextWriter>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1438">The following console application creates two <xref:System.Data.DataTable> instances, adds each to a <xref:System.Data.DataSet>, creates a <xref:System.Data.DataRelation> relating the two tables, and then uses the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the data contained within the parent table to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="a591e-1439">W przykładzie pokazano zachowanie podczas ustawiania `writeHierarchy` parametru do każdego z jego wartości.</span><span class="sxs-lookup"><span data-stu-id="a591e-1439">The example demonstrates the behavior when setting the `writeHierarchy` parameter to each of its values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a591e-1440">W tym przykładzie pokazano, jak używać jednej z zastąpionej wersji `WriteXmlSchema` dla inne przykłady, które mogą być dostępne, zobacz Tematy poszczególnych przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="a591e-1440">This example shows how to use one of the overloaded versions of `WriteXmlSchema` For other examples that might be available, see the individual overload topics.</span></span>  
  
 [!code-csharp[DataWorks DataTable.WriteXmlSchemaOverload#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlSchemaOverload/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.WriteXmlSchemaOverload#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlSchemaOverload/VB/source.vb#1)]  
  
 <span data-ttu-id="a591e-1441">W przykładzie przedstawiono następujące wyniki w oknie konsoli:</span><span class="sxs-lookup"><span data-stu-id="a591e-1441">The example displays the following output in the console window:</span></span>  
  
```  
==============================  
Customer table, without hierarchy  
==============================  
<?xml version="1.0" encoding="utf-16"?>  
<xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema"  
xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Ta  
ble1">  
    <xs:complexType>  
      <xs:choice minOccurs="0" maxOccurs="unbounded">  
        <xs:element name="Table1">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="ID" type="xs:int" />  
              <xs:element name="Name" type="xs:string" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
      </xs:choice>  
    </xs:complexType>  
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table1" />  
      <xs:field xpath="ID" />  
    </xs:unique>  
  </xs:element>  
</xs:schema>  
==============================  
Customer table, with hierarchy  
==============================  
<?xml version="1.0" encoding="utf-16"?>  
<xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema"  
xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
    <xs:complexType>  
      <xs:choice minOccurs="0" maxOccurs="unbounded">  
        <xs:element name="Table1">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="ID" type="xs:int" />  
              <xs:element name="Name" type="xs:string" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
        <xs:element name="Table2">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="OrderID" type="xs:int" />  
              <xs:element name="CustomerID" type="xs:int" minOccurs="0" />  
              <xs:element name="OrderDate" type="xs:dateTime" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
      </xs:choice>  
    </xs:complexType>  
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table1" />  
      <xs:field xpath="ID" />  
    </xs:unique>  
    <xs:unique name="Table2_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table2" />  
      <xs:field xpath="OrderID" />  
    </xs:unique>  
    <xs:keyref name="CustomerOrder" refer="Constraint1">  
      <xs:selector xpath=".//Table2" />  
      <xs:field xpath="CustomerID" />  
    </xs:keyref>  
  </xs:element>  
</xs:schema>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="a591e-1442">Strumień, do której zostanie zapisany schemat XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1442">The stream to which the XML schema will be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-1443">Zapisuje bieżący struktury danych <see cref="T:System.Data.DataTable" /> jako schematu XML do określonego strumienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1443">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema to the specified stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1444">Użyj <xref:System.Data.DataTable.WriteXmlSchema%2A> metodę, aby zapisać schematu <xref:System.Data.DataTable> do dokumentu XML.</span><span class="sxs-lookup"><span data-stu-id="a591e-1444">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="a591e-1445">Schemat zawiera definicji tabeli, relacji i ograniczenia.</span><span class="sxs-lookup"><span data-stu-id="a591e-1445">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="a591e-1446">Schemat XML jest zapisywany przy użyciu standardu XSD.</span><span class="sxs-lookup"><span data-stu-id="a591e-1446">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="a591e-1447">Aby zapisać dane dokumentu XML, użyj <xref:System.Data.DataTable.WriteXml%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1447">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::IO::TextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a591e-1448">
            <see cref="T:System.IO.TextWriter" /> z jakim zostanie zapisane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1448">The <see cref="T:System.IO.TextWriter" /> with which to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-1449">Zapisuje bieżący struktury danych <see cref="T:System.Data.DataTable" /> jako schematu XML przy użyciu określonego <see cref="T:System.IO.TextWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1449">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema using the specified <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1450">Użyj <xref:System.Data.DataTable.WriteXmlSchema%2A> metodę, aby zapisać schematu <xref:System.Data.DataTable> do dokumentu XML.</span><span class="sxs-lookup"><span data-stu-id="a591e-1450">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="a591e-1451">Schemat zawiera definicji tabeli, relacji i ograniczenia.</span><span class="sxs-lookup"><span data-stu-id="a591e-1451">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="a591e-1452">Schemat XML jest zapisywany przy użyciu standardu XSD.</span><span class="sxs-lookup"><span data-stu-id="a591e-1452">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="a591e-1453">Aby zapisać dane dokumentu XML, użyj <xref:System.Data.DataTable.WriteXml%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1453">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="a591e-1454">Nazwa pliku do użycia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1454">The name of the file to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-1455">Zapisuje bieżący struktury danych <see cref="T:System.Data.DataTable" /> jako schematu XML do określonego pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1455">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema to the specified file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1456">Użyj <xref:System.Data.DataTable.WriteXmlSchema%2A> metodę, aby zapisać schematu <xref:System.Data.DataTable> do dokumentu XML.</span><span class="sxs-lookup"><span data-stu-id="a591e-1456">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="a591e-1457">Schemat zawiera definicji tabeli, relacji i ograniczenia.</span><span class="sxs-lookup"><span data-stu-id="a591e-1457">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="a591e-1458">Schemat XML jest zapisywany przy użyciu standardu XSD.</span><span class="sxs-lookup"><span data-stu-id="a591e-1458">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="a591e-1459">Aby zapisać dane dokumentu XML, użyj <xref:System.Data.DataTable.WriteXml%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1459">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::Xml::XmlWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a591e-1460">
            <see cref="T:System.Xml.XmlWriter" /> Do użycia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1460">The <see cref="T:System.Xml.XmlWriter" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-1461">Zapisuje bieżący struktury danych <see cref="T:System.Data.DataTable" /> jako schematu XML przy użyciu określonego <see cref="T:System.Xml.XmlWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1461">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema using the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1462">Użyj <xref:System.Data.DataTable.WriteXmlSchema%2A> metodę, aby zapisać schematu <xref:System.Data.DataTable> do dokumentu XML.</span><span class="sxs-lookup"><span data-stu-id="a591e-1462">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="a591e-1463">Schemat zawiera definicji tabeli, relacji i ograniczenia.</span><span class="sxs-lookup"><span data-stu-id="a591e-1463">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="a591e-1464">Schemat XML jest zapisywany przy użyciu standardu XSD.</span><span class="sxs-lookup"><span data-stu-id="a591e-1464">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="a591e-1465">Aby zapisać dane dokumentu XML, użyj <xref:System.Data.DataTable.WriteXml%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1465">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.IO.Stream stream, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.IO.Stream stream, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::IO::Stream ^ stream, bool writeHierarchy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="a591e-1466">Strumień, do której zostanie zapisany schemat XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1466">The stream to which the XML schema will be written.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="a591e-1467">Jeśli <see langword="true" />, zapisać schematu bieżącej tabeli i wszystkich jego elementów podrzędnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1467">If <see langword="true" />, write the schema of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="a591e-1468">Jeśli <see langword="false" /> (wartość domyślna), zapisać schematu dla bieżącej tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1468">If <see langword="false" /> (the default value), write the schema for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-1469">Zapisuje bieżący struktury danych <see cref="T:System.Data.DataTable" /> jako schematu XML do określonego strumienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1469">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema to the specified stream.</span>
          </span>
          <span data-ttu-id="a591e-1470">Aby zapisać schematu dla tabeli i wszystkich jego elementów podrzędnych, ustawić <paramref name="writeHierarchy" /> parametr <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1470">To save the schema for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1471">Użyj <xref:System.Data.DataTable.WriteXmlSchema%2A> metodę, aby zapisać schematu <xref:System.Data.DataTable> do dokumentu XML.</span><span class="sxs-lookup"><span data-stu-id="a591e-1471">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="a591e-1472">Schemat zawiera definicji tabeli, relacji i ograniczenia.</span><span class="sxs-lookup"><span data-stu-id="a591e-1472">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="a591e-1473">Schemat XML jest zapisywany przy użyciu standardu XSD.</span><span class="sxs-lookup"><span data-stu-id="a591e-1473">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="a591e-1474">Aby zapisać dane dokumentu XML, użyj <xref:System.Data.DataTable.WriteXml%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1474">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="a591e-1475">Zwykle `WriteXmlSchema` metoda zapisuje schemat tylko dla bieżącej tabeli.</span><span class="sxs-lookup"><span data-stu-id="a591e-1475">Normally the `WriteXmlSchema` method writes the schema only for the current table.</span></span> <span data-ttu-id="a591e-1476">Aby napisać schematu dla bieżącej tabeli i jego całą tabele podrzędne, powiązane, należy wywołać metodę z `writeHierarchy` ustawiono parametr `true`.</span><span class="sxs-lookup"><span data-stu-id="a591e-1476">To write the schema for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.IO.TextWriter writer, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.IO.TextWriter writer, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (writer As TextWriter, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::IO::TextWriter ^ writer, bool writeHierarchy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a591e-1477">
            <see cref="T:System.IO.TextWriter" /> z jakim zostanie zapisane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1477">The <see cref="T:System.IO.TextWriter" /> with which to write.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="a591e-1478">Jeśli <see langword="true" />, zapisać schematu bieżącej tabeli i wszystkich jego elementów podrzędnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1478">If <see langword="true" />, write the schema of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="a591e-1479">Jeśli <see langword="false" /> (wartość domyślna), zapisać schematu dla bieżącej tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1479">If <see langword="false" /> (the default value), write the schema for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-1480">Zapisuje bieżący struktury danych <see cref="T:System.Data.DataTable" /> jako schematu XML przy użyciu określonego <see cref="T:System.IO.TextWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1480">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema using the specified <see cref="T:System.IO.TextWriter" />.</span>
          </span>
          <span data-ttu-id="a591e-1481">Aby zapisać schematu dla tabeli i wszystkich jego elementów podrzędnych, ustawić <paramref name="writeHierarchy" /> parametr <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1481">To save the schema for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1482">Użyj <xref:System.Data.DataTable.WriteXmlSchema%2A> metodę, aby zapisać schematu <xref:System.Data.DataTable> do dokumentu XML.</span><span class="sxs-lookup"><span data-stu-id="a591e-1482">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="a591e-1483">Schemat zawiera definicji tabeli, relacji i ograniczenia.</span><span class="sxs-lookup"><span data-stu-id="a591e-1483">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="a591e-1484">Schemat XML jest zapisywany przy użyciu standardu XSD.</span><span class="sxs-lookup"><span data-stu-id="a591e-1484">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="a591e-1485">Aby zapisać dane dokumentu XML, użyj <xref:System.Data.DataTable.WriteXml%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1485">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="a591e-1486">Zwykle `WriteXmlSchema` metoda zapisuje schemat tylko dla bieżącej tabeli.</span><span class="sxs-lookup"><span data-stu-id="a591e-1486">Normally the `WriteXmlSchema` method writes the schema only for the current table.</span></span> <span data-ttu-id="a591e-1487">Aby napisać schematu dla bieżącej tabeli i jego całą tabele podrzędne, powiązane, należy wywołać metodę z `writeHierarchy` ustawiono parametr `true`.</span><span class="sxs-lookup"><span data-stu-id="a591e-1487">To write the schema for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a591e-1488">Następującej aplikacji konsoli tworzy dwa <xref:System.Data.DataTable> wystąpienia, dodaje do <xref:System.Data.DataSet>, tworzy <xref:System.Data.DataRelation> dotyczące dwóch tabel, a następnie używa <xref:System.Data.DataTable.WriteXmlSchema%2A> metody do zapisania danych zawartych w tabeli nadrzędnej w celu <xref:System.IO.TextWriter>.</span><span class="sxs-lookup"><span data-stu-id="a591e-1488">The following console application creates two <xref:System.Data.DataTable> instances, adds each to a <xref:System.Data.DataSet>, creates a <xref:System.Data.DataRelation> relating the two tables, and then uses the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the data contained within the parent table to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="a591e-1489">W przykładzie pokazano zachowanie podczas ustawiania `writeHierarchy` parametru do każdego z jego wartości.</span><span class="sxs-lookup"><span data-stu-id="a591e-1489">The example demonstrates the behavior when setting the `writeHierarchy` parameter to each of its values.</span></span>  
  
 [!code-csharp[DataWorks DataTable.WriteXmlSchema#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlSchema/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.WriteXmlSchema#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlSchema/VB/source.vb#1)]  
  
 <span data-ttu-id="a591e-1490">W przykładzie przedstawiono następujące wyniki w oknie konsoli:</span><span class="sxs-lookup"><span data-stu-id="a591e-1490">The example displays the following output in the console window:</span></span>  
  
```  
==============================  
Customer table, without hierarchy  
==============================  
<?xml version="1.0" encoding="utf-16"?>  
<xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema"  
xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Ta  
ble1">  
    <xs:complexType>  
      <xs:choice minOccurs="0" maxOccurs="unbounded">  
        <xs:element name="Table1">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="ID" type="xs:int" />  
              <xs:element name="Name" type="xs:string" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
      </xs:choice>  
    </xs:complexType>  
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table1" />  
      <xs:field xpath="ID" />  
    </xs:unique>  
  </xs:element>  
</xs:schema>  
==============================  
Customer table, with hierarchy  
==============================  
<?xml version="1.0" encoding="utf-16"?>  
<xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema"  
xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
    <xs:complexType>  
      <xs:choice minOccurs="0" maxOccurs="unbounded">  
        <xs:element name="Table1">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="ID" type="xs:int" />  
              <xs:element name="Name" type="xs:string" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
        <xs:element name="Table2">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="OrderID" type="xs:int" />  
              <xs:element name="CustomerID" type="xs:int" minOccurs="0" />  
              <xs:element name="OrderDate" type="xs:dateTime" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
      </xs:choice>  
    </xs:complexType>  
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table1" />  
      <xs:field xpath="ID" />  
    </xs:unique>  
    <xs:unique name="Table2_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table2" />  
      <xs:field xpath="OrderID" />  
    </xs:unique>  
    <xs:keyref name="CustomerOrder" refer="Constraint1">  
      <xs:selector xpath=".//Table2" />  
      <xs:field xpath="CustomerID" />  
    </xs:keyref>  
  </xs:element>  
</xs:schema>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (string fileName, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(string fileName, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (fileName As String, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::String ^ fileName, bool writeHierarchy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="a591e-1491">Nazwa pliku do użycia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1491">The name of the file to use.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="a591e-1492">Jeśli <see langword="true" />, zapisać schematu bieżącej tabeli i wszystkich jego elementów podrzędnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1492">If <see langword="true" />, write the schema of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="a591e-1493">Jeśli <see langword="false" /> (wartość domyślna), zapisać schematu dla bieżącej tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1493">If <see langword="false" /> (the default value), write the schema for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-1494">Zapisuje bieżący struktury danych <see cref="T:System.Data.DataTable" /> jako schematu XML do określonego pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1494">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema to the specified file.</span>
          </span>
          <span data-ttu-id="a591e-1495">Aby zapisać schematu dla tabeli i wszystkich jego elementów podrzędnych, ustawić <paramref name="writeHierarchy" /> parametr <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1495">To save the schema for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1496">Użyj <xref:System.Data.DataTable.WriteXmlSchema%2A> metodę, aby zapisać schematu <xref:System.Data.DataTable> do dokumentu XML.</span><span class="sxs-lookup"><span data-stu-id="a591e-1496">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="a591e-1497">Schemat zawiera definicji tabeli, relacji i ograniczenia.</span><span class="sxs-lookup"><span data-stu-id="a591e-1497">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="a591e-1498">Schemat XML jest zapisywany przy użyciu standardu XSD.</span><span class="sxs-lookup"><span data-stu-id="a591e-1498">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="a591e-1499">Aby zapisać dane dokumentu XML, użyj <xref:System.Data.DataTable.WriteXml%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1499">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="a591e-1500">Zwykle `WriteXmlSchema` metoda zapisuje schemat tylko dla bieżącej tabeli.</span><span class="sxs-lookup"><span data-stu-id="a591e-1500">Normally the `WriteXmlSchema` method writes the schema only for the current table.</span></span> <span data-ttu-id="a591e-1501">Aby napisać schematu dla bieżącej tabeli i jego całą tabele podrzędne, powiązane, należy wywołać metodę z `writeHierarchy` ustawiono parametr `true`.</span><span class="sxs-lookup"><span data-stu-id="a591e-1501">To write the schema for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.Xml.XmlWriter writer, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.Xml.XmlWriter writer, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (writer As XmlWriter, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::Xml::XmlWriter ^ writer, bool writeHierarchy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a591e-1502">
            <see cref="T:System.Xml.XmlWriter" /> Używany do zapisywania dokumentu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1502">The <see cref="T:System.Xml.XmlWriter" /> used to write the document.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="a591e-1503">Jeśli <see langword="true" />, zapisać schematu bieżącej tabeli i wszystkich jego elementów podrzędnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1503">If <see langword="true" />, write the schema of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="a591e-1504">Jeśli <see langword="false" /> (wartość domyślna), zapisać schematu dla bieżącej tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1504">If <see langword="false" /> (the default value), write the schema for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a591e-1505">Zapisuje bieżący struktury danych <see cref="T:System.Data.DataTable" /> jako schematu XML przy użyciu określonego <see cref="T:System.Xml.XmlWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1505">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema using the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
          <span data-ttu-id="a591e-1506">Aby zapisać schematu dla tabeli i wszystkich jego elementów podrzędnych, ustawić <paramref name="writeHierarchy" /> parametr <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a591e-1506">To save the schema for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a591e-1507">Użyj <xref:System.Data.DataTable.WriteXmlSchema%2A> metodę, aby zapisać schematu <xref:System.Data.DataTable> do dokumentu XML.</span><span class="sxs-lookup"><span data-stu-id="a591e-1507">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="a591e-1508">Schemat zawiera definicji tabeli, relacji i ograniczenia.</span><span class="sxs-lookup"><span data-stu-id="a591e-1508">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="a591e-1509">Schemat XML jest zapisywany przy użyciu standardu XSD.</span><span class="sxs-lookup"><span data-stu-id="a591e-1509">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="a591e-1510">Aby zapisać dane dokumentu XML, użyj <xref:System.Data.DataTable.WriteXml%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a591e-1510">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="a591e-1511">Zwykle `WriteXmlSchema` metoda zapisuje schemat tylko dla bieżącej tabeli.</span><span class="sxs-lookup"><span data-stu-id="a591e-1511">Normally the `WriteXmlSchema` method writes the schema only for the current table.</span></span> <span data-ttu-id="a591e-1512">Aby napisać schematu dla bieżącej tabeli i jego całą tabele podrzędne, powiązane, należy wywołać metodę z `writeHierarchy` ustawiono parametr `true`.</span><span class="sxs-lookup"><span data-stu-id="a591e-1512">To write the schema for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>