<Type Name="EllipseStylusShape" FullName="System.Windows.Ink.EllipseStylusShape">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="019d0ac1bca16b9fca819e126ce65da0202d0c4c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30705953" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EllipseStylusShape : System.Windows.Ink.StylusShape" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EllipseStylusShape extends System.Windows.Ink.StylusShape" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Ink.EllipseStylusShape" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EllipseStylusShape&#xA;Inherits StylusShape" />
  <TypeSignature Language="C++ CLI" Value="public ref class EllipseStylusShape sealed : System::Windows::Ink::StylusShape" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Ink.StylusShape</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje poradę pióro kształcie elipsy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład przedstawia sposób tworzenia <xref:System.Windows.Ink.EllipseStylusShape> i przekaż go do <xref:System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester%2A> metodę, aby wymazać część <xref:System.Windows.Ink.Stroke>. W tym przykładzie założono, że istnieje <xref:System.Windows.Ink.IncrementalStrokeHitTester> o nazwie `eraseTester` oraz że jego <xref:System.Windows.Ink.IncrementalStrokeHitTester.StrokeHit> zdarzeń została podłączona do obsługi zdarzeń zdefiniowanych w tym przykładzie. Aby utworzyć formant, który umożliwia użytkownikowi wymazywania, zobacz [porady: wymazać pismo odręczne na formant niestandardowy](~/docs/framework/wpf/advanced/how-to-erase-ink-on-a-custom-control.md).  
  
 [!code-csharp[InkEraser#4](~/samples/snippets/csharp/VS_Snippets_Wpf/InkEraser/CSharp/InkEraser.cs#4)]
 [!code-vb[InkEraser#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkEraser/VisualBasic/InkEraser.vb#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Ink.EllipseStylusShape" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniższy przykład przedstawia sposób tworzenia <xref:System.Windows.Ink.EllipseStylusShape> i przekaż go do <xref:System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester%2A> metodę, aby wymazać część <xref:System.Windows.Ink.Stroke>. W tym przykładzie założono, że istnieje <xref:System.Windows.Ink.IncrementalStrokeHitTester> o nazwie `eraseTester` oraz że jego <xref:System.Windows.Ink.IncrementalStrokeHitTester.StrokeHit> zdarzeń została podłączona do obsługi zdarzeń zdefiniowanych w tym przykładzie. Aby utworzyć formant, który umożliwia użytkownikowi wymazywania, zobacz [porady: wymazać pismo odręczne na formant niestandardowy](~/docs/framework/wpf/advanced/how-to-erase-ink-on-a-custom-control.md).  
  
 [!code-csharp[InkEraser#4](~/samples/snippets/csharp/VS_Snippets_Wpf/InkEraser/CSharp/InkEraser.cs#4)]
 [!code-vb[InkEraser#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkEraser/VisualBasic/InkEraser.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EllipseStylusShape (double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.EllipseStylusShape.#ctor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (width As Double, height As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EllipseStylusShape(double width, double height);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="width">Szerokość kształtu pióra.</param>
        <param name="height">Wysokość kształtu pióra.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Ink.EllipseStylusShape" /> klasy o określonej szerokości i wysokości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład przedstawia sposób tworzenia <xref:System.Windows.Ink.EllipseStylusShape> i przekaż go do <xref:System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester%2A> metodę, aby wymazać część <xref:System.Windows.Ink.Stroke>. W tym przykładzie założono, że istnieje <xref:System.Windows.Ink.IncrementalStrokeHitTester> o nazwie `eraseTester` oraz że jego <xref:System.Windows.Ink.IncrementalStrokeHitTester.StrokeHit> zdarzeń została podłączona do obsługi zdarzeń zdefiniowanych w tym przykładzie. Aby utworzyć formant, który umożliwia użytkownikowi wymazywania, zobacz [porady: wymazać pismo odręczne na formant niestandardowy](~/docs/framework/wpf/advanced/how-to-erase-ink-on-a-custom-control.md).  
  
 [!code-csharp[InkEraser#4](~/samples/snippets/csharp/VS_Snippets_Wpf/InkEraser/CSharp/InkEraser.cs#4)]
 [!code-vb[InkEraser#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkEraser/VisualBasic/InkEraser.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EllipseStylusShape (double width, double height, double rotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 width, float64 height, float64 rotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.EllipseStylusShape.#ctor(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (width As Double, height As Double, rotation As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EllipseStylusShape(double width, double height, double rotation);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
        <Parameter Name="rotation" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="width">Szerokość kształtu pióra.</param>
        <param name="height">Wysokość kształtu pióra.</param>
        <param name="rotation">Kąt kształtu pióra.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Ink.EllipseStylusShape" /> klasa o określonej szerokości, wysokości i kąta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład przedstawia sposób tworzenia <xref:System.Windows.Ink.EllipseStylusShape> i przekaż go do <xref:System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester%2A> metodę, aby wymazać część <xref:System.Windows.Ink.Stroke>. W tym przykładzie założono, że istnieje <xref:System.Windows.Ink.IncrementalStrokeHitTester> o nazwie `eraseTester` oraz że jego <xref:System.Windows.Ink.IncrementalStrokeHitTester.StrokeHit> zdarzeń została podłączona do obsługi zdarzeń zdefiniowanych w tym przykładzie. Aby utworzyć formant, który umożliwia użytkownikowi wymazywania, zobacz [porady: wymazać pismo odręczne na formant niestandardowy](~/docs/framework/wpf/advanced/how-to-erase-ink-on-a-custom-control.md).  
  
 [!code-csharp[InkEraser#4](~/samples/snippets/csharp/VS_Snippets_Wpf/InkEraser/CSharp/InkEraser.cs#4)]
 [!code-vb[InkEraser#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkEraser/VisualBasic/InkEraser.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>