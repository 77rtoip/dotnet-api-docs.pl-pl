<Type Name="StrokeCollection" FullName="System.Windows.Ink.StrokeCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="786994334da06feb31e0291c7560babc1430dbea" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69174517" /></Metadata><TypeSignature Language="C#" Value="public class StrokeCollection : System.Collections.ObjectModel.Collection&lt;System.Windows.Ink.Stroke&gt;, System.Collections.Specialized.INotifyCollectionChanged, System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StrokeCollection extends System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Ink.Stroke&gt; implements class System.Collections.Specialized.INotifyCollectionChanged, class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Ink.StrokeCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class StrokeCollection&#xA;Inherits Collection(Of Stroke)&#xA;Implements INotifyCollectionChanged, INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class StrokeCollection : System::Collections::ObjectModel::Collection&lt;System::Windows::Ink::Stroke ^&gt;, System::Collections::Specialized::INotifyCollectionChanged, System::ComponentModel::INotifyPropertyChanged" />
  <TypeSignature Language="F#" Value="type StrokeCollection = class&#xA;    inherit Collection&lt;Stroke&gt;&#xA;    interface INotifyPropertyChanged&#xA;    interface INotifyCollectionChanged" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.Collection&lt;System.Windows.Ink.Stroke&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.Windows.Ink.Stroke</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Specialized.INotifyCollectionChanged</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.StrokeCollectionConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje kolekcję <see cref="T:System.Windows.Ink.Stroke" /> obiektów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection> Umożliwia wykonywanie takich funkcji, jak testowanie trafień, przycinanie i wymazywanie pociągnięć. Kontrolka wykonuje wiele z tych funkcji, ale jeśli potrzebujesz więcej kontroli <xref:System.Windows.Controls.InkCanvas> niż zapewnia, <xref:System.Windows.Ink.StrokeCollection> oferuje więcej opcji. <xref:System.Windows.Controls.InkCanvas>  
  
 Poniższa tabela zawiera informacje na temat zarządzania atramentem cyfrowym w kontrolce niestandardowej.  
  
|Aby to zrobić...|Zobacz ten artykuł|  
|-----------------|----------------------|  
|Tworzenie kontrolki, która zbiera cyfrowy atrament|[Tworzenie kontrolki danych wejściowych pisma odręcznego](~/docs/framework/wpf/advanced/creating-an-ink-input-control.md)|  
|Tworzenie kontrolki umożliwiającej użytkownikowi wybranie atramentu|[Instrukcje: Wybierz atrament z kontrolki niestandardowej](~/docs/framework/wpf/advanced/how-to-select-ink-from-a-custom-control.md)|  
|Tworzenie kontrolki umożliwiającej użytkownikowi wskazanie wymazania atramentu|[Instrukcje: Wymazywanie pisma odręcznego na kontrolce niestandardowej](~/docs/framework/wpf/advanced/how-to-erase-ink-on-a-custom-control.md)|  
  
<a name="xamlAttributeUsage_StrokeCollection"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object StrokeCollection="isfString"/>  
```  
  
<a name="xamlObjectElementUsage_StrokeCollection"></a>   
## <a name="xaml-object-element-usage"></a>Użycie elementu obiektu języka XAML  
  
```  
<object>isfString</object>  
```  
  
<a name="xamlValues_StrokeCollection"></a>   
## <a name="xaml-values"></a>Wartości XAML  
  
|Termin|Definicja|  
|----------|----------------|  
|`isfString`|Ciąg, który reprezentuje obrys w Base-64, zakodowany format atramentu (ISF).|  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób kopiowania atramentu w jednym <xref:System.Windows.Controls.InkCanvas> na inny. <xref:System.Windows.Controls.InkCanvas> W tym przykładzie założono:  
  
-   Istnieją dwa <xref:System.Windows.Controls.InkCanvas> obiekty o nazwie `inkCanvas1` i `inkCanvas2`.  
  
-   <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Zdarzenie zostało połączone z programem obsługi zdarzeń.  
  
 [!code-csharp[StrokeCollectionMethods#21](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#21)]
 [!code-vb[StrokeCollectionMethods#21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#21)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Ink.StrokeCollection" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StrokeCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StrokeCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Ink.StrokeCollection" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StrokeCollection (System.Collections.Generic.IEnumerable&lt;System.Windows.Ink.Stroke&gt; strokes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Ink.Stroke&gt; strokes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Ink.Stroke})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (strokes As IEnumerable(Of Stroke))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StrokeCollection(System::Collections::Generic::IEnumerable&lt;System::Windows::Ink::Stroke ^&gt; ^ strokes);" />
      <MemberSignature Language="F#" Value="new System.Windows.Ink.StrokeCollection : seq&lt;System.Windows.Ink.Stroke&gt; -&gt; System.Windows.Ink.StrokeCollection" Usage="new System.Windows.Ink.StrokeCollection strokes" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="strokes" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Ink.Stroke&gt;" />
      </Parameters>
      <Docs>
        <param name="strokes">Pociągnięcia, które mają zostać <see cref="T:System.Windows.Ink.StrokeCollection" />dodane do.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.Ink.StrokeCollection" /> klasy zawierającej określone pociągnięcia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StrokeCollection (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StrokeCollection(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Windows.Ink.StrokeCollection : System.IO.Stream -&gt; System.Windows.Ink.StrokeCollection" Usage="new System.Windows.Ink.StrokeCollection stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Strumień zawierający dane odręczne.</param>
        <summary>Inicjuje obiekt <see cref="T:System.Windows.Ink.StrokeCollection" /> z określonego <see cref="T:System.IO.Stream" /> formatu pisma odręcznego (ISF).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład ilustruje sposób zapisywania i ładowania <xref:System.Windows.Ink.StrokeCollection>. W <xref:System.Windows.Controls.InkCanvas> tym przykładzie przyjęto założenie, `inkCanvas1`że istnieje wywołana.  
  
 [!code-csharp[StrokeCollectionMethods#10](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#10)]
 [!code-vb[StrokeCollectionMethods#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#10)]  
[!code-csharp[StrokeCollectionMethods#11](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#11)]
[!code-vb[StrokeCollectionMethods#11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Windows.Ink.StrokeCollection strokes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Windows.Ink.StrokeCollection strokes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Add(System.Windows.Ink.StrokeCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (strokes As StrokeCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Windows::Ink::StrokeCollection ^ strokes);" />
      <MemberSignature Language="F#" Value="override this.Add : System.Windows.Ink.StrokeCollection -&gt; unit" Usage="strokeCollection.Add strokes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strokes" Type="System.Windows.Ink.StrokeCollection" />
      </Parameters>
      <Docs>
        <param name="strokes">, <see cref="T:System.Windows.Ink.StrokeCollection" /> Aby dodać do kolekcji.</param>
        <summary>Dodaje określone pociągnięcia do <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection.Add%2A> Metoda<xref:System.Windows.Ink.StrokeCollection.StrokesChanged> wywołuje zdarzenie.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób kopiowania atramentu w jednym <xref:System.Windows.Controls.InkCanvas> na inny. <xref:System.Windows.Controls.InkCanvas> W tym przykładzie założono:  
  
-   Istnieją dwa <xref:System.Windows.Controls.InkCanvas> obiekty o nazwie `inkCanvas1` i `inkCanvas2`.  
  
-   <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Zdarzenie zostało połączone z programem obsługi zdarzeń.  
  
 [!code-csharp[StrokeCollectionMethods#21](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#21)]
 [!code-vb[StrokeCollectionMethods#21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Element <see cref="T:System.Windows.Ink.Stroke" /> in <paramref name="strokes" /> jest<see cref="T:System.Windows.Ink.StrokeCollection" />już elementem członkowskim.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="strokes" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddPropertyData">
      <MemberSignature Language="C#" Value="public void AddPropertyData (Guid propertyDataId, object propertyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPropertyData(valuetype System.Guid propertyDataId, object propertyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.AddPropertyData(System.Guid,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPropertyData (propertyDataId As Guid, propertyData As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPropertyData(Guid propertyDataId, System::Object ^ propertyData);" />
      <MemberSignature Language="F#" Value="member this.AddPropertyData : Guid * obj -&gt; unit" Usage="strokeCollection.AddPropertyData (propertyDataId, propertyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
        <Parameter Name="propertyData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="propertyDataId">Element <see cref="T:System.Guid" /> do skojarzenia z właściwością niestandardową.</param>
        <param name="propertyData">Wartość właściwości niestandardowej. <paramref name="propertyData" />musi być <see cref="T:System.Char" />typu, <see cref="T:System.UInt16" /> ,<see cref="T:System.UInt32" /> ,,<see cref="T:System.Double" />,, ,<see cref="T:System.Int64" />,, ,<see cref="T:System.DateTime" />,, <see cref="T:System.UInt64" /> <see cref="T:System.Int16" /> <see cref="T:System.Byte" /> <see cref="T:System.Int32" /> <see cref="T:System.Single" /> <see cref="T:System.Boolean" /> lub<see cref="T:System.String" />Tablicatych typów danych, z wyjątkiem <see cref="T:System.String" />, co jest niedozwolone. <see cref="T:System.Decimal" /></param>
        <summary>Dodaje właściwość niestandardową do <see cref="T:System.Windows.Ink.StrokeCollection" />elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda umożliwia dodawanie właściwości niestandardowych <xref:System.Windows.Ink.StrokeCollection>do. <xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A> Następnie można dołączyć dodatkowe informacje <xref:System.Windows.Ink.StrokeCollection>do.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak dodać i pobrać dane właściwości niestandardowych. Metoda używa metody, aby dodać bieżący czas do <xref:System.Windows.Ink.StrokeCollection>. `AddTimeStamp_Click` <xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A> Metoda używa metody do pobierania sygnatury czasowej z. <xref:System.Windows.Ink.StrokeCollection> `GetTimeStap_Click` <xref:System.Windows.Ink.StrokeCollection.GetPropertyData%2A> W <xref:System.Windows.Controls.InkCanvas> tym przykładzie przyjęto założenie, `inkCanvas1`że istnieje wywołana.  
  
 [!code-csharp[StrokeCollectionMethods#12](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#12)]
 [!code-vb[StrokeCollectionMethods#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="propertyDataId" />jest pusty <see cref="T:System.Guid" />.  
  
—lub— 
 <paramref name="propertyData" />nie jest jednym z dozwolonych typów danych wymienionych w <see langword="Parameters" /> sekcji.</exception>
      </Docs>
    </Member>
    <Member MemberName="ClearItems">
      <MemberSignature Language="C#" Value="protected override sealed void ClearItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.ClearItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub ClearItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ClearItems();" />
      <MemberSignature Language="F#" Value="override this.ClearItems : unit -&gt; unit" Usage="strokeCollection.ClearItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Czyści wszystkie pociągnięcia z <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Clip">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Usuwa wszystkie pociągnięcia w <see cref="T:System.Windows.Ink.StrokeCollection" /> , które znajdują się poza określonymi granicami.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Clip">
      <MemberSignature Language="C#" Value="public void Clip (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; lassoPoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clip(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; lassoPoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Clip(System.Collections.Generic.IEnumerable{System.Windows.Point})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clip (lassoPoints As IEnumerable(Of Point))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clip(System::Collections::Generic::IEnumerable&lt;System::Windows::Point&gt; ^ lassoPoints);" />
      <MemberSignature Language="F#" Value="member this.Clip : seq&lt;System.Windows.Point&gt; -&gt; unit" Usage="strokeCollection.Clip lassoPoints" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lassoPoints" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
      </Parameters>
      <Docs>
        <param name="lassoPoints">Tablica typu <see cref="T:System.Drawing.Point" /> , która określa obszar, który ma zostać przycięty.</param>
        <summary>Usuwa wszystkie pociągnięcia w <see cref="T:System.Windows.Ink.StrokeCollection" /> , które znajdują się poza granicami określonej <see cref="T:System.Drawing.Point" /> tablicy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda łączy pierwszy i ostatni punkt w `lassoPoints` , aby utworzyć Lasso. <xref:System.Windows.Ink.StrokeCollection.Clip%2A>  
  
 Metoda wywołuje zdarzenie dla każdego <xref:System.Windows.Ink.Stroke> klipu IT. <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> <xref:System.Windows.Ink.StrokeCollection.Clip%2A>  
  
   
  
## Examples  
 Poniższy przykład ilustruje, jak przyciąć pociągnięcia w <xref:System.Windows.Ink.StrokeCollection>. W <xref:System.Windows.Controls.InkPresenter> tym przykładzie przyjęto założenie, `presenter`że istnieje wywołana.  
  
 [!code-csharp[StrokeCollectionMethods#13](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#13)]
 [!code-vb[StrokeCollectionMethods#13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clip">
      <MemberSignature Language="C#" Value="public void Clip (System.Windows.Rect bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clip(valuetype System.Windows.Rect bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Clip(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clip (bounds As Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clip(System::Windows::Rect bounds);" />
      <MemberSignature Language="F#" Value="member this.Clip : System.Windows.Rect -&gt; unit" Usage="strokeCollection.Clip bounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="bounds">Element <see cref="T:System.Windows.Rect" /> określający obszar, który ma zostać przycięty.</param>
        <summary>Zamienia wszystkie pociągnięcia, które są przycinane przez określony prostokąt z nowymi pociągnięciami, które nie wykraczają poza określony prostokąt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wszystkie pociągnięcia, które znajdują się wyłącznie poza określonym prostokątem, zostaną usunięte.  
  
   
  
## Examples  
 Poniższy przykład ilustruje, jak wymazać atrament, który znajduje się poza granicami <xref:System.Windows.Rect>. W <xref:System.Windows.Controls.InkPresenter> tym przykładzie przyjęto założenie, `presenter`że istnieje wywołana.  
  
 [!code-csharp[StrokeCollectionMethods#35](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#35)]
 [!code-vb[StrokeCollectionMethods#35](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Ink.StrokeCollection Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Ink.StrokeCollection Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As StrokeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Ink::StrokeCollection ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Windows.Ink.StrokeCollection&#xA;override this.Clone : unit -&gt; System.Windows.Ink.StrokeCollection" Usage="strokeCollection.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Ink.StrokeCollection" />Kopiuje.</summary>
        <returns>Kopia <see cref="T:System.Windows.Ink.StrokeCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda kopiuje każdy <xref:System.Windows.Ink.Stroke> z kolekcji i nowe <xref:System.Windows.Ink.StrokeCollection> odwołuje się do nowych pociągnięć. <xref:System.Windows.Ink.StrokeCollection.Clone%2A>  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób kopiowania atramentu w jednym <xref:System.Windows.Controls.InkCanvas> na inny. <xref:System.Windows.Controls.InkCanvas> W tym przykładzie założono:  
  
-   Istnieją dwa <xref:System.Windows.Controls.InkCanvas> obiekty o nazwie `inkCanvas1` i`inkCanvas2.`  
  
-   <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Zdarzenie zostało połączone z programem obsługi zdarzeń.  
  
 [!code-csharp[StrokeCollectionMethods#21](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#21)]
 [!code-vb[StrokeCollectionMethods#21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsPropertyData">
      <MemberSignature Language="C#" Value="public bool ContainsPropertyData (Guid propertyDataId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsPropertyData(valuetype System.Guid propertyDataId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.ContainsPropertyData(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsPropertyData (propertyDataId As Guid) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsPropertyData(Guid propertyDataId);" />
      <MemberSignature Language="F#" Value="member this.ContainsPropertyData : Guid -&gt; bool" Usage="strokeCollection.ContainsPropertyData propertyDataId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyDataId"><see cref="T:System.Guid" /> Aby zlokalizować <see cref="T:System.Windows.Ink.StrokeCollection" />w.</param>
        <summary>Zwraca czy określony identyfikator właściwości niestandardowej znajduje się w <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
        <returns><see langword="true" />Jeśli określony identyfikator właściwości niestandardowej znajduje się w <see cref="T:System.Windows.Ink.StrokeCollection" />; <see langword="false" />w przeciwnym razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład ilustruje sposób sprawdzania właściwości niestandardowej w <xref:System.Windows.Ink.StrokeCollection>. Jeśli niestandardowa właściwość została skojarzona `timestamp`z, przykład pobiera tę właściwość niestandardową i pokazuje <xref:System.Windows.Ink.StrokeCollection> , kiedy został zapisany. W <xref:System.Windows.Controls.InkCanvas> tym przykładzie przyjęto założenie, `inkCanvas1`że istnieje wywołana.  
  
 [!code-csharp[StrokeCollectionMethods#12](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#12)]
 [!code-vb[StrokeCollectionMethods#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public void Draw (System.Windows.Media.DrawingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Draw(class System.Windows.Media.DrawingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Draw(System.Windows.Media.DrawingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Draw (context As DrawingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Draw(System::Windows::Media::DrawingContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Draw : System.Windows.Media.DrawingContext -&gt; unit" Usage="strokeCollection.Draw context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Windows.Media.DrawingContext" />
      </Parameters>
      <Docs>
        <param name="context">Na którym narysujesz <see cref="T:System.Windows.Ink.StrokeCollection" />. <see cref="T:System.Windows.Media.DrawingContext" /></param>
        <summary>Rysuje pociągnięcia w <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy niestandardowy element, który wyświetla widok <xref:System.Windows.Controls.InkCanvas>miniatur. Element niestandardowy zachowuje odwołanie do <xref:System.Windows.Controls.InkCanvas> i ponownie rysuje <xref:System.Windows.Controls.InkCanvas.StrokeCollected> po wystąpieniu zdarzenia.  
  
 [!code-csharp[StrokeCollectionMethods#33](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window3.xaml.cs#33)]
 [!code-vb[StrokeCollectionMethods#33](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window3.xaml.vb#33)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Erase">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Usuwa atrament, który znajduje się w granicach określonego obszaru.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Erase">
      <MemberSignature Language="C#" Value="public void Erase (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; lassoPoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Erase(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; lassoPoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Erase (lassoPoints As IEnumerable(Of Point))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Erase(System::Collections::Generic::IEnumerable&lt;System::Windows::Point&gt; ^ lassoPoints);" />
      <MemberSignature Language="F#" Value="member this.Erase : seq&lt;System.Windows.Point&gt; -&gt; unit" Usage="strokeCollection.Erase lassoPoints" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lassoPoints" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
      </Parameters>
      <Docs>
        <param name="lassoPoints">Tablica typu <see cref="T:System.Drawing.Point" /> , która określa obszar do wymazania.</param>
        <summary>Usuwa atrament, który znajduje się w granicach określonego obszaru.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda łączy pierwszy i ostatni punkt w `lassoPoints` , aby utworzyć Lasso. <xref:System.Windows.Ink.StrokeCollection.Erase%2A>  
  
 Może zawierać nowe pociągnięcia <xref:System.Windows.Ink.StrokeCollection.Erase%2A> po wywołaniu metody. <xref:System.Windows.Ink.StrokeCollection> Na przykład, jeśli określony obszar znajduje się w środku <xref:System.Windows.Ink.Stroke>, Metoda wymazywania <xref:System.Windows.Ink.Stroke> spowoduje usunięcie i utworzenie dwóch nowych pociągnięć.  
  
 Metoda wywołuje zdarzenie dla każdej <xref:System.Windows.Ink.Stroke>wymazania. <xref:System.Windows.Ink.StrokeCollection.Erase%2A> <xref:System.Windows.Ink.StrokeCollection.StrokesChanged>  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, <xref:System.Windows.Ink.StrokeCollection>jak wymazać pociągnięcia w. W <xref:System.Windows.Controls.InkPresenter> tym przykładzie przyjęto założenie, `presenter`że istnieje wywołana.  
  
 [!code-csharp[StrokeCollectionMethods#2](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#2)]
 [!code-vb[StrokeCollectionMethods#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Erase">
      <MemberSignature Language="C#" Value="public void Erase (System.Windows.Rect bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Erase(valuetype System.Windows.Rect bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Erase(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Erase (bounds As Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Erase(System::Windows::Rect bounds);" />
      <MemberSignature Language="F#" Value="member this.Erase : System.Windows.Rect -&gt; unit" Usage="strokeCollection.Erase bounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="bounds">Obiekt <see cref="T:System.Windows.Rect" /> , który określa obszar do wymazania.</param>
        <summary>Zamienia wszystkie pociągnięcia, które są przycinane przez określony prostokąt z nowymi pociągnięciami, które nie wprowadzają granic określonego prostokąta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Może zawierać nowe pociągnięcia <xref:System.Windows.Ink.StrokeCollection.Erase%2A> po wywołaniu metody. <xref:System.Windows.Ink.StrokeCollection> Na przykład, jeśli określony obszar znajduje się w środku <xref:System.Windows.Ink.Stroke>, Metoda wymazywania <xref:System.Windows.Ink.Stroke> spowoduje usunięcie i utworzenie dwóch nowych pociągnięć.  Wszystkie pociągnięcia, które znajdują się w całości wewnątrz określonego prostokąta, są usuwane.  
  
 Metoda wywołuje zdarzenie dla każdej <xref:System.Windows.Ink.Stroke>wymazania. <xref:System.Windows.Ink.StrokeCollection.Erase%2A> <xref:System.Windows.Ink.StrokeCollection.StrokesChanged>  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób wymazania atramentu w obrębie <xref:System.Windows.Rect>. W <xref:System.Windows.Controls.InkPresenter> tym przykładzie przyjęto założenie, `presenter`że istnieje wywołana.  
  
 [!code-csharp[StrokeCollectionMethods#34](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#34)]
 [!code-vb[StrokeCollectionMethods#34](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Erase">
      <MemberSignature Language="C#" Value="public void Erase (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; eraserPath, System.Windows.Ink.StylusShape eraserShape);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Erase(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; eraserPath, class System.Windows.Ink.StylusShape eraserShape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Erase (eraserPath As IEnumerable(Of Point), eraserShape As StylusShape)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Erase(System::Collections::Generic::IEnumerable&lt;System::Windows::Point&gt; ^ eraserPath, System::Windows::Ink::StylusShape ^ eraserShape);" />
      <MemberSignature Language="F#" Value="member this.Erase : seq&lt;System.Windows.Point&gt; * System.Windows.Ink.StylusShape -&gt; unit" Usage="strokeCollection.Erase (eraserPath, eraserShape)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eraserPath" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
        <Parameter Name="eraserShape" Type="System.Windows.Ink.StylusShape" />
      </Parameters>
      <Docs>
        <param name="eraserPath">Tablica typu <see cref="T:System.Windows.Point" /> , która określa ścieżkę do wymazania.</param>
        <param name="eraserShape">A <see cref="T:System.Windows.Ink.StylusShape" /> , który określa kształt gumki.</param>
        <summary>Zastępuje wszystkie pociągnięcia, które są przycinane przez region utworzony przez określony <see cref="T:System.Windows.Ink.StylusShape" /> w określonej ścieżce z nowymi pociągnięciami, które nie są przycinane przez region.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Może zawierać nowe pociągnięcia <xref:System.Windows.Ink.StrokeCollection.Erase%2A> po wywołaniu metody. <xref:System.Windows.Ink.StrokeCollection> Na przykład, jeśli `path` przecina środek <xref:System.Windows.Ink.Stroke>, Metoda wymazywania usuwa <xref:System.Windows.Ink.Stroke> i tworzy dwa nowe pociągnięcia.  
  
 Metoda wywołuje zdarzenie dla każdej <xref:System.Windows.Ink.Stroke>wymazania. <xref:System.Windows.Ink.StrokeCollection.Erase%2A> <xref:System.Windows.Ink.StrokeCollection.StrokesChanged>  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak wymazać pismo odręczne na określonej ścieżce. W <xref:System.Windows.Controls.InkPresenter> tym przykładzie przyjęto założenie, `presenter`że istnieje wywołana.  
  
 [!code-csharp[StrokeCollectionMethods#14](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#14)]
 [!code-vb[StrokeCollectionMethods#14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.GetBounds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBounds () As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetBounds();" />
      <MemberSignature Language="F#" Value="member this.GetBounds : unit -&gt; System.Windows.Rect" Usage="strokeCollection.GetBounds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca granice pociągnięć w kolekcji.</summary>
        <returns>A <see cref="T:System.Windows.Rect" /> , który zawiera granice pociągnięć <see cref="T:System.Windows.Ink.StrokeCollection" />w.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda zwraca obiekt <xref:System.Windows.Rect> , który ma wygląd renderowane <xref:System.Windows.Ink.Stroke>. <xref:System.Windows.Ink.StrokeCollection.GetBounds%2A> Na przykład, jeśli <xref:System.Windows.Ink.Stroke> w programie jest 10 Wyświetlaj niezależne piksele <xref:System.Windows.Rect> (DIP), obejmuje całą <xref:System.Windows.Ink.Stroke>szerokość.  
  
   
  
## Examples  
 Poniższy przykład ilustruje, jak uzyskać granice <xref:System.Windows.Ink.StrokeCollection> i rysować je na kontrolce. W <xref:System.Windows.Controls.InkCanvas> tym przykładzie przyjęto założenie, `inkCanvas1`że istnieje wywołana.  
  
 [!code-csharp[StrokeCollectionMethods#20](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#20)]
 [!code-vb[StrokeCollectionMethods#20](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIncrementalLassoHitTester">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.IncrementalLassoHitTester GetIncrementalLassoHitTester (int percentageWithinLasso);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.IncrementalLassoHitTester GetIncrementalLassoHitTester(int32 percentageWithinLasso) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIncrementalLassoHitTester (percentageWithinLasso As Integer) As IncrementalLassoHitTester" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::IncrementalLassoHitTester ^ GetIncrementalLassoHitTester(int percentageWithinLasso);" />
      <MemberSignature Language="F#" Value="member this.GetIncrementalLassoHitTester : int -&gt; System.Windows.Ink.IncrementalLassoHitTester" Usage="strokeCollection.GetIncrementalLassoHitTester percentageWithinLasso" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.IncrementalLassoHitTester</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="percentageWithinLasso" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="percentageWithinLasso">Minimalny procent każdego z nich <see cref="T:System.Windows.Ink.Stroke" /> , który musi być zawarty w Lasso, aby można go było uznać za trafień.</param>
        <summary>Tworzy ten trafiony test przy użyciu ścieżki Lasso (FreeHand). <see cref="T:System.Windows.Ink.StrokeCollection" /> <see cref="T:System.Windows.Ink.IncrementalLassoHitTester" /></summary>
        <returns><see cref="T:System.Windows.Ink.IncrementalLassoHitTester" /> Ten trafi testuje <see cref="T:System.Windows.Ink.StrokeCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda zwraca wartość <xref:System.Windows.Ink.Stroke> , która traktuje się jako "trafienie", gdy ścieżka Lasso otacza ją. <xref:System.Windows.Ink.IncrementalLassoHitTester> <xref:System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester%2A> Jest to przydatne w przypadku implementowania funkcji, takich jak możliwość wybrania pociągnięcia przy użyciu narzędzia Lasso. <xref:System.Windows.Controls.InkCanvas> Używadozaimplementowania<xref:System.Windows.Ink.IncrementalLassoHitTester> narzędzia wyboru Lasso.  
  
   
  
## Examples  
 Poniższy przykład ilustruje <xref:System.Windows.Ink.IncrementalLassoHitTester> , jak uzyskać, aby użytkownik mógł wybrać pociągnięcia przy użyciu narzędzia Lasso. Aby utworzyć kontrolkę, która umożliwia użytkownikowi wybranie pisma odręcznego, zobacz [How to: Wybierz opcję atrament z kontrolki](~/docs/framework/wpf/advanced/how-to-select-ink-from-a-custom-control.md)niestandardowej.  
  
 [!code-csharp[StrokeCollectionMethods#17](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/InkSelector.cs#17)]
 [!code-vb[StrokeCollectionMethods#17](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/InkSelector.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIncrementalStrokeHitTester">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.IncrementalStrokeHitTester GetIncrementalStrokeHitTester (System.Windows.Ink.StylusShape eraserShape);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.IncrementalStrokeHitTester GetIncrementalStrokeHitTester(class System.Windows.Ink.StylusShape eraserShape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester(System.Windows.Ink.StylusShape)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIncrementalStrokeHitTester (eraserShape As StylusShape) As IncrementalStrokeHitTester" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::IncrementalStrokeHitTester ^ GetIncrementalStrokeHitTester(System::Windows::Ink::StylusShape ^ eraserShape);" />
      <MemberSignature Language="F#" Value="member this.GetIncrementalStrokeHitTester : System.Windows.Ink.StylusShape -&gt; System.Windows.Ink.IncrementalStrokeHitTester" Usage="strokeCollection.GetIncrementalStrokeHitTester eraserShape" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.IncrementalStrokeHitTester</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eraserShape" Type="System.Windows.Ink.StylusShape" />
      </Parameters>
      <Docs>
        <param name="eraserShape">A <see cref="T:System.Windows.Ink.StylusShape" /> , która określa końcówkę pióra.</param>
        <summary>Tworzy ten trafiony test przy użyciu ścieżki wymazywania. <see cref="T:System.Windows.Ink.StrokeCollection" /> <see cref="T:System.Windows.Ink.IncrementalStrokeHitTester" /></summary>
        <returns><see cref="T:System.Windows.Ink.IncrementalStrokeHitTester" /> Ten trafi testuje <see cref="T:System.Windows.Ink.StrokeCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda zwraca wartość <xref:System.Windows.Ink.Stroke> , która traktuje się jako "trafienie", gdy ścieżka gumki przecina ją. <xref:System.Windows.Ink.IncrementalStrokeHitTester> <xref:System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester%2A> Jest to przydatne w przypadku implementowania funkcji, takich jak możliwość wymazania części a <xref:System.Windows.Ink.Stroke>. Używa, gdy<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>Właściwość jest ustawiona na <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>. <xref:System.Windows.Ink.IncrementalStrokeHitTester> <xref:System.Windows.Controls.InkCanvas>  
  
   
  
## Examples  
 Poniższy przykład ilustruje <xref:System.Windows.Ink.IncrementalStrokeHitTester> , jak uzyskać metodę, która może być używana do wymazywania części elementu <xref:System.Windows.Ink.Stroke>. Aby utworzyć kontrolkę, która umożliwia użytkownikowi wymazanie pisma odręcznego, zobacz [How to: Wymazywanie pisma odręcznego na kontrolce](~/docs/framework/wpf/advanced/how-to-erase-ink-on-a-custom-control.md)niestandardowej.  
  
 [!code-csharp[InkEraser#4](~/samples/snippets/csharp/VS_Snippets_Wpf/InkEraser/CSharp/InkEraser.cs#4)]
 [!code-vb[InkEraser#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkEraser/VisualBasic/InkEraser.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyData">
      <MemberSignature Language="C#" Value="public object GetPropertyData (Guid propertyDataId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetPropertyData(valuetype System.Guid propertyDataId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.GetPropertyData(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyData (propertyDataId As Guid) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPropertyData(Guid propertyDataId);" />
      <MemberSignature Language="F#" Value="member this.GetPropertyData : Guid -&gt; obj" Usage="strokeCollection.GetPropertyData propertyDataId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyDataId"><see cref="T:System.Guid" /> Skojarzona z właściwością niestandardową do pobrania.</param>
        <summary>Zwraca wartość właściwości niestandardowej skojarzonej z określonym <see cref="T:System.Guid" />.</summary>
        <returns>Wartość właściwości niestandardowej skojarzonej z określonym <see cref="T:System.Guid" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metody <xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A> i <xref:System.Windows.Ink.StrokeCollection.GetPropertyData%2A> umożliwiają<xref:System.Windows.Ink.StrokeCollection>Dodawanie właściwości niestandardowych do. Następnie można dołączyć dodatkowe informacje <xref:System.Windows.Ink.StrokeCollection>do.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak dodać i pobrać dane właściwości niestandardowych. Metoda używa metody, aby dodać bieżący czas do <xref:System.Windows.Ink.StrokeCollection>. `AddTimeStamp_Click` <xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A> Metoda używa metody do pobierania sygnatury czasowej z. <xref:System.Windows.Ink.StrokeCollection> `GetTimeStap_Click` <xref:System.Windows.Ink.StrokeCollection.GetPropertyData%2A> W <xref:System.Windows.Controls.InkCanvas> tym przykładzie przyjęto założenie, `inkCanvas1`że istnieje wywołana.  
  
 [!code-csharp[StrokeCollectionMethods#12](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#12)]
 [!code-vb[StrokeCollectionMethods#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="propertyDataId" />nie jest skojarzony z właściwością <see cref="T:System.Windows.Ink.StrokeCollection" />niestandardową.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyDataIds">
      <MemberSignature Language="C#" Value="public Guid[] GetPropertyDataIds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Guid[] GetPropertyDataIds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.GetPropertyDataIds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyDataIds () As Guid()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Guid&gt; ^ GetPropertyDataIds();" />
      <MemberSignature Language="F#" Value="member this.GetPropertyDataIds : unit -&gt; Guid[]" Usage="strokeCollection.GetPropertyDataIds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca identyfikatory GUID wszelkich właściwości niestandardowych skojarzonych z <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
        <returns>Tablica typu <see cref="T:System.Guid" /> , która reprezentuje identyfikatory właściwości niestandardowych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano, jak uzyskać identyfikatory właściwości niestandardowych z <xref:System.Windows.Ink.StrokeCollection>.  
  
 [!code-csharp[StrokeCollectionMethods#27](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#27)]
 [!code-vb[StrokeCollectionMethods#27](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTest">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca kolekcję pociągnięć zawartych w określonym obszarze.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection HitTest (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection HitTest(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::StrokeCollection ^ HitTest(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.HitTest : System.Windows.Point -&gt; System.Windows.Ink.StrokeCollection" Usage="strokeCollection.HitTest point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">Punkt do testowania trafień.</param>
        <summary>Zwraca kolekcję pociągnięć, które przecinają określony punkt.</summary>
        <returns>Kolekcja <see cref="T:System.Windows.Ink.Stroke" /> obiektów, które przecinają określony punkt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład ilustruje, jak uzyskać pociągnięcia, które przecinają określony <xref:System.Windows.Point>. W <xref:System.Windows.Controls.InkPresenter> tym przykładzie przyjęto założenie, `presenter`że istnieje wywołana.  
  
 [!code-csharp[StrokeCollectionMethods#15](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#15)]
 [!code-vb[StrokeCollectionMethods#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection HitTest (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; lassoPoints, int percentageWithinLasso);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection HitTest(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; lassoPoints, int32 percentageWithinLasso) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (lassoPoints As IEnumerable(Of Point), percentageWithinLasso As Integer) As StrokeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::StrokeCollection ^ HitTest(System::Collections::Generic::IEnumerable&lt;System::Windows::Point&gt; ^ lassoPoints, int percentageWithinLasso);" />
      <MemberSignature Language="F#" Value="member this.HitTest : seq&lt;System.Windows.Point&gt; * int -&gt; System.Windows.Ink.StrokeCollection" Usage="strokeCollection.HitTest (lassoPoints, percentageWithinLasso)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lassoPoints" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
        <Parameter Name="percentageWithinLasso" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lassoPoints">Tablica typu <see cref="T:System.Windows.Point" /> , która reprezentuje granice obszaru, który ma zostać przetestowany.</param>
        <param name="percentageWithinLasso">Wartość procentowa <see cref="T:System.Windows.Ink.Stroke" /> <paramref name="lassoPoints" /> , która ma być dopuszczalna.</param>
        <summary>Zwraca kolekcję pociągnięć, które mają co najmniej określony procent długości w określonym obszarze.</summary>
        <returns>, Który ma pociągnięcia z co najmniej określoną wartością procentową <see cref="T:System.Windows.Point" /> w tablicy. <see cref="T:System.Windows.Ink.StrokeCollection" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano, jak usunąć wszystkie pociągnięcia, które są co najmniej 80% w ramach określonego narzędzia <xref:System.Windows.Ink.StrokeCollection>Lasso z. Jest to przydatne, gdy kontrolka niestandardowa umożliwia użytkownikowi wybranie pisma odręcznego za pomocą narzędzia Lasso. Aby utworzyć kontrolkę umożliwiającą użytkownikowi wybranie pisma odręcznego za pomocą narzędzia [Lasso, zobacz How to: Wybierz opcję atrament z kontrolki](~/docs/framework/wpf/advanced/how-to-select-ink-from-a-custom-control.md)niestandardowej.  
  
 [!code-csharp[StrokeCollectionMethods#16](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#16)]
 [!code-vb[StrokeCollectionMethods#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="lassoPoints" />jest <see langword="null" />.  
  
—lub— 
 <paramref name="percentageWithinLasso" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="lassoPoints" />zawiera pustą tablicę.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="percentageWithinLasso" />jest mniejsza niż 0 lub większa niż 100.</exception>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection HitTest (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; path, System.Windows.Ink.StylusShape stylusShape);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection HitTest(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; path, class System.Windows.Ink.StylusShape stylusShape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::StrokeCollection ^ HitTest(System::Collections::Generic::IEnumerable&lt;System::Windows::Point&gt; ^ path, System::Windows::Ink::StylusShape ^ stylusShape);" />
      <MemberSignature Language="F#" Value="member this.HitTest : seq&lt;System.Windows.Point&gt; * System.Windows.Ink.StylusShape -&gt; System.Windows.Ink.StrokeCollection" Usage="strokeCollection.HitTest (path, stylusShape)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
        <Parameter Name="stylusShape" Type="System.Windows.Ink.StylusShape" />
      </Parameters>
      <Docs>
        <param name="path">Tablica do wpisania <see cref="T:System.Windows.Point" /> , która reprezentuje ścieżkę, która ma zostać przetestowana.</param>
        <param name="stylusShape"><see cref="T:System.Windows.Ink.StylusShape" /> Określa<paramref name="eraserPath" />kształt.</param>
        <summary>Zwraca kolekcję pociągnięć, które przecinają się z określoną ścieżką.</summary>
        <returns>Z obrysów, które przecinają się z <paramref name="path" />. <see cref="T:System.Windows.Ink.StrokeCollection" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład zmienia kolor wszystkich pociągnięć, które przecinają ścieżkę utworzoną przez <xref:System.Windows.Point> tablicę.  W <xref:System.Windows.Controls.InkPresenter> tym przykładzie przyjęto założenie, `presenter`że istnieje wywołana.  
  
 [!code-csharp[StrokeCollectionMethods#37](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#37)]
 [!code-vb[StrokeCollectionMethods#37](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#37)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection HitTest (System.Windows.Point point, double diameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection HitTest(valuetype System.Windows.Point point, float64 diameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Point,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::StrokeCollection ^ HitTest(System::Windows::Point point, double diameter);" />
      <MemberSignature Language="F#" Value="member this.HitTest : System.Windows.Point * double -&gt; System.Windows.Ink.StrokeCollection" Usage="strokeCollection.HitTest (point, diameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="diameter" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="point">Test <see cref="T:System.Windows.Point" /> do trafienia.</param>
        <param name="diameter">Rozmiar obszaru wokół <see cref="T:System.Windows.Point" /> testu trafień.</param>
        <summary>Zwraca kolekcję pociągnięć, które przecinają określony obszar.</summary>
        <returns>Kolekcja <see cref="T:System.Windows.Ink.Stroke" /> obiektów, które przecinają określony punkt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład ilustruje, jak uzyskać pociągnięcia, które przecinają określony <xref:System.Windows.Point>. W <xref:System.Windows.Controls.InkPresenter> tym przykładzie przyjęto założenie, `presenter`że istnieje wywołana.  
  
 [!code-csharp[StrokeCollectionMethods#15](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#15)]
 [!code-vb[StrokeCollectionMethods#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection HitTest (System.Windows.Rect bounds, int percentageWithinBounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection HitTest(valuetype System.Windows.Rect bounds, int32 percentageWithinBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Rect,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (bounds As Rect, percentageWithinBounds As Integer) As StrokeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::StrokeCollection ^ HitTest(System::Windows::Rect bounds, int percentageWithinBounds);" />
      <MemberSignature Language="F#" Value="member this.HitTest : System.Windows.Rect * int -&gt; System.Windows.Ink.StrokeCollection" Usage="strokeCollection.HitTest (bounds, percentageWithinBounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Windows.Rect" />
        <Parameter Name="percentageWithinBounds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bounds">Element <see cref="T:System.Windows.Rect" /> określający granice, które mają zostać przetestowane.</param>
        <param name="percentageWithinBounds">Minimalna wymagana długość pociągnięcia, która musi znajdować się w granicach, aby została uznana za trafienie.</param>
        <summary>Zwraca kolekcję pociągnięć, które mają co najmniej określony procent długości w określonym prostokącie.</summary>
        <returns>A <see cref="T:System.Windows.Ink.StrokeCollection" /> , który ma pociągnięcia z co najmniej określoną wartością procentową <see cref="T:System.Windows.Rect" />w obrębie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład usuwa pociągnięcia, które są co najmniej 50% w <xref:System.Windows.Rect>granicach. W <xref:System.Windows.Controls.InkPresenter> tym przykładzie przyjęto założenie, `presenter`że istnieje wywołana.  
  
 [!code-csharp[StrokeCollectionMethods#36](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#36)]
 [!code-vb[StrokeCollectionMethods#36](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#36)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Ink.Stroke stroke);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Ink.Stroke stroke) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.IndexOf(System.Windows.Ink.Stroke)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Ink::Stroke ^ stroke);" />
      <MemberSignature Language="F#" Value="override this.IndexOf : System.Windows.Ink.Stroke -&gt; int" Usage="strokeCollection.IndexOf stroke" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stroke" Type="System.Windows.Ink.Stroke" />
      </Parameters>
      <Docs>
        <param name="stroke">Pociągnięcie, którego pozycja jest wymagana.</param>
        <summary>Zwraca indeks określonego <see cref="T:System.Windows.Ink.Stroke" /> <see cref="T:System.Windows.Ink.StrokeCollection" />w.</summary>
        <returns>Indeks pociągnięcia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda zwraca wartość-1, `stroke` Jeśli <xref:System.Windows.Ink.StrokeCollection>nie jest elementem członkowskim. <xref:System.Windows.Ink.StrokeCollection.IndexOf%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InkSerializedFormat">
      <MemberSignature Language="C#" Value="public static readonly string InkSerializedFormat;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string InkSerializedFormat" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Ink.StrokeCollection.InkSerializedFormat" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InkSerializedFormat As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ InkSerializedFormat;" />
      <MemberSignature Language="F#" Value=" staticval mutable InkSerializedFormat : string" Usage="System.Windows.Ink.StrokeCollection.InkSerializedFormat" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje natywny format trwałości dla danych odręcznych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj pola, aby określić format <xref:System.Windows.Ink.StrokeCollection> podczas transferu danych, na <xref:System.Windows.Ink.StrokeCollection> przykład podczas kopiowania do Schowka. <xref:System.Windows.Ink.StrokeCollection.InkSerializedFormat>  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób kopiowania <xref:System.Windows.Ink.StrokeCollection> do Schowka. W przykładzie określono, że <xref:System.Windows.Ink.StrokeCollection> jest w formacie ISF (Ink), tak aby inne programy, takie jak Microsoft Office Word, mogły akceptować skopiowane dane.  
  
 [!code-csharp[StrokeCollectionMethods#5](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#5)]
 [!code-vb[StrokeCollectionMethods#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override sealed void InsertItem (int index, System.Windows.Ink.Stroke stroke);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, class System.Windows.Ink.Stroke stroke) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.InsertItem(System.Int32,System.Windows.Ink.Stroke)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InsertItem(int index, System::Windows::Ink::Stroke ^ stroke);" />
      <MemberSignature Language="F#" Value="override this.InsertItem : int * System.Windows.Ink.Stroke -&gt; unit" Usage="strokeCollection.InsertItem (index, stroke)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="stroke" Type="System.Windows.Ink.Stroke" />
      </Parameters>
      <Docs>
        <param name="index">Określony indeks.</param>
        <param name="stroke">Określony obrys</param>
        <summary>Wstawia obrys do <see cref="T:System.Windows.Ink.StrokeCollection" /> obiektu o określonym indeksie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (System.ComponentModel.PropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(class System.ComponentModel.PropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanged (e As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanged(System::ComponentModel::PropertyChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanged : System.ComponentModel.PropertyChangedEventArgs -&gt; unit&#xA;override this.OnPropertyChanged : System.ComponentModel.PropertyChangedEventArgs -&gt; unit" Usage="strokeCollection.OnPropertyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dane zdarzenia.</param>
        <summary>Występuje po <see cref="T:System.Windows.Ink.StrokeCollection" /> zmianie właściwości.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyDataChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyDataChanged (System.Windows.Ink.PropertyDataChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyDataChanged(class System.Windows.Ink.PropertyDataChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyDataChanged (e As PropertyDataChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyDataChanged(System::Windows::Ink::PropertyDataChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyDataChanged : System.Windows.Ink.PropertyDataChangedEventArgs -&gt; unit&#xA;override this.OnPropertyDataChanged : System.Windows.Ink.PropertyDataChangedEventArgs -&gt; unit" Usage="strokeCollection.OnPropertyDataChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Ink.PropertyDataChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Ink.PropertyDataChangedEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Ink.StrokeCollection.PropertyDataChanged" /> Podnosi zdarzenie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStrokesChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnStrokesChanged (System.Windows.Ink.StrokeCollectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStrokesChanged(class System.Windows.Ink.StrokeCollectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.OnStrokesChanged(System.Windows.Ink.StrokeCollectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStrokesChanged (e As StrokeCollectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStrokesChanged(System::Windows::Ink::StrokeCollectionChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStrokesChanged : System.Windows.Ink.StrokeCollectionChangedEventArgs -&gt; unit&#xA;override this.OnStrokesChanged : System.Windows.Ink.StrokeCollectionChangedEventArgs -&gt; unit" Usage="strokeCollection.OnStrokesChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Ink.StrokeCollectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Ink.StrokeCollectionChangedEventArgs" /> , który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Ink.StrokeCollection.StrokesChanged" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata.  
  
 <xref:System.Windows.Ink.StrokeCollection.OnStrokesChanged%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata, który jest preferowaną techniką obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Windows.Ink.StrokeCollection.OnStrokesChanged(System.Windows.Ink.StrokeCollectionChangedEventArgs)" /> klasy pochodnej należy <see cref="M:System.Windows.Ink.StrokeCollection.OnStrokesChanged(System.Windows.Ink.StrokeCollectionChangedEventArgs)" /> wywołać metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="PropertyDataChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Ink.PropertyDataChangedEventHandler PropertyDataChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Ink.PropertyDataChangedEventHandler PropertyDataChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Ink.StrokeCollection.PropertyDataChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event PropertyDataChanged As PropertyDataChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Ink::PropertyDataChangedEventHandler ^ PropertyDataChanged;" />
      <MemberSignature Language="F#" Value="member this.PropertyDataChanged : System.Windows.Ink.PropertyDataChangedEventHandler " Usage="member this.PropertyDataChanged : System.Windows.Ink.PropertyDataChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.PropertyDataChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy właściwość niestandardowa jest dodawana <see cref="T:System.Windows.Ink.StrokeCollection" />lub usuwana z.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano, <xref:System.Windows.Ink.StrokeCollection.PropertyDataChanged> jak obsłużyć zdarzenie. W tym przykładzie przyjęto założenie <xref:System.Guid> , `dateTimeGuid` że istnieje <xref:System.Windows.Ink.StrokeCollection.PropertyDataChanged> wywołanie i zdarzenie jest połączone z programem obsługi zdarzeń zdefiniowanym w tym przykładzie.  
  
 [!code-csharp[StrokeCollectionMethods#29](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#29)]
 [!code-vb[StrokeCollectionMethods#29](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#29)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Ink.StrokeCollection strokes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Ink.StrokeCollection strokes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Remove(System.Windows.Ink.StrokeCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (strokes As StrokeCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Ink::StrokeCollection ^ strokes);" />
      <MemberSignature Language="F#" Value="override this.Remove : System.Windows.Ink.StrokeCollection -&gt; unit" Usage="strokeCollection.Remove strokes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strokes" Type="System.Windows.Ink.StrokeCollection" />
      </Parameters>
      <Docs>
        <param name="strokes"><see cref="T:System.Windows.Ink.StrokeCollection" /> Do usunięcia z kolekcji.</param>
        <summary>Usuwa określone pociągnięcia z kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda wywołuje zdarzenie dla każdej <xref:System.Windows.Ink.Stroke> z nich usuwa. <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> <xref:System.Windows.Ink.StrokeCollection.Remove%2A>  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak usunąć wszystkie pociągnięcia, które są co najmniej 80% w ramach określonego narzędzia <xref:System.Windows.Ink.StrokeCollection>Lasso z. Jest to przydatne, gdy kontrolka niestandardowa umożliwia użytkownikowi wybranie pisma odręcznego za pomocą narzędzia Lasso. Aby utworzyć kontrolkę umożliwiającą użytkownikowi wybranie pisma odręcznego za pomocą narzędzia [Lasso, zobacz How to: Wybierz opcję atrament z kontrolki](~/docs/framework/wpf/advanced/how-to-select-ink-from-a-custom-control.md)niestandardowej.  
  
 [!code-csharp[StrokeCollectionMethods#16](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#16)]
 [!code-vb[StrokeCollectionMethods#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="protected override sealed void RemoveItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RemoveItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.RemoveItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub RemoveItem (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RemoveItem(int index);" />
      <MemberSignature Language="F#" Value="override this.RemoveItem : int -&gt; unit" Usage="strokeCollection.RemoveItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Określony indeks.</param>
        <summary>Usuwa pociągnięcie w określonym indeksie z <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePropertyData">
      <MemberSignature Language="C#" Value="public void RemovePropertyData (Guid propertyDataId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemovePropertyData(valuetype System.Guid propertyDataId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.RemovePropertyData(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemovePropertyData (propertyDataId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemovePropertyData(Guid propertyDataId);" />
      <MemberSignature Language="F#" Value="member this.RemovePropertyData : Guid -&gt; unit" Usage="strokeCollection.RemovePropertyData propertyDataId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyDataId"><see cref="T:System.Guid" /> Skojarzona z właściwością niestandardową do usunięcia.</param>
        <summary>Usuwa właściwość niestandardową skojarzoną z <see cref="T:System.Guid" />określonym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład ilustruje sposób usuwania właściwości niestandardowej z <xref:System.Windows.Ink.StrokeCollection>. W tym przykładzie przyjęto założenie <xref:System.Windows.Controls.InkCanvas> , `inkCanvas1` że istnieje <xref:System.Guid> wywołana `timestamp`i wywoływana.  
  
 [!code-csharp[StrokeCollectionMethods#28](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#28)]
 [!code-vb[StrokeCollectionMethods#28](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Replace">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zastępuje pociągnięcia w kolekcji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public void Replace (System.Windows.Ink.Stroke strokeToReplace, System.Windows.Ink.StrokeCollection strokesToReplaceWith);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Replace(class System.Windows.Ink.Stroke strokeToReplace, class System.Windows.Ink.StrokeCollection strokesToReplaceWith) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.Stroke,System.Windows.Ink.StrokeCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Replace (strokeToReplace As Stroke, strokesToReplaceWith As StrokeCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Replace(System::Windows::Ink::Stroke ^ strokeToReplace, System::Windows::Ink::StrokeCollection ^ strokesToReplaceWith);" />
      <MemberSignature Language="F#" Value="member this.Replace : System.Windows.Ink.Stroke * System.Windows.Ink.StrokeCollection -&gt; unit" Usage="strokeCollection.Replace (strokeToReplace, strokesToReplaceWith)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strokeToReplace" Type="System.Windows.Ink.Stroke" />
        <Parameter Name="strokesToReplaceWith" Type="System.Windows.Ink.StrokeCollection" />
      </Parameters>
      <Docs>
        <param name="strokeToReplace"><see cref="T:System.Windows.Ink.Stroke" /> Do zastąpienia.</param>
        <param name="strokesToReplaceWith">Źródło <see cref="T:System.Windows.Ink.StrokeCollection" />.</param>
        <summary>Zastępuje określony <see cref="T:System.Windows.Ink.Stroke" /> z określonym <see cref="T:System.Windows.Ink.StrokeCollection" />parametrem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection.Replace%2A> Metoda<xref:System.Windows.Ink.StrokeCollection.StrokesChanged> wywołuje zdarzenie.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić wybrane pociągnięcia na <xref:System.Windows.Controls.InkCanvas> innym. <xref:System.Windows.Ink.StrokeCollection> W <xref:System.Windows.Controls.InkCanvas> tym przykładzie przyjęto założenie, `inkCanvas1`że istnieje wywołana.  
  
 [!code-csharp[StrokeCollectionMethods#7](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#7)]
 [!code-vb[StrokeCollectionMethods#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="strokesToReplace" />jest puste.  
  
—lub— 
 <paramref name="strokesToReplaceWith" />jest puste.  
  
—lub— 
Element <see cref="T:System.Windows.Ink.Stroke" /> <paramref name="strokesToReplace" />in <paramref name="strokesToReplaceWith" /> jest już w.</exception>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public void Replace (System.Windows.Ink.StrokeCollection strokesToReplace, System.Windows.Ink.StrokeCollection strokesToReplaceWith);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Replace(class System.Windows.Ink.StrokeCollection strokesToReplace, class System.Windows.Ink.StrokeCollection strokesToReplaceWith) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.StrokeCollection,System.Windows.Ink.StrokeCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Replace (strokesToReplace As StrokeCollection, strokesToReplaceWith As StrokeCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Replace(System::Windows::Ink::StrokeCollection ^ strokesToReplace, System::Windows::Ink::StrokeCollection ^ strokesToReplaceWith);" />
      <MemberSignature Language="F#" Value="member this.Replace : System.Windows.Ink.StrokeCollection * System.Windows.Ink.StrokeCollection -&gt; unit" Usage="strokeCollection.Replace (strokesToReplace, strokesToReplaceWith)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strokesToReplace" Type="System.Windows.Ink.StrokeCollection" />
        <Parameter Name="strokesToReplaceWith" Type="System.Windows.Ink.StrokeCollection" />
      </Parameters>
      <Docs>
        <param name="strokesToReplace">Miejsce docelowe <see cref="T:System.Windows.Ink.StrokeCollection" />.</param>
        <param name="strokesToReplaceWith">Źródło <see cref="T:System.Windows.Ink.StrokeCollection" />.</param>
        <summary>Zastępuje określony <see cref="T:System.Windows.Ink.StrokeCollection" /> atrybut nowym <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda podnosi zdarzenie dla każdej <xref:System.Windows.Ink.Stroke> z nich zastępuje. <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> <xref:System.Windows.Ink.StrokeCollection.Replace%2A>  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić wybrane pociągnięcia na <xref:System.Windows.Controls.InkCanvas> innym. <xref:System.Windows.Ink.StrokeCollection> W <xref:System.Windows.Controls.InkCanvas> tym przykładzie przyjęto założenie, `inkCanvas1`że istnieje wywołana.  
  
 [!code-csharp[StrokeCollectionMethods#7](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#7)]
 [!code-vb[StrokeCollectionMethods#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="strokesToReplace" />jest puste.  
  
—lub— 
 <paramref name="strokesToReplaceWith" />jest puste.  
  
—lub— 
A <see cref="T:System.Windows.Ink.Stroke" /> w<paramref name="strokesToReplaceWith" /> jest już w<paramref name="strokesToReplace." />  
  
—lub— 
Pociągnięcia w <paramref name="strokesToReplaceWith" /> nie są ciągłe.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Ink.StrokeCollection" />Zapisuje.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Save(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.Stream -&gt; unit" Usage="strokeCollection.Save stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">, <see cref="T:System.IO.Stream" /> Do którego ma zostać <see cref="T:System.Windows.Ink.StrokeCollection" />zapisany.</param>
        <summary>Zapisuje do określonego <see cref="T:System.IO.Stream" />. <see cref="T:System.Windows.Ink.StrokeCollection" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection.Save%2A> Metoda zapisujeformat<xref:System.Windows.Ink.StrokeCollection> AS (ISF).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak zapisać <xref:System.Windows.Ink.StrokeCollection> plik w pliku przy <xref:System.Windows.Ink.StrokeCollection.Save%28System.IO.Stream%2CSystem.Boolean%29> użyciu metody. W <xref:System.Windows.Controls.InkCanvas> tym przykładzie przyjęto założenie, `inkCanvas1`że istnieje wywołana.  
  
 [!code-csharp[StrokeCollectionMethods#10](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#10)]
 [!code-vb[StrokeCollectionMethods#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public virtual void Save (System.IO.Stream stream, bool compress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class System.IO.Stream stream, bool compress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Save(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Save(System::IO::Stream ^ stream, bool compress);" />
      <MemberSignature Language="F#" Value="abstract member Save : System.IO.Stream * bool -&gt; unit&#xA;override this.Save : System.IO.Stream * bool -&gt; unit" Usage="strokeCollection.Save (stream, compress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="compress" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">, <see cref="T:System.IO.Stream" /> Do którego ma zostać <see cref="T:System.Windows.Ink.StrokeCollection" />zapisany.</param>
        <param name="compress"><see langword="true" />Aby skompresować <see cref="T:System.Windows.Ink.StrokeCollection" />; w przeciwnym razie <see langword="false" />,.</param>
        <summary>Zapisuje do określonego <see cref="T:System.IO.Stream" /> i kompresuje go, jeśli jest określony. <see cref="T:System.Windows.Ink.StrokeCollection" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection.Save%2A> Metoda zapisujeformat<xref:System.Windows.Ink.StrokeCollection> AS (ISF).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak zapisać <xref:System.Windows.Ink.StrokeCollection> plik w pliku przy <xref:System.Windows.Ink.StrokeCollection.Save%28System.IO.Stream%2CSystem.Boolean%29> użyciu metody. W <xref:System.Windows.Controls.InkCanvas> tym przykładzie przyjęto założenie, `inkCanvas1`że istnieje wywołana.  
  
 [!code-csharp[StrokeCollectionMethods#10](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#10)]
 [!code-vb[StrokeCollectionMethods#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="protected override sealed void SetItem (int index, System.Windows.Ink.Stroke stroke);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItem(int32 index, class System.Windows.Ink.Stroke stroke) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.SetItem(System.Int32,System.Windows.Ink.Stroke)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItem(int index, System::Windows::Ink::Stroke ^ stroke);" />
      <MemberSignature Language="F#" Value="override this.SetItem : int * System.Windows.Ink.Stroke -&gt; unit" Usage="strokeCollection.SetItem (index, stroke)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="stroke" Type="System.Windows.Ink.Stroke" />
      </Parameters>
      <Docs>
        <param name="index">Położenie, w którym ma zostać zastąpione pociągnięcie.</param>
        <param name="stroke">Naciśnięcie, aby zastąpić bieżące pociągnięcie.</param>
        <summary>Zamienia pociągnięcie w określonym indeksie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokesChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Ink.StrokeCollectionChangedEventHandler StrokesChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Ink.StrokeCollectionChangedEventHandler StrokesChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Ink.StrokeCollection.StrokesChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event StrokesChanged As StrokeCollectionChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Ink::StrokeCollectionChangedEventHandler ^ StrokesChanged;" />
      <MemberSignature Language="F#" Value="member this.StrokesChanged : System.Windows.Ink.StrokeCollectionChangedEventHandler " Usage="member this.StrokesChanged : System.Windows.Ink.StrokeCollectionChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollectionChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, <see cref="T:System.Windows.Ink.Stroke" /> gdy w kolekcji ulegnie zmianie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład dodaje bieżącą godzinę jako właściwość niestandardową do każdego nowego pociągnięcia w programie <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> obsługi zdarzeń. W przykładzie przyjęto założenie, że <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> zdarzenie jest połączone z programem obsługi zdarzeń zdefiniowanym w tym przykładzie.  
  
 [!code-csharp[DrawingAttributes#4](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#4)]
 [!code-vb[DrawingAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged">
      <MemberSignature Language="C#" Value="event System.Collections.Specialized.NotifyCollectionChangedEventHandler System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Collections.Specialized.NotifyCollectionChangedEventHandler System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Ink.StrokeCollection.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged" />
      <MemberSignature Language="VB.NET" Value="Custom Event CollectionChanged As NotifyCollectionChangedEventHandler Implements System.Collections.Specialized.INotifyCollectionChanged" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NotifyCollectionChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, <see cref="T:System.Windows.Ink.StrokeCollection" /> gdy zmiany.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
      <MemberSignature Language="C#" Value="event System.ComponentModel.PropertyChangedEventHandler System.ComponentModel.INotifyPropertyChanged.PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Ink.StrokeCollection.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Custom Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zmianie wartości każdej <see cref="T:System.Windows.Ink.StrokeCollection" /> właściwości.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Windows.Media.Matrix transformMatrix, bool applyToStylusTip);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(valuetype System.Windows.Media.Matrix transformMatrix, bool applyToStylusTip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Transform(System.Windows.Media.Matrix,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (transformMatrix As Matrix, applyToStylusTip As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Windows::Media::Matrix transformMatrix, bool applyToStylusTip);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Windows.Media.Matrix * bool -&gt; unit" Usage="strokeCollection.Transform (transformMatrix, applyToStylusTip)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transformMatrix" Type="System.Windows.Media.Matrix" />
        <Parameter Name="applyToStylusTip" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="transformMatrix">A <see cref="T:System.Windows.Media.Matrix" /> , która określa transformację do wykonania <see cref="T:System.Windows.Ink.StrokeCollection" />na.</param>
        <param name="applyToStylusTip"><see langword="true" />Aby zastosować transformację do końcówki pióra; w przeciwnym razie. <see langword="false" /></param>
        <summary>Modyfikuje wszystkie <see cref="P:System.Windows.Ink.Stroke.StylusPoints" /> i <see cref="P:System.Windows.Ink.DrawingAttributes.StylusTipTransform" /> opcjonalnie <see cref="T:System.Windows.Ink.StrokeCollection" /> dla każdego pociągnięcia w zależności od określonego <see cref="T:System.Windows.Media.Matrix" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy `applyToStylusTip` ma `true`wartość ,<xref:System.Windows.Ink.StrokeCollection.Transform%2A> Metoda ma wpływ na kształt końcówki pióra, a także pozycję pociągnięć. Na przykład jeśli <xref:System.Windows.Ink.StrokeCollection> przesuniesz 90 stopni, obrysy są przesuwane wokół osi, a wysokość i szerokość naciśnięć są wyświetlane jako odwrócone.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak przenieść wszystkie pociągnięcia na <xref:System.Windows.Controls.InkCanvas>. W <xref:System.Windows.Controls.InkCanvas> tym przykładzie przyjęto założenie, `inkCanvas1`że istnieje wywołana.  
  
 [!code-csharp[StrokeCollectionMethods#9](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#9)]
 [!code-vb[StrokeCollectionMethods#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
