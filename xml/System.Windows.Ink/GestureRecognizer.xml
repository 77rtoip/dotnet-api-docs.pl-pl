<Type Name="GestureRecognizer" FullName="System.Windows.Ink.GestureRecognizer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f024c08afdc4e5340f491665587bb2e7bb0c6d89" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69174815" /></Metadata><TypeSignature Language="C#" Value="public sealed class GestureRecognizer : System.Windows.DependencyObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit GestureRecognizer extends System.Windows.DependencyObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Ink.GestureRecognizer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class GestureRecognizer&#xA;Inherits DependencyObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class GestureRecognizer sealed : System::Windows::DependencyObject, IDisposable" />
  <TypeSignature Language="F#" Value="type GestureRecognizer = class&#xA;    inherit DependencyObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Rozpoznaje gesty farb.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.GestureRecognizer> Identyfikuje gest farby odręcznej. Można ustawić, <xref:System.Windows.Ink.GestureRecognizer> aby rozpoznawać wszystkie lub podzbiór gestów aplikacji. Aby ustawić <xref:System.Windows.Ink.GestureRecognizer> , aby rozpoznawać podzestaw dostępnych gestów, <xref:System.Windows.Ink.ApplicationGesture> Przekaż tablicę do konstruktora lub Użyj <xref:System.Windows.Ink.GestureRecognizer.SetEnabledGestures%2A> metody. Aby określić, czy <xref:System.Windows.Ink.StrokeCollection> element zawiera gest, <xref:System.Windows.Ink.GestureRecognizer.Recognize%2A> Wywołaj metodę.  
  
<a name="xamlTextUsage_GestureRecognizer"></a>   
## <a name="xaml-text-usage"></a>Użycie tekstu w języku XAML  
 Nie można użyć tej klasy w [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak określić, <xref:System.Windows.Ink.Stroke> czy <xref:System.Windows.Ink.ApplicationGesture.ScratchOut> jest gest.  
  
 [!code-csharp[GestureControl#8](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureControl/CSharp/Gesture.cs#8)]
 [!code-vb[GestureControl#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureControl/VisualBasic/Gesture.vb#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Ink.GestureRecognizer" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GestureRecognizer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.GestureRecognizer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GestureRecognizer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Ink.GestureRecognizer" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy zostanie utworzony za pomocą tego konstruktora, program <xref:System.Windows.Ink.GestureRecognizer> rozpoznaje wszystkie gesty aplikacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GestureRecognizer (System.Collections.Generic.IEnumerable&lt;System.Windows.Ink.ApplicationGesture&gt; enabledApplicationGestures);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Ink.ApplicationGesture&gt; enabledApplicationGestures) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.GestureRecognizer.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (enabledApplicationGestures As IEnumerable(Of ApplicationGesture))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GestureRecognizer(System::Collections::Generic::IEnumerable&lt;System::Windows::Ink::ApplicationGesture&gt; ^ enabledApplicationGestures);" />
      <MemberSignature Language="F#" Value="new System.Windows.Ink.GestureRecognizer : seq&lt;System.Windows.Ink.ApplicationGesture&gt; -&gt; System.Windows.Ink.GestureRecognizer" Usage="new System.Windows.Ink.GestureRecognizer enabledApplicationGestures" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enabledApplicationGestures" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Ink.ApplicationGesture&gt;" />
      </Parameters>
      <Docs>
        <param name="enabledApplicationGestures">Tablica typu <see cref="T:System.Windows.Ink.ApplicationGesture" /> określająca gesty aplikacji rozpoznawane przez <see cref="T:System.Windows.Ink.GestureRecognizer" /> program.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Ink.GestureRecognizer" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj konstruktora, aby utworzyć obiekt <xref:System.Windows.Ink.GestureRecognizer> , który rozpoznaje podzbiór gestów aplikacji. <xref:System.Windows.Ink.GestureRecognizer.%23ctor%2A>  
  
   
  
## Examples  
 Poniższy <xref:System.Windows.Ink.GestureRecognizer> przykład ilustruje sposób tworzenia, który rozpoznaje <xref:System.Windows.Ink.ApplicationGesture.Down>tylko gesty, <xref:System.Windows.Ink.ApplicationGesture.Right>i <xref:System.Windows.Ink.ApplicationGesture.ScratchOut> .  
  
 [!code-csharp[GestureControl#4](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureControl/CSharp/Gesture.cs#4)]
 [!code-vb[GestureControl#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureControl/VisualBasic/Gesture.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.GestureRecognizer.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="gestureRecognizer.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia wszystkie zasoby używane przez <see cref="T:System.Windows.Ink.GestureRecognizer" />program.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj <xref:System.Windows.Ink.GestureRecognizer.Dispose%2A> po zakończeniu korzystania z <xref:System.Windows.Ink.GestureRecognizer>. <xref:System.Windows.Ink.GestureRecognizer.Dispose%2A> Metoda<xref:System.Windows.Ink.GestureRecognizer> pozostawia w stanie niezdatnym do użytku. W związku z tym <xref:System.Windows.Ink.GestureRecognizer.Dispose%2A>po wywołaniu, należy wydać wszystkie odwołania <xref:System.Windows.Ink.GestureRecognizer> do, aby moduł wyrzucania elementów bezużytecznych mógł <xref:System.Windows.Ink.GestureRecognizer> odzyskiwać pamięć, którą zajmował.  
  
> [!NOTE]
>  Zawsze wywołuj <xref:System.Windows.Ink.GestureRecognizer.Dispose%2A> przed wydaniem ostatniego odwołania <xref:System.Windows.Ink.GestureRecognizer>do. W przeciwnym razie używane zasoby nie zostaną zwolnione do momentu wywołania <xref:System.Windows.Ink.GestureRecognizer> `Finalize` metody obiektu przez moduł zbierający elementy bezużyteczne.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnabledGestures">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Ink.ApplicationGesture&gt; GetEnabledGestures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;valuetype System.Windows.Ink.ApplicationGesture&gt; GetEnabledGestures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.GestureRecognizer.GetEnabledGestures" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnabledGestures () As ReadOnlyCollection(Of ApplicationGesture)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Ink::ApplicationGesture&gt; ^ GetEnabledGestures();" />
      <MemberSignature Language="F#" Value="member this.GetEnabledGestures : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Ink.ApplicationGesture&gt;" Usage="gestureRecognizer.GetEnabledGestures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Ink.ApplicationGesture&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera gesty <see cref="T:System.Windows.Ink.GestureRecognizer" /> rozpoznawane przez program.</summary>
        <returns>Tablica typu <see cref="T:System.Windows.Ink.ApplicationGesture" /> zawierającego <see cref="T:System.Windows.Ink.GestureRecognizer" /> gesty ustawione na rozpoznawanie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano, jak uzyskać gesty aplikacji <xref:System.Windows.Ink.GestureRecognizer> rozpoznawane przez program.  
  
 [!code-csharp[GestureControl#6](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureControl/CSharp/Gesture.cs#6)]
 [!code-vb[GestureControl#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureControl/VisualBasic/Gesture.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRecognizerAvailable">
      <MemberSignature Language="C#" Value="public bool IsRecognizerAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRecognizerAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Ink.GestureRecognizer.IsRecognizerAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRecognizerAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRecognizerAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRecognizerAvailable : bool" Usage="System.Windows.Ink.GestureRecognizer.IsRecognizerAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość logiczną wskazującą, czy aparat rozpoznawania gestów jest dostępny w systemie użytkownika.</summary>
        <value><see langword="true" />Jeśli składnik rozpoznawania jest dostępny; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano, jak określić, czy aparat rozpoznawania gestów jest dostępny przed <xref:System.Windows.Ink.GestureRecognizer.Recognize%2A> wywołaniem metody.  
  
 [!code-csharp[GestureControl#8](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureControl/CSharp/Gesture.cs#8)]
 [!code-vb[GestureControl#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureControl/VisualBasic/Gesture.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Recognize">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Ink.GestureRecognitionResult&gt; Recognize (System.Windows.Ink.StrokeCollection strokes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Ink.GestureRecognitionResult&gt; Recognize(class System.Windows.Ink.StrokeCollection strokes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.GestureRecognizer.Recognize(System.Windows.Ink.StrokeCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function Recognize (strokes As StrokeCollection) As ReadOnlyCollection(Of GestureRecognitionResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Ink::GestureRecognitionResult ^&gt; ^ Recognize(System::Windows::Ink::StrokeCollection ^ strokes);" />
      <MemberSignature Language="F#" Value="member this.Recognize : System.Windows.Ink.StrokeCollection -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Ink.GestureRecognitionResult&gt;" Usage="gestureRecognizer.Recognize strokes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Ink.GestureRecognitionResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strokes" Type="System.Windows.Ink.StrokeCollection" />
      </Parameters>
      <Docs>
        <param name="strokes"><see cref="T:System.Windows.Ink.StrokeCollection" /> Aby wyszukać gesty.</param>
        <summary>Szuka gestów w określonym <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
        <returns>Tablica typu <see cref="T:System.Windows.Ink.GestureRecognitionResult" /> , który zawiera gesty aplikacji <see cref="T:System.Windows.Ink.GestureRecognizer" /> , które zostały rozpoznane.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tablica zwrócona przez <xref:System.Windows.Ink.GestureRecognizer.Recognize%2A> metodę jest posortowana <xref:System.Windows.Ink.GestureRecognitionResult.RecognitionConfidence%2A?displayProperty=nameWithType> według właściwości. Na przykład <xref:System.Windows.Ink.GestureRecognizer.Recognize%2A> może <xref:System.Windows.Ink.GestureRecognitionResult> zwrócić tablicę o następujących wartościach:  
  
|Indeks|ApplicationGesture|RecognitionConfidence|  
|-----------|------------------------|---------------------------|  
|0|<xref:System.Windows.Ink.ApplicationGesture.Check>|<xref:System.Windows.Ink.RecognitionConfidence.Strong>|  
|1|<xref:System.Windows.Ink.ApplicationGesture.NoGesture>|<xref:System.Windows.Ink.RecognitionConfidence.Intermediate>|  
|2|<xref:System.Windows.Ink.ApplicationGesture.Curlicue>|<xref:System.Windows.Ink.RecognitionConfidence.Poor>|  
|3|<xref:System.Windows.Ink.ApplicationGesture.DoubleCurlicue>|<xref:System.Windows.Ink.RecognitionConfidence.Poor>|  
  
 Oznacza <xref:System.Windows.Ink.GestureRecognizer> to, że rozpoznaje, że jest bardzo mało więcej, <xref:System.Windows.Ink.Stroke> że jest znacznikiem wyboru <xref:System.Windows.Ink.Stroke> , stosunkowo prawdopodobnie, że nie jest gestem <xref:System.Windows.Ink.Stroke> , a nie w ogóle, że jest to curlicue lub Double curlicue.  
  
> [!NOTE]
>  Metoda może zwrócić tablicę z <xref:System.Windows.Ink.ApplicationGesture.NoGesture> więcej <xref:System.Windows.Ink.RecognitionConfidence> niż innymi gestami aplikacji. <xref:System.Windows.Ink.GestureRecognizer.Recognize%2A> Oznacza to, że jest to bardziej prawdopodobnie, <xref:System.Windows.Ink.Stroke> że nie jest gestem, a nie gestem, który ma niższą <xref:System.Windows.Ink.RecognitionConfidence>wartość.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak określić, <xref:System.Windows.Ink.Stroke> czy <xref:System.Windows.Ink.ApplicationGesture.ScratchOut> jest gest.  
  
 [!code-csharp[GestureControl#8](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureControl/CSharp/Gesture.cs#8)]
 [!code-vb[GestureControl#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureControl/VisualBasic/Gesture.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEnabledGestures">
      <MemberSignature Language="C#" Value="public void SetEnabledGestures (System.Collections.Generic.IEnumerable&lt;System.Windows.Ink.ApplicationGesture&gt; applicationGestures);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEnabledGestures(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Ink.ApplicationGesture&gt; applicationGestures) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.GestureRecognizer.SetEnabledGestures(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetEnabledGestures (applicationGestures As IEnumerable(Of ApplicationGesture))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetEnabledGestures(System::Collections::Generic::IEnumerable&lt;System::Windows::Ink::ApplicationGesture&gt; ^ applicationGestures);" />
      <MemberSignature Language="F#" Value="member this.SetEnabledGestures : seq&lt;System.Windows.Ink.ApplicationGesture&gt; -&gt; unit" Usage="gestureRecognizer.SetEnabledGestures applicationGestures" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationGestures" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Ink.ApplicationGesture&gt;" />
      </Parameters>
      <Docs>
        <param name="applicationGestures">Tablica typu <see cref="T:System.Windows.Ink.ApplicationGesture" /> określająca gesty <see cref="T:System.Windows.Ink.GestureRecognizer" /> aplikacji, które mają być rozpoznawane.</param>
        <summary>Ustawia gesty aplikacji <see cref="T:System.Windows.Ink.GestureRecognizer" /> rozpoznawane przez program.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy <xref:System.Windows.Ink.GestureRecognizer> przykład ilustruje sposób tworzenia, który rozpoznaje <xref:System.Windows.Ink.ApplicationGesture.Down>tylko gesty, <xref:System.Windows.Ink.ApplicationGesture.Right>i <xref:System.Windows.Ink.ApplicationGesture.ScratchOut> .  
  
 [!code-csharp[GestureControl#5](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureControl/CSharp/Gesture.cs#5)]
 [!code-vb[GestureControl#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureControl/VisualBasic/Gesture.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
