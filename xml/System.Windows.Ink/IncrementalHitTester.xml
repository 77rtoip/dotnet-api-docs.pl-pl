<Type Name="IncrementalHitTester" FullName="System.Windows.Ink.IncrementalHitTester">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0d026c51094461f98334dd9173a646949b49fb39" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36509725" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class IncrementalHitTester" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit IncrementalHitTester extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Ink.IncrementalHitTester" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class IncrementalHitTester" />
  <TypeSignature Language="C++ CLI" Value="public ref class IncrementalHitTester abstract" />
  <TypeSignature Language="F#" Value="type IncrementalHitTester = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Dynamicznie wykonuje testowania trafień na <see cref="T:System.Windows.Ink.Stroke" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.IncrementalHitTester> Dynamicznie Określa, czy użytkownik "trafienia" <xref:System.Windows.Ink.Stroke>. Ta klasa umożliwia podanie natychmiast uzyskuje opinie dla użytkownika w sytuacji, wybierając i wymazywanie odręczne.  
  
 Istnieją dwie klasy, które dziedziczą z <xref:System.Windows.Ink.IncrementalHitTester>:  
  
-   <xref:System.Windows.Ink.IncrementalLassoHitTester> Trafień testów pociągnięcia przez określenie, czy ścieżka lasso otaczający go.  
  
-   <xref:System.Windows.Ink.IncrementalStrokeHitTester> Trafień testów pociągnięcia przez określenie, której ścieżka Gumka przecina go.  
  
 W poniższej tabeli wymieniono miejsca dowiedzieć się, jak zarządzać cyfrowe pismo odręczne na kontrolkę niestandardową.  
  
|W tym celu...|Znajduje się w artykule|  
|-----------------|----------------------|  
|Utwórz formant, który umożliwia zbieranie informacji cyfrowych odręcznego|[Tworzenie kontrolki danych wejściowych pisma odręcznego](~/docs/framework/wpf/advanced/creating-an-ink-input-control.md)|  
|Utwórz kontrolkę umożliwiającą użytkownikowi wybranie odręcznego|[Porady: Wybierz odręczne z formantu niestandardowego](~/docs/framework/wpf/advanced/how-to-select-ink-from-a-custom-control.md)|  
|Utwórz formant, który umożliwia użytkownikowi punktu wymazywanie pisma odręcznego|[Porady: wymazywania na kontrolkę niestandardową](~/docs/framework/wpf/advanced/how-to-erase-ink-on-a-custom-control.md)|  
  
<a name="xamlTextUsage_IncrementalHitTester"></a>   
## <a name="xaml-text-usage"></a>Użycie tekstu w języku XAML  
 Ta klasa nie jest zazwyczaj używana w języku XAML.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak dodać punkty <xref:System.Windows.Ink.IncrementalHitTester> gdy użytkownik danych danych wejściowych z pióra. Przykład obejmuje <xref:System.Windows.Ink.IncrementalStrokeHitTester.StrokeHit> obsługi zdarzeń, które powoduje usunięcie części <xref:System.Windows.Ink.Stroke> który przecina użytkownika. Aby utworzyć formant, który umożliwia użytkownikowi wymazywania, zobacz [porady: wymazać pismo odręczne na formant niestandardowy](~/docs/framework/wpf/advanced/how-to-erase-ink-on-a-custom-control.md).  
  
 [!code-csharp[InkEraser#6](~/samples/snippets/csharp/VS_Snippets_Wpf/InkEraser/CSharp/InkEraser.cs#6)]
 [!code-vb[InkEraser#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkEraser/VisualBasic/InkEraser.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddPoint">
      <MemberSignature Language="C#" Value="public void AddPoint (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPoint(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.IncrementalHitTester.AddPoint(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPoint(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.AddPoint : System.Windows.Point -&gt; unit" Usage="incrementalHitTester.AddPoint point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <see cref="T:System.Windows.Point" /> Do dodania do <see cref="T:System.Windows.Ink.IncrementalHitTester" />.</param>
        <summary>Dodaje <see cref="T:System.Windows.Point" /> do <see cref="T:System.Windows.Ink.IncrementalHitTester" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano, jak dodać punkty <xref:System.Windows.Ink.IncrementalHitTester> gdy użytkownik danych wejściowych danych przy użyciu myszy. Przykład obejmuje <xref:System.Windows.Ink.IncrementalStrokeHitTester.StrokeHit> obsługi zdarzeń, które powoduje usunięcie części <xref:System.Windows.Ink.Stroke> który przecina użytkownika. Aby utworzyć formant, który umożliwia użytkownikowi wymazywania, zobacz [porady: wymazać pismo odręczne na formant niestandardowy](~/docs/framework/wpf/advanced/how-to-erase-ink-on-a-custom-control.md).  
  
 [!code-csharp[InkEraser#11](~/samples/snippets/csharp/VS_Snippets_Wpf/InkEraser/CSharp/InkEraser.cs#11)]
 [!code-vb[InkEraser#11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkEraser/VisualBasic/InkEraser.vb#11)]  
[!code-csharp[InkEraser#2](~/samples/snippets/csharp/VS_Snippets_Wpf/InkEraser/CSharp/InkEraser.cs#2)]
[!code-vb[InkEraser#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkEraser/VisualBasic/InkEraser.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddPoints">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje punkty <see cref="T:System.Windows.Ink.IncrementalHitTester" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddPoints">
      <MemberSignature Language="C#" Value="public void AddPoints (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPoints(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.IncrementalHitTester.AddPoints(System.Collections.Generic.IEnumerable{System.Windows.Point})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPoints (points As IEnumerable(Of Point))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPoints(System::Collections::Generic::IEnumerable&lt;System::Windows::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddPoints : seq&lt;System.Windows.Point&gt; -&gt; unit" Usage="incrementalHitTester.AddPoints points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
      </Parameters>
      <Docs>
        <param name="points">Tablica typu <see cref="T:System.Windows.Point" /> do dodania do <see cref="T:System.Windows.Ink.IncrementalHitTester" />.</param>
        <summary>Dodaje punkty <see cref="T:System.Windows.Ink.IncrementalHitTester" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano, jak dodać punkty <xref:System.Windows.Ink.IncrementalHitTester> gdy użytkownik danych danych wejściowych z pióra. Przykład obejmuje <xref:System.Windows.Ink.IncrementalStrokeHitTester.StrokeHit> obsługi zdarzeń, które powoduje usunięcie części <xref:System.Windows.Ink.Stroke> który przecina użytkownika. Aby utworzyć formant, który umożliwia użytkownikowi wymazywania, zobacz [porady: wymazać pismo odręczne na formant niestandardowy](~/docs/framework/wpf/advanced/how-to-erase-ink-on-a-custom-control.md).  
  
 [!code-csharp[InkEraser#6](~/samples/snippets/csharp/VS_Snippets_Wpf/InkEraser/CSharp/InkEraser.cs#6)]
 [!code-vb[InkEraser#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkEraser/VisualBasic/InkEraser.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPoints">
      <MemberSignature Language="C#" Value="public void AddPoints (System.Windows.Input.StylusPointCollection stylusPoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPoints(class System.Windows.Input.StylusPointCollection stylusPoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.IncrementalHitTester.AddPoints(System.Windows.Input.StylusPointCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPoints (stylusPoints As StylusPointCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPoints(System::Windows::Input::StylusPointCollection ^ stylusPoints);" />
      <MemberSignature Language="F#" Value="member this.AddPoints : System.Windows.Input.StylusPointCollection -&gt; unit" Usage="incrementalHitTester.AddPoints stylusPoints" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPoints" Type="System.Windows.Input.StylusPointCollection" />
      </Parameters>
      <Docs>
        <param name="stylusPoints">Kolekcja <see cref="T:System.Windows.Input.StylusPoint" /> obiekty do dodania do <see cref="T:System.Windows.Ink.IncrementalHitTester" />.</param>
        <summary>Dodaje określony <see cref="T:System.Windows.Input.StylusPoint" /> obiekty do <see cref="T:System.Windows.Ink.IncrementalHitTester" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano, jak dodać punkty <xref:System.Windows.Ink.IncrementalStrokeHitTester> gdy użytkownik danych danych wejściowych z pióra. Przykład obejmuje <xref:System.Windows.Ink.IncrementalStrokeHitTester.StrokeHit> obsługi zdarzeń, które powoduje usunięcie części <xref:System.Windows.Ink.Stroke> który przecina użytkownika. Aby utworzyć formant, który umożliwia użytkownikowi wymazywania, zobacz [porady: wymazać pismo odręczne na formant niestandardowy](~/docs/framework/wpf/advanced/how-to-erase-ink-on-a-custom-control.md).  
  
 [!code-csharp[InkEraser#6](~/samples/snippets/csharp/VS_Snippets_Wpf/InkEraser/CSharp/InkEraser.cs#6)]
 [!code-vb[InkEraser#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkEraser/VisualBasic/InkEraser.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPointsCore">
      <MemberSignature Language="C#" Value="protected abstract void AddPointsCore (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; points);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddPointsCore(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.IncrementalHitTester.AddPointsCore(System.Collections.Generic.IEnumerable{System.Windows.Point})" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub AddPointsCore (points As IEnumerable(Of Point))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void AddPointsCore(System::Collections::Generic::IEnumerable&lt;System::Windows::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="abstract member AddPointsCore : seq&lt;System.Windows.Point&gt; -&gt; unit" Usage="incrementalHitTester.AddPointsCore points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
      </Parameters>
      <Docs>
        <param name="points">Aby dodać punkty</param>
        <summary>Dodaje punkty <see cref="T:System.Windows.Ink.IncrementalHitTester" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndHitTesting">
      <MemberSignature Language="C#" Value="public void EndHitTesting ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndHitTesting() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.IncrementalHitTester.EndHitTesting" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndHitTesting ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndHitTesting();" />
      <MemberSignature Language="F#" Value="member this.EndHitTesting : unit -&gt; unit" Usage="incrementalHitTester.EndHitTesting " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia zasoby używane przez <see cref="T:System.Windows.Ink.IncrementalHitTester" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie <xref:System.Windows.Ink.IncrementalHitTester.EndHitTesting%2A> metody podczas <xref:System.Windows.Ink.IncrementalHitTester> zakończeniu testowania trafień.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób wywoływania <xref:System.Windows.Ink.IncrementalHitTester.EndHitTesting%2A> po użyciu <xref:System.Windows.Ink.IncrementalHitTester>. W tym przykładzie założono, że istnieje <xref:System.Windows.Ink.IncrementalHitTester> o nazwie `eraseTester`.  
  
 [!code-csharp[InkEraser#10](~/samples/snippets/csharp/VS_Snippets_Wpf/InkEraser/CSharp/InkEraser.cs#10)]
 [!code-vb[InkEraser#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkEraser/VisualBasic/InkEraser.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Ink.IncrementalHitTester.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsValid : bool" Usage="System.Windows.Ink.IncrementalHitTester.IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera czy <see cref="T:System.Windows.Ink.IncrementalHitTester" /> jest testowanie trafień.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Windows.Ink.IncrementalHitTester" /> zostaje trafiony testowania; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.IncrementalHitTester.IsValid%2A> Zwraca `true` do momentu <xref:System.Windows.Ink.IncrementalHitTester.EndHitTesting%2A> jest wywoływana. Zwraca `false`.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak sprawdzić, czy <xref:System.Windows.Ink.IncrementalHitTester> jest prawidłowy, przed dodaniem do niej punktów. W tym przykładzie założono, że istnieje <xref:System.Windows.Ink.IncrementalHitTester> o nazwie `eraseTester`.  
  
 [!code-csharp[InkEraser#9](~/samples/snippets/csharp/VS_Snippets_Wpf/InkEraser/CSharp/InkEraser.cs#9)]
 [!code-vb[InkEraser#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkEraser/VisualBasic/InkEraser.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>