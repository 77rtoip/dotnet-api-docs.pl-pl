<Type Name="IncrementalHitTester" FullName="System.Windows.Ink.IncrementalHitTester">
  <Metadata><Meta Name="ms.openlocfilehash" Value="06901bff515e621b56d3ff73fe6d4a7e9dbe59ac" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69174792" /></Metadata><TypeSignature Language="C#" Value="public abstract class IncrementalHitTester" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit IncrementalHitTester extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Ink.IncrementalHitTester" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class IncrementalHitTester" />
  <TypeSignature Language="C++ CLI" Value="public ref class IncrementalHitTester abstract" />
  <TypeSignature Language="F#" Value="type IncrementalHitTester = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Dynamicznie wykonuje testowanie trafień na <see cref="T:System.Windows.Ink.Stroke" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dynamicznie Określa, czy użytkownik "trafi" a <xref:System.Windows.Ink.Stroke>. <xref:System.Windows.Ink.IncrementalHitTester> Ta klasa umożliwia bezpośrednią opinię użytkownika w sytuacjach, takich jak zaznaczanie i wymazywanie pisma odręcznego.  
  
 Istnieją dwie klasy dziedziczące z <xref:System.Windows.Ink.IncrementalHitTester>:  
  
-   <xref:System.Windows.Ink.IncrementalLassoHitTester> Trafień testuje pociągnięcia przez określenie, czy ścieżka Lasso jest otoczona.  
  
-   <xref:System.Windows.Ink.IncrementalStrokeHitTester> Trafień testuje pociągnięcia przez określenie miejsca, w którym ścieżka gumki przecina się.  
  
 Poniższa tabela zawiera informacje o tym, w jaki sposób zarządzać atramentem cyfrowym w kontrolce niestandardowej.  
  
|Aby to zrobić...|Zobacz ten artykuł|  
|-----------------|----------------------|  
|Tworzenie kontrolki, która zbiera cyfrowy atrament|[Tworzenie kontrolki danych wejściowych pisma odręcznego](~/docs/framework/wpf/advanced/creating-an-ink-input-control.md)|  
|Tworzenie kontrolki umożliwiającej użytkownikowi wybranie atramentu|[Instrukcje: Wybierz atrament z kontrolki niestandardowej](~/docs/framework/wpf/advanced/how-to-select-ink-from-a-custom-control.md)|  
|Tworzenie kontrolki umożliwiającej użytkownikowi wskazanie wymazania atramentu|[Instrukcje: Wymazywanie pisma odręcznego na kontrolce niestandardowej](~/docs/framework/wpf/advanced/how-to-erase-ink-on-a-custom-control.md)|  
  
<a name="xamlTextUsage_IncrementalHitTester"></a>   
## <a name="xaml-text-usage"></a>Użycie tekstu w języku XAML  
 Ta klasa nie jest zwykle używana w języku XAML.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób dodawania punktów do <xref:System.Windows.Ink.IncrementalHitTester> momentu, gdy użytkownik wprowadza dane przy użyciu pióra. Przykład zawiera <xref:System.Windows.Ink.IncrementalStrokeHitTester.StrokeHit> procedurę obsługi zdarzeń, która wymazuje część <xref:System.Windows.Ink.Stroke> , z której użytkownik przecina. Aby utworzyć kontrolkę, która umożliwia użytkownikowi wymazanie pisma odręcznego, zobacz [How to: Wymazywanie pisma odręcznego na kontrolce](~/docs/framework/wpf/advanced/how-to-erase-ink-on-a-custom-control.md)niestandardowej.  
  
 [!code-csharp[InkEraser#6](~/samples/snippets/csharp/VS_Snippets_Wpf/InkEraser/CSharp/InkEraser.cs#6)]
 [!code-vb[InkEraser#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkEraser/VisualBasic/InkEraser.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddPoint">
      <MemberSignature Language="C#" Value="public void AddPoint (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPoint(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.IncrementalHitTester.AddPoint(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPoint(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.AddPoint : System.Windows.Point -&gt; unit" Usage="incrementalHitTester.AddPoint point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">, <see cref="T:System.Windows.Point" /> Aby dodać <see cref="T:System.Windows.Ink.IncrementalHitTester" />do.</param>
        <summary><see cref="T:System.Windows.Point" /> Dodaje<see cref="T:System.Windows.Ink.IncrementalHitTester" />do.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Windows.Ink.IncrementalHitTester> jak dodać punkty do momentu, gdy użytkownik wprowadza dane za pomocą myszy. Przykład zawiera <xref:System.Windows.Ink.IncrementalStrokeHitTester.StrokeHit> procedurę obsługi zdarzeń, która wymazuje część <xref:System.Windows.Ink.Stroke> , z której użytkownik przecina. Aby utworzyć kontrolkę, która umożliwia użytkownikowi wymazanie pisma odręcznego, zobacz [How to: Wymazywanie pisma odręcznego na kontrolce](~/docs/framework/wpf/advanced/how-to-erase-ink-on-a-custom-control.md)niestandardowej.  
  
 [!code-csharp[InkEraser#11](~/samples/snippets/csharp/VS_Snippets_Wpf/InkEraser/CSharp/InkEraser.cs#11)]
 [!code-vb[InkEraser#11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkEraser/VisualBasic/InkEraser.vb#11)]  
[!code-csharp[InkEraser#2](~/samples/snippets/csharp/VS_Snippets_Wpf/InkEraser/CSharp/InkEraser.cs#2)]
[!code-vb[InkEraser#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkEraser/VisualBasic/InkEraser.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddPoints">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje punkty do <see cref="T:System.Windows.Ink.IncrementalHitTester" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddPoints">
      <MemberSignature Language="C#" Value="public void AddPoints (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPoints(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.IncrementalHitTester.AddPoints(System.Collections.Generic.IEnumerable{System.Windows.Point})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPoints (points As IEnumerable(Of Point))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPoints(System::Collections::Generic::IEnumerable&lt;System::Windows::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddPoints : seq&lt;System.Windows.Point&gt; -&gt; unit" Usage="incrementalHitTester.AddPoints points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
      </Parameters>
      <Docs>
        <param name="points">Tablica typu <see cref="T:System.Windows.Point" /> do dodania <see cref="T:System.Windows.Ink.IncrementalHitTester" />do elementu.</param>
        <summary>Dodaje punkty do <see cref="T:System.Windows.Ink.IncrementalHitTester" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład ilustruje sposób dodawania punktów do <xref:System.Windows.Ink.IncrementalHitTester> momentu, gdy użytkownik wprowadza dane przy użyciu pióra. Przykład zawiera <xref:System.Windows.Ink.IncrementalStrokeHitTester.StrokeHit> procedurę obsługi zdarzeń, która wymazuje część <xref:System.Windows.Ink.Stroke> , z której użytkownik przecina. Aby utworzyć kontrolkę, która umożliwia użytkownikowi wymazanie pisma odręcznego, zobacz [How to: Wymazywanie pisma odręcznego na kontrolce](~/docs/framework/wpf/advanced/how-to-erase-ink-on-a-custom-control.md)niestandardowej.  
  
 [!code-csharp[InkEraser#6](~/samples/snippets/csharp/VS_Snippets_Wpf/InkEraser/CSharp/InkEraser.cs#6)]
 [!code-vb[InkEraser#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkEraser/VisualBasic/InkEraser.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPoints">
      <MemberSignature Language="C#" Value="public void AddPoints (System.Windows.Input.StylusPointCollection stylusPoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPoints(class System.Windows.Input.StylusPointCollection stylusPoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.IncrementalHitTester.AddPoints(System.Windows.Input.StylusPointCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPoints (stylusPoints As StylusPointCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPoints(System::Windows::Input::StylusPointCollection ^ stylusPoints);" />
      <MemberSignature Language="F#" Value="member this.AddPoints : System.Windows.Input.StylusPointCollection -&gt; unit" Usage="incrementalHitTester.AddPoints stylusPoints" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPoints" Type="System.Windows.Input.StylusPointCollection" />
      </Parameters>
      <Docs>
        <param name="stylusPoints">Kolekcja <see cref="T:System.Windows.Input.StylusPoint" /> obiektów, które mają zostać dodane <see cref="T:System.Windows.Ink.IncrementalHitTester" />do.</param>
        <summary>Dodaje określone <see cref="T:System.Windows.Input.StylusPoint" /> obiekty <see cref="T:System.Windows.Ink.IncrementalHitTester" />do.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład ilustruje sposób dodawania punktów do <xref:System.Windows.Ink.IncrementalStrokeHitTester> momentu, gdy użytkownik wprowadza dane przy użyciu pióra. Przykład zawiera <xref:System.Windows.Ink.IncrementalStrokeHitTester.StrokeHit> procedurę obsługi zdarzeń, która wymazuje część <xref:System.Windows.Ink.Stroke> , z której użytkownik przecina. Aby utworzyć kontrolkę, która umożliwia użytkownikowi wymazanie pisma odręcznego, zobacz [How to: Wymazywanie pisma odręcznego na kontrolce](~/docs/framework/wpf/advanced/how-to-erase-ink-on-a-custom-control.md)niestandardowej.  
  
 [!code-csharp[InkEraser#6](~/samples/snippets/csharp/VS_Snippets_Wpf/InkEraser/CSharp/InkEraser.cs#6)]
 [!code-vb[InkEraser#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkEraser/VisualBasic/InkEraser.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPointsCore">
      <MemberSignature Language="C#" Value="protected abstract void AddPointsCore (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; points);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddPointsCore(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.IncrementalHitTester.AddPointsCore(System.Collections.Generic.IEnumerable{System.Windows.Point})" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub AddPointsCore (points As IEnumerable(Of Point))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void AddPointsCore(System::Collections::Generic::IEnumerable&lt;System::Windows::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="abstract member AddPointsCore : seq&lt;System.Windows.Point&gt; -&gt; unit" Usage="incrementalHitTester.AddPointsCore points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
      </Parameters>
      <Docs>
        <param name="points">Punkty do dodania</param>
        <summary>Dodaje punkty do <see cref="T:System.Windows.Ink.IncrementalHitTester" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndHitTesting">
      <MemberSignature Language="C#" Value="public void EndHitTesting ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndHitTesting() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.IncrementalHitTester.EndHitTesting" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndHitTesting ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndHitTesting();" />
      <MemberSignature Language="F#" Value="member this.EndHitTesting : unit -&gt; unit" Usage="incrementalHitTester.EndHitTesting " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia zasoby używane przez <see cref="T:System.Windows.Ink.IncrementalHitTester" />program.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływanie <xref:System.Windows.Ink.IncrementalHitTester> metody po zakończeniu testowania trafień. <xref:System.Windows.Ink.IncrementalHitTester.EndHitTesting%2A>  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób wywoływania <xref:System.Windows.Ink.IncrementalHitTester.EndHitTesting%2A> po <xref:System.Windows.Ink.IncrementalHitTester>użyciu. W <xref:System.Windows.Ink.IncrementalHitTester> tym przykładzie przyjęto założenie, `eraseTester`że istnieje wywołana.  
  
 [!code-csharp[InkEraser#10](~/samples/snippets/csharp/VS_Snippets_Wpf/InkEraser/CSharp/InkEraser.cs#10)]
 [!code-vb[InkEraser#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkEraser/VisualBasic/InkEraser.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Ink.IncrementalHitTester.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsValid : bool" Usage="System.Windows.Ink.IncrementalHitTester.IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera czy <see cref="T:System.Windows.Ink.IncrementalHitTester" /> test trafień jest aktywny.</summary>
        <value><see langword="true" />w przypadku testowania trafień; <see langword="false" />w przeciwnym razie. <see cref="T:System.Windows.Ink.IncrementalHitTester" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwraca do momentu <xref:System.Windows.Ink.IncrementalHitTester.EndHitTesting%2A>wywołania. <xref:System.Windows.Ink.IncrementalHitTester.IsValid%2A> `true` Następnie zwraca wartość `false`.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak sprawdzić, <xref:System.Windows.Ink.IncrementalHitTester> czy jest on prawidłowy przed dodaniem do niego punktów. W <xref:System.Windows.Ink.IncrementalHitTester> tym przykładzie przyjęto założenie, `eraseTester`że istnieje wywołana.  
  
 [!code-csharp[InkEraser#9](~/samples/snippets/csharp/VS_Snippets_Wpf/InkEraser/CSharp/InkEraser.cs#9)]
 [!code-vb[InkEraser#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkEraser/VisualBasic/InkEraser.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
