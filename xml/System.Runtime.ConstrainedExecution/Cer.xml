<Type Name="Cer" FullName="System.Runtime.ConstrainedExecution.Cer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="23cdbbda92dc12a56457f1d88e9fa3cae6c7ff8a" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58725617" /></Metadata><TypeSignature Language="C#" Value="public enum Cer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed Cer extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.ConstrainedExecution.Cer" />
  <TypeSignature Language="VB.NET" Value="Public Enum Cer" />
  <TypeSignature Language="C++ CLI" Value="public enum class Cer" />
  <TypeSignature Language="F#" Value="type Cer = " />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b229b-101">Określa zachowanie metody wywołanego w obrębie regionu ograniczonego wykonania.</span><span class="sxs-lookup"><span data-stu-id="b229b-101">Specifies a method's behavior when called within a constrained execution region.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b229b-102"><xref:System.Runtime.ConstrainedExecution.Cer> Wyliczenie określa zachowanie metody, typ lub zestawu w obrębie regionu ograniczonego wykonania (CER).</span><span class="sxs-lookup"><span data-stu-id="b229b-102">The <xref:System.Runtime.ConstrainedExecution.Cer> enumeration specifies the behavior of a method, type, or assembly within a constrained execution region (CER).</span></span> <span data-ttu-id="b229b-103">Użyj jednej z trzech wartości dostępne, aby wskazać, że jednostka zostanie wykonana pomyślnie, nie ma informacji o CER lub (sposób deterministyczny) może być może zgłosić powodzenia lub niepowodzenia.</span><span class="sxs-lookup"><span data-stu-id="b229b-103">Use one of the three available values to indicate that the entity will succeed, has no knowledge of a CER, or might (deterministically) be able to report success or failure.</span></span>  
  
 <span data-ttu-id="b229b-104">CER zapewnia gwarantuje, że obszar kodu będą wykonywane nieprzerwanie nawet wtedy, gdy wyjątek asynchroniczny, np. wyjątek braku pamięci przerwanie wątku lub przepełnienie stosu jest wywoływane.</span><span class="sxs-lookup"><span data-stu-id="b229b-104">A CER provides guarantees that the region of code will execute uninterrupted even if an asynchronous exception such as an aborted thread out-of-memory exception, or stack overflow is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b229b-105">Poniższy przykład kodu demonstruje użycie <xref:System.Runtime.ConstrainedExecution.Cer> wyliczenie podczas określania region ograniczonego wykonania dla metody.</span><span class="sxs-lookup"><span data-stu-id="b229b-105">The following code example demonstrates the use of the <xref:System.Runtime.ConstrainedExecution.Cer> enumeration when specifying a constrained execution region for a method.</span></span> <span data-ttu-id="b229b-106">Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.%23ctor%2A> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="b229b-106">This code example is part of a larger example provided for the <xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.%23ctor%2A> constructor.</span></span>  
  
 [!code-csharp[System.Runtime.ConstrainedExecution#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.ConstrainedExecution/cs/program.cs#3)]
 [!code-vb[System.Runtime.ConstrainedExecution#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.ConstrainedExecution/vb/program.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Runtime.CompilerServices.RuntimeHelpers.PrepareConstrainedRegions" />
    <altmember cref="M:System.Runtime.CompilerServices.RuntimeHelpers.PrepareMethod(System.RuntimeMethodHandle)" />
    <related type="Article" href="https://msdn.microsoft.com/library/99354547-39c1-4b0b-8553-938e8f8d1808"><span data-ttu-id="b229b-107">Ograniczone regiony wykonania</span><span class="sxs-lookup"><span data-stu-id="b229b-107">Constrained Execution Regions</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/cf624c1f-c160-46a1-bb2b-213587688da7"><span data-ttu-id="b229b-108">Najlepsze rozwiązania dotyczące niezawodności</span><span class="sxs-lookup"><span data-stu-id="b229b-108">Reliability Best Practices</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="MayFail">
      <MemberSignature Language="C#" Value="MayFail" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.ConstrainedExecution.Cer MayFail = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.ConstrainedExecution.Cer.MayFail" />
      <MemberSignature Language="VB.NET" Value="MayFail" />
      <MemberSignature Language="C++ CLI" Value="MayFail" />
      <MemberSignature Language="F#" Value="MayFail = 1" Usage="System.Runtime.ConstrainedExecution.Cer.MayFail" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.ConstrainedExecution.Cer</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b229b-109">W przypadku wyjątkowych warunkach metoda może zakończyć się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="b229b-109">In the face of exceptional conditions, the method might fail.</span></span> <span data-ttu-id="b229b-110">W tym przypadku metoda zgłosi powrót do wywoływania metody czy zakończonych powodzeniem lub niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="b229b-110">In this case, the method will report back to the calling method whether it succeeded or failed.</span></span> <span data-ttu-id="b229b-111">Metoda musi mieć CER wokół treści metody, aby upewnić się, że zwracana wartość może raportować.</span><span class="sxs-lookup"><span data-stu-id="b229b-111">The method must have a CER around the method body to ensure that it can report the return value.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.ConstrainedExecution.Cer None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.ConstrainedExecution.Cer.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Runtime.ConstrainedExecution.Cer.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.ConstrainedExecution.Cer</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b229b-112">Metoda, typ lub zespół nie używa koncepcji CER.</span><span class="sxs-lookup"><span data-stu-id="b229b-112">The method, type, or assembly has no concept of a CER.</span></span> <span data-ttu-id="b229b-113">Go nie korzystaj z gwarancje CER.</span><span class="sxs-lookup"><span data-stu-id="b229b-113">It does not take advantage of CER guarantees.</span></span> <span data-ttu-id="b229b-114">Oznacza to, że:</span><span class="sxs-lookup"><span data-stu-id="b229b-114">This implies the following:</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   <span data-ttu-id="b229b-115">W przypadku wyjątkowych warunkach metoda może zakończyć się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="b229b-115">In the face of exceptional conditions the method might fail.</span></span>  
  
-   <span data-ttu-id="b229b-116">Metoda może być lub może nie raport, który go nie powiodło się (jest niejednoznaczne).</span><span class="sxs-lookup"><span data-stu-id="b229b-116">The method might or might not report that it failed (it is non-deterministic).</span></span>  
  
-   <span data-ttu-id="b229b-117">Metoda nie jest zapisywany z CERs pamiętając, (która jest najbardziej prawdopodobnym scenariuszu).</span><span class="sxs-lookup"><span data-stu-id="b229b-117">The method is not written with CERs in mind (which is the most likely scenario).</span></span>  
  
 <span data-ttu-id="b229b-118">Jeśli metoda, typ lub zestawu nie jest jawnie oznaczona zakończyło się sukcesem, jest niejawnie oznaczone jako `Cer.None`.</span><span class="sxs-lookup"><span data-stu-id="b229b-118">If a method, type, or assembly is not explicitly marked to succeed, it is implicitly marked as `Cer.None`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Success">
      <MemberSignature Language="C#" Value="Success" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.ConstrainedExecution.Cer Success = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.ConstrainedExecution.Cer.Success" />
      <MemberSignature Language="VB.NET" Value="Success" />
      <MemberSignature Language="C++ CLI" Value="Success" />
      <MemberSignature Language="F#" Value="Success = 2" Usage="System.Runtime.ConstrainedExecution.Cer.Success" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.ConstrainedExecution.Cer</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b229b-119">W przypadku wyjątkowych warunkach metoda jest gwarantowane zakończyło się sukcesem.</span><span class="sxs-lookup"><span data-stu-id="b229b-119">In the face of exceptional conditions, the method is guaranteed to succeed.</span></span> <span data-ttu-id="b229b-120">Zawsze należy konstruować CER wokół metodę, która jest wywoływana, nawet gdy jest wywoływana z w obrębie regionu innego niż CER.</span><span class="sxs-lookup"><span data-stu-id="b229b-120">You should always construct a CER around the method that is called, even when it is called from within a non-CER region.</span></span> <span data-ttu-id="b229b-121">Metoda jest powodzenia, jeśli rozwiązanie przeznaczenie.</span><span class="sxs-lookup"><span data-stu-id="b229b-121">A method is successful if it accomplishes what is intended.</span></span> <span data-ttu-id="b229b-122">Na przykład oznaczenie <see cref="P:System.Collections.ArrayList.Count" /> z <c>ReliabilityContractAttribute(Cer.Success)</c> oznacza, że po uruchomieniu w obszarze CER zawsze zwraca liczbę elementów w <see cref="T:System.Collections.ArrayList" /> i może nigdy nie opuszczają wewnętrzne pola nieokreślony stan.</span><span class="sxs-lookup"><span data-stu-id="b229b-122">For example, marking <see cref="P:System.Collections.ArrayList.Count" /> with <c>ReliabilityContractAttribute(Cer.Success)</c> implies that when it is run under a CER, it always returns a count of the number of elements in the <see cref="T:System.Collections.ArrayList" /> and it can never leave the internal fields in an undetermined state.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>