<Type Name="CriticalFinalizerObject" FullName="System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="890f38d913d3105c403a89adfdf49007cc35a27d" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69272846" /></Metadata><TypeSignature Language="C#" Value="public abstract class CriticalFinalizerObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CriticalFinalizerObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CriticalFinalizerObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class CriticalFinalizerObject abstract" />
  <TypeSignature Language="F#" Value="type CriticalFinalizerObject = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9038d-101">Zapewnia, że wszystkie kody finalizowania w klasach pochodnych są oznaczone jako krytyczne.</span><span class="sxs-lookup"><span data-stu-id="9038d-101">Ensures that all finalization code in derived classes is marked as critical.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9038d-102">Klasy pochodne z <xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject> klasy są niejawnie traktowane jako region ograniczonego wykonania (CER).</span><span class="sxs-lookup"><span data-stu-id="9038d-102">Classes deriving from the <xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject> class are implicitly treated as a constrained execution region (CER).</span></span>  <span data-ttu-id="9038d-103">Wymaga to kodu w finalizatorze tylko do wywoływania kodu z silną umową niezawodności.</span><span class="sxs-lookup"><span data-stu-id="9038d-103">This requires code in the finalizer to only call code with a strong reliability contract.</span></span> <span data-ttu-id="9038d-104">Aby uzyskać więcej informacji na temat Cers, <xref:System.Runtime.ConstrainedExecution> Zobacz Przestrzeń nazw.</span><span class="sxs-lookup"><span data-stu-id="9038d-104">For more information about CERs, see the <xref:System.Runtime.ConstrainedExecution> namespace.</span></span>  
  
 <span data-ttu-id="9038d-105">W klasach pochodzących od <xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject> klasy, środowisko uruchomieniowe języka wspólnego (CLR) gwarantuje, że wszystkie krytyczne kod finalizacji będzie miał możliwość wykonania, pod warunkiem, że finalizator postępuje zgodnie z regułami dla cer, nawet w sytuacjach, gdy środowisko CLR wymusza wymuszenie odładowania domeny aplikacji lub przerwanie wątku.</span><span class="sxs-lookup"><span data-stu-id="9038d-105">In classes derived from the <xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject> class, the common language runtime (CLR) guarantees that all critical finalization code will be given the opportunity to execute, provided the finalizer follows the rules for a CER, even in situations where the CLR forcibly unloads an application domain or aborts a thread.</span></span> <span data-ttu-id="9038d-106">Jeśli finalizator narusza reguły dla programu CER, może nie zostać pomyślnie wykonany.</span><span class="sxs-lookup"><span data-stu-id="9038d-106">If a finalizer violates the rules for a CER, it might not successfully execute.</span></span> <span data-ttu-id="9038d-107">Ponadto środowisko CLR zapewnia słabe porządkowanie między normalnymi i krytycznymi finalizatorami: w przypadku obiektów odzyskiwanych przez wyrzucanie elementów bezużytecznych w tym samym czasie wszystkie niekrytyczne finalizatory są wywoływane przed którymkolwiek z najważniejszych finalizatorów.</span><span class="sxs-lookup"><span data-stu-id="9038d-107">In addition, the CLR establishes a weak ordering among normal and critical finalizers: for objects reclaimed by garbage collection at the same time, all the noncritical finalizers are called before any of the critical finalizers.</span></span> <span data-ttu-id="9038d-108">Na przykład Klasa, taka jak <xref:System.IO.FileStream>, która przechowuje dane <xref:System.Runtime.InteropServices.SafeHandle> w klasie pochodzącej z <xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject>, może uruchamiać standardowy finalizator, aby opróżnić istniejące dane buforowane.</span><span class="sxs-lookup"><span data-stu-id="9038d-108">For example, a class such as <xref:System.IO.FileStream>, which holds data in the <xref:System.Runtime.InteropServices.SafeHandle> class that is derived from <xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject>, can run a standard finalizer to flush out existing buffered data.</span></span>  
  
 <span data-ttu-id="9038d-109">W większości przypadków nie trzeba pisać klas, które pochodzą od <xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject> klasy.</span><span class="sxs-lookup"><span data-stu-id="9038d-109">In most cases, you do not need to write classes that derive from the <xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject> class.</span></span> <span data-ttu-id="9038d-110">Biblioteka klas .NET Framework udostępnia dwie klasy <xref:System.Runtime.InteropServices.SafeHandle> i <xref:System.Runtime.InteropServices.CriticalHandle>, które zapewniają krytyczne funkcje finalizowania obsługi zasobów.</span><span class="sxs-lookup"><span data-stu-id="9038d-110">The .NET Framework class library provides two classes, <xref:System.Runtime.InteropServices.SafeHandle> and <xref:System.Runtime.InteropServices.CriticalHandle>, that provide critical finalization functionality for handle resources.</span></span> <span data-ttu-id="9038d-111">Ponadto .NET Framework dostarcza zestaw klas prepisanych, pochodzących od <xref:System.Runtime.InteropServices.SafeHandle> klasy, i ten zestaw znajduje się <xref:Microsoft.Win32.SafeHandles> w przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="9038d-111">Furthermore, the .NET Framework provides a set of prewritten classes derived from the <xref:System.Runtime.InteropServices.SafeHandle> class, and this set is located in the <xref:Microsoft.Win32.SafeHandles> namespace.</span></span> <span data-ttu-id="9038d-112">Te klasy zostały zaprojektowane w celu zapewnienia typowych funkcji obsługi plików i obsługi systemu operacyjnego.</span><span class="sxs-lookup"><span data-stu-id="9038d-112">These classes are designed to provide common functionality for supporting file and operating system handles.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9038d-113">Poniższy przykład kodu pokazuje użycie <xref:Microsoft.Win32.SafeHandles.SafeFileHandle> klasy w celu zapewnienia krytycznej finalizacji strumieni danych wejściowych i wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="9038d-113">The following code example shows the use of the <xref:Microsoft.Win32.SafeHandles.SafeFileHandle> class to provide critical finalization for the standard input and output streams.</span></span> <span data-ttu-id="9038d-114">Pochodna z klasy jest przenoszona do strumienia pliku w <xref:System.IO.FileStream> konstruktorze. <xref:System.Runtime.InteropServices.SafeHandle> <xref:Microsoft.Win32.SafeHandles.SafeFileHandle></span><span class="sxs-lookup"><span data-stu-id="9038d-114">The <xref:Microsoft.Win32.SafeHandles.SafeFileHandle>, derived from the <xref:System.Runtime.InteropServices.SafeHandle> class, is passed to the file stream in the <xref:System.IO.FileStream> constructor.</span></span>  
  
 [!code-csharp[SafeHandle.SafeFileHandle#1](~/samples/snippets/csharp/VS_Snippets_CLR/SafeHandle.SafeFileHandle/CS/program.cs#1)]
 [!code-vb[SafeHandle.SafeFileHandle#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SafeHandle.SafeFileHandle/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9038d-115">w celu uzyskania uprawnień do wywoływania kodu niezarządzanego.</span><span class="sxs-lookup"><span data-stu-id="9038d-115">for permission to call unmanaged code.</span></span> <span data-ttu-id="9038d-116">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="9038d-116">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="9038d-117">Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="9038d-117">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="9038d-118">aby uzyskać pełne zaufanie dla obiektów dziedziczących.</span><span class="sxs-lookup"><span data-stu-id="9038d-118">for full trust for inheritors.</span></span> <span data-ttu-id="9038d-119">Nie można użyć tej klasy w kodzie częściowo zaufanym.</span><span class="sxs-lookup"><span data-stu-id="9038d-119">This class cannot be used by partially trusted code.</span></span></permission>
    <altmember cref="T:System.Runtime.InteropServices.SafeHandle" />
    <altmember cref="T:System.Runtime.InteropServices.CriticalHandle" />
    <altmember cref="N:Microsoft.Win32.SafeHandles" />
    <related type="Article" href="https://msdn.microsoft.com/library/99354547-39c1-4b0b-8553-938e8f8d1808"><span data-ttu-id="9038d-120">Ograniczone regiony wykonania</span><span class="sxs-lookup"><span data-stu-id="9038d-120">Constrained Execution Regions</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/cf624c1f-c160-46a1-bb2b-213587688da7"><span data-ttu-id="9038d-121">Najlepsze rozwiązania dotyczące niezawodności</span><span class="sxs-lookup"><span data-stu-id="9038d-121">Reliability Best Practices</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CriticalFinalizerObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CriticalFinalizerObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9038d-122">Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="9038d-122">Initializes a new instance of the <see cref="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9038d-123">w celu uzyskania uprawnień do wywoływania kodu niezarządzanego.</span><span class="sxs-lookup"><span data-stu-id="9038d-123">for permission to call unmanaged code.</span></span> <span data-ttu-id="9038d-124">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="9038d-124">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="9038d-125">Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="9038d-125">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="9038d-126">aby uzyskać pełne zaufanie dla obiektów dziedziczących.</span><span class="sxs-lookup"><span data-stu-id="9038d-126">for full trust for inheritors.</span></span> <span data-ttu-id="9038d-127">Nie można użyć tej klasy w kodzie częściowo zaufanym.</span><span class="sxs-lookup"><span data-stu-id="9038d-127">This class cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CriticalFinalizerObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!CriticalFinalizerObject ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="criticalFinalizerObject.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9038d-128">Zwalnia wszystkie zasoby używane przez <see cref="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" /> klasę.</span><span class="sxs-lookup"><span data-stu-id="9038d-128">Releases all the resources used by the <see cref="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9038d-129">Finalizator dla dowolnego typu, który pochodzi z <xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject> , ma możliwość wykonania i nie zostanie przerwany, przy założeniu, że finalizator jest prawidłowo zgodny z regułami dla regionu ograniczonego wykonania (CER).</span><span class="sxs-lookup"><span data-stu-id="9038d-129">The finalizer for any types deriving from <xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject> is given the opportunity to execute and will not be aborted, assuming the finalizer correctly follows the rules for a constrained execution region (CER).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
