<Type Name="IBaseIterator&lt;TValue&gt;" FullName="Microsoft.VisualC.StlClr.Generic.IBaseIterator&lt;TValue&gt;">
  <TypeSignature Language="C#" Value="public interface IBaseIterator&lt;TValue&gt; : ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IBaseIterator`1&lt;TValue&gt; implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBaseIterator(Of TValue)&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TValue&gt;&#xA;public interface class IBaseIterator : ICloneable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TValue">[!INCLUDE[cpp_iter_arg](~/includes/cpp-iter-arg-md.md)]</typeparam>
    <summary><span data-ttu-id="2cc3c-101">Definiuje interfejs podstawowy dla wszystkich Iteratory STL/CLR.</span><span class="sxs-lookup"><span data-stu-id="2cc3c-101">Defines the base interface for all STL/CLR iterators.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="container">
      <MemberSignature Language="C#" Value="public object container ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object container() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.container" />
      <MemberSignature Language="VB.NET" Value="Public Function container () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ container();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2cc3c-102">Pobiera kontener, który przechodzi przez iterator.</span><span class="sxs-lookup"><span data-stu-id="2cc3c-102">Gets the container that the iterator is traversing.</span></span></summary>
        <returns><span data-ttu-id="2cc3c-103">Kontener, który przechodzi przez iterator.</span><span class="sxs-lookup"><span data-stu-id="2cc3c-103">The container that the iterator is traversing.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="next">
      <MemberSignature Language="C#" Value="public void next ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void next() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.next" />
      <MemberSignature Language="VB.NET" Value="Public Sub next ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void next();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2cc3c-104">Zwiększa iteratora do następnego położenia w kontenerze podstawowej lub na pierwszym miejscu poza koniec kontenera, jeśli całkowicie przechodzić kontenera.</span><span class="sxs-lookup"><span data-stu-id="2cc3c-104">Increments the iterator to the next position in the underlying container, or to the first position beyond the end of container if the container has been completely traversed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="valid">
      <MemberSignature Language="C#" Value="public bool valid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool valid() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.valid" />
      <MemberSignature Language="VB.NET" Value="Public Function valid () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool valid();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2cc3c-105">Określa, czy iteratora jest prawidłowa i czy można bezpiecznie Eksplorowanie kontenera podstawowej.</span><span class="sxs-lookup"><span data-stu-id="2cc3c-105">Determines whether the iterator is valid and can be safely used to traverse the underlying container.</span></span></summary>
        <returns>
          <span data-ttu-id="2cc3c-106"><see langword="true" /> Jeśli iteratora jest prawidłowa i bezpiecznie korzystać; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2cc3c-106"><see langword="true" /> if the iterator is valid and safe to use; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>