<Type Name="IValueProvider" FullName="System.Windows.Automation.Provider.IValueProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0d891c1f038e6eee95b8b85ed17d6a77c0253d83" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39881543" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IValueProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IValueProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.IValueProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IValueProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IValueProvider" />
  <TypeSignature Language="F#" Value="type IValueProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.Guid("c7935180-6fb3-4201-b174-7df73adbf64a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="82203-101">Udostępnia metody i właściwości w celu obsługi dostępu klientów automatyzacji interfejsu użytkownika do kontrolki o wewnętrznej wartości nie obejmuje zakres i może być reprezentowany jako ciąg.</span>
      <span class="sxs-lookup">
        <span data-stu-id="82203-101">Exposes methods and properties to support UI Automation client access to controls having an intrinsic value that does not span a range and that can be represented as a string.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82203-102">Wartość formantu może być lub może nie być nieedytowalne w zależności od formantu i jego ustawień.</span><span class="sxs-lookup"><span data-stu-id="82203-102">The value of the control may or may not be editable depending on the control and its settings.</span></span>  
  
 <span data-ttu-id="82203-103">Implementowane w dostawcy automatyzacji interfejsu użytkownika, który musi obsługiwać <xref:System.Windows.Automation.ValuePattern> — wzorzec kontrolki.</span><span class="sxs-lookup"><span data-stu-id="82203-103">Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.ValuePattern> control pattern.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.ValuePattern" />
  </Docs>
  <Members>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IValueProvider.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Automation.Provider.IValueProvider.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="82203-104">Pobiera wartość określającą, czy wartość kontrolki jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82203-104">Gets a value that specifies whether the value of a control is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="82203-105">
            <see langword="true" /> Jeśli wartość jest tylko do odczytu. <see langword="false" /> Jeśli można go modyfikować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82203-105">
              <see langword="true" /> if the value is read-only; <see langword="false" /> if it can be modified.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82203-106">Kontrolki powinny mieć jego <xref:System.Windows.Automation.AutomationElement.IsEnabledProperty> równa `true` i jego <xref:System.Windows.Automation.ValuePattern.IsReadOnlyProperty> równa `false` przed zezwoleniem na wywołanie <xref:System.Windows.Automation.Provider.IValueProvider.SetValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="82203-106">A control should have its <xref:System.Windows.Automation.AutomationElement.IsEnabledProperty> set to `true` and its <xref:System.Windows.Automation.ValuePattern.IsReadOnlyProperty> set to `false` before allowing a call to <xref:System.Windows.Automation.Provider.IValueProvider.SetValue%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="82203-107">Poniższy przykład pokazuje implementację tej metody dla formantu, który umożliwia jego wartość ma zostać zmieniony.</span><span class="sxs-lookup"><span data-stu-id="82203-107">The following example shows an implementation of this method for a control that allows its value to be changed.</span></span>  
  
 [!code-csharp[UIAIValueProvider_snip#IsReadOnly](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIValueProvider_snip/CSharp/ValueFragment.cs#isreadonly)]
 [!code-vb[UIAIValueProvider_snip#IsReadOnly](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIValueProvider_snip/visualbasic/valuefragment.vb#isreadonly)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : string -&gt; unit" Usage="iValueProvider.SetValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="82203-108">Wartość do ustawienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82203-108">The value to set.</span>
          </span>
          <span data-ttu-id="82203-109">Dostawca jest odpowiedzialny za konwertowania wartości na odpowiedni typ danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82203-109">The provider is responsible for converting the value to the appropriate data type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82203-110">Ustawia wartość kontrolki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82203-110">Sets the value of a control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82203-111">Formanty edycji jednowierszowego obsługuje programowy dostęp do ich zawartości poprzez implementację <xref:System.Windows.Automation.Provider.IValueProvider>.</span><span class="sxs-lookup"><span data-stu-id="82203-111">Single-line edit controls support programmatic access to their contents by implementing <xref:System.Windows.Automation.Provider.IValueProvider>.</span></span> <span data-ttu-id="82203-112">Jednak nie należy implementować formantów edycji wielowierszowe <xref:System.Windows.Automation.Provider.IValueProvider>; zamiast tego zapewniają dostęp do swojej zawartości poprzez implementację <xref:System.Windows.Automation.Provider.ITextProvider>.</span><span class="sxs-lookup"><span data-stu-id="82203-112">However, multi-line edit controls do not implement <xref:System.Windows.Automation.Provider.IValueProvider>; instead they provide access to their content by implementing <xref:System.Windows.Automation.Provider.ITextProvider>.</span></span>  
  
 <span data-ttu-id="82203-113">Określa, takich jak <xref:System.Windows.Automation.ControlType.ListItem> i <xref:System.Windows.Automation.ControlType.TreeItem> musi implementować <xref:System.Windows.Automation.Provider.IValueProvider> w przypadku edycji wartości dowolnych elementów, niezależnie od bieżącego trybu edycji kontrolki.</span><span class="sxs-lookup"><span data-stu-id="82203-113">Controls such as <xref:System.Windows.Automation.ControlType.ListItem> and <xref:System.Windows.Automation.ControlType.TreeItem> must implement <xref:System.Windows.Automation.Provider.IValueProvider> if the value of any of the items is editable, regardless of the current edit mode of the control.</span></span> <span data-ttu-id="82203-114">Formant nadrzędny musi implementować też <xref:System.Windows.Automation.Provider.IValueProvider> Jeśli elementy podrzędne są edytowalne.</span><span class="sxs-lookup"><span data-stu-id="82203-114">The parent control must also implement <xref:System.Windows.Automation.Provider.IValueProvider> if the child items are editable.</span></span>  
  
 <span data-ttu-id="82203-115">![Element edytowalnej listy. ] (~/add/media/uia-valuepattern-editable-listitem.PNG "Edytowalnej listy elementów.")</span><span class="sxs-lookup"><span data-stu-id="82203-115">![Editable list item.](~/add/media/uia-valuepattern-editable-listitem.PNG "Editable list item.")</span></span>  
<span data-ttu-id="82203-116">Przykład elementu edytowalnej listy</span><span class="sxs-lookup"><span data-stu-id="82203-116">Example of an Editable List Item</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="82203-117">Poniższy przykład kodu pokazuje niestandardowy formant, który umożliwia jego wartość należy ustawić na ciąg o długości ograniczone.</span><span class="sxs-lookup"><span data-stu-id="82203-117">The following example code demonstrates a custom control that allows its value to be set to a string of limited length.</span></span>  
  
 [!code-csharp[UIAIValueProvider_snip#SetValue](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIValueProvider_snip/CSharp/ValueFragment.cs#setvalue)]
 [!code-vb[UIAIValueProvider_snip#SetValue](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIValueProvider_snip/visualbasic/valuefragment.vb#setvalue)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="82203-118">Jeśli informacje specyficzne dla ustawień regionalnych jest przekazywany do formantu w ma niewłaściwy format, takie jak Data niepoprawnie sformatowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82203-118">If locale-specific information is passed to a control in an incorrect format such as an incorrectly formatted date.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="82203-119">Jeśli nowa wartość nie można przekonwertować ciągu na format kontrolki jest rozpoznawane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82203-119">If a new value cannot be converted from a string to a format the control recognizes.</span>
          </span>
        </exception>
        <exception cref="T:System.Windows.Automation.ElementNotEnabledException">
          <span data-ttu-id="82203-120">Gdy podejmowana jest próba do manipulowania formant, który nie jest włączona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82203-120">When an attempt is made to manipulate a control that is not enabled.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IValueProvider.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Windows.Automation.Provider.IValueProvider.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="82203-121">Pobiera wartość kontrolki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82203-121">Gets the value of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="82203-122">Wartość kontrolki jako ciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82203-122">The value of the control as a string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82203-123">Formanty edycji jednowierszowego obsługuje programowy dostęp do ich zawartości poprzez implementację <xref:System.Windows.Automation.Provider.IValueProvider> (oprócz <xref:System.Windows.Automation.Provider.ITextProvider>).</span><span class="sxs-lookup"><span data-stu-id="82203-123">Single-line edit controls support programmatic access to their contents by implementing <xref:System.Windows.Automation.Provider.IValueProvider> (in addition to <xref:System.Windows.Automation.Provider.ITextProvider>).</span></span> <span data-ttu-id="82203-124">Jednak nie należy implementować formantów edycji wielowierszowe <xref:System.Windows.Automation.Provider.IValueProvider>.</span><span class="sxs-lookup"><span data-stu-id="82203-124">However, multi-line edit controls do not implement <xref:System.Windows.Automation.Provider.IValueProvider>.</span></span>  
  
 <span data-ttu-id="82203-125">Aby pobrać zawartość tekstową z formantami edycji wielowierszowego, należy zaimplementować formantów <xref:System.Windows.Automation.Provider.ITextProvider>.</span><span class="sxs-lookup"><span data-stu-id="82203-125">To retrieve the textual contents of multi-line edit controls, the controls must implement <xref:System.Windows.Automation.Provider.ITextProvider>.</span></span> <span data-ttu-id="82203-126">Jednak <xref:System.Windows.Automation.Provider.ITextProvider> nie obsługuje ustawiania wartości formantu.</span><span class="sxs-lookup"><span data-stu-id="82203-126">However, <xref:System.Windows.Automation.Provider.ITextProvider> does not support setting the value of a control.</span></span>  
  
 <span data-ttu-id="82203-127"><xref:System.Windows.Automation.Provider.IValueProvider> nie obsługuje pobierania formatowania informacji lub podciągu wartości.</span><span class="sxs-lookup"><span data-stu-id="82203-127"><xref:System.Windows.Automation.Provider.IValueProvider> does not support the retrieval of formatting information or substring values.</span></span> <span data-ttu-id="82203-128">Implementowanie <xref:System.Windows.Automation.Provider.ITextProvider> w tych scenariuszach.</span><span class="sxs-lookup"><span data-stu-id="82203-128">Implement <xref:System.Windows.Automation.Provider.ITextProvider> in these scenarios.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="82203-129">Implementacja tej metody dla formantu, który umożliwia jego wartość do pobrania można znaleźć w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="82203-129">The following example shows an implementation of this method for a control that allows its value to be retrieved.</span></span>  
  
 [!code-csharp[UIAIValueProvider_snip#Value](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIValueProvider_snip/CSharp/ValueFragment.cs#value)]
 [!code-vb[UIAIValueProvider_snip#Value](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIValueProvider_snip/visualbasic/valuefragment.vb#value)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>