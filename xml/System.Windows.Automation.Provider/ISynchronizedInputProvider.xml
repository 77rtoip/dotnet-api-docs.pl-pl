<Type Name="ISynchronizedInputProvider" FullName="System.Windows.Automation.Provider.ISynchronizedInputProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1d5fd5346f15f709e5a83d737ee52b5e44f7f412" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36371054" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ISynchronizedInputProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISynchronizedInputProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.ISynchronizedInputProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISynchronizedInputProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISynchronizedInputProvider" />
  <TypeSignature Language="F#" Value="type ISynchronizedInputProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("29db1a06-02ce-4cf7-9b42-565d4fab20ee")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Udostępnia metody w celu ułatwienia automatyzacji interfejsu użytkownika klienta dostępu do formantów, które obsługują zsynchronizowane dane wejściowe.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementuje ten interfejs dla dostawcy automatyzacji interfejsu użytkownika, który musi obsługiwać <xref:System.Windows.Automation.SynchronizedInputPattern> — wzorzec formantu.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ISynchronizedInputProvider.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel();" />
      <MemberSignature Language="F#" Value="abstract member Cancel : unit -&gt; unit" Usage="iSynchronizedInputProvider.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Kończy nasłuchiwanie. dla danych wejściowych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli obecnie nasłuchuje dostawcę dla danych wejściowych, zostanie przywrócona do normalnego działania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartListening">
      <MemberSignature Language="C#" Value="public void StartListening (System.Windows.Automation.SynchronizedInputType inputType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartListening(valuetype System.Windows.Automation.SynchronizedInputType inputType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ISynchronizedInputProvider.StartListening(System.Windows.Automation.SynchronizedInputType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartListening (inputType As SynchronizedInputType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartListening(System::Windows::Automation::SynchronizedInputType inputType);" />
      <MemberSignature Language="F#" Value="abstract member StartListening : System.Windows.Automation.SynchronizedInputType -&gt; unit" Usage="iSynchronizedInputProvider.StartListening inputType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputType" Type="System.Windows.Automation.SynchronizedInputType" />
      </Parameters>
      <Docs>
        <param name="inputType">Typ danych wejściowych do nasłuchiwania.</param>
        <summary>Określa, który start dostawcy nasłuchiwania dla danych wejściowych określonego typu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy WPF znajduje dopasowywania danych wejściowych, sprawdza trasy zdarzenia przychodzącego. Jeśli element automatyzacji, który oczekuje na dane wejściowe nie jest w trasie, dane wejściowe są usuwane i <xref:System.Windows.Automation.SynchronizedInputPattern.InputDiscardedEvent> zdarzenia. Jeśli dane wejściowe nie zostanie odebrana przez element automatyzacji nasłuchiwania dla tego typu <xref:System.Windows.Automation.SynchronizedInputPattern.InputReachedTargetEvent> zdarzenie jest zgłoszono; w przeciwnym razie <xref:System.Windows.Automation.SynchronizedInputPattern.InputReachedOtherElementEvent> zdarzenia.  
  
 Po odebraniu danych wejściowych, dostawca kończy nasłuchiwanie i kontynuuje działanie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>