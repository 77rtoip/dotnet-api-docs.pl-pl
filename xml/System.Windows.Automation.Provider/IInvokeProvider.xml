<Type Name="IInvokeProvider" FullName="System.Windows.Automation.Provider.IInvokeProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="95dc8eb38da621a8ae0284925a51e2415c88123e" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56392400" /></Metadata><TypeSignature Language="C#" Value="public interface IInvokeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInvokeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.IInvokeProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInvokeProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IInvokeProvider" />
  <TypeSignature Language="F#" Value="type IInvokeProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("54fcb24b-e18e-47a2-b4d3-eccbe77599a2")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Udostępnia metody i właściwości do obsługi automatyzacji interfejsu użytkownika klienta dostępu do formantów, które inicjowania lub wykonania akcji pojedynczego, jednoznaczną i nie zachowują stan, gdy aktywowany.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementowane w dostawcy automatyzacji interfejsu użytkownika, który musi obsługiwać <xref:System.Windows.Automation.InvokePattern> — wzorzec kontrolki.  
  
 Implementowanie kontrolek <xref:System.Windows.Automation.Provider.IInvokeProvider> jeśli takie samo zachowanie nie jest dostępna za pośrednictwem innego dostawcy wzorzec kontroli. Na przykład jeśli <xref:System.Windows.Automation.InvokePattern.Invoke%2A> metoda na formant wykonuje ta sama akcja co <xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A> lub <xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A> metody, formant nie należy implementować <xref:System.Windows.Automation.Provider.IInvokeProvider>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.InvokePattern" />
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-overview.md">Wzorce formantów automatyzacji interfejsu użytkownika — omówienie</related>
    <related type="Article" href="https://msdn.microsoft.com/library/6acc6d08-bd67-4e2e-915c-9c1d34eb86fe">Implementacja dostawcy automatyzacji interfejsu użytkownika po stronie serwera</related>
    <related type="Article" href="https://msdn.microsoft.com/library/3584c0a1-9cd0-4968-8b63-b06390890ef6">Implementacja dostawcy automatyzacji interfejsu użytkownika po stronie klienta</related>
    <related type="Article" href="https://msdn.microsoft.com/library/0d635c35-ffa8-4dc8-bbc9-12fcd5445776">Obsługa wzorców formantów dostawcy automatyzacji interfejsu użytkownika</related>
    <related type="Article" href="https://msdn.microsoft.com/library/e5b1e239-49f8-468e-bfec-1fba02ec9ac4">Implementacja wzorca kontrolki wywołania automatyzacji interfejsu użytkownika</related>
  </Docs>
  <Members>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke();" />
      <MemberSignature Language="F#" Value="abstract member Invoke : unit -&gt; unit" Usage="iInvokeProvider.Invoke " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wysyła żądanie aktywacji formantu i zainicjować jej działanie pojedynczego, jednoznaczną.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> jest wywołanie asynchroniczne i musi zwracać się natychmiast bez blokowania.  
  
> [!NOTE]
>  To zachowanie jest szczególnie istotne dla formantów, które bezpośrednio lub pośrednio, uruchamianie modalnego okna dialogowego po wywołaniu. Klienta automatyzacji interfejsu użytkownika, który zainicjowanego zdarzenia pozostanie zablokowany do czasu zamknięcia modalne okno dialogowe.  
  
 <xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> wywołuje <xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent> zdarzeń. Jeśli to możliwe powinno być generowane zdarzenie, po jego skojarzone z akcją kontrolki.  
  
 <xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent> powinien być wywoływany przed obsługi <xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> żądania w następujących scenariuszach:  
  
-   Nie jest możliwe lub praktyczne czekać, aż do zakończenia akcji.  
  
-   Akcja wymaga interakcji z użytkownikiem.  
  
-   Akcja jest czasochłonne i spowoduje, że klienta wywołującego zablokować na dłuższy czas.  
  
   
  
## Examples  
 Poniższy przykład implementuje <xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> metody obsługi zdarzeń MouseDown kontrolki. Przyjęto założenie, że `providerControl` jest zmienną członkowską, który został zainicjowany, gdy klasa została skonstruowana.  
  
 [!code-csharp[UIAProvider_snip#106](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAProvider_snip/CSharp/Invoker.cs#106)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotEnabledException">Jeśli formant nie jest włączona.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/e5b1e239-49f8-468e-bfec-1fba02ec9ac4">Implementacja wzorca kontrolki wywołania automatyzacji interfejsu użytkownika</related>
      </Docs>
    </Member>
  </Members>
</Type>