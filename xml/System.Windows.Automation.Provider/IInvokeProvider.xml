<Type Name="IInvokeProvider" FullName="System.Windows.Automation.Provider.IInvokeProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="69684f930fc01234fc01f45ae1c33ab01fa4baae" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48648260" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IInvokeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInvokeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.IInvokeProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInvokeProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IInvokeProvider" />
  <TypeSignature Language="F#" Value="type IInvokeProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("54fcb24b-e18e-47a2-b4d3-eccbe77599a2")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c4427-101">Udostępnia metody i właściwości do obsługi automatyzacji interfejsu użytkownika klienta dostępu do formantów, które inicjowania lub wykonania akcji pojedynczego, jednoznaczną i nie zachowują stan, gdy aktywowany.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c4427-101">Exposes methods and properties to support UI Automation client access to controls that initiate or perform a single, unambiguous action and do not maintain state when activated.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4427-102">Implementowane w dostawcy automatyzacji interfejsu użytkownika, który musi obsługiwać <xref:System.Windows.Automation.InvokePattern> — wzorzec kontrolki.</span><span class="sxs-lookup"><span data-stu-id="c4427-102">Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.InvokePattern> control pattern.</span></span>  
  
 <span data-ttu-id="c4427-103">Implementowanie kontrolek <xref:System.Windows.Automation.Provider.IInvokeProvider> jeśli takie samo zachowanie nie jest dostępna za pośrednictwem innego dostawcy wzorzec kontroli.</span><span class="sxs-lookup"><span data-stu-id="c4427-103">Controls implement <xref:System.Windows.Automation.Provider.IInvokeProvider> if the same behavior is not exposed through another control pattern provider.</span></span> <span data-ttu-id="c4427-104">Na przykład jeśli <xref:System.Windows.Automation.InvokePattern.Invoke%2A> metoda na formant wykonuje ta sama akcja co <xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A> lub <xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A> metody, formant nie należy implementować <xref:System.Windows.Automation.Provider.IInvokeProvider>.</span><span class="sxs-lookup"><span data-stu-id="c4427-104">For example, if the <xref:System.Windows.Automation.InvokePattern.Invoke%2A> method on a control performs the same action as the <xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A> or <xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A> method, the control should not implement <xref:System.Windows.Automation.Provider.IInvokeProvider>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.InvokePattern" />
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-overview.md">
      <span data-ttu-id="c4427-105">Wzorce kontrolek automatyzacji interfejsu użytkownika — omówienie</span>
      <span class="sxs-lookup">
        <span data-stu-id="c4427-105">UI Automation Control Patterns Overview</span>
      </span>
    </related>
    <related type="Article" href="http://msdn.microsoft.com/library/6acc6d08-bd67-4e2e-915c-9c1d34eb86fe">
      <span data-ttu-id="c4427-106">Implementacja dostawcy automatyzacji interfejsu użytkownika po stronie serwera</span>
      <span class="sxs-lookup">
        <span data-stu-id="c4427-106">Server-side UI Automation Provider Implementation</span>
      </span>
    </related>
    <related type="Article" href="http://msdn.microsoft.com/library/3584c0a1-9cd0-4968-8b63-b06390890ef6">
      <span data-ttu-id="c4427-107">Implementacja dostawcy automatyzacji interfejsu użytkownika po stronie klienta</span>
      <span class="sxs-lookup">
        <span data-stu-id="c4427-107">Client-side UI Automation Provider Implementation</span>
      </span>
    </related>
    <related type="Article" href="http://msdn.microsoft.com/library/0d635c35-ffa8-4dc8-bbc9-12fcd5445776">
      <span data-ttu-id="c4427-108">Obsługa wzorców kontrolek dostawcy automatyzacji interfejsu użytkownika</span>
      <span class="sxs-lookup">
        <span data-stu-id="c4427-108">Support Control Patterns in a UI Automation Provider</span>
      </span>
    </related>
    <related type="Article" href="http://msdn.microsoft.com/library/e5b1e239-49f8-468e-bfec-1fba02ec9ac4">
      <span data-ttu-id="c4427-109">Implementacja wzorca kontrolki wywołania automatyzacji interfejsu użytkownika</span>
      <span class="sxs-lookup">
        <span data-stu-id="c4427-109">Implementing the UI Automation Invoke Control Pattern</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke();" />
      <MemberSignature Language="F#" Value="abstract member Invoke : unit -&gt; unit" Usage="iInvokeProvider.Invoke " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4427-110">Wysyła żądanie aktywacji formantu i zainicjować jej działanie pojedynczego, jednoznaczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4427-110">Sends a request to activate a control and initiate its single, unambiguous action.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4427-111"><xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> jest wywołanie asynchroniczne i musi zwracać się natychmiast bez blokowania.</span><span class="sxs-lookup"><span data-stu-id="c4427-111"><xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> is an asynchronous call and must return immediately without blocking.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4427-112">To zachowanie jest szczególnie istotne dla formantów, które bezpośrednio lub pośrednio, uruchamianie modalnego okna dialogowego po wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="c4427-112">This behavior is particularly critical for controls that, directly or indirectly, launch a modal dialog when invoked.</span></span> <span data-ttu-id="c4427-113">Klienta automatyzacji interfejsu użytkownika, który zainicjowanego zdarzenia pozostanie zablokowany do czasu zamknięcia modalne okno dialogowe.</span><span class="sxs-lookup"><span data-stu-id="c4427-113">Any UI Automation client that instigated the event will remain blocked until the modal dialog is closed.</span></span>  
  
 <span data-ttu-id="c4427-114"><xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> wywołuje <xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="c4427-114"><xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> raises the <xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent> event.</span></span> <span data-ttu-id="c4427-115">Jeśli to możliwe powinno być generowane zdarzenie, po jego skojarzone z akcją kontrolki.</span><span class="sxs-lookup"><span data-stu-id="c4427-115">If possible, the event should be raised after the control has completed its associated action.</span></span>  
  
 <span data-ttu-id="c4427-116"><xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent> powinien być wywoływany przed obsługi <xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> żądania w następujących scenariuszach:</span><span class="sxs-lookup"><span data-stu-id="c4427-116"><xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent> should be raised before servicing the <xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> request in the following scenarios:</span></span>  
  
-   <span data-ttu-id="c4427-117">Nie jest możliwe lub praktyczne czekać, aż do zakończenia akcji.</span><span class="sxs-lookup"><span data-stu-id="c4427-117">It is not possible or practical to wait until the action is complete.</span></span>  
  
-   <span data-ttu-id="c4427-118">Akcja wymaga interakcji z użytkownikiem.</span><span class="sxs-lookup"><span data-stu-id="c4427-118">The action requires user interaction.</span></span>  
  
-   <span data-ttu-id="c4427-119">Akcja jest czasochłonne i spowoduje, że klienta wywołującego zablokować na dłuższy czas.</span><span class="sxs-lookup"><span data-stu-id="c4427-119">The action is time-consuming and will cause the calling client to block for a significant length of time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4427-120">Poniższy przykład implementuje <xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> metody obsługi zdarzeń MouseDown kontrolki.</span><span class="sxs-lookup"><span data-stu-id="c4427-120">The following example implements the <xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> method on the MouseDown event handler of a control.</span></span> <span data-ttu-id="c4427-121">Przyjęto założenie, że `providerControl` jest zmienną członkowską, który został zainicjowany, gdy klasa została skonstruowana.</span><span class="sxs-lookup"><span data-stu-id="c4427-121">Assume that `providerControl` is a member variable that was initialized when the class was constructed.</span></span>  
  
 [!code-csharp[UIAProvider_snip#106](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAProvider_snip/CSharp/Invoker.cs#106)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotEnabledException">
          <span data-ttu-id="c4427-122">Jeśli formant nie jest włączona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4427-122">If the control is not enabled.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/e5b1e239-49f8-468e-bfec-1fba02ec9ac4">
          <span data-ttu-id="c4427-123">Implementacja wzorca kontrolki wywołania automatyzacji interfejsu użytkownika</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4427-123">Implementing the UI Automation Invoke Control Pattern</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>