<Type Name="IInvokeProvider" FullName="System.Windows.Automation.Provider.IInvokeProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5dc9eaaa0269cf3395508ac3c7f6f813965eb07d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30696074" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IInvokeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInvokeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.IInvokeProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInvokeProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IInvokeProvider" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("54fcb24b-e18e-47a2-b4d3-eccbe77599a2")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Udostępnia metody i właściwości automatyzacji interfejsu użytkownika klienta dostęp do formantów, które inicjowania lub wykonania akcji jednej, jednoznaczne i nie obsługują stanu po uaktywnieniu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zaimplementowany w dostawcy automatyzacji interfejsu użytkownika, który musi obsługiwać <xref:System.Windows.Automation.InvokePattern> — wzorzec formantu.  
  
 Formanty zaimplementować <xref:System.Windows.Automation.Provider.IInvokeProvider> jeśli takie samo zachowanie nie jest dostępne za pośrednictwem innego dostawcy — wzorzec formantu. Na przykład jeśli <xref:System.Windows.Automation.InvokePattern.Invoke%2A> ta sama akcja co wykonuje metodę w formancie <xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A> lub <xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A> metody formantu nie powinny implementować <xref:System.Windows.Automation.Provider.IInvokeProvider>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.InvokePattern" />
  </Docs>
  <Members>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wysyła żądanie do aktywowania formantu i akcja jego jednej, jednoznaczne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> to wywołanie asynchroniczne i musi zwracać natychmiast bez blokowania.  
  
> [!NOTE]
>  To zachowanie jest szczególnie istotne dla formantów, które bezpośrednio lub pośrednio, uruchom modalnego okna dialogowego, gdy została wywołana. Automatyzacja interfejsu użytkownika klienta, który zainicjowanego zdarzenia pozostanie zablokowane do czasu zamknięcia modalnego okna dialogowego.  
  
 <xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> zgłasza <xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent> zdarzeń. Jeśli to możliwe zdarzenia powinien być zgłaszany po zakończeniu jego skojarzone z akcją formantu.  
  
 <xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent> powinien być wywoływany przed obsługi <xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> żądania w następujących scenariuszach:  
  
-   Nie jest możliwe lub praktyczne poczekaj aż zakończy się akcja.  
  
-   Akcja wymaga interakcji z użytkownikiem.  
  
-   Akcja jest czasochłonne i spowoduje, że klienta wywołującego zablokować od dłuższego czasu.  
  
   
  
## Examples  
 Poniższy przykład implementuje <xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> metoda obsługi zdarzeń MouseDown formantu. Przyjęto założenie, że `providerControl` jest zmiennej członkowskiej, który został zainicjowany, gdy klasa został utworzony.  
  
 [!code-csharp[UIAProvider_snip#106](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAProvider_snip/CSharp/Invoker.cs#106)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotEnabledException">Jeśli formant nie jest włączony.</exception>
      </Docs>
    </Member>
  </Members>
</Type>