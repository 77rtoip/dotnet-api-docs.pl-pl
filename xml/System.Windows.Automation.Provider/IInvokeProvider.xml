<Type Name="IInvokeProvider" FullName="System.Windows.Automation.Provider.IInvokeProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5dc9eaaa0269cf3395508ac3c7f6f813965eb07d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30696074" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IInvokeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInvokeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.IInvokeProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInvokeProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IInvokeProvider" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("54fcb24b-e18e-47a2-b4d3-eccbe77599a2")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a5981-101">Udostępnia metody i właściwości automatyzacji interfejsu użytkownika klienta dostęp do formantów, które inicjowania lub wykonania akcji jednej, jednoznaczne i nie obsługują stanu po uaktywnieniu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a5981-101">Exposes methods and properties to support UI Automation client access to controls that initiate or perform a single, unambiguous action and do not maintain state when activated.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5981-102">Zaimplementowany w dostawcy automatyzacji interfejsu użytkownika, który musi obsługiwać <xref:System.Windows.Automation.InvokePattern> — wzorzec formantu.</span><span class="sxs-lookup"><span data-stu-id="a5981-102">Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.InvokePattern> control pattern.</span></span>  
  
 <span data-ttu-id="a5981-103">Formanty zaimplementować <xref:System.Windows.Automation.Provider.IInvokeProvider> jeśli takie samo zachowanie nie jest dostępne za pośrednictwem innego dostawcy — wzorzec formantu.</span><span class="sxs-lookup"><span data-stu-id="a5981-103">Controls implement <xref:System.Windows.Automation.Provider.IInvokeProvider> if the same behavior is not exposed through another control pattern provider.</span></span> <span data-ttu-id="a5981-104">Na przykład jeśli <xref:System.Windows.Automation.InvokePattern.Invoke%2A> ta sama akcja co wykonuje metodę w formancie <xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A> lub <xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A> metody formantu nie powinny implementować <xref:System.Windows.Automation.Provider.IInvokeProvider>.</span><span class="sxs-lookup"><span data-stu-id="a5981-104">For example, if the <xref:System.Windows.Automation.InvokePattern.Invoke%2A> method on a control performs the same action as the <xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A> or <xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A> method, the control should not implement <xref:System.Windows.Automation.Provider.IInvokeProvider>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.InvokePattern" />
  </Docs>
  <Members>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a5981-105">Wysyła żądanie do aktywowania formantu i akcja jego jednej, jednoznaczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5981-105">Sends a request to activate a control and initiate its single, unambiguous action.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5981-106"><xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> to wywołanie asynchroniczne i musi zwracać natychmiast bez blokowania.</span><span class="sxs-lookup"><span data-stu-id="a5981-106"><xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> is an asynchronous call and must return immediately without blocking.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a5981-107">To zachowanie jest szczególnie istotne dla formantów, które bezpośrednio lub pośrednio, uruchom modalnego okna dialogowego, gdy została wywołana.</span><span class="sxs-lookup"><span data-stu-id="a5981-107">This behavior is particularly critical for controls that, directly or indirectly, launch a modal dialog when invoked.</span></span> <span data-ttu-id="a5981-108">Automatyzacja interfejsu użytkownika klienta, który zainicjowanego zdarzenia pozostanie zablokowane do czasu zamknięcia modalnego okna dialogowego.</span><span class="sxs-lookup"><span data-stu-id="a5981-108">Any UI Automation client that instigated the event will remain blocked until the modal dialog is closed.</span></span>  
  
 <span data-ttu-id="a5981-109"><xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> zgłasza <xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="a5981-109"><xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> raises the <xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent> event.</span></span> <span data-ttu-id="a5981-110">Jeśli to możliwe zdarzenia powinien być zgłaszany po zakończeniu jego skojarzone z akcją formantu.</span><span class="sxs-lookup"><span data-stu-id="a5981-110">If possible, the event should be raised after the control has completed its associated action.</span></span>  
  
 <span data-ttu-id="a5981-111"><xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent> powinien być wywoływany przed obsługi <xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> żądania w następujących scenariuszach:</span><span class="sxs-lookup"><span data-stu-id="a5981-111"><xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent> should be raised before servicing the <xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> request in the following scenarios:</span></span>  
  
-   <span data-ttu-id="a5981-112">Nie jest możliwe lub praktyczne poczekaj aż zakończy się akcja.</span><span class="sxs-lookup"><span data-stu-id="a5981-112">It is not possible or practical to wait until the action is complete.</span></span>  
  
-   <span data-ttu-id="a5981-113">Akcja wymaga interakcji z użytkownikiem.</span><span class="sxs-lookup"><span data-stu-id="a5981-113">The action requires user interaction.</span></span>  
  
-   <span data-ttu-id="a5981-114">Akcja jest czasochłonne i spowoduje, że klienta wywołującego zablokować od dłuższego czasu.</span><span class="sxs-lookup"><span data-stu-id="a5981-114">The action is time-consuming and will cause the calling client to block for a significant length of time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a5981-115">Poniższy przykład implementuje <xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> metoda obsługi zdarzeń MouseDown formantu.</span><span class="sxs-lookup"><span data-stu-id="a5981-115">The following example implements the <xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> method on the MouseDown event handler of a control.</span></span> <span data-ttu-id="a5981-116">Przyjęto założenie, że `providerControl` jest zmiennej członkowskiej, który został zainicjowany, gdy klasa został utworzony.</span><span class="sxs-lookup"><span data-stu-id="a5981-116">Assume that `providerControl` is a member variable that was initialized when the class was constructed.</span></span>  
  
 [!code-csharp[UIAProvider_snip#106](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAProvider_snip/CSharp/Invoker.cs#106)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotEnabledException">
          <span data-ttu-id="a5981-117">Jeśli formant nie jest włączony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5981-117">If the control is not enabled.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>