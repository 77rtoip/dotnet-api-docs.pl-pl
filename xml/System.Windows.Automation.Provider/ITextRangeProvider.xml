<Type Name="ITextRangeProvider" FullName="System.Windows.Automation.Provider.ITextRangeProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="67ed0d50e905d13f155ad6d9af79aaeb9b73490b" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39805977" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ITextRangeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITextRangeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.ITextRangeProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITextRangeProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITextRangeProvider" />
  <TypeSignature Language="F#" Value="type ITextRangeProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.Guid("5347ad7b-c355-46f8-aff5-909033582f63")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="163de-101">Udostępnia metody i właściwości w celu obsługi dostępu klientów automatyzacji interfejsu użytkownika do ciągłego tekstu w kontenerze tekstu, który implementuje <see cref="T:System.Windows.Automation.Provider.ITextProvider" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="163de-101">Exposes methods and properties to support UI Automation client access to a span of continuous text in a text container that implements <see cref="T:System.Windows.Automation.Provider.ITextProvider" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="163de-102">Implementowane w dostawcy automatyzacji interfejsu użytkownika, który musi obsługiwać <xref:System.Windows.Automation.TextPattern> — wzorzec kontrolki.</span><span class="sxs-lookup"><span data-stu-id="163de-102">Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.TextPattern> control pattern.</span></span>  
  
 <span data-ttu-id="163de-103">A <xref:System.Windows.Automation.Text.TextPatternRange> może reprezentować punkt wstawiania, podzbiór lub cały tekst w <xref:System.Windows.Automation.TextPattern> kontenera.</span><span class="sxs-lookup"><span data-stu-id="163de-103">A <xref:System.Windows.Automation.Text.TextPatternRange> can represent an insertion point, a subset, or all of the text in a <xref:System.Windows.Automation.TextPattern> container.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.Text.TextPatternRange" />
  </Docs>
  <Members>
    <Member MemberName="AddToSelection">
      <MemberSignature Language="C#" Value="public void AddToSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddToSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddToSelection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddToSelection();" />
      <MemberSignature Language="F#" Value="abstract member AddToSelection : unit -&gt; unit" Usage="iTextRangeProvider.AddToSelection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="163de-104">Dodaje do kolekcji wyróżnionego tekstu w kontenerze tekst, który obsługuje wiele rozłączne wybrane opcje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-104">Adds to the collection of highlighted text in a text container that supports multiple, disjoint selections.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="163de-105">Przenosi punkt wstawiania do obszaru nowe zaznaczenie.</span><span class="sxs-lookup"><span data-stu-id="163de-105">The text insertion point moves to the area of the new selection.</span></span>  
  
 <span data-ttu-id="163de-106">Zapewniającym zakres tekstu wymiaru degeneracji przenosi punkt wstawiania.</span><span class="sxs-lookup"><span data-stu-id="163de-106">Providing a degenerate text range moves the insertion point.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="163de-107">Jeśli tekst dostawca nie obsługuje wielu rozłączne wybrane opcje (czyli <see cref="P:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection" /> musi mieć wartość <see langword="Multiple" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-107">If text provider does not support multiple, disjoint selections (that is, <see cref="P:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection" /> must have a value of <see langword="Multiple" />).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.ITextRangeProvider Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.ITextRangeProvider Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As ITextRangeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::ITextRangeProvider ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Windows.Automation.Provider.ITextRangeProvider" Usage="iTextRangeProvider.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.ITextRangeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="163de-108">Zwraca nowy <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /> identyczne do oryginalnego <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /> i dziedziczy wszystkie właściwości oryginału.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-108">Returns a new <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /> identical to the original <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /> and inheriting all properties of the original.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="163de-109">Nowy zakres tekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-109">The new text range.</span>
          </span>
          <span data-ttu-id="163de-110">Odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic) nigdy nie jest zwracana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-110">A null reference (<see langword="Nothing" /> in Visual Basic) is never returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="163de-111">Nowy zakres mogą być zmieniane niezależnie od oryginału.</span><span class="sxs-lookup"><span data-stu-id="163de-111">The new range can be manipulated independently from the original.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public bool Compare (System.Windows.Automation.Provider.ITextRangeProvider range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Compare(class System.Windows.Automation.Provider.ITextRangeProvider range) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.Compare(System.Windows.Automation.Provider.ITextRangeProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (range As ITextRangeProvider) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Compare(System::Windows::Automation::Provider::ITextRangeProvider ^ range);" />
      <MemberSignature Language="F#" Value="abstract member Compare : System.Windows.Automation.Provider.ITextRangeProvider -&gt; bool" Usage="iTextRangeProvider.Compare range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="System.Windows.Automation.Provider.ITextRangeProvider" />
      </Parameters>
      <Docs>
        <param name="range">
          <span data-ttu-id="163de-112">Zakres tekstu do porównania</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-112">A text range to compare</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="163de-113">Zwraca wartość wskazującą, czy zakres ( <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> punktu końcowego <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> punktu końcowego) tekstu zakresu jest taki sam jak inny zakres tekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-113">Returns a value that indicates whether the span (the <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> endpoint to the <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoint) of a text range is the same as another text range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="163de-114">
            <see langword="true" /> Jeśli zakres obu zakresów tekstu jest identyczna; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-114">
              <see langword="true" /> if the span of both text ranges is identical; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="163de-115">Jeśli zakres, w którą jest porównywany nie pochodzi z tego samego dostawcy tekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-115">If the range being compared does not come from the same text provider.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CompareEndpoints">
      <MemberSignature Language="C#" Value="public int CompareEndpoints (System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, System.Windows.Automation.Provider.ITextRangeProvider targetRange, System.Windows.Automation.Text.TextPatternRangeEndpoint targetEndpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareEndpoints(valuetype System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, class System.Windows.Automation.Provider.ITextRangeProvider targetRange, valuetype System.Windows.Automation.Text.TextPatternRangeEndpoint targetEndpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareEndpoints (endpoint As TextPatternRangeEndpoint, targetRange As ITextRangeProvider, targetEndpoint As TextPatternRangeEndpoint) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareEndpoints(System::Windows::Automation::Text::TextPatternRangeEndpoint endpoint, System::Windows::Automation::Provider::ITextRangeProvider ^ targetRange, System::Windows::Automation::Text::TextPatternRangeEndpoint targetEndpoint);" />
      <MemberSignature Language="F#" Value="abstract member CompareEndpoints : System.Windows.Automation.Text.TextPatternRangeEndpoint * System.Windows.Automation.Provider.ITextRangeProvider * System.Windows.Automation.Text.TextPatternRangeEndpoint -&gt; int" Usage="iTextRangeProvider.CompareEndpoints (endpoint, targetRange, targetEndpoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Windows.Automation.Text.TextPatternRangeEndpoint" />
        <Parameter Name="targetRange" Type="System.Windows.Automation.Provider.ITextRangeProvider" />
        <Parameter Name="targetEndpoint" Type="System.Windows.Automation.Text.TextPatternRangeEndpoint" />
      </Parameters>
      <Docs>
        <param name="endpoint">
          <span data-ttu-id="163de-116">
            <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> Lub <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> punktu końcowego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-116">The <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> or <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoint of the caller.</span>
          </span>
        </param>
        <param name="targetRange">
          <span data-ttu-id="163de-117">Zakres docelowy dla porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-117">The target range for comparison.</span>
          </span>
        </param>
        <param name="targetEndpoint">
          <span data-ttu-id="163de-118">
            <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> Lub <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> punktu końcowego obiektu docelowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-118">The <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> or <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoint of the target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="163de-119">Zwraca wartość określającą, czy dwa zakresy tekstu mają identyczne punkty końcowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-119">Returns a value that specifies whether two text ranges have identical endpoints.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="163de-120">Zwraca wartość ujemną, jeśli punkt końcowy osoby wywołującej występuje we wcześniejszej części tekstu niż docelowy punkt końcowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-120">Returns a negative value if the caller's endpoint occurs earlier in the text than the target endpoint.</span>
          </span>
          <span data-ttu-id="163de-121">Zwraca zero, jeśli punkt końcowy osoby wywołującej znajduje się w tej samej lokalizacji co docelowy punkt końcowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-121">Returns zero if the caller's endpoint is at the same location as the target endpoint.</span>
          </span>
          <span data-ttu-id="163de-122">Zwraca wartość dodatnią, jeśli występuje punktu końcowego obiektu wywołującego, później w tekście niż docelowy punkt końcowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-122">Returns a positive value if the caller's endpoint occurs later in the text than the target endpoint.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="163de-123">Jeśli <paramref name="targetRange" /> jest od dostawcy inny tekst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-123">If <paramref name="targetRange" /> is from a different text provider.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExpandToEnclosingUnit">
      <MemberSignature Language="C#" Value="public void ExpandToEnclosingUnit (System.Windows.Automation.Text.TextUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExpandToEnclosingUnit(valuetype System.Windows.Automation.Text.TextUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExpandToEnclosingUnit (unit As TextUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExpandToEnclosingUnit(System::Windows::Automation::Text::TextUnit unit);" />
      <MemberSignature Language="F#" Value="abstract member ExpandToEnclosingUnit : System.Windows.Automation.Text.TextUnit -&gt; unit" Usage="iTextRangeProvider.ExpandToEnclosingUnit unit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="System.Windows.Automation.Text.TextUnit" />
      </Parameters>
      <Docs>
        <param name="unit">
          <span data-ttu-id="163de-124">Jednostka tekstową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-124">The textual unit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="163de-125">Rozszerza zakres tekstu do jednostki określony tekst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-125">Expands the text range to the specified text unit.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="163de-126">Jeśli zakres jest już dokładna liczba określonej jednostki pozostaje bez zmian.</span><span class="sxs-lookup"><span data-stu-id="163de-126">If the range is already an exact quantity of the specified units then it remains unchanged.</span></span>  
  
 <span data-ttu-id="163de-127">Istnieje szereg kroków biorących udział w tle, aby <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> pomyślnie wykonać metodę.</span><span class="sxs-lookup"><span data-stu-id="163de-127">There is a series of steps are involved behind the scenes in order for the <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> method to execute successfully.</span></span>  
  
1.  <span data-ttu-id="163de-128">Zakres tekstu jest znormalizować; oznacza to, że zakres tekstu jest zwinięte do wymiaru degeneracji zakresu na <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> punktu końcowego, co sprawia, że <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> zbędny punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="163de-128">The text range is normalized; that is, the text range is collapsed to a degenerate range at the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> endpoint, which makes the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint superfluous.</span></span> <span data-ttu-id="163de-129">Ten krok jest niezbędny usunąć niejednoznaczność w sytuacjach, w którym obejmuje zakres tekstu `unit` granice, na przykład "{N} RL [ https://www.microsoft.com/ ](https://www.microsoft.com/) jest osadzony w tekście" gdzie "{" i "}" są wartościami tekstowymi punkty końcowe zakresu.</span><span class="sxs-lookup"><span data-stu-id="163de-129">This step is necessary to remove ambiguity in situations where a text range spans `unit` boundaries; for example, "{The U}RL [https://www.microsoft.com/](https://www.microsoft.com/) is embedded in text" where "{" and "}" are the text range endpoints.</span></span>  
  
2.  <span data-ttu-id="163de-130">Wynikowy zakres zostaje przeniesiony do tyłu <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> na początku żądany `unit` granic.</span><span class="sxs-lookup"><span data-stu-id="163de-130">The resulting range is moved backward in the <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> to the beginning of the requested `unit` boundary.</span></span>  
  
3.  <span data-ttu-id="163de-131">Zakres jest przenoszony do przodu lub Wstecz w <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> , żądana liczba `unit` granic.</span><span class="sxs-lookup"><span data-stu-id="163de-131">The range is moved forward or backward in the <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> by the requested number of `unit` boundaries.</span></span>  
  
4.  <span data-ttu-id="163de-132">Zakres jest rozszerzany ze stanu wymiaru degeneracji zakresu przez przesunięcie <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> punktu końcowego za pomocą jednej żądane `unit` granic.</span><span class="sxs-lookup"><span data-stu-id="163de-132">The range is then expanded from a degenerate range state by moving the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint by one requested `unit` boundary.</span></span>  
  
 <span data-ttu-id="163de-133">![Zakres korekt przez przeniesienie & ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png "zakres korekt przez przeniesienie & ExpandToEnclosingUnit")</span><span class="sxs-lookup"><span data-stu-id="163de-133">![Range adjustments by Move & ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png "Range adjustments by Move & ExpandToEnclosingUnit")</span></span>  
<span data-ttu-id="163de-134">Przykłady jak zakres tekstu jest uwzględniany Move() i ExpandToEnclosingUnit()</span><span class="sxs-lookup"><span data-stu-id="163de-134">Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="163de-135">Te kroki są niezbędne, ponieważ jest typowe dla czytnika zawartości ekranu, można odczytać pełny wyraz, zdania lub całego akapitu na punkt wstawiania lub dowolnego położenia kursora wirtualnego.</span><span class="sxs-lookup"><span data-stu-id="163de-135">These steps are necessary since it is common for a screen reader to read out a full word, sentence, or entire paragraph at the insertion point or any virtual cursor position.</span></span>  
  
 <span data-ttu-id="163de-136"><xref:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit%2A> uwzględnia tekst ukryty i widoczne.</span><span class="sxs-lookup"><span data-stu-id="163de-136"><xref:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit%2A> respects both hidden and visible text.</span></span>  
  
 <span data-ttu-id="163de-137"><xref:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit%2A> odracza do następnej największy <xref:System.Windows.Automation.Text.TextUnit> obsługiwanych Jeśli danego <xref:System.Windows.Automation.Text.TextUnit> nie jest obsługiwana przez kontrolkę.</span><span class="sxs-lookup"><span data-stu-id="163de-137"><xref:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit%2A> defers to the next largest <xref:System.Windows.Automation.Text.TextUnit> supported if the given <xref:System.Windows.Automation.Text.TextUnit> is not supported by the control.</span></span>  
  
 <span data-ttu-id="163de-138">To zamówienie, od najmniejszego do największego, znajduje się poniżej.</span><span class="sxs-lookup"><span data-stu-id="163de-138">The order, from smallest unit to largest, is listed below.</span></span>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Character>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Format>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Word>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Line>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Paragraph>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Page>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Document>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAttribute">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.ITextRangeProvider FindAttribute (int attribute, object value, bool backward);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.ITextRangeProvider FindAttribute(int32 attribute, object value, bool backward) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(System.Int32,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAttribute (attribute As Integer, value As Object, backward As Boolean) As ITextRangeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::ITextRangeProvider ^ FindAttribute(int attribute, System::Object ^ value, bool backward);" />
      <MemberSignature Language="F#" Value="abstract member FindAttribute : int * obj * bool -&gt; System.Windows.Automation.Provider.ITextRangeProvider" Usage="iTextRangeProvider.FindAttribute (attribute, value, backward)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.ITextRangeProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="backward" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="163de-139">Atrybut do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-139">The attribute to search for.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="163de-140">Wartość atrybutu do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-140">The attribute value to search for.</span>
          </span>
          <span data-ttu-id="163de-141">Ta wartość musi odpowiadać typ określony dla atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-141">This value must match the type specified for the attribute.</span>
          </span>
        </param>
        <param name="backward">
          <span data-ttu-id="163de-142">
            <see langword="true" /> Jeśli ostatni zakres tekstu występujące powinna być zwracana zamiast pierwszy w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-142">
              <see langword="true" /> if the last occurring text range should be returned instead of the first; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="163de-143">Zwraca podzestaw zakres tekstu, który ma wartość określonego atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-143">Returns a text range subset that has the specified attribute value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="163de-144">Zakres tekstu, pasujący atrybut i wartości atrybutu; w przeciwnym razie wartość null (<see langword="Nothing" /> w języku Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-144">A text range having a matching attribute and attribute value; otherwise null (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="163de-145">Nie ma rozróżnienia między tekst ukryty i widoczne.</span><span class="sxs-lookup"><span data-stu-id="163de-145">There is no differentiation between hidden and visible text.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindText">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.ITextRangeProvider FindText (string text, bool backward, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.ITextRangeProvider FindText(string text, bool backward, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.FindText(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindText (text As String, backward As Boolean, ignoreCase As Boolean) As ITextRangeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::ITextRangeProvider ^ FindText(System::String ^ text, bool backward, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="abstract member FindText : string * bool * bool -&gt; System.Windows.Automation.Provider.ITextRangeProvider" Usage="iTextRangeProvider.FindText (text, backward, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.ITextRangeProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="backward" Type="System.Boolean" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="163de-146">Ciąg tekstowy do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-146">The text string to search for.</span>
          </span>
        </param>
        <param name="backward">
          <span data-ttu-id="163de-147">
            <see langword="true" /> Jeśli ostatni zakres tekstu występujące powinna być zwracana zamiast pierwszy w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-147">
              <see langword="true" /> if the last occurring text range should be returned instead of the first; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="163de-148">
            <see langword="true" /> Jeśli należy zignorować w przypadku; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-148">
              <see langword="true" /> if case should be ignored; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="163de-149">Zwraca podzestaw zakres tekstu, który zawiera określony tekst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-149">Returns a text range subset that contains the specified text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="163de-150">Zakres tekstu, dopasowanie określonego tekstu. w przeciwnym razie wartość null (<see langword="Nothing" /> w języku Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-150">A text range matching the specified text; otherwise null (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="163de-151">Nie ma rozróżnienia między tekst ukryty i widoczne.</span><span class="sxs-lookup"><span data-stu-id="163de-151">There is no differentiation between hidden and visible text.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttributeValue">
      <MemberSignature Language="C#" Value="public object GetAttributeValue (int attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetAttributeValue(int32 attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttributeValue (attribute As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetAttributeValue(int attribute);" />
      <MemberSignature Language="F#" Value="abstract member GetAttributeValue : int -&gt; obj" Usage="iTextRangeProvider.GetAttributeValue attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="163de-152">Atrybut tekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-152">The text attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="163de-153">Pobiera wartość określonego atrybutu w zakresie tekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-153">Retrieves the value of the specified attribute across the text range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="163de-154">Pobiera obiekt reprezentujący wartość określonego atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-154">Retrieves an object representing the value of the specified attribute.</span>
          </span>
          <span data-ttu-id="163de-155">Na przykład <c>GetAttributeValue(TextPattern.FontNameAttribute)</c> zwraca ciąg reprezentujący nazwę czcionki zakresu tekstu podczas <c>GetAttributeValue(TextPattern.IsItalicAttribute)</c> Zwraca wartość typu <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-155">For example, <c>GetAttributeValue(TextPattern.FontNameAttribute)</c> would return a string that represents the font name of the text range while <c>GetAttributeValue(TextPattern.IsItalicAttribute)</c> would return a value of type <see cref="T:System.Boolean" />.</span>
          </span>
          <span data-ttu-id="163de-156">Zwraca <see cref="F:System.Windows.Automation.TextPattern.MixedAttributeValue" /> Jeśli wartość określonego atrybutu zmienia się w zakresie tekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-156">Returns <see cref="F:System.Windows.Automation.TextPattern.MixedAttributeValue" /> if the value of the specified attribute varies over the text range.</span>
          </span>
          <span data-ttu-id="163de-157">Zwraca <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" /> Jeśli określonego atrybutu nie jest obsługiwany przez dostawcę lub formant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-157">Returns <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" /> if the specified attribute is not supported by the provider or the control.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="163de-158">Nie ma rozróżnienia między tekst ukryty i widoczne.</span><span class="sxs-lookup"><span data-stu-id="163de-158">There is no differentiation between hidden and visible text.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="163de-159">Jeśli określony atrybut nie jest prawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-159">If the specified attribute is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoundingRectangles">
      <MemberSignature Language="C#" Value="public double[] GetBoundingRectangles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64[] GetBoundingRectangles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBoundingRectangles () As Double()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;double&gt; ^ GetBoundingRectangles();" />
      <MemberSignature Language="F#" Value="abstract member GetBoundingRectangles : unit -&gt; double[]" Usage="iTextRangeProvider.GetBoundingRectangles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="163de-160">Pobiera kolekcję blokujących prostokąty dla każdego wiersza w pełni lub częściowo widoczne tekstu w zakresie tekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-160">Retrieves a collection of bounding rectangles for each fully or partially visible line of text in a text range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="163de-161">Tablica blokujących prostokąty dla każdej pełnej lub częściowej wiersza tekstu w zakresie tekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-161">An array of bounding rectangles for each full or partial line of text in a text range.</span>
          </span>
          <span data-ttu-id="163de-162">Pusta tablica dla wymiaru degeneracji zakresu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-162">An empty array for a degenerate range.</span>
          </span>
          <span data-ttu-id="163de-163">Pusta tablica zakresie tekst, który zawiera współrzędne ekranu wprowadzania do całkowicie poza ekranem przewijane poza widokiem lub zasłonięte nakładające się okna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-163">An empty array for a text range that has screen coordinates placing it completely off-screen, scrolled out of view, or obscured by an overlapping window.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderSimple[] GetChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.IRawElementProviderSimple[] GetChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.GetChildren" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildren () As IRawElementProviderSimple()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::Provider::IRawElementProviderSimple ^&gt; ^ GetChildren();" />
      <MemberSignature Language="F#" Value="abstract member GetChildren : unit -&gt; System.Windows.Automation.Provider.IRawElementProviderSimple[]" Usage="iTextRangeProvider.GetChildren " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderSimple[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="163de-164">Pobiera kolekcję wszystkie obiekty osadzone, które wchodzą w zakres tekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-164">Retrieves a collection of all embedded objects that fall within the text range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="163de-165">Kolekcja obiektów podrzędnych, które należą do zakresu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-165">A collection of child objects that fall within the range.</span>
          </span>
          <span data-ttu-id="163de-166">Elementy podrzędne, które pokrywają się z zakresu tekstu, ale nie zostały całkowicie objęte przez nią będą również uwzględniane w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-166">Children that overlap with the text range but are not entirely enclosed by it will also be included in the collection.</span>
          </span>
          <span data-ttu-id="163de-167">Zwraca pustą kolekcję, jeśli nie ma żadnych obiektów podrzędnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-167">Returns an empty collection if there are no child objects.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnclosingElement">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderSimple GetEnclosingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.IRawElementProviderSimple GetEnclosingElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnclosingElement () As IRawElementProviderSimple" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::IRawElementProviderSimple ^ GetEnclosingElement();" />
      <MemberSignature Language="F#" Value="abstract member GetEnclosingElement : unit -&gt; System.Windows.Automation.Provider.IRawElementProviderSimple" Usage="iTextRangeProvider.GetEnclosingElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderSimple</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="163de-168">Zwraca najbardziej formant, który otacza zakres tekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-168">Returns the innermost control that encloses the text range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="163de-169">Otaczającej kontrolka zazwyczaj tekst dostawcy który dostarcza zakres tekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-169">The enclosing control, typically the text provider that supplies the text range.</span>
          </span>
          <span data-ttu-id="163de-170">Jednak jeśli dostawca tekstu obsługuje elementy podrzędne, takie jak tabele lub hiperlinki, otaczający element można element podrzędny dostawcy tekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-170">However, if the text provider supports child elements such as tables or hyperlinks, then the enclosing element could be a descendant of the text provider.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public string GetText (int maxLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetText(int32 maxLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.GetText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetText (maxLength As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetText(int maxLength);" />
      <MemberSignature Language="F#" Value="abstract member GetText : int -&gt; string" Usage="iTextRangeProvider.GetText maxLength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxLength">
          <span data-ttu-id="163de-171">Maksymalna długość ciągu do zwrócenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-171">The maximum length of the string to return.</span>
          </span>
          <span data-ttu-id="163de-172">Użyj <c>-1</c> Jeśli wymagana jest brak limitu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-172">Use <c>-1</c> if no limit is required.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="163de-173">Pobiera tekst zwykły zakresu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-173">Retrieves the plain text of the range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="163de-174">Zwykły tekst zakres tekstu, prawdopodobnie są obcinane w określonym <paramref name="maxLength" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-174">The plain text of the text range, possibly truncated at the specified <paramref name="maxLength" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="163de-175"><xref:System.Windows.Automation.Provider.ITextRangeProvider.GetText%2A> uwzględnia tekst ukryty i widoczne.</span><span class="sxs-lookup"><span data-stu-id="163de-175"><xref:System.Windows.Automation.Provider.ITextRangeProvider.GetText%2A> respects both hidden and visible text.</span></span>  
  
 <span data-ttu-id="163de-176">Jeśli `maxLength` jest większa niż długość zakresu tekstu obiektu wywołującego, ciąg, zwracany jest zwykły tekst zakres tekstu.</span><span class="sxs-lookup"><span data-stu-id="163de-176">If `maxLength` is greater than the length of the text span of the caller, the string returned will be the plain text of the text range.</span></span>  
  
 <span data-ttu-id="163de-177"><xref:System.Windows.Automation.Provider.ITextRangeProvider.GetText%2A> nie zostaną zmienione przez kolejność punkty końcowe w tekście; zawsze zwróci tekst między punktami końcowymi początkową i końcową zakresu tekstu w kolejności przepływu tekstu logicznego.</span><span class="sxs-lookup"><span data-stu-id="163de-177"><xref:System.Windows.Automation.Provider.ITextRangeProvider.GetText%2A> will not be affected by the order of endpoints in the text flow; it will always return the text between the Start and End endpoints of the text range in the logical text flow order.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="163de-178">Jeśli <paramref name="maxLength" /> jest mniejsza niż -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-178">If <paramref name="maxLength" /> is less than -1.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public int Move (System.Windows.Automation.Text.TextUnit unit, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Move(valuetype System.Windows.Automation.Text.TextUnit unit, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Move (unit As TextUnit, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Move(System::Windows::Automation::Text::TextUnit unit, int count);" />
      <MemberSignature Language="F#" Value="abstract member Move : System.Windows.Automation.Text.TextUnit * int -&gt; int" Usage="iTextRangeProvider.Move (unit, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="System.Windows.Automation.Text.TextUnit" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="unit">
          <span data-ttu-id="163de-179">Granica jednostki tekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-179">The text unit boundary.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="163de-180">Liczba jednostek tekstu, aby przenieść.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-180">The number of text units to move.</span>
          </span>
          <span data-ttu-id="163de-181">Wartość dodatnią przenosi do przodu zakres tekstu, wartości ujemnej przenosi zakres tekstu z poprzednimi wersjami, a 0 nie ma wpływu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-181">A positive value moves the text range forward, a negative value moves the text range backward, and 0 has no effect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="163de-182">Przenosi zakres tekstu określoną liczbę jednostek tekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-182">Moves the text range the specified number of text units.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="163de-183">Liczba jednostek, które faktycznie się poruszyły.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-183">The number of units actually moved.</span>
          </span>
          <span data-ttu-id="163de-184">To może być mniejsza niż żądana liczba, jeśli albo nowe punkty końcowe zakres tekstu jest większa lub mniejsza niż <see cref="P:System.Windows.Automation.Provider.ITextProvider.DocumentRange" /> punktów końcowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-184">This can be less than the number requested if either of the new text range endpoints is greater than or less than the <see cref="P:System.Windows.Automation.Provider.ITextProvider.DocumentRange" /> endpoints.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="163de-185">Gdy jest to konieczne przechodzenie przez zawartość zakres tekstu, szereg kroków biorących udział w tle, aby <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> pomyślnie wykonać metodę.</span><span class="sxs-lookup"><span data-stu-id="163de-185">When it is necessary to traverse the content of a text range, a series of steps are involved behind the scenes in order for the <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> method to execute successfully.</span></span>  
  
1.  <span data-ttu-id="163de-186">Zakres tekstu jest znormalizować; oznacza to, że zakres tekstu jest zwinięte do wymiaru degeneracji zakresu na <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> punktu końcowego, co sprawia, że <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> zbędny punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="163de-186">The text range is normalized; that is, the text range is collapsed to a degenerate range at the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> endpoint, which makes the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint superfluous.</span></span> <span data-ttu-id="163de-187">Ten krok jest niezbędny usunąć niejednoznaczność w sytuacjach, w którym obejmuje zakres tekstu `unit` granice, na przykład "{N} RL [ https://www.microsoft.com/ ](https://www.microsoft.com/) jest osadzony w tekście" gdzie "{" i "}" są wartościami tekstowymi punkty końcowe zakresu.</span><span class="sxs-lookup"><span data-stu-id="163de-187">This step is necessary to remove ambiguity in situations where a text range spans `unit` boundaries; for example, "{The U}RL [https://www.microsoft.com/](https://www.microsoft.com/) is embedded in text" where "{" and "}" are the text range endpoints.</span></span>  
  
2.  <span data-ttu-id="163de-188">Wynikowy zakres zostaje przeniesiony do tyłu <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> na początku żądany `unit` granic.</span><span class="sxs-lookup"><span data-stu-id="163de-188">The resulting range is moved backward in the <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> to the beginning of the requested `unit` boundary.</span></span>  
  
3.  <span data-ttu-id="163de-189">Zakres jest przenoszony do przodu lub Wstecz w <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> , żądana liczba `unit` granic.</span><span class="sxs-lookup"><span data-stu-id="163de-189">The range is moved forward or backward in the <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> by the requested number of `unit` boundaries.</span></span>  
  
4.  <span data-ttu-id="163de-190">Zakres jest rozszerzany ze stanu wymiaru degeneracji zakresu przez przesunięcie <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> punktu końcowego za pomocą jednej żądane `unit` granic.</span><span class="sxs-lookup"><span data-stu-id="163de-190">The range is then expanded from a degenerate range state by moving the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint by one requested `unit` boundary.</span></span>  
  
 <span data-ttu-id="163de-191">![Zakres korekt przez przeniesienie & ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png "zakres korekt przez przeniesienie & ExpandToEnclosingUnit")</span><span class="sxs-lookup"><span data-stu-id="163de-191">![Range adjustments by Move & ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png "Range adjustments by Move & ExpandToEnclosingUnit")</span></span>  
<span data-ttu-id="163de-192">Przykłady jak zakres tekstu jest uwzględniany Move() i ExpandToEnclosingUnit()</span><span class="sxs-lookup"><span data-stu-id="163de-192">Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()</span></span>  
  
 <span data-ttu-id="163de-193">Zawartości tekstowej (lub tekst wewnętrzny) kontenerze tekstu i osadzonego obiektu, takie jak hiperłącza lub komórki tabeli, jest widoczna jako strumień pojedynczego, zapewniająca ciągłą tekst w widoku formantu i widok zawartości [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] drzewa; obiekt granice są ignorowane.</span><span class="sxs-lookup"><span data-stu-id="163de-193">The textual content (or inner text) of a text container and an embedded object, such as a hyperlink or table cell, is exposed as a single, continuous text stream in both the control view and the content view of the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] tree; object boundaries are ignored.</span></span>  
  
 <span data-ttu-id="163de-194">![Zakresy tekstu, objęte z osadzonych obiektów. ] (~/add/media/uia-textpattern-embeddedobjecttextranges.png "Zakresy tekstu objęte osadzonych obiektów.")</span><span class="sxs-lookup"><span data-stu-id="163de-194">![Text ranges spanned by embedded objects.](~/add/media/uia-textpattern-embeddedobjecttextranges.png "Text ranges spanned by embedded objects.")</span></span>  
<span data-ttu-id="163de-195">Przykład strumienia tekstu przy użyciu osadzonych obiektów i ich zakresy zakresu</span><span class="sxs-lookup"><span data-stu-id="163de-195">Example of a text stream with embedded objects and their range spans</span></span>  
  
 <span data-ttu-id="163de-196"><xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> uwzględnia tekst ukryty i widoczne.</span><span class="sxs-lookup"><span data-stu-id="163de-196"><xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> respects both hidden and visible text.</span></span>  
  
 <span data-ttu-id="163de-197"><xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> odracza do następnej największy <xref:System.Windows.Automation.Text.TextUnit> obsługiwanych Jeśli danego <xref:System.Windows.Automation.Text.TextUnit> nie jest obsługiwana przez kontrolkę.</span><span class="sxs-lookup"><span data-stu-id="163de-197"><xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> defers to the next largest <xref:System.Windows.Automation.Text.TextUnit> supported if the given <xref:System.Windows.Automation.Text.TextUnit> is not supported by the control.</span></span>  
  
 <span data-ttu-id="163de-198">To zamówienie, od najmniejszego do największego, znajduje się poniżej.</span><span class="sxs-lookup"><span data-stu-id="163de-198">The order, from smallest unit to largest, is listed below.</span></span>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Character>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Format>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Word>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Line>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Paragraph>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Page>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Document>  
  
 <span data-ttu-id="163de-199">Tekst nie ulega zmianie w jakikolwiek sposób, zakres tekstu po prostu obejmuje różne części tekstu.</span><span class="sxs-lookup"><span data-stu-id="163de-199">The text is not altered in any way, the text range just spans a different part of the text.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveEndpointByRange">
      <MemberSignature Language="C#" Value="public void MoveEndpointByRange (System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, System.Windows.Automation.Provider.ITextRangeProvider targetRange, System.Windows.Automation.Text.TextPatternRangeEndpoint targetEndpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveEndpointByRange(valuetype System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, class System.Windows.Automation.Provider.ITextRangeProvider targetRange, valuetype System.Windows.Automation.Text.TextPatternRangeEndpoint targetEndpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveEndpointByRange (endpoint As TextPatternRangeEndpoint, targetRange As ITextRangeProvider, targetEndpoint As TextPatternRangeEndpoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveEndpointByRange(System::Windows::Automation::Text::TextPatternRangeEndpoint endpoint, System::Windows::Automation::Provider::ITextRangeProvider ^ targetRange, System::Windows::Automation::Text::TextPatternRangeEndpoint targetEndpoint);" />
      <MemberSignature Language="F#" Value="abstract member MoveEndpointByRange : System.Windows.Automation.Text.TextPatternRangeEndpoint * System.Windows.Automation.Provider.ITextRangeProvider * System.Windows.Automation.Text.TextPatternRangeEndpoint -&gt; unit" Usage="iTextRangeProvider.MoveEndpointByRange (endpoint, targetRange, targetEndpoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Windows.Automation.Text.TextPatternRangeEndpoint" />
        <Parameter Name="targetRange" Type="System.Windows.Automation.Provider.ITextRangeProvider" />
        <Parameter Name="targetEndpoint" Type="System.Windows.Automation.Text.TextPatternRangeEndpoint" />
      </Parameters>
      <Docs>
        <param name="endpoint">
          <span data-ttu-id="163de-200">Punkt końcowy, aby przenieść.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-200">The endpoint to move.</span>
          </span>
        </param>
        <param name="targetRange">
          <span data-ttu-id="163de-201">Inny zakres z tego samego dostawcy tekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-201">Another range from the same text provider.</span>
          </span>
        </param>
        <param name="targetEndpoint">
          <span data-ttu-id="163de-202">Punkt końcowy na inny zakres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-202">An endpoint on the other range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="163de-203">Przenosi jeden punkt końcowy zakres tekstu do określonego punktu końcowego drugi zakres tekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-203">Moves one endpoint of a text range to the specified endpoint of a second text range.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="163de-204">Jeśli punkt końcowy jest przenoszony przecina inny punkt końcowy do tego samego zakresu tekstu, a następnie tego punktu końcowego jest przenoszony Ponadto skutkuje wymiaru degeneracji zakresu przy zapewnieniu poprawne porządkowania punktów końcowych (czyli <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> jest zawsze mniejsza niż lub równe <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End>).</span><span class="sxs-lookup"><span data-stu-id="163de-204">If the endpoint being moved crosses the other endpoint of the same text range then that other endpoint is moved also, resulting in a degenerate range and ensuring the correct ordering of the endpoints (that is, <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> is always less than or equal to <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveEndpointByUnit">
      <MemberSignature Language="C#" Value="public int MoveEndpointByUnit (System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, System.Windows.Automation.Text.TextUnit unit, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveEndpointByUnit(valuetype System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, valuetype System.Windows.Automation.Text.TextUnit unit, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveEndpointByUnit (endpoint As TextPatternRangeEndpoint, unit As TextUnit, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int MoveEndpointByUnit(System::Windows::Automation::Text::TextPatternRangeEndpoint endpoint, System::Windows::Automation::Text::TextUnit unit, int count);" />
      <MemberSignature Language="F#" Value="abstract member MoveEndpointByUnit : System.Windows.Automation.Text.TextPatternRangeEndpoint * System.Windows.Automation.Text.TextUnit * int -&gt; int" Usage="iTextRangeProvider.MoveEndpointByUnit (endpoint, unit, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Windows.Automation.Text.TextPatternRangeEndpoint" />
        <Parameter Name="unit" Type="System.Windows.Automation.Text.TextUnit" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="endpoint">
          <span data-ttu-id="163de-205">Punkt końcowy, aby przenieść.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-205">The endpoint to move.</span>
          </span>
        </param>
        <param name="unit">
          <span data-ttu-id="163de-206">Jednostka tekstową do przenoszenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-206">The textual unit for moving.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="163de-207">Liczba jednostek przenoszenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-207">The number of units to move.</span>
          </span>
          <span data-ttu-id="163de-208">Wartość dodatnią przenosi punkt końcowy do przodu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-208">A positive value moves the endpoint forward.</span>
          </span>
          <span data-ttu-id="163de-209">Cofa się wartością ujemną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-209">A negative value moves backward.</span>
          </span>
          <span data-ttu-id="163de-210">Wartość 0 nie ma znaczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-210">A value of 0 has no effect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="163de-211">Przenosi jeden punkt końcowy zakresu tekstu określoną liczbę jednostek tekstu w zakresie dokumentu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-211">Moves one endpoint of the text range the specified number of text units within the document range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="163de-212">Liczba jednostek faktycznie się poruszyły, który można mniejsza niż liczba żądanych if przemieszczają się uruchomienia punktu końcowego na początku lub na końcu dokumentu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-212">The number of units actually moved, which can be less than the number requested if moving the endpoint runs into the beginning or end of the document.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="163de-213">Gdy jest to konieczne przechodzenie przez zawartość zakres tekstu, szereg kroków biorących udział w tle, aby <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> pomyślnie wykonać metodę.</span><span class="sxs-lookup"><span data-stu-id="163de-213">When it is necessary to traverse the content of a text range, a series of steps are involved behind the scenes in order for the <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> method to execute successfully.</span></span>  
  
1.  <span data-ttu-id="163de-214">Zakres tekstu jest znormalizować; oznacza to, że zakres tekstu jest zwinięte do wymiaru degeneracji zakresu na <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> punktu końcowego, co sprawia, że <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> zbędny punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="163de-214">The text range is normalized; that is, the text range is collapsed to a degenerate range at the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> endpoint, which makes the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint superfluous.</span></span> <span data-ttu-id="163de-215">Ten krok jest niezbędny usunąć niejednoznaczność w sytuacjach, w którym obejmuje zakres tekstu `unit` granice, na przykład "{N} RL [ https://www.microsoft.com/ ](https://www.microsoft.com/) jest osadzony w tekście" gdzie "{" i "}" są wartościami tekstowymi punkty końcowe zakresu.</span><span class="sxs-lookup"><span data-stu-id="163de-215">This step is necessary to remove ambiguity in situations where a text range spans `unit` boundaries; for example, "{The U}RL [https://www.microsoft.com/](https://www.microsoft.com/) is embedded in text" where "{" and "}" are the text range endpoints.</span></span>  
  
2.  <span data-ttu-id="163de-216">Wynikowy zakres zostaje przeniesiony do tyłu <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> na początku żądany `unit` granic.</span><span class="sxs-lookup"><span data-stu-id="163de-216">The resulting range is moved backward in the <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> to the beginning of the requested `unit` boundary.</span></span>  
  
3.  <span data-ttu-id="163de-217">Zakres jest rozszerzany ze stanu wymiaru degeneracji zakresu przez przesunięcie <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> punktu końcowego za pomocą jednej żądane `unit` granic.</span><span class="sxs-lookup"><span data-stu-id="163de-217">The range is then expanded from a degenerate range state by moving the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint by one requested `unit` boundary.</span></span>  
  
 <span data-ttu-id="163de-218">![Zakres korekt przez przeniesienie & ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png "zakres korekt przez przeniesienie & ExpandToEnclosingUnit")</span><span class="sxs-lookup"><span data-stu-id="163de-218">![Range adjustments by Move & ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png "Range adjustments by Move & ExpandToEnclosingUnit")</span></span>  
<span data-ttu-id="163de-219">Przykłady jak zakres tekstu jest uwzględniany Move() i ExpandToEnclosingUnit()</span><span class="sxs-lookup"><span data-stu-id="163de-219">Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()</span></span>  
  
 <span data-ttu-id="163de-220"><xref:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit%2A> odracza do następnej największy <xref:System.Windows.Automation.Text.TextUnit> obsługiwanych Jeśli danego <xref:System.Windows.Automation.Text.TextUnit> nie jest obsługiwana przez kontrolkę.</span><span class="sxs-lookup"><span data-stu-id="163de-220"><xref:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit%2A> defers to the next largest <xref:System.Windows.Automation.Text.TextUnit> supported if the given <xref:System.Windows.Automation.Text.TextUnit> is not supported by the control.</span></span>  
  
 <span data-ttu-id="163de-221">To zamówienie, od najmniejszego do największego, znajduje się poniżej.</span><span class="sxs-lookup"><span data-stu-id="163de-221">The order, from smallest unit to largest, is listed below.</span></span>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Character>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Format>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Word>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Line>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Paragraph>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Page>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Document>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveFromSelection">
      <MemberSignature Language="C#" Value="public void RemoveFromSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveFromSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveFromSelection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveFromSelection();" />
      <MemberSignature Language="F#" Value="abstract member RemoveFromSelection : unit -&gt; unit" Usage="iTextRangeProvider.RemoveFromSelection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="163de-222">Usuwa sekcję wyróżnionego tekstu, odpowiadający wywołującego <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> i <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> punktów końcowych z kolekcji wyróżnionego tekstu w kontenerze tekstu, która obsługuje wiele rozłączne wybrane opcje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-222">Removes a highlighted section of text, corresponding to the caller's <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> and <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoints, from the collection of highlighted text in a text container that supports multiple, disjoint selections.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="163de-223">Punkt wstawiania zostanie przeniesione do obszaru usunięto zaznaczenie.</span><span class="sxs-lookup"><span data-stu-id="163de-223">The text insertion point will move to the area of the removed highlight.</span></span>  
  
 <span data-ttu-id="163de-224">Zapewniającym zakres tekstu wymiaru degeneracji przeniesie punktu wstawiania.</span><span class="sxs-lookup"><span data-stu-id="163de-224">Providing a degenerate text range will move the insertion point.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="163de-225">Jeśli tekst dostawca nie obsługuje wielu rozłączne wybór (na przykład <see cref="P:System.Windows.Automation.TextPattern.SupportedTextSelection" /> musi mieć wartość <see langword="Multiple" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-225">If text provider does not support multiple, disjoint selections (for example, <see cref="P:System.Windows.Automation.TextPattern.SupportedTextSelection" /> must have a value of <see langword="Multiple" />).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ScrollIntoView">
      <MemberSignature Language="C#" Value="public void ScrollIntoView (bool alignToTop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScrollIntoView(bool alignToTop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollIntoView (alignToTop As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollIntoView(bool alignToTop);" />
      <MemberSignature Language="F#" Value="abstract member ScrollIntoView : bool -&gt; unit" Usage="iTextRangeProvider.ScrollIntoView alignToTop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alignToTop" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="alignToTop">
          <span data-ttu-id="163de-226">
            <see langword="true" /> Jeśli powinna być przewijane kontrolki tekstu, więc w górnej części okienka ekranu; zakres tekstu <see langword="false" /> czy powinno ono zostać w dolnej części okienka ekranu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-226">
              <see langword="true" /> if the text control should be scrolled so the text range is flush with the top of the viewport; <see langword="false" /> if it should be flush with the bottom of the viewport.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="163de-227">Powoduje, że kontrolki tekstu przewijać w pionie, dopóki zakres tekstu jest widoczny w okienku ekranu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-227">Causes the text control to scroll vertically until the text range is visible in the viewport.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="163de-228"><xref:System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView%2A> uwzględnia tekst ukryty i widoczne.</span><span class="sxs-lookup"><span data-stu-id="163de-228"><xref:System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView%2A> respects both hidden and visible text.</span></span>  
  
 <span data-ttu-id="163de-229">Jeśli zakres tekstu jest ukryty, kontrolki tekstu przewinie tylko wtedy, gdy tekstu ukrytego elementu zakotwiczenia w okienku ekranu.</span><span class="sxs-lookup"><span data-stu-id="163de-229">If the text range is hidden, the text control will scroll only if the hidden text has an anchor in the viewport.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.Select" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select();" />
      <MemberSignature Language="F#" Value="abstract member Select : unit -&gt; unit" Usage="iTextRangeProvider.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="163de-230">Podświetla tekst w kontrolce tekst odpowiadający zakres tekstu <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> i <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> punktów końcowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-230">Highlights text in the text control corresponding to the text range <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> and <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoints.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="163de-231">Jeśli zostanie podany zakres wymiaru degeneracji tekstu, punkt wstawiania zostanie przeniesiona do <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> punktu końcowego zakres tekstu.</span><span class="sxs-lookup"><span data-stu-id="163de-231">If a degenerate text range is provided, the text insertion point will move to the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> endpoint of the text range.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="163de-232">Występuje, gdy zaznaczony tekst nie jest obsługiwana przez kontrolkę tekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="163de-232">Occurs when text selection is not supported by the text control.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>