<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IWindowProvider.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5644159038f400a8d228091aebc13941444b88edb.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">644159038f400a8d228091aebc13941444b88edb</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Automation.Provider.IWindowProvider">
          <source>Exposes methods and properties to support UI Automation client access to controls that provide fundamental window-based functionality within a traditional graphical user interface (GUI).</source>
          <target state="translated">Udostępnia metody i właściwości automatyzacji interfejsu użytkownika klienta dostęp do formantów, które zapewniają podstawowe funkcje oparte na okna w ramach tradycyjnego graficznego interfejsu użytkownika (GUI).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.Provider.IWindowProvider">
          <source>Implemented on a UI Automation provider that must support the <ph id="ph1">&lt;xref:System.Windows.Automation.WindowPattern&gt;</ph> control pattern.</source>
          <target state="translated">Zaimplementowany w dostawcy automatyzacji interfejsu użytkownika, który musi obsługiwać <ph id="ph1">&lt;xref:System.Windows.Automation.WindowPattern&gt;</ph> — wzorzec formantu.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IWindowProvider.Close">
          <source>Attempts to close the window.</source>
          <target state="translated">Próby zamknięcia okna.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IWindowProvider.Close">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IWindowProvider.Close%2A&gt;</ph> must return immediately without blocking.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IWindowProvider.Close%2A&gt;</ph> bez blokowania musi zwracać natychmiast.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IWindowProvider.Close">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IWindowProvider.Close%2A&gt;</ph> raises the <ph id="ph2">&lt;xref:System.Windows.Automation.WindowPatternIdentifiers.WindowClosedEvent&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IWindowProvider.Close%2A&gt;</ph> zgłasza <ph id="ph2">&lt;xref:System.Windows.Automation.WindowPatternIdentifiers.WindowClosedEvent&gt;</ph> zdarzeń.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IWindowProvider.Close">
          <source>If possible, the event should be raised after the control has completed its associated action.</source>
          <target state="translated">Jeśli to możliwe zdarzenia powinien być zgłaszany po zakończeniu jego skojarzone z akcją formantu.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IWindowProvider.Close">
          <source>When called on a split pane control, this method will close the pane and remove the associated split.</source>
          <target state="translated">Wywołanego w formancie okienko podziału, ta metoda będzie zamknąć okienko i usuń skojarzone podziału.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IWindowProvider.Close">
          <source>This method might also close all other panes, depending on implementation.</source>
          <target state="translated">Ta metoda może także zamknąć wszystkie inne okienka, w zależności od implementacji.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IWindowProvider.Close">
          <source>When the control is unable to perform the requested action.</source>
          <target state="translated">Gdy formant jest nie można wykonać żądanej akcji.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IWindowProvider.Close">
          <source>When the target element is no longer available (for example, the window has closed).</source>
          <target state="translated">Gdy element docelowy nie jest już dostępny (na przykład okno zostało zamknięte).</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.Provider.IWindowProvider.InteractionState">
          <source>Gets the interaction state of the window.</source>
          <target state="translated">Pobiera stan interakcji okna.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IWindowProvider.InteractionState">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Automation.WindowInteractionState" /&gt;</ph> of the control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Automation.WindowInteractionState" /&gt;</ph> Formantu.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.Provider.IWindowProvider.IsModal">
          <source>Gets a value that specifies whether the window is modal.</source>
          <target state="translated">Pobiera wartość określającą, czy okno jest modalne.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IWindowProvider.IsModal">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the window is modal; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli okno jest modalne; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.Provider.IWindowProvider.IsTopmost">
          <source>Gets a value that specifies whether the window is the topmost element in the z-order.</source>
          <target state="translated">Pobiera wartość określającą, czy okno jest element najwyższego poziomu w porządku osi z.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IWindowProvider.IsTopmost">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the window is topmost; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli okno jest najwyżej; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.Provider.IWindowProvider.Maximizable">
          <source>Gets a value that specifies whether the window can be maximized.</source>
          <target state="translated">Pobiera wartość określającą, czy okno jest zmaksymalizowane.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IWindowProvider.Maximizable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the window can be maximized; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli okno można zmaksymalizować; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.Provider.IWindowProvider.Minimizable">
          <source>Gets a value that specifies whether the window can be minimized.</source>
          <target state="translated">Pobiera wartość określającą, czy okno może być minimalny.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IWindowProvider.Minimizable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the window can be minimized; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli okno można zminimalizować; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IWindowProvider.SetVisualState(System.Windows.Automation.WindowVisualState)">
          <source>The requested visual state of the window.</source>
          <target state="translated">Żądany stan visual okna.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IWindowProvider.SetVisualState(System.Windows.Automation.WindowVisualState)">
          <source>Changes the visual state of the window.</source>
          <target state="translated">Zmiany stanu wizualnego okna.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IWindowProvider.SetVisualState(System.Windows.Automation.WindowVisualState)">
          <source>For example, minimizes or maximizes it.</source>
          <target state="translated">Na przykład minimalizuje lub maksymalizuje go.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IWindowProvider.SetVisualState(System.Windows.Automation.WindowVisualState)">
          <source>When the control does not support the requested behavior.</source>
          <target state="translated">Gdy formantu nie obsługuje żądanego zachowania.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.Provider.IWindowProvider.VisualState">
          <source>Gets the visual state of the window.</source>
          <target state="translated">Pobiera stanu wizualnego okna.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Provider.IWindowProvider.VisualState">
          <source>The visual state of the window.</source>
          <target state="translated">Stanu wizualnego okna.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle(System.Int32)">
          <source>The amount of time, in milliseconds, to wait for the associated process to become idle.</source>
          <target state="translated">Ilość czasu (w milisekundach), poczekaj, aż przejdzie w stan bezczynności skojarzonego procesu.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle(System.Int32)">
          <source>The maximum is <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">Maksymalna liczba to <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle(System.Int32)">
          <source>Causes the calling code to block for the specified time or until the associated process enters an idle state, whichever completes first.</source>
          <target state="translated">Powoduje, że kod wywołujący mają być blokowane dla określonych godzinach lub do momentu skojarzony proces przejdzie w stan bezczynności, zależnie od zakończeniu najpierw.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle(System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the window has entered the idle state; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the timeout occurred.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli okno przeszedł w stan bezczynności; <ph id="ph2">&lt;see langword="false" /&gt;</ph> Jeśli nastąpiło przekroczenie limitu czasu.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle(System.Int32)">
          <source>This method is typically used in conjunction with the handling of a <ph id="ph1">&lt;xref:System.Windows.Automation.WindowPatternIdentifiers.WindowOpenedEvent&gt;</ph>.</source>
          <target state="translated">Ta metoda jest zwykle używana w połączeniu z obsługi <ph id="ph1">&lt;xref:System.Windows.Automation.WindowPatternIdentifiers.WindowOpenedEvent&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle(System.Int32)">
          <source>The implementation is dependent on the underlying application framework; therefore this method might return some time after the window is ready for user input.</source>
          <target state="translated">Implementacja jest zależna od podstawowej struktury aplikacji; w związku z tym ta metoda może zwrócić pewien czas po okno jest gotowe do wprowadzenia danych przez użytkownika.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle(System.Int32)">
          <source>The calling code should not rely on this method to ascertain exactly when the window has become idle.</source>
          <target state="translated">Kod wywołujący nie należy polegać na tę metodę w celu sprawdzenia dokładnie, gdy Bezczynność okna.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle(System.Int32)">
          <source>When the parameter passed in is not a valid number.</source>
          <target state="translated">Gdy parametr przekazano nie jest prawidłową liczbą.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>