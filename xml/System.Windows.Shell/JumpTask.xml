<Type Name="JumpTask" FullName="System.Windows.Shell.JumpTask">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="72ea038bfacc9fec6529a315bec4aedb2ba7c98b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36464466" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class JumpTask : System.Windows.Shell.JumpItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JumpTask extends System.Windows.Shell.JumpItem" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Shell.JumpTask" />
  <TypeSignature Language="VB.NET" Value="Public Class JumpTask&#xA;Inherits JumpItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class JumpTask : System::Windows::Shell::JumpItem" />
  <TypeSignature Language="F#" Value="type JumpTask = class&#xA;    inherit JumpItem" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Shell.JumpItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje skrót do aplikacji na pasku zadań systemu Windows 7 listy szybkiego dostępu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.Shell.JumpTask> można traktować jako skrót do aplikacji. Określ ścieżkę do pliku wykonywalnego, ustawiając <xref:System.Windows.Shell.JumpTask.ApplicationPath%2A> właściwości. Jeśli <xref:System.Windows.Shell.JumpTask.ApplicationPath%2A> nie jest ustawiona, jest domyślna ścieżka bieżącego uruchomionego procesu. Opcjonalnie można określić <xref:System.Windows.Shell.JumpTask.Arguments%2A> do przekazania do aplikacji podczas uruchamiania.  
  
 Można ustawić właściwości wyświetlania podstawowych, takich jak <xref:System.Windows.Shell.JumpTask.Title%2A>, <xref:System.Windows.Shell.JumpTask.Description%2A>, i <xref:System.Windows.Shell.JumpTask.IconResourcePath%2A> określić sposób wyświetlania zadań na liście szybkiego dostępu. Ikona z <xref:System.Windows.Shell.JumpTask> muszą być dostępne jako zasób macierzysty. Jeśli wiele zasobów ikona są dostępne w pliku DLL lub pliku wykonywalnego, określ, do użycia przez wskazanie przesunięcie w <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A> właściwości.  
  
 Domyślnie <xref:System.Windows.Shell.JumpTask> zostaną umieszczone w **zadania** kategorii listy szybkiego dostępu. Niestandardowe grupy zadań można określić przez ustawienie <xref:System.Windows.Shell.JumpItem.CustomCategory%2A> właściwości.  
  
 Elementy na liście szybkiego dostępu można oddzielić wizualnie tworząc <xref:System.Windows.Shell.JumpTask> , która nie ma <xref:System.Windows.Shell.JumpTask.Title%2A> i <xref:System.Windows.Shell.JumpItem.CustomCategory%2A> określony. Ten pusty <xref:System.Windows.Shell.JumpTask> będzie wyświetlany jako linia pozioma na liście szybkiego dostępu. W takim przypadku można ustawić inne właściwości, ale nie ma żadnego efektu.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób zadeklarować <xref:System.Windows.Shell.JumpTask> w znaczniku. <xref:System.Windows.Shell.JumpTask> Otwiera plik tekstowy o nazwie `readme.txt` w aplikacji Notatnik.  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 Poniższy przykład przedstawia sposób konfigurowania <xref:System.Windows.Shell.JumpTask> w kodzie. <xref:System.Windows.Shell.JumpTask> Otwiera aplikację Kalkulator.  
  
 [!code-csharp[Shell_JumpListSample#241](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#241)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Shell.JumpPath" />
    <altmember cref="T:System.Windows.Shell.JumpList" />
    <altmember cref="E:System.Windows.Shell.JumpList.JumpItemsRejected" />
    <altmember cref="E:System.Windows.Application.Startup" />
    <altmember cref="P:System.Windows.StartupEventArgs.Args" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JumpTask ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpTask.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JumpTask();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Shell.JumpTask" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationPath">
      <MemberSignature Language="C#" Value="public string ApplicationPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationPath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpTask.ApplicationPath" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationPath : string with get, set" Usage="System.Windows.Shell.JumpTask.ApplicationPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ścieżkę do aplikacji.</summary>
        <value>Ścieżka do aplikacji. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Windows.Shell.JumpTask.ApplicationPath%2A> nie określono właściwości, a następnie jest domyślna ścieżka bieżącego uruchomionego procesu. Aplikacja może zawierać zadań dla plików wykonywalnych niż.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób zadeklarować <xref:System.Windows.Shell.JumpTask> w znaczniku. <xref:System.Windows.Shell.JumpTask> Otwiera plik tekstowy o nazwie `readme.txt` w aplikacji Notatnik.  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 Poniższy przykład przedstawia sposób konfigurowania <xref:System.Windows.Shell.JumpTask> w kodzie. <xref:System.Windows.Shell.JumpTask> Otwiera aplikację Kalkulator.  
  
 [!code-csharp[Shell_JumpListSample#241](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#241)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Arguments">
      <MemberSignature Language="C#" Value="public string Arguments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Arguments" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpTask.Arguments" />
      <MemberSignature Language="VB.NET" Value="Public Property Arguments As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Arguments { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Arguments : string with get, set" Usage="System.Windows.Shell.JumpTask.Arguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia Argumenty przekazane do aplikacji podczas uruchamiania.</summary>
        <value>Argumenty przekazane do aplikacji podczas uruchamiania. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład przedstawia sposób zadeklarować <xref:System.Windows.Shell.JumpTask> w znaczniku. <xref:System.Windows.Shell.JumpTask> Otwiera plik tekstowy o nazwie `readme.txt` w aplikacji Notatnik.  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Application.Startup" />
        <altmember cref="P:System.Windows.StartupEventArgs.Args" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpTask.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Windows.Shell.JumpTask.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst wyświetlany w etykietce narzędzia zadania na liście szybkiego dostępu.</summary>
        <value>Tekst wyświetlany w etykietce narzędzia zadania. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład przedstawia sposób zadeklarować <xref:System.Windows.Shell.JumpTask> w znaczniku. <xref:System.Windows.Shell.JumpTask> Otwiera plik tekstowy o nazwie `readme.txt` w aplikacji Notatnik.  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 Poniższy przykład przedstawia sposób konfigurowania <xref:System.Windows.Shell.JumpTask> w kodzie. <xref:System.Windows.Shell.JumpTask> Otwiera aplikację Kalkulator.  
  
 [!code-csharp[Shell_JumpListSample#241](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#241)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IconResourceIndex">
      <MemberSignature Language="C#" Value="public int IconResourceIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IconResourceIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpTask.IconResourceIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property IconResourceIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IconResourceIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IconResourceIndex : int with get, set" Usage="System.Windows.Shell.JumpTask.IconResourceIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczony od zera indeks ikony osadzonego w zasobie.</summary>
        <value>Liczony od zera indeks ikony lub -1, jeśli jest używana bez ikony. Wartość domyślna to 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ikona z <xref:System.Windows.Shell.JumpTask> muszą być dostępne jako zasób macierzysty. Jeśli wiele ikon są dostępne w pliku DLL lub pliku wykonywalnego, określ, do użycia przez wskazanie przesunięcie w <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A> właściwości.  
  
 Jeśli jest określony żaden z zasobów ikony lub nie można odnaleźć określonej ikony, jest wyświetlana ikona standardowy system. Aby określić, że nie ikona jest wyświetlana, ustaw <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A> właściwości na wartość -1.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób zadeklarować <xref:System.Windows.Shell.JumpTask> w znaczniku. <xref:System.Windows.Shell.JumpTask> Otwiera plik tekstowy o nazwie `readme.txt` w aplikacji Notatnik.  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Shell.JumpTask.IconResourcePath" />
      </Docs>
    </Member>
    <Member MemberName="IconResourcePath">
      <MemberSignature Language="C#" Value="public string IconResourcePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IconResourcePath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpTask.IconResourcePath" />
      <MemberSignature Language="VB.NET" Value="Public Property IconResourcePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IconResourcePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.IconResourcePath : string with get, set" Usage="System.Windows.Shell.JumpTask.IconResourcePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ścieżkę do zasobu, który zawiera ikonę, aby wyświetlić na liście szybkiego dostępu.</summary>
        <value>Ścieżka do zasobu, który zawiera ikonę. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ikona z <xref:System.Windows.Shell.JumpTask> muszą być dostępne jako zasób macierzysty. Jeśli wiele ikon są dostępne w pliku DLL lub pliku wykonywalnego, określ, do użycia przez wskazanie przesunięcie w <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A> właściwości.  
  
 Jeśli jest określony żaden z zasobów ikony lub nie można odnaleźć określonej ikony, jest wyświetlana ikona standardowy system. Aby określić, że nie ikona jest wyświetlana, ustaw <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A> właściwości na wartość -1.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób zadeklarować <xref:System.Windows.Shell.JumpTask> w znaczniku. <xref:System.Windows.Shell.JumpTask> Otwiera plik tekstowy o nazwie `readme.txt` w aplikacji Notatnik.  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 Poniższy przykład przedstawia sposób konfigurowania <xref:System.Windows.Shell.JumpTask> w kodzie. <xref:System.Windows.Shell.JumpTask> Otwiera aplikację Kalkulator.  
  
 [!code-csharp[Shell_JumpListSample#241](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#241)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Shell.JumpTask.IconResourceIndex" />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpTask.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Windows.Shell.JumpTask.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst wyświetlany dla zadań na liście szybkiego dostępu.</summary>
        <value>Tekst wyświetlany dla zadań na liście szybkiego dostępu. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj <xref:System.Windows.Shell.JumpTask.Title%2A> musi być ustawiona właściwość <xref:System.Windows.Shell.JumpTask> do jego wyświetlenia na liście szybkiego dostępu jako aktywne zadania.  
  
 Alternatywnie możesz wizualnie rozdzielić elementów na liście szybkiego dostępu przez utworzenie <xref:System.Windows.Shell.JumpTask> , która nie ma <xref:System.Windows.Shell.JumpTask.Title%2A> i <xref:System.Windows.Shell.JumpItem.CustomCategory%2A> określony. Ten pusty <xref:System.Windows.Shell.JumpTask> będzie wyświetlany jako linia pozioma na liście szybkiego dostępu. W takim przypadku można ustawić inne właściwości, ale nie ma żadnego efektu.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób zadeklarować <xref:System.Windows.Shell.JumpTask> w znaczniku. <xref:System.Windows.Shell.JumpTask> Otwiera nazwę pliku tekstowego `readme.txt` w aplikacji Notatnik.  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 Poniższy przykład przedstawia sposób konfigurowania <xref:System.Windows.Shell.JumpTask> w kodzie. <xref:System.Windows.Shell.JumpTask> Otwiera aplikację Kalkulator.  
  
 [!code-csharp[Shell_JumpListSample#241](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#241)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkingDirectory">
      <MemberSignature Language="C#" Value="public string WorkingDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WorkingDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpTask.WorkingDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Property WorkingDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WorkingDirectory { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WorkingDirectory : string with get, set" Usage="System.Windows.Shell.JumpTask.WorkingDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia katalog roboczy aplikacji podczas uruchamiania.</summary>
        <value>Katalog roboczy aplikacji od uruchomienia. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład przedstawia sposób zadeklarować <xref:System.Windows.Shell.JumpTask> w znaczniku. <xref:System.Windows.Shell.JumpTask> Otwiera plik tekstowy o nazwie `readme.txt` w aplikacji Notatnik.  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>