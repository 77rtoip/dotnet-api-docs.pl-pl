<Type Name="JumpTask" FullName="System.Windows.Shell.JumpTask">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3a56aaf308ab5d801013e6b88cd74e6df8585c34" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69445896" /></Metadata><TypeSignature Language="C#" Value="public class JumpTask : System.Windows.Shell.JumpItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JumpTask extends System.Windows.Shell.JumpItem" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Shell.JumpTask" />
  <TypeSignature Language="VB.NET" Value="Public Class JumpTask&#xA;Inherits JumpItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class JumpTask : System::Windows::Shell::JumpItem" />
  <TypeSignature Language="F#" Value="type JumpTask = class&#xA;    inherit JumpItem" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Shell.JumpItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje skrót do aplikacji na liście szybkiego dostępu na pasku zadań systemu Windows 7.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Shell.JumpTask> Można traktować jako skrót do aplikacji. Ścieżka do pliku wykonywalnego jest określana przez ustawienie <xref:System.Windows.Shell.JumpTask.ApplicationPath%2A> właściwości. Jeśli nie <xref:System.Windows.Shell.JumpTask.ApplicationPath%2A> jest ustawiona, zostanie implikowana ścieżka bieżącego uruchomionego procesu. Opcjonalnie można określić <xref:System.Windows.Shell.JumpTask.Arguments%2A> , aby przekazywać do aplikacji przy uruchamianiu.  
  
 Można ustawić podstawowe właściwości wyświetlania, takie jak <xref:System.Windows.Shell.JumpTask.Title%2A>, <xref:System.Windows.Shell.JumpTask.Description%2A>, i <xref:System.Windows.Shell.JumpTask.IconResourcePath%2A> aby określić wygląd zadania na liście szybkiego dostępu. Ikona używana z elementem <xref:System.Windows.Shell.JumpTask> musi być dostępna jako zasób natywny. Jeśli wiele zasobów ikon jest dostępnych w bibliotece DLL lub pliku wykonywalnym, należy określić jeden do użycia, wskazując przesunięcie we <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A> właściwości.  
  
 Domyślnie <xref:System.Windows.Shell.JumpTask> zostanie umieszczony w kategorii **zadania** listy szybkiego dostępu. Możesz określić niestandardowe grupowanie zadań, ustawiając <xref:System.Windows.Shell.JumpItem.CustomCategory%2A> właściwość.  
  
 Możesz wizualnie oddzielić elementy na liście szybkiego dostępu, tworząc element <xref:System.Windows.Shell.JumpTask> , który nie <xref:System.Windows.Shell.JumpTask.Title%2A> ma <xref:System.Windows.Shell.JumpItem.CustomCategory%2A> określonego. Ta wartość <xref:System.Windows.Shell.JumpTask> pusta będzie wyświetlana jako linia pozioma na liście szybkiego dostępu. W takim przypadku można ustawić inne właściwości, ale nie będą one miały żadnego efektu.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak zadeklarować element <xref:System.Windows.Shell.JumpTask> w znaczniku. Otwiera plik tekstowy o nazwie `readme.txt` w aplikacji Notatnik. <xref:System.Windows.Shell.JumpTask>  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 Poniższy przykład pokazuje, <xref:System.Windows.Shell.JumpTask> jak skonfigurować kod w kodzie. Spowoduje <xref:System.Windows.Shell.JumpTask> to otwarcie aplikacji Kalkulator.  
  
 [!code-csharp[Shell_JumpListSample#241](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#241)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Shell.JumpPath" />
    <altmember cref="T:System.Windows.Shell.JumpList" />
    <altmember cref="E:System.Windows.Shell.JumpList.JumpItemsRejected" />
    <altmember cref="E:System.Windows.Application.Startup" />
    <altmember cref="P:System.Windows.StartupEventArgs.Args" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JumpTask ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpTask.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JumpTask();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Shell.JumpTask" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationPath">
      <MemberSignature Language="C#" Value="public string ApplicationPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationPath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpTask.ApplicationPath" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationPath : string with get, set" Usage="System.Windows.Shell.JumpTask.ApplicationPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ścieżkę do aplikacji.</summary>
        <value>Ścieżka do aplikacji. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Shell.JumpTask.ApplicationPath%2A> Jeśli właściwość nie jest określona, zostanie implikowana ścieżka bieżącego uruchomionego procesu. Aplikacja może zawierać zadania dla plików wykonywalnych innych niż same.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak zadeklarować element <xref:System.Windows.Shell.JumpTask> w znaczniku. Otwiera plik tekstowy o nazwie `readme.txt` w aplikacji Notatnik. <xref:System.Windows.Shell.JumpTask>  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 Poniższy przykład pokazuje, <xref:System.Windows.Shell.JumpTask> jak skonfigurować kod w kodzie. Spowoduje <xref:System.Windows.Shell.JumpTask> to otwarcie aplikacji Kalkulator.  
  
 [!code-csharp[Shell_JumpListSample#241](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#241)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Arguments">
      <MemberSignature Language="C#" Value="public string Arguments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Arguments" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpTask.Arguments" />
      <MemberSignature Language="VB.NET" Value="Public Property Arguments As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Arguments { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Arguments : string with get, set" Usage="System.Windows.Shell.JumpTask.Arguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia argumenty przekazane do aplikacji podczas uruchamiania.</summary>
        <value>Argumenty przekazane do aplikacji podczas uruchamiania. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, jak zadeklarować element <xref:System.Windows.Shell.JumpTask> w znaczniku. Otwiera plik tekstowy o nazwie `readme.txt` w aplikacji Notatnik. <xref:System.Windows.Shell.JumpTask>  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Application.Startup" />
        <altmember cref="P:System.Windows.StartupEventArgs.Args" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpTask.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Windows.Shell.JumpTask.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst wyświetlany w etykietce narzędzia dla zadania na liście szybkiego dostępu.</summary>
        <value>Tekst wyświetlany w etykietce narzędzia dla zadania. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, jak zadeklarować element <xref:System.Windows.Shell.JumpTask> w znaczniku. Otwiera plik tekstowy o nazwie `readme.txt` w aplikacji Notatnik. <xref:System.Windows.Shell.JumpTask>  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 Poniższy przykład pokazuje, <xref:System.Windows.Shell.JumpTask> jak skonfigurować kod w kodzie. Spowoduje <xref:System.Windows.Shell.JumpTask> to otwarcie aplikacji Kalkulator.  
  
 [!code-csharp[Shell_JumpListSample#241](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#241)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IconResourceIndex">
      <MemberSignature Language="C#" Value="public int IconResourceIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IconResourceIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpTask.IconResourceIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property IconResourceIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IconResourceIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IconResourceIndex : int with get, set" Usage="System.Windows.Shell.JumpTask.IconResourceIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia indeks (liczony od zera) ikony osadzonej w zasobie.</summary>
        <value>Indeks (liczony od zera) ikony lub-1, jeśli nie jest używana ikona. Wartość domyślna to 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ikona używana z elementem <xref:System.Windows.Shell.JumpTask> musi być dostępna jako zasób natywny. Jeśli w pliku DLL lub wykonywalnym jest dostępnych wiele ikon, należy określić jeden do użycia, wskazując przesunięcie we <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A> właściwości.  
  
 Jeśli nie określono zasobu ikon lub jeśli określona ikona nie zostanie znaleziona, zostanie wyświetlona Standardowa ikona systemu. Aby określić, że ikona nie jest wyświetlana, ustaw <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A> właściwość na wartość-1.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak zadeklarować element <xref:System.Windows.Shell.JumpTask> w znaczniku. Otwiera plik tekstowy o nazwie `readme.txt` w aplikacji Notatnik. <xref:System.Windows.Shell.JumpTask>  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Shell.JumpTask.IconResourcePath" />
      </Docs>
    </Member>
    <Member MemberName="IconResourcePath">
      <MemberSignature Language="C#" Value="public string IconResourcePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IconResourcePath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpTask.IconResourcePath" />
      <MemberSignature Language="VB.NET" Value="Public Property IconResourcePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IconResourcePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.IconResourcePath : string with get, set" Usage="System.Windows.Shell.JumpTask.IconResourcePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ścieżkę do zasobu zawierającego ikonę, która ma być wyświetlana na liście szybkiego dostępu.</summary>
        <value>Ścieżka do zasobu, który zawiera ikonę. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ikona używana z elementem <xref:System.Windows.Shell.JumpTask> musi być dostępna jako zasób natywny. Jeśli w pliku DLL lub wykonywalnym jest dostępnych wiele ikon, należy określić jeden do użycia, wskazując przesunięcie we <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A> właściwości.  
  
 Jeśli nie określono zasobu ikon lub jeśli określona ikona nie zostanie znaleziona, zostanie wyświetlona Standardowa ikona systemu. Aby określić, że ikona nie jest wyświetlana, ustaw <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A> właściwość na wartość-1.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak zadeklarować element <xref:System.Windows.Shell.JumpTask> w znaczniku. Otwiera plik tekstowy o nazwie `readme.txt` w aplikacji Notatnik. <xref:System.Windows.Shell.JumpTask>  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 Poniższy przykład pokazuje, <xref:System.Windows.Shell.JumpTask> jak skonfigurować kod w kodzie. Spowoduje <xref:System.Windows.Shell.JumpTask> to otwarcie aplikacji Kalkulator.  
  
 [!code-csharp[Shell_JumpListSample#241](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#241)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Shell.JumpTask.IconResourceIndex" />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpTask.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Windows.Shell.JumpTask.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst wyświetlany dla zadania na liście szybkiego dostępu.</summary>
        <value>Tekst wyświetlany dla zadania na liście szybkiego dostępu. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj właściwość musi być ustawiona <xref:System.Windows.Shell.JumpTask> do wyświetlania na liście szybkiego dostępu jako zadanie możliwe do kliknięcia. <xref:System.Windows.Shell.JumpTask.Title%2A>  
  
 Alternatywnie można wizualnie oddzielić elementy na liście szybkiego dostępu, tworząc element <xref:System.Windows.Shell.JumpTask> , który nie ma <xref:System.Windows.Shell.JumpItem.CustomCategory%2A> określonego elementu <xref:System.Windows.Shell.JumpTask.Title%2A> . Ta wartość <xref:System.Windows.Shell.JumpTask> pusta będzie wyświetlana jako linia pozioma na liście szybkiego dostępu. W takim przypadku można ustawić inne właściwości, ale nie będą one miały żadnego efektu.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak zadeklarować element <xref:System.Windows.Shell.JumpTask> w znaczniku. <xref:System.Windows.Shell.JumpTask> Nazwa`readme.txt` pliku tekstowego zostanie otwarta w aplikacji Notatnik.  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 Poniższy przykład pokazuje, <xref:System.Windows.Shell.JumpTask> jak skonfigurować kod w kodzie. Spowoduje <xref:System.Windows.Shell.JumpTask> to otwarcie aplikacji Kalkulator.  
  
 [!code-csharp[Shell_JumpListSample#241](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#241)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkingDirectory">
      <MemberSignature Language="C#" Value="public string WorkingDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WorkingDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpTask.WorkingDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Property WorkingDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WorkingDirectory { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WorkingDirectory : string with get, set" Usage="System.Windows.Shell.JumpTask.WorkingDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia katalog roboczy aplikacji podczas uruchamiania.</summary>
        <value>Katalog roboczy aplikacji podczas uruchamiania. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, jak zadeklarować element <xref:System.Windows.Shell.JumpTask> w znaczniku. Otwiera plik tekstowy o nazwie `readme.txt` w aplikacji Notatnik. <xref:System.Windows.Shell.JumpTask>  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
