<Type Name="ThumbButtonInfo" FullName="System.Windows.Shell.ThumbButtonInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="abc62b6fdd425c53d21b981b5e50de9a5140fe7a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69445886" /></Metadata><TypeSignature Language="C#" Value="public sealed class ThumbButtonInfo : System.Windows.Freezable, System.Windows.Input.ICommandSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ThumbButtonInfo extends System.Windows.Freezable implements class System.Windows.Input.ICommandSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Shell.ThumbButtonInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ThumbButtonInfo&#xA;Inherits Freezable&#xA;Implements ICommandSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class ThumbButtonInfo sealed : System::Windows::Freezable, System::Windows::Input::ICommandSource" />
  <TypeSignature Language="F#" Value="type ThumbButtonInfo = class&#xA;    inherit Freezable&#xA;    interface ICommandSource" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Freezable</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Input.ICommandSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Przedstawia informacje na temat sposobu wyświetlania przycisku w miniatury paska zadań systemu Windows 7.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[win7](~/includes/win7-md.md)] Pasek zadań zawiera udoskonaloną funkcję, która umożliwia używanie przycisku paska zadań do przekazywania informacji o stanie użytkownikowi i uwidaczniania typowych zadań, gdy okno jest zminimalizowane lub ukryte. Możesz dodać przyciski do miniatury paska zadań, aby zapewnić dostęp do typowych zadań bez przełączania do okna aplikacji. Na przykład Media Player systemu Windows udostępnia przyciski Odtwórz, pauza, do przodu i wstecz, których można użyć do sterowania odtwarzaniem multimediów z miniatury paska zadań, gdy aplikacja jest zminimalizowana.  
  
 Klasa zawiera właściwości opisujące, [!INCLUDE[win7](~/includes/win7-md.md)] jak powłoka Wyświetla przyciski na miniatury paska zadań. <xref:System.Windows.Shell.ThumbButtonInfo> Zapewnia ona zarządzaną otokę wokół natywnego interfejsu API systemu Windows. <xref:System.Windows.Shell.ThumbButtonInfo>obiekty znajdują się w <xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos%2A?displayProperty=nameWithType> kolekcji.  
  
 Udoskonalona funkcja paska zadań nie jest dostępna w wersjach systemu Windows starszych [!INCLUDE[win7](~/includes/win7-md.md)]niż. W [!INCLUDE[win7](~/includes/win7-md.md)]programie niektóre funkcje mogą być niedostępne w zależności od ustawień użytkownika. Na przykład przyciski są wyświetlane tylko na miniatury paska zadań, [!INCLUDE[TLA#tla_aero](~/includes/tlasharptla-aero-md.md)] gdy jest włączona. Aplikacja powinna udostępniać alternatywne sposoby współpracy z użytkownikiem, który nie zależy od udoskonalonej funkcji paska zadań.  
  
 Na poniższej ilustracji przedstawiono Podgląd paska zadań z dwoma przyciskami kciuka, które zapewniają dostęp do poleceń odtwarzania i zatrzymywania.  
  
 ![Przykład informacji o elemencie paska zadań] (~/add/media/wpfshell-taskbariteminfo.png "Przykład informacji o elemencie paska zadań")  
Przyciski przewijania paska zadań systemu Windows  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak utworzyć znak <xref:System.Windows.Shell.ThumbButtonInfo> w znaczniku. <xref:System.Windows.Shell.TaskbarItemInfo> Zawiera<xref:System.Windows.Shell.ThumbButtonInfo> kolekcję obiektów, które zapewniają dostęp do poleceń odtwarzania i zatrzymywania z elementu paska zadań. Ten przykład jest częścią większego przykładu dostarczonego dla <xref:System.Windows.Shell.TaskbarItemInfo> klasy.  
  
 [!code-xaml[Shell_TaskbarItemSample#010](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#010)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Shell.TaskbarItemInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThumbButtonInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.ThumbButtonInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThumbButtonInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Shell.ThumbButtonInfo" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Shell.ThumbButtonInfo.Click" />
      <MemberSignature Language="VB.NET" Value="Public Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : EventHandler " Usage="member this.Click : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po kliknięciu przycisku miniatury.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli obsłużysz <xref:System.Windows.Shell.ThumbButtonInfo.Click> zdarzenie, program obsługi zdarzeń jest wykonywany zamiast <xref:System.Windows.Shell.ThumbButtonInfo.Command%2A> elementu, który jest powiązany z przyciskiem miniatury.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Shell.ThumbButtonInfo.Command" />
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.ThumbButtonInfo.Command" />
      <MemberSignature Language="VB.NET" Value="Public Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); void set(System::Windows::Input::ICommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Windows.Input.ICommand with get, set" Usage="System.Windows.Shell.ThumbButtonInfo.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia polecenie, które zostanie wywołane po kliknięciu tego przycisku miniatury.</summary>
        <value>Polecenie do wywołania po kliknięciu tego przycisku miniatury. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli obsłużysz <xref:System.Windows.Shell.ThumbButtonInfo.Click> zdarzenie, program obsługi zdarzeń jest wykonywany zamiast <xref:System.Windows.Shell.ThumbButtonInfo.Command%2A> elementu, który jest powiązany z przyciskiem miniatury.  
  
 W języku XAML właściwość ta jest często ustawiona jako wartość polecenia statycznego z jednej z istniejących bibliotek poleceń, takich jak z <xref:System.Windows.Input.ApplicationCommands> biblioteki lub. <xref:System.Windows.Input.NavigationCommands>  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak utworzyć znak <xref:System.Windows.Shell.ThumbButtonInfo> w znaczniku. <xref:System.Windows.Shell.ThumbButtonInfo> Jest powiązany zpoleceniem<xref:System.Windows.Input.MediaCommands.Stop%2A?displayProperty=nameWithType> . Ten przykład jest częścią większego przykładu dostarczonego dla <xref:System.Windows.Shell.TaskbarItemInfo> klasy.  
  
 [!code-xaml[Shell_TaskbarItemSample#020](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#020)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.ICommandSource.Command" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
      </Docs>
    </Member>
    <Member MemberName="CommandParameter">
      <MemberSignature Language="C#" Value="public object CommandParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.ThumbButtonInfo.CommandParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandParameter { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandParameter : obj with get, set" Usage="System.Windows.Shell.ThumbButtonInfo.CommandParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia parametr, który ma zostać przekazany <see cref="P:System.Windows.Shell.ThumbButtonInfo.Command" /> do właściwości.</summary>
        <value>Parametr do przekazania do <see cref="P:System.Windows.Shell.ThumbButtonInfo.Command" /> właściwości. Wartość domyślna to <see langword="null" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Input.ICommandSource.CommandParameter" />
      </Docs>
    </Member>
    <Member MemberName="CommandParameterProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandParameterProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandParameterProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.ThumbButtonInfo.CommandParameterProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandParameterProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandParameterProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommandParameterProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.ThumbButtonInfo.CommandParameterProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje właściwość <see cref="P:System.Windows.Shell.ThumbButtonInfo.CommandParameter" /> zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.ThumbButtonInfo.CommandProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommandProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.ThumbButtonInfo.CommandProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje właściwość <see cref="P:System.Windows.Shell.ThumbButtonInfo.Command" /> zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTarget">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement CommandTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement CommandTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.ThumbButtonInfo.CommandTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTarget As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ CommandTarget { System::Windows::IInputElement ^ get(); void set(System::Windows::IInputElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandTarget : System.Windows.IInputElement with get, set" Usage="System.Windows.Shell.ThumbButtonInfo.CommandTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia element, dla którego zostanie wywołane określone polecenie.</summary>
        <value>Element, dla którego zostanie wywołane określone polecenie. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Shell.ThumbButtonInfo.CommandTarget%2A> Właściwość zawiera odwołanie do elementu, który jest już zdefiniowany w aplikacji.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.ICommandSource.CommandTarget" />
      </Docs>
    </Member>
    <Member MemberName="CommandTargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandTargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandTargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.ThumbButtonInfo.CommandTargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandTargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandTargetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommandTargetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.ThumbButtonInfo.CommandTargetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje właściwość <see cref="P:System.Windows.Shell.ThumbButtonInfo.CommandTarget" /> zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.ThumbButtonInfo.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="thumbButtonInfo.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.ThumbButtonInfo.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Windows.Shell.ThumbButtonInfo.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst, który będzie wyświetlany dla etykietki narzędzia przycisku miniatury.</summary>
        <value>Tekst do wyświetlenia dla etykietki narzędzia przycisku miniatury. Wartość domyślna to pusty ciąg.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz dodać obraz do przycisku miniatury, ale nie istnieje żadna właściwość do ustawiania tekstu na przycisku miniatury. Można jednak ustawić <xref:System.Windows.Shell.ThumbButtonInfo.Description%2A> właściwość w celu dodania tekstu opisującego, który jest wyświetlany w etykietce narzędzia, gdy wskaźnik myszy zostanie przesunięty nad przycisk miniatury.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak utworzyć znak <xref:System.Windows.Shell.ThumbButtonInfo> w znaczniku. <xref:System.Windows.Shell.ThumbButtonInfo> Jest powiązany zpoleceniem<xref:System.Windows.Input.MediaCommands.Stop%2A?displayProperty=nameWithType> . Tekst opisujący etykietkę narzędzia zostanie **zatrzymany**. Ten przykład jest częścią większego przykładu dostarczonego dla <xref:System.Windows.Shell.TaskbarItemInfo> klasy.  
  
 [!code-xaml[Shell_TaskbarItemSample#020](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#020)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Shell.ThumbButtonInfo.ImageSource" />
      </Docs>
    </Member>
    <Member MemberName="DescriptionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DescriptionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DescriptionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.ThumbButtonInfo.DescriptionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DescriptionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DescriptionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DescriptionProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.ThumbButtonInfo.DescriptionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje właściwość <see cref="P:System.Windows.Shell.ThumbButtonInfo.Description" /> zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DismissWhenClicked">
      <MemberSignature Language="C#" Value="public bool DismissWhenClicked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DismissWhenClicked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.ThumbButtonInfo.DismissWhenClicked" />
      <MemberSignature Language="VB.NET" Value="Public Property DismissWhenClicked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DismissWhenClicked { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DismissWhenClicked : bool with get, set" Usage="System.Windows.Shell.ThumbButtonInfo.DismissWhenClicked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy miniatura paska zadań jest zamykana po kliknięciu przycisku miniatury.</summary>
        <value><see langword="true" />Jeśli miniatura zostanie ZAMKNIĘTA; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie miniatura paska zadań pozostaje widoczna po kliknięciu przycisku miniatury. Aby można było zamknąć miniaturę po kliknięciu przycisku miniatury, ustaw <xref:System.Windows.Shell.ThumbButtonInfo.DismissWhenClicked%2A> właściwość na. `true`  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak utworzyć znak <xref:System.Windows.Shell.ThumbButtonInfo> w znaczniku. <xref:System.Windows.Shell.ThumbButtonInfo> Jest powiązany zpoleceniem<xref:System.Windows.Input.MediaCommands.Stop%2A?displayProperty=nameWithType> . Jest on skonfigurowany do zamykania po kliknięciu przycisku. Ten przykład jest częścią większego przykładu dostarczonego dla <xref:System.Windows.Shell.TaskbarItemInfo> klasy.  
  
 [!code-xaml[Shell_TaskbarItemSample#020](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#020)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DismissWhenClickedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DismissWhenClickedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DismissWhenClickedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.ThumbButtonInfo.DismissWhenClickedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DismissWhenClickedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DismissWhenClickedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DismissWhenClickedProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.ThumbButtonInfo.DismissWhenClickedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje właściwość <see cref="P:System.Windows.Shell.ThumbButtonInfo.DismissWhenClicked" /> zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageSource">
      <MemberSignature Language="C#" Value="public System.Windows.Media.ImageSource ImageSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.ImageSource ImageSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.ThumbButtonInfo.ImageSource" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageSource As ImageSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::ImageSource ^ ImageSource { System::Windows::Media::ImageSource ^ get(); void set(System::Windows::Media::ImageSource ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageSource : System.Windows.Media.ImageSource with get, set" Usage="System.Windows.Shell.ThumbButtonInfo.ImageSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ImageSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obraz wyświetlany na przycisku miniatury.</summary>
        <value>Obraz wyświetlany na przycisku miniatury. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można umieścić statyczne lub animowane <xref:System.Windows.Media.ImageSource> na przycisku miniatury. Obrazy są renderowane o odpowiednim rozmiarze. <xref:System.Windows.Media.ImageSource> Jeśli<xref:System.Drawing.Icon>reprezentuje, używana jest również odpowiednia głębia bitowa.  
  
 Aby podać dodatkowe informacje tekstowe na temat przycisku miniatury, ustaw <xref:System.Windows.Shell.ThumbButtonInfo.Description%2A> właściwość.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak utworzyć znak <xref:System.Windows.Shell.ThumbButtonInfo> w znaczniku. <xref:System.Windows.Shell.ThumbButtonInfo> Jest powiązany zpoleceniem<xref:System.Windows.Input.MediaCommands.Stop%2A?displayProperty=nameWithType> . Obraz przycisku jest ciemnym szarym kwadratem zdefiniowanym w języku XAML jako zasób statyczny. Ten przykład jest częścią większego przykładu dostarczonego dla <xref:System.Windows.Shell.TaskbarItemInfo> klasy.  
  
 [!code-xaml[Shell_TaskbarItemSample#020](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_taskbaritemsample/cs/mainwindow.xaml#020)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.ImageSource" />
      </Docs>
    </Member>
    <Member MemberName="ImageSourceProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ImageSourceProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ImageSourceProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.ThumbButtonInfo.ImageSourceProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ImageSourceProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ImageSourceProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ImageSourceProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.ThumbButtonInfo.ImageSourceProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje właściwość <see cref="P:System.Windows.Shell.ThumbButtonInfo.ImageSource" /> zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBackgroundVisible">
      <MemberSignature Language="C#" Value="public bool IsBackgroundVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBackgroundVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.ThumbButtonInfo.IsBackgroundVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property IsBackgroundVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBackgroundVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsBackgroundVisible : bool with get, set" Usage="System.Windows.Shell.ThumbButtonInfo.IsBackgroundVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy wokół przycisku miniatury jest wyświetlany obramowanie i podświetlenie.</summary>
        <value><see langword="true" />Jeśli zostanie wyświetlony obramowanie i wyróżnienie wokół przycisku miniatury; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie obramowanie pojawia się wokół <xref:System.Windows.Shell.ThumbButtonInfo.ImageSource%2A>i jest wyświetlane, gdy wskaźnik myszy jest przesuwany nad przyciskiem miniatury. Aby wyświetlić tylko <xref:System.Windows.Shell.ThumbButtonInfo.ImageSource%2A> bez obramowania i wyróżniania, <xref:System.Windows.Shell.ThumbButtonInfo.IsBackgroundVisible%2A> ustaw właściwość na `false`. Jeśli <xref:System.Windows.Shell.ThumbButtonInfo.IsBackgroundVisible%2A> <xref:System.Windows.Shell.ThumbButtonInfo.ImageSource%2A> jest `false`, nadal zmienia się, gdy kliknięto przycisk miniatura, aby przekazać użytkownikowi wizualną opinię.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBackgroundVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsBackgroundVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsBackgroundVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.ThumbButtonInfo.IsBackgroundVisibleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsBackgroundVisibleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsBackgroundVisibleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsBackgroundVisibleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.ThumbButtonInfo.IsBackgroundVisibleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje właściwość <see cref="P:System.Windows.Shell.ThumbButtonInfo.IsBackgroundVisible" /> zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.ThumbButtonInfo.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool with get, set" Usage="System.Windows.Shell.ThumbButtonInfo.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy przycisk miniatura jest włączony.</summary>
        <value><see langword="true" />Jeśli przycisk miniatury jest włączony; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy właściwość ma `false`wartość, przycisk Miniatura nie <xref:System.Windows.Shell.ThumbButtonInfo.ImageSource%2A> odpowiada na <xref:System.Windows.Shell.ThumbButtonInfo.Click> zdarzenia, a obiekt jest wyszarzony. <xref:System.Windows.Shell.ThumbButtonInfo.IsEnabled%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Shell.ThumbButtonInfo.IsInteractive" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.ThumbButtonInfo.IsEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.ThumbButtonInfo.IsEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje właściwość <see cref="P:System.Windows.Shell.ThumbButtonInfo.IsEnabled" /> zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInteractive">
      <MemberSignature Language="C#" Value="public bool IsInteractive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInteractive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.ThumbButtonInfo.IsInteractive" />
      <MemberSignature Language="VB.NET" Value="Public Property IsInteractive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInteractive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsInteractive : bool with get, set" Usage="System.Windows.Shell.ThumbButtonInfo.IsInteractive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy użytkownik może korzystać z przycisku miniatury.</summary>
        <value><see langword="true" />Jeśli użytkownik może korzystać z przycisku miniatury; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy właściwość ma `false`wartość, przycisk Miniatura nie odpowiada na <xref:System.Windows.Shell.ThumbButtonInfo.Click> zdarzenia. <xref:System.Windows.Shell.ThumbButtonInfo.IsInteractive%2A> <xref:System.Windows.Shell.ThumbButtonInfo.ImageSource%2A> Nie jest to jednak wygaszone. Możesz użyć przycisku miniatury, który nie jest interaktywny jako ikona stanu.  
  
 Jeśli właściwość jest `false`, ustawienie dla <xref:System.Windows.Shell.ThumbButtonInfo.IsInteractive%2A> nie ma żadnego efektu. <xref:System.Windows.Shell.ThumbButtonInfo.IsEnabled%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Shell.ThumbButtonInfo.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="IsInteractiveProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsInteractiveProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsInteractiveProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.ThumbButtonInfo.IsInteractiveProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsInteractiveProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsInteractiveProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsInteractiveProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.ThumbButtonInfo.IsInteractiveProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje właściwość <see cref="P:System.Windows.Shell.ThumbButtonInfo.IsInteractive" /> zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visibility">
      <MemberSignature Language="C#" Value="public System.Windows.Visibility Visibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Visibility Visibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.ThumbButtonInfo.Visibility" />
      <MemberSignature Language="VB.NET" Value="Public Property Visibility As Visibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Visibility Visibility { System::Windows::Visibility get(); void set(System::Windows::Visibility value); };" />
      <MemberSignature Language="F#" Value="member this.Visibility : System.Windows.Visibility with get, set" Usage="System.Windows.Shell.ThumbButtonInfo.Visibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Visibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą stan wyświetlania przycisku miniatury.</summary>
        <value>Wartość wyliczenia, która określa stan wyświetlania przycisku miniatury. Wartość domyślna to <see cref="F:System.Windows.Visibility.Visible" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie przycisk miniatury to <xref:System.Windows.Visibility.Visible>. [!INCLUDE[win7](~/includes/win7-md.md)]zezwala na maksymalnie siedem przycisków na miniatury paska zadań. Gdy właściwość jest ustawiona na <xref:System.Windows.Visibility.Hidden>, przycisk Miniatura nie ma widocznych elementów, ale miejsce jest nadal zarezerwowane dla niego. <xref:System.Windows.Shell.ThumbButtonInfo.Visibility%2A> Gdy przycisk miniatury ma <xref:System.Windows.Visibility.Collapsed>wartość, nie ma widocznych elementów i nie jest zarezerwowany. W takim przypadku wyświetlane są dodatkowe przyciski miniatur w <xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos%2A> kolekcji.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Shell.ThumbButtonInfoCollection" />
      </Docs>
    </Member>
    <Member MemberName="VisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Shell.ThumbButtonInfo.VisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VisibilityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VisibilityProperty : System.Windows.DependencyProperty" Usage="System.Windows.Shell.ThumbButtonInfo.VisibilityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje właściwość <see cref="P:System.Windows.Shell.ThumbButtonInfo.Visibility" /> zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
