<Type Name="SignedXml" FullName="System.Security.Cryptography.Xml.SignedXml">
  <Metadata><Meta Name="ms.openlocfilehash" Value="546f0e06ccae6926dd7dfb936ed18c39b9c7c613" /><Meta Name="ms.sourcegitcommit" Value="8544f14c8194a55eb22d46721b0bbe46f345c063" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/21/2019" /><Meta Name="ms.locfileid" Value="69669605" /></Metadata><TypeSignature Language="C#" Value="public class SignedXml" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SignedXml extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.SignedXml" />
  <TypeSignature Language="VB.NET" Value="Public Class SignedXml" />
  <TypeSignature Language="C++ CLI" Value="public ref class SignedXml" />
  <TypeSignature Language="F#" Value="type SignedXml = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia otokę dla obiektu podstawowego podpisu XML w celu ułatwienia tworzenia podpisów XML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa jest implementacją .NET organizacja World Wide Web Consortium (W3C) [składnią i specyfikacją przetwarzania](https://www.w3.org/TR/xmldsig-core/), znaną również jako xmldsig (podpis cyfrowy XML). <xref:System.Security.Cryptography.Xml.SignedXml> XMLDSIG to oparty na standardach sposób, który umożliwia podpisywanie i weryfikowanie wszystkich lub części dokumentu XML lub innych danych, które są adresowane z Uniform Resource Identifier (URI).
  
 Użyj klasy <xref:System.Security.Cryptography.Xml.SignedXml> , gdy zachodzi potrzeba udostępniania podpisanych danych XML między aplikacjami lub organizacjami w standardowy sposób. Wszelkie dane podpisane przy użyciu tej klasy mogą być weryfikowane przez jakąkolwiek zgodność z implementacją specyfikacji W3C dla XMLDSIG.
  
 <xref:System.Security.Cryptography.Xml.SignedXml> Klasa umożliwia tworzenie następujących trzech rodzajów podpisów cyfrowych XML:  
  
|Typ podpisu|Opis|  
|--------------------|-----------------|  
|Podpis na kopercie|Podpis jest zawarty w elemencie XML, który jest podpisywany.|  
|Sygnatura obejmująca|Podpisany kod XML jest zawarty w `<Signature>` elemencie.|  
|Podpis wewnętrzny odłączony|Podpis i podpisany kod XML znajdują się w tym samym dokumencie, ale żaden z nich nie zawiera drugiego elementu.|  
  
 Istnieje również czwarty rodzaj podpisu nazywany zewnętrznym podpisem, który jest, gdy dane i podpis znajdują się w oddzielnych dokumentach XML. Zewnętrzne podpisy odłączone nie są obsługiwane przez <xref:System.Security.Cryptography.Xml.SignedXml> klasę.  
  
## <a name="the-structure-of-an-xml-signature"></a>Struktura podpisu XML  

XMLDSIG tworzy `<Signature>` element, który zawiera podpis cyfrowy dokumentu XML lub inne dane, które są adresowane z identyfikatora URI. `<Signature>` Element może opcjonalnie zawierać informacje o miejscu, w którym należy znaleźć klucz, który sprawdzi sygnaturę i który algorytm kryptograficzny został użyty do podpisywania. Podstawowa struktura jest następująca:  
  
```xml
<Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#">  
    <SignedInfo>  
      <CanonicalizationMethod Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315"/>  
      <SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/>  
      <Reference URI="">  
        <Transforms>  
          <Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/>  
        </Transforms>  
        <DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/>  
        <DigestValue>Base64EncodedValue==</DigestValue>  
      </Reference>  
    </SignedInfo>  
    <SignatureValue>AnotherBase64EncodedValue===</SignatureValue>  
</Signature>
```  
  
Główne części tej struktury to:  
  
- `<CanonicalizationMethod>` Element

    Określa reguły ponownego zapisywania `Signature` elementu z XML/tekst w bajtach w celu weryfikacji podpisu. Wartość domyślna w programie .NET to <http://www.w3.org/TR/2001/REC-xml-c14n-20010315>, która identyfikuje godny zaufania algorytm. Ten element jest reprezentowany przez <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A?displayProperty=nameWithType> właściwość.  
  
- `<SignatureMethod>` Element

   Określa algorytm używany do generowania podpisu i walidacji, który został zastosowany do `<Signature>` elementu w celu utworzenia wartości w `<SignatureValue>`. W poprzednim przykładzie wartość <http://www.w3.org/2000/09/xmldsig#rsa-sha1> identyfikuje sygnaturę RSA PKCS1 SHA-1. Z powodu kolizji problemów z algorytmem SHA-1 Firma Microsoft zaleca model zabezpieczeń oparty na algorytmie SHA-256 lub lepszym. Ten element jest reprezentowany przez <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A> właściwość.  
  
- `<SignatureValue>` Element

   Określa podpis kryptograficzny dla `<Signature>` elementu. Jeśli ta sygnatura nie zostanie zweryfikowana, część `<Signature>` bloku została naruszona, a dokument jest uznawany za nieprawidłowy. O ile `<CanonicalizationMethod>` wartość jest godna zaufania, ta wartość jest wysoce odporna na manipulowanie. Ten element jest reprezentowany przez <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A> właściwość.  
  
- `URI` Atrybut elementu`<Reference>`  

   Określa obiekt danych przy użyciu odwołania identyfikatora URI. Ten atrybut jest reprezentowany przez <xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=nameWithType> właściwość.  
  
   - Nieokreślanie `URI` atrybutu, czyli <xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=nameWithType> ustawienie właściwości na `null`, oznacza, że aplikacja otrzymująca powinna znać tożsamość obiektu. W większości przypadków `null` identyfikator URI spowoduje zgłoszenie wyjątku. Nie należy używać `null` identyfikatora URI, chyba że aplikacja korzysta z protokołu, który go wymaga.  
  
   - `URI` Ustawienie atrybutu na pusty ciąg wskazuje, że element główny dokumentu jest podpisywany w postaci formy z podpisem.  
  
   - Jeśli wartość `URI` atrybutu zaczyna się od #, wartość musi zostać rozpoznana jako element w bieżącym dokumencie. Ten formularz może być używany z dowolnymi obsługiwanymi typami sygnatur (podpisem z podpisem, złożeniem podpisu lub podpisem wewnętrznym).  
  
   - Wszystkie inne są uznawane za odłączone do zasobu zewnętrznego i nie są obsługiwane przez <xref:System.Security.Cryptography.Xml.SignedXml> klasę.  
  
- `<Transforms>` Element  

   Zawiera uporządkowaną listę `<Transform>` elementów, które opisują, w jaki sposób osoba podpisująca uzyskała zaszyfrowane obiekty danych. Algorytm przekształcania jest podobny do metody kanonizacji, ale zamiast zapisywania `<Signature>` elementu ponownie zapisuje zawartość identyfikowaną `URI` przez atrybut `<Reference>` elementu. Element jest reprezentowany <xref:System.Security.Cryptography.Xml.TransformChain> przez klasę. `<Transforms>`  
  
   - Każdy algorytm przekształcania jest definiowany jako dane wejściowe przy użyciu kodu XML (zestawu węzłów XPath) lub bajtów. Jeśli format bieżących danych różni się od wymagań wejściowych transformacji, stosowane są reguły konwersji.  
  
   - Każdy algorytm transformacji jest definiowany jako dane wyjściowe w postaci XML lub bajtów.  
  
   - Jeśli dane wyjściowe ostatniego algorytmu transformacji nie są zdefiniowane w bajtach (lub nie określono żadnych transformacji), [Metoda kanonizacji](https://www.w3.org/TR/2001/REC-xml-c14n-20010315) jest używana jako niejawna transformacja (nawet jeśli w `<CanonicalizationMethod>` elemencie określono inny algorytm).  
  
   - Wartość <http://www.w3.org/2000/09/xmldsig#enveloped-signature> dla algorytmu transformacji koduje regułę, która jest interpretowana jako `<Signature>` Usuń element z dokumentu. W przeciwnym razie weryfikator z podpisem na kopercie zarejestruje dokument, łącznie z podpisem, ale osoba podpisująca będzie mogła nawiązać podsumowanie dokumentu przed zastosowaniem podpisu, co prowadzi do różnych odpowiedzi.  

- `<DigestMethod>` Element
 
   Identyfikuje metodę Digest (mieszanie kryptograficzne) do zastosowania w przekształconej zawartości identyfikowanej przez `URI` atrybut `<Reference>` elementu. Jest to reprezentowane przez <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A?displayProperty=nameWithType> właściwość.  
  
## <a name="choosing-a-canonicalization-method"></a>Wybór metody kanonizacji  
 O ile nie współpracujesz ze specyfikacją, która wymaga użycia innej wartości, zalecamy użycie domyślnej metody kanonizacji programu .NET, która jest algorytmem XML-C14N 1,0, którego wartość to <http://www.w3.org/TR/2001/REC-xml-c14n-20010315>. Algorytm XML-C14N 1,0 musi być obsługiwany przez wszystkie implementacje XMLDSIG, szczególnie w przypadku, gdy jest to niejawne ostateczne przekształcenie, które ma zostać zastosowane.  
  
 Istnieją wersje algorytmów kanonizacji, które obsługują zachowywanie komentarzy. Nie zaleca się stosowania komentarzy do metod kanonizacji, ponieważ naruszają one zasadę "Podpisz co się". Oznacza to, że komentarze w `<Signature>` elemencie nie zmieniają logiki przetwarzania dla sposobu wykonywania podpisu, tylko do czego służy wartość sygnatury. W połączeniu z algorytmem słabej sygnatury, co pozwala na uwzględnienie komentarzy, osoba atakująca niepotrzebnie może wymusić kolizję skrótów, co sprawia, że naruszone dokumenty są wiarygodne.  W .NET Framework domyślnie obsługiwane są tylko wbudowane canonicalizers. Aby zapewnić obsługę dodatkowych lub niestandardowych canonicalizers, zobacz <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> właściwość. Jeśli dokument używa metody kanonizacji, która nie znajduje się w kolekcji reprezentowanej przez <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> właściwość, Metoda `false`zwróci <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> wartość.  
  
> [!NOTE]
>  Aplikacja niezwykle obronna może usunąć wszystkie wartości, które nie oczekują od nadawcy do użycia <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> w kolekcji.  
  
## <a name="are-the-reference-values-safe-from-tampering"></a>Czy wartości referencyjne są bezpieczne przed manipulacją?  
 Tak, `<Reference>` wartości są bezpieczne przed manipulacją. Platforma .NET weryfikuje `<SignatureValue>` obliczenia przed przetworzeniem jakichkolwiek `<Reference>` wartości i skojarzonych z nimi przekształceń i przerywa wczesne działanie, aby uniknąć potencjalnie złośliwych instrukcji przetwarzania.  
  
## <a name="choosing-the-elements-to-sign"></a>Wybieranie elementów do podpisania  
 Zalecamy używanie wartości "" dla `URI` atrybutu (lub <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> ustawienie dla właściwości pustego ciągu), jeśli jest to możliwe. Oznacza to, że cały dokument jest brany pod uwagę przy obliczaniu podsumowania, co oznacza, że cały dokument jest chroniony przed naruszeniem.  
  
 Jest bardzo powszechne, aby wyświetlić `URI` wartości w postaci kotwic, takich jak #foo, odwołując się do elementu, którego atrybut ID to "foo". Niestety, jest to łatwe w użyciu, ponieważ może to być naruszone, ponieważ obejmuje tylko zawartość elementu docelowego, a nie kontekstu. Nadużyenie tego rozróżnienia jest znane jako Zawijanie sygnatur XML (XSW).  
  
 Jeśli aplikacja traktuje Komentarze jako semantykę (która nie jest typowa podczas pracy z XML), należy użyć "#xpointer (/)" zamiast "" i "#xpointer (ID (" foo "))" zamiast "#foo". Wersje #xpointer są interpretowane jako komentarze, podczas gdy krótkie nazwy formularzy nie wyłączają komentarzy.  
  
 Jeśli musisz zaakceptować dokumenty, które są tylko częściowo chronione i chcesz się upewnić, że odczytywana jest ta sama zawartość, której podpis jest chroniony, użyj <xref:System.Security.Cryptography.Xml.SignedXml.GetIdElement%2A> metody.  
  
## <a name="security-considerations-about-the-keyinfo-element"></a>Zagadnienia dotyczące zabezpieczeń dotyczące elementu KeyInfo  
 Dane w opcjonalnym `<KeyInfo>` elemencie ( <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> czyli Właściwość), które zawierają klucz do weryfikacji podpisu, nie powinny być zaufane.  
  
 W szczególności, gdy <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> wartość reprezentuje klucz publiczny RSA, DSA lub ECDSA, dokument mógł zostać naruszony, <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> mimo że metoda zgłasza, że podpis jest prawidłowy.  Może to być spowodowane tym, że jednostka wykonująca manipulację musi wygenerować nowy klucz i ponownie podpisać zmodyfikowany dokument nowym kluczem. Tak więc, chyba że aplikacja zweryfikuje, że klucz publiczny jest oczekiwaną wartością, dokument powinien być traktowany tak, jakby był naruszony. Wymaga to, aby aplikacja zbadała klucz publiczny osadzony w dokumencie i zweryfikować ją na liście znanych wartości kontekstu dokumentu. Na przykład, jeśli dokument jest zrozumiały do wystawienia przez znanego użytkownika, należy sprawdzić klucz w oparciu o listę znanych kluczy używanych przez tego użytkownika.  
  
 Możesz również zweryfikować klucz po przetworzeniu dokumentu przy użyciu <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey%2A> metody, zamiast <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> korzystać z metody. Aby zapewnić optymalne zabezpieczenia, należy wcześniej sprawdzić klucz.  
  
 Alternatywnie Rozważ podjęcie próby zarejestrowania kluczy publicznych użytkownika, zamiast odczytywania zawartości `<KeyInfo>` elementu.  
  
## <a name="security-considerations-about-the-x509data-element"></a>Zagadnienia dotyczące zabezpieczeń elementu X509Data  
 Opcjonalny `<X509Data>` element jest elementem podrzędnym `<KeyInfo>` elementu i zawiera co najmniej jeden certyfikat x509 lub identyfikatory certyfikatów x509. Dane w `<X509Data>` elemencie nie powinny również być zaufane z założenia.  
  
 Podczas weryfikowania dokumentu z osadzonym `<X509Data>` elementem platforma .NET weryfikuje tylko, że dane są rozpoznawane jako certyfikat x509, którego klucz publiczny można pomyślnie użyć do zweryfikowania podpisu dokumentu. W przeciwieństwie do <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> wywoływania metody `verifySignatureOnly` z parametrem ustawionym na `false`, nie jest przeprowadzane sprawdzanie odwołań, nie jest zaznaczone żadne zaufanie łańcucha i nie zweryfikowano wygaśnięcia. Nawet jeśli aplikacja wyodrębnia sam certyfikat i przekazuje go do <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> metody `verifySignatureOnly` z parametrem ustawionym na `false`, to nadal nie jest wystarczające sprawdzanie poprawności, aby zapobiec modyfikowaniu dokumentów. Certyfikat nadal musi być zweryfikowany jako odpowiedni dla podpisu dokumentu.  
  
 Użycie osadzonego certyfikatu podpisywania może zapewnić przydatną strategię rotacji kluczy, `<X509Data>` niezależnie od tego, czy znajduje się w sekcji czy w treści dokumentu. W przypadku korzystania z tej metody aplikacja powinna wyodrębnić certyfikat ręcznie i wykonać walidację podobną do:  
  
-   Certyfikat został wystawiony bezpośrednio lub za pośrednictwem łańcucha przez urząd certyfikacji, którego certyfikat publiczny został osadzony w aplikacji.  
  
     Korzystanie z listy zaufania udostępnionej przez system operacyjny bez dodatkowych kontroli, takich jak znana nazwa podmiotu, nie jest wystarczające, aby zapobiec <xref:System.Security.Cryptography.Xml.SignedXml>naruszeniu.  
  
-   Zweryfikowano, że certyfikat nie wygasł w chwili podpisywania dokumentu (lub "teraz" do przetwarzania dokumentów niemal w czasie rzeczywistym).  
  
-   W przypadku certyfikatów długotrwałych wystawionych przez urząd certyfikacji, który obsługuje odwoływanie, sprawdź, czy certyfikat nie został odwołany.  
  
-   Podmiot certyfikatu jest weryfikowany jako właściwy dla bieżącego dokumentu.  
  
## <a name="choosing-the-transform-algorithm"></a>Wybieranie algorytmu transformacji  
 W przypadku współdziałania ze specyfikacją, która zawiera określone wartości (takie jak XrML), należy postępować zgodnie ze specyfikacją. Jeśli masz podpisany podpis (na przykład podczas podpisywania całego dokumentu), musisz użyć <http://www.w3.org/2000/09/xmldsig#enveloped-signature> (reprezentowane <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> przez klasę). Można również określić niejawne przekształcenie C14N XML, ale nie jest to konieczne.  W przypadku podpisu obejmujących lub odłączonych nie są wymagane żadne przekształcenia. Niejawne przekształcenie XML-C14N zajmuje wszystko.  
  
 Wraz z aktualizacją zabezpieczeń wprowadzoną przez [Biuletyn zabezpieczeń firmy Microsoft MS16-035](https://docs.microsoft.com/security-updates/securitybulletins/2016/ms16-035), program .NET ograniczył, jakie transformacje mogą być używane w weryfikacji dokumentu domyślnie, a niezaufane przekształcenia powodują <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> , że zawsze są zwracane. `false` W szczególności przekształceń, które wymagają dodatkowych danych wejściowych (określonych jako elementy podrzędne w kodzie XML), nie są już dozwolone ze względu na ich podatność na zagrożenia przez złośliwych użytkowników. Konsorcjum W3C zaleca uniknięcie przekształceń XPath i XSLT, które są dwoma głównymi transformacjemi, których dotyczą te ograniczenia.  
  
## <a name="the-problem-with-external-references"></a>Problem z odwołaniami zewnętrznymi  
 Jeśli aplikacja nie sprawdza, czy odwołania zewnętrzne są odpowiednie dla bieżącego kontekstu, mogą być nadużywane w sposób zapewniający wielu luk w zabezpieczeniach (w tym odmowa usługi, rozproszone odbicie odmowy usługi, informacje Ujawnienie, obejście podpisu i zdalne wykonywanie kodu). Nawet jeśli aplikacja była w trakcie sprawdzania poprawności identyfikatora URI odwołania zewnętrznego, nadal wystąpił problem z załadowaniem zasobu dwa razy: po odczytaniu przez aplikację i po <xref:System.Security.Cryptography.Xml.SignedXml> jego odczytaniu. Ze względu na to, że nie ma żadnych gwarancji, że aplikacja do odczytu i dokumentu nie ma tej samej zawartości, podpis nie zapewnia zaufania.  
  
 W przypadku ryzyka związanego z odwołaniami <xref:System.Security.Cryptography.Xml.SignedXml> zewnętrznymi program zgłosi wyjątek w przypadku napotkania odwołania zewnętrznego.  Aby uzyskać więcej informacji o tym problemie, zobacz [artykuł w bazie wiedzy 3148821](https://support.microsoft.com/kb/3148821).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak podpisać i zweryfikować cały dokument XML przy użyciu podpisu z podpisem.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CPP/exampleenvelope.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CS/exampleenvelope.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/VB/exampleenvelope.vb#1)]  
  
 Poniższy przykład kodu pokazuje, jak podpisać i weryfikować pojedynczy element dokumentu XML przy użyciu podpisu obejmującego.  
  
 [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://www.w3.org/TR/xmldsig-bestpractices">Najlepsze rozwiązania dotyczące podpisu XML</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignedXml();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje, jak podpisać i zweryfikować cały dokument XML przy użyciu podpisu z podpisem.  
  
 [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/VB/sample.vb#1)]  
  
 Poniższy przykład kodu przedstawia sposób podpisywania i weryfikowania obiektu Uniform Resource Identifier (URI) z odłączonym podpisem.  
  
 [!code-cpp[XMLDSIG - Signature - Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CPP/sample.cpp#1)]
 [!code-csharp[XMLDSIG - Signature - Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CS/sample.cs#1)]
 [!code-vb[XMLDSIG - Signature - Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/XMLDSIG - Signature - Detached/VB/sample.vb#1)]  
  
 Poniższy przykład kodu pokazuje, jak podpisać i weryfikować pojedynczy element dokumentu XML przy użyciu podpisu obejmującego.  
  
 [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedXml (System.Xml.XmlDocument document);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlDocument document) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlDocument)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (document As XmlDocument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignedXml(System::Xml::XmlDocument ^ document);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.SignedXml : System.Xml.XmlDocument -&gt; System.Security.Cryptography.Xml.SignedXml" Usage="new System.Security.Cryptography.Xml.SignedXml document" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.XmlDocument" />
      </Parameters>
      <Docs>
        <param name="document">Obiekt <see cref="T:System.Xml.XmlDocument" /> , który ma zostać użyty do zainicjowania nowego <see cref="T:System.Security.Cryptography.Xml.SignedXml" />wystąpienia.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> klasy z określonego dokumentu XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje, jak podpisać i zweryfikować cały dokument XML przy użyciu podpisu z podpisem.  
  
 [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/VB/sample.vb#1)]  
  
 Poniższy przykład kodu przedstawia sposób podpisywania i weryfikowania obiektu Uniform Resource Identifier (URI) z odłączonym podpisem.  
  
 [!code-cpp[XMLDSIG - Signature - Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CPP/sample.cpp#1)]
 [!code-csharp[XMLDSIG - Signature - Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CS/sample.cs#1)]
 [!code-vb[XMLDSIG - Signature - Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/XMLDSIG - Signature - Detached/VB/sample.vb#1)]  
  
 Poniższy przykład kodu pokazuje, jak podpisać i weryfikować pojedynczy element dokumentu XML przy użyciu podpisu obejmującego.  
  
 [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="document" />  
  
—lub— 
Parametr zawiera właściwość o wartości <see cref="P:System.Xml.XmlDocument.DocumentElement" />null. <paramref name="document" /></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedXml (System.Xml.XmlElement elem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlElement elem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elem As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignedXml(System::Xml::XmlElement ^ elem);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.SignedXml : System.Xml.XmlElement -&gt; System.Security.Cryptography.Xml.SignedXml" Usage="new System.Security.Cryptography.Xml.SignedXml elem" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elem" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="elem">Obiekt <see cref="T:System.Xml.XmlElement" /> , który ma zostać użyty do zainicjowania nowego <see cref="T:System.Security.Cryptography.Xml.SignedXml" />wystąpienia.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> klasy z określonego <see cref="T:System.Xml.XmlElement" /> obiektu.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="elem" /></exception>
      </Docs>
    </Member>
    <Member MemberName="AddObject">
      <MemberSignature Language="C#" Value="public void AddObject (System.Security.Cryptography.Xml.DataObject dataObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddObject(class System.Security.Cryptography.Xml.DataObject dataObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.AddObject(System.Security.Cryptography.Xml.DataObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddObject(System::Security::Cryptography::Xml::DataObject ^ dataObject);" />
      <MemberSignature Language="F#" Value="member this.AddObject : System.Security.Cryptography.Xml.DataObject -&gt; unit" Usage="signedXml.AddObject dataObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataObject" Type="System.Security.Cryptography.Xml.DataObject" />
      </Parameters>
      <Docs>
        <param name="dataObject"><see cref="T:System.Security.Cryptography.Xml.DataObject" /> Obiekt, który ma zostać dodany do listy obiektów, które mają być podpisane.</param>
        <summary><see cref="T:System.Security.Cryptography.Xml.DataObject" /> Dodaje obiekt do listy obiektów, które mają być podpisane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda dodaje element reprezentujący obiekt, który `<Signature>` ma być podpisany do elementu podpisu cyfrowego XML. `<Object>` <xref:System.Security.Cryptography.Xml.SignedXml.AddObject%2A>  
  
 Metoda wewnętrznie <xref:System.Security.Cryptography.Xml.SignedXml> wywołuje metodę obiektu<xref:System.Security.Cryptography.Xml.Signature> hermetyzowanego przez obiekt. <xref:System.Security.Cryptography.Xml.Signature.AddObject%2A> <xref:System.Security.Cryptography.Xml.SignedXml.AddObject%2A>  Można również dodać <xref:System.Security.Cryptography.Xml.DataObject> obiekt, bezpośrednio <xref:System.Security.Cryptography.Xml.Signature.AddObject%2A> wywołując metodę z <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> właściwości.  
  
 Aby uzyskać więcej informacji na temat podpisów cyfrowych XML, zobacz [specyfikację xmldsig](https://www.w3.org/TR/xmldsig-core/).  
  
   
  
## Examples  
 Poniższy przykład kodu jest obliczany i sygnatura XML.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml-AddObject-AddReference/CPP/example.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml-AddObject-AddReference/CS/example.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml-AddObject-AddReference/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddReference">
      <MemberSignature Language="C#" Value="public void AddReference (System.Security.Cryptography.Xml.Reference reference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddReference(class System.Security.Cryptography.Xml.Reference reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.AddReference(System.Security.Cryptography.Xml.Reference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddReference(System::Security::Cryptography::Xml::Reference ^ reference);" />
      <MemberSignature Language="F#" Value="member this.AddReference : System.Security.Cryptography.Xml.Reference -&gt; unit" Usage="signedXml.AddReference reference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Security.Cryptography.Xml.Reference" />
      </Parameters>
      <Docs>
        <param name="reference"><see cref="T:System.Security.Cryptography.Xml.Reference" /> Obiekt, który opisuje metodę podsumowania, wartość skrótu i transformację, która ma być używana do tworzenia podpisu cyfrowego XML.</param>
        <summary><see cref="T:System.Security.Cryptography.Xml.Reference" /> Dodaje obiekt<see cref="T:System.Security.Cryptography.Xml.SignedXml" /> do obiektu, który opisuje metodę Digest, wartość skrótu i transformację do użycia podczas tworzenia podpisu cyfrowego XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda dodaje element do<xref:System.Security.Cryptography.Xml.SignedXml> obiektu, który opisuje metodę Digest, wartość skrótu i transformację do użycia podczas tworzenia podpisu cyfrowego XML. `<Reference>` <xref:System.Security.Cryptography.Xml.SignedXml.AddReference%2A>  Element jest podelementem `<SignedInfo>`elementu. `<Reference>`  
  
 Metoda wewnętrznie <xref:System.Security.Cryptography.Xml.SignedXml> wywołuje metodę obiektu<xref:System.Security.Cryptography.Xml.SignedInfo> hermetyzowanego przez obiekt. <xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A> <xref:System.Security.Cryptography.Xml.SignedXml.AddReference%2A>  Można również dodać <xref:System.Security.Cryptography.Xml.Reference> obiekt, bezpośrednio <xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A> wywołując metodę z <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> właściwości.  
  
 Aby uzyskać więcej informacji na temat podpisów cyfrowych XML, zobacz [specyfikację xmldsig](https://www.w3.org/TR/xmldsig-core/).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak podpisać i zweryfikować cały dokument XML przy użyciu podpisu z podpisem.  
  
 [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/VB/sample.vb#1)]  
  
 Poniższy przykład kodu przedstawia sposób podpisywania i weryfikowania obiektu Uniform Resource Identifier (URI) z odłączonym podpisem.  
  
 [!code-cpp[XMLDSIG - Signature - Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CPP/sample.cpp#1)]
 [!code-csharp[XMLDSIG - Signature - Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CS/sample.cs#1)]
 [!code-vb[XMLDSIG - Signature - Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/XMLDSIG - Signature - Detached/VB/sample.vb#1)]  
  
 Poniższy przykład kodu pokazuje, jak podpisać i weryfikować pojedynczy element dokumentu XML przy użyciu podpisu obejmującego.  
  
 [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CheckSignature">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Określa, <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> czy właściwość weryfikuje.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CheckSignature">
      <MemberSignature Language="C#" Value="public bool CheckSignature ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckSignature() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.CheckSignature" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSignature () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckSignature();" />
      <MemberSignature Language="F#" Value="member this.CheckSignature : unit -&gt; bool" Usage="signedXml.CheckSignature " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Określa, <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> czy właściwość weryfikuje użycie klucza publicznego w podpisie.</summary>
        <returns><see langword="true" />Jeśli właściwość weryfikuje; w przeciwnym razie, <see langword="false" />. <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda oblicza również podsumowanie odwołań i wartość sygnatury.  
  
 Jeśli dokument XML został podpisany za pomocą podpisu X. 509, <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> Metoda przeszuka magazyn "addressbook" dla certyfikatów odpowiednich do weryfikacji. Jeśli na przykład certyfikat jest przywoływany przez identyfikator klucza podmiotu (narciarski), <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> Metoda wybierze certyfikaty z tym certyfikatem narciarskim i spróbuje je nawzajem, dopóki nie będzie można zweryfikować certyfikatu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak podpisać i zweryfikować cały dokument XML przy użyciu podpisu z podpisem.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CPP/exampleenvelope.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CS/exampleenvelope.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/VB/exampleenvelope.vb#1)]  
  
 Poniższy przykład kodu przedstawia sposób podpisywania i weryfikowania obiektu Uniform Resource Identifier (URI) z odłączonym podpisem.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CPP/exampledetached.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CS/exampledetached.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/VB/exampledetached.vb#1)]  
  
 Poniższy przykład kodu pokazuje, jak podpisać i weryfikować pojedynczy element dokumentu XML przy użyciu podpisu obejmującego.  
  
 [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Właściwość klucza publicznego w podpisie nie jest zgodna z <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod" /> właściwością. <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm" />  
  
—lub— 
Nie można utworzyć opisu podpisu.  
  
-lub 
Nie można utworzyć algorytmu wyznaczania wartości skrótu.</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckSignature">
      <MemberSignature Language="C#" Value="public bool CheckSignature (System.Security.Cryptography.AsymmetricAlgorithm key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckSignature(class System.Security.Cryptography.AsymmetricAlgorithm key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.AsymmetricAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSignature (key As AsymmetricAlgorithm) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckSignature(System::Security::Cryptography::AsymmetricAlgorithm ^ key);" />
      <MemberSignature Language="F#" Value="member this.CheckSignature : System.Security.Cryptography.AsymmetricAlgorithm -&gt; bool" Usage="signedXml.CheckSignature key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
      </Parameters>
      <Docs>
        <param name="key">Implementacja <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> właściwości, która zawiera klucz, który ma zostać użyty do <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> zweryfikowania właściwości.</param>
        <summary>Określa, <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> czy właściwość weryfikuje określony klucz.</summary>
        <returns><see langword="true" />Jeśli właściwość weryfikuje określony klucz; w przeciwnym razie, <see langword="false" />. <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu przedstawia sposób podpisywania i weryfikowania obiektu Uniform Resource Identifier (URI) z odłączonym podpisem.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CPP/exampledetached.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CS/exampledetached.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/VB/exampledetached.vb#1)]  
  
 Poniższy przykład kodu pokazuje, jak podpisać i zweryfikować cały dokument XML przy użyciu podpisu z podpisem.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CPP/exampleenvelope.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CS/exampleenvelope.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/VB/exampleenvelope.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="key" /></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Właściwość parametru nie jest zgodna z <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod" /> właściwością. <paramref name="key" /> <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm" />  
  
—lub— 
Nie można utworzyć opisu podpisu.  
  
-lub 
Nie można utworzyć algorytmu wyznaczania wartości skrótu.</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckSignature">
      <MemberSignature Language="C#" Value="public bool CheckSignature (System.Security.Cryptography.KeyedHashAlgorithm macAlg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckSignature(class System.Security.Cryptography.KeyedHashAlgorithm macAlg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.KeyedHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSignature (macAlg As KeyedHashAlgorithm) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckSignature(System::Security::Cryptography::KeyedHashAlgorithm ^ macAlg);" />
      <MemberSignature Language="F#" Value="member this.CheckSignature : System.Security.Cryptography.KeyedHashAlgorithm -&gt; bool" Usage="signedXml.CheckSignature macAlg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="macAlg" Type="System.Security.Cryptography.KeyedHashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="macAlg">Implementacja programu <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> , która zawiera komputer Mac, który ma być używany do <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> weryfikacji właściwości.</param>
        <summary>Określa, <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> czy właściwość weryfikuje określony algorytm kodu uwierzytelniania wiadomości (Mac).</summary>
        <returns><see langword="true" />Jeśli właściwość weryfikuje dla określonego komputera Mac; <see langword="false" />w przeciwnym razie. <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu przedstawia sposób podpisywania i weryfikowania obiektu Uniform Resource Identifier (URI) z odłączonym podpisem.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/CPP/xmldsigdetachedkeyedhashalg.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/CS/xmldsigdetachedkeyedhashalg.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/VB/xmldsigdetachedkeyedhashalg.vb#1)]  
  
 Poniższy przykład kodu pokazuje, jak podpisać i zweryfikować cały dokument XML przy użyciu podpisu obejmującego.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/CPP/xmldsigenvkeyedhashalg.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/CS/xmldsigenvkeyedhashalg.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/VB/xmldsigenvkeyedhashalg.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="macAlg" /></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><see cref="P:System.Security.Cryptography.HashAlgorithm.HashSize" /> Właściwość określonego<see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> obiektu jest nieprawidłowa.  
  
—lub— 
<see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> Właściwość jest<see langword="null" />.  
  
—lub— 
Nie można utworzyć przekształcenia kryptograficznego użytego do sprawdzenia podpisu.</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckSignature">
      <MemberSignature Language="C#" Value="public bool CheckSignature (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, bool verifySignatureOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckSignature(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, bool verifySignatureOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSignature (certificate As X509Certificate2, verifySignatureOnly As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckSignature(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate, bool verifySignatureOnly);" />
      <MemberSignature Language="F#" Value="member this.CheckSignature : System.Security.Cryptography.X509Certificates.X509Certificate2 * bool -&gt; bool" Usage="signedXml.CheckSignature (certificate, verifySignatureOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="verifySignatureOnly" Type="System.Boolean" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="certificate">Obiekt <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> , który ma zostać użyty do <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> zweryfikowania właściwości.</param>
        <param name="verifySignatureOnly"><see langword="true" />Aby sprawdzić tylko podpis; <see langword="false" /> aby zweryfikować podpis i certyfikat.</param>
        <summary>Określa, czy <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> Właściwość weryfikuje określony <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> obiekt i opcjonalnie czy certyfikat jest prawidłowy.</summary>
        <returns><see langword="true" />Jeśli podpis jest prawidłowy; w przeciwnym razie. <see langword="false" />  
  
—lub— 
 <see langword="true" />Jeśli sygnatura i certyfikat są prawidłowe; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W wersji 1,1 .NET Framework nie zweryfikowano certyfikatu X. 509.  W wersji 2,0 i nowszych certyfikat X. 509 został zweryfikowany.  
  
 W wersji 2,0 i nowszych .NET Framework <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> Metoda przeszuka magazyn "addressbook" dla certyfikatów odpowiednich do weryfikacji. Jeśli na przykład certyfikat jest przywoływany przez identyfikator klucza podmiotu (narciarski), <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> Metoda wybierze certyfikaty z tym certyfikatem narciarskim i spróbuje je nawzajem, dopóki nie będzie można zweryfikować certyfikatu.  
  
   
  
## Examples  
 Poniższy przykład kodu używa certyfikatu X. 509 z magazynu certyfikatów do podpisywania i weryfikowania dokumentu XML.  
  
 [!code-csharp[Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)#1](~/samples/snippets/csharp/VS_Snippets_CLR/Security.Cryptography.Xml.SignedXml.CheckSignature/cs/sample.cs#1)]
 [!code-vb[Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Security.Cryptography.Xml.SignedXml.CheckSignature/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="certificate" /></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Nie można utworzyć opisu podpisu dla <paramref name="certificate" /> parametru.</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckSignatureReturningKey">
      <MemberSignature Language="C#" Value="public bool CheckSignatureReturningKey (out System.Security.Cryptography.AsymmetricAlgorithm signingKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckSignatureReturningKey([out] class System.Security.Cryptography.AsymmetricAlgorithm&amp; signingKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(System.Security.Cryptography.AsymmetricAlgorithm@)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSignatureReturningKey (ByRef signingKey As AsymmetricAlgorithm) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckSignatureReturningKey([Runtime::InteropServices::Out] System::Security::Cryptography::AsymmetricAlgorithm ^ % signingKey);" />
      <MemberSignature Language="F#" Value="member this.CheckSignatureReturningKey :  -&gt; bool" Usage="signedXml.CheckSignatureReturningKey signingKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signingKey" Type="System.Security.Cryptography.AsymmetricAlgorithm" RefType="out" />
      </Parameters>
      <Docs>
        <param name="signingKey">Gdy ta metoda zwraca, zawiera implementację <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> , która przechowuje klucz publiczny w podpisie. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Określa, <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> czy właściwość weryfikuje użycie klucza publicznego w podpisie.</summary>
        <returns><see langword="true" />Jeśli właściwość weryfikuje użycie klucza publicznego w podpisie; w przeciwnym razie, <see langword="false" />. <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu przedstawia sposób podpisywania i weryfikowania obiektu Uniform Resource Identifier (URI) z odłączonym podpisem.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached/CPP/exampledetached.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached/CS/exampledetached.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached/VB/exampledetached.vb#1)]  
  
 Poniższy przykład kodu pokazuje, jak podpisać i zweryfikować cały dokument XML przy użyciu podpisu obejmującego.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope/CPP/exampleenvelope.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope/CS/exampleenvelope.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope/VB/exampleenvelope.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="signingKey" /> Parametr ma wartość null.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Właściwość klucza publicznego w podpisie nie jest zgodna z <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod" /> właściwością. <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm" />  
  
—lub— 
Nie można utworzyć opisu podpisu.  
  
-lub 
Nie można utworzyć algorytmu wyznaczania wartości skrótu.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ComputeSignature">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Oblicza podpis cyfrowy XML.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ComputeSignature">
      <MemberSignature Language="C#" Value="public void ComputeSignature ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ComputeSignature() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.ComputeSignature" />
      <MemberSignature Language="VB.NET" Value="Public Sub ComputeSignature ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ComputeSignature();" />
      <MemberSignature Language="F#" Value="member this.ComputeSignature : unit -&gt; unit" Usage="signedXml.ComputeSignature " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Oblicza podpis cyfrowy XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A> Metoda tworzy podpis cyfrowy XML i tworzy wiele potrzebnych elementów XML.  
  
 Przed wywołaniem tej metody należy ustawić, aby dane <xref:System.Security.Cryptography.Xml.SignedXml.SigningKey%2A> były podpisane i właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu przedstawia sposób podpisywania i weryfikowania obiektu Uniform Resource Identifier (URI) z odłączonym podpisem.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#1)]  
  
 Poniższy przykład kodu pokazuje, jak podpisać i zweryfikować cały dokument XML przy użyciu podpisu obejmującego.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><see cref="P:System.Security.Cryptography.Xml.SignedXml.SigningKey" /> Właściwość jest<see langword="null" />.  
  
—lub— 
Właściwość nie jest <see cref="T:System.Security.Cryptography.RSA" /> obiektem ani obiektem. <see cref="T:System.Security.Cryptography.DSA" /> <see cref="P:System.Security.Cryptography.Xml.SignedXml.SigningKey" />  
  
—lub— 
Nie można załadować klucza.</exception>
      </Docs>
    </Member>
    <Member MemberName="ComputeSignature">
      <MemberSignature Language="C#" Value="public void ComputeSignature (System.Security.Cryptography.KeyedHashAlgorithm macAlg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ComputeSignature(class System.Security.Cryptography.KeyedHashAlgorithm macAlg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.ComputeSignature(System.Security.Cryptography.KeyedHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ComputeSignature (macAlg As KeyedHashAlgorithm)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ComputeSignature(System::Security::Cryptography::KeyedHashAlgorithm ^ macAlg);" />
      <MemberSignature Language="F#" Value="member this.ComputeSignature : System.Security.Cryptography.KeyedHashAlgorithm -&gt; unit" Usage="signedXml.ComputeSignature macAlg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="macAlg" Type="System.Security.Cryptography.KeyedHashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="macAlg">Obiekt, który przechowuje komputery Mac do obliczenia wartości <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> właściwości. <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /></param>
        <summary>Oblicza podpis cyfrowy XML przy użyciu określonego algorytmu protokołu uwierzytelniania wiadomości (MAC).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A> Metoda tworzy podpis cyfrowy XML przy użyciu określonego algorytmu Mac i tworzy wiele potrzebnych elementów XML.  
  
 Przed wywołaniem tej metody należy ustawić, aby dane były podpisane.  
  
   
  
## Examples  
 Poniższy przykład kodu przedstawia sposób podpisywania i weryfikowania obiektu Uniform Resource Identifier (URI) z odłączonym podpisem.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/CPP/xmldsigdetachedkeyedhashalg.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/CS/xmldsigdetachedkeyedhashalg.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/VB/xmldsigdetachedkeyedhashalg.vb#1)]  
  
 Poniższy przykład kodu pokazuje, jak podpisać i zweryfikować cały dokument XML przy użyciu podpisu obejmującego.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/CPP/xmldsigenvkeyedhashalg.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/CS/xmldsigenvkeyedhashalg.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/VB/xmldsigenvkeyedhashalg.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="macAlg" /></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Obiekt określony przez parametr nie jest wystąpieniem <see cref="T:System.Security.Cryptography.HMACSHA1" />. <paramref name="macAlg" /> <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" />  
  
—lub— 
<see cref="P:System.Security.Cryptography.HashAlgorithm.HashSize" /> Właściwość określonego<see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> obiektu jest nieprawidłowa.  
  
—lub— 
Nie można utworzyć przekształcenia kryptograficznego użytego do sprawdzenia podpisu.</exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptedXml">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.EncryptedXml EncryptedXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.EncryptedXml EncryptedXml" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.EncryptedXml" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptedXml As EncryptedXml" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::EncryptedXml ^ EncryptedXml { System::Security::Cryptography::Xml::EncryptedXml ^ get(); void set(System::Security::Cryptography::Xml::EncryptedXml ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EncryptedXml : System.Security.Cryptography.Xml.EncryptedXml with get, set" Usage="System.Security.Cryptography.Xml.SignedXml.EncryptedXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptedXml</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> obiekt, który definiuje reguły przetwarzania szyfrowania XML.</summary>
        <value><see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> Obiekt, który definiuje reguły przetwarzania szyfrowania XML.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIdElement">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement GetIdElement (System.Xml.XmlDocument document, string idValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlElement GetIdElement(class System.Xml.XmlDocument document, string idValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.GetIdElement(System.Xml.XmlDocument,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIdElement (document As XmlDocument, idValue As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlElement ^ GetIdElement(System::Xml::XmlDocument ^ document, System::String ^ idValue);" />
      <MemberSignature Language="F#" Value="abstract member GetIdElement : System.Xml.XmlDocument * string -&gt; System.Xml.XmlElement&#xA;override this.GetIdElement : System.Xml.XmlDocument * string -&gt; System.Xml.XmlElement" Usage="signedXml.GetIdElement (document, idValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.XmlDocument" />
        <Parameter Name="idValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="document">Obiekt, z którego ma <see cref="T:System.Xml.XmlElement" /> zostać pobrany obiekt. <see cref="T:System.Xml.XmlDocument" /></param>
        <param name="idValue">Identyfikator <see cref="T:System.Xml.XmlElement" /> obiektu do pobrania <see cref="T:System.Xml.XmlDocument" /> z obiektu.</param>
        <summary>Zwraca obiekt o określonym identyfikatorze z określonego <see cref="T:System.Xml.XmlDocument" /> obiektu. <see cref="T:System.Xml.XmlElement" /></summary>
        <returns>Obiekt o określonym identyfikatorze z określonego <see cref="T:System.Xml.XmlDocument" /> obiektu lub <see langword="null" /> nie można go znaleźć. <see cref="T:System.Xml.XmlElement" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPublicKey">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Cryptography.AsymmetricAlgorithm GetPublicKey ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.Cryptography.AsymmetricAlgorithm GetPublicKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.GetPublicKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetPublicKey () As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::Cryptography::AsymmetricAlgorithm ^ GetPublicKey();" />
      <MemberSignature Language="F#" Value="abstract member GetPublicKey : unit -&gt; System.Security.Cryptography.AsymmetricAlgorithm&#xA;override this.GetPublicKey : unit -&gt; System.Security.Cryptography.AsymmetricAlgorithm" Usage="signedXml.GetPublicKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca klucz publiczny sygnatury.</summary>
        <returns>Obiekt, który zawiera klucz publiczny podpisu lub <see langword="null" /> nie można znaleźć klucza. <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.SignedXml.GetPublicKey%2A> Metoda<xref:System.Security.Cryptography.AsymmetricAlgorithm> zwraca obiekt, który zawiera klucz publiczny, który może służyć do weryfikowania podpisu cyfrowego XML.  
  
 Klucz musi być <xref:System.Security.Cryptography.DSA> albo <xref:System.Security.Cryptography.RSA> lub kluczem.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><see cref="P:System.Security.Cryptography.Xml.SignedXml.KeyInfo" /> Właściwość jest<see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.GetXml" />
      <MemberSignature Language="VB.NET" Value="Public Function GetXml () As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlElement ^ GetXml();" />
      <MemberSignature Language="F#" Value="member this.GetXml : unit -&gt; System.Xml.XmlElement" Usage="signedXml.GetXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca reprezentację <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> obiektu w formacie XML.</summary>
        <returns>Reprezentacja <see cref="T:System.Security.Cryptography.Xml.Signature" /> obiektu w formacie XML.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><see cref="P:System.Security.Cryptography.Xml.SignedXml.SignedInfo" /> Właściwość jest<see langword="null" />.  
  
—lub— 
<see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureValue" /> Właściwość jest<see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="KeyInfo">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.KeyInfo KeyInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.KeyInfo KeyInfo" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.KeyInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyInfo As KeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::KeyInfo ^ KeyInfo { System::Security::Cryptography::Xml::KeyInfo ^ get(); void set(System::Security::Cryptography::Xml::KeyInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.KeyInfo : System.Security.Cryptography.Xml.KeyInfo with get, set" Usage="System.Security.Cryptography.Xml.SignedXml.KeyInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.KeyInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> obiekt bieżącego <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> obiektu.</summary>
        <value><see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> Obiekt bieżącego<see cref="T:System.Security.Cryptography.Xml.SignedXml" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość reprezentuje element podpisu cyfrowego XML przy użyciu <xref:System.Security.Cryptography.Xml.KeyInfo> obiektu zawartego we właściwości. `<KeyInfo>` <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A>  Element jest podelementem `<Signature>`elementu. `<KeyInfo>`  
  
 <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> Właściwość służy do osadzania informacji związanych z kluczami, które ułatwiają identyfikację klucza niezbędnego do walidacji dokumentu XML.  
  
 Aby uzyskać więcej informacji na `<KeyInfo>` temat elementu, zobacz [specyfikację xmldsig](https://www.w3.org/TR/xmldsig-core/).  
  
   
  
## Examples  
 Poniższy przykład kodu używa <xref:System.Security.Cryptography.Xml.KeyInfo> obiektu podczas podpisywania zasobu reprezentowanego przez uniwersalny identyfikator zasobów (URI).  Ten przykład zapisuje podpis w nowym pliku.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#1)]  
  
 Poniższy przykład kodu używa <xref:System.Security.Cryptography.Xml.KeyInfo> obiektu podczas podpisywania dokumentu XML.  Ten przykład zapisuje podpis w nowym pliku.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public void LoadXml (System.Xml.XmlElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadXml(class System.Xml.XmlElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.SignedXml.LoadXml(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadXml (value As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadXml(System::Xml::XmlElement ^ value);" />
      <MemberSignature Language="F#" Value="member this.LoadXml : System.Xml.XmlElement -&gt; unit" Usage="signedXml.LoadXml value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="value">Element XML, z którego ma <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> zostać załadowany stan.</param>
        <summary><see cref="T:System.Security.Cryptography.Xml.SignedXml" /> Ładuje stan z elementu XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje, <xref:System.Security.Cryptography.Xml.SignedXml.LoadXml%2A> jak używać metody do weryfikowania dokumentu XML.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#3)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigDetached#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#3)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="value" /></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Parametr nie zawiera prawidłowej <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureValue" /> właściwości. <paramref name="value" />  
  
—lub— 
Parametr nie zawiera prawidłowej <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignedInfo" /> właściwości. <paramref name="value" /></exception>
      </Docs>
    </Member>
    <Member MemberName="m_signature">
      <MemberSignature Language="C#" Value="protected System.Security.Cryptography.Xml.Signature m_signature;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Security.Cryptography.Xml.Signature m_signature" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.m_signature" />
      <MemberSignature Language="VB.NET" Value="Protected m_signature As Signature " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Security::Cryptography::Xml::Signature ^ m_signature;" />
      <MemberSignature Language="F#" Value="val mutable m_signature : System.Security.Cryptography.Xml.Signature" Usage="System.Security.Cryptography.Xml.SignedXml.m_signature" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.Signature</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje obiekt bieżącego <see cref="T:System.Security.Cryptography.Xml.SignedXml" />obiektu. <see cref="T:System.Security.Cryptography.Xml.Signature" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="m_strSigningKeyName">
      <MemberSignature Language="C#" Value="protected string m_strSigningKeyName;" />
      <MemberSignature Language="ILAsm" Value=".field family string m_strSigningKeyName" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName" />
      <MemberSignature Language="VB.NET" Value="Protected m_strSigningKeyName As String " />
      <MemberSignature Language="C++ CLI" Value="protected: System::String ^ m_strSigningKeyName;" />
      <MemberSignature Language="F#" Value="val mutable m_strSigningKeyName : string" Usage="System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje nazwę zainstalowanego klucza, który ma być używany do podpisywania <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> obiektu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver Resolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver Resolver" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.Resolver" />
      <MemberSignature Language="VB.NET" Value="Public Property Resolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ Resolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Resolver : System.Xml.XmlResolver" Usage="System.Security.Cryptography.Xml.SignedXml.Resolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ustawia bieżący <see cref="T:System.Xml.XmlResolver" /> obiekt.</summary>
        <value>Bieżący <see cref="T:System.Xml.XmlResolver" /> obiekt. Wartość domyślna to <see cref="T:System.Xml.XmlSecureResolver" /> obiekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlResolver> Klasa rozpoznaje zewnętrzne zasoby XML o nazwie Uniform Resource Identifier (URI). Jeśli nie ufasz źródłu pliku XML, możesz nie chcieć zezwolić plikowi XML na dostęp do zasobów komputera o nazwie URI. Za pomocą <xref:System.Security.Cryptography.Xml.SignedXml.Resolver%2A> właściwości można kontrolować poziom dostępu plików XML do zasobów komputera, określając różne <xref:System.Xml.XmlResolver> obiekty. Jeśli nie chcesz zezwalać na dostęp, możesz ustawić tę właściwość na `null` (`Nothing` w Visual Basic).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SafeCanonicalizationMethods">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;string&gt; SafeCanonicalizationMethods { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;string&gt; SafeCanonicalizationMethods" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeCanonicalizationMethods As Collection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::String ^&gt; ^ SafeCanonicalizationMethods { System::Collections::ObjectModel::Collection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SafeCanonicalizationMethods : System.Collections.ObjectModel.Collection&lt;string&gt;" Usage="System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwy metod, których algorytmy kanonizacji są jawnie dozwolone.</summary>
        <value>Kolekcja nazw metod, które bezpiecznie tworzą kanoniczny kod XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metody kanonizacji konwertują dokument XML na jego postać kanoniczną. Aby uzyskać więcej informacji o kanonicznym formacie XML, zobacz [kanoniczny kod XML](https://www.w3.org/TR/xml-c14n) w witrynie internetowej W3C.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Signature">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.Signature Signature { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.Signature Signature" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.Signature" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Signature As Signature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::Signature ^ Signature { System::Security::Cryptography::Xml::Signature ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Signature : System.Security.Cryptography.Xml.Signature" Usage="System.Security.Cryptography.Xml.SignedXml.Signature" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.Signature</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt bieżącego <see cref="T:System.Security.Cryptography.Xml.SignedXml" />obiektu. <see cref="T:System.Security.Cryptography.Xml.Signature" /></summary>
        <value><see cref="T:System.Security.Cryptography.Xml.Signature" /> Obiekt bieżącego<see cref="T:System.Security.Cryptography.Xml.SignedXml" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość reprezentuje element podpisu cyfrowego XML przy użyciu <xref:System.Security.Cryptography.Xml.Signature> obiektu zawartego we właściwości. `<Signature>` <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A>  `<Signature>` Element jest elementem głównym używanym do tworzenia i weryfikowania podpisów cyfrowych w formacie XML.  
  
 Użyj właściwości, aby <xref:System.Security.Cryptography.Xml.Signature> pobrać obiekt używany przez <xref:System.Security.Cryptography.Xml.SignedXml> obiekt. <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A>  
  
 Aby uzyskać więcej informacji na `<Signature>` temat elementu, zobacz [specyfikację xmldsig](https://www.w3.org/TR/xmldsig-core/).
  
   
  
## Examples  
 Poniższy przykład kodu używa <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> właściwości, aby podpisać i zweryfikować cały dokument XML przy użyciu sygnatury z podpisem.  
  
 [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/VB/sample.vb#1)]  
  
 Poniższy przykład kodu używa <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> właściwości do podpisywania i weryfikowania obiektu Uniform Resource Identifier (URI) z odłączonym podpisem.  
  
 [!code-cpp[XMLDSIG - Signature - Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CPP/sample.cpp#1)]
 [!code-csharp[XMLDSIG - Signature - Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CS/sample.cs#1)]
 [!code-vb[XMLDSIG - Signature - Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/XMLDSIG - Signature - Detached/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureFormatValidator">
      <MemberSignature Language="C#" Value="public Func&lt;System.Security.Cryptography.Xml.SignedXml,bool&gt; SignatureFormatValidator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Security.Cryptography.Xml.SignedXml, bool&gt; SignatureFormatValidator" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator" />
      <MemberSignature Language="VB.NET" Value="Public Property SignatureFormatValidator As Func(Of SignedXml, Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Security::Cryptography::Xml::SignedXml ^, bool&gt; ^ SignatureFormatValidator { Func&lt;System::Security::Cryptography::Xml::SignedXml ^, bool&gt; ^ get(); void set(Func&lt;System::Security::Cryptography::Xml::SignedXml ^, bool&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignatureFormatValidator : Func&lt;System.Security.Cryptography.Xml.SignedXml, bool&gt; with get, set" Usage="System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Security.Cryptography.Xml.SignedXml,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera delegata, który zostanie wywołany w celu zweryfikowania formatu (a nie zabezpieczeń kryptograficznych) podpisu XML.</summary>
        <value><see langword="true" />Jeśli format jest akceptowalny; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może służyć do upewnienia się, że tylko niektóre Transformacje są używane, lub że podpis używa pewnego algorytmu wyznaczania wartości skrótu i tak dalej.  
  
 Ustawienie właściwości, aby `null` usunąć wszystkie walidacje formatu podpisu <xref:System.Security.Cryptography.Xml.SignedXml> z obiektu.  
  
 Jeśli chcesz, możesz również odczytać bieżący delegat i łańcuch obiektu.  
  
 Jeśli konfigurujesz moduł walidacji formatu, otrzymanym delegatem będzie parametr wejściowy, który jest sprawdzany <xref:System.Security.Cryptography.Xml.SignedXml> przez obiekt i zwraca wartość logiczną — `true` Jeśli format jest akceptowalny, `false` Jeśli nie jest. Jeśli delegat zwraca `false` z dowolnego powodu <xref:System.Security.Cryptography.Xml.SignedXml> , obiekt zgłosi, że podpis XML jest nieprawidłowy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureLength">
      <MemberSignature Language="C#" Value="public string SignatureLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignatureLength" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SignatureLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureLength As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignatureLength { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SignatureLength : string" Usage="System.Security.Cryptography.Xml.SignedXml.SignatureLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera długość podpisu dla bieżącego <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> obiektu.</summary>
        <value>Długość podpisu dla bieżącego <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> obiektu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureMethod">
      <MemberSignature Language="C#" Value="public string SignatureMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignatureMethod" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignatureMethod { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SignatureMethod : string" Usage="System.Security.Cryptography.Xml.SignedXml.SignatureMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera metodę podpisu bieżącego <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> obiektu.</summary>
        <value>Metoda podpisu bieżącego <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A> Właściwość`<SignatureMethod>` reprezentuje element podpisu cyfrowego XML przy użyciu ciągu Uniform Resource Identifier (URI) zawartego w właściwości. Element jest podelementem `<SignedInfo>`elementu. `<SignatureMethod>`  
  
 Użyj właściwości, aby `<SignatureMethod>` pobrać identyfikator URI używany przez <xref:System.Security.Cryptography.Xml.SignedXml> obiekt. <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A> Ta właściwość jest tylko do odczytu. Aby uzyskać więcej informacji na temat programistycznego określania identyfikatora `<SignatureMethod>` URI dla elementu, <xref:System.Security.Cryptography.Xml.SignedInfo.SignatureMethod%2A> Zobacz właściwość.  
  
 Aby uzyskać więcej informacji na `<SignatureMethod>` temat elementu, zobacz [specyfikację xmldsig](https://www.w3.org/TR/xmldsig-core/).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureValue">
      <MemberSignature Language="C#" Value="public byte[] SignatureValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] SignatureValue" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SignatureValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureValue As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ SignatureValue { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SignatureValue : byte[]" Usage="System.Security.Cryptography.Xml.SignedXml.SignatureValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość sygnatury bieżącego <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> obiektu.</summary>
        <value>Tablica bajtów, która zawiera wartość sygnatury bieżącego <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A> Właściwość`<SignatureValue>` reprezentuje element podpisu cyfrowego XML przy użyciu tablicy bajtów zawartej w właściwości.  Element jest podelementem `<Signature>`elementu. `<SignatureValue>`  
  
 Użyj właściwości <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A> , aby pobrać wartość podpisu cyfrowego XML.  Ta właściwość jest wypełniana automatycznie po pomyślnym wywołaniu <xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A> metody.  
  
 Aby uzyskać więcej informacji na `<SignatureValue>` temat elementu, zobacz [specyfikację xmldsig](https://www.w3.org/TR/xmldsig-core/).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignedInfo">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.SignedInfo SignedInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.SignedInfo SignedInfo" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SignedInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignedInfo As SignedInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::SignedInfo ^ SignedInfo { System::Security::Cryptography::Xml::SignedInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SignedInfo : System.Security.Cryptography.Xml.SignedInfo" Usage="System.Security.Cryptography.Xml.SignedXml.SignedInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.SignedInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt bieżącego <see cref="T:System.Security.Cryptography.Xml.SignedXml" />obiektu. <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /></summary>
        <value><see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> Obiekt bieżącego<see cref="T:System.Security.Cryptography.Xml.SignedXml" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> Właściwość`<SignedInfo>` reprezentuje element podpisu cyfrowego XML przy użyciu tablicy bajtów zawartej w właściwości.  Element jest podelementem `<Signature>`elementu. `<SignedInfo>`  
  
 Użyj właściwości, aby <xref:System.Security.Cryptography.Xml.SignedInfo> pobrać obiekt <xref:System.Security.Cryptography.Xml.SignedXml> , który jest używany przez obiekt do utworzenia podpisu cyfrowego XML. <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A>  
  
 Aby uzyskać więcej informacji na `<SignedInfo>` temat elementu, zobacz [specyfikację xmldsig](https://www.w3.org/TR/xmldsig-core/).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningKey">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.AsymmetricAlgorithm SigningKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.AsymmetricAlgorithm SigningKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SigningKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SigningKey As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::AsymmetricAlgorithm ^ SigningKey { System::Security::Cryptography::AsymmetricAlgorithm ^ get(); void set(System::Security::Cryptography::AsymmetricAlgorithm ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SigningKey : System.Security.Cryptography.AsymmetricAlgorithm with get, set" Usage="System.Security.Cryptography.Xml.SignedXml.SigningKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia klucz algorytmu asymetrycznego używany do podpisywania <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> obiektu.</summary>
        <value>Klucz algorytmu asymetrycznego używany do podpisywania <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.SignedXml.SigningKey%2A> Użyj właściwości, aby określić klucz asymetryczny, którego chcesz użyć do utworzenia podpisu cyfrowego XML.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak podpisać i zweryfikować cały dokument XML przy użyciu podpisu z podpisem.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CPP/exampleenvelope.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CS/exampleenvelope.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/VB/exampleenvelope.vb#1)]  
  
 Poniższy przykład kodu przedstawia sposób podpisywania i weryfikowania obiektu Uniform Resource Identifier (URI) z odłączonym podpisem.  
  
 [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CPP/exampledetached.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CS/exampledetached.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/VB/exampledetached.vb#1)]  
  
 Poniższy przykład kodu pokazuje, jak podpisać i weryfikować pojedynczy element dokumentu XML przy użyciu podpisu obejmującego.  
  
 [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningKeyName">
      <MemberSignature Language="C#" Value="public string SigningKeyName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SigningKeyName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.SignedXml.SigningKeyName" />
      <MemberSignature Language="VB.NET" Value="Public Property SigningKeyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SigningKeyName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SigningKeyName : string with get, set" Usage="System.Security.Cryptography.Xml.SignedXml.SigningKeyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę zainstalowanego klucza, który ma być używany do podpisywania <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> obiektu.</summary>
        <value>Nazwa zainstalowanego klucza, który ma być używany do podpisywania <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> obiektu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDecryptionTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDecryptionTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDecryptionTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDecryptionTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDecryptionTransformUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlDecryptionTransformUrl : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier (URI) transformacji odszyfrowywania w trybie XML. To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl> pola to <http://www.w3.org/2002/07/decrypt#XML>.  
  
 Użyj tego pola, aby wygodnie podać wartość jednego z atrybutów identyfikatora URI elementu używanego dla XMLDSIG.  
  
 Aby uzyskać więcej informacji, zobacz [specyfikacja organizacja World Wide Web Consortium (W3C)](https://www.w3.org/2002/07/decrypt#XML).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigBase64TransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigBase64TransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigBase64TransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigBase64TransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigBase64TransformUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigBase64TransformUrl : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier (URI) dla podstawowego przekształcenia 64. To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl> pola to <http://www.w3.org/2000/09/xmldsig#base64>.  
  
 Użyj tego pola, aby wygodnie podać wartość jednego z atrybutów identyfikatora URI elementu używanego dla XMLDSIG.  
  
 Klasa implementuje przekształcenie opisane <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl> przez pole. <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform>  
  
 Aby uzyskać więcej informacji, zobacz [schemat organizacja World Wide Web Consortium (W3C)](https://www.w3.org/2000/09/xmldsig#base64).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać elementów członkowskich <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform> klasy.  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigBase64Transform/CPP/members.cpp#2)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigBase64Transform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigBase64Transform/VB/members.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigC14NTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigC14NTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigC14NTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigC14NTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigC14NTransformUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigC14NTransformUrl : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier (URI) transformacji kanonicznej XML. To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl> pola to <http://www.w3.org/TR/2001/REC-xml-c14n-20010315>.  
  
 Użyj tego pola, aby wygodnie podać wartość jednego z atrybutów identyfikatora URI elementu używanego dla XMLDSIG.  
  
 Klasa implementuje przekształcenie opisane <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl> przez pole. <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>  
  
 Aby uzyskać więcej informacji, zobacz specyfikację [XML kanoniczna](https://www.w3.org/TR/2001/REC-xml-c14n-20010315) organizacja World Wide Web Consortium (W3C).  
  
 To pole ma taką samą wartość jak <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl> pole.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób wywoływania elementów członkowskich <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> klasy.  
  
 [!code-cpp[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/CPP/members.cpp#2)]
 [!code-csharp[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/VB/members.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigC14NWithCommentsTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigC14NWithCommentsTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigC14NWithCommentsTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigC14NWithCommentsTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigC14NWithCommentsTransformUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigC14NWithCommentsTransformUrl : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier (URI) transformacji kanonicznej XML z komentarzami. To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl> pola to <http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments>.  
  
 Użyj tego pola, aby wygodnie podać wartość jednego z atrybutów identyfikatora URI elementu używanego dla XMLDSIG.  
  
 Klasa implementuje przekształcenie opisane <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl> przez pole. <xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform>  
  
 Aby uzyskać więcej informacji, zobacz specyfikację [XML kanoniczna](https://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments) organizacja World Wide Web Consortium (W3C).  
  
 To pole ma taką samą wartość jak <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl> pole.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigCanonicalizationUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigCanonicalizationUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigCanonicalizationUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigCanonicalizationUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigCanonicalizationUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigCanonicalizationUrl : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier (URI) standardowego algorytmu kanonizacji dla podpisów cyfrowych XML. To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl> pola to <http://www.w3.org/TR/2001/REC-xml-c14n-20010315>.  
  
 Użyj tego pola, aby wygodnie podać wartość jednego z atrybutów identyfikatora URI elementu używanego dla XMLDSIG.  
  
 Klasa implementuje przekształcenie opisane <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl> przez pole. <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>  
  
 Aby uzyskać więcej informacji, zobacz specyfikację [XML kanoniczna](https://www.w3.org/TR/2001/REC-xml-c14n-20010315) organizacja World Wide Web Consortium (W3C).  
  
 To pole ma taką samą wartość jak <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl> pole.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigCanonicalizationWithCommentsUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigCanonicalizationWithCommentsUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigCanonicalizationWithCommentsUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigCanonicalizationWithCommentsUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigCanonicalizationWithCommentsUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigCanonicalizationWithCommentsUrl : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier (URI) standardowego algorytmu kanonizacji dla podpisów cyfrowych XML i zawiera komentarze. To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl> pola to <http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments>.  
  
 Użyj tego pola, aby wygodnie podać wartość jednego z atrybutów identyfikatora URI elementu używanego dla XMLDSIG.  
  
 Klasa implementuje przekształcenie opisane <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl> przez pole. <xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform>  
  
 Aby uzyskać więcej informacji, zobacz specyfikację [XML kanoniczna](https://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments) organizacja World Wide Web Consortium (W3C).  
  
 To pole ma taką samą wartość jak <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl> pole.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigDSAUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigDSAUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigDSAUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigDSAUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigDSAUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigDSAUrl : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier (URI) standardowego <see cref="T:System.Security.Cryptography.DSA" /> algorytmu dla podpisów cyfrowych XML. To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl> pola to <http://www.w3.org/2000/09/xmldsig#dsa-sha1>.  
  
 Użyj tego pola, aby wygodnie podać wartość jednego z atrybutów identyfikatora URI elementu używanego dla XMLDSIG.  
  
 Aby uzyskać więcej informacji, zobacz [schemat organizacja World Wide Web Consortium (W3C)](https://www.w3.org/2000/09/xmldsig#dsa-sha1).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigEnvelopedSignatureTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigEnvelopedSignatureTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigEnvelopedSignatureTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigEnvelopedSignatureTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigEnvelopedSignatureTransformUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigEnvelopedSignatureTransformUrl : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier (URI) transformacji podpisu na kopercie. To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl> pola to <http://www.w3.org/2000/09/xmldsig#enveloped-signature>.  
  
 Użyj tego pola, aby wygodnie podać wartość jednego z atrybutów identyfikatora URI elementu używanego dla XMLDSIG.  
  
 Klasa implementuje przekształcenie opisane <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl> przez pole. <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>  
  
 Aby uzyskać więcej informacji, zobacz [schemat organizacja World Wide Web Consortium (W3C)](https://www.w3.org/2000/09/xmldsig#enveloped-signature).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać elementów członkowskich <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> klasy.  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/cpp/members.cpp#2)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/VB/members.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigExcC14NTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigExcC14NTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigExcC14NTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigExcC14NTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigExcC14NTransformUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigExcC14NTransformUrl : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier (URI) dla kanonicznego formatu XML. To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl> pola to <http://www.w3.org/2001/10/xml-exc-c14n#>.  
  
 Użyj tego pola, aby wygodnie podać wartość jednego z atrybutów identyfikatora URI elementu używanego dla XMLDSIG.  
  
 Klasa implementuje przekształcenie opisane <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl> przez pole. <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>  
  
 Aby uzyskać więcej informacji, zobacz [specyfikacja organizacja World Wide Web Consortium (W3C)](https://www.w3.org/2001/10/xml-exc-c14n).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak podpisać i zweryfikować dokument XML przy użyciu <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> klasy.  Ten przykład tworzy podpis koperty.  
  
 [!code-cpp[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/CPP/example.cpp#1)]
 [!code-csharp[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/CS/example.cs#1)]
 [!code-vb[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigExcC14NWithCommentsTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigExcC14NWithCommentsTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigExcC14NWithCommentsTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigExcC14NWithCommentsTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigExcC14NWithCommentsTransformUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigExcC14NWithCommentsTransformUrl : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier (URI) dla niewyłącznego kanonizacji XML z komentarzami. To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl> pola to <http://www.w3.org/2001/10/xml-exc-c14n#WithComments>.  
  
 Użyj tego pola, aby wygodnie podać wartość jednego z atrybutów identyfikatora URI elementu używanego dla XMLDSIG.  
  
 Klasa implementuje przekształcenie opisane <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl> przez pole. <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform>  
  
 Aby uzyskać więcej informacji, zobacz [specyfikacja organizacja World Wide Web Consortium (W3C)](https://www.w3.org/2001/10/xml-exc-c14n#WithComments).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak podpisać i zweryfikować dokument XML przy użyciu <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> klasy.  Ten przykład tworzy podpis koperty.  
  
 [!code-cpp[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NWithCommentsTransform/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NWithCommentsTransform/CS/sample.cs#1)]
 [!code-vb[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NWithCommentsTransform/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigHMACSHA1Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigHMACSHA1Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigHMACSHA1Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigHMACSHA1Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigHMACSHA1Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigHMACSHA1Url : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier (URI) standardowego <see cref="T:System.Security.Cryptography.HMACSHA1" /> algorytmu dla podpisów cyfrowych XML. To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url> pola to <http://www.w3.org/2000/09/xmldsig#hmac-sha1>.  
  
 Użyj tego pola, aby wygodnie podać wartość jednego z atrybutów identyfikatora URI elementu używanego dla XMLDSIG.  
  
 Aby uzyskać więcej informacji, zobacz [specyfikacja organizacja World Wide Web Consortium (W3C)](https://www.w3.org/2000/09/xmldsig#hmac-sha1).  

 Ze względu na kolizje problemów z algorytmem SHA1 firma Microsoft zaleca model zabezpieczeń oparty na SHA256 lub lepszy.
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigMinimalCanonicalizationUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigMinimalCanonicalizationUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigMinimalCanonicalizationUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigMinimalCanonicalizationUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigMinimalCanonicalizationUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigMinimalCanonicalizationUrl : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier (URI) standardowego minimalnego algorytmu kanonizacji dla podpisów cyfrowych XML. To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl> pola to <http://www.w3.org/2000/09/xmldsig#minimal>.  
  
 Użyj tego pola, aby wygodnie podać wartość jednego z atrybutów identyfikatora URI elementu używanego dla XMLDSIG.  
  
 Aby uzyskać więcej informacji, zobacz [specyfikacja organizacja World Wide Web Consortium (W3C)](https://www.w3.org/2000/09/xmldsig#minimal).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigNamespaceUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigNamespaceUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigNamespaceUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigNamespaceUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigNamespaceUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigNamespaceUrl : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier (URI) standardowej przestrzeni nazw dla podpisów cyfrowych XML. To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl> pola to <http://www.w3.org/2000/09/xmldsig#>.  
  
 Użyj tego pola, aby wygodnie podać wartość jednego z atrybutów identyfikatora URI elementu używanego dla XMLDSIG.  
  
 Aby uzyskać więcej informacji, zobacz [schemat organizacja World Wide Web Consortium (W3C)](https://www.w3.org/2000/09/xmldsig).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigRSASHA1Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigRSASHA1Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigRSASHA1Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigRSASHA1Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigRSASHA1Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigRSASHA1Url : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier (URI) dla standardowej <see cref="T:System.Security.Cryptography.RSA" /> metody podpisu dla podpisów cyfrowych XML. To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> pola to <http://www.w3.org/2000/09/xmldsig#rsa-sha1>.  
  
 Użyj tego pola, aby wygodnie podać wartość jednego z atrybutów identyfikatora URI elementu używanego dla XMLDSIG.  
  
 Aby uzyskać więcej informacji, zobacz [schemat organizacja World Wide Web Consortium (W3C)](https://www.w3.org/2000/09/xmldsig#rsa-sha1).  

 Ze względu na kolizje problemów z algorytmem SHA1 firma Microsoft zaleca model zabezpieczeń oparty na SHA256 lub lepszy.
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigRSASHA256Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigRSASHA256Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigRSASHA256Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigRSASHA256Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigRSASHA256Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigRSASHA256Url : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier (URI) dla <see cref="T:System.Security.Cryptography.RSA" /> odmiany metody sygnatury SHA-256 dla podpisów cyfrowych XML. To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url> pola to <http://www.w3.org/2001/04/xmldsig-more#rsa-sha256>.  
  
 Użyj tego pola, aby wygodnie podać wartość jednego z atrybutów identyfikatora URI elementu używanego dla XMLDSIG.  
  
 Aby uzyskać więcej informacji, zobacz [specyfikacja organizacja World Wide Web Consortium (W3C)](https://www.w3.org/2001/04/xmldsig-more#rsa-sha256).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigRSASHA384Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigRSASHA384Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigRSASHA384Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigRSASHA384Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigRSASHA384Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigRSASHA384Url : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier (URI) dla <see cref="T:System.Security.Cryptography.RSA" /> odmiany metody sygnatury SHA-384 dla podpisów cyfrowych XML. To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url> pola to <http://www.w3.org/2001/04/xmldsig-more#rsa-sha384>.  
  
 Użyj tego pola, aby wygodnie podać wartość jednego z atrybutów identyfikatora URI elementu używanego dla XMLDSIG.  
  
 Aby uzyskać więcej informacji, zobacz [specyfikacja organizacja World Wide Web Consortium (W3C)](https://www.w3.org/2001/04/xmldsig-more#rsa-sha384).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigRSASHA512Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigRSASHA512Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigRSASHA512Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigRSASHA512Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigRSASHA512Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigRSASHA512Url : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier (URI) dla <see cref="T:System.Security.Cryptography.RSA" /> odmiany metody sygnatury SHA-512 dla podpisów cyfrowych XML. To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url> pola to <http://www.w3.org/2001/04/xmldsig-more#rsa-sha512>.  
  
 Użyj tego pola, aby wygodnie podać wartość jednego z atrybutów identyfikatora URI elementu używanego dla XMLDSIG.  
  
 Aby uzyskać więcej informacji, zobacz [specyfikacja organizacja World Wide Web Consortium (W3C)](https://www.w3.org/2001/04/xmldsig-more#rsa-sha512).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigSHA1Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigSHA1Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigSHA1Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigSHA1Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigSHA1Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigSHA1Url : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier (URI) standardowej <see cref="T:System.Security.Cryptography.SHA1" /> metody Digest dla podpisów cyfrowych XML. To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url> pola to <http://www.w3.org/2000/09/xmldsig#sha1>.  
  
 Użyj tego pola, aby wygodnie podać wartość jednego z atrybutów identyfikatora URI elementu używanego dla XMLDSIG.  
  
 Aby uzyskać więcej informacji, zobacz [schemat organizacja World Wide Web Consortium (W3C)](https://www.w3.org/2000/09/xmldsig#sha1).  

 Ze względu na kolizje problemów z algorytmem SHA1 firma Microsoft zaleca model zabezpieczeń oparty na SHA256 lub lepszy.
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigSHA256Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigSHA256Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigSHA256Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigSHA256Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigSHA256Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigSHA256Url : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier (URI) standardowej <see cref="T:System.Security.Cryptography.SHA256" /> metody Digest dla podpisów cyfrowych XML. To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url> pola to <http://www.w3.org/2001/04/xmlenc#sha256>.  
  
 Użyj tego pola, aby wygodnie podać wartość jednego z atrybutów identyfikatora URI elementu używanego dla XMLDSIG.  
  
 Aby uzyskać więcej informacji, zobacz [specyfikacja organizacja World Wide Web Consortium (W3C)](https://www.w3.org/2001/04/xmlenc#sha256).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigSHA384Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigSHA384Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigSHA384Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigSHA384Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigSHA384Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigSHA384Url : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier (URI) standardowej <see cref="T:System.Security.Cryptography.SHA384" /> metody Digest dla podpisów cyfrowych XML. To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url> pola to <http://www.w3.org/2001/04/xmldsig-more#sha384>.  
  
 Użyj tego pola, aby wygodnie podać wartość jednego z atrybutów identyfikatora URI elementu używanego dla XMLDSIG.  
  
 Aby uzyskać więcej informacji, zobacz [specyfikacja organizacja World Wide Web Consortium (W3C)](https://www.w3.org/2001/04/xmldsig-more#sha384).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigSHA512Url">
      <MemberSignature Language="C#" Value="public const string XmlDsigSHA512Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigSHA512Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigSHA512Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigSHA512Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigSHA512Url : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier (URI) standardowej <see cref="T:System.Security.Cryptography.SHA512" /> metody Digest dla podpisów cyfrowych XML. To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url> pola to <http://www.w3.org/2001/04/xmlenc#sha512>.  
  
 Użyj tego pola, aby wygodnie podać wartość jednego z atrybutów identyfikatora URI elementu używanego dla XMLDSIG.  
  
 Aby uzyskać więcej informacji, zobacz [specyfikacja organizacja World Wide Web Consortium (W3C)](https://www.w3.org/2001/04/xmlenc#sha512).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigXPathTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigXPathTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigXPathTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigXPathTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigXPathTransformUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigXPathTransformUrl : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier (URI) dla języka ścieżki XML (XPath). To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl> pola to <http://www.w3.org/TR/1999/REC-xpath-19991116>.  
  
 Użyj tego pola, aby wygodnie podać wartość jednego z atrybutów identyfikatora URI elementu używanego dla XMLDSIG.  
  
 Klasa implementuje przekształcenie opisane <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl> przez pole. <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform>  
  
 Aby uzyskać więcej informacji, zobacz [specyfikacja organizacja World Wide Web Consortium (W3C)](https://www.w3.org/TR/1999/REC-xpath-19991116).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób wywoływania elementów członkowskich <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> klasy.  
  
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigXPathTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXPathTransform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigXPathTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXPathTransform/VB/members.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDsigXsltTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlDsigXsltTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlDsigXsltTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlDsigXsltTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlDsigXsltTransformUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlDsigXsltTransformUrl : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier (URI) transformacji XSLT. To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl> pola to <http://www.w3.org/TR/1999/REC-xslt-19991116>.  
  
 Użyj tego pola, aby wygodnie podać wartość jednego z atrybutów identyfikatora URI elementu używanego dla XMLDSIG.  
  
 Klasa implementuje przekształcenie opisane <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl> przez pole. <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform>  
  
 Aby uzyskać więcej informacji, zobacz [specyfikacja organizacja World Wide Web Consortium (W3C)](https://www.w3.org/TR/1999/REC-xslt-19991116).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak używać elementów członkowskich <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> klasy.  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/CPP/members.cpp#2)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/VB/members.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlLicenseTransformUrl">
      <MemberSignature Language="C#" Value="public const string XmlLicenseTransformUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlLicenseTransformUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlLicenseTransformUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlLicenseTransformUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlLicenseTransformUrl : string" Usage="System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier (URI) algorytmu przekształcenia licencji używanego do normalizacji licencji XrML dla sygnatur.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl> pola to "urn: MPEG: MPEG21:2003:01-rel-R-NS: licenseTransform"  
  
 Użyj tego pola, aby wygodnie podać wartość jednego z atrybutów identyfikatora URI elementu używanego dla XMLDSIG.  
  
 Klasa implementuje przekształcenie opisane <xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl> przez pole. <xref:System.Security.Cryptography.Xml.XmlLicenseTransform>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
