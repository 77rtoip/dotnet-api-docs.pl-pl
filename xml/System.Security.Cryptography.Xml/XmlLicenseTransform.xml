<Type Name="XmlLicenseTransform" FullName="System.Security.Cryptography.Xml.XmlLicenseTransform">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="675f98b38208055435889cd52ad68ad1384465e2" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37631639" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlLicenseTransform : System.Security.Cryptography.Xml.Transform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlLicenseTransform extends System.Security.Cryptography.Xml.Transform" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.XmlLicenseTransform" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlLicenseTransform&#xA;Inherits Transform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlLicenseTransform : System::Security::Cryptography::Xml::Transform" />
  <TypeSignature Language="F#" Value="type XmlLicenseTransform = class&#xA;    inherit Transform" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.Xml.Transform</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="8a38d-101">Reprezentuje licencji przekształcenie algorytm normalizacji XrML licencji dla podpisów.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8a38d-101">Represents the license transform algorithm used to normalize XrML licenses for signatures.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a38d-102"><xref:System.Security.Cryptography.Xml.XmlLicenseTransform> Klasa reprezentuje algorytm przekształcenie licencji, zgodnie z definicją w MPEG praw rozszerzenia języka (MPEG REL).</span><span class="sxs-lookup"><span data-stu-id="8a38d-102">The <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class represents the license transform algorithm as defined in the MPEG Rights Extension Language (MPEG REL).</span></span>  
  
 <span data-ttu-id="8a38d-103">Użyj <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> klasy do przekształcania XrML licencji dla podpisów.</span><span class="sxs-lookup"><span data-stu-id="8a38d-103">Use the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class to transform XrML licenses for signatures.</span></span>  
  
 <span data-ttu-id="8a38d-104">Identyfikator URI (Uniform Resource) opisujący <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> klasa jest zdefiniowana przez <xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl> pola.</span><span class="sxs-lookup"><span data-stu-id="8a38d-104">The Uniform Resource Identifier (URI) that describes the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class is defined by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl> field.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a38d-105">Poniższy przykład kodu pokazuje, jak można zweryfikować podpisu cyfrowego XML przy użyciu <xref:System.Security.Cryptography.Xml.IRelDecryptor> interfejsu i <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> klasy.</span><span class="sxs-lookup"><span data-stu-id="8a38d-105">The following code example shows how to validate an XML digital signature using the <xref:System.Security.Cryptography.Xml.IRelDecryptor> interface and the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class.</span></span>  
  
 [!code-cpp[Cryptography.XML.XmlLicenseTransform#2](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlLicenseTransform/cpp/sample.cpp#2)]
 [!code-csharp[Cryptography.XML.XmlLicenseTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlLicenseTransform/CS/sample.cs#2)]
 [!code-vb[Cryptography.XML.XmlLicenseTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlLicenseTransform/VB/sample.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlLicenseTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlLicenseTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlLicenseTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8a38d-106">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a38d-106">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Decryptor">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.IRelDecryptor Decryptor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.IRelDecryptor Decryptor" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor" />
      <MemberSignature Language="VB.NET" Value="Public Property Decryptor As IRelDecryptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::IRelDecryptor ^ Decryptor { System::Security::Cryptography::Xml::IRelDecryptor ^ get(); void set(System::Security::Cryptography::Xml::IRelDecryptor ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Decryptor : System.Security.Cryptography.Xml.IRelDecryptor with get, set" Usage="System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.IRelDecryptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a38d-107">Pobiera lub ustawia odszyfrowujący bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a38d-107">Gets or sets the decryptor of the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a38d-108">Odszyfrowujący bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a38d-108">The decryptor of the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a38d-109"><xref:System.Security.Cryptography.Xml.XmlLicenseTransform> Obiektu używa <xref:System.Security.Cryptography.Xml.IRelDecryptor> interfejsu do odszyfrowania `<encryptedGrant>` elementy z bieżącego `<license>` elementu.</span><span class="sxs-lookup"><span data-stu-id="8a38d-109">The <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> object uses an <xref:System.Security.Cryptography.Xml.IRelDecryptor> interface to decrypt `<encryptedGrant>` elements from the current `<license>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a38d-110">Poniższy przykład kodu pokazuje, jak można zweryfikować podpisu cyfrowego XML przy użyciu <xref:System.Security.Cryptography.Xml.IRelDecryptor> interfejsu i <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> klasy.</span><span class="sxs-lookup"><span data-stu-id="8a38d-110">The following code example shows how to validate an XML digital signature using the <xref:System.Security.Cryptography.Xml.IRelDecryptor> interface and the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class.</span></span>  
  
 [!code-cpp[Cryptography.XML.XmlLicenseTransform#2](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlLicenseTransform/cpp/sample.cpp#2)]
 [!code-csharp[Cryptography.XML.XmlLicenseTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlLicenseTransform/CS/sample.cs#2)]
 [!code-vb[Cryptography.XML.XmlLicenseTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlLicenseTransform/VB/sample.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInnerXml">
      <MemberSignature Language="C#" Value="protected override System.Xml.XmlNodeList GetInnerXml ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xml.XmlNodeList GetInnerXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetInnerXml" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetInnerXml () As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xml::XmlNodeList ^ GetInnerXml();" />
      <MemberSignature Language="F#" Value="override this.GetInnerXml : unit -&gt; System.Xml.XmlNodeList" Usage="xmlLicenseTransform.GetInnerXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8a38d-111">Zwraca reprezentację XML parametry <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> obiektu, które są odpowiednie do uwzględnienia jako podelementy XMLDSIG <see langword="&lt;Transform&gt;" /> elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a38d-111">Returns an XML representation of the parameters of an <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object that are suitable to be included as subelements of an XMLDSIG <see langword="&lt;Transform&gt;" /> element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a38d-112">Lista węzłów XML, które reprezentują zawartości specyficznej dla transformacji, potrzebne do opisania bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> obiektu w XMLDSIG <see langword="&lt;Transform&gt;" /> elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a38d-112">A list of the XML nodes that represent the transform-specific content needed to describe the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object in an XMLDSIG <see langword="&lt;Transform&gt;" /> element.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetOutput">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8a38d-113">Zwraca dane wyjściowe <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a38d-113">Returns the output of an <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public override object GetOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOutput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOutput () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetOutput();" />
      <MemberSignature Language="F#" Value="override this.GetOutput : unit -&gt; obj" Usage="xmlLicenseTransform.GetOutput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8a38d-114">Zwraca dane wyjściowe <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a38d-114">Returns the output of an <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a38d-115">Dane wyjściowe <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a38d-115">The output of the <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a38d-116">Typ zwracany obiekt musi być <xref:System.Xml.XmlDocument>.</span><span class="sxs-lookup"><span data-stu-id="8a38d-116">The type of the returned object must be <xref:System.Xml.XmlDocument>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public override object GetOutput (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOutput(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetOutput(Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.GetOutput : Type -&gt; obj" Usage="xmlLicenseTransform.GetOutput type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="8a38d-117">Typ danych wyjściowych do zwrócenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a38d-117">The type of the output to return.</span>
          </span>
          <span data-ttu-id="8a38d-118">
            <see cref="T:System.Xml.XmlDocument" /> jest prawidłowa tylko typem dla tego parametru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a38d-118">
              <see cref="T:System.Xml.XmlDocument" /> is the only valid type for this parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a38d-119">Zwraca dane wyjściowe <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a38d-119">Returns the output of an <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a38d-120">Dane wyjściowe <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a38d-120">The output of the <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8a38d-121">
            <paramref name="type" /> Parametr nie jest <see cref="T:System.Xml.XmlDocument" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a38d-121">The <paramref name="type" /> parameter is not an <see cref="T:System.Xml.XmlDocument" /> object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InputTypes">
      <MemberSignature Language="C#" Value="public override Type[] InputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] InputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlLicenseTransform.InputTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property InputTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;Type ^&gt; ^ InputTypes { cli::array &lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputTypes : Type[]" Usage="System.Security.Cryptography.Xml.XmlLicenseTransform.InputTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a38d-122">Pobiera tablicę typów, które są prawidłowe dane wejściowe do <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /> metoda bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a38d-122">Gets an array of types that are valid inputs to the <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /> method of the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a38d-123">Tablica typów, które są prawidłowe dane wejściowe do <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /> metoda bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> obiektu można przekazać tylko obiekty z jednej z tych typów w celu <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /> metoda bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a38d-123">An array of types that are valid inputs to the <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /> method of the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object; you can pass only objects of one of these types to the <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /> method of the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a38d-124">Prawidłowy typ danych wejściowych do <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> klasa jest <xref:System.Xml.XmlDocument>.</span><span class="sxs-lookup"><span data-stu-id="8a38d-124">The only valid input type to the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class is <xref:System.Xml.XmlDocument>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadInnerXml">
      <MemberSignature Language="C#" Value="public override void LoadInnerXml (System.Xml.XmlNodeList nodeList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadInnerXml(class System.Xml.XmlNodeList nodeList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInnerXml(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadInnerXml (nodeList As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadInnerXml(System::Xml::XmlNodeList ^ nodeList);" />
      <MemberSignature Language="F#" Value="override this.LoadInnerXml : System.Xml.XmlNodeList -&gt; unit" Usage="xmlLicenseTransform.LoadInnerXml nodeList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeList" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodeList">
          <span data-ttu-id="8a38d-125">
            <see cref="T:System.Xml.XmlNodeList" /> Obiekt, który hermetyzuje przekształcenia do załadowania do bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a38d-125">An <see cref="T:System.Xml.XmlNodeList" /> object that encapsulates the transform to load into the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a38d-126">Analizuje określony <see cref="T:System.Xml.XmlNodeList" /> obiektu jako zawartość specyficzne dla transformacji <see langword="&lt;Transform&gt;" /> element; ta metoda nie jest obsługiwana, ponieważ <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> obiekt nie ma żadnych wewnętrzny elementów XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a38d-126">Parses the specified <see cref="T:System.Xml.XmlNodeList" /> object as transform-specific content of a <see langword="&lt;Transform&gt;" /> element; this method is not supported because the <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object has no inner XML elements.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadInput">
      <MemberSignature Language="C#" Value="public override void LoadInput (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadInput(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadInput (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadInput(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.LoadInput : obj -&gt; unit" Usage="xmlLicenseTransform.LoadInput obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="8a38d-127">Dane wejściowe do załadowania do bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a38d-127">The input to load into the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span>
          </span>
          <span data-ttu-id="8a38d-128">Typ obiektu wejściowego musi być <see cref="T:System.Xml.XmlDocument" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a38d-128">The type of the input object must be <see cref="T:System.Xml.XmlDocument" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a38d-129">Ładuje określone dane wejściowe do bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a38d-129">Loads the specified input into the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="8a38d-130">Kontekst nie została ustawiona, zanim została wywołana tej transformacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a38d-130">The context was not set before this transform was invoked.</span>
          </span>
          <span data-ttu-id="8a38d-131">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a38d-131">-or-</span>
          </span>
          <span data-ttu-id="8a38d-132">
            <see langword="&lt;issuer&gt;" /> Elementu nie została ustawiona, zanim została wywołana tej transformacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a38d-132">The <see langword="&lt;issuer&gt;" /> element was not set before this transform was invoked.</span>
          </span>
          <span data-ttu-id="8a38d-133">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a38d-133">-or-</span>
          </span>
          <span data-ttu-id="8a38d-134">
            <see langword="&lt;license&gt;" /> Elementu nie została ustawiona, zanim została wywołana tej transformacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a38d-134">The <see langword="&lt;license&gt;" /> element was not set before this transform was invoked.</span>
          </span>
          <span data-ttu-id="8a38d-135">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a38d-135">-or-</span>
          </span>
          <span data-ttu-id="8a38d-136">
            <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor" /> Właściwość nie została ustawiona, zanim została wywołana tej transformacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a38d-136">The <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor" /> property was not set before this transform was invoked.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OutputTypes">
      <MemberSignature Language="C#" Value="public override Type[] OutputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] OutputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property OutputTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;Type ^&gt; ^ OutputTypes { cli::array &lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputTypes : Type[]" Usage="System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a38d-137">Pobiera tablicę typów, które są prawidłowe dane wyjściowe z <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /> metoda bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a38d-137">Gets an array of types that are valid outputs from the <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /> method of the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a38d-138">Tablica typów prawidłowe dane wyjściowe dla bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> obiekt; tylko obiekty z jednej z tych typów są zwracane z <see cref="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput" /> metod bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a38d-138">An array of valid output types for the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object; only objects of one of these types are returned from the <see cref="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput" /> methods of the current <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a38d-139">Typ jedyne prawidłowe dane wyjściowe do <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> klasa jest <xref:System.Xml.XmlDocument>.</span><span class="sxs-lookup"><span data-stu-id="8a38d-139">The only valid output type to the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class is <xref:System.Xml.XmlDocument>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>