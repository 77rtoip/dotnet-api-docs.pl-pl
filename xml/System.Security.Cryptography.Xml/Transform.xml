<Type Name="Transform" FullName="System.Security.Cryptography.Xml.Transform">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="afb624786d1fa0aa41242b575e94134805c5b00f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30570352" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Transform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Transform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.Transform" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Transform" />
  <TypeSignature Language="C++ CLI" Value="public ref class Transform abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje abstrakcyjna klasa podstawowa z wszystkie <see langword="&lt;Transform&gt;" /> pochodzi elementów, które mogą być używane w XML podpisu cyfrowego.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas wykonywania podpisywanie XML i weryfikacji, <`Transform`> element w tym artykule opisano sposób osoby podpisującej przekształcony obiekt danych, który został podpisany.  Następnie używa weryfikatora dokumentu <`Transform`> element do przekształcania podpisanych danych w taki sam sposób.  Jeśli kontroler nie można przekształcić podpisanych danych w taki sam sposób, nie można zweryfikować dokumentu.  
  
 Używanie klasy, która pochodzi z <xref:System.Security.Cryptography.Xml.Transform> klasy zawsze, gdy należy dodać co najmniej jeden obiekt przekształcenia zaszyfrowanego dokumentu XML lub podpisanego dokumentu XML.  
  
 Aby uzyskać więcej informacji na temat `<Transform>` elementu, zobacz specyfikację XMLDSIG, który jest dostępny w sieci World Wide Web konsorcjum (W3C) w www.w3.org/TR/xmldsig-core/, lub specyfikacji szyfrowania XML, który jest dostępny z W3C w www.w3.org / TR/xmlenc-core /.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Transform ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Transform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Transform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.Xml.Transform" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Algorithm">
      <MemberSignature Language="C#" Value="public string Algorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Algorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Transform.Algorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property Algorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Algorithm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia URI Uniform Resource Identifier () określający algorytm wykonywane przez bieżący transformacji.</summary>
        <value>Identyfikator URI, który identyfikuje algorytm wykonywane przez bieżący <see cref="T:System.Security.Cryptography.Xml.Transform" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość odpowiada <xref:System.Security.Cryptography.Xml.Transform.Algorithm%2A> atrybutu `<Transform>` element w podpisie XMLDSIG. Na przykład algorytmu Base64 dekodowania transformacji jest zdefiniowany jako identyfikator URI http://www.w3.org/2000/09/xmldsig#base64 w specyfikacji XMLDSIG (sekcja 6.6.2).  
  
 Możesz łatwo tę wartość można ustawić przy użyciu jednej z pola statyczne skojarzone z <xref:System.Security.Cryptography.Xml.SignedXml> klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlElement Context" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Transform.Context" />
      <MemberSignature Language="VB.NET" Value="Public Property Context As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlElement ^ Context { System::Xml::XmlElement ^ get(); void set(System::Xml::XmlElement ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Xml.XmlElement" /> obiekt, który reprezentuje kontekst dokumentu, w którym bieżącego <see cref="T:System.Security.Cryptography.Xml.Transform" /> obiektu jest uruchomiona.</summary>
        <value>
          <see cref="T:System.Xml.XmlElement" /> Obiekt, który reprezentuje kontekst dokumentu, w którym bieżącego <see cref="T:System.Security.Cryptography.Xml.Transform" /> obiektu jest uruchomiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas podpisywania dokumentu, <xref:System.Security.Cryptography.Xml.Transform.Context%2A> właściwość reprezentuje wartość przekazana do <xref:System.Security.Cryptography.Xml.SignedXml> konstruktora.  Podczas weryfikowania dokumentu, <xref:System.Security.Cryptography.Xml.Transform.Context%2A> reprezentuje właściwość <xref:System.Security.Cryptography.Xml.Signature> obiektu.  
  
 <xref:System.Security.Cryptography.Xml.Transform.Context%2A> Ustawiono właściwość automatycznie podczas obliczania sygnatury i sprawdzania, ale przed wywołaniem transformacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDigestedOutput">
      <MemberSignature Language="C#" Value="public virtual byte[] GetDigestedOutput (System.Security.Cryptography.HashAlgorithm hash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetDigestedOutput(class System.Security.Cryptography.HashAlgorithm hash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Transform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDigestedOutput (hash As HashAlgorithm) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetDigestedOutput(System::Security::Cryptography::HashAlgorithm ^ hash);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.Security.Cryptography.HashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="hash">
          <see cref="T:System.Security.Cryptography.HashAlgorithm" /> Obiekt używany do tworzenia skrótu.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej zwraca wartość skrótu skojarzony z <see cref="T:System.Security.Cryptography.Xml.Transform" /> obiektu.</summary>
        <returns>Skrót skojarzony z <see cref="T:System.Security.Cryptography.Xml.Transform" /> obiektu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInnerXml">
      <MemberSignature Language="C#" Value="protected abstract System.Xml.XmlNodeList GetInnerXml ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.XmlNodeList GetInnerXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Transform.GetInnerXml" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetInnerXml () As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Xml::XmlNodeList ^ GetInnerXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Po przesłonięciu w klasie pochodnej zwraca reprezentację XML parametry <see cref="T:System.Security.Cryptography.Xml.Transform" /> obiektów, które są odpowiednie do uwzględnienia jako podelementy XMLDSIG <see langword="&lt;Transform&gt;" /> elementu.</summary>
        <returns>Lista węzłów XML, reprezentujących zawartość specyficzne dla transformacji niezbędnej do opisania bieżącego <see cref="T:System.Security.Cryptography.Xml.Transform" /> obiektu w XMLDSIG <see langword="&lt;Transform&gt;" /> elementu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Jeśli <xref:System.Security.Cryptography.Xml.Transform> obiekt reprezentuje przekształcenie XPath za pomocą wyrażenia XPath `self::text()`, wywołanie <xref:System.Security.Cryptography.Xml.Transform.GetInnerXml%2A> powoduje <xref:System.Xml.XmlNodeList> obiekt, który reprezentuje następujących elementów XML:  
  
```  
<XPath>   
  self::text()   
</XPath>  
```  
  
 Ten element odpowiada zawartość specyficzne dla transformacji `<Transform>` elementu zgodnie z definicją w sekcji 4.3.3.4 specyfikacji XMLDSIG. Powyżej przekształcenia XPath, całą `<Transform>` element wygląda następująco:  
  
```  
<Transform Algorithm="http://www.w3.org/TR/1999/REC-xpath-19991116">   
  <XPath>   
    self::text()   
  </XPath>   
</Transform>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetOutput">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca dane wyjściowe bieżącego <see cref="T:System.Security.Cryptography.Xml.Transform" /> obiektu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public abstract object GetOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetOutput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Transform.GetOutput" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetOutput () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetOutput();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej zwraca dane wyjściowe bieżącego <see cref="T:System.Security.Cryptography.Xml.Transform" /> obiektu.</summary>
        <returns>Dane wyjściowe bieżącego <see cref="T:System.Security.Cryptography.Xml.Transform" /> obiektu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public abstract object GetOutput (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetOutput(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Transform.GetOutput(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetOutput(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Typ danych wyjściowych do zwrócenia. Musi to być jeden z typów w <see cref="P:System.Security.Cryptography.Xml.Transform.OutputTypes" /> właściwości.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej zwraca dane wyjściowe bieżącego <see cref="T:System.Security.Cryptography.Xml.Transform" /> obiektu określonego typu.</summary>
        <returns>Dane wyjściowe bieżącego <see cref="T:System.Security.Cryptography.Xml.Transform" /> obiektu jako obiektu określonego typu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.Transform.GetOutput%2A> Metoda zwraca dane wyjściowe bieżącego transformacji po uruchomieniu na wartość ustawioną wcześniej przez wywołanie do <xref:System.Security.Cryptography.Xml.Transform.LoadInput%2A> metody.  
  
 Typ zwracany obiekt musi być jednym z obiektów typu w <xref:System.Security.Cryptography.Xml.Transform.OutputTypes%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Transform.GetXml" />
      <MemberSignature Language="VB.NET" Value="Public Function GetXml () As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlElement ^ GetXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca reprezentację XML bieżącego <see cref="T:System.Security.Cryptography.Xml.Transform" /> obiektu.</summary>
        <returns>Reprezentacja XML bieżącego <see cref="T:System.Security.Cryptography.Xml.Transform" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlElement> Obiektu zwróconego przez tę metodę odpowiada schematu XML dla `<Transform>` elementu zdefiniowanego w sekcji 4.3.3.4 specyfikacji XMLDSIG.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputTypes">
      <MemberSignature Language="C#" Value="public abstract Type[] InputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] InputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Transform.InputTypes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property InputTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property cli::array &lt;Type ^&gt; ^ InputTypes { cli::array &lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej pobiera tablicę typów, które są prawidłowe wartości wejściowe do <see cref="M:System.Security.Cryptography.Xml.Transform.LoadInput(System.Object)" /> metody bieżącego <see cref="T:System.Security.Cryptography.Xml.Transform" /> obiektu.</summary>
        <value>Tablica prawidłowe typy wejściowe dla bieżącego <see cref="T:System.Security.Cryptography.Xml.Transform" /> obiekt; można przekazać tylko obiekty jednego z tych typów do <see cref="M:System.Security.Cryptography.Xml.Transform.LoadInput(System.Object)" /> metody bieżącego <see cref="T:System.Security.Cryptography.Xml.Transform" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tablica zwrócona przez <xref:System.Security.Cryptography.Xml.Transform.InputTypes%2A> właściwości musi zawierać co najmniej jeden element, ponieważ każdy <xref:System.Security.Cryptography.Xml.Transform> obiektu musi być co najmniej jeden typ jako prawidłowe wartości wejściowe.  
  
 A <xref:System.Security.Cryptography.Xml.Transform> obiektu akceptuje zazwyczaj co najmniej jeden z następujących typów jako dane wejściowe: <xref:System.IO.Stream>, <xref:System.Xml.XmlDocument>, lub <xref:System.Xml.XmlNodeList>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadInnerXml">
      <MemberSignature Language="C#" Value="public abstract void LoadInnerXml (System.Xml.XmlNodeList nodeList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadInnerXml(class System.Xml.XmlNodeList nodeList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Transform.LoadInnerXml(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub LoadInnerXml (nodeList As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void LoadInnerXml(System::Xml::XmlNodeList ^ nodeList);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeList" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodeList">
          <see cref="T:System.Xml.XmlNodeList" /> Obiekt, który określa zawartości określonego transformacji dla bieżącego <see cref="T:System.Security.Cryptography.Xml.Transform" /> obiektu.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, analizuje określony <see cref="T:System.Xml.XmlNodeList" /> obiektu jako zawartość specyficzne dla transformacji <see langword="&lt;Transform&gt;" /> element i konfiguruje stan wewnętrzny bieżącego <see cref="T:System.Security.Cryptography.Xml.Transform" /> obiektu odpowiadające <see langword="&lt;Transform&gt;" /> elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do przetwarzania podelementy z `<Transform>` elementu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadInput">
      <MemberSignature Language="C#" Value="public abstract void LoadInput (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadInput(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Transform.LoadInput(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub LoadInput (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void LoadInput(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Dane wejściowe do załadowania do bieżącego <see cref="T:System.Security.Cryptography.Xml.Transform" /> obiektu.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, ładuje określone dane wejściowe do bieżącego <see cref="T:System.Security.Cryptography.Xml.Transform" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typ wprowadzanego obiektu musi być jednego z typów w <xref:System.Security.Cryptography.Xml.Transform.InputTypes%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputTypes">
      <MemberSignature Language="C#" Value="public abstract Type[] OutputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] OutputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Transform.OutputTypes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property OutputTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property cli::array &lt;Type ^&gt; ^ OutputTypes { cli::array &lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej pobiera tablicę typów, które są możliwe dane wyjściowe z <see cref="M:System.Security.Cryptography.Xml.Transform.GetOutput" /> metody bieżącego <see cref="T:System.Security.Cryptography.Xml.Transform" /> obiektu.</summary>
        <value>Tablicę typów prawidłowego wyjścia dla bieżącego <see cref="T:System.Security.Cryptography.Xml.Transform" /> obiekt; obiekty tylko jednego z tych typów są zwracane z <see cref="M:System.Security.Cryptography.Xml.Transform.GetOutput" /> metody bieżącego <see cref="T:System.Security.Cryptography.Xml.Transform" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tablica zwrócona przez <xref:System.Security.Cryptography.Xml.Transform.OutputTypes%2A> właściwość musi zawierać co najmniej jeden element, ponieważ każdy przekształcenia należy wygenerować co najmniej jeden typ jako dane wyjściowe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropagatedNamespaces">
      <MemberSignature Language="C#" Value="public System.Collections.Hashtable PropagatedNamespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable PropagatedNamespaces" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Transform.PropagatedNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropagatedNamespaces As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Hashtable ^ PropagatedNamespaces { System::Collections::Hashtable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Collections.Hashtable" /> obiekt, który zawiera przestrzenie nazw, które są przenoszone na podpis.</summary>
        <value>A <see cref="T:System.Collections.Hashtable" /> obiekt, który zawiera przestrzenie nazw, które są przenoszone na podpis.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przestrzenie nazw XML są używane do odróżnienia różnych elementów w dokumencie, które mają taką samą nazwę.  
  
 <xref:System.Collections.Hashtable> Klucze <xref:System.Security.Cryptography.Xml.Transform.PropagatedNamespaces%2A> właściwości są prefiksy przestrzeni nazw i <xref:System.Collections.Hashtable> wartości są przestrzeni nazw Uniform Resource Identifier (URI).  
  
 <xref:System.Security.Cryptography.Xml.Transform.PropagatedNamespaces%2A> Ustawiono właściwość automatycznie podczas obliczania sygnatury i sprawdzania, ale przed wywołaniem transformacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.Security.Cryptography.Xml.Transform.PropagatedNamespaces" /> Ustawiono właściwość <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver Resolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver Resolver" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Transform.Resolver" />
      <MemberSignature Language="VB.NET" Value="Public Property Resolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ Resolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ustawia bieżący <see cref="T:System.Xml.XmlResolver" /> obiektu.</summary>
        <value>Bieżący <see cref="T:System.Xml.XmlResolver" /> obiektu. Domyślnie ta właściwość <see cref="T:System.Xml.XmlSecureResolver" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlResolver> Klasy rozpoznaje zasobów zewnętrznych XML o nazwie przez zasób identyfikator URI (Uniform). Jeśli nie ufasz źródłu pliku XML, możesz nie zezwala na dostęp do zasobów komputera o nazwie przez identyfikator URI pliku XML. <xref:System.Security.Cryptography.Xml.Transform.Resolver%2A> Właściwość umożliwia określenie poziomu dostępu pliki XML do zasobów komputera, określając inną <xref:System.Xml.XmlResolver> obiektów. Jeśli nie chcesz zezwolić na dostęp, można ustawić tę właściwość `null` (`Nothing` w języku Visual Basic).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>