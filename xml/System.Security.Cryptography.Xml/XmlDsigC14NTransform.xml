<Type Name="XmlDsigC14NTransform" FullName="System.Security.Cryptography.Xml.XmlDsigC14NTransform">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ff6f4893b72748ba678cd5cefa685afd8af7992d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36530398" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlDsigC14NTransform : System.Security.Cryptography.Xml.Transform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlDsigC14NTransform extends System.Security.Cryptography.Xml.Transform" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlDsigC14NTransform&#xA;Inherits Transform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlDsigC14NTransform : System::Security::Cryptography::Xml::Transform" />
  <TypeSignature Language="F#" Value="type XmlDsigC14NTransform = class&#xA;    inherit Transform" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.Xml.Transform</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje przekształcenie zapewniające kanoniczność C14N XML podpis cyfrowy zgodnie z definicją w sieci World Wide Web konsorcjum W3C, bez komentarzy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> Klasa reprezentuje przekształcenie zapewniające kanoniczność C14N XML, który opisuje forma kanoniczna dokumentu XML.  Tej transformacji umożliwia podpisującego utworzyć skrót (używany do tworzenia podpisu cyfrowego) przy użyciu forma kanoniczna dokumentu XML.  Adresat może zweryfikować podpisu cyfrowego XML przy użyciu tego samego forma kanoniczna dokumentu XML z taką samą transformację.  
  
 Użyj <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> klasy, gdy trzeba zarejestrować dokument XML, który nie zawiera komentarze.  
  
 W większości przypadków nowe wystąpienie klasy transformacji zapewniania kanoniczności nie jest wymagane. Aby określić przekształcenie zapewniające kanoniczność, należy przekazać URI Uniform Resource Identifier () opisujący transformacji do <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A> właściwość, która jest dostępna z <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> właściwości.  Aby uzyskać odwołania do transformacji zapewniania kanoniczności, należy użyć <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethodObject%2A> właściwość, która jest dostępna z <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> właściwości.  
  
 Identyfikator URI, który opisuje <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> klasa jest zdefiniowana przez <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl> pola i <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl> pola.  
  
 Należy tylko utworzyć nowe wystąpienie klasy transformacji zapewniania kanoniczności ręcznego tworzenia skrótu dokumentu XML lub przy użyciu własnego algorytm kanonizacji.  
  
 Aby uzyskać więcej informacji na temat przekształcania C14N zobacz sekcje 6.5 i 6.6.1 specyfikacji XMLDSIG, który jest dostępny w sieci World Wide Web konsorcjum (W3C) w www.w3.org/TR/xmldsig-core/. Algorytm kanonizacji jest zdefiniowany w specyfikacji W3C Canonical XML, która jest dostępna w www.w3.org/TR/xml-c14n.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. Pierwszym przykładzie pokazano, jak zarejestrować dane XML z systemem innym niż przy użyciu odłączonego podpisu.  Przykład #1 tworzy podpis www.microsoft.com w pliku XML, a następnie sprawdza, czy plik.  Drugi przykład przedstawia sposób wywołania członkami <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> klasy.  
  
 **Przykład #1**  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#1)]  
  
 **Przykład #2**  
  
 [!code-cpp[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/CPP/members.cpp#2)]
 [!code-csharp[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/VB/members.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDsigC14NTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDsigC14NTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform.%23ctor%2A> konstruktora. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> klasy.  
  
 [!code-cpp[System.Security.Cryptography.XML.XMLDsigC14NTransform#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/CPP/members.cpp#3)]
 [!code-csharp[System.Security.Cryptography.XML.XMLDsigC14NTransform#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/CS/members.cs#3)]
 [!code-vb[System.Security.Cryptography.XML.XMLDsigC14NTransform#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/VB/members.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDsigC14NTransform (bool includeComments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool includeComments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (includeComments As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDsigC14NTransform(bool includeComments);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.XmlDsigC14NTransform : bool -&gt; System.Security.Cryptography.Xml.XmlDsigC14NTransform" Usage="new System.Security.Cryptography.Xml.XmlDsigC14NTransform includeComments" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="includeComments" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includeComments">
          <see langword="true" /> Aby uwzględnić komentarze w przeciwnym razie <see langword="false" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> klasy z komentarzami, jeśli określony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform.%23ctor%2A> konstruktora. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> klasy.  
  
 [!code-cpp[System.Security.Cryptography.XML.XMLDsigC14NTransform#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/CPP/members.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML.XMLDsigC14NTransform#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/CS/members.cs#1)]
 [!code-vb[System.Security.Cryptography.XML.XMLDsigC14NTransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/VB/members.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDigestedOutput">
      <MemberSignature Language="C#" Value="public override byte[] GetDigestedOutput (System.Security.Cryptography.HashAlgorithm hash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetDigestedOutput(class System.Security.Cryptography.HashAlgorithm hash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDigestedOutput (hash As HashAlgorithm) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetDigestedOutput(System::Security::Cryptography::HashAlgorithm ^ hash);" />
      <MemberSignature Language="F#" Value="override this.GetDigestedOutput : System.Security.Cryptography.HashAlgorithm -&gt; byte[]" Usage="xmlDsigC14NTransform.GetDigestedOutput hash" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.Security.Cryptography.HashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="hash">
          <see cref="T:System.Security.Cryptography.HashAlgorithm" /> Obiekt używany do tworzenia skrótu.</param>
        <summary>Zwraca skrót skojarzone z <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> obiektu.</summary>
        <returns>Skrót skojarzony z <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> obiektu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInnerXml">
      <MemberSignature Language="C#" Value="protected override System.Xml.XmlNodeList GetInnerXml ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xml.XmlNodeList GetInnerXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.GetInnerXml" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetInnerXml () As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xml::XmlNodeList ^ GetInnerXml();" />
      <MemberSignature Language="F#" Value="override this.GetInnerXml : unit -&gt; System.Xml.XmlNodeList" Usage="xmlDsigC14NTransform.GetInnerXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca reprezentację XML parametry <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> obiektów, które są odpowiednie do uwzględnienia jako podelementy XMLDSIG <see langword="&lt;Transform&gt;" /> elementu.</summary>
        <returns>Lista węzłów XML, reprezentujących zawartość specyficzne dla transformacji niezbędnej do opisania bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> obiektu w XMLDSIG <see langword="&lt;Transform&gt;" /> elementu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetOutput">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca dane wyjściowe bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> obiektu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public override object GetOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOutput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.GetOutput" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOutput () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetOutput();" />
      <MemberSignature Language="F#" Value="override this.GetOutput : unit -&gt; obj" Usage="xmlDsigC14NTransform.GetOutput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca dane wyjściowe bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> obiektu.</summary>
        <returns>Dane wyjściowe bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typ zwracany obiekt musi być <xref:System.IO.Stream>.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform.GetOutput%2A> metodę, aby pobrać dane wyjściowe bieżącego <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> obiektu. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> klasy.  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigC14NTransform#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/CPP/members.cpp#8)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigC14NTransform#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/CS/members.cs#8)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigC14NTransform#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/VB/members.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public override object GetOutput (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOutput(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.GetOutput(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetOutput(Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.GetOutput : Type -&gt; obj" Usage="xmlDsigC14NTransform.GetOutput type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Typ danych wyjściowych do zwrócenia. <see cref="T:System.IO.Stream" /> jest tylko prawidłowym typem dla tego parametru.</param>
        <summary>Zwraca dane wyjściowe bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> obiektu typu <see cref="T:System.IO.Stream" />.</summary>
        <returns>Dane wyjściowe bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> obiektu typu <see cref="T:System.IO.Stream" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typ zwracany obiekt musi być <xref:System.IO.Stream>.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform.GetOutput%2A> metodę, aby pobrać dane wyjściowe bieżącego <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> obiektu. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> klasy.  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigC14NTransform#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/CPP/members.cpp#9)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigC14NTransform#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/CS/members.cs#9)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigC14NTransform#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/VB/members.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="type" /> Parametr nie jest <see cref="T:System.IO.Stream" /> obiektu.</exception>
      </Docs>
    </Member>
    <Member MemberName="InputTypes">
      <MemberSignature Language="C#" Value="public override Type[] InputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] InputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlDsigC14NTransform.InputTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property InputTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;Type ^&gt; ^ InputTypes { cli::array &lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputTypes : Type[]" Usage="System.Security.Cryptography.Xml.XmlDsigC14NTransform.InputTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera tablicę typów, które są prawidłowe wartości wejściowe do <see cref="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.LoadInput(System.Object)" /> metody bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> obiektu.</summary>
        <value>Tablica prawidłowe typy wejściowe dla bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> obiekt; można przekazać tylko obiekty jednego z tych typów do <see cref="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.LoadInput(System.Object)" /> metody bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Prawidłowe wartości wejściowe typów, aby <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> są <xref:System.IO.Stream>, <xref:System.Xml.XmlDocument>, i <xref:System.Xml.XmlNodeList>.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób wywoływania <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform.InputTypes%2A> właściwości do pobrania prawidłowe typy wejściowe dla bieżącego przekształcenia. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> klasy.  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigC14NTransform#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/CPP/members.cpp#5)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigC14NTransform#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/CS/members.cs#5)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigC14NTransform#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/VB/members.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadInnerXml">
      <MemberSignature Language="C#" Value="public override void LoadInnerXml (System.Xml.XmlNodeList nodeList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadInnerXml(class System.Xml.XmlNodeList nodeList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.LoadInnerXml(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadInnerXml (nodeList As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadInnerXml(System::Xml::XmlNodeList ^ nodeList);" />
      <MemberSignature Language="F#" Value="override this.LoadInnerXml : System.Xml.XmlNodeList -&gt; unit" Usage="xmlDsigC14NTransform.LoadInnerXml nodeList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeList" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodeList">
          <see cref="T:System.Xml.XmlNodeList" /> Obiektu do załadowania do bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> obiektu.</param>
        <summary>Analizuje określony <see cref="T:System.Xml.XmlNodeList" /> obiektu jako zawartość specyficzne dla transformacji <see langword="&lt;Transform&gt;" /> element; ta metoda nie jest obsługiwana, ponieważ ten element nie ma żadnych wewnętrzny elementów XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda nie jest obsługiwana, ponieważ <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> obiektu nie ma żadnych wewnętrzny elementów XML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadInput">
      <MemberSignature Language="C#" Value="public override void LoadInput (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadInput(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.LoadInput(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadInput (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadInput(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.LoadInput : obj -&gt; unit" Usage="xmlDsigC14NTransform.LoadInput obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Dane wejściowe do załadowania do bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> obiektu.</param>
        <summary>Ładuje określony komputer wejściowy do bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typ wprowadzanego obiektu musi być jednego z typów w <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform.InputTypes%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób wywoływania <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform.LoadInput%2A> metodę przy użyciu określonego <xref:System.Xml.XmlDocument> obiektu jako dane wejściowe. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> klasy.  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigC14NTransform#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/CPP/members.cpp#12)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigC14NTransform#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/CS/members.cs#12)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigC14NTransform#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/VB/members.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="obj" /> Parametr jest <see cref="T:System.IO.Stream" /> obiekt, a jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="OutputTypes">
      <MemberSignature Language="C#" Value="public override Type[] OutputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] OutputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlDsigC14NTransform.OutputTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property OutputTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;Type ^&gt; ^ OutputTypes { cli::array &lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputTypes : Type[]" Usage="System.Security.Cryptography.Xml.XmlDsigC14NTransform.OutputTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera tablicę typów, które są możliwe dane wyjściowe z <see cref="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.GetOutput" /> metody bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> obiektu.</summary>
        <value>Tablica typów prawidłowego wyjścia dla bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> obiekt; <see cref="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.GetOutput" /> metody bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> zwracane tylko obiekty jednego z następujących typów obiektów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Stream> Typ danych wyjściowych jedyne prawidłowe dla <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób wywoływania <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform.OutputTypes%2A> właściwości pobierania typów prawidłowego wyjścia dla bieżącego przekształcenia. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> klasy.  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigC14NTransform#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/CPP/members.cpp#6)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigC14NTransform#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/CS/members.cs#6)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigC14NTransform#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/VB/members.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>