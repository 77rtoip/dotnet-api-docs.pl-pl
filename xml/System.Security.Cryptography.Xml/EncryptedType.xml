<Type Name="EncryptedType" FullName="System.Security.Cryptography.Xml.EncryptedType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="97f1495dcfd12b3ef9424489f3e7da3c8633e2f7" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="05/07/2018" />
    <Meta Name="ms.locfileid" Value="33682099" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class EncryptedType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EncryptedType extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.EncryptedType" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncryptedType" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedType abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje abstrakcyjna klasa podstawowa, z której klasy <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> i <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> pochodzi.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.EncryptedType> Klasa reprezentuje abstrakcyjna klasa podstawowa, z której klasy <xref:System.Security.Cryptography.Xml.EncryptedData> i <xref:System.Security.Cryptography.Xml.EncryptedKey> pochodzi. Te dwie klasy zawierają zaszyfrowane dane lub informacje o kluczu w szyfrowanie XML. Aby spełniać normy szyfrowania XML, należy używać tych dwóch klas pochodnych.  
  
 Aby uzyskać więcej informacji na standardach szyfrowania XML, zobacz [składnia XML szyfrowania i przetwarzania w wersji 1.1](https://www.w3.org/TR/xmlenc-core/).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak szyfrowanie i odszyfrowywanie elementów XML przy użyciu <xref:System.Security.Cryptography.Xml.EncryptedData> klasą pochodzącą z <xref:System.Security.Cryptography.Xml.EncryptedType> klasy.  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EncryptedType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EncryptedType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor tworzy nowe wystąpienie klasy <xref:System.Security.Cryptography.Xml.EncryptedType> klasy. Ta klasa reprezentuje abstrakcyjna klasa podstawowa, z której klasy <xref:System.Security.Cryptography.Xml.EncryptedData> i <xref:System.Security.Cryptography.Xml.EncryptedKey> pochodzi. Do wykonania XML standardów szyfrowania, należy użyć dwóch klas pochodnych. Aby uzyskać więcej informacji na standardach szyfrowania XML, zobacz [składnia XML szyfrowania i przetwarzania w wersji 1.1](https://www.w3.org/TR/xmlenc-core/).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak szyfrowanie i odszyfrowywanie elementów XML przy użyciu <xref:System.Security.Cryptography.Xml.EncryptedData> klasą pochodzącą z <xref:System.Security.Cryptography.Xml.EncryptedType> klasy.  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddProperty">
      <MemberSignature Language="C#" Value="public void AddProperty (System.Security.Cryptography.Xml.EncryptionProperty ep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddProperty(class System.Security.Cryptography.Xml.EncryptionProperty ep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedType.AddProperty(System.Security.Cryptography.Xml.EncryptionProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddProperty (ep As EncryptionProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddProperty(System::Security::Cryptography::Xml::EncryptionProperty ^ ep);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ep" Type="System.Security.Cryptography.Xml.EncryptionProperty" />
      </Parameters>
      <Docs>
        <param name="ep">
          <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> Obiektu.</param>
        <summary>Dodaje <see langword="&lt;EncryptionProperty&gt;" /> elementu podrzędnego do <see langword="&lt;EncryptedProperties&gt;" /> elementu w bieżącym <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> obiektu w szyfrowanie XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do dodawania `<EncryptionProperty>` elementów podrzędnych `<EncryptedProperties>` elementu. `<EncryptedProperties>` Element udostępnia dodatkowe informacje dotyczące `<EncryptedType>` elementu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CipherData">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.Xml.CipherData CipherData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.CipherData CipherData" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.CipherData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CipherData As CipherData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::Xml::CipherData ^ CipherData { System::Security::Cryptography::Xml::CipherData ^ get(); void set(System::Security::Cryptography::Xml::CipherData ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.CipherData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Security.Cryptography.Xml.CipherData" /> wartość dla wystąpienia <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> klasy.</summary>
        <value>A <see cref="T:System.Security.Cryptography.Xml.CipherData" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `<CipherData>` Element jest wymagany element w szyfrowanie XML, który zawiera zaszyfrowane dane. Musi zawierać albo sekwencji zaszyfrowanych octet jako tekst algorytmem Base64 <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> właściwości, lub podaj odwołanie do zewnętrznej lokalizacji zawierający przy użyciu sekwencji zaszyfrowanych octet <xref:System.Security.Cryptography.Xml.CipherData.CipherReference%2A> właściwości.  
  
 Aby uzyskać więcej informacji o tym elemencie, zobacz <xref:System.Security.Cryptography.Xml.CipherData>.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak szyfrowanie i odszyfrowywanie elementów XML przy użyciu <xref:System.Security.Cryptography.Xml.EncryptedData> klasą pochodzącą z <xref:System.Security.Cryptography.Xml.EncryptedType> klasy.  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.Security.Cryptography.Xml.EncryptedType.CipherData" /> Ustawiono właściwość <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public virtual string Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Encoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Encoding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see langword="Encoding" /> atrybutu <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> wystąpienie XML szyfrowania.</summary>
        <value>Ciąg, który opisuje kodowanie zaszyfrowanych danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość określa kodowanie zaszyfrowanych danych. Na przykład, jeśli zaszyfrowanych danych jest plik PNG algorytmem Base64, kodowanie może być określony jakohttp://www.w3.org/2000/09/xmldsig#base64".  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak szyfrowanie i odszyfrowywanie elementów XML przy użyciu <xref:System.Security.Cryptography.Xml.EncryptedData> klasą pochodzącą z <xref:System.Security.Cryptography.Xml.EncryptedType> klasy. W tym przykładzie wyświetlono następnie różne właściwości <xref:System.Security.Cryptography.Xml.EncryptedData> klasy do konsoli.  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptionMethod">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.Xml.EncryptionMethod EncryptionMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.EncryptionMethod EncryptionMethod" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EncryptionMethod As EncryptionMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::Xml::EncryptionMethod ^ EncryptionMethod { System::Security::Cryptography::Xml::EncryptionMethod ^ get(); void set(System::Security::Cryptography::Xml::EncryptionMethod ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptionMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see langword="&lt;EncryptionMethod&gt;" /> — element XML szyfrowania.</summary>
        <value>
          <see cref="T:System.Security.Cryptography.Xml.EncryptionMethod" /> Obiekt, który reprezentuje <see langword="&lt;EncryptionMethod&gt;" /> elementu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `<EncryptionMethod>` To opcjonalny element opisujący algorytmu szyfrowania stosowane do zaszyfrowanych danych. Jeśli element jest nieobecne, algorytm szyfrowania musi być znane przez adresata lub odszyfrowywania zakończy się niepowodzeniem.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak szyfrowanie i odszyfrowywanie elementów XML przy użyciu <xref:System.Security.Cryptography.Xml.EncryptedData> klasą pochodzącą z <xref:System.Security.Cryptography.Xml.EncryptedType> klasy.  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptionProperties">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.Xml.EncryptionPropertyCollection EncryptionProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.EncryptionPropertyCollection EncryptionProperties" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EncryptionProperties As EncryptionPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::Xml::EncryptionPropertyCollection ^ EncryptionProperties { System::Security::Cryptography::Xml::EncryptionPropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptionPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see langword="&lt;EncryptionProperties&gt;" /> element szyfrowanie XML.</summary>
        <value>
          <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> Obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `<EncryptionProperties>` Element może zawierać dodatkowe informacje na temat tworzenia <xref:System.Security.Cryptography.Xml.EncryptedType> wystąpienia, takich jak sygnaturę daty i godziny lub numer seryjny urządzenia kryptograficzne używane podczas szyfrowania.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak szyfrowanie i odszyfrowywanie elementów XML przy użyciu <xref:System.Security.Cryptography.Xml.EncryptedData> klasą pochodzącą z <xref:System.Security.Cryptography.Xml.EncryptedType> klasy. W tym przykładzie wyświetlono następnie różne właściwości <xref:System.Security.Cryptography.Xml.EncryptedData> klasy do konsoli.  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedType.GetXml" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetXml () As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Xml::XmlElement ^ GetXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca reprezentację XML <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> obiektu.</summary>
        <returns>
          <see cref="T:System.Xml.XmlElement" /> Obiekt, który reprezentuje <see langword="&lt;EncryptedType&gt;" /> element szyfrowanie XML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia output `<EncryptedType>` elementu w języku XML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public virtual string Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Id { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see langword="Id" /> atrybutu <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> wystąpienie XML szyfrowania.</summary>
        <value>Ciąg <see langword="Id" /> atrybutu <see langword="&lt;EncryptedType&gt;" /> elementu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Id` Jest opcjonalny atrybutem `<EncryptedType>` element, który zawiera standardowe metodę identyfikator ciągu do elementu w dokumencie XML.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak szyfrowanie i odszyfrowywanie elementów XML przy użyciu <xref:System.Security.Cryptography.Xml.EncryptedData> klasą pochodzącą z <xref:System.Security.Cryptography.Xml.EncryptedType> klasy. W tym przykładzie wyświetlono następnie różne właściwości <xref:System.Security.Cryptography.Xml.EncryptedData> klasy do konsoli.  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyInfo">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.KeyInfo KeyInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.KeyInfo KeyInfo" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.KeyInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyInfo As KeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::KeyInfo ^ KeyInfo { System::Security::Cryptography::Xml::KeyInfo ^ get(); void set(System::Security::Cryptography::Xml::KeyInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.KeyInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see langword="&lt;KeyInfo&gt;" /> element szyfrowanie XML.</summary>
        <value>A <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `<KeyInfo>` Element jest opcjonalny element, który zawiera informacje o klucz używany do szyfrowania danych.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak szyfrowanie i odszyfrowywanie elementów XML przy użyciu <xref:System.Security.Cryptography.Xml.EncryptedData> klasą pochodzącą z <xref:System.Security.Cryptography.Xml.EncryptedType> klasy. W tym przykładzie wyświetlono następnie różne właściwości <xref:System.Security.Cryptography.Xml.EncryptedData> klasy do konsoli.  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public abstract void LoadXml (System.Xml.XmlElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadXml(class System.Xml.XmlElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedType.LoadXml(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub LoadXml (value As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void LoadXml(System::Xml::XmlElement ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Xml.XmlElement" /> Obiekt reprezentujący element XML do użycia w <see langword="&lt;EncryptedType&gt;" /> elementu.</param>
        <summary>Ładuje informacje XML na <see langword="&lt;EncryptedType&gt;" /> element szyfrowanie XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody można załadować istniejącego elementu XML do <xref:System.Security.Cryptography.Xml.EncryptedType> obiektu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak szyfrowanie i odszyfrowywanie elementów XML przy użyciu <xref:System.Security.Cryptography.Xml.EncryptedData> klasą pochodzącą z <xref:System.Security.Cryptography.Xml.EncryptedType> klasy.  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> Podany jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="MimeType">
      <MemberSignature Language="C#" Value="public virtual string MimeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MimeType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.MimeType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MimeType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MimeType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see langword="MimeType" /> atrybutu <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> wystąpienie XML szyfrowania.</summary>
        <value>Ciąg, który opisuje typ nośnika zaszyfrowanych danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `MimeType` Atrybutu jest opcjonalny atrybut, który opisuje typ nośnika zaszyfrowanych danych. Wartość tego atrybutu jest ciągiem o wartości zdefiniowanych przez [RFC 2045: jednej części wiadomości rozszerzenia MIME (Multipurpose Internet): Format Internet treści wiadomości](https://www.ietf.org/rfc/rfc2045.txt). Na przykład, jeśli dane są szyfrowane algorytmem Base64 PNG `Encoding` byłoby atrybutu "http://www.w3.org/2000/09/xmldsig#base64" i `MimeType` byłoby "image/png". Ten atrybut jest opcjonalna i nie Weryfikacja `MimeType` informacja jest wymagana. Ten atrybut nie wskazuje, że aplikacje szyfrowania musi wykonywać żadnych dodatkowych czynności. Należy pamiętać, że te informacje nie może być konieczne, jeśli jest już powiązany z identyfikatorem w `Type` atrybutu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak szyfrowanie i odszyfrowywanie elementów XML przy użyciu <xref:System.Security.Cryptography.Xml.EncryptedData> klasą pochodzącą z <xref:System.Security.Cryptography.Xml.EncryptedType> klasy. W tym przykładzie wyświetlono następnie różne właściwości <xref:System.Security.Cryptography.Xml.EncryptedData> klasy do konsoli.  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public virtual string Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.Type" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Type { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see langword="Type" /> atrybutu <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> wystąpienie XML szyfrowania.</summary>
        <value>Ciąg opisujący formularza tekstu, zaszyfrowanych danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Type` Atrybutu jest opcjonalny atrybut, który określa typ informacji o tekst formę zaszyfrowaną zawartość. Podczas, gdy jest to opcjonalne, jest ważne atrybutu i jest używany podczas przetwarzania obowiązkowe opisanego w [przetwarzania zasad: odszyfrowywania](https://www.w3.org/TR/xmlenc-core/) (sekcja 4.2) specyfikacji XML szyfrowania składni i przetwarzania (https://www.w3.org/TR/xmlenc-core/). Jeśli `<EncryptedData>` element zawiera dane typu `'element'` lub elementu `'content'`i zastępuje, że dane w dokumencie XML, zdecydowanie zalecane jest `Type` podać atrybut. Bez tych informacji aplikacji próby odszyfrowania będzie mógł automatycznie przywrócić oryginalnej postaci tekst dokumentu XML.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak szyfrowanie i odszyfrowywanie elementów XML przy użyciu <xref:System.Security.Cryptography.Xml.EncryptedData> klasą pochodzącą z <xref:System.Security.Cryptography.Xml.EncryptedType> klasy.  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>