<Type Name="EncryptedType" FullName="System.Security.Cryptography.Xml.EncryptedType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b1f61d5e7829937126d941e463427fad3c207785" /><Meta Name="ms.sourcegitcommit" Value="10aa513a7461eb2abbf8d1e35d2a045d4e5a9be7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="07/09/2019" /><Meta Name="ms.locfileid" Value="67665184" /></Metadata><TypeSignature Language="C#" Value="public abstract class EncryptedType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EncryptedType extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.EncryptedType" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncryptedType" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedType abstract" />
  <TypeSignature Language="F#" Value="type EncryptedType = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje abstrakcyjna klasa bazowa, z której klasy <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> i <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> pochodnych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.EncryptedType> Klasa reprezentuje abstrakcyjna klasa bazowa, z której klasy <xref:System.Security.Cryptography.Xml.EncryptedData> i <xref:System.Security.Cryptography.Xml.EncryptedKey> pochodnych. Te dwie klasy zawierają zaszyfrowane dane lub informacje o kluczu WE szyfrowanie XML. Do zapewnienia zgodności ze standardami szyfrowania XML, należy użyć tych dwóch klas pochodnych.  
  
 Aby uzyskać więcej informacji na temat standardy szyfrowania XML, zobacz [składni szyfrowanie XML i przetwarzania w wersji 1.1](https://www.w3.org/TR/xmlenc-core/).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak szyfrowanie i odszyfrowywanie elementów XML przy użyciu <xref:System.Security.Cryptography.Xml.EncryptedData> klasę pochodzącą od <xref:System.Security.Cryptography.Xml.EncryptedType> klasy.  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EncryptedType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EncryptedType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor tworzy nowe wystąpienie klasy <xref:System.Security.Cryptography.Xml.EncryptedType> klasy. Ta klasa reprezentuje abstrakcyjna klasa bazowa, z której klasy <xref:System.Security.Cryptography.Xml.EncryptedData> i <xref:System.Security.Cryptography.Xml.EncryptedKey> pochodnych. Aby jest zgodne ze standardami szyfrowania XML, należy użyć dwóch klas pochodnych. Aby uzyskać więcej informacji na temat standardy szyfrowania XML, zobacz [składni szyfrowanie XML i przetwarzania w wersji 1.1](https://www.w3.org/TR/xmlenc-core/).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak szyfrowanie i odszyfrowywanie elementów XML przy użyciu <xref:System.Security.Cryptography.Xml.EncryptedData> klasę pochodzącą od <xref:System.Security.Cryptography.Xml.EncryptedType> klasy.  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddProperty">
      <MemberSignature Language="C#" Value="public void AddProperty (System.Security.Cryptography.Xml.EncryptionProperty ep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddProperty(class System.Security.Cryptography.Xml.EncryptionProperty ep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedType.AddProperty(System.Security.Cryptography.Xml.EncryptionProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddProperty (ep As EncryptionProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddProperty(System::Security::Cryptography::Xml::EncryptionProperty ^ ep);" />
      <MemberSignature Language="F#" Value="member this.AddProperty : System.Security.Cryptography.Xml.EncryptionProperty -&gt; unit" Usage="encryptedType.AddProperty ep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ep" Type="System.Security.Cryptography.Xml.EncryptionProperty" />
      </Parameters>
      <Docs>
        <param name="ep"><see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> Obiektu.</param>
        <summary>Dodaje <see langword="&lt;EncryptionProperty&gt;" /> element podrzędny do <see langword="&lt;EncryptedProperties&gt;" /> elementu w bieżącym <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> obiektu w szyfrowanie XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może służyć do dodawania `<EncryptionProperty>` elementów podrzędnych do `<EncryptedProperties>` elementu. `<EncryptedProperties>` Element udostępnia dodatkowe informacje dotyczące `<EncryptedType>` elementu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CipherData">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.Xml.CipherData CipherData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.CipherData CipherData" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.CipherData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CipherData As CipherData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::Xml::CipherData ^ CipherData { System::Security::Cryptography::Xml::CipherData ^ get(); void set(System::Security::Cryptography::Xml::CipherData ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CipherData : System.Security.Cryptography.Xml.CipherData with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.CipherData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.CipherData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Security.Cryptography.Xml.CipherData" /> wartość dla wystąpienia <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> klasy.</summary>
        <value>Element <see cref="T:System.Security.Cryptography.Xml.CipherData" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `<CipherData>` Element jest elementem wymagane w przypadku szyfrowania XML, który zawiera zaszyfrowane dane. Musi zawierać albo sekwencji zaszyfrowanych octet jako tekst algorytmem Base64 <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> właściwości lub podać odwołanie do lokalizacji zewnętrznej zawierający przy użyciu sekwencji zaszyfrowanych octet <xref:System.Security.Cryptography.Xml.CipherData.CipherReference%2A> właściwości.  
  
 Aby uzyskać więcej informacji na temat tego elementu, zobacz <xref:System.Security.Cryptography.Xml.CipherData>.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak szyfrowanie i odszyfrowywanie elementów XML przy użyciu <xref:System.Security.Cryptography.Xml.EncryptedData> klasę pochodzącą od <xref:System.Security.Cryptography.Xml.EncryptedType> klasy.  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="P:System.Security.Cryptography.Xml.EncryptedType.CipherData" /> Właściwość <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public virtual string Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Encoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Encoding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see langword="Encoding" /> atrybutu <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> wystąpienia w szyfrowanie XML.</summary>
        <value>Ciąg, który opisuje kodowanie zaszyfrowanych danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość opisuje kodowanie zaszyfrowanych danych. Na przykład, jeśli szyfrowane dane PNG z algorytmem Base64, kodowanie, może być określona jako<http://www.w3.org/2000/09/xmldsig#base64>".  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak szyfrowanie i odszyfrowywanie elementów XML przy użyciu <xref:System.Security.Cryptography.Xml.EncryptedData> klasę pochodzącą od <xref:System.Security.Cryptography.Xml.EncryptedType> klasy. Ten przykład następnie wyświetla różne właściwości <xref:System.Security.Cryptography.Xml.EncryptedData> klasy do konsoli.  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptionMethod">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.Xml.EncryptionMethod EncryptionMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.EncryptionMethod EncryptionMethod" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EncryptionMethod As EncryptionMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::Xml::EncryptionMethod ^ EncryptionMethod { System::Security::Cryptography::Xml::EncryptionMethod ^ get(); void set(System::Security::Cryptography::Xml::EncryptionMethod ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionMethod : System.Security.Cryptography.Xml.EncryptionMethod with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptionMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see langword="&lt;EncryptionMethod&gt;" /> — element XML szyfrowania.</summary>
        <value><see cref="T:System.Security.Cryptography.Xml.EncryptionMethod" /> Obiekt, który reprezentuje <see langword="&lt;EncryptionMethod&gt;" /> elementu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `<EncryptionMethod>` Jest opcjonalny element, który opisuje algorytm szyfrowania stosowanych do zaszyfrowanych danych. Jeśli element jest nieobecne, algorytm szyfrowania musi być znane przez odbiorcę lub odszyfrowywania zakończy się niepowodzeniem.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak szyfrowanie i odszyfrowywanie elementów XML przy użyciu <xref:System.Security.Cryptography.Xml.EncryptedData> klasę pochodzącą od <xref:System.Security.Cryptography.Xml.EncryptedType> klasy.  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptionProperties">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.Xml.EncryptionPropertyCollection EncryptionProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.EncryptionPropertyCollection EncryptionProperties" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EncryptionProperties As EncryptionPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::Xml::EncryptionPropertyCollection ^ EncryptionProperties { System::Security::Cryptography::Xml::EncryptionPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionProperties : System.Security.Cryptography.Xml.EncryptionPropertyCollection" Usage="System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptionPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see langword="&lt;EncryptionProperties&gt;" /> element szyfrowanie XML.</summary>
        <value><see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> Obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `<EncryptionProperties>` Element może zawierać dodatkowe informacje na temat tworzenia <xref:System.Security.Cryptography.Xml.EncryptedType> wystąpienia, takiego jak sygnatura daty i godziny lub numer seryjny urządzenia kryptograficzne używane podczas szyfrowania.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak szyfrowanie i odszyfrowywanie elementów XML przy użyciu <xref:System.Security.Cryptography.Xml.EncryptedData> klasę pochodzącą od <xref:System.Security.Cryptography.Xml.EncryptedType> klasy. Ten przykład następnie wyświetla różne właściwości <xref:System.Security.Cryptography.Xml.EncryptedData> klasy do konsoli.  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedType.GetXml" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetXml () As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Xml::XmlElement ^ GetXml();" />
      <MemberSignature Language="F#" Value="abstract member GetXml : unit -&gt; System.Xml.XmlElement" Usage="encryptedType.GetXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca reprezentację XML <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> obiektu.</summary>
        <returns><see cref="T:System.Xml.XmlElement" /> Obiekt, który reprezentuje <see langword="&lt;EncryptedType&gt;" /> element szyfrowanie XML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do danych wyjściowych `<EncryptedType>` elementu w języku XML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public virtual string Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Id { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Id : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see langword="Id" /> atrybutu <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> wystąpienia w szyfrowanie XML.</summary>
        <value>Ciąg <see langword="Id" /> atrybutu <see langword="&lt;EncryptedType&gt;" /> elementu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Id` Atrybut jest opcjonalny atrybut `<EncryptedType>` element, który zapewnia standardową metodę przypisywania identyfikator ciągu do elementu w dokumencie XML.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak szyfrowanie i odszyfrowywanie elementów XML przy użyciu <xref:System.Security.Cryptography.Xml.EncryptedData> klasę pochodzącą od <xref:System.Security.Cryptography.Xml.EncryptedType> klasy. Ten przykład następnie wyświetla różne właściwości <xref:System.Security.Cryptography.Xml.EncryptedData> klasy do konsoli.  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyInfo">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.KeyInfo KeyInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.KeyInfo KeyInfo" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.KeyInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyInfo As KeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::KeyInfo ^ KeyInfo { System::Security::Cryptography::Xml::KeyInfo ^ get(); void set(System::Security::Cryptography::Xml::KeyInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.KeyInfo : System.Security.Cryptography.Xml.KeyInfo with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.KeyInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.KeyInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see langword="&lt;KeyInfo&gt;" /> element szyfrowanie XML.</summary>
        <value>Element <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `<KeyInfo>` Element jest elementem opcjonalnym, który zawiera informacje o klucz używany do szyfrowania danych.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak szyfrowanie i odszyfrowywanie elementów XML przy użyciu <xref:System.Security.Cryptography.Xml.EncryptedData> klasę pochodzącą od <xref:System.Security.Cryptography.Xml.EncryptedType> klasy. Ten przykład następnie wyświetla różne właściwości <xref:System.Security.Cryptography.Xml.EncryptedData> klasy do konsoli.  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public abstract void LoadXml (System.Xml.XmlElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadXml(class System.Xml.XmlElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedType.LoadXml(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub LoadXml (value As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void LoadXml(System::Xml::XmlElement ^ value);" />
      <MemberSignature Language="F#" Value="abstract member LoadXml : System.Xml.XmlElement -&gt; unit" Usage="encryptedType.LoadXml value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Xml.XmlElement" /> Obiekt reprezentujący element XML do użycia w <see langword="&lt;EncryptedType&gt;" /> elementu.</param>
        <summary>Ładuje informacje XML do <see langword="&lt;EncryptedType&gt;" /> element szyfrowanie XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do istniejącego elementu XML do załadowania <xref:System.Security.Cryptography.Xml.EncryptedType> obiektu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak szyfrowanie i odszyfrowywanie elementów XML przy użyciu <xref:System.Security.Cryptography.Xml.EncryptedData> klasę pochodzącą od <xref:System.Security.Cryptography.Xml.EncryptedType> klasy.  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> Pod warunkiem jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="MimeType">
      <MemberSignature Language="C#" Value="public virtual string MimeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MimeType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.MimeType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MimeType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MimeType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MimeType : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.MimeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see langword="MimeType" /> atrybutu <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> wystąpienia w szyfrowanie XML.</summary>
        <value>Ciąg, który opisuje typ nośnika zaszyfrowanych danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `MimeType` Atrybut jest opcjonalny atrybut, który opisuje typ nośnika zaszyfrowanych danych. Wartość tego atrybutu jest ciągiem o wartości zdefiniowane przez [RFC 2045: Multipurpose Internet Mail Extensions (MIME) w pierwszej części: Format treści wiadomości Internet](https://www.ietf.org/rfc/rfc2045.txt). Na przykład, jeśli dane są szyfrowane są zakodowane w formacie base64 PNG `Encoding` atrybut może być "<http://www.w3.org/2000/09/xmldsig#base64>" i `MimeType` będzie "image/png". Ten atrybut jest opcjonalny i weryfikacja nie `MimeType` informacja jest wymagana. Ten atrybut nie oznacza, że aplikacja szyfrowania musi wykonać żadnych dodatkowych czynności. Należy pamiętać, że te informacje mogą nie być konieczne, jeśli jest już powiązany z identyfikatorem w `Type` atrybutu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak szyfrowanie i odszyfrowywanie elementów XML przy użyciu <xref:System.Security.Cryptography.Xml.EncryptedData> klasę pochodzącą od <xref:System.Security.Cryptography.Xml.EncryptedType> klasy. Ten przykład następnie wyświetla różne właściwości <xref:System.Security.Cryptography.Xml.EncryptedData> klasy do konsoli.  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public virtual string Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.Type" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Type { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see langword="Type" /> atrybutu <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> wystąpienia w szyfrowanie XML.</summary>
        <value>Ciąg, który opisuje postaci tekstu, zaszyfrowanych danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Type` Atrybut jest opcjonalny atrybut, który identyfikuje typ informacje o formularzu tekst zaszyfrowaną zawartość. Chociaż jest to opcjonalne, jest ważne atrybutu i jest używany podczas przetwarzania obowiązkowe opisanego w [przetwarzania zasad: Odszyfrowywanie](https://www.w3.org/TR/xmlenc-core/) (sekcji 4.2) specyfikacji składni szyfrowanie XML i przetwarzania (https://www.w3.org/TR/xmlenc-core/). Jeśli `<EncryptedData>` element zawiera dane typu `'element'` lub elementu `'content'`i zastępuje, że dane w dokumencie XML, zdecydowanie zalecane jest, `Type` atrybut należy podać. Bez tych informacji aplikacji, próba odszyfrowania będzie mógł automatycznie przywrócić dokumentu XML do ich oryginalnej formie tekstu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak szyfrowanie i odszyfrowywanie elementów XML przy użyciu <xref:System.Security.Cryptography.Xml.EncryptedData> klasę pochodzącą od <xref:System.Security.Cryptography.Xml.EncryptedType> klasy.  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>