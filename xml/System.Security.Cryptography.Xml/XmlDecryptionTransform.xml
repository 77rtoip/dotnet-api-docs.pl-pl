<Type Name="XmlDecryptionTransform" FullName="System.Security.Cryptography.Xml.XmlDecryptionTransform">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1be24f693a1abec85787bd56237e8e0363051bbb" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37631676" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlDecryptionTransform : System.Security.Cryptography.Xml.Transform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlDecryptionTransform extends System.Security.Cryptography.Xml.Transform" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlDecryptionTransform&#xA;Inherits Transform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlDecryptionTransform : System::Security::Cryptography::Xml::Transform" />
  <TypeSignature Language="F#" Value="type XmlDecryptionTransform = class&#xA;    inherit Transform" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.Xml.Transform</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Określa kolejność operacji podpisu cyfrowego XML i szyfrowanie XML, gdy oba są wykonywane na tym samym dokumencie.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.XmlDecryptionTransform> Klasa udostępnia transformacji, która określa kolejność operacji podpisu cyfrowego XML i szyfrowanie XML, gdy oba są wykonywane na tym samym dokumencie.  
  
 Użyj <xref:System.Security.Cryptography.Xml.XmlDecryptionTransform> klasy zawsze, gdy potrzebujesz wykonać szyfrowanie XML i zastosować podpis cyfrowy XML do tego samego dokumentu XML.  
  
 Należy przekazać <xref:System.Security.Cryptography.Xml.EncryptedXml> obiekt <xref:System.Security.Cryptography.Xml.XmlDecryptionTransform.EncryptedXml%2A> właściwość, która zawiera niezbędne informacje o kluczu do odszyfrowania dokumentu.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDecryptionTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDecryptionTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddExceptUri">
      <MemberSignature Language="C#" Value="public void AddExceptUri (string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddExceptUri(string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.AddExceptUri(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddExceptUri (uri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddExceptUri(System::String ^ uri);" />
      <MemberSignature Language="F#" Value="member this.AddExceptUri : string -&gt; unit" Usage="xmlDecryptionTransform.AddExceptUri uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">Jednolity identyfikator (URI) do wykluczenia z przetwarzania</param>
        <summary>Dodaje jednolite zasobów identyfikator (URI) do wykluczenia z przetwarzania.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uri" /> Parametr <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptedXml">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.EncryptedXml EncryptedXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.EncryptedXml EncryptedXml" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlDecryptionTransform.EncryptedXml" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptedXml As EncryptedXml" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::EncryptedXml ^ EncryptedXml { System::Security::Cryptography::Xml::EncryptedXml ^ get(); void set(System::Security::Cryptography::Xml::EncryptedXml ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EncryptedXml : System.Security.Cryptography.Xml.EncryptedXml with get, set" Usage="System.Security.Cryptography.Xml.XmlDecryptionTransform.EncryptedXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptedXml</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> obiektu, który zawiera informacje o kluczach wymagany do odszyfrowania dokumentu XML.</summary>
        <value>
          <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> Obiektu, który zawiera informacje o kluczach wymagany do odszyfrowania dokumentu XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy przekazać <xref:System.Security.Cryptography.Xml.EncryptedXml> obiekt <xref:System.Security.Cryptography.Xml.XmlDecryptionTransform.EncryptedXml%2A> właściwość, która zawiera niezbędne informacje o kluczu do odszyfrowania dokumentu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInnerXml">
      <MemberSignature Language="C#" Value="protected override System.Xml.XmlNodeList GetInnerXml ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xml.XmlNodeList GetInnerXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.GetInnerXml" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetInnerXml () As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xml::XmlNodeList ^ GetInnerXml();" />
      <MemberSignature Language="F#" Value="override this.GetInnerXml : unit -&gt; System.Xml.XmlNodeList" Usage="xmlDecryptionTransform.GetInnerXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca reprezentację XML parametry <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> obiektu, które są odpowiednie do uwzględnienia jako podelementy XMLDSIG <see langword="&lt;Transform&gt;" /> elementu.</summary>
        <returns>Lista węzłów XML, które reprezentują zawartości specyficznej dla transformacji, potrzebne do opisania bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> obiektu w XMLDSIG <see langword="&lt;Transform&gt;" /> elementu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetOutput">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca dane wyjściowe bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> obiektu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public override object GetOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOutput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOutput () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetOutput();" />
      <MemberSignature Language="F#" Value="override this.GetOutput : unit -&gt; obj" Usage="xmlDecryptionTransform.GetOutput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca dane wyjściowe bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> obiektu.</summary>
        <returns>Dane wyjściowe bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> obiektu.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Nie można odnaleźć klucza odszyfrowującego.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public override object GetOutput (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOutput(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetOutput(Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.GetOutput : Type -&gt; obj" Usage="xmlDecryptionTransform.GetOutput type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Typ danych wyjściowych do zwrócenia. <see cref="T:System.Xml.XmlNodeList" /> jest prawidłowa tylko typem dla tego parametru.</param>
        <summary>Zwraca dane wyjściowe bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> obiektu.</summary>
        <returns>Dane wyjściowe bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> obiektu.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="type" /> Parametr nie jest <see cref="T:System.Xml.XmlNodeList" /> obiektu.</exception>
      </Docs>
    </Member>
    <Member MemberName="InputTypes">
      <MemberSignature Language="C#" Value="public override Type[] InputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] InputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlDecryptionTransform.InputTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property InputTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;Type ^&gt; ^ InputTypes { cli::array &lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputTypes : Type[]" Usage="System.Security.Cryptography.Xml.XmlDecryptionTransform.InputTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera tablicę typów, które są prawidłowe dane wejściowe do <see cref="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInput(System.Object)" /> metoda bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> obiektu.</summary>
        <value>Tablica prawidłowe typy danych wejściowych dla bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> obiektu można przekazać tylko obiekty z jednej z tych typów w celu <see cref="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInput(System.Object)" /> metoda bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tablica zwrócona przez <xref:System.Security.Cryptography.Xml.XmlDecryptionTransform.InputTypes%2A> właściwość musi zawierać co najmniej jeden element, ponieważ każdy <xref:System.Security.Cryptography.Xml.XmlDecryptionTransform> obiektu musi być co najmniej jeden typ jako prawidłowe dane wejściowe.  
  
 <xref:System.Security.Cryptography.Xml.XmlDecryptionTransform> Obiektu zazwyczaj przyjmuje co najmniej jeden z następujących typów jako dane wejściowe: <xref:System.IO.Stream>, <xref:System.Xml.XmlDocument>, lub <xref:System.Xml.XmlNodeList>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTargetElement">
      <MemberSignature Language="C#" Value="protected virtual bool IsTargetElement (System.Xml.XmlElement inputElement, string idValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsTargetElement(class System.Xml.XmlElement inputElement, string idValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.IsTargetElement(System.Xml.XmlElement,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsTargetElement (inputElement As XmlElement, idValue As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsTargetElement(System::Xml::XmlElement ^ inputElement, System::String ^ idValue);" />
      <MemberSignature Language="F#" Value="abstract member IsTargetElement : System.Xml.XmlElement * string -&gt; bool&#xA;override this.IsTargetElement : System.Xml.XmlElement * string -&gt; bool" Usage="xmlDecryptionTransform.IsTargetElement (inputElement, idValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" />
        <Parameter Name="idValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputElement">
          <see cref="T:System.Xml.XmlElement" /> Obiektu przy użyciu atrybutu ID do porównania z <c>idValue</c>.</param>
        <param name="idValue">Wartość do porównania z atrybutu ID <c>inputElement</c>.</param>
        <summary>Określa, czy atrybut ID <see cref="T:System.Xml.XmlElement" /> obiektu odpowiada określonej wartości.</summary>
        <returns>
          <see langword="true" /> Jeśli atrybut ID <paramref name="inputElement" /> parametr odpowiada <paramref name="idValue" /> parametru; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadInnerXml">
      <MemberSignature Language="C#" Value="public override void LoadInnerXml (System.Xml.XmlNodeList nodeList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadInnerXml(class System.Xml.XmlNodeList nodeList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInnerXml(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadInnerXml (nodeList As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadInnerXml(System::Xml::XmlNodeList ^ nodeList);" />
      <MemberSignature Language="F#" Value="override this.LoadInnerXml : System.Xml.XmlNodeList -&gt; unit" Usage="xmlDecryptionTransform.LoadInnerXml nodeList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeList" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodeList">
          <see cref="T:System.Xml.XmlNodeList" /> Obiekt, który określa zawartości specyficznej dla transformacji dla bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> obiektu.</param>
        <summary>Analizuje określony <see cref="T:System.Xml.XmlNodeList" /> obiektu jako zawartość specyficzne dla transformacji <see langword="&lt;Transform&gt;" /> elementu i konfiguruje stan wewnętrzny bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> obiektu, aby dopasować <see langword="&lt;Transform&gt;" /> elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana do przetwarzania podelementy z `<Transform>` elementu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <paramref name="nodeList" /> Parametr <see langword="null" />.  
  
—lub— 
Wartość identyfikatora URI (Uniform Resource) <see cref="T:System.Xml.XmlNode" /> obiektu <paramref name="nodeList" /> nie został znaleziony.  
  
—lub— 
Długość wartości identyfikatora URI <see cref="T:System.Xml.XmlNode" /> obiektu <paramref name="nodeList" /> ma wartość 0.  
  
—lub— 
Pierwszy znak wartości identyfikatora URI <see cref="T:System.Xml.XmlNode" /> obiektu <paramref name="nodeList" /> nie jest "#".</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadInput">
      <MemberSignature Language="C#" Value="public override void LoadInput (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadInput(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInput(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadInput (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadInput(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.LoadInput : obj -&gt; unit" Usage="xmlDecryptionTransform.LoadInput obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Dane wejściowe do załadowania do bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> obiektu.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, ładuje określone dane wejściowe do bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typ obiektu danych wejściowych musi być jednym z typów w <xref:System.Security.Cryptography.Xml.XmlDecryptionTransform.InputTypes%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="obj" /> Parametr <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="OutputTypes">
      <MemberSignature Language="C#" Value="public override Type[] OutputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] OutputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlDecryptionTransform.OutputTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property OutputTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;Type ^&gt; ^ OutputTypes { cli::array &lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputTypes : Type[]" Usage="System.Security.Cryptography.Xml.XmlDecryptionTransform.OutputTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera tablicę typów, które są możliwe dane wyjściowe z <see cref="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput" /> metod bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> obiektu.</summary>
        <value>Tablica typów prawidłowe dane wyjściowe dla bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> obiekt; tylko obiekty z jednej z tych typów są zwracane z <see cref="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput" /> metod bieżącego <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tablica zwrócona przez <xref:System.Security.Cryptography.Xml.XmlDecryptionTransform.OutputTypes%2A> właściwość musi zawierać co najmniej jeden element, ponieważ każdy przekształcenia należy wygenerować co najmniej jeden typ jako dane wyjściowe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>