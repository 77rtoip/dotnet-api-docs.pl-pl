<Type Name="CipherData" FullName="System.Security.Cryptography.Xml.CipherData">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d890d910d166cd75d2e6f4fba5176a8bd91fa4c2" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36626072" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CipherData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CipherData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.CipherData" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CipherData" />
  <TypeSignature Language="C++ CLI" Value="public ref class CipherData sealed" />
  <TypeSignature Language="F#" Value="type CipherData = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje <see langword="&lt;CipherData&gt;" /> element szyfrowanie XML. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.CipherData> Klasy reprezentuje `<CipherData>` element szyfrowanie XML. Jest wymagany element, który zawiera zaszyfrowane dane. Albo musi zawierać zaszyfrowane dane jako tekst algorytmem Base64 `<CipherValue>` elementu, lub podaj odwołanie do zewnętrznej lokalizacji zawierający danych zaszyfrowanych przy użyciu `<CipherReference>` elementu.  
  
 W wielu przypadkach nie należy bezpośrednio utworzyć nowe wystąpienie klasy <xref:System.Security.Cryptography.Xml.CipherData> klasy.  <xref:System.Security.Cryptography.Xml.SignedXml.EncryptedXml%2A>, <xref:System.Security.Cryptography.Xml.EncryptedData>, I <xref:System.Security.Cryptography.Xml.EncryptedKey> klasy tworzenia wystąpień dla Ciebie.  
  
> [!NOTE]
>  A <xref:System.Security.Cryptography.Xml.CipherData> obiekt może mieć albo <xref:System.Security.Cryptography.Xml.CipherReference> właściwości lub <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> właściwości, ale nie oba. A <xref:System.Security.Cryptography.CryptographicException> jest generowany, jeśli obie są przypisane do <xref:System.Security.Cryptography.Xml.CipherData> obiektu.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Security.Cryptography.Xml.EncryptedData> klasy w celu utworzenia <`EncryptedData`> element, który zawiera <`CipherData`> elementu, a następnie zapisuje XML w pliku XML.  
  
 [!code-cpp[cryptgraphy.Xml.EncryptedData#1](~/samples/snippets/cpp/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/cpp/encrypteddata.cpp#1)]
 [!code-csharp[cryptgraphy.Xml.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/CS/encrypteddata.cs#1)]
 [!code-vb[cryptgraphy.Xml.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/VB/encrypteddata.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.Xml.CipherData" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CipherData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherData.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CipherData();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.Xml.CipherData" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor tworzy <xref:System.Security.Cryptography.Xml.CipherData> obiekt, który reprezentuje `<CipherData>` element szyfrowanie XML. `<CipherData>` Element jest wymagany element w szyfrowanie XML.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak utworzyć nowe wystąpienie klasy <xref:System.Security.Cryptography.Xml.CipherData> klasy. Cała próbka znajdują się w <xref:System.Security.Cryptography.Xml.CipherData> klasy tematu.  
  
 [!code-cpp[cryptgraphy.Xml.EncryptedData#2](~/samples/snippets/cpp/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/cpp/encrypteddata.cpp#2)]
 [!code-csharp[cryptgraphy.Xml.EncryptedData#2](~/samples/snippets/csharp/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/CS/encrypteddata.cs#2)]
 [!code-vb[cryptgraphy.Xml.EncryptedData#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/VB/encrypteddata.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CipherData (byte[] cipherValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] cipherValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherData.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cipherValue As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CipherData(cli::array &lt;System::Byte&gt; ^ cipherValue);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.CipherData : byte[] -&gt; System.Security.Cryptography.Xml.CipherData" Usage="new System.Security.Cryptography.Xml.CipherData cipherValue" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cipherValue" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="cipherValue">Zaszyfrowane dane do użycia na potrzeby <see langword="&lt;CipherValue&gt;" /> elementu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.Xml.CipherData" /> przy użyciu tablicy bajtów jako <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> wartość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor tworzy <xref:System.Security.Cryptography.Xml.CipherData> obiekt, który reprezentuje `<CipherData>` element szyfrowanie XML. Przypisuje konstruktora `cipherValue` do wartości <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> właściwość jako rzeczywiste zaszyfrowanych danych.  
  
> [!NOTE]
>  `<CipherData>` Element może mieć albo <xref:System.Security.Cryptography.Xml.CipherReference> lub <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> element podrzędny, ale nie oba. A <xref:System.Security.Cryptography.CryptographicException> jest generowany, jeśli obie są przypisane do <xref:System.Security.Cryptography.Xml.CipherData> obiektu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak utworzyć nowe wystąpienie klasy <xref:System.Security.Cryptography.Xml.CipherData> klasy.  
  
 [!code-cpp[cryptography.Xml.EncryptedData2#1](~/samples/snippets/cpp/VS_Snippets_CLR/cryptography.Xml.EncryptedData2/CPP/encrypteddata.cpp#1)]
 [!code-csharp[cryptography.Xml.EncryptedData2#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.Xml.EncryptedData2/CS/encrypteddata.cs#1)]
 [!code-vb[cryptography.Xml.EncryptedData2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.Xml.EncryptedData2/VB/encrypteddata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="cipherValue" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> Właściwość została już ustawiona.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CipherData (System.Security.Cryptography.Xml.CipherReference cipherReference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.Xml.CipherReference cipherReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherData.#ctor(System.Security.Cryptography.Xml.CipherReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CipherData(System::Security::Cryptography::Xml::CipherReference ^ cipherReference);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.CipherData : System.Security.Cryptography.Xml.CipherReference -&gt; System.Security.Cryptography.Xml.CipherData" Usage="new System.Security.Cryptography.Xml.CipherData cipherReference" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cipherReference" Type="System.Security.Cryptography.Xml.CipherReference" />
      </Parameters>
      <Docs>
        <param name="cipherReference">
          <see cref="T:System.Security.Cryptography.Xml.CipherReference" /> Obiekt ma być używany.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.Xml.CipherData" /> przy użyciu <see cref="T:System.Security.Cryptography.Xml.CipherReference" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor tworzy <xref:System.Security.Cryptography.Xml.CipherData> obiekt, który reprezentuje `<CipherData>` — element XML szyfrowania i przypisuje `cipherReference` do wartości <xref:System.Security.Cryptography.Xml.CipherReference> właściwości. <xref:System.Security.Cryptography.Xml.CipherReference> Obiekt reprezentuje `<CipherReference>` element, który określa lokalizację zaszyfrowanych danych.  
  
> [!NOTE]
>  A <xref:System.Security.Cryptography.Xml.CipherData> obiekt może mieć albo <xref:System.Security.Cryptography.Xml.CipherReference> właściwości lub <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> właściwości, ale nie oba. A <xref:System.Security.Cryptography.CryptographicException> jest generowany, jeśli obie są przypisane do <xref:System.Security.Cryptography.Xml.CipherData> obiektu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak utworzyć nowe wystąpienie klasy <xref:System.Security.Cryptography.Xml.CipherData> przy użyciu <xref:System.Security.Cryptography.Xml.CipherReference> informacji.  
  
 [!code-cpp[cryptography.Xml.CipherReference#1](~/samples/snippets/cpp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CPP/example.cpp#1)]
 [!code-csharp[cryptography.Xml.CipherReference#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CS/example.cs#1)]
 [!code-vb[cryptography.Xml.CipherReference#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.Xml.CipherReference/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="cipherValue" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> Właściwość została już ustawiona.</exception>
      </Docs>
    </Member>
    <Member MemberName="CipherReference">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.CipherReference CipherReference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.CipherReference CipherReference" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.CipherData.CipherReference" />
      <MemberSignature Language="VB.NET" Value="Public Property CipherReference As CipherReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::CipherReference ^ CipherReference { System::Security::Cryptography::Xml::CipherReference ^ get(); void set(System::Security::Cryptography::Xml::CipherReference ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CipherReference : System.Security.Cryptography.Xml.CipherReference with get, set" Usage="System.Security.Cryptography.Xml.CipherData.CipherReference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.CipherReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see langword="&lt;CipherReference&gt;" /> elementu.</summary>
        <value>A <see cref="T:System.Security.Cryptography.Xml.CipherReference" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `<CipherReference>` Element identyfikuje źródła, podczas przetwarzania daje zaszyfrowanych danych. Aby uzyskać więcej informacji o tym elemencie, zobacz <xref:System.Security.Cryptography.Xml.CipherReference>.  
  
> [!NOTE]
>  A <xref:System.Security.Cryptography.Xml.CipherData> obiekt może mieć albo <xref:System.Security.Cryptography.Xml.CipherReference> właściwości lub <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> właściwości, ale nie oba. A <xref:System.Security.Cryptography.CryptographicException> jest generowany, jeśli obie są przypisane do <xref:System.Security.Cryptography.Xml.CipherData> obiektu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak utworzyć nowe wystąpienie klasy <xref:System.Security.Cryptography.Xml.CipherData> przy użyciu <xref:System.Security.Cryptography.Xml.CipherReference> informacji.  
  
 [!code-cpp[cryptography.Xml.CipherReference#1](~/samples/snippets/cpp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CPP/example.cpp#1)]
 [!code-csharp[cryptography.Xml.CipherReference#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CS/example.cs#1)]
 [!code-vb[cryptography.Xml.CipherReference#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.Xml.CipherReference/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherReference" /> Ustawiono właściwość <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherReference" /> Właściwość została ustawiona więcej niż raz.</exception>
      </Docs>
    </Member>
    <Member MemberName="CipherValue">
      <MemberSignature Language="C#" Value="public byte[] CipherValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] CipherValue" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.CipherData.CipherValue" />
      <MemberSignature Language="VB.NET" Value="Public Property CipherValue As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ CipherValue { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CipherValue : byte[] with get, set" Usage="System.Security.Cryptography.Xml.CipherData.CipherValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see langword="&lt;CipherValue&gt;" /> elementu.</summary>
        <value>Tablica bajtów, który reprezentuje <see langword="&lt;CipherValue&gt;" /> elementu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość jest zaszyfrowanych danych.  
  
> [!NOTE]
>  `<CipherData>` Element może mieć albo <xref:System.Security.Cryptography.Xml.CipherReference> lub <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> element podrzędny, ale nie oba. A <xref:System.Security.Cryptography.CryptographicException> jest generowany, jeśli obie są przypisane do <xref:System.Security.Cryptography.Xml.CipherData> obiektu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak utworzyć nowe wystąpienie klasy <xref:System.Security.Cryptography.Xml.CipherData> klasy.  
  
 [!code-cpp[cryptography.Xml.EncryptedData2#1](~/samples/snippets/cpp/VS_Snippets_CLR/cryptography.Xml.EncryptedData2/CPP/encrypteddata.cpp#1)]
 [!code-csharp[cryptography.Xml.EncryptedData2#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.Xml.EncryptedData2/CS/encrypteddata.cs#1)]
 [!code-vb[cryptography.Xml.EncryptedData2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.Xml.EncryptedData2/VB/encrypteddata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> Ustawiono właściwość <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> Właściwość została ustawiona więcej niż raz.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherData.GetXml" />
      <MemberSignature Language="VB.NET" Value="Public Function GetXml () As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlElement ^ GetXml();" />
      <MemberSignature Language="F#" Value="member this.GetXml : unit -&gt; System.Xml.XmlElement" Usage="cipherData.GetXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera wartości XML <see cref="T:System.Security.Cryptography.Xml.CipherData" /> obiektu.</summary>
        <returns>A <see cref="T:System.Xml.XmlElement" /> obiekt, który reprezentuje dane XML <see cref="T:System.Security.Cryptography.Xml.CipherData" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do wyjściowego pliku XML dla <xref:System.Security.Cryptography.Xml.CipherData> obiektu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak utworzyć nowe wystąpienie klasy <xref:System.Security.Cryptography.Xml.CipherData> obiektu.  
  
 [!code-cpp[cryptgraphy.Xml.EncryptedData#2](~/samples/snippets/cpp/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/cpp/encrypteddata.cpp#2)]
 [!code-csharp[cryptgraphy.Xml.EncryptedData#2](~/samples/snippets/csharp/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/CS/encrypteddata.cs#2)]
 [!code-vb[cryptgraphy.Xml.EncryptedData#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/VB/encrypteddata.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> Właściwości i <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherReference" /> właściwości są <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public void LoadXml (System.Xml.XmlElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadXml(class System.Xml.XmlElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherData.LoadXml(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadXml (value As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadXml(System::Xml::XmlElement ^ value);" />
      <MemberSignature Language="F#" Value="member this.LoadXml : System.Xml.XmlElement -&gt; unit" Usage="cipherData.LoadXml value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Xml.XmlElement" /> Reprezentujący danych XML do załadowania.</param>
        <summary>Ładuje dane XML z <see cref="T:System.Xml.XmlElement" /> do <see cref="T:System.Security.Cryptography.Xml.CipherData" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.CipherData.LoadXml%2A> Metoda zastępuje istniejące elementy XML z `value` parametru.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> Właściwości i <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherReference" /> właściwości są <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>