<Type Name="EncryptedXml" FullName="System.Security.Cryptography.Xml.EncryptedXml">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9ec42eb13e8203ea69760b7ea2cf55e209112015" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69084322" /></Metadata><TypeSignature Language="C#" Value="public class EncryptedXml" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EncryptedXml extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.EncryptedXml" />
  <TypeSignature Language="VB.NET" Value="Public Class EncryptedXml" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedXml" />
  <TypeSignature Language="F#" Value="type EncryptedXml = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje model procesu służący do implementowania szyfrowania XML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.EncryptedXml> Klasa jest główną klasą używaną do szyfrowania XML w .NET Framework. Szyfrowanie XML to oparty na standardach sposób, który umożliwia zaszyfrowanie całości lub części dokumentu XML lub dowolnych danych. Klasy szyfrowania XML .NET Framework implementują składnię szyfrowania XML organizacja World Wide Web Consortium (W3C) [i przetwarzanie wersji 1,1](https://www.w3.org/TR/xmlenc-core/) .  
  
 Użyj klasy <xref:System.Security.Cryptography.Xml.EncryptedXml> , gdy zachodzi potrzeba udostępniania zaszyfrowanych danych XML między aplikacjami lub organizacjami w standardowy sposób. Wszelkie dane zaszyfrowane za pomocą tej klasy mogą zostać odszyfrowane przez dowolną implementację specyfikacji W3C dla szyfrowania XML.  
  
 Szyfrowanie XML zastępuje wszystkie elementy `<EncryptedData>` XML w postaci zwykłego tekstu elementem, który zawiera zaszyfrowaną (lub Szyfruj tekst) reprezentację tekstu XML lub dowolne dowolne dane. `<EncryptedData>` Element może opcjonalnie zawierać informacje o miejscu, w którym należy znaleźć klucz, który odszyfruje tekst szyfru i który algorytm kryptograficzny został użyty do zaszyfrowania zwykłego tekstu.  
  
 Element jest podobny `<EncryptedData>` do elementu w stylu i użyciu, z tą różnicą, że umożliwia szyfrowanie klucza, który `<EncryptedData>` odszyfruje wartość elementu. `<EncryptedKey>` Należy zauważyć, `<EncryptedKey>` że element `<EncryptedData>` i element nigdy nie będą zawierać niezaszyfrowanego klucza.  
  
 Aby wymienić informacje o kluczu, użyj jednej z następujących metod:  
  
-   Nie dołączaj żadnych informacji o kluczu. W przypadku wybrania tej opcji obie strony muszą wyrazić zgodę na algorytm i klucz przed wymianą zaszyfrowanych danych.  
  
-   Dołącz lokalizację klucza w atrybucie `<RetrievalMethod>` Uniform Resource Identifier (URI) elementu. Obie strony muszą wyrazić zgodę na lokalizację klucza przed czasem, a ta lokalizacja musi być zachowana jako wpis tajny.  
  
-   Dołącz nazwę ciągu, która jest mapowana na klucz w `<KeyName>` elemencie. Obie strony muszą wyrazić zgodę na mapowanie nazwy klucza przed wymianą zaszyfrowanych danych, a mapowanie musi być zachowane.  
  
-   Dołącz zaszyfrowany klucz do `<EncryptedKey>` elementu. Obie strony muszą wyrazić zgodę na klucz, który odszyfrowuje zaszyfrowany klucz przed wymianą zaszyfrowanych danych. Opcjonalnie możesz dołączyć nazwę lub lokalizację klucza, który odszyfruje klucz w `<EncryptedKey>` elemencie.  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje sposób tworzenia prostej klasy narzędzi, która używa <xref:System.Security.Cryptography.TripleDES> algorytmu do szyfrowania dokumentu XML.  
  
 [!code-cpp[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.MainXMLEncDecryptDataOOP/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.MainXMLEncDecryptDataOOP/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.MainXMLEncDecryptDataOOP/VB/sample.vb#1)]  
  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu klucza symetrycznego. Ten przykład nie zawiera żadnych informacji o kluczu w zaszyfrowanym dokumencie XML.  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu klucza symetrycznego. Ten przykład osadza nazwę klucza w zaszyfrowanym dokumencie XML, którego Metoda odszyfrowuje używa do znajdowania odpowiedniego klucza odszyfrowywania.  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu klucza asymetrycznego. Ten przykład umożliwia utworzenie symetrycznego klucza sesji w celu zaszyfrowania dokumentu, a następnie użycie klucza asymetrycznego do osadzenia zaszyfrowanej wersji klucza sesji w dokumencie XML.  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu certyfikatu X. 509. Ten przykład umożliwia utworzenie symetrycznego klucza sesji w celu zaszyfrowania dokumentu, a następnie użycie certyfikatu X. 509 w celu osadzenia zaszyfrowanej wersji klucza sesji w dokumencie XML.  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu klucza symetrycznego. Ten przykład nie zawiera żadnych informacji o kluczu w zaszyfrowanym dokumencie XML.  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu klucza symetrycznego. Ten przykład osadza nazwę klucza w zaszyfrowanym dokumencie XML, którego Metoda odszyfrowuje używa do znajdowania odpowiedniego klucza odszyfrowywania.  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu klucza asymetrycznego. Ten przykład umożliwia utworzenie symetrycznego klucza sesji w celu zaszyfrowania dokumentu, a następnie użycie klucza asymetrycznego do osadzenia zaszyfrowanej wersji klucza sesji w dokumencie XML.  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu certyfikatu X. 509. Ten przykład umożliwia utworzenie symetrycznego klucza sesji w celu zaszyfrowania dokumentu, a następnie użycie certyfikatu X. 509 w celu osadzenia zaszyfrowanej wersji klucza sesji w dokumencie XML.  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedXml();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to Konstruktor bez parametrów dla klasy głównej dla szyfrowania XML w .NET Framework.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu klucza symetrycznego. Ten przykład nie zawiera żadnych informacji o kluczu w zaszyfrowanym dokumencie XML.  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu klucza symetrycznego. Ten przykład osadza nazwę klucza w zaszyfrowanym dokumencie XML, którego Metoda odszyfrowuje używa do znajdowania odpowiedniego klucza odszyfrowywania.  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu klucza asymetrycznego. Ten przykład umożliwia utworzenie symetrycznego klucza sesji w celu zaszyfrowania dokumentu, a następnie użycie klucza asymetrycznego do osadzenia zaszyfrowanej wersji klucza sesji w dokumencie XML.  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu certyfikatu X. 509. Ten przykład umożliwia utworzenie symetrycznego klucza sesji w celu zaszyfrowania dokumentu, a następnie użycie certyfikatu X. 509 w celu osadzenia zaszyfrowanej wersji klucza sesji w dokumencie XML.  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedXml (System.Xml.XmlDocument document);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlDocument document) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.#ctor(System.Xml.XmlDocument)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (document As XmlDocument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedXml(System::Xml::XmlDocument ^ document);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.EncryptedXml : System.Xml.XmlDocument -&gt; System.Security.Cryptography.Xml.EncryptedXml" Usage="new System.Security.Cryptography.Xml.EncryptedXml document" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.XmlDocument" />
      </Parameters>
      <Docs>
        <param name="document">Obiekt używany do <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> inicjowania obiektu. <see cref="T:System.Xml.XmlDocument" /></param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> klasy przy użyciu określonego dokumentu XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora, aby utworzyć <xref:System.Security.Cryptography.Xml.EncryptedXml> obiekt, gdy chcesz określić dokument XML do zaszyfrowania. `document` Parametr składa się z elementów XML, które później tworzą zaszyfrowany kod XML.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu klucza symetrycznego. Ten przykład osadza nazwę klucza w zaszyfrowanym dokumencie XML, którego Metoda odszyfrowuje używa do znajdowania odpowiedniego klucza odszyfrowywania.  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu klucza asymetrycznego. Ten przykład umożliwia utworzenie symetrycznego klucza sesji w celu zaszyfrowania dokumentu, a następnie użycie klucza asymetrycznego do osadzenia zaszyfrowanej wersji klucza sesji w dokumencie XML.  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedXml (System.Xml.XmlDocument document, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlDocument document, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.#ctor(System.Xml.XmlDocument,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedXml(System::Xml::XmlDocument ^ document, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.EncryptedXml : System.Xml.XmlDocument * System.Security.Policy.Evidence -&gt; System.Security.Cryptography.Xml.EncryptedXml" Usage="new System.Security.Cryptography.Xml.EncryptedXml (document, evidence)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.XmlDocument" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="document">Obiekt używany do <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> inicjowania obiektu. <see cref="T:System.Xml.XmlDocument" /></param>
        <param name="evidence"><see cref="T:System.Security.Policy.Evidence" /> Obiekt skojarzony zobiektem<see cref="T:System.Xml.XmlDocument" /> .</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> klasy przy użyciu określonego dokumentu XML i dowodu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora, aby utworzyć <xref:System.Security.Cryptography.Xml.EncryptedXml> obiekt, gdy chcesz określić dokument XML do zaszyfrowania i zapewnienia dowodu bezpieczeństwa. `document` Parametr składa się z elementów XML, które później tworzą zaszyfrowany kod XML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyNameMapping">
      <MemberSignature Language="C#" Value="public void AddKeyNameMapping (string keyName, object keyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddKeyNameMapping(string keyName, object keyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddKeyNameMapping (keyName As String, keyObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddKeyNameMapping(System::String ^ keyName, System::Object ^ keyObject);" />
      <MemberSignature Language="F#" Value="member this.AddKeyNameMapping : string * obj -&gt; unit" Usage="encryptedXml.AddKeyNameMapping (keyName, keyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="keyObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keyName">Nazwa do mapowania <paramref name="keyObject" />.</param>
        <param name="keyObject">Klucz symetryczny do mapowania <paramref name="keyName" />.</param>
        <summary>Definiuje mapowanie między nazwą klucza i kluczem symetrycznym lub kluczem asymetrycznym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping%2A> Metoda umożliwia zamapowanie klucza symetrycznego lub klucza asymetrycznego na nazwę ciągu. Ta metoda dodaje wartości `keyName` parametrów i `keyObject` do tabeli prawidłowych mapowań nazw kluczy.  
  
 Użyj metody <xref:System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings%2A> , aby wyczyścić tabelę mapowania nazw kluczy.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu klucza symetrycznego. Ten przykład osadza nazwę klucza w zaszyfrowanym dokumencie XML, którego Metoda odszyfrowuje używa do znajdowania odpowiedniego klucza odszyfrowywania.  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CPP/Cryptography.XML.XMLEncMinimalDecrypt.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość <paramref name="keyName" /> parametru to <see langword="null" />.  
  
—lub— 
Wartość <paramref name="keyObject" /> parametru to <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Wartość <paramref name="keyObject" /> parametru nie jest algorytmem RSA ani kluczem symetrycznym.</exception>
      </Docs>
    </Member>
    <Member MemberName="ClearKeyNameMappings">
      <MemberSignature Language="C#" Value="public void ClearKeyNameMappings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearKeyNameMappings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearKeyNameMappings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearKeyNameMappings();" />
      <MemberSignature Language="F#" Value="member this.ClearKeyNameMappings : unit -&gt; unit" Usage="encryptedXml.ClearKeyNameMappings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje wszystkie Mapowanie nazw kluczy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, aby wyczyścić wszystkie mapowania nazw kluczy, które zostały ustawione przy <xref:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping%2A> użyciu metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecryptData">
      <MemberSignature Language="C#" Value="public byte[] DecryptData (System.Security.Cryptography.Xml.EncryptedData encryptedData, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DecryptData(class System.Security.Cryptography.Xml.EncryptedData encryptedData, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ DecryptData(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C#" Value="public byte[] DecryptData (System.Security.Cryptography.Xml.EncryptedData encryptedData, System.Security.Cryptography.SymmetricAlgorithm symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DecryptData(class System.Security.Cryptography.Xml.EncryptedData encryptedData, class System.Security.Cryptography.SymmetricAlgorithm symAlg) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ DecryptData(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptData(System.Security.Cryptography.Xml.EncryptedData,System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.DecryptData : System.Security.Cryptography.Xml.EncryptedData * System.Security.Cryptography.SymmetricAlgorithm -&gt; byte[]" Usage="encryptedXml.DecryptData (encryptedData, symAlg)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptData(System.Security.Cryptography.Xml.EncryptedData,System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.DecryptData : System.Security.Cryptography.Xml.EncryptedData * System.Security.Cryptography.SymmetricAlgorithm -&gt; byte[]" Usage="encryptedXml.DecryptData (encryptedData, symAlg)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Security.Cryptography.Xml.EncryptedData" Index="0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="encryptedData">Dane do odszyfrowania.</param>
        <param name="symmetricAlgorithm">Klucz symetryczny używany do odszyfrowywania <paramref name="encryptedData" />.</param>
        <param name="symAlg">To be added.</param>
        <summary>Odszyfrowuje <see langword="&lt;EncryptedData&gt;" /> element przy użyciu określonego algorytmu symetrycznego.</summary>
        <returns>Tablica bajtowa zawierająca nieprzetworzony nieprzeszyfrowany zwykły tekst.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody do odszyfrowania <xref:System.Security.Cryptography.Xml.EncryptedData> elementu przy użyciu klucza symetrycznego. <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A>  
  
 Należy zauważyć, <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A> że Metoda odszyfrowuje tylko Tagi najwyższego poziomu. `<EncryptedData>` W przypadkach `<EncryptedData>` ,gdy`<EncryptedData>` jeden lub więcej tagów został zaszyfrowany i znajduje się w tagach wyższego poziomu, można wywołać metodęoddzielniedlakażdejznich.<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> Zobacz metodę dla przykładu kodu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu klucza symetrycznego. Ten przykład nie zawiera żadnych informacji o kluczu w zaszyfrowanym dokumencie XML.  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość <paramref name="encryptedData" /> parametru to <see langword="null" />.  
  
—lub— 
Wartość <paramref name="symmetricAlgorithm" /> parametru to <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptDocument">
      <MemberSignature Language="C#" Value="public void DecryptDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DecryptDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument" />
      <MemberSignature Language="VB.NET" Value="Public Sub DecryptDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DecryptDocument();" />
      <MemberSignature Language="F#" Value="member this.DecryptDocument : unit -&gt; unit" Usage="encryptedXml.DecryptDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Odszyfrowuje wszystkie <see langword="&lt;EncryptedData&gt;" /> elementy dokumentu XML, które zostały określone podczas inicjowania <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda odszyfrowuje wszystkie `<EncryptedData>` elementy dokumentu XML załadowane podczas inicjalizacji. <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> Po wywołaniu tej metody wszystkie `<EncryptedData>` elementy w dokumencie są zamieniane na wersje w postaci zwykłego tekstu.  
  
 Metoda odszyfrowuje tylko elementy najwyższego `<EncryptedData>`poziomu. <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> Jeśli zachodzi potrzeba odszyfrowania dokumentu, który jest szyfrowany więcej niż raz, należy wywołać <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> metodę wielokrotnie do momentu odszyfrowania `<EncryptedData>` wszystkich elementów.  
  
> [!NOTE]
>  <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> Metoda odszyfrowuje tylko prawidłowe dane XML. Aby odszyfrować dowolne dane, użyj <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A> metody.  
  
 Aby można było używać szyfrowania XML z certyfikatami X. 509, musi być zainstalowany zaawansowany dostawca usług kryptograficznych firmy Microsoft, a certyfikat X. 509 musi korzystać z rozszerzonego dostawcy. Jeśli nie zainstalowano dostawcy usług kryptograficznych firmy Microsoft lub certyfikat X. 509 nie korzysta z rozszerzonego dostawcy, <xref:System.Security.Cryptography.CryptographicException> podczas odszyfrowywania dokumentu XML zostanie wygenerowany komunikat z nieznanym błędem.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu klucza asymetrycznego. Ten przykład umożliwia utworzenie symetrycznego klucza sesji w celu zaszyfrowania dokumentu, a następnie użycie klucza asymetrycznego do osadzenia zaszyfrowanej wersji klucza sesji w dokumencie XML.  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu certyfikatu X. 509. Ten przykład umożliwia utworzenie symetrycznego klucza sesji w celu zaszyfrowania dokumentu, a następnie użycie certyfikatu X. 509 w celu osadzenia zaszyfrowanej wersji klucza sesji w dokumencie XML.  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 Poniższy przykład kodu demonstruje, jak odszyfrować tag wysokiego poziomu `<EncryptedData>` , który zawiera inny zaszyfrowany `<EncryptedData>` tag.  
  
 [!code-csharp[Cryptography.XML.EncryptedDocument.DecryptDocument-SuperEncryption#1](~/samples/snippets/csharp/VS_Snippets_Misc/Cryptography.XML.EncryptedDocument.DecryptDocument-SuperEncryption/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedDocument.DecryptDocument-SuperEncryption#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/Cryptography.XML.EncryptedDocument.DecryptDocument-SuperEncryption/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Nie znaleziono klucza kryptograficznego użytego do odszyfrowania dokumentu.</exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptEncryptedKey">
      <MemberSignature Language="C#" Value="public virtual byte[] DecryptEncryptedKey (System.Security.Cryptography.Xml.EncryptedKey encryptedKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] DecryptEncryptedKey(class System.Security.Cryptography.Xml.EncryptedKey encryptedKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey(System.Security.Cryptography.Xml.EncryptedKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ DecryptEncryptedKey(System::Security::Cryptography::Xml::EncryptedKey ^ encryptedKey);" />
      <MemberSignature Language="F#" Value="abstract member DecryptEncryptedKey : System.Security.Cryptography.Xml.EncryptedKey -&gt; byte[]&#xA;override this.DecryptEncryptedKey : System.Security.Cryptography.Xml.EncryptedKey -&gt; byte[]" Usage="encryptedXml.DecryptEncryptedKey encryptedKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedKey" Type="System.Security.Cryptography.Xml.EncryptedKey" />
      </Parameters>
      <Docs>
        <param name="encryptedKey"><see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> Obiekt, który zawiera klucz do pobrania.</param>
        <summary>Określa klucz reprezentowany przez <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> element.</summary>
        <returns>Tablica bajtów, która zawiera klucz.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda odszyfrowuje zaszyfrowany klucz zawarty `<EncryptedKey>` w elemencie dokumentu XML. <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey%2A>  
  
 Ta metoda cykliczna umożliwia znalezienie klucza reprezentowanego <xref:System.Security.Cryptography.Xml.EncryptedKey> przez obiekt. Należy zauważyć, <xref:System.Security.Cryptography.Xml.EncryptedKey> że obiekt może zawierać <xref:System.Security.Cryptography.Xml.EncryptedKey> inny obiekt, który <xref:System.Security.Cryptography.Xml.KeyInfo> określa jego wartość.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość <paramref name="encryptedKey" /> parametru to <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Wartość <paramref name="encryptedKey" /> parametru nie jest algorytmem zawijania klucza Triple DES lub algorytmem zawijania kluczy Advanced Encryption Standard (AES) (nazywanego również Rijndael).</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DecryptKey">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Odszyfrowuje <see langword="&lt;EncryptedKey&gt;" /> element.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody, aby odszyfrować `<EncryptedKey>` element i pobrać klucz używany do odszyfrowywania tego elementu. <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DecryptKey">
      <MemberSignature Language="C#" Value="public static byte[] DecryptKey (byte[] keyData, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] DecryptKey(unsigned int8[] keyData, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ DecryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C#" Value="public static byte[] DecryptKey (byte[] keyData, System.Security.Cryptography.SymmetricAlgorithm symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] DecryptKey(unsigned int8[] keyData, class System.Security.Cryptography.SymmetricAlgorithm symAlg) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecryptKey (keyData As Byte(), symAlg As SymmetricAlgorithm) As Byte()" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ DecryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecryptKey (keyData As Byte(), symAlg As SymmetricAlgorithm) As Byte()" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member DecryptKey : byte[] * System.Security.Cryptography.SymmetricAlgorithm -&gt; byte[]" Usage="System.Security.Cryptography.Xml.EncryptedXml.DecryptKey (keyData, symAlg)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberSignature Language="F#" Value="static member DecryptKey : byte[] * System.Security.Cryptography.SymmetricAlgorithm -&gt; byte[]" Usage="System.Security.Cryptography.Xml.EncryptedXml.DecryptKey (keyData, symAlg)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Byte[]" Index="0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyData">Tablica bajtów reprezentująca zaszyfrowany <see langword="&lt;EncryptedKey&gt;" /> element.</param>
        <param name="symmetricAlgorithm">Klucz symetryczny używany do odszyfrowywania <paramref name="keyData" />.</param>
        <param name="symAlg">To be added.</param>
        <summary>Odszyfrowuje <see langword="&lt;EncryptedKey&gt;" /> element przy użyciu algorytmu symetrycznego.</summary>
        <returns>Tablica bajtów, która zawiera klucz zwykłego tekstu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda odszyfrowuje zaszyfrowany klucz zawarty `<EncryptedKey>` w elemencie dokumentu XML. <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A> Ta metoda akceptuje wartość `symmetricAlgorithm` parametru, który reprezentuje algorytm Triple DES lub algorytm zawijania klucza AES (nazywany także Rijndael).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość <paramref name="keyData" /> parametru to <see langword="null" />.  
  
—lub— 
Wartość <paramref name="symmetricAlgorithm" /> parametru to <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Wartość <paramref name="symmetricAlgorithm" /> elementu nie jest algorytmem zawijania klucza Triple DES lub algorytmem zawijania kluczy Advanced Encryption Standard (AES) (nazywanego również Rijndael).</exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptKey">
      <MemberSignature Language="C#" Value="public static byte[] DecryptKey (byte[] keyData, System.Security.Cryptography.RSA rsa, bool useOAEP);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] DecryptKey(unsigned int8[] keyData, class System.Security.Cryptography.RSA rsa, bool useOAEP) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ DecryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::RSA ^ rsa, bool useOAEP);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C#" Value="public static byte[] DecryptKey (byte[] keyData, System.Security.Cryptography.RSA rsa, bool fOAEP);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] DecryptKey(unsigned int8[] keyData, class System.Security.Cryptography.RSA rsa, bool fOAEP) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ DecryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::RSA ^ rsa, bool fOAEP);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member DecryptKey : byte[] * System.Security.Cryptography.RSA * bool -&gt; byte[]" Usage="System.Security.Cryptography.Xml.EncryptedXml.DecryptKey (keyData, rsa, fOAEP)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberSignature Language="F#" Value="static member DecryptKey : byte[] * System.Security.Cryptography.RSA * bool -&gt; byte[]" Usage="System.Security.Cryptography.Xml.EncryptedXml.DecryptKey (keyData, rsa, fOAEP)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Byte[]" Index="0" />
        <Parameter Name="rsa" Type="System.Security.Cryptography.RSA" Index="1" />
        <Parameter Name="useOAEP" Type="System.Boolean" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="fOAEP" Type="System.Boolean" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyData">Tablica bajtów reprezentująca zaszyfrowany <see langword="&lt;EncryptedKey&gt;" /> element.</param>
        <param name="rsa">Klucz asymetryczny używany do odszyfrowywania <paramref name="keyData" />.</param>
        <param name="useOAEP">Wartość określająca, czy ma być używane optymalne dopełnienie szyfrowania asymetrycznego (OAEP).</param>
        <param name="fOAEP">To be added.</param>
        <summary>Odszyfrowuje <see langword="&lt;EncryptedKey&gt;" /> element przy użyciu algorytmu asymetrycznego.</summary>
        <returns>Tablica bajtów, która zawiera klucz zwykłego tekstu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda odszyfrowuje zaszyfrowany klucz zawarty `<EncryptedKey>` w elemencie dokumentu XML. <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A> Ta metoda akceptuje wartość `rsa` parametru, który reprezentuje algorytm RSA PKCS # 1 v 1.5 lub algorytm RSA PKCS # 1 Type 2 (nazywane również dopełnieniem OAEP).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość <paramref name="keyData" /> parametru to <see langword="null" />.  
  
—lub— 
Wartość <paramref name="rsa" /> parametru to <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DocumentEvidence">
      <MemberSignature Language="C#" Value="public System.Security.Policy.Evidence DocumentEvidence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.Evidence DocumentEvidence" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence" />
      <MemberSignature Language="VB.NET" Value="Public Property DocumentEvidence As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Policy::Evidence ^ DocumentEvidence { System::Security::Policy::Evidence ^ get(); void set(System::Security::Policy::Evidence ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DocumentEvidence : System.Security.Policy.Evidence with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia dowody <see cref="T:System.Xml.XmlDocument" /> obiektu, z <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> którego został skonstruowany obiekt.</summary>
        <value><see cref="T:System.Security.Policy.Evidence" /> Obiekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli dokument XML użyty do utworzenia <xref:System.Security.Cryptography.Xml.EncryptedXml> obiektu ma wszelkie dowody bezpieczeństwa, należy dodać dowód <xref:System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence%2A> do właściwości. Jeśli ta właściwość nie zostanie ustawiona, żadne skojarzone <xref:System.Security.Cryptography.Xml.CipherReference> obiekty nie zostaną wykorzystane, ponieważ nie zostaną one przyznane wymaganego zestawu uprawnień.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kodowanie używane na potrzeby szyfrowania XML.</summary>
        <value><see cref="T:System.Text.Encoding" /> Obiekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kodowanie UTF-8 jest domyślnym kodowaniem szyfrowania XML. Za pomocą tej właściwości można określić inne typy kodowania z <xref:System.Text.Encoding> klasy, takie jak UTF-16 lub ASCII.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Encrypt">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Szyfruje zewnętrzny kod XML elementu przy użyciu określonego certyfikatu lub klucza w tabeli mapowania kluczy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu klucza symetrycznego.  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CPP/Cryptography.XML.XMLEncMinimalDecrypt.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/VB/sample.vb#1)]  
  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu certyfikatu X. 509. Ten przykład umożliwia utworzenie symetrycznego klucza sesji w celu zaszyfrowania dokumentu, a następnie użycie certyfikatu X. 509 w celu osadzenia zaszyfrowanej wersji klucza sesji w dokumencie XML.  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.EncryptedData Encrypt (System.Xml.XmlElement inputElement, System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.Xml.EncryptedData Encrypt(class System.Xml.XmlElement inputElement, class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.Encrypt(System.Xml.XmlElement,System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="Public Function Encrypt (inputElement As XmlElement, certificate As X509Certificate2) As EncryptedData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::Xml::EncryptedData ^ Encrypt(System::Xml::XmlElement ^ inputElement, System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate);" />
      <MemberSignature Language="F#" Value="member this.Encrypt : System.Xml.XmlElement * System.Security.Cryptography.X509Certificates.X509Certificate2 -&gt; System.Security.Cryptography.Xml.EncryptedData" Usage="encryptedXml.Encrypt (inputElement, certificate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptedData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="inputElement">Element XML do zaszyfrowania.</param>
        <param name="certificate">Certyfikat X. 509 do użycia na potrzeby szyfrowania.</param>
        <summary>Szyfruje zewnętrzny kod XML elementu przy użyciu określonego certyfikatu X. 509.</summary>
        <returns><see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> Element reprezentujący zaszyfrowane dane XML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.EncryptedXml.Encrypt%2A> Metoda jest wygodnym sposobem szyfrowania zewnętrznego kodu XML elementu przy użyciu certyfikatu. Ta metoda generuje klucz sesji 256-bitowy Advanced Encryption Standard (AES) w celu zaszyfrowania elementu XML, a następnie szyfruje i podpisuje klucz AES przy <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> użyciu obiektu. Metoda zwraca wynikowy kod XML <xref:System.Security.Cryptography.Xml.EncryptedData> jako element. <xref:System.Security.Cryptography.Xml.EncryptedXml.Encrypt%2A>  
  
 Jeśli potrzebujesz większej kontroli nad szyfrowaniem, możesz umieścić zaszyfrowane informacje w `<CipherReference>` elemencie lub określić, czy cały element XML lub tylko jego zawartość powinna być szyfrowana, przy <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A> użyciu przeciążeń metody.  
  
 Aby można było używać szyfrowania XML z certyfikatami X. 509, musi być zainstalowany zaawansowany dostawca usług kryptograficznych firmy Microsoft, a certyfikat X. 509 musi korzystać z rozszerzonego dostawcy. Jeśli nie zainstalowano dostawcy usług kryptograficznych firmy Microsoft lub certyfikat X. 509 nie korzysta z rozszerzonego dostawcy, <xref:System.Security.Cryptography.CryptographicException> podczas odszyfrowywania dokumentu XML zostanie wygenerowany komunikat z nieznanym błędem.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu certyfikatu X. 509. Ten przykład umożliwia utworzenie symetrycznego klucza sesji w celu zaszyfrowania dokumentu, a następnie użycie certyfikatu X. 509 w celu osadzenia zaszyfrowanej wersji klucza sesji w dokumencie XML.  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość <paramref name="inputElement" /> parametru to <see langword="null" />.  
  
—lub— 
Wartość <paramref name="certificate" /> parametru to <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">Wartość <paramref name="certificate" /> parametru nie reprezentuje algorytmu klucza RSA.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.EncryptedData Encrypt (System.Xml.XmlElement inputElement, string keyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.Xml.EncryptedData Encrypt(class System.Xml.XmlElement inputElement, string keyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.Encrypt(System.Xml.XmlElement,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Encrypt (inputElement As XmlElement, keyName As String) As EncryptedData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::Xml::EncryptedData ^ Encrypt(System::Xml::XmlElement ^ inputElement, System::String ^ keyName);" />
      <MemberSignature Language="F#" Value="member this.Encrypt : System.Xml.XmlElement * string -&gt; System.Security.Cryptography.Xml.EncryptedData" Usage="encryptedXml.Encrypt (inputElement, keyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptedData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" />
        <Parameter Name="keyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputElement">Element XML do zaszyfrowania.</param>
        <param name="keyName">Nazwa klucza, który można znaleźć w tabeli mapowania kluczy.</param>
        <summary>Szyfruje zewnętrzny kod XML elementu przy użyciu określonego klucza w tabeli mapowania kluczy.</summary>
        <returns><see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> Obiekt, który reprezentuje zaszyfrowane dane XML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wygodnym sposobem szyfrowania zewnętrznego kodu XML elementu przy użyciu nazwy klucza. Jeśli potrzebujesz większej kontroli nad szyfrowaniem, możesz umieścić zaszyfrowane informacje w `<CipherReference>` elemencie lub określić, czy cały element XML lub tylko jego zawartość powinna być szyfrowana, przy <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A> użyciu przeciążeń metody.  
  
 Aby uzyskać listę wszystkich obsługiwanych algorytmów, zobacz listę stałych pól skojarzonych z <xref:System.Security.Cryptography.Xml.EncryptedXml> klasą.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu klucza symetrycznego.  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CPP/Cryptography.XML.XMLEncMinimalDecrypt.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość <paramref name="inputElement" /> parametru to <see langword="null" />.  
  
—lub— 
Wartość <paramref name="keyName" /> parametru to <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Wartość <paramref name="keyName" /> parametru nie jest zgodna z zarejestrowanej pary nazw kluczy.  
  
—lub— 
Klucz kryptograficzny opisany przez <paramref name="keyName" /> parametr nie jest obsługiwany.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EncryptData">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Szyfruje dane XML przy użyciu algorytmu symetrycznego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu klucza symetrycznego. Ten przykład nie zawiera żadnych informacji o kluczu w zaszyfrowanym dokumencie XML.  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu klucza symetrycznego. Ten przykład osadza nazwę klucza w zaszyfrowanym dokumencie XML, którego Metoda odszyfrowuje używa do znajdowania odpowiedniego klucza odszyfrowywania.  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu klucza asymetrycznego. Ten przykład umożliwia utworzenie symetrycznego klucza sesji w celu zaszyfrowania dokumentu, a następnie użycie klucza asymetrycznego do osadzenia zaszyfrowanej wersji klucza sesji w dokumencie XML.  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="EncryptData">
      <MemberSignature Language="C#" Value="public byte[] EncryptData (byte[] plaintext, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EncryptData(unsigned int8[] plaintext, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EncryptData(cli::array &lt;System::Byte&gt; ^ plaintext, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C#" Value="public byte[] EncryptData (byte[] plainText, System.Security.Cryptography.SymmetricAlgorithm symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EncryptData(unsigned int8[] plainText, class System.Security.Cryptography.SymmetricAlgorithm symAlg) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function EncryptData (plainText As Byte(), symAlg As SymmetricAlgorithm) As Byte()" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EncryptData(cli::array &lt;System::Byte&gt; ^ plainText, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function EncryptData (plainText As Byte(), symAlg As SymmetricAlgorithm) As Byte()" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptData(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.EncryptData : byte[] * System.Security.Cryptography.SymmetricAlgorithm -&gt; byte[]" Usage="encryptedXml.EncryptData (plainText, symAlg)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptData(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.EncryptData : byte[] * System.Security.Cryptography.SymmetricAlgorithm -&gt; byte[]" Usage="encryptedXml.EncryptData (plainText, symAlg)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="plaintext" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="plainText" Type="System.Byte[]" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="plaintext">Dane do zaszyfrowania.</param>
        <param name="plainText">To be added.</param>
        <param name="symmetricAlgorithm">Algorytm symetryczny, który ma być używany do szyfrowania.</param>
        <param name="symAlg">To be added.</param>
        <summary>Szyfruje dane w określonej tablicy bajtowej przy użyciu określonego algorytmu symetrycznego.</summary>
        <returns>Tablica bajtów zaszyfrowanych danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwracana tablica bajtów może być umieszczona w `<CipherValue>` elemencie. Ta metoda zakłada, że dane określone w `plaintext` parametrze są tablicą bajtową, która zawiera dane XML.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu klucza symetrycznego. Ten przykład nie zawiera żadnych informacji o kluczu w zaszyfrowanym dokumencie XML.  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu klucza symetrycznego. Ten przykład osadza nazwę klucza w zaszyfrowanym dokumencie XML, którego Metoda odszyfrowuje używa do znajdowania odpowiedniego klucza odszyfrowywania.  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu klucza asymetrycznego. Ten przykład umożliwia utworzenie symetrycznego klucza sesji w celu zaszyfrowania dokumentu, a następnie użycie klucza asymetrycznego do osadzenia zaszyfrowanej wersji klucza sesji w dokumencie XML.  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość <paramref name="plaintext" /> parametru to <see langword="null" />.  
  
—lub— 
Wartość <paramref name="symmetricAlgorithm" /> parametru to <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Nie można zaszyfrować danych przy użyciu określonych parametrów.</exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptData">
      <MemberSignature Language="C#" Value="public byte[] EncryptData (System.Xml.XmlElement inputElement, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm, bool content);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EncryptData(class System.Xml.XmlElement inputElement, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm, bool content) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EncryptData(System::Xml::XmlElement ^ inputElement, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm, bool content);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C#" Value="public byte[] EncryptData (System.Xml.XmlElement inputElement, System.Security.Cryptography.SymmetricAlgorithm symAlg, bool content);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EncryptData(class System.Xml.XmlElement inputElement, class System.Security.Cryptography.SymmetricAlgorithm symAlg, bool content) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function EncryptData (inputElement As XmlElement, symAlg As SymmetricAlgorithm, content As Boolean) As Byte()" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EncryptData(System::Xml::XmlElement ^ inputElement, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg, bool content);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function EncryptData (inputElement As XmlElement, symAlg As SymmetricAlgorithm, content As Boolean) As Byte()" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptData(System.Xml.XmlElement,System.Security.Cryptography.SymmetricAlgorithm,System.Boolean)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.EncryptData : System.Xml.XmlElement * System.Security.Cryptography.SymmetricAlgorithm * bool -&gt; byte[]" Usage="encryptedXml.EncryptData (inputElement, symAlg, content)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptData(System.Xml.XmlElement,System.Security.Cryptography.SymmetricAlgorithm,System.Boolean)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.EncryptData : System.Xml.XmlElement * System.Security.Cryptography.SymmetricAlgorithm * bool -&gt; byte[]" Usage="encryptedXml.EncryptData (inputElement, symAlg, content)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" Index="0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="content" Type="System.Boolean" Index="2" />
      </Parameters>
      <Docs>
        <param name="inputElement">Element lub jego zawartość do zaszyfrowania.</param>
        <param name="symmetricAlgorithm">Algorytm symetryczny, który ma być używany do szyfrowania.</param>
        <param name="symAlg">To be added.</param>
        <param name="content"><see langword="true" />Aby zaszyfrować tylko zawartość elementu; <see langword="false" /> aby zaszyfrować cały element.</param>
        <summary>Szyfruje określony element lub jego zawartość przy użyciu określonego algorytmu symetrycznego.</summary>
        <returns>Tablica bajtowa zawierająca zaszyfrowane dane.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwrócone dane tablicy bajtów to wartość `<CipherValue>` elementu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu klucza symetrycznego. Ten przykład nie zawiera żadnych informacji o kluczu w zaszyfrowanym dokumencie XML.  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość <paramref name="inputElement" /> parametru to <see langword="null" />.  
  
—lub— 
Wartość <paramref name="symmetricAlgorithm" /> parametru to <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EncryptKey">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Szyfruje klucz, którego odbiorca używa do odszyfrowania <see langword="&lt;EncryptedData&gt;" /> elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody, aby zaszyfrować klucz używany przez odbiorcę do `<EncryptedData>` odszyfrowywania elementu. <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A> Ta metoda umieszcza zaszyfrowany klucz w obrębie `<EncryptedKey>` elementu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu klucza asymetrycznego. Ten przykład umożliwia utworzenie symetrycznego klucza sesji w celu zaszyfrowania dokumentu, a następnie użycie klucza asymetrycznego do osadzenia zaszyfrowanej wersji klucza sesji w dokumencie XML.  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="EncryptKey">
      <MemberSignature Language="C#" Value="public static byte[] EncryptKey (byte[] keyData, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncryptKey(unsigned int8[] keyData, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ EncryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C#" Value="public static byte[] EncryptKey (byte[] keyData, System.Security.Cryptography.SymmetricAlgorithm symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncryptKey(unsigned int8[] keyData, class System.Security.Cryptography.SymmetricAlgorithm symAlg) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncryptKey (keyData As Byte(), symAlg As SymmetricAlgorithm) As Byte()" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ EncryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncryptKey (keyData As Byte(), symAlg As SymmetricAlgorithm) As Byte()" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member EncryptKey : byte[] * System.Security.Cryptography.SymmetricAlgorithm -&gt; byte[]" Usage="System.Security.Cryptography.Xml.EncryptedXml.EncryptKey (keyData, symAlg)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberSignature Language="F#" Value="static member EncryptKey : byte[] * System.Security.Cryptography.SymmetricAlgorithm -&gt; byte[]" Usage="System.Security.Cryptography.Xml.EncryptedXml.EncryptKey (keyData, symAlg)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Byte[]" Index="0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyData">Klucz do zaszyfrowania.</param>
        <param name="symmetricAlgorithm">Klucz symetryczny używany do szyfrowania <paramref name="keyData" />.</param>
        <param name="symAlg">To be added.</param>
        <summary>Szyfruje klucz przy użyciu algorytmu symetrycznego, który jest używany przez odbiorcę <see langword="&lt;EncryptedData&gt;" /> do odszyfrowywania elementu.</summary>
        <returns>Tablica bajtów reprezentująca zaszyfrowaną wartość <paramref name="keyData" /> parametru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody, aby zaszyfrować klucz używany przez odbiorcę do `<EncryptedData>` odszyfrowywania elementu. <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A> Ta metoda akceptuje wartość `symmetricAlgorithm` parametru, który reprezentuje algorytm Triple DES lub algorytm zawijania klucza AES (nazywany także Rijndael).  
  
 Należy zauważyć, że ta metoda nie umieszcza automatycznie zaszyfrowanego klucza `<EncryptedKey>` w obrębie elementu. Należy ręcznie utworzyć `<EncryptedKey>` element w dokumencie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość <paramref name="keyData" /> parametru to <see langword="null" />.  
  
—lub— 
Wartość <paramref name="symmetricAlgorithm" /> parametru to <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Wartość <paramref name="symmetricAlgorithm" /> parametru nie jest algorytmem zawijania klucza Triple DES lub algorytmem zawijania kluczy Advanced Encryption Standard (AES) (nazywanego również Rijndael).</exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptKey">
      <MemberSignature Language="C#" Value="public static byte[] EncryptKey (byte[] keyData, System.Security.Cryptography.RSA rsa, bool useOAEP);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncryptKey(unsigned int8[] keyData, class System.Security.Cryptography.RSA rsa, bool useOAEP) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ EncryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::RSA ^ rsa, bool useOAEP);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C#" Value="public static byte[] EncryptKey (byte[] keyData, System.Security.Cryptography.RSA rsa, bool fOAEP);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncryptKey(unsigned int8[] keyData, class System.Security.Cryptography.RSA rsa, bool fOAEP) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ EncryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::RSA ^ rsa, bool fOAEP);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member EncryptKey : byte[] * System.Security.Cryptography.RSA * bool -&gt; byte[]" Usage="System.Security.Cryptography.Xml.EncryptedXml.EncryptKey (keyData, rsa, fOAEP)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberSignature Language="F#" Value="static member EncryptKey : byte[] * System.Security.Cryptography.RSA * bool -&gt; byte[]" Usage="System.Security.Cryptography.Xml.EncryptedXml.EncryptKey (keyData, rsa, fOAEP)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Byte[]" Index="0" />
        <Parameter Name="rsa" Type="System.Security.Cryptography.RSA" Index="1" />
        <Parameter Name="useOAEP" Type="System.Boolean" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="fOAEP" Type="System.Boolean" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyData">Klucz do zaszyfrowania.</param>
        <param name="rsa">Klucz asymetryczny używany do szyfrowania <paramref name="keyData" />.</param>
        <param name="useOAEP">Wartość określająca, czy ma być używane optymalne dopełnienie szyfrowania asymetrycznego (OAEP).</param>
        <param name="fOAEP">To be added.</param>
        <summary>Szyfruje klucz, którego odbiorca używa do odszyfrowania <see langword="&lt;EncryptedData&gt;" /> elementu.</summary>
        <returns>Tablica bajtów reprezentująca zaszyfrowaną wartość <paramref name="keyData" /> parametru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody, aby zaszyfrować klucz używany przez odbiorcę do `<EncryptedData>` odszyfrowywania elementu. <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A> Ta metoda akceptuje wartość `rsa` , która reprezentuje algorytm RSA PKCS # 1 v 1.5 lub algorytm RSA PKCS # 1 Type 2 (zwane również OAEP).  
  
 Należy zauważyć, że ta metoda nie umieszcza automatycznie zaszyfrowanego klucza `<EncryptedKey>` w obrębie elementu. Należy ręcznie utworzyć `<EncryptedKey>` element w dokumencie.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu klucza asymetrycznego. Ten przykład umożliwia utworzenie symetrycznego klucza sesji w celu zaszyfrowania dokumentu, a następnie użycie klucza asymetrycznego do osadzenia zaszyfrowanej wersji klucza sesji w dokumencie XML.  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość <paramref name="keyData" /> parametru to <see langword="null" />.  
  
—lub— 
Wartość <paramref name="rsa" /> parametru to <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecryptionIV">
      <MemberSignature Language="C#" Value="public virtual byte[] GetDecryptionIV (System.Security.Cryptography.Xml.EncryptedData encryptedData, string symmetricAlgorithmUri);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetDecryptionIV(class System.Security.Cryptography.Xml.EncryptedData encryptedData, string symmetricAlgorithmUri) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetDecryptionIV(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::String ^ symmetricAlgorithmUri);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C#" Value="public virtual byte[] GetDecryptionIV (System.Security.Cryptography.Xml.EncryptedData encryptedData, string symAlgUri);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetDecryptionIV(class System.Security.Cryptography.Xml.EncryptedData encryptedData, string symAlgUri) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetDecryptionIV(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::String ^ symAlgUri);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionIV(System.Security.Cryptography.Xml.EncryptedData,System.String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetDecryptionIV : System.Security.Cryptography.Xml.EncryptedData * string -&gt; byte[]&#xA;override this.GetDecryptionIV : System.Security.Cryptography.Xml.EncryptedData * string -&gt; byte[]" Usage="encryptedXml.GetDecryptionIV (encryptedData, symAlgUri)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionIV(System.Security.Cryptography.Xml.EncryptedData,System.String)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetDecryptionIV : System.Security.Cryptography.Xml.EncryptedData * string -&gt; byte[]&#xA;override this.GetDecryptionIV : System.Security.Cryptography.Xml.EncryptedData * string -&gt; byte[]" Usage="encryptedXml.GetDecryptionIV (encryptedData, symAlgUri)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Security.Cryptography.Xml.EncryptedData" Index="0" />
        <Parameter Name="symmetricAlgorithmUri" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="symAlgUri" Type="System.String" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="encryptedData"><see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> Obiekt, który zawiera wektor inicjujący (IV) do pobrania.</param>
        <param name="symmetricAlgorithmUri">Uniform Resource Identifier (URI) opisujący algorytm kryptograficzny skojarzony z <paramref name="encryptedData" /> wartością.</param>
        <param name="symAlgUri">To be added.</param>
        <summary>Pobiera wektor inicjalizacji odszyfrowywania (IV) z <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> obiektu.</summary>
        <returns>Tablica bajtów, która zawiera wektor inicjacji inicjującej (IV).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.EncryptedData> Obiekt, ta metoda pobiera wektor inicjowania odszyfrowywania (IV). Zachowanie domyślne pobiera IV jako pierwsze bajty <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> tablicy bajtów.  
  
 Aby uzyskać listę wartości Uniform Resource Identifier (URI) obsługiwanych przez `symmetricAlgorithmUri` parametr, zobacz listę pól stałych skojarzonych <xref:System.Security.Cryptography.Xml.EncryptedXml> z klasą.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość <paramref name="encryptedData" /> parametru to <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Wartość <paramref name="encryptedData" /> parametru<see cref="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" /> ma właściwość, która ma wartość null.  
  
—lub— 
Wartość <paramref name="symmetricAlgorithmUrisymAlgUri" /> parametru nie jest obsługiwanym algorytmem.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecryptionKey">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.SymmetricAlgorithm GetDecryptionKey (System.Security.Cryptography.Xml.EncryptedData encryptedData, string symmetricAlgorithmUri);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.SymmetricAlgorithm GetDecryptionKey(class System.Security.Cryptography.Xml.EncryptedData encryptedData, string symmetricAlgorithmUri) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Cryptography::SymmetricAlgorithm ^ GetDecryptionKey(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::String ^ symmetricAlgorithmUri);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.SymmetricAlgorithm GetDecryptionKey (System.Security.Cryptography.Xml.EncryptedData encryptedData, string symAlgUri);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.SymmetricAlgorithm GetDecryptionKey(class System.Security.Cryptography.Xml.EncryptedData encryptedData, string symAlgUri) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Cryptography::SymmetricAlgorithm ^ GetDecryptionKey(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::String ^ symAlgUri);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey(System.Security.Cryptography.Xml.EncryptedData,System.String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetDecryptionKey : System.Security.Cryptography.Xml.EncryptedData * string -&gt; System.Security.Cryptography.SymmetricAlgorithm&#xA;override this.GetDecryptionKey : System.Security.Cryptography.Xml.EncryptedData * string -&gt; System.Security.Cryptography.SymmetricAlgorithm" Usage="encryptedXml.GetDecryptionKey (encryptedData, symAlgUri)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey(System.Security.Cryptography.Xml.EncryptedData,System.String)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetDecryptionKey : System.Security.Cryptography.Xml.EncryptedData * string -&gt; System.Security.Cryptography.SymmetricAlgorithm&#xA;override this.GetDecryptionKey : System.Security.Cryptography.Xml.EncryptedData * string -&gt; System.Security.Cryptography.SymmetricAlgorithm" Usage="encryptedXml.GetDecryptionKey (encryptedData, symAlgUri)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.SymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Security.Cryptography.Xml.EncryptedData" Index="0" />
        <Parameter Name="symmetricAlgorithmUri" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="symAlgUri" Type="System.String" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="encryptedData"><see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> Obiekt, który zawiera klucz odszyfrowujący do pobrania.</param>
        <param name="symmetricAlgorithmUri">Rozmiar klucza odszyfrowywania do pobrania.</param>
        <param name="symAlgUri">To be added.</param>
        <summary>Pobiera klucz odszyfrowujący z określonego <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> obiektu.</summary>
        <returns><see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> Obiekt skojarzony z kluczem odszyfrowywania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.EncryptedData> Mając obiekt, ta metoda szuka klucza odszyfrowywania, którego można użyć do pobrania danych w postaci zwykłego tekstu. Jeśli określono nazwę klucza, metoda szuka algorytmu symetrycznego lub algorytmu asymetrycznego, który jest skojarzony z nazwą klucza zdefiniowaną w mapowaniu nazwy klucza. W przeciwnym razie, jeśli określono metodę pobierania <xref:System.Security.Cryptography.Xml.EncryptedKey> lub obiekt, Metoda <xref:System.Security.Cryptography.Xml.EncryptedKey> ładuje obiekt i wywołuje <xref:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey%2A> metodę.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość <paramref name="encryptedData" /> parametru to <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Parametr EncryptedData ma <see cref="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" /> właściwość, która ma wartość null.  
  
—lub— 
Nie można pobrać zaszyfrowanego klucza przy użyciu określonych parametrów.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIdElement">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement GetIdElement (System.Xml.XmlDocument document, string idValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlElement GetIdElement(class System.Xml.XmlDocument document, string idValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.GetIdElement(System.Xml.XmlDocument,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIdElement (document As XmlDocument, idValue As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlElement ^ GetIdElement(System::Xml::XmlDocument ^ document, System::String ^ idValue);" />
      <MemberSignature Language="F#" Value="abstract member GetIdElement : System.Xml.XmlDocument * string -&gt; System.Xml.XmlElement&#xA;override this.GetIdElement : System.Xml.XmlDocument * string -&gt; System.Xml.XmlElement" Usage="encryptedXml.GetIdElement (document, idValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.XmlDocument" />
        <Parameter Name="idValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="document"><see cref="T:System.Xml.XmlDocument" /> Obiekt, który zawiera element o wartości identyfikatora.</param>
        <param name="idValue">Ciąg, który reprezentuje wartość identyfikatora.</param>
        <summary>Określa sposób rozpoznawania wewnętrznych odwołań Uniform Resource Identifier (URI).</summary>
        <returns><see cref="T:System.Xml.XmlElement" /> Obiekt, który zawiera identyfikator wskazujący sposób rozwiązywania wewnętrznych identyfikatorów URI (Uniform Resource Identifier).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda <xref:System.Security.Cryptography.Xml.EncryptedXml.GetIdElement%2A> określa, jak rozpoznać wewnętrzne Uniform Resource Identifier (URI). Szuka elementów z określoną wartością lub dla elementów z atrybutem identyfikatora, który ma określoną wartość.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CipherMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.CipherMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As CipherMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CipherMode Mode { System::Security::Cryptography::CipherMode get(); void set(System::Security::Cryptography::CipherMode value); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.Security.Cryptography.CipherMode with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tryb szyfru używany na potrzeby szyfrowania XML.</summary>
        <value>Jedna z <see cref="T:System.Security.Cryptography.CipherMode" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tryb łańcucha blokowego szyfrowania (CBC) jest domyślnym trybem szyfrowania dla szyfrowania XML. Za pomocą tej właściwości można określić inne tryby <xref:System.Security.Cryptography.CipherMode> szyfru wyliczenia, takie jak tryb CFB (szyfrowanie opinii).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.PaddingMode Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.PaddingMode Padding" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As PaddingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::PaddingMode Padding { System::Security::Cryptography::PaddingMode get(); void set(System::Security::Cryptography::PaddingMode value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Security.Cryptography.PaddingMode with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.PaddingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tryb uzupełniania używany na potrzeby szyfrowania XML.</summary>
        <value>Jedna z <see cref="T:System.Security.Cryptography.PaddingMode" /> wartości, która określa typ uzupełnienia używany do szyfrowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uzupełnienie ISO-10126 jest domyślnym trybem uzupełniania dla szyfrowania XML. Za pomocą tej właściwości można określić inne tryby <xref:System.Security.Cryptography.PaddingMode> uzupełniania wyliczania, takie jak ANSI x 9.23 lub PKCS # 5.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Recipient">
      <MemberSignature Language="C#" Value="public string Recipient { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Recipient" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Recipient" />
      <MemberSignature Language="VB.NET" Value="Public Property Recipient As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Recipient { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Recipient : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.Recipient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia odbiorcę informacji o zaszyfrowanym kluczu.</summary>
        <value>Odbiorca informacji o zaszyfrowanym kluczu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz uzyskać dostęp do <xref:System.Security.Cryptography.Xml.EncryptedXml> obiektu, do którego odwołuje się nazwa klucza, <xref:System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName%2A> sprawdzając właściwość.  
  
 Użyj właściwości, aby zidentyfikować element, który bieżący odbiorca może odszyfrować w celu pobrania klucza odszyfrowywania. <xref:System.Security.Cryptography.Xml.EncryptedXml> <xref:System.Security.Cryptography.Xml.EncryptedXml.Recipient%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceData">
      <MemberSignature Language="C#" Value="public void ReplaceData (System.Xml.XmlElement inputElement, byte[] decryptedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReplaceData(class System.Xml.XmlElement inputElement, unsigned int8[] decryptedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.ReplaceData(System.Xml.XmlElement,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReplaceData (inputElement As XmlElement, decryptedData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReplaceData(System::Xml::XmlElement ^ inputElement, cli::array &lt;System::Byte&gt; ^ decryptedData);" />
      <MemberSignature Language="F#" Value="member this.ReplaceData : System.Xml.XmlElement * byte[] -&gt; unit" Usage="encryptedXml.ReplaceData (inputElement, decryptedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" />
        <Parameter Name="decryptedData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="inputElement">Element <see langword="&lt;EncryptedData&gt;" /> , który ma zostać zamieniony.</param>
        <param name="decryptedData">Odszyfrowane dane, które mają <paramref name="inputElement" /> zostać zamienione.</param>
        <summary><see langword="&lt;EncryptedData&gt;" /> Zamienia element na określoną odszyfrowany sekwencji bajtów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda zastępuje element wartością`decryptedData`parametru. `<EncryptedData>` <xref:System.Security.Cryptography.Xml.EncryptedXml.ReplaceData%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu klucza symetrycznego. Ten przykład nie zawiera żadnych informacji o kluczu w zaszyfrowanym dokumencie XML.  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość <paramref name="inputElement" /> parametru to <see langword="null" />.  
  
—lub— 
Wartość <paramref name="decryptedData" /> parametru to <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReplaceElement">
      <MemberSignature Language="C#" Value="public static void ReplaceElement (System.Xml.XmlElement inputElement, System.Security.Cryptography.Xml.EncryptedData encryptedData, bool content);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReplaceElement(class System.Xml.XmlElement inputElement, class System.Security.Cryptography.Xml.EncryptedData encryptedData, bool content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement(System.Xml.XmlElement,System.Security.Cryptography.Xml.EncryptedData,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReplaceElement(System::Xml::XmlElement ^ inputElement, System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, bool content);" />
      <MemberSignature Language="F#" Value="static member ReplaceElement : System.Xml.XmlElement * System.Security.Cryptography.Xml.EncryptedData * bool -&gt; unit" Usage="System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement (inputElement, encryptedData, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" />
        <Parameter Name="encryptedData" Type="System.Security.Cryptography.Xml.EncryptedData" />
        <Parameter Name="content" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inputElement">Element, który ma zostać zamieniony <see langword="&lt;EncryptedData&gt;" /> na element.</param>
        <param name="encryptedData">Obiekt, z którym <paramref name="inputElement" /> ma zostać zastąpiony parametr. <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /></param>
        <param name="content"><see langword="true" />Aby zastąpić tylko zawartość elementu; <see langword="false" /> w celu zamienienia całego elementu.</param>
        <summary>Zastępuje określony element określonym <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> obiektem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda zastępuje parametr wartością określoną przez `encryptedData` parametr. `inputElement` <xref:System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu klucza symetrycznego. Ten przykład nie zawiera żadnych informacji o kluczu w zaszyfrowanym dokumencie XML.  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość <paramref name="inputElement" /> parametru to <see langword="null" />.  
  
—lub— 
Wartość <paramref name="encryptedData" /> parametru to <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver Resolver { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver Resolver" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Resolver" />
      <MemberSignature Language="VB.NET" Value="Public Property Resolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ Resolver { System::Xml::XmlResolver ^ get(); void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Resolver : System.Xml.XmlResolver with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.Resolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Xml.XmlResolver" /> obiekt używany przez Document Object Model (dom) do rozpoznawania zewnętrznych odwołań XML.</summary>
        <value><see cref="T:System.Xml.XmlResolver" /> Obiekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość zawiera <xref:System.Xml.XmlResolver> obiekt służący do rozpoznawania zewnętrznych zasobów XML, takich jak jednostki, definicje typu dokumentu (DTD) lub schematy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDSigSearchDepth">
      <MemberSignature Language="C#" Value="public int XmlDSigSearchDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 XmlDSigSearchDepth" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.XmlDSigSearchDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlDSigSearchDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int XmlDSigSearchDepth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.XmlDSigSearchDepth : int with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlDSigSearchDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia głębokość rekursji podpisu cyfrowego XML, aby zapobiec nieskończonej rekursji i przepełnieniu stosu. Taka sytuacja może wystąpić, jeśli kod XML podpisu cyfrowego zawiera identyfikator URI, który następnie wskazuje na oryginalny kod XML.</summary>
        <value>Zwraca <see cref="T:System.Int32" />wartość.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES128KeyWrapUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncAES128KeyWrapUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES128KeyWrapUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES128KeyWrapUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES128KeyWrapUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncAES128KeyWrapUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier przestrzeni nazw (URI) dla algorytmu zawijania kluczy 128-bitowego Advanced Encryption Standard (AES) (znanego również jako algorytm zawijania klucza Rijndael). To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl> pola to `http://www.w3.org/(2001/04/xmlenc#kw-aes128)`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES128Url">
      <MemberSignature Language="C#" Value="public const string XmlEncAES128Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES128Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES128Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES128Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncAES128Url : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier przestrzeni nazw (URI) dla algorytmu 128-bitowego Advanced Encryption Standard (AES) (znanego również jako algorytm Rijndael). To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url> pola to `http://www.w3.org/(2001/04/xmlenc#aes128-cbc)`.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu klucza symetrycznego. Ten przykład nie zawiera żadnych informacji o kluczu w zaszyfrowanym dokumencie XML.  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES192KeyWrapUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncAES192KeyWrapUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES192KeyWrapUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES192KeyWrapUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES192KeyWrapUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncAES192KeyWrapUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier przestrzeni nazw (URI) dla algorytmu zawijania kluczy 192-bitowego Advanced Encryption Standard (AES) (znanego również jako algorytm zawijania klucza Rijndael). To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl> pola to `http://www.w3.org/(2001/04/xmlenc#kw-aes192)`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES192Url">
      <MemberSignature Language="C#" Value="public const string XmlEncAES192Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES192Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES192Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES192Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncAES192Url : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier przestrzeni nazw (URI) dla algorytmu 192-bitowego Advanced Encryption Standard (AES) (znanego również jako algorytm Rijndael). To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url> pola to `http://www.w3.org/(2001/04/xmlenc#aes192-cbc)`.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu klucza symetrycznego. Ten przykład nie zawiera żadnych informacji o kluczu w zaszyfrowanym dokumencie XML.  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES256KeyWrapUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncAES256KeyWrapUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES256KeyWrapUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES256KeyWrapUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES256KeyWrapUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncAES256KeyWrapUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier przestrzeni nazw (URI) dla algorytmu zawijania kluczy 256-bitowego Advanced Encryption Standard (AES) (znanego również jako algorytm zawijania klucza Rijndael). To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl> pola to `http://www.w3.org/(2001/04/xmlenc#kw-aes256)`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES256Url">
      <MemberSignature Language="C#" Value="public const string XmlEncAES256Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES256Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES256Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES256Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncAES256Url : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier przestrzeni nazw (URI) dla algorytmu 256-bitowego Advanced Encryption Standard (AES) (znanego również jako algorytm Rijndael). To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url> pola to `http://www.w3.org/(2001/04/xmlenc#aes256-cbc)`.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu klucza symetrycznego. Ten przykład nie zawiera żadnych informacji o kluczu w zaszyfrowanym dokumencie XML.  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncDESUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncDESUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncDESUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncDESUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncDESUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncDESUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier przestrzeni nazw (URI) algorytmu Digital Encryption Standard (DES). To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl> pola to `http://www.w3.org/(2001/04/xmlenc#des-cbc)`.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu klucza symetrycznego. Ten przykład nie zawiera żadnych informacji o kluczu w zaszyfrowanym dokumencie XML.  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncElementContentUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncElementContentUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncElementContentUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncElementContentUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncElementContentUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncElementContentUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier przestrzeni nazw (URI) dla zawartości elementu szyfrowania XML. To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl> pola to `http://www.w3.org/(2001/04/xmlenc#Content)`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncElementUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncElementUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncElementUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncElementUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncElementUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncElementUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier przestrzeni nazw (URI) dla elementu szyfrowania XML. To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl> pola to `http://www.w3.org/(2001/04/xmlenc#Element)`.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu klucza symetrycznego. Ten przykład nie zawiera żadnych informacji o kluczu w zaszyfrowanym dokumencie XML.  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncEncryptedKeyUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncEncryptedKeyUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncEncryptedKeyUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncEncryptedKeyUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncEncryptedKeyUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncEncryptedKeyUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier przestrzeni nazw (URI) dla elementu szyfrowania <see langword="&lt;EncryptedKey&gt;" /> XML. To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl> pola to `http://www.w3.org/(2001/04/xmlenc#EncryptedKey)`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncNamespaceUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncNamespaceUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncNamespaceUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncNamespaceUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncNamespaceUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncNamespaceUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier przestrzeni nazw (URI) na potrzeby składni i przetwarzania szyfrowania XML. To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl> pola to `http://www.w3.org/(2001/04/xmlenc#)`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncRSA15Url">
      <MemberSignature Language="C#" Value="public const string XmlEncRSA15Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncRSA15Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncRSA15Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncRSA15Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncRSA15Url : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier przestrzeni nazw (URI) dla algorytmu RSA (Public Key Cryptography standard) w wersji 1,5. To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url> pola to `http://www.w3.org/(2001/04/xmlenc#rsa-1_5)`.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu klucza asymetrycznego. Ten przykład umożliwia utworzenie symetrycznego klucza sesji w celu zaszyfrowania dokumentu, a następnie użycie klucza asymetrycznego do osadzenia zaszyfrowanej wersji klucza sesji w dokumencie XML.  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncRSAOAEPUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncRSAOAEPUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncRSAOAEPUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncRSAOAEPUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncRSAOAEPUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncRSAOAEPUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier przestrzeni nazw (URI) dla algorytmu szyfrowania RSA (OAEP). To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> pola to `http://www.w3.org/(2001/04/xmlenc#rsa-oaep-mgf1p)`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncSHA256Url">
      <MemberSignature Language="C#" Value="public const string XmlEncSHA256Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncSHA256Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncSHA256Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncSHA256Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncSHA256Url : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier przestrzeni nazw (URI) dla algorytmu SHA-256. To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url> pola to `http://www.w3.org/(2001/04/xmlenc#sha256)`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncSHA512Url">
      <MemberSignature Language="C#" Value="public const string XmlEncSHA512Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncSHA512Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncSHA512Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncSHA512Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncSHA512Url : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier przestrzeni nazw (URI) dla algorytmu SHA-512. To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url> pola to `http://www.w3.org/(2001/04/xmlenc#sha512)`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncTripleDESKeyWrapUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncTripleDESKeyWrapUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncTripleDESKeyWrapUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncTripleDESKeyWrapUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncTripleDESKeyWrapUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncTripleDESKeyWrapUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier przestrzeni nazw (URI) dla algorytmu zawijania kluczy TRIPLEDES. To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl> pola to `http://www.w3.org/(2001/04/xmlenc#kw-tripledes)`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncTripleDESUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncTripleDESUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncTripleDESUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncTripleDESUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncTripleDESUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncTripleDESUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje Uniform Resource Identifier przestrzeni nazw (URI) dla algorytmu Triple DES. To pole jest stałe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl> pola to `http://www.w3.org/(2001/04/xmlenc#tripledes-cbc)`.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób szyfrowania dokumentu XML przy użyciu klucza symetrycznego. Ten przykład nie zawiera żadnych informacji o kluczu w zaszyfrowanym dokumencie XML.  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
