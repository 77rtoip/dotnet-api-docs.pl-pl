<Type Name="ReliableSession" FullName="System.ServiceModel.ReliableSession">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9e767c7463e81ab7a2e1857936992be0009ca9b7" />
    <Meta Name="ms.sourcegitcommit" Value="01f28caab7b3f23878dd07b402a8dd48b9478c8c" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="39140676" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ReliableSession" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ReliableSession extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ReliableSession" />
  <TypeSignature Language="VB.NET" Value="Public Class ReliableSession" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReliableSession" />
  <TypeSignature Language="F#" Value="type ReliableSession = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zapewnia wygodny dostęp do właściwości elementu powiązania niezawodnej sesji, które są dostępne, gdy używany jest jeden powiązania dostarczane przez system.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwości zawarte w <xref:System.ServiceModel.ReliableSession> klasy są podzbiorem wartości zawarte w <xref:System.ServiceModel.Channels.ReliableSessionBindingElement> , które są dostępne ze wstępnie zdefiniowanych powiązań. Ten podzestaw składa się z <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A> i <xref:System.ServiceModel.ReliableSession.Ordered%2A> właściwości. <xref:System.ServiceModel.ReliableSession> Klasa przywołuje same obiekty, co robi <xref:System.ServiceModel.Channels.ReliableSessionBindingElement>, więc zmiana wartości jednej zmiany wartości z drugiej strony zbyt. Ta klasa zbiera te dwie właściwości elementu wiązań niezawodnej sesji ze sobą w celu lepszego odnajdywania.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak utworzyć nowej sesji niezawodnych i dostępu i zmiany wartości właściwości tej sesji. <xref:System.ServiceModel.ReliableSession> Klasy pozwala na zapis:  
  
 [!code-csharp[UEReliableSession#1](~/samples/snippets/csharp/VS_Snippets_CFX/uereliablesession/cs/program.cs#1)]
 [!code-vb[UEReliableSession#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/uereliablesession/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.ReliableSession" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReliableSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ReliableSession.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReliableSession();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.ReliableSession" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReliableSession (System.ServiceModel.Channels.ReliableSessionBindingElement reliableSessionBindingElement);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.ReliableSessionBindingElement reliableSessionBindingElement) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReliableSession(System::ServiceModel::Channels::ReliableSessionBindingElement ^ reliableSessionBindingElement);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public ReliableSession (System.ServiceModel.Channels.ReliableSessionBindingElement binding);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.ReliableSessionBindingElement binding) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ReliableSession.#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)" FrameworkAlternate="xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinios-10.8;xamarinmac-3.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (binding As ReliableSessionBindingElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReliableSession(System::ServiceModel::Channels::ReliableSessionBindingElement ^ binding);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.ReliableSession : System.ServiceModel.Channels.ReliableSessionBindingElement -&gt; System.ServiceModel.ReliableSession" Usage="new System.ServiceModel.ReliableSession binding" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reliableSessionBindingElement" Type="System.ServiceModel.Channels.ReliableSessionBindingElement" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.ReliableSessionBindingElement" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reliableSessionBindingElement">
          <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" /> Których wartości właściwości są stosowane do inicjalizacji niezawodnej sesji.</param>
        <param name="binding">
          <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" /> Których wartości właściwości są stosowane do inicjalizacji niezawodnej sesji.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.ReliableSession" /> klasy z elementu powiązanie niezawodnej sesji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[UEReliableSession#1](~/samples/snippets/csharp/VS_Snippets_CFX/uereliablesession/cs/program.cs#1)]
 [!code-vb[UEReliableSession#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/uereliablesession/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reliableSessionBindingElement" /> Jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="InactivityTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan InactivityTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan InactivityTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ReliableSession.InactivityTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property InactivityTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan InactivityTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.InactivityTimeout : TimeSpan with get, set" Usage="System.ServiceModel.ReliableSession.InactivityTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia interwał czasu, przez jaki usługa może pozostawać nieaktywne przed zamknięciem.</summary>
        <value>
          <see cref="T:System.TimeSpan" /> , Który określa przedział czasu, który usługa pozostaje nieaktywna przed zamknięciem. Wartość domyślna to 10 minut.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość pobiera i ustawia wartość <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout%2A> właściwości.  
  
 Działań w kanale jest zdefiniowany jako odbieranie wiadomości aplikację lub infrastrukturę. Właściwość limitu czasu bezczynności steruje maksymalną ilość czasu, aby utrzymać aktywność sesji nieaktywne. Jeśli są większe niż <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A> określony przedział czasu przekazuje bez żadnych działań, sesja została przerwana przez infrastrukturę i usterek kanału. Niezawodna sesja zostaje rozłączona jednostronnie.  
  
 Jeśli aplikacja wysyłająca nie zawiera żadnych komunikatów do wysłania następnie niezawodnej sesji zwykle nie uległa awarii z powodu braku aktywności; Zamiast tego mechanizmu keep-alive przechowuje sesji aktywne przez czas nieokreślony. Należy pamiętać, że Dyspozytor niezależnie może przerwać niezawodnej sesji, jeśli żadne komunikaty aplikacji są wysyłane lub odbierane. W związku z tym limit czasu braku aktywności zazwyczaj wygasa, jeśli warunki w sieci są w taki sposób, że są odbierane żadne komunikaty o dowolny lub jeśli wystąpi awaria w nadawcy.  
  
 Ustawienie tego limitu czasu zapobiega serwera zawierający na sesji zabezpieczeń, jeśli klient nie zamyka. Jeśli sesja zabezpieczeń nie otrzymał komunikat dla przedział czasu braku aktywności, wystąpienie jest zamykane przez serwer. Zmniejsza to zagrożenie potencjalne "odmowa usługi".  
  
 Korzystając z niezawodnej sesji, istnieją dwa czasomierzy braku różnych, które muszą zostać spełnione, aby utrzymać aktywność połączenia. Jeśli jedno z tych czasomierzy bezczynności zostanie wyłączone, połączenie zostało przerwane.  
  
-   Pierwszy zegar nieaktywności, po którym znajduje się na niezawodnej sesji i nosi nazwę <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A>. Ten czasomierz nieaktywności, po którym jest uruchamiana, odebranie żadnych komunikatów aplikacji lub infrastruktury, przed upływem limitu czasu. Komunikat infrastruktury jest komunikat, który jest generowany na potrzeby jednego z protokołów w stosie kanałów, takich jak podtrzymywaniu lub potwierdzenia, a nie zawierającego dane aplikacji.  
  
-   Drugi Czasomierz nieaktywności, po którym znajduje się na usługę i używa <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> ustawienie powiązania. Ten czasomierz nieaktywności, po którym jest uruchamiana, jeśli żadne komunikaty aplikacji są odbierane przed upływem limitu czasu.  
  
 Ponieważ połączenie jest przerwane po aktywacji czasomierza albo braku aktywności, zwiększa <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A> po jest większy niż <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> nie ma wpływu. Wartość domyślna dla obu tych przekroczeń limitu czasu wynosi 10 minut, dzięki czemu zawsze trzeba zwiększyć obydwaj reagować po użyciu niezawodnej sesji.  
  
   
  
## Examples  
 [!code-csharp[UEReliableSession#2](~/samples/snippets/csharp/VS_Snippets_CFX/uereliablesession/cs/program.cs#2)]
 [!code-vb[UEReliableSession#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/uereliablesession/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Podana wartość jest mniejsza niż zero.</exception>
      </Docs>
    </Member>
    <Member MemberName="Ordered">
      <MemberSignature Language="C#" Value="public bool Ordered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Ordered" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ReliableSession.Ordered" />
      <MemberSignature Language="VB.NET" Value="Public Property Ordered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Ordered { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Ordered : bool with get, set" Usage="System.ServiceModel.ReliableSession.Ordered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy dostarczanie komunikatów muszą zachować kolejność, w jakiej komunikaty są wysyłane.</summary>
        <value>
          <see langword="true" /> Jeśli wiadomości muszą być dostarczane w kolejności, w której są wysyłane; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość pobiera i ustawia wartość <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered%2A> właściwości.  
  
   
  
## Examples  
 [!code-csharp[UEReliableSession#2](~/samples/snippets/csharp/VS_Snippets_CFX/uereliablesession/cs/program.cs#2)]
 [!code-vb[UEReliableSession#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/uereliablesession/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>