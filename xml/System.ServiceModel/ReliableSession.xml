<Type Name="ReliableSession" FullName="System.ServiceModel.ReliableSession">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a7f7fc7a284748cdeb433317926516fdc83e6a5c" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69102375" /></Metadata><TypeSignature Language="C#" Value="public class ReliableSession" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ReliableSession extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ReliableSession" />
  <TypeSignature Language="VB.NET" Value="Public Class ReliableSession" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReliableSession" />
  <TypeSignature Language="F#" Value="type ReliableSession = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zapewnia wygodny dostęp do właściwości niezawodnych elementów powiązania sesji, które są dostępne podczas korzystania z jednego z powiązań dostarczonych przez system.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwości zawarte w <xref:System.ServiceModel.ReliableSession> klasie są podzbiorem elementów zawartych <xref:System.ServiceModel.Channels.ReliableSessionBindingElement> w elemencie, które są dostępne ze wstępnie zdefiniowanego powiązania. Ten podzbiór zawiera <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A> właściwości i <xref:System.ServiceModel.ReliableSession.Ordered%2A> . Klasa odwołuje się do tych samych obiektów <xref:System.ServiceModel.Channels.ReliableSessionBindingElement>, co w programie, więc zmiana wartości jednego z nich spowoduje zmianę wartości. <xref:System.ServiceModel.ReliableSession> Ta klasa zbiera dwie właściwości niezawodnego elementu powiązania sesji w celu lepszego odnajdowania.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak utworzyć nową niezawodną sesję i uzyskać dostęp i zmienić wartości właściwości tej sesji. <xref:System.ServiceModel.ReliableSession> Klasa umożliwia zapis:  
  
 [!code-csharp[UEReliableSession#1](~/samples/snippets/csharp/VS_Snippets_CFX/uereliablesession/cs/program.cs#1)]
 [!code-vb[UEReliableSession#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/uereliablesession/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.ReliableSession" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReliableSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ReliableSession.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReliableSession();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.ReliableSession" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReliableSession (System.ServiceModel.Channels.ReliableSessionBindingElement reliableSessionBindingElement);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.ReliableSessionBindingElement reliableSessionBindingElement) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReliableSession(System::ServiceModel::Channels::ReliableSessionBindingElement ^ reliableSessionBindingElement);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public ReliableSession (System.ServiceModel.Channels.ReliableSessionBindingElement binding);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.ReliableSessionBindingElement binding) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ReliableSession.#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (binding As ReliableSessionBindingElement)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReliableSession(System::ServiceModel::Channels::ReliableSessionBindingElement ^ binding);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ReliableSession.#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (binding As ReliableSessionBindingElement)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.ReliableSession : System.ServiceModel.Channels.ReliableSessionBindingElement -&gt; System.ServiceModel.ReliableSession" Usage="new System.ServiceModel.ReliableSession binding" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.ReliableSession : System.ServiceModel.Channels.ReliableSessionBindingElement -&gt; System.ServiceModel.ReliableSession" Usage="new System.ServiceModel.ReliableSession binding" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reliableSessionBindingElement" Type="System.ServiceModel.Channels.ReliableSessionBindingElement" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.ReliableSessionBindingElement" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reliableSessionBindingElement">Wartości <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" /> właściwości, które są używane do inicjowania niezawodnej sesji.</param>
        <param name="binding">Wartości <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" /> właściwości, które są używane do inicjowania niezawodnej sesji.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.ServiceModel.ReliableSession" /> klasy na podstawie elementu powiązania niezawodnej sesji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[UEReliableSession#1](~/samples/snippets/csharp/VS_Snippets_CFX/uereliablesession/cs/program.cs#1)]
 [!code-vb[UEReliableSession#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/uereliablesession/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="reliableSessionBindingElement" /> Ma<see langword="null" />wartość.</exception>
      </Docs>
    </Member>
    <Member MemberName="InactivityTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan InactivityTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan InactivityTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ReliableSession.InactivityTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property InactivityTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan InactivityTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.InactivityTimeout : TimeSpan with get, set" Usage="System.ServiceModel.ReliableSession.InactivityTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia przedział czasu, przez który usługa może pozostawać nieaktywna przed zamknięciem.</summary>
        <value><see cref="T:System.TimeSpan" /> Określa przedział czasu nieaktywności usługi przed zamknięciem. Wartość domyślna to 10 minut.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość pobiera i ustawia wartość <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout%2A> właściwości.  
  
 Działanie w kanale jest zdefiniowane jako otrzymywanie komunikatu o aplikacji lub infrastrukturze. Właściwość limit czasu nieaktywności określa maksymalną ilość czasu, przez który należy utrzymać nieaktywną sesję. Jeśli upłynie więcej niż <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A> określony przedział czasu bez aktywności, sesja zostanie przerwana przez infrastrukturę i błędy kanałów. Niezawodna sesja zostaje rozłączona jednostronnie.  
  
 Jeśli aplikacja wysyłająca nie ma wiadomości do wysłania, Niezawodna sesja jest zwykle nieprzerwana z powodu braku aktywności; Zamiast tego mechanizm Keep-Alive utrzymuje czas aktywności sesji. Należy pamiętać, że Dyspozytor może niezależnie przerwać niezawodną sesję w przypadku braku wysyłania lub odbierania komunikatów aplikacji. W związku z tym limit czasu bezczynności jest zwykle wygasany, jeśli warunki sieci są takie same, jak nie są odbierane żadne komunikaty z sortowania lub w przypadku wystąpienia błędu w nadawcy.  
  
 Ustawienie tego limitu czasu uniemożliwia serwerowi przechowanie na sesję zabezpieczeń, jeśli klient nie zamknie go. Jeśli sesja zabezpieczeń nie odebrała komunikatu dla interwału braku aktywności, jest ono zamykane przez serwer. Pozwala to ograniczyć potencjalny atak typu "odmowa usługi".  
  
 W przypadku korzystania z niezawodnej sesji istnieją dwa czasomierze nieaktywności, które muszą być spełnione, aby zachować połączenie. Jeśli jeden z tych czasomierzy nieaktywności zostanie wyłączony, połączenie zostanie zerwane.  
  
-   Pierwszy czasomierz braku aktywności jest w niezawodnej sesji i nosi nazwę <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A>. Ten czasomierz bezczynności jest wyzwalany, jeśli w okresie przekroczenia limitu czasu nie zostaną odebrane żadne komunikaty, aplikacja ani infrastruktura. Komunikat dotyczący infrastruktury to komunikat generowany na potrzeby jednego z protokołów w stosie kanałów, takich jak utrzymywanie aktywności lub potwierdzenie, a nie zawierające dane aplikacji.  
  
-   Drugi czasomierz nieaktywności znajduje się w usłudze i używa <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> ustawienia powiązania. Ten czasomierz bezczynności jest wyzwalany, jeśli nie odebrano komunikatów aplikacji w określonym limicie czasu.  
  
 Ponieważ połączenie jest pomijane, gdy zostanie wyzwolony czasomierz bezczynności <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A> , zwiększenie, gdy jest <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> większy niż nie ma żadnego wpływu. Wartość domyślna dla obu tych limitów czasu wynosi 10 minut, więc zawsze trzeba zwiększyć obie te wartości, aby wprowadzić różnicę podczas korzystania z niezawodnej sesji.  
  
   
  
## Examples  
 [!code-csharp[UEReliableSession#2](~/samples/snippets/csharp/VS_Snippets_CFX/uereliablesession/cs/program.cs#2)]
 [!code-vb[UEReliableSession#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/uereliablesession/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Ustawiona wartość jest mniejsza lub równa zero.</exception>
      </Docs>
    </Member>
    <Member MemberName="Ordered">
      <MemberSignature Language="C#" Value="public bool Ordered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Ordered" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ReliableSession.Ordered" />
      <MemberSignature Language="VB.NET" Value="Public Property Ordered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Ordered { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Ordered : bool with get, set" Usage="System.ServiceModel.ReliableSession.Ordered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy dostarczanie komunikatów musi zachować kolejność wysyłania komunikatów.</summary>
        <value><see langword="true" />Jeśli komunikaty muszą być dostarczone w kolejności, w jakiej są wysyłane; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość pobiera i ustawia wartość <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered%2A> właściwości.  
  
   
  
## Examples  
 [!code-csharp[UEReliableSession#2](~/samples/snippets/csharp/VS_Snippets_CFX/uereliablesession/cs/program.cs#2)]
 [!code-vb[UEReliableSession#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/uereliablesession/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
