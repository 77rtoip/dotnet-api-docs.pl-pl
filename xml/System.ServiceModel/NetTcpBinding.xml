<Type Name="NetTcpBinding" FullName="System.ServiceModel.NetTcpBinding">
  <TypeSignature Language="C#" Value="public class NetTcpBinding : System.ServiceModel.Channels.Binding, System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NetTcpBinding extends System.ServiceModel.Channels.Binding implements class System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.NetTcpBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class NetTcpBinding&#xA;Inherits Binding&#xA;Implements IBindingRuntimePreferences" />
  <TypeSignature Language="C++ CLI" Value="public ref class NetTcpBinding : System::ServiceModel::Channels::Binding, System::ServiceModel::Channels::IBindingRuntimePreferences" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.Binding</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IBindingRuntimePreferences</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="f8058-101">Bezpieczne, niezawodne powiązanie odpowiednie dla komunikacji między komputerami.</span><span class="sxs-lookup"><span data-stu-id="f8058-101">A secure, reliable binding suitable for cross-machine communication.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8058-102"><xref:System.ServiceModel.NetTcpBinding> Generuje stosu komunikacji środowiska wykonawczego domyślnie, który używa zabezpieczeń transportu TCP w celu dostarczania komunikatów i kodowanie komunikatu binarnego.</span><span class="sxs-lookup"><span data-stu-id="f8058-102">The <xref:System.ServiceModel.NetTcpBinding> generates a run-time communication stack by default, which uses transport security, TCP for message delivery, and a binary message encoding.</span></span> <span data-ttu-id="f8058-103">To powiązanie jest [!INCLUDE[indigo1](~/includes/indigo1-md.md)] wybór dostarczane przez system do komunikowania się za pośrednictwem intranetu.</span><span class="sxs-lookup"><span data-stu-id="f8058-103">This binding is an appropriate [!INCLUDE[indigo1](~/includes/indigo1-md.md)] system-provided choice for communicating over an Intranet.</span></span>  
  
 <span data-ttu-id="f8058-104">Konfigurację domyślną dla <xref:System.ServiceModel.NetTcpBinding> jest szybsza niż podana przez Konfiguracja <xref:System.ServiceModel.WSHttpBinding>, ale jest przeznaczona tylko do komunikacji usługi WCF.</span><span class="sxs-lookup"><span data-stu-id="f8058-104">The default configuration for the <xref:System.ServiceModel.NetTcpBinding> is faster than the configuration provided by the <xref:System.ServiceModel.WSHttpBinding>, but it is intended only for WCF communication.</span></span> <span data-ttu-id="f8058-105">Zachowania zabezpieczeń jest można skonfigurować za pomocą opcjonalnego `securityMode` parametru w konstruktorze.</span><span class="sxs-lookup"><span data-stu-id="f8058-105">The security behavior is configurable using the optional `securityMode` parameter in the constructor.</span></span> <span data-ttu-id="f8058-106">Korzystanie z protokołu WS-ReliableMessaging jest można skonfigurować za pomocą opcjonalnego `reliableSessionEnabled` parametru.</span><span class="sxs-lookup"><span data-stu-id="f8058-106">The use of WS-ReliableMessaging is configurable using the optional `reliableSessionEnabled` parameter.</span></span> <span data-ttu-id="f8058-107">Ale niezawodna obsługa komunikatów jest domyślnie wyłączone.</span><span class="sxs-lookup"><span data-stu-id="f8058-107">But reliable messaging is off by default.</span></span> <span data-ttu-id="f8058-108">Ogólnie rzecz biorąc, HTTP dostarczane przez system powiązań takich jak <xref:System.ServiceModel.WSHttpBinding> i <xref:System.ServiceModel.BasicHttpBinding> są skonfigurowane do włączyć rzeczy domyślnie, podczas gdy <xref:System.ServiceModel.NetTcpBinding> powiązanie wyłącza rzeczy domyślnie, aby należy wyrazić zgodę na uzyskać pomoc techniczną, na przykład dla jednego z WS-\* specyfikacji.</span><span class="sxs-lookup"><span data-stu-id="f8058-108">More generally, the HTTP system-provided bindings such as <xref:System.ServiceModel.WSHttpBinding> and <xref:System.ServiceModel.BasicHttpBinding> are configured to turn things on by default, whereas the <xref:System.ServiceModel.NetTcpBinding> binding turns things off by default so that you have to opt-in to get support, for example, for one of the WS-\* specifications.</span></span> <span data-ttu-id="f8058-109">Oznacza to, że domyślna konfiguracja protokołu TCP dla ma szybszy w wymiana wiadomości między punktami końcowymi niż domyślnie skonfigurowany dla powiązania protokołu HTTP.</span><span class="sxs-lookup"><span data-stu-id="f8058-109">This means that the default configuration for TCP is faster at exchanging messages between endpoints than that configured for the HTTP bindings by default.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="f8058-110"><xref:System.ServiceModel.NetTcpBinding> Używa puli połączeń TCP opartego na usłudze hosta nazwy DNS i numer portu nasłuchuje usługa.</span><span class="sxs-lookup"><span data-stu-id="f8058-110">The <xref:System.ServiceModel.NetTcpBinding> uses TCP connection pooling based on the service’s host DNS name and the port number the service is listening on.</span></span> <span data-ttu-id="f8058-111">Również obsługiwane podczas klientowi wykonywania wywołań do różnych usług na inne porty, lub usług hostowanych w ramach jednego procesu i udostępnianie portu.</span><span class="sxs-lookup"><span data-stu-id="f8058-111">This works well when a client makes calls to different services on different ports, or services are hosted in a single process and share a port.</span></span> <span data-ttu-id="f8058-112">Jeśli jeden klient wywołuje wielu usług Udostępnianie portów, które znajdują się w różnych procesów, lub WAS / hostowanej w programie IIS, buforowanie po stronie klienta może prowadzić do problemów gdzie połączenie A usługą zostanie ponownie użyty dla usługi, co powoduje wyjątek B , połączenie zostało przerwane i utworzyć nowy kanał.</span><span class="sxs-lookup"><span data-stu-id="f8058-112">If a single client calls multiple services sharing a port that are hosted in different processes, or are WAS/IIS hosted, the client side pooling may lead to problems where a connection to Service A is reused for Service B, resulting in an exception being thrown, the connection aborted, and a new channel created.</span></span> <span data-ttu-id="f8058-113">Aby uniknąć tego problemu, użyj CustomBinding i określ inną ConnectionPoolSettings.GroupName dla każdej usługi klienta komunikuje się z.</span><span class="sxs-lookup"><span data-stu-id="f8058-113">To avoid this problem, use a CustomBinding and specify a different ConnectionPoolSettings.GroupName for each service the client communicates with.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8058-114">W tym przykładzie przedstawiono sposób tworzenia <xref:System.ServiceModel.NetTcpBinding>, ustawianie trybu zabezpieczeń i typ poświadczenia transportu.</span><span class="sxs-lookup"><span data-stu-id="f8058-114">This example shows how to create a <xref:System.ServiceModel.NetTcpBinding>, setting the security mode and transport credential type.</span></span>  
  
 [!code-csharp[S_UENetTcpBinding#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f8058-115">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.NetTcpBinding" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="f8058-115">Initializes a new instance of the <see cref="T:System.ServiceModel.NetTcpBinding" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8058-116">Zachowania zabezpieczeń jest można skonfigurować za pomocą opcjonalnego `securityMode` parametru w konstruktorze.</span><span class="sxs-lookup"><span data-stu-id="f8058-116">The security behavior is configurable using the optional `securityMode` parameter in the constructor.</span></span> <span data-ttu-id="f8058-117">Korzystanie z protokołu WS-ReliableMessaging jest można skonfigurować za pomocą opcjonalnego `reliableSessionEnabled` parametru.</span><span class="sxs-lookup"><span data-stu-id="f8058-117">The use of WS-ReliableMessaging is configurable using the optional `reliableSessionEnabled` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetTcpBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetTcpBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetTcpBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8058-118">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.NetTcpBinding" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="f8058-118">Initializes a new instance of the <see cref="T:System.ServiceModel.NetTcpBinding" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8058-119">Domyślnie zabezpieczeń transportu służy do zabezpieczania komunikacji (czyli wartość <xref:System.ServiceModel.SecurityMode> ma ustawioną wartość <xref:System.ServiceModel.SecurityMode.Transport>) i niezawodne sesje są wyłączone (czyli <xref:System.ServiceModel.OptionalReliableSession.Enabled%2A> jest `false`).</span><span class="sxs-lookup"><span data-stu-id="f8058-119">By default, transport security is used to secure communication (that is, the value of <xref:System.ServiceModel.SecurityMode> is set to <xref:System.ServiceModel.SecurityMode.Transport>) and reliable sessions are disabled (that is <xref:System.ServiceModel.OptionalReliableSession.Enabled%2A> is `false`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8058-120">W tym przykładzie przedstawiono sposób tworzenia <xref:System.ServiceModel.NetTcpBinding>, ustawianie trybu zabezpieczeń i typ poświadczenia transportu.</span><span class="sxs-lookup"><span data-stu-id="f8058-120">This example shows how to create a <xref:System.ServiceModel.NetTcpBinding>, setting the security mode and transport credential type.</span></span>  
  
 [!code-csharp[S_UENETTCPBINDING#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetTcpBinding (System.ServiceModel.SecurityMode securityMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ServiceModel.SecurityMode securityMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetTcpBinding.#ctor(System.ServiceModel.SecurityMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetTcpBinding(System::ServiceModel::SecurityMode securityMode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="securityMode" Type="System.ServiceModel.SecurityMode" />
      </Parameters>
      <Docs>
        <param name="securityMode"><span data-ttu-id="f8058-121"><see cref="T:System.ServiceModel.SecurityMode" /> Wartość określająca typ zabezpieczeń używanych z powiązaniem.</span><span class="sxs-lookup"><span data-stu-id="f8058-121">The <see cref="T:System.ServiceModel.SecurityMode" /> value that specifies the type of security used with the binding.</span></span></param>
        <summary><span data-ttu-id="f8058-122">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.NetTcpBinding" /> klasy zabezpieczeń używanych określonego typu.</span><span class="sxs-lookup"><span data-stu-id="f8058-122">Initializes a new instance of the <see cref="T:System.ServiceModel.NetTcpBinding" /> class with the type of security used specified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8058-123">Jeśli chcesz skonfigurować zabezpieczenia, należy użyć tego konstruktora.</span><span class="sxs-lookup"><span data-stu-id="f8058-123">Use this constructor when you want to configure the security.</span></span> <span data-ttu-id="f8058-124">Jeśli chcesz skonfigurować zabezpieczenia i włączyć niezawodnej sesji, użyj <xref:System.ServiceModel.NetTcpBinding.%23ctor%28System.ServiceModel.SecurityMode%2CSystem.Boolean%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f8058-124">If you want to configure security and enable reliable sessions, use <xref:System.ServiceModel.NetTcpBinding.%23ctor%28System.ServiceModel.SecurityMode%2CSystem.Boolean%29?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8058-125">W tym przykładzie przedstawiono sposób tworzenia <xref:System.ServiceModel.NetTcpBinding> za pomocą parametru tryb zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="f8058-125">This example shows how to create a <xref:System.ServiceModel.NetTcpBinding> using the security mode parameter.</span></span>  
  
 [!code-csharp[S_UENETTCPBINDING#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetTcpBinding (string configurationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string configurationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetTcpBinding.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (configurationName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetTcpBinding(System::String ^ configurationName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="configurationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configurationName"><span data-ttu-id="f8058-126">Nazwa konfiguracji powiązania dla <see cref="T:System.ServiceModel.NetTcpBinding" />.</span><span class="sxs-lookup"><span data-stu-id="f8058-126">The binding configuration name for the <see cref="T:System.ServiceModel.NetTcpBinding" />.</span></span></param>
        <summary><span data-ttu-id="f8058-127">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.NetTcpBinding" /> klasy o nazwie określonej konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="f8058-127">Initializes a new instance of the <see cref="T:System.ServiceModel.NetTcpBinding" /> class with a specified configuration name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8058-128">Użyj tego konstruktora, jeśli chcesz zainicjować ustawienia powiązania z konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="f8058-128">Use this constructor when you want to initialize the binding settings from configuration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8058-129">W tym przykładzie przedstawiono sposób tworzenia <xref:System.ServiceModel.NetTcpBinding> przy użyciu `configurationName` parametru.</span><span class="sxs-lookup"><span data-stu-id="f8058-129">This example shows how to create a <xref:System.ServiceModel.NetTcpBinding> using the `configurationName` parameter.</span></span>  
  
 [!code-csharp[S_UENETTCPBINDING#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetTcpBinding (System.ServiceModel.SecurityMode securityMode, bool reliableSessionEnabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ServiceModel.SecurityMode securityMode, bool reliableSessionEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetTcpBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetTcpBinding(System::ServiceModel::SecurityMode securityMode, bool reliableSessionEnabled);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="securityMode" Type="System.ServiceModel.SecurityMode" />
        <Parameter Name="reliableSessionEnabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="securityMode"><span data-ttu-id="f8058-130"><see cref="T:System.ServiceModel.SecurityMode" /> Wartość określająca typ zabezpieczeń używanych z powiązaniem.</span><span class="sxs-lookup"><span data-stu-id="f8058-130">The <see cref="T:System.ServiceModel.SecurityMode" /> value that specifies the type of security used with the binding.</span></span></param>
        <param name="reliableSessionEnabled">
          <span data-ttu-id="f8058-131"><see langword="true" /> Jeśli włączono sesji niezawodnej; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f8058-131"><see langword="true" /> if reliable sessions are enabled; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="f8058-132">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.NetTcpBinding" /> klasy z typ zabezpieczeń używanych określone i wartość, która wskazuje, czy włączone są jawnie niezawodnej sesji.</span><span class="sxs-lookup"><span data-stu-id="f8058-132">Initializes a new instance of the <see cref="T:System.ServiceModel.NetTcpBinding" /> class with the type of security used specified and with a value that indicates whether reliable sessions are explicitly enabled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8058-133">Ten konstruktor należy użyć skonfigurować zabezpieczenia i włączyć niezawodnej sesji.</span><span class="sxs-lookup"><span data-stu-id="f8058-133">Use this constructor when you want to configure the security and enable reliable sessions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8058-134">W tym przykładzie przedstawiono sposób tworzenia <xref:System.ServiceModel.NetTcpBinding> przy użyciu `securityMode` i `reliableSessionEnabled` parametrów.</span><span class="sxs-lookup"><span data-stu-id="f8058-134">This example shows how to create a <xref:System.ServiceModel.NetTcpBinding> using the `securityMode` and `reliableSessionEnabled` parameters.</span></span>  
  
 [!code-csharp[S_UENETTCPBINDING#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBindingElements">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElementCollection CreateBindingElements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElementCollection CreateBindingElements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetTcpBinding.CreateBindingElements" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateBindingElements () As BindingElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElementCollection ^ CreateBindingElements();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElementCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8058-135">Tworzy kolekcję elementów wiązania dla wiązania.</span><span class="sxs-lookup"><span data-stu-id="f8058-135">Creates a collection with the binding elements for the binding.</span></span></summary>
        <returns><span data-ttu-id="f8058-136"><see cref="T:System.Collections.Generic.ICollection`1" /> Typu <see cref="T:System.ServiceModel.Channels.BindingElement" /> składa powiązania.</span><span class="sxs-lookup"><span data-stu-id="f8058-136">The <see cref="T:System.Collections.Generic.ICollection`1" /> of type <see cref="T:System.ServiceModel.Channels.BindingElement" /> that makes up the binding.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8058-137">Ten przykład przedstawia sposób użycia <xref:System.ServiceModel.NetTcpBinding.CreateBindingElements%2A> metody, aby utworzyć kolekcję elementów wiązania dla wiązania.</span><span class="sxs-lookup"><span data-stu-id="f8058-137">This example shows how to use the <xref:System.ServiceModel.NetTcpBinding.CreateBindingElements%2A> method to create a collection with the binding elements for the binding.</span></span>  
  
 [!code-csharp[S_UENetTcpBinding#20](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvelopeVersion">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EnvelopeVersion EnvelopeVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EnvelopeVersion EnvelopeVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetTcpBinding.EnvelopeVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnvelopeVersion As EnvelopeVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EnvelopeVersion ^ EnvelopeVersion { System::ServiceModel::EnvelopeVersion ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EnvelopeVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8058-138">Pobiera wersję protokołu SOAP używaną dla komunikatów przetwarzanych przez to powiązanie.</span><span class="sxs-lookup"><span data-stu-id="f8058-138">Gets the version of SOAP that is used for messages processed by this binding.</span></span></summary>
        <value><span data-ttu-id="f8058-139">Wartość <see cref="T:System.ServiceModel.EnvelopeVersion" /> używana przez to powiązanie.</span><span class="sxs-lookup"><span data-stu-id="f8058-139">The value of the <see cref="T:System.ServiceModel.EnvelopeVersion" /> that is used with this binding.</span></span> <span data-ttu-id="f8058-140">Wartość jest SOAP 1.2.</span><span class="sxs-lookup"><span data-stu-id="f8058-140">The value is SOAP 1.2.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8058-141">Właściwość zawsze zwraca SOAP 1.2.</span><span class="sxs-lookup"><span data-stu-id="f8058-141">The property always returns SOAP 1.2.</span></span> <span data-ttu-id="f8058-142">Nie można zmienić tej wartości.</span><span class="sxs-lookup"><span data-stu-id="f8058-142">This value cannot be changed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8058-143">W tym przykładzie pokazano, jak pobrać <xref:System.ServiceModel.NetTcpBinding.EnvelopeVersion%2A> wartość.</span><span class="sxs-lookup"><span data-stu-id="f8058-143">This example shows how to get the <xref:System.ServiceModel.NetTcpBinding.EnvelopeVersion%2A> value.</span></span>  
  
 [!code-csharp[S_UENETTCPBINDING#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostNameComparisonMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.HostNameComparisonMode HostNameComparisonMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.HostNameComparisonMode HostNameComparisonMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetTcpBinding.HostNameComparisonMode" />
      <MemberSignature Language="VB.NET" Value="Public Property HostNameComparisonMode As HostNameComparisonMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::HostNameComparisonMode HostNameComparisonMode { System::ServiceModel::HostNameComparisonMode get(); void set(System::ServiceModel::HostNameComparisonMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.HostNameComparisonMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8058-144">Pobiera lub ustawia wartość wskazującą, czy nazwa hosta jest używana w celu dotarcia do usługi podczas dopasowywania identyfikatora URI.</span><span class="sxs-lookup"><span data-stu-id="f8058-144">Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.</span></span></summary>
        <value><span data-ttu-id="f8058-145">Jeden z <see cref="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode" /> wartości, które wskazuje, czy nazwa hosta jest używana w celu dotarcia do usługi podczas dopasowywania identyfikatora URI.</span><span class="sxs-lookup"><span data-stu-id="f8058-145">One of the <see cref="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode" /> values that indicates whether the hostname is used to reach the service when matching the URI.</span></span> <span data-ttu-id="f8058-146">Wartość domyślna to <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />, który ignoruje nazwy hosta w dopasowania.</span><span class="sxs-lookup"><span data-stu-id="f8058-146">The default value is <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />, which ignores the hostname in the match.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8058-147">W tym przykładzie pokazano, jak pobrać <xref:System.ServiceModel.NetTcpBinding.HostNameComparisonMode%2A> wartość.</span><span class="sxs-lookup"><span data-stu-id="f8058-147">This example shows how to get the <xref:System.ServiceModel.NetTcpBinding.HostNameComparisonMode%2A> value.</span></span>  
  
 [!code-csharp[S_UENetTcpBinding#7](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListenBacklog">
      <MemberSignature Language="C#" Value="public int ListenBacklog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ListenBacklog" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetTcpBinding.ListenBacklog" />
      <MemberSignature Language="VB.NET" Value="Public Property ListenBacklog As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ListenBacklog { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8058-148">Pobiera lub ustawia maksymalną liczbę oczekujących żądań połączenia w kolejce.</span><span class="sxs-lookup"><span data-stu-id="f8058-148">Gets or sets the maximum number of queued connection requests that can be pending.</span></span></summary>
        <value><span data-ttu-id="f8058-149">Zwraca maksymalną liczbę oczekujących żądań połączenia w kolejce.</span><span class="sxs-lookup"><span data-stu-id="f8058-149">Returns the maximum number of pending queued connection requests.</span></span> <span data-ttu-id="f8058-150">Wartość domyślna to 10.</span><span class="sxs-lookup"><span data-stu-id="f8058-150">The default is 10.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8058-151"><xref:System.ServiceModel.Channels.TcpTransportBindingElement.ListenBacklog%2A> jest właściwością poziomie gniazda, która określa liczbę "Akceptuj oczekujących" można umieścić w kolejce żądań.</span><span class="sxs-lookup"><span data-stu-id="f8058-151"><xref:System.ServiceModel.Channels.TcpTransportBindingElement.ListenBacklog%2A> is a socket-level property that describes the number of "pending accept" requests to be queued.</span></span> <span data-ttu-id="f8058-152">Jeśli czasochłonną kolejki zaległości nasłuchiwania nowych żądań gniazda zostanie odrzucone.</span><span class="sxs-lookup"><span data-stu-id="f8058-152">If the listen backlog queue fills up, new socket requests will be rejected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8058-153">W tym przykładzie pokazano, jak pobrać <xref:System.ServiceModel.NetTcpBinding.ListenBacklog%2A> wartość.</span><span class="sxs-lookup"><span data-stu-id="f8058-153">This example shows how to get the <xref:System.ServiceModel.NetTcpBinding.ListenBacklog%2A> value.</span></span>  
  
 [!code-csharp[S_UENetTcpBinding#8](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f8058-154">Wartość nie może być mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="f8058-154">The value cannot be less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaxBufferPoolSize">
      <MemberSignature Language="C#" Value="public long MaxBufferPoolSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxBufferPoolSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetTcpBinding.MaxBufferPoolSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBufferPoolSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxBufferPoolSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8058-155">Pobiera lub ustawia maksymalny rozmiar w bajtach dozwolony dla puli buforów, przechowujący TCP komunikatów przetwarzanych przez powiązanie.</span><span class="sxs-lookup"><span data-stu-id="f8058-155">Gets or sets the maximum size, in bytes, allowed for a buffer pool that stores TCP messages processed by the binding.</span></span></summary>
        <value><span data-ttu-id="f8058-156">Maksymalny rozmiar puli buforów przechowujący TCP komunikatów przetwarzanych przez powiązanie.</span><span class="sxs-lookup"><span data-stu-id="f8058-156">The maximum size allowed for a buffer pool that stores TCP messages processed by the binding.</span></span> <span data-ttu-id="f8058-157">Wartość domyślna to 524,288 bajtów.</span><span class="sxs-lookup"><span data-stu-id="f8058-157">The default value is 524,288 bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8058-158">Jeśli zostanie wyświetlony więcej danych niż można buforować, przekracza rozmiar buforu danych pozostaje na podstawowej gniazda aż z buforu ma miejsce na pozostałe dane.</span><span class="sxs-lookup"><span data-stu-id="f8058-158">If you receive more data than you can buffer, the data that exceeds the buffer size remains on the underlying socket until your buffer has room for the rest of the data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8058-159">W tym przykładzie pokazano, jak pobrać <xref:System.ServiceModel.NetTcpBinding.MaxBufferPoolSize%2A> wartość.</span><span class="sxs-lookup"><span data-stu-id="f8058-159">This example shows how to get the <xref:System.ServiceModel.NetTcpBinding.MaxBufferPoolSize%2A> value.</span></span>  
  
 [!code-csharp[S_UENetTcpBinding#9](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBufferSize">
      <MemberSignature Language="C#" Value="public int MaxBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetTcpBinding.MaxBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxBufferSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8058-160">Pobiera lub ustawia wartość, która określa maksymalny rozmiar w bajtach buforu używany do przechowywania wiadomości w pamięci.</span><span class="sxs-lookup"><span data-stu-id="f8058-160">Gets or sets a value that specifies the maximum size, in bytes, of the buffer used to store messages in memory.</span></span></summary>
        <value><span data-ttu-id="f8058-161">Maksymalny rozmiar w bajtach buforu używany do przechowywania wiadomości w pamięci.</span><span class="sxs-lookup"><span data-stu-id="f8058-161">The maximum size, in bytes, of the buffer used to store messages in memory.</span></span> <span data-ttu-id="f8058-162">Wartość domyślna to 65 536 bajtów.</span><span class="sxs-lookup"><span data-stu-id="f8058-162">The default value is 65,536 bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8058-163">Jeśli zostanie wyświetlony więcej danych niż można buforować, przekracza rozmiar buforu danych pozostaje na podstawowej gniazda aż z buforu ma miejsce na pozostałe dane.</span><span class="sxs-lookup"><span data-stu-id="f8058-163">If you receive more data than you can buffer, the data that exceeds the buffer size remains on the underlying socket until your buffer has room for the rest of the data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8058-164">W tym przykładzie pokazano, jak uzyskać wartość <xref:System.ServiceModel.NetTcpBinding.MaxBufferSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="f8058-164">This example shows how to get the value of the <xref:System.ServiceModel.NetTcpBinding.MaxBufferSize%2A>.</span></span>  
  
 [!code-csharp[S_UENetTcpBinding#10](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxConnections">
      <MemberSignature Language="C#" Value="public int MaxConnections { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxConnections" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetTcpBinding.MaxConnections" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxConnections As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxConnections { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8058-165">Pobiera lub ustawia wartość, która określa maksymalną liczbę połączeń, które należy połączyć kolejne ponowne na kliencie i maksymalną liczbę połączeń, może być oczekujące wysyłki na serwerze.</span><span class="sxs-lookup"><span data-stu-id="f8058-165">Gets or sets a value that controls the maximum number of connections to be pooled for subsequent reuse on the client and the maximum number of connections allowed to be pending dispatch on the server.</span></span></summary>
        <value><span data-ttu-id="f8058-166">Na komputerze klienckim, maksymalną liczbę połączeń, które należy połączyć kolejne ponowne; na serwerze maksymalna liczba połączeń może być oczekujące wysyłania.</span><span class="sxs-lookup"><span data-stu-id="f8058-166">On the client, the maximum number of connections to be pooled for subsequent reuse; on the server, the maximum number of connections allowed to be pending dispatch.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8058-167">Wartość domyślna to 10.</span><span class="sxs-lookup"><span data-stu-id="f8058-167">The default value is 10.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8058-168">W tym przykładzie pokazano, jak pobrać <xref:System.ServiceModel.NetTcpBinding.MaxConnections%2A> wartość.</span><span class="sxs-lookup"><span data-stu-id="f8058-168">This example shows how to get the <xref:System.ServiceModel.NetTcpBinding.MaxConnections%2A> value.</span></span>  
  
 [!code-csharp[S_UENetTcpBinding#11](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxReceivedMessageSize">
      <MemberSignature Language="C#" Value="public long MaxReceivedMessageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxReceivedMessageSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetTcpBinding.MaxReceivedMessageSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxReceivedMessageSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxReceivedMessageSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8058-169">Pobiera lub ustawia maksymalny rozmiar w bajtach dla odebranego komunikatu przetwarzanego przez wiązanie.</span><span class="sxs-lookup"><span data-stu-id="f8058-169">Gets or sets the maximum size, in bytes, for a received message that is processed by the binding.</span></span></summary>
        <value><span data-ttu-id="f8058-170">Maksymalny rozmiar (w bajtach) dla odebranego komunikatu przetwarzanego przez wiązanie.</span><span class="sxs-lookup"><span data-stu-id="f8058-170">The maximum size (in bytes) for a received message that is processed by the binding.</span></span> <span data-ttu-id="f8058-171">Wartość domyślna to 65 536 bajtów.</span><span class="sxs-lookup"><span data-stu-id="f8058-171">The default value is 65,536 bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8058-172">W tym przykładzie pokazano, jak pobrać <xref:System.ServiceModel.NetTcpBinding.MaxReceivedMessageSize%2A> wartość.</span><span class="sxs-lookup"><span data-stu-id="f8058-172">This example shows how to get the <xref:System.ServiceModel.NetTcpBinding.MaxReceivedMessageSize%2A> value.</span></span>  
  
 [!code-csharp[S_UENetTcpBinding#12](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PortSharingEnabled">
      <MemberSignature Language="C#" Value="public bool PortSharingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PortSharingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetTcpBinding.PortSharingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property PortSharingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PortSharingEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8058-173">Pobiera lub ustawia wartość wskazującą, czy włączone jest udostępnianie portów TCP dla połączenia skonfigurowana dla tego wiązania.</span><span class="sxs-lookup"><span data-stu-id="f8058-173">Gets or sets a value that indicates whether TCP port sharing is enabled for the connection configured with this binding.</span></span></summary>
        <value>
          <span data-ttu-id="f8058-174"><see langword="true" /> Jeśli włączone jest udostępnianie portów TCP; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f8058-174"><see langword="true" /> if TCP port sharing is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="f8058-175">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f8058-175">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8058-176">Za pomocą tej opcji wymaga włączenia [!INCLUDE[indigo1](~/includes/indigo1-md.md)] Port TCP do udostępniania usługi, zmieniając jej typ uruchamiania ręczny lub automatyczny.</span><span class="sxs-lookup"><span data-stu-id="f8058-176">Using this setting requires enabling the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] TCP Port Sharing Service by changing its startup type to Manual or Automatic.</span></span>  
  
 <span data-ttu-id="f8058-177">Aby uzyskać więcej informacji na temat odbiornika TCP i należy ją uruchomić, zobacz <xref:System.Net.Sockets.TcpListener>.</span><span class="sxs-lookup"><span data-stu-id="f8058-177">For more information about the TCP Listener and how to start it, see <xref:System.Net.Sockets.TcpListener>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8058-178">W tym przykładzie pokazano, jak pobrać <xref:System.ServiceModel.NetTcpBinding.PortSharingEnabled%2A> wartość.</span><span class="sxs-lookup"><span data-stu-id="f8058-178">This example shows how to get the <xref:System.ServiceModel.NetTcpBinding.PortSharingEnabled%2A> value.</span></span>  
  
 [!code-csharp[S_UENetTcpBinding#13](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReaderQuotas">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReaderQuotas ReaderQuotas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDictionaryReaderQuotas ReaderQuotas" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetTcpBinding.ReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Property ReaderQuotas As XmlDictionaryReaderQuotas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlDictionaryReaderQuotas ^ ReaderQuotas { System::Xml::XmlDictionaryReaderQuotas ^ get(); void set(System::Xml::XmlDictionaryReaderQuotas ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReaderQuotas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8058-179">Pobiera lub ustawia ograniczenia złożoności wiadomości SOAP, które mogą być przetwarzane przez punkty końcowe skonfigurowane dla tego wiązania.</span><span class="sxs-lookup"><span data-stu-id="f8058-179">Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</span></span></summary>
        <value><span data-ttu-id="f8058-180"><see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> , Który określa ograniczenia złożoności wiadomości soap wymieniane.</span><span class="sxs-lookup"><span data-stu-id="f8058-180">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints on soap messages exchanged.</span></span> <span data-ttu-id="f8058-181">Wartości domyślne dla tych warunków ograniczających znajdują się w poniższej sekcji uwag.</span><span class="sxs-lookup"><span data-stu-id="f8058-181">The default values for these constraints are provided in the following Remarks section.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8058-182">Ograniczenia złożoności chroni przed klasą "odmowa usługi" (DOS), które próbują użyć złożoności wiadomości wiązać punkt końcowy przetwarzający zasobów.</span><span class="sxs-lookup"><span data-stu-id="f8058-182">The complexity constraints protect against a class of denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources.</span></span> <span data-ttu-id="f8058-183">Właściwości, które express tych warunków ograniczających i ich wartości domyślne są następujące:</span><span class="sxs-lookup"><span data-stu-id="f8058-183">The properties that express these constraints and their default values are as follows:</span></span>  
  
-   <span data-ttu-id="f8058-184"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxDepth%2A> = 32</span><span class="sxs-lookup"><span data-stu-id="f8058-184"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxDepth%2A> = 32</span></span>  
  
-   <span data-ttu-id="f8058-185"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength%2A> = 8192</span><span class="sxs-lookup"><span data-stu-id="f8058-185"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength%2A> = 8192</span></span>  
  
-   <span data-ttu-id="f8058-186"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength%2A> = 16384</span><span class="sxs-lookup"><span data-stu-id="f8058-186"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength%2A> = 16384</span></span>  
  
-   <span data-ttu-id="f8058-187"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A> = 4096</span><span class="sxs-lookup"><span data-stu-id="f8058-187"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A> = 4096</span></span>  
  
-   <span data-ttu-id="f8058-188"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount%2A> = 16384</span><span class="sxs-lookup"><span data-stu-id="f8058-188"><xref:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount%2A> = 16384</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8058-189">Poniższy przykład przedstawia sposób uzyskać <xref:System.ServiceModel.NetTcpBinding.ReaderQuotas%2A> obiektu.</span><span class="sxs-lookup"><span data-stu-id="f8058-189">The following example shows how to get the <xref:System.ServiceModel.NetTcpBinding.ReaderQuotas%2A> object.</span></span>  
  
 [!code-csharp[S_UENetTcpBinding#14](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReliableSession">
      <MemberSignature Language="C#" Value="public System.ServiceModel.OptionalReliableSession ReliableSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.OptionalReliableSession ReliableSession" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetTcpBinding.ReliableSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReliableSession As OptionalReliableSession" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::OptionalReliableSession ^ ReliableSession { System::ServiceModel::OptionalReliableSession ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.OptionalReliableSession</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8058-190">Pobiera obiekt, który wskazuje, czy między punktami końcowymi kanału nawiązaniu niezawodnej sesji.</span><span class="sxs-lookup"><span data-stu-id="f8058-190">Gets an object that indicates whether a reliable session is established between channel endpoints.</span></span></summary>
        <value><span data-ttu-id="f8058-191"><see cref="T:System.ServiceModel.OptionalReliableSession" /> Wskazująca, czy między punktami końcowymi kanału nawiązaniu protokołu WS-RM niezawodnej sesji.</span><span class="sxs-lookup"><span data-stu-id="f8058-191">An <see cref="T:System.ServiceModel.OptionalReliableSession" /> that indicates whether a WS-RM reliable session is established between channel endpoints.</span></span> <span data-ttu-id="f8058-192">Wartość domyślna dla <see cref="P:System.ServiceModel.OptionalReliableSession.Enabled" /> jest <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f8058-192">The default value for <see cref="P:System.ServiceModel.OptionalReliableSession.Enabled" /> is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8058-193">W tym przykładzie pokazano, jak pobrać <xref:System.ServiceModel.NetTcpBinding.ReliableSession%2A> wartość.</span><span class="sxs-lookup"><span data-stu-id="f8058-193">This example shows how to get the <xref:System.ServiceModel.NetTcpBinding.ReliableSession%2A> value.</span></span>  
  
 [!code-csharp[S_UENetTcpBinding#15](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public override string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetTcpBinding.Scheme" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Scheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Scheme { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8058-194">Zwraca schemat identyfikatora URI dla transportu.</span><span class="sxs-lookup"><span data-stu-id="f8058-194">Returns the URI scheme for the transport.</span></span></summary>
        <value><span data-ttu-id="f8058-195">Schemat identyfikatora URI dla transportu, czyli "net.tcp".</span><span class="sxs-lookup"><span data-stu-id="f8058-195">The URI scheme for the transport, which is "net.tcp".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8058-196">Właściwość podano można sprawdzić poprawności powiązania względem adres podstawowy.</span><span class="sxs-lookup"><span data-stu-id="f8058-196">The property is provided to validate bindings against base addresses.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8058-197">W tym przykładzie pokazano, jak pobrać <xref:System.ServiceModel.NetTcpBinding.Scheme%2A> wartość.</span><span class="sxs-lookup"><span data-stu-id="f8058-197">This example shows how to get the <xref:System.ServiceModel.NetTcpBinding.Scheme%2A> value.</span></span>  
  
 [!code-csharp[S_UENetTcpBinding#16](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Security">
      <MemberSignature Language="C#" Value="public System.ServiceModel.NetTcpSecurity Security { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.NetTcpSecurity Security" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetTcpBinding.Security" />
      <MemberSignature Language="VB.NET" Value="Public Property Security As NetTcpSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::NetTcpSecurity ^ Security { System::ServiceModel::NetTcpSecurity ^ get(); void set(System::ServiceModel::NetTcpSecurity ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.NetTcpSecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8058-198">Pobiera obiekt, który określa typ zabezpieczeń używanych z usługami skonfigurowane dla tego wiązania.</span><span class="sxs-lookup"><span data-stu-id="f8058-198">Gets an object that specifies the type of security used with services configured with this binding.</span></span></summary>
        <value><span data-ttu-id="f8058-199"><see cref="T:System.ServiceModel.NetTcpSecurity" /> Zawiera typy zabezpieczeń używane dla tego wiązania.</span><span class="sxs-lookup"><span data-stu-id="f8058-199">The <see cref="T:System.ServiceModel.NetTcpSecurity" /> that contains the types of security used with this binding.</span></span> <span data-ttu-id="f8058-200">Domyślny tryb zabezpieczeń dla <see langword="NetTCPBinding" /> jest <see cref="F:System.ServiceModel.SecurityMode.Transport" />.</span><span class="sxs-lookup"><span data-stu-id="f8058-200">The default mode of security for the <see langword="NetTCPBinding" /> is <see cref="F:System.ServiceModel.SecurityMode.Transport" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8058-201"><xref:System.ServiceModel.NetTcpSecurity> Zawiera typy zabezpieczeń i ustawień dostępnych dla <xref:System.ServiceModel.NetTcpBinding>.</span><span class="sxs-lookup"><span data-stu-id="f8058-201">The <xref:System.ServiceModel.NetTcpSecurity> provides the types of security and settings available to the <xref:System.ServiceModel.NetTcpBinding>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8058-202">W tym przykładzie pokazano, jak pobrać <xref:System.ServiceModel.NetTcpBinding.Security%2A> wartość.</span><span class="sxs-lookup"><span data-stu-id="f8058-202">This example shows how to get the <xref:System.ServiceModel.NetTcpBinding.Security%2A> value.</span></span>  
  
 [!code-csharp[S_UENetTcpBinding#17](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeListenBacklog">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeListenBacklog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeListenBacklog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetTcpBinding.ShouldSerializeListenBacklog" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeListenBacklog () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeListenBacklog();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8058-203">Zwraca wartość wskazującą, czy <see cref="P:System.ServiceModel.NetTcpBinding.ListenBacklog" /> właściwości została zmieniona z jej wartości domyślnej i powinny być serializowane.</span><span class="sxs-lookup"><span data-stu-id="f8058-203">Returns a value that indicates whether the <see cref="P:System.ServiceModel.NetTcpBinding.ListenBacklog" /> property has changed from its default value and should be serialized.</span></span></summary>
        <returns>
          <span data-ttu-id="f8058-204"><see langword="true" /> Jeśli <see cref="P:System.ServiceModel.NetTcpBinding.ListenBacklog" /> wartość właściwości powinny być serializowane; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f8058-204"><see langword="true" /> if the <see cref="P:System.ServiceModel.NetTcpBinding.ListenBacklog" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeMaxConnections">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeMaxConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeMaxConnections() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetTcpBinding.ShouldSerializeMaxConnections" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeMaxConnections () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeMaxConnections();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8058-205">Zwraca wartość wskazującą, czy <see cref="P:System.ServiceModel.NetTcpBinding.MaxConnections" /> właściwości została zmieniona z jej wartości domyślnej i powinny być serializowane.</span><span class="sxs-lookup"><span data-stu-id="f8058-205">Returns a value that indicates whether the <see cref="P:System.ServiceModel.NetTcpBinding.MaxConnections" /> property has changed from its default value and should be serialized.</span></span></summary>
        <returns>
          <span data-ttu-id="f8058-206"><see langword="true" /> Jeśli <see cref="P:System.ServiceModel.NetTcpBinding.MaxConnections" /> wartość właściwości powinny być serializowane; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f8058-206"><see langword="true" /> if the <see cref="P:System.ServiceModel.NetTcpBinding.MaxConnections" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeReaderQuotas">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeReaderQuotas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeReaderQuotas() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetTcpBinding.ShouldSerializeReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeReaderQuotas () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeReaderQuotas();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8058-207">Zwraca wartość wskazującą, czy <see cref="P:System.ServiceModel.NetTcpBinding.ReaderQuotas" /> właściwości została zmieniona z jej wartości domyślnej i powinny być serializowane.</span><span class="sxs-lookup"><span data-stu-id="f8058-207">Returns a value that indicates whether the <see cref="P:System.ServiceModel.NetTcpBinding.ReaderQuotas" /> property has changed from its default value and should be serialized.</span></span></summary>
        <returns>
          <span data-ttu-id="f8058-208"><see langword="true" /> Jeśli <see cref="P:System.ServiceModel.NetTcpBinding.ReaderQuotas" /> wartość właściwości powinny być serializowane; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f8058-208"><see langword="true" /> if the <see cref="P:System.ServiceModel.NetTcpBinding.ReaderQuotas" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeReliableSession">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeReliableSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeReliableSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetTcpBinding.ShouldSerializeReliableSession" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeReliableSession () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeReliableSession();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8058-209">Zwraca wartość wskazującą, czy <see cref="P:System.ServiceModel.NetTcpBinding.ReliableSession" /> właściwości została zmieniona z jej wartości domyślnej i powinny być serializowane.</span><span class="sxs-lookup"><span data-stu-id="f8058-209">Returns a value that indicates whether the <see cref="P:System.ServiceModel.NetTcpBinding.ReliableSession" /> property has changed from its default value and should be serialized.</span></span></summary>
        <returns>
          <span data-ttu-id="f8058-210"><see langword="true" /> Jeśli <see cref="P:System.ServiceModel.NetTcpBinding.ReliableSession" /> wartość właściwości powinny być serializowane; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f8058-210"><see langword="true" /> if the <see cref="P:System.ServiceModel.NetTcpBinding.ReliableSession" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSecurity">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeSecurity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetTcpBinding.ShouldSerializeSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeSecurity () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeSecurity();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8058-211">Zwraca wartość wskazującą, czy <see cref="P:System.ServiceModel.NetTcpBinding.Security" /> właściwości została zmieniona z jej wartości domyślnej i powinny być serializowane.</span><span class="sxs-lookup"><span data-stu-id="f8058-211">Returns a value that indicates whether the <see cref="P:System.ServiceModel.NetTcpBinding.Security" /> property has changed from its default value and should be serialized.</span></span></summary>
        <returns>
          <span data-ttu-id="f8058-212"><see langword="true" /> Jeśli <see cref="P:System.ServiceModel.NetTcpBinding.Security" /> wartość właściwości powinny być serializowane; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f8058-212"><see langword="true" /> if the <see cref="P:System.ServiceModel.NetTcpBinding.Security" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTransactionProtocol">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTransactionProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTransactionProtocol() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetTcpBinding.ShouldSerializeTransactionProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTransactionProtocol () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTransactionProtocol();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8058-213">Zwraca wartość wskazującą, czy <see cref="P:System.ServiceModel.NetTcpBinding.TransactionProtocol" /> właściwości została zmieniona z jej wartości domyślnej i powinny być serializowane.</span><span class="sxs-lookup"><span data-stu-id="f8058-213">Returns a value that indicates whether the <see cref="P:System.ServiceModel.NetTcpBinding.TransactionProtocol" /> property has changed from its default value and should be serialized.</span></span></summary>
        <returns>
          <span data-ttu-id="f8058-214"><see langword="true" /> Jeśli <see cref="P:System.ServiceModel.NetTcpBinding.TransactionProtocol" /> wartość właściwości powinny być serializowane; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f8058-214"><see langword="true" /> if the <see cref="P:System.ServiceModel.NetTcpBinding.TransactionProtocol" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously">
      <MemberSignature Language="C#" Value="bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ReceiveSynchronously As Boolean Implements IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="C++ CLI" Value="property bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8058-215">Pobiera wartość wskazującą, czy żądania przychodzące są obsługiwane synchronicznie lub asynchronicznie.</span><span class="sxs-lookup"><span data-stu-id="f8058-215">Gets a value that indicates whether incoming requests are handled synchronously or asynchronously.</span></span></summary>
        <value>
          <span data-ttu-id="f8058-216"><see langword="true" /> Jeśli żądania przychodzące są obsługiwane synchronicznie; <see langword="false" /> żądania przychodzące są obsługiwane asynchronicznie.</span><span class="sxs-lookup"><span data-stu-id="f8058-216"><see langword="true" /> if incoming requests are handled synchronously; <see langword="false" /> if incoming requests are handled asynchronously.</span></span> <span data-ttu-id="f8058-217">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f8058-217">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8058-218">To zachowanie czasu wykonania do odbierania wiadomości w jednej usługi lub aplikacji można zmienić za pomocą [ &lt;synchronousReceive&gt;](~/docs/framework/configure-apps/file-schema/wcf/synchronousreceive-element.md).</span><span class="sxs-lookup"><span data-stu-id="f8058-218">This run-time behavior for receiving messages in either a service or client application can be changed using [&lt;synchronousReceive&gt;](~/docs/framework/configure-apps/file-schema/wcf/synchronousreceive-element.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8058-219">W tym przykładzie pokazano, jak pobrać <xref:System.ServiceModel.NetTcpBinding.TransferMode%2A> wartość.</span><span class="sxs-lookup"><span data-stu-id="f8058-219">This example shows how to get the <xref:System.ServiceModel.NetTcpBinding.TransferMode%2A> value.</span></span>  
  
 [!code-csharp[S_UENetTcpBinding#21](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionFlow">
      <MemberSignature Language="C#" Value="public bool TransactionFlow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactionFlow" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetTcpBinding.TransactionFlow" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionFlow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactionFlow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8058-220">Pobiera lub ustawia wartość określającą, czy przepływ transakcji jest włączony.</span><span class="sxs-lookup"><span data-stu-id="f8058-220">Gets or sets a value that determines whether transaction flow is enabled.</span></span></summary>
        <value>
          <span data-ttu-id="f8058-221"><see langword="true" /> Jeśli włączono przepływu transakcji; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f8058-221"><see langword="true" /> if transaction flow is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="f8058-222">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f8058-222">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8058-223">W tym przykładzie pokazano, jak pobrać <xref:System.ServiceModel.NetTcpBinding.TransactionFlow%2A> wartość.</span><span class="sxs-lookup"><span data-stu-id="f8058-223">This example shows how to get the <xref:System.ServiceModel.NetTcpBinding.TransactionFlow%2A> value.</span></span>  
  
 [!code-csharp[S_UENetTcpBinding#18](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionProtocol">
      <MemberSignature Language="C#" Value="public System.ServiceModel.TransactionProtocol TransactionProtocol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.TransactionProtocol TransactionProtocol" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetTcpBinding.TransactionProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionProtocol As TransactionProtocol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::TransactionProtocol ^ TransactionProtocol { System::ServiceModel::TransactionProtocol ^ get(); void set(System::ServiceModel::TransactionProtocol ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransactionProtocol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8058-224">Pobiera lub ustawia protokół transakcji używany przez usługę przepływ transakcji.</span><span class="sxs-lookup"><span data-stu-id="f8058-224">Gets or sets the transactions protocol used by the service to flow transactions.</span></span></summary>
        <value><span data-ttu-id="f8058-225"><see cref="T:System.ServiceModel.TransactionProtocol" /> Używane przez usługę przepływ transakcji.</span><span class="sxs-lookup"><span data-stu-id="f8058-225">The <see cref="T:System.ServiceModel.TransactionProtocol" /> used by the service to flow transactions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8058-226">W tym przykładzie pokazano, jak pobrać <xref:System.ServiceModel.NetTcpBinding.TransactionProtocol%2A> wartość.</span><span class="sxs-lookup"><span data-stu-id="f8058-226">This example shows how to get the <xref:System.ServiceModel.NetTcpBinding.TransactionProtocol%2A> value.</span></span>  
  
 [!code-csharp[S_UENetTcpBinding#19](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransferMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.TransferMode TransferMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.TransferMode TransferMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetTcpBinding.TransferMode" />
      <MemberSignature Language="VB.NET" Value="Public Property TransferMode As TransferMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::TransferMode TransferMode { System::ServiceModel::TransferMode get(); void set(System::ServiceModel::TransferMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransferMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8058-227">Pobiera lub ustawia wartość wskazującą, czy Usługa skonfigurowana dla tego wiązania używa trybu strumieniowego, czy buforowanego (lub obie) tryby transferu komunikatów.</span><span class="sxs-lookup"><span data-stu-id="f8058-227">Gets or sets a value that indicates whether the service configured with the binding uses streamed or buffered (or both) modes of message transfer.</span></span></summary>
        <value><span data-ttu-id="f8058-228"><see cref="T:System.ServiceModel.TransferMode" /> Wartość, która wskazuje, czy Usługa skonfigurowana dla tego wiązania używa trybu strumieniowego, czy buforowanego (lub obie) tryby transferu komunikatów.</span><span class="sxs-lookup"><span data-stu-id="f8058-228">The <see cref="T:System.ServiceModel.TransferMode" /> value that indicates whether the service configured with the binding uses streamed or buffered (or both) modes of message transfer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f8058-229">W tym przykładzie pokazano, jak pobrać <xref:System.ServiceModel.NetTcpBinding.TransferMode%2A> wartość.</span><span class="sxs-lookup"><span data-stu-id="f8058-229">This example shows how to get the <xref:System.ServiceModel.NetTcpBinding.TransferMode%2A> value.</span></span>  
  
 [!code-csharp[S_UENetTcpBinding#22](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenettcpbinding/cs/source.cs#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>