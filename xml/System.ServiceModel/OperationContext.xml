<Type Name="OperationContext" FullName="System.ServiceModel.OperationContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0b651d31df1389374d57ccfab4c8222f8ac73618" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OperationContext : System.ServiceModel.IExtensibleObject&lt;System.ServiceModel.OperationContext&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OperationContext extends System.Object implements class System.ServiceModel.IExtensibleObject`1&lt;class System.ServiceModel.OperationContext&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.OperationContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OperationContext&#xA;Implements IExtensibleObject(Of OperationContext)" />
  <TypeSignature Language="C++ CLI" Value="public ref class OperationContext sealed : System::ServiceModel::IExtensibleObject&lt;System::ServiceModel::OperationContext ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.IExtensibleObject&lt;System.ServiceModel.OperationContext&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="c9437-101">Zapewnia dostęp do kontekstu wykonania metody usługi.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c9437-101">Provides access to the execution context of a service method.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9437-102">Użyj <xref:System.ServiceModel.OperationContext> od w obrębie aktualnego środowiska wykonawczego operacji dostępu do operacji usługi.</span><span class="sxs-lookup"><span data-stu-id="c9437-102">Use the <xref:System.ServiceModel.OperationContext> from within a service operation to access the current operation execution environment.</span></span> <span data-ttu-id="c9437-103">W szczególności kontekstu operacji uzyskano dostęp kanały wywołania zwrotnego w dupleksu usług, do przechowywania danych stanu dodatkowe w części operations i uzyskiwać dostęp do przychodzących nagłówki komunikatów i właściwości, a także dodać właściwości i nagłówki komunikatów wychodzących.</span><span class="sxs-lookup"><span data-stu-id="c9437-103">In particular, the operation context is used to access callback channels in duplex services, to store extra state data across portions of the operations, and to access incoming message headers and properties as well as add outgoing message headers and properties.</span></span>  
  
 <span data-ttu-id="c9437-104">Aby uzyskać więcej informacji na temat przy użyciu rozszerzeń do przechowywania danych stanu, zobacz [obiekty rozszerzalne](~/docs/framework/wcf/extending/extensible-objects.md).</span><span class="sxs-lookup"><span data-stu-id="c9437-104">For more information about using extensions to store state data, see [Extensible Objects](~/docs/framework/wcf/extending/extensible-objects.md).</span></span>  
  
 <span data-ttu-id="c9437-105"><xref:System.ServiceModel.OperationContext> Ma następujące właściwości i metod.</span><span class="sxs-lookup"><span data-stu-id="c9437-105">The <xref:System.ServiceModel.OperationContext> has the following properties and methods.</span></span>  
  
-   <span data-ttu-id="c9437-106"><xref:System.ServiceModel.OperationContext.Current%2A> Zwraca <xref:System.ServiceModel.OperationContext> obiekt reprezentujący bieżącego kontekstu wykonywania.</span><span class="sxs-lookup"><span data-stu-id="c9437-106">The <xref:System.ServiceModel.OperationContext.Current%2A> property returns the <xref:System.ServiceModel.OperationContext> object representing the current execution context.</span></span>  
  
-   <span data-ttu-id="c9437-107"><xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A> Właściwość zwraca środowisko zabezpieczeń, w której wykonuje metodę.</span><span class="sxs-lookup"><span data-stu-id="c9437-107">The <xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A> property returns the security environment under which the method executes.</span></span>  
  
-   <span data-ttu-id="c9437-108"><xref:System.ServiceModel.OperationContext.EndpointDispatcher%2A> Właściwości pobiera operacji <xref:System.ServiceModel.Dispatcher.EndpointDispatcher?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c9437-108">The <xref:System.ServiceModel.OperationContext.EndpointDispatcher%2A> property gets the operation's <xref:System.ServiceModel.Dispatcher.EndpointDispatcher?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="c9437-109"><xref:System.ServiceModel.OperationContext.Extensions%2A> Właściwość zwraca kolekcji rozszerzeń dla bieżącego <xref:System.ServiceModel.OperationContext>.</span><span class="sxs-lookup"><span data-stu-id="c9437-109">The <xref:System.ServiceModel.OperationContext.Extensions%2A> property returns an extension collection for the current <xref:System.ServiceModel.OperationContext>.</span></span>  
  
-   <span data-ttu-id="c9437-110"><xref:System.ServiceModel.OperationContext.Host%2A> Zwraca <xref:System.ServiceModel.ServiceHostBase> obiekt, który zarządza usługi.</span><span class="sxs-lookup"><span data-stu-id="c9437-110">The <xref:System.ServiceModel.OperationContext.Host%2A> property returns the <xref:System.ServiceModel.ServiceHostBase> object that manages the service.</span></span>  
  
-   <span data-ttu-id="c9437-111"><xref:System.ServiceModel.OperationContext.HasSupportingTokens%2A> Właściwość zwraca wartość wskazującą, czy metoda ma Obsługa tokenów, jeśli tak, <xref:System.ServiceModel.OperationContext.SupportingTokens%2A> właściwości pobiera je.</span><span class="sxs-lookup"><span data-stu-id="c9437-111">The <xref:System.ServiceModel.OperationContext.HasSupportingTokens%2A> property returns a value that indicates whether the method has supporting tokens, if so, the <xref:System.ServiceModel.OperationContext.SupportingTokens%2A> property gets them.</span></span>  
  
-   <span data-ttu-id="c9437-112"><xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A>, <xref:System.ServiceModel.OperationContext.IncomingMessageProperties%2A>, I <xref:System.ServiceModel.OperationContext.IncomingMessageVersion%2A> właściwości pobrać te elementy z komunikatu przychodzącego.</span><span class="sxs-lookup"><span data-stu-id="c9437-112">The <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A>, <xref:System.ServiceModel.OperationContext.IncomingMessageProperties%2A>, and <xref:System.ServiceModel.OperationContext.IncomingMessageVersion%2A> properties get these items from the incoming message.</span></span>  
  
-   <span data-ttu-id="c9437-113"><xref:System.ServiceModel.OperationContext.OperationCompleted> Zdarzenie jest wywoływane po ukończeniu tej operacji.</span><span class="sxs-lookup"><span data-stu-id="c9437-113">The <xref:System.ServiceModel.OperationContext.OperationCompleted> event is fired when the operation has completed.</span></span>  
  
-   <span data-ttu-id="c9437-114"><xref:System.ServiceModel.OperationContext.OutgoingMessageHeaders%2A> i <xref:System.ServiceModel.OperationContext.OutgoingMessageProperties%2A> właściwości pobrać te elementy dla komunikatu wychodzącego.</span><span class="sxs-lookup"><span data-stu-id="c9437-114">The <xref:System.ServiceModel.OperationContext.OutgoingMessageHeaders%2A> and <xref:System.ServiceModel.OperationContext.OutgoingMessageProperties%2A> properties get these items for the outbound message.</span></span>  
  
-   <span data-ttu-id="c9437-115"><xref:System.ServiceModel.OperationContext.RequestContext%2A> Zwraca <xref:System.ServiceModel.Channels.RequestContext> implementacji metody.</span><span class="sxs-lookup"><span data-stu-id="c9437-115">The <xref:System.ServiceModel.OperationContext.RequestContext%2A> property returns the <xref:System.ServiceModel.Channels.RequestContext> implementation for the method.</span></span>  
  
-   <span data-ttu-id="c9437-116"><xref:System.ServiceModel.OperationContext.InstanceContext%2A> Zwraca <xref:System.ServiceModel.InstanceContext> skojarzonych z operacją.</span><span class="sxs-lookup"><span data-stu-id="c9437-116">The <xref:System.ServiceModel.OperationContext.InstanceContext%2A> property returns the <xref:System.ServiceModel.InstanceContext> associated with the operation.</span></span>  
  
-   <span data-ttu-id="c9437-117"><xref:System.ServiceModel.OperationContext.SessionId%2A> Właściwość zwraca identyfikator sesji dla bieżącej kanału i obiektu.</span><span class="sxs-lookup"><span data-stu-id="c9437-117">The <xref:System.ServiceModel.OperationContext.SessionId%2A> property returns the session identifier for the current channel and object.</span></span>  
  
-   <span data-ttu-id="c9437-118"><xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> Metoda zwraca kanał wywołania zwrotnego do obiektu wywołującego w przypadku komunikacji dupleksowej.</span><span class="sxs-lookup"><span data-stu-id="c9437-118">The <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> method returns a callback channel to the caller in the case of duplex communication.</span></span>  
  
-   <span data-ttu-id="c9437-119"><xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A> Metody zatwierdza bieżącej transakcji.</span><span class="sxs-lookup"><span data-stu-id="c9437-119">The <xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A> method commits the current transaction.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9437-120">Poniższy przykład kodu wykorzystuje <xref:System.ServiceModel.OperationContext.Current%2A> właściwości i <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> metodę, aby uzyskać kanału do wywołującego z wewnątrz metody.</span><span class="sxs-lookup"><span data-stu-id="c9437-120">The following code example uses the <xref:System.ServiceModel.OperationContext.Current%2A> property and <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> method to obtain the channel back to the caller from within a method.</span></span> <span data-ttu-id="c9437-121">Wszystkie metody w tym przykładzie są metody jednokierunkowe włączenie usługi i klientom komunikowanie się w obu kierunkach niezależnie.</span><span class="sxs-lookup"><span data-stu-id="c9437-121">All methods in this example are one-way methods, enabling the service and the client to communicate in both directions independently.</span></span> <span data-ttu-id="c9437-122">W takim przypadku przykładowej aplikacji klienta oczekuje tylko jedno wywołanie zwrotne przed kończy działanie, ale innego klienta, na przykład w kliencie formularzy systemu Windows, mogą odbierać dowolną liczbę połączeń z usługi.</span><span class="sxs-lookup"><span data-stu-id="c9437-122">In this case, the example client application expects only one return call before it exits, but another client, for example a Windows Forms client, can receive any number of calls from the service.</span></span>  
  
 [!code-csharp[SCA.CallbackContract#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/services.cs#1)]
 [!code-vb[SCA.CallbackContract#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.callbackcontract/vb/services.vb#1)]  
  
 <span data-ttu-id="c9437-123">Implementuje następującego klienta `SampleDuplexHelloCallback` komunikat wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="c9437-123">The following client implements the `SampleDuplexHelloCallback` to receive the callback message.</span></span> <span data-ttu-id="c9437-124">Kontrakt wywołania zwrotnego importowanych nie jest taką samą nazwę co w usłudze, z powodu używania <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> właściwości w poprzednim przykładzie.</span><span class="sxs-lookup"><span data-stu-id="c9437-124">The imported callback contract is not the same name as the one in the service, due to the use of the <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> property in the preceding example.</span></span> <span data-ttu-id="c9437-125">Należy pamiętać, że klient nie czyni żadnych założeń o tym, czy lub może odbierać wywołania zwrotnego; wywołania zwrotnego serwera jest całkowicie niezależna od klienta wywołań wychodzących.</span><span class="sxs-lookup"><span data-stu-id="c9437-125">Note that the client makes no assumptions about whether or when it might receive a callback; the server callback is entirely independent of the client's outbound call.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9437-126">Na przykład, który używa <xref:System.ServiceModel.OperationContext> w scenariuszu klienta, zobacz <xref:System.ServiceModel.OperationContextScope>.</span><span class="sxs-lookup"><span data-stu-id="c9437-126">For an example that uses the <xref:System.ServiceModel.OperationContext> class in a client scenario, see <xref:System.ServiceModel.OperationContextScope>.</span></span>  
  
 [!code-csharp[SCA.CallbackContract#3](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/client.cs#3)]
 [!code-vb[SCA.CallbackContract#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.callbackcontract/vb/client.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OperationContext (System.ServiceModel.IContextChannel channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.IContextChannel channel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (channel As IContextChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OperationContext(System::ServiceModel::IContextChannel ^ channel);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="channel" Type="System.ServiceModel.IContextChannel" />
      </Parameters>
      <Docs>
        <param name="channel">
          <span data-ttu-id="c9437-127">
            <see cref="T:System.ServiceModel.IContextChannel" /> Użyty do utworzenia nowego klienta <see cref="T:System.ServiceModel.OperationContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-127">The <see cref="T:System.ServiceModel.IContextChannel" /> used to create a new client <see cref="T:System.ServiceModel.OperationContext" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9437-128">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.OperationContext" /> klasy, która używa określonego <see cref="T:System.ServiceModel.IContextChannel" /> w aplikacji klienckiej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-128">Initializes a new instance of the <see cref="T:System.ServiceModel.OperationContext" /> class that uses the specified <see cref="T:System.ServiceModel.IContextChannel" /> in a client application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9437-129">Użyj <xref:System.ServiceModel.OperationContext.%23ctor%2A> konstruktora, aby utworzyć nowy kontekst operacji w zakresie serwera proxy jest skojarzony, aby zmodyfikować wychodzącego elementów, takich jak nagłówki.</span><span class="sxs-lookup"><span data-stu-id="c9437-129">Use the <xref:System.ServiceModel.OperationContext.%23ctor%2A> constructor to create a new operation context within the scope of which the proxy is associated in order to modify outbound items such as headers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9437-130">Poniższy przykład przedstawia użycie <xref:System.ServiceModel.OperationContextScope> Aby utworzyć nowy kontekst w aplikacji klienta, aby można było dodać niestandardowego nagłówka do wysyłanej wiadomości.</span><span class="sxs-lookup"><span data-stu-id="c9437-130">The following example shows how to use the <xref:System.ServiceModel.OperationContextScope> to create a new context in a client application in order to add a custom header to the outgoing message.</span></span>  
  
 [!code-csharp[OperationContextScope#4](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontextscope/cs/client.cs#4)]
 [!code-vb[OperationContextScope#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontextscope/vb/client.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c9437-131">Kanał jest null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-131">The channel is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Channel">
      <MemberSignature Language="C#" Value="public System.ServiceModel.IContextChannel Channel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.IContextChannel Channel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.Channel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Channel As IContextChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::IContextChannel ^ Channel { System::ServiceModel::IContextChannel ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.IContextChannel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9437-132">Pobiera skojarzone z bieżącym kanału <see cref="T:System.ServiceModel.OperationContext" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-132">Gets the channel associated with the current <see cref="T:System.ServiceModel.OperationContext" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9437-133">
            <see cref="T:System.ServiceModel.IContextChannel" /> Skojarzone z bieżącym <see cref="T:System.ServiceModel.OperationContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-133">An <see cref="T:System.ServiceModel.IContextChannel" /> associated with the current <see cref="T:System.ServiceModel.OperationContext" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClaimsPrincipal">
      <MemberSignature Language="C#" Value="public System.Security.Claims.ClaimsPrincipal ClaimsPrincipal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Claims.ClaimsPrincipal ClaimsPrincipal" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.ClaimsPrincipal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClaimsPrincipal As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Claims::ClaimsPrincipal ^ ClaimsPrincipal { System::Security::Claims::ClaimsPrincipal ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9437-134">Pobiera podmiot zabezpieczeń opartego na oświadczeniach, skojarzony z operacją.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-134">Gets the claims-based principal associated with the operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9437-135">Podmiot zabezpieczeń oświadczeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-135">The claims principal.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.OperationContext Current { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.OperationContext Current" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Current As OperationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::OperationContext ^ Current { System::ServiceModel::OperationContext ^ get(); void set(System::ServiceModel::OperationContext ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.OperationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9437-136">Pobiera lub ustawia kontekst wykonania dla bieżącego wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-136">Gets or sets the execution context for the current thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9437-137">
            <see cref="T:System.ServiceModel.OperationContext" /> Reprezentujący kontekstu obsługi wiadomości i wykonywanie bieżącej metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-137">The <see cref="T:System.ServiceModel.OperationContext" /> that represents the messaging and execution context of the current method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9437-138">Użyj <xref:System.ServiceModel.OperationContext.Current%2A> właściwości uzyskać kontekstu wykonywania i komunikat dla bieżącej metody.</span><span class="sxs-lookup"><span data-stu-id="c9437-138">Use the <xref:System.ServiceModel.OperationContext.Current%2A> property to obtain the execution and message context for the current method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9437-139">Poniższy przykład kodu wykorzystuje <xref:System.ServiceModel.OperationContext.Current%2A> właściwości i <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> metodę w celu utworzenia kanału do wywołującego z wewnątrz metody.</span><span class="sxs-lookup"><span data-stu-id="c9437-139">The following code example uses the <xref:System.ServiceModel.OperationContext.Current%2A> property and <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> method to create a channel back to the caller from within a method.</span></span> <span data-ttu-id="c9437-140">Wszystkie metody w tym przykładzie są metody jednokierunkowe włączenie usługi i klientom komunikowanie się w obu kierunkach niezależnie.</span><span class="sxs-lookup"><span data-stu-id="c9437-140">All methods in this example are one-way methods, enabling the service and the client to communicate in both directions independently.</span></span> <span data-ttu-id="c9437-141">W takim przypadku przykładowej aplikacji klienta oczekuje tylko jedno wywołanie zwrotne przed kończy działanie, ale innego klienta, na przykład w kliencie formularzy systemu Windows, mogą odbierać dowolną liczbę połączeń z usługi.</span><span class="sxs-lookup"><span data-stu-id="c9437-141">In this case, the example client application expects only one return call before it exits, but another client, for example a Windows Forms client, can receive any number of calls from the service.</span></span>  
  
 [!code-csharp[SCA.CallbackContract#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/services.cs#1)]
 [!code-vb[SCA.CallbackContract#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.callbackcontract/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndpointDispatcher">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.EndpointDispatcher EndpointDispatcher { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.EndpointDispatcher EndpointDispatcher" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.EndpointDispatcher" />
      <MemberSignature Language="VB.NET" Value="Public Property EndpointDispatcher As EndpointDispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::EndpointDispatcher ^ EndpointDispatcher { System::ServiceModel::Dispatcher::EndpointDispatcher ^ get(); void set(System::ServiceModel::Dispatcher::EndpointDispatcher ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.EndpointDispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9437-142">Pobiera lub ustawia Dyspozytor punktu końcowego dla punktu końcowego, aby sprawdzić lub zmodyfikować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-142">Gets or sets the endpoint dispatcher for the endpoint to inspect or modify.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9437-143">Dyspozytor punktu końcowego dla punktu końcowego, aby sprawdzić lub zmodyfikować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-143">The endpoint dispatcher for the endpoint to inspect or modify.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Extensions">
      <MemberSignature Language="C#" Value="public System.ServiceModel.IExtensionCollection&lt;System.ServiceModel.OperationContext&gt; Extensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.IExtensionCollection`1&lt;class System.ServiceModel.OperationContext&gt; Extensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.Extensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Extensions As IExtensionCollection(Of OperationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::IExtensionCollection&lt;System::ServiceModel::OperationContext ^&gt; ^ Extensions { System::ServiceModel::IExtensionCollection&lt;System::ServiceModel::OperationContext ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.IExtensibleObject`1.Extensions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.IExtensionCollection&lt;System.ServiceModel.OperationContext&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9437-144">Pobiera kolekcję rozszerzeń usługi z bieżącego kontekstu wiadomości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-144">Gets the collection of service extensions from the current message context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9437-145">Kolekcja rozszerzeń <see cref="T:System.ServiceModel.OperationContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-145">A collection of extensions of <see cref="T:System.ServiceModel.OperationContext" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9437-146">Użyj <xref:System.ServiceModel.OperationContext.Extensions%2A> właściwość, aby uzyskać kolekcję rozszerzeniami <xref:System.ServiceModel.OperationContext> używane do modyfikowania kontekstu lub dodać niestandardowe stan.</span><span class="sxs-lookup"><span data-stu-id="c9437-146">Use the <xref:System.ServiceModel.OperationContext.Extensions%2A> property to obtain a collection of all extensions of the <xref:System.ServiceModel.OperationContext> used to modify the context or add custom state.</span></span> <span data-ttu-id="c9437-147">Aby uzyskać więcej informacji na temat rozszerzeń, zobacz [obiekty rozszerzalne](~/docs/framework/wcf/extending/extensible-objects.md).</span><span class="sxs-lookup"><span data-stu-id="c9437-147">For more information about extensions, see [Extensible Objects](~/docs/framework/wcf/extending/extensible-objects.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCallbackChannel&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetCallbackChannel&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetCallbackChannel&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationContext.GetCallbackChannel``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCallbackChannel(Of T) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetCallbackChannel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="c9437-148">Typ kanału użyta do wywołania zwrotnego do klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-148">The type of channel used to call back to the client.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="c9437-149">Pobiera kanału do wystąpienia klienta, który wywołał bieżącej operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-149">Gets a channel to the client instance that called the current operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9437-150">Kanał wystąpienie klienta, który wywołał operację typu określonego w <see cref="P:System.ServiceModel.ServiceContractAttribute.CallbackContract" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-150">A channel to the client instance that called the operation of the type specified in the <see cref="P:System.ServiceModel.ServiceContractAttribute.CallbackContract" /> property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9437-151">Wywołanie <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> właściwości uzyskanie kanału, który służy do wywoływania operacji w wystąpieniu klienta, który wywołuje usługę.</span><span class="sxs-lookup"><span data-stu-id="c9437-151">Call the <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> property to obtain a channel that you can use to call operations on the client instance that called the service.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9437-152">Poniższy przykład kodu wykorzystuje <xref:System.ServiceModel.OperationContext.Current%2A> właściwości i <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> metodę w celu utworzenia kanału do wywołującego od w ramach operacji.</span><span class="sxs-lookup"><span data-stu-id="c9437-152">The following code example uses the <xref:System.ServiceModel.OperationContext.Current%2A> property and <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> method to create a channel back to the caller from within a operation.</span></span> <span data-ttu-id="c9437-153">Wszystkie operacje w tym przykładzie są operacji jednokierunkowych włączenie usługi i klientom komunikowanie się w obu kierunkach niezależnie.</span><span class="sxs-lookup"><span data-stu-id="c9437-153">All operations in this example are one-way operations, enabling the service and the client to communicate in both directions independently.</span></span> <span data-ttu-id="c9437-154">W takim przypadku przykładowej aplikacji klienta oczekuje tylko jedno wywołanie zwrotne przed kończy działanie, ale innego klienta, na przykład w kliencie formularzy systemu Windows, mogą odbierać dowolną liczbę połączeń z usługi.</span><span class="sxs-lookup"><span data-stu-id="c9437-154">In this case, the example client application expects only one return call before it exits, but another client, for example a Windows Forms client, can receive any number of calls from the service.</span></span>  
  
 [!code-csharp[SCA.CallbackContract#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/services.cs#1)]
 [!code-vb[SCA.CallbackContract#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.callbackcontract/vb/services.vb#1)]  
  
 <span data-ttu-id="c9437-155">Implementuje następującego klienta `SampleDuplexHelloCallback` komunikat wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="c9437-155">The following client implements the `SampleDuplexHelloCallback` to receive the callback message.</span></span> <span data-ttu-id="c9437-156">Kontrakt wywołania zwrotnego importowanych nie jest taką samą nazwę co w usłudze, z powodu używania <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> właściwości w poprzednim przykładzie.</span><span class="sxs-lookup"><span data-stu-id="c9437-156">The imported callback contract is not the same name as the one in the service, due to the use of the <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> property in the preceding example.</span></span> <span data-ttu-id="c9437-157">Należy pamiętać, że klient nie czyni żadnych założeń o tym, czy lub może odbierać wywołania zwrotnego; wywołania zwrotnego serwera jest całkowicie niezależna od klienta wywołań wychodzących.</span><span class="sxs-lookup"><span data-stu-id="c9437-157">Note that the client makes no assumptions about whether or when it might receive a callback; the server callback is entirely independent of the client's outbound call.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9437-158">Na przykład, który używa <xref:System.ServiceModel.OperationContext> w scenariuszu klienta, zobacz <xref:System.ServiceModel.OperationContextScope>.</span><span class="sxs-lookup"><span data-stu-id="c9437-158">For an example that uses the <xref:System.ServiceModel.OperationContext> class in a client scenario, see <xref:System.ServiceModel.OperationContextScope>.</span></span>  
  
 [!code-csharp[SCA.CallbackContract#3](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/client.cs#3)]
 [!code-vb[SCA.CallbackContract#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.callbackcontract/vb/client.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasSupportingTokens">
      <MemberSignature Language="C#" Value="public bool HasSupportingTokens { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasSupportingTokens" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.HasSupportingTokens" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasSupportingTokens As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasSupportingTokens { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9437-159">Pobiera wartość wskazującą, czy komunikat przychodzący ma tokenami pomocniczymi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-159">Gets a value that indicates whether the incoming message has supporting tokens.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9437-160">
            <see langword="true" /> Jeśli komunikat przychodzący ma Obsługa tokenów; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-160">
              <see langword="true" /> if the incoming message has supporting tokens; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ServiceHostBase Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ServiceHostBase Host" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.Host" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Host As ServiceHostBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ServiceHostBase ^ Host { System::ServiceModel::ServiceHostBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceHostBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9437-161">Pobiera <see cref="T:System.ServiceModel.ServiceHost" /> dla bieżącego obiektu usługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-161">Gets the <see cref="T:System.ServiceModel.ServiceHost" /> for the current service object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9437-162">A <see cref="T:System.ServiceModel.ServiceHost" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-162">A <see cref="T:System.ServiceModel.ServiceHost" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncomingMessageHeaders">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.MessageHeaders IncomingMessageHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageHeaders IncomingMessageHeaders" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.IncomingMessageHeaders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncomingMessageHeaders As MessageHeaders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::MessageHeaders ^ IncomingMessageHeaders { System::ServiceModel::Channels::MessageHeaders ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageHeaders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9437-163">Pobiera nagłówki komunikatów przychodzących <see cref="T:System.ServiceModel.OperationContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-163">Gets the incoming message headers for the <see cref="T:System.ServiceModel.OperationContext" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9437-164">A <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> obiekt, który zawiera nagłówki komunikatów przychodzących.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-164">A <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> object that contains the incoming message headers.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9437-165">Ta właściwość służy do inspekcja lub modyfikowanie nagłówków żądań, które w operacji usługi lub nagłówków odpowiedzi, które na serwer proxy klienta.</span><span class="sxs-lookup"><span data-stu-id="c9437-165">Use this property to inspect or modify the request headers that arrive at a service operation or reply headers that arrive at a client proxy.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9437-166">Poniższy przykład kodu pokazuje, jak można odczytać nagłówki komunikatów przychodzących w operacji usługi.</span><span class="sxs-lookup"><span data-stu-id="c9437-166">The following code example shows how to read the incoming message headers in a service operation.</span></span>  
  
 [!code-csharp[OperationContextScope#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontextscope/cs/services.cs#2)]
 [!code-vb[OperationContextScope#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontextscope/vb/services.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncomingMessageProperties">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.MessageProperties IncomingMessageProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageProperties IncomingMessageProperties" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.IncomingMessageProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncomingMessageProperties As MessageProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::MessageProperties ^ IncomingMessageProperties { System::ServiceModel::Channels::MessageProperties ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9437-167">Pobiera właściwości komunikatu przychodzącego komunikatu w <see cref="T:System.ServiceModel.OperationContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-167">Gets the message properties for the incoming message in the <see cref="T:System.ServiceModel.OperationContext" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9437-168">A <see cref="T:System.ServiceModel.Channels.MessageProperties" /> obiekt, który zawiera właściwości wiadomości w komunikacie przychodzącym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-168">A <see cref="T:System.ServiceModel.Channels.MessageProperties" /> object that contains the message properties on the incoming message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9437-169">Ta właściwość służy do inspekcja lub modyfikowanie właściwości wiadomości komunikat żądania operacji usługi lub komunikat odpowiedzi w proxy klienta.</span><span class="sxs-lookup"><span data-stu-id="c9437-169">Use this property to inspect or modify the message properties for a request message in a service operation or a reply message in a client proxy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncomingMessageVersion">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.MessageVersion IncomingMessageVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageVersion IncomingMessageVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.IncomingMessageVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncomingMessageVersion As MessageVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::MessageVersion ^ IncomingMessageVersion { System::ServiceModel::Channels::MessageVersion ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9437-170">Pobiera wersję przychodzących wiadomości SOAP dla <see cref="T:System.ServiceModel.OperationContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-170">Gets the incoming SOAP message version for the <see cref="T:System.ServiceModel.OperationContext" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9437-171">Wersja protokołu SOAP wiadomości przychodzącej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-171">The SOAP version of the incoming message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9437-172">Ta właściwość służy do sprawdzenia wersja SOAP komunikat żądania, który dociera do operacji usługi lub wersja protokołu SOAP wiadomości odpowiedzi, który dociera do serwera proxy klienta.</span><span class="sxs-lookup"><span data-stu-id="c9437-172">Use this property to inspect the SOAP version of the request message that arrives at a service operation or the SOAP version of the reply message that arrives at a client proxy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceContext">
      <MemberSignature Language="C#" Value="public System.ServiceModel.InstanceContext InstanceContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.InstanceContext InstanceContext" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.InstanceContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceContext As InstanceContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::InstanceContext ^ InstanceContext { System::ServiceModel::InstanceContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.InstanceContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9437-173">Pobiera <see cref="T:System.ServiceModel.InstanceContext" /> obiekt, który zarządza bieżącego wystąpienia usługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-173">Gets the <see cref="T:System.ServiceModel.InstanceContext" /> object that manages the current service instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9437-174">
            <see cref="T:System.ServiceModel.InstanceContext" /> Obiektu bieżącej usługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-174">The <see cref="T:System.ServiceModel.InstanceContext" /> object for the current service.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9437-175">Użyj <xref:System.ServiceModel.OperationContext.InstanceContext%2A> właściwości dostępu do obiektu środowiska wykonawczego, która zarządza bieżącego obiektu usługi.</span><span class="sxs-lookup"><span data-stu-id="c9437-175">Use the <xref:System.ServiceModel.OperationContext.InstanceContext%2A> property to access the run-time object that manages the current service object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserContext">
      <MemberSignature Language="C#" Value="public bool IsUserContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUserContext" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.IsUserContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUserContext As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUserContext { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9437-176">Ta właściwość jest przeznaczona do użycia przez system i nie powinna być wywoływana przez użytkowników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-176">This property is intended for system use and should not be called by users.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9437-177">
            <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-177">
              <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler OperationCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler OperationCompleted" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.OperationContext.OperationCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OperationCompleted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ OperationCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9437-178">Występuje, gdy działanie zostało zakończone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-178">Occurs when the operation has completed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9437-179">Użyj <xref:System.ServiceModel.OperationContext.OperationCompleted> zdarzenia do usunięcia parametrów lub wartości zwracanej, jeśli ustawisz <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType> do `false`.</span><span class="sxs-lookup"><span data-stu-id="c9437-179">Use the <xref:System.ServiceModel.OperationContext.OperationCompleted> event to dispose parameters or a return value if you set <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType> to `false`.</span></span> <span data-ttu-id="c9437-180">Zwykle ustawiana <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType> do `false` zapobiegające [!INCLUDE[indigo2](~/includes/indigo2-md.md)] z wywołaniem <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> obiektów wartość parametru i wrócić.</span><span class="sxs-lookup"><span data-stu-id="c9437-180">Normally you set <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType> to `false` to prevent [!INCLUDE[indigo2](~/includes/indigo2-md.md)] from calling <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> on the parameter and return value objects.</span></span>  <span data-ttu-id="c9437-181">Jednak jeśli niektóre parametry muszą zostać zachowane, podczas gdy inni użytkownicy muszą zostać usunięte, to zdarzenie jest najlepszym miejscem, aby usunąć te parametry.</span><span class="sxs-lookup"><span data-stu-id="c9437-181">However, if some parameters need to be preserved while others need to be disposed, this event is the best place to dispose those parameters.</span></span>  
  
 <span data-ttu-id="c9437-182">Ponadto z powiązaniami dupleksowy, to zdarzenie można wysłać żądania w kanale wywołania zwrotnego po wysłaniu odpowiedzi dla bieżącej operacji.</span><span class="sxs-lookup"><span data-stu-id="c9437-182">Also, with duplex bindings, this event can be used to send a request on the callback channel after the reply for the current operation is sent.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9437-183">Jeśli obiekt wywołujący nasłuchuje <xref:System.ServiceModel.OperationContext.OperationCompleted?displayProperty=nameWithType> zdarzenia dla <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A?displayProperty=nameWithType> operacji, możliwe jest blok po odebraniu odpowiedzi.</span><span class="sxs-lookup"><span data-stu-id="c9437-183">If a caller is listening for the <xref:System.ServiceModel.OperationContext.OperationCompleted?displayProperty=nameWithType> event for an <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A?displayProperty=nameWithType> operation, it is possible to block when the response is received.</span></span> <span data-ttu-id="c9437-184">Odpowiednie sposobem obsługi to jest harmonogramu pracy na innym wątku, gdy <xref:System.ServiceModel.OperationContext.OperationCompleted> jest zostaje zgłoszone, a następnie natychmiast zwrócone z tej obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="c9437-184">The proper way to handle this is to schedule work on another thread when <xref:System.ServiceModel.OperationContext.OperationCompleted> is raised and then immediately return from that event handler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutgoingMessageHeaders">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.MessageHeaders OutgoingMessageHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageHeaders OutgoingMessageHeaders" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutgoingMessageHeaders As MessageHeaders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::MessageHeaders ^ OutgoingMessageHeaders { System::ServiceModel::Channels::MessageHeaders ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageHeaders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9437-185">Pobiera nagłówki komunikatów wychodzących dla aktywnej <see cref="T:System.ServiceModel.OperationContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-185">Gets the outgoing message headers for the active <see cref="T:System.ServiceModel.OperationContext" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9437-186">A <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> obiekt, który zawiera nagłówki komunikatów wychodzących aktywne <see cref="T:System.ServiceModel.OperationContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-186">A <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> object that contains outbound message headers for the active <see cref="T:System.ServiceModel.OperationContext" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9437-187">Ta właściwość służy do dodawania nagłówków odpowiedzi, które są wysyłane przez operację usługi lub nagłówków żądań, które są wysyłane przez [!INCLUDE[indigo2](~/includes/indigo2-md.md)] obiektu klienta.</span><span class="sxs-lookup"><span data-stu-id="c9437-187">Use this property to add reply headers that are sent by a service operation or request headers that are sent by a [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9437-188">Poniższy przykład przedstawia użycie <xref:System.ServiceModel.OperationContextScope> Aby utworzyć nowy kontekst w aplikacji klienta, aby można było dodać niestandardowego nagłówka do wysyłanej wiadomości.</span><span class="sxs-lookup"><span data-stu-id="c9437-188">The following example shows how to use the <xref:System.ServiceModel.OperationContextScope> to create a new context in a client application in order to add a custom header to the outgoing message.</span></span>  
  
 [!code-csharp[OperationContextScope#4](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontextscope/cs/client.cs#4)]
 [!code-vb[OperationContextScope#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontextscope/vb/client.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutgoingMessageProperties">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.MessageProperties OutgoingMessageProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageProperties OutgoingMessageProperties" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.OutgoingMessageProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutgoingMessageProperties As MessageProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::MessageProperties ^ OutgoingMessageProperties { System::ServiceModel::Channels::MessageProperties ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9437-189">Pobiera właściwości komunikatu dla komunikatu wychodzącego aktywności <see cref="T:System.ServiceModel.OperationContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-189">Gets the message properties for the outbound message in the active <see cref="T:System.ServiceModel.OperationContext" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9437-190">A <see cref="T:System.ServiceModel.Channels.MessageProperties" /> obiekt, który zawiera właściwości komunikatów dla komunikatu wychodzącego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-190">A <see cref="T:System.ServiceModel.Channels.MessageProperties" /> object that contains the message properties on the outbound message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9437-191">Ta właściwość służy do dodawania właściwości komunikatów dla komunikatu odpowiedzi z właściwości usługi operacji lub wiadomości dla wiadomości żądania z serwera proxy klienta.</span><span class="sxs-lookup"><span data-stu-id="c9437-191">Use this property to add message properties for a reply message from a service operation or message properties for a request message from a client proxy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestContext">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.RequestContext RequestContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.RequestContext RequestContext" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.RequestContext" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestContext As RequestContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::RequestContext ^ RequestContext { System::ServiceModel::Channels::RequestContext ^ get(); void set(System::ServiceModel::Channels::RequestContext ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.RequestContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9437-192">Pobiera lub ustawia <see cref="T:System.ServiceModel.Channels.RequestContext" /> implementacji dla tej metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-192">Gets or sets the <see cref="T:System.ServiceModel.Channels.RequestContext" /> implementation for this method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9437-193">
            <see cref="T:System.ServiceModel.Channels.RequestContext" /> Implementacji lub wartość null, jeśli nie jest kontekst żądania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-193">An <see cref="T:System.ServiceModel.Channels.RequestContext" /> implementation, or null if there is no request context.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9437-194">Operacje jednokierunkowe bez kontekstu żądania.</span><span class="sxs-lookup"><span data-stu-id="c9437-194">One-way operations are do not have a request context.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceSecurityContext">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ServiceSecurityContext ServiceSecurityContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ServiceSecurityContext ServiceSecurityContext" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.ServiceSecurityContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceSecurityContext As ServiceSecurityContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ServiceSecurityContext ^ ServiceSecurityContext { System::ServiceModel::ServiceSecurityContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceSecurityContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9437-195">Pobiera lub ustawia <see cref="T:System.ServiceModel.ServiceSecurityContext" /> w ramach którego ta metoda jest wykonywana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-195">Gets or sets the <see cref="T:System.ServiceModel.ServiceSecurityContext" /> within which this method executes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9437-196">A <see cref="T:System.ServiceModel.ServiceSecurityContext" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-196">A <see cref="T:System.ServiceModel.ServiceSecurityContext" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionId">
      <MemberSignature Language="C#" Value="public string SessionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SessionId" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.SessionId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SessionId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SessionId { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9437-197">Pobiera <see cref="T:System.String" /> używany do identyfikowania bieżącej sesji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-197">Gets the <see cref="T:System.String" /> used to identify the current session.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9437-198">Identyfikator sesji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-198">The session identifier.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTransactionComplete">
      <MemberSignature Language="C#" Value="public void SetTransactionComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTransactionComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationContext.SetTransactionComplete" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetTransactionComplete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetTransactionComplete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c9437-199">Zatwierdza aktualnie wykonywane transakcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-199">Commits the currently executing transaction.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9437-200">Ta opcja jest przydatna w operacji, które ustalają <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType> do `false`.</span><span class="sxs-lookup"><span data-stu-id="c9437-200">This is only useful in operations that set <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType> to `false`.</span></span> <span data-ttu-id="c9437-201">Zazwyczaj usług w tym na niektórych, ale nie wszystkie operacje.</span><span class="sxs-lookup"><span data-stu-id="c9437-201">Typically, services do this on some but not all operations.</span></span> <span data-ttu-id="c9437-202">Gdy <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType> ma wartość false, automatycznie zakończenia operacji.</span><span class="sxs-lookup"><span data-stu-id="c9437-202">When <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType> is false the transaction completes automatically.</span></span> <span data-ttu-id="c9437-203">Użyj <xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A> w przypadkach, gdy nie jest możliwe określenie w czasie projektowania, czy operacja musi ukończyć transakcji.</span><span class="sxs-lookup"><span data-stu-id="c9437-203">Use <xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A> in cases where it is not possible to determine at design-time whether an operation needs to complete the transaction.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c9437-204">Nie ma żadnej transakcji w kontekście.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-204">There is no transaction in the context.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SupportingTokens">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.ServiceModel.Security.SupportingTokenSpecification&gt; SupportingTokens { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Security.SupportingTokenSpecification&gt; SupportingTokens" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.SupportingTokens" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportingTokens As ICollection(Of SupportingTokenSpecification)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::ServiceModel::Security::SupportingTokenSpecification ^&gt; ^ SupportingTokens { System::Collections::Generic::ICollection&lt;System::ServiceModel::Security::SupportingTokenSpecification ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.ServiceModel.Security.SupportingTokenSpecification&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9437-205">Pobiera <see cref="T:System.Collections.Generic.ICollection`1" /> typu <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-205">Gets a <see cref="T:System.Collections.Generic.ICollection`1" /> of type <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9437-206">Kolekcja tokenów zabezpieczających.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9437-206">A collection of security tokens.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>