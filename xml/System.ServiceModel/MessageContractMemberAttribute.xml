<Type Name="MessageContractMemberAttribute" FullName="System.ServiceModel.MessageContractMemberAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2477fcde8a323ad416ab68adb712132f39a7029e" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56771182" /></Metadata><TypeSignature Language="C#" Value="public abstract class MessageContractMemberAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MessageContractMemberAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.MessageContractMemberAttribute" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MessageContractMemberAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageContractMemberAttribute abstract : Attribute" />
  <TypeSignature Language="F#" Value="type MessageContractMemberAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="dde61-101">Deklaruje podstawowy elementy <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" /> i <see cref="T:System.ServiceModel.MessageHeaderAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="dde61-101">Declares the base members for <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" /> and <see cref="T:System.ServiceModel.MessageHeaderAttribute" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dde61-102">Ta klasa zawiera właściwości wspólne dla wszystkich części komunikatu protokołu SOAP.</span><span class="sxs-lookup"><span data-stu-id="dde61-102">This class contains properties common to all parts of a SOAP message.</span></span> <span data-ttu-id="dde61-103">Na przykład wszystkie części ma nazwę i obszar nazw i potencjalnie stopień zastosowano zabezpieczenia.</span><span class="sxs-lookup"><span data-stu-id="dde61-103">For example, all parts have a name and a namespace, and potentially a level of security applied.</span></span>  
  
 <span data-ttu-id="dde61-104">Aby uzyskać informacji na temat kontrolowania serializacji zawartość treści protokołu SOAP bez modyfikowania samego koperty protokołu SOAP domyślne, zobacz <xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=nameWithType>, [Określanie transferu danych w kontraktach usług](~/docs/framework/wcf/feature-details/specifying-data-transfer-in-service-contracts.md), i [przy użyciu danych Kontrakty](~/docs/framework/wcf/feature-details/using-data-contracts.md).</span><span class="sxs-lookup"><span data-stu-id="dde61-104">For information on controlling the serialization of the contents of a SOAP body without modifying the default SOAP envelope itself, see <xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=nameWithType>, [Specifying Data Transfer in Service Contracts](~/docs/framework/wcf/feature-details/specifying-data-transfer-in-service-contracts.md), and [Using Data Contracts](~/docs/framework/wcf/feature-details/using-data-contracts.md).</span></span>  
  
 <span data-ttu-id="dde61-105">Aby uzyskać więcej informacji na temat tworzenia kontrakty komunikatów, zobacz [za pomocą kontraktów komunikatu](~/docs/framework/wcf/feature-details/using-message-contracts.md).</span><span class="sxs-lookup"><span data-stu-id="dde61-105">For more information about creating message contracts, see [Using Message Contracts](~/docs/framework/wcf/feature-details/using-message-contracts.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dde61-106">Poniższe przykłady kodu ilustrują kontraktu niestandardowy komunikat, który używa <xref:System.ServiceModel.MessageContractAttribute>, <xref:System.ServiceModel.MessageHeaderAttribute>, i <xref:System.ServiceModel.MessageBodyMemberAttribute> atrybutów (której wszystkie dziedziczyć <xref:System.ServiceModel.MessageContractMemberAttribute>) do tworzenia niestandardowych wpisane wiadomości do użycia w ramach operacji.</span><span class="sxs-lookup"><span data-stu-id="dde61-106">The following code examples demonstrate a custom message contract that uses the <xref:System.ServiceModel.MessageContractAttribute>, <xref:System.ServiceModel.MessageHeaderAttribute>, and <xref:System.ServiceModel.MessageBodyMemberAttribute> attributes (which all inherit from <xref:System.ServiceModel.MessageContractMemberAttribute>) to create custom typed messages to use in operations.</span></span> <span data-ttu-id="dde61-107">W tym przypadku istnieją trzy elementy członkowskie, które są serializowane w treści elementu komunikatu protokołu SOAP: `sourceAccount`, `targetAccount`i `amount` wartości (który jest serializowany do elementu o nazwie `transactionAmount`).</span><span class="sxs-lookup"><span data-stu-id="dde61-107">In this case, there are three members that are serialized into the body element of the SOAP message: `sourceAccount`, `targetAccount`, and the `amount` value, (which is serialized into an element with the name `transactionAmount`).</span></span> <span data-ttu-id="dde61-108">Ponadto `IsAudited` element nagłówka SOAP znajduje się w `http://schemas.contosobank.com/auditing/2005` przestrzeni nazw i `sourceAccount` zostaje zaszyfrowany i podpisany cyfrowo.</span><span class="sxs-lookup"><span data-stu-id="dde61-108">In addition, the `IsAudited` SOAP header element resides in the `http://schemas.contosobank.com/auditing/2005` namespace, and `sourceAccount` is encrypted and digitally signed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dde61-109">`Operation` i `Account` typy muszą mieć kontraktu danych.</span><span class="sxs-lookup"><span data-stu-id="dde61-109">The `Operation` and `Account` types must have a data contract.</span></span>  
  
```csharp  
[MessageContract]  
public class BankingTransaction  
{  
  [MessageHeader]   
  public Operation operation;  
  [MessageHeader(Namespace="http://schemas.contosobank.com/auditing/2005")]   
  public bool IsAudited;  
  [MessageBody(ProtectionLevel=ProtectionLevel.EncryptAndSign)]   
  public Account sourceAccount;  
  [MessageBody]   
  public Account targetAccount;  
  [MessageBody(Name="transactionAmount")]   
  public int amount;  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MessageContractMemberAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MessageContractMemberAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MessageContractMemberAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dde61-110">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.MessageContractMemberAttribute" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="dde61-110">Initializes a new instance of the <see cref="T:System.ServiceModel.MessageContractMemberAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasProtectionLevel">
      <MemberSignature Language="C#" Value="public bool HasProtectionLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageContractMemberAttribute.HasProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasProtectionLevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasProtectionLevel { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasProtectionLevel : bool" Usage="System.ServiceModel.MessageContractMemberAttribute.HasProtectionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dde61-111">W przypadku przesłonięcia w klasie pochodnej pobiera wartość wskazującą, czy element członkowski ma przypisany poziom ochrony.</span><span class="sxs-lookup"><span data-stu-id="dde61-111">When overridden in a derived class, gets a value that indicates whether the member has a protection level assigned.</span></span></summary>
        <value><span data-ttu-id="dde61-112"><see langword="true" /> Jeśli element członkowski ma poziom ochrony; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dde61-112"><see langword="true" /> if the member has a protection level; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageContractMemberAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.ServiceModel.MessageContractMemberAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dde61-113">Określa nazwę elementu, który odnosi się do tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="dde61-113">Specifies the name of the element that corresponds to this member.</span></span></summary>
        <value><span data-ttu-id="dde61-114">Nazwa elementu, który odnosi się do tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="dde61-114">The name of the element that corresponds to this member.</span></span> <span data-ttu-id="dde61-115">Ten ciąg musi być prawidłową nazwą elementu XML.</span><span class="sxs-lookup"><span data-stu-id="dde61-115">This string must be a valid XML element name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dde61-116">Poniższe przykłady kodu ilustrują kontraktu niestandardowy komunikat, który używa <xref:System.ServiceModel.MessageContractAttribute>, <xref:System.ServiceModel.MessageHeaderAttribute>, i <xref:System.ServiceModel.MessageBodyMemberAttribute> atrybutów do tworzenia niestandardowych, silnie typizowane wiadomości do użycia jako parametry.</span><span class="sxs-lookup"><span data-stu-id="dde61-116">The following code examples demonstrate a custom message contract that uses the <xref:System.ServiceModel.MessageContractAttribute>, <xref:System.ServiceModel.MessageHeaderAttribute>, and <xref:System.ServiceModel.MessageBodyMemberAttribute> attributes to create custom, strongly-typed messages to use as parameters.</span></span> <span data-ttu-id="dde61-117">W tym przypadku istnieją trzy elementy członkowskie danych, które są serializowane w treści elementu komunikatu protokołu SOAP: `sourceAccount`, `targetAccount`i `amount` wartości (który jest serializowany do elementu o nazwie `transactionAmount`).</span><span class="sxs-lookup"><span data-stu-id="dde61-117">In this case, there are three data members that are serialized into the body element of the SOAP message: `sourceAccount`, `targetAccount`, and the `amount` value, (which is serialized into an element with the name `transactionAmount`).</span></span> <span data-ttu-id="dde61-118">Ponadto `IsAudited` element nagłówka SOAP znajduje się w `http://schemas.contosobank.com/auditing/2005` przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="dde61-118">In addition, the `IsAudited` SOAP header element resides in the `http://schemas.contosobank.com/auditing/2005` namespace.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dde61-119">`Operation` i `Account` typy muszą również mieć kontraktu danych.</span><span class="sxs-lookup"><span data-stu-id="dde61-119">The `Operation` and `Account` types must also have a data contract.</span></span>  
  
```csharp  
[MessageContract]  
public class BankingTransaction  
{  
  [MessageHeader] public Operation operation;  
  [MessageHeader(Namespace="http://schemas.contosobank.com/auditing/2005")] public bool IsAudited;  
  [MessageBody] public Account sourceAccount;  
  [MessageBody] public Account targetAccount;  
  [MessageBody(Name="transactionAmount")] public int amount;  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageContractMemberAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.ServiceModel.MessageContractMemberAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dde61-120">Określa przestrzeń nazw elementu, który odnosi się do tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="dde61-120">Specifies the namespace of the element that corresponds to this member.</span></span></summary>
        <value><span data-ttu-id="dde61-121">Identyfikator URI przestrzeni nazw elementu, który odnosi się do tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="dde61-121">A namespace URI of the element that corresponds to this member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dde61-122">Poniższe przykłady kodu ilustrują kontraktu niestandardowy komunikat, który używa <xref:System.ServiceModel.MessageContractAttribute>, <xref:System.ServiceModel.MessageHeaderAttribute>, i <xref:System.ServiceModel.MessageBodyMemberAttribute> atrybutów (której wszystkie dziedziczyć <xref:System.ServiceModel.MessageContractMemberAttribute>) do tworzenia niestandardowych wpisane wiadomości do użycia w ramach operacji.</span><span class="sxs-lookup"><span data-stu-id="dde61-122">The following code examples demonstrate a custom message contract that uses the <xref:System.ServiceModel.MessageContractAttribute>, <xref:System.ServiceModel.MessageHeaderAttribute>, and <xref:System.ServiceModel.MessageBodyMemberAttribute> attributes (which all inherit from <xref:System.ServiceModel.MessageContractMemberAttribute>) to create custom typed messages to use in operations.</span></span> <span data-ttu-id="dde61-123">W tym przypadku istnieją trzy elementy członkowskie, które są serializowane w treści elementu komunikatu protokołu SOAP: `sourceAccount`, `targetAccount`i `amount` wartości (który jest serializowany do elementu o nazwie `transactionAmount`).</span><span class="sxs-lookup"><span data-stu-id="dde61-123">In this case, there are three members that are serialized into the body element of the SOAP message: `sourceAccount`, `targetAccount`, and the `amount` value, (which is serialized into an element with the name `transactionAmount`).</span></span> <span data-ttu-id="dde61-124">Ponadto `IsAudited` element nagłówka SOAP znajduje się w `http://schemas.contosobank.com/auditing/2005` przestrzeni nazw i `sourceAccount` zostaje zaszyfrowany i podpisany cyfrowo.</span><span class="sxs-lookup"><span data-stu-id="dde61-124">In addition, the `IsAudited` SOAP header element resides in the `http://schemas.contosobank.com/auditing/2005` namespace, and `sourceAccount` is encrypted and digitally signed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dde61-125">`Operation` i `Account` typy muszą mieć kontraktu danych.</span><span class="sxs-lookup"><span data-stu-id="dde61-125">The `Operation` and `Account` types must have a data contract.</span></span>  
  
```csharp  
[MessageContract]  
public class BankingTransaction  
{  
  [MessageHeader] public Operation operation;  
  [MessageHeader(Namespace="http://schemas.contosobank.com/auditing/2005")] public bool IsAudited;  
  [MessageBody] public Account sourceAccount;  
  [MessageBody] public Account targetAccount;  
  [MessageBody(Name="transactionAmount")] public int amount;  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionLevel">
      <MemberSignature Language="C#" Value="public System.Net.Security.ProtectionLevel ProtectionLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.ProtectionLevel ProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectionLevel As ProtectionLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::ProtectionLevel ProtectionLevel { System::Net::Security::ProtectionLevel get(); void set(System::Net::Security::ProtectionLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ProtectionLevel : System.Net.Security.ProtectionLevel with get, set" Usage="System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Security.ProtectionLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dde61-126">Określa, czy mają być przekazywane jako element członkowski — podpisane, lub podpisane i szyfrowane.</span><span class="sxs-lookup"><span data-stu-id="dde61-126">Specifies whether the member is to be transmitted as-is, signed, or signed and encrypted.</span></span></summary>
        <value><span data-ttu-id="dde61-127">Jedną z <see cref="T:System.Net.Security.ProtectionLevel" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="dde61-127">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values.</span></span> <span data-ttu-id="dde61-128">Wartość domyślna to <see cref="F:System.Net.Security.ProtectionLevel.None" />.</span><span class="sxs-lookup"><span data-stu-id="dde61-128">The default is <see cref="F:System.Net.Security.ProtectionLevel.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dde61-129">Aby korzystanie z <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A> właściwości albo <xref:System.ServiceModel.MessageHeaderAttribute> lub <xref:System.ServiceModel.MessageBodyMemberAttribute> atrybutów należy poprawnie skonfigurować powiązania i zachowania.</span><span class="sxs-lookup"><span data-stu-id="dde61-129">To make use of the <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A> property in either the <xref:System.ServiceModel.MessageHeaderAttribute> or <xref:System.ServiceModel.MessageBodyMemberAttribute> attributes you must properly configure the binding and behaviors.</span></span> <span data-ttu-id="dde61-130">Jeśli te funkcje zabezpieczeń są używane bez odpowiedniej konfiguracji (na przykład za pomocą <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType> z części komunikatu, bez podawania poświadczeń zabezpieczeń) w czasie wykonywania jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="dde61-130">If these security features are used without a proper configuration (for example, using <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType> with a message part without supplying security credentials) an exception is thrown at run time.</span></span>  
  
 <span data-ttu-id="dde61-131">Ponadto poziom ochrony jest określany dla każdego nagłówka indywidualnie.</span><span class="sxs-lookup"><span data-stu-id="dde61-131">In addition, the protection level is determined for each header individually.</span></span> <span data-ttu-id="dde61-132">Jednak treści protokołu SOAP ma poziom ochrony tylko jeden, niezależnie od liczby części treści.</span><span class="sxs-lookup"><span data-stu-id="dde61-132">However, the SOAP body has only one protection level, regardless of the number of body parts.</span></span> <span data-ttu-id="dde61-133">Poziom ochrony treści jest określana przez najwyższy <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A> wartość właściwości wszystkie części treści.</span><span class="sxs-lookup"><span data-stu-id="dde61-133">The protection level of the body is determined by the highest <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A> property value of all the body parts.</span></span> <span data-ttu-id="dde61-134">Na przykład rozważmy następujące klasy:</span><span class="sxs-lookup"><span data-stu-id="dde61-134">For example, consider the following class:</span></span>  
  
```csharp  
[MessageContract]  
public class PatientRecord  
{  
   [MessageHeader(ProtectionLevel=None)] public int recordID;  
   [MessageHeader(ProtectionLevel=Sign)] public string patientName;  
   [MessageHeader(ProtectionLevel=EncryptAndSign)] public string SSN;  
   [MessageBody(ProtectionLevel=None)] public string comments;  
   [MessageBody(ProtectionLevel=Sign)] public string diagnosis;  
   [MessageBody(ProtectionLevel=EncryptAndSign)] public string medicalHistory;  
}  
```  
  
 <span data-ttu-id="dde61-135">W tym przykładzie `recordID` nagłówka nie są chronione, `patientName` jest podpisany, a `SSN` zostaje zaszyfrowany i podpisany.</span><span class="sxs-lookup"><span data-stu-id="dde61-135">In this example, the `recordID` header is not protected, `patientName` is signed, and `SSN` is encrypted and signed.</span></span> <span data-ttu-id="dde61-136">Brak części treści co najmniej jeden `medicalHistory`, za pomocą <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType> i w związku z tym treść cały komunikat zostaje zaszyfrowany i podpisany, nawet jeśli `comments` i `diagnosis` części treści Określ niższe poziomy ochrony.</span><span class="sxs-lookup"><span data-stu-id="dde61-136">There is at least one body part, `medicalHistory`, with <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType> and thus the entire message body is encrypted and signed, even though the `comments` and `diagnosis` body parts specify lower protection levels.</span></span>  
  
 <span data-ttu-id="dde61-137">Zachowania w zakresie ochrony w czasie wykonywania jest kombinacją wartości poziomu ochrony, ustaw następujące właściwości.</span><span class="sxs-lookup"><span data-stu-id="dde61-137">The protection behavior at runtime is the combination of the protection-level values set on the following properties.</span></span> <span data-ttu-id="dde61-138">Te właściwości mają hierarchiczną strukturę.</span><span class="sxs-lookup"><span data-stu-id="dde61-138">These properties have a hierarchical structure.</span></span> <span data-ttu-id="dde61-139">Ustawienie wartości peryferyjnych ustanawia ustawienie domyślne dla wszystkich zakresów mniejszą niż, chyba że jawnie ustawiono inną wartość dla węższy zakres.</span><span class="sxs-lookup"><span data-stu-id="dde61-139">Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set.</span></span> <span data-ttu-id="dde61-140">W tym przypadku zewnętrzny wartość pozostaje domyślnego dla wszystkich mniejszą niż zakresów, z wyjątkiem ustawione to inaczej.</span><span class="sxs-lookup"><span data-stu-id="dde61-140">In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.</span></span>  
  
 <span data-ttu-id="dde61-141">Na przykład jeśli <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType> ustawiono <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType> i inne zakresy mniejszą niż ma ustawienia poziomu ochrony, wszystkie komunikaty w kontrakt operacji czy zaszyfrowana i podpisana.</span><span class="sxs-lookup"><span data-stu-id="dde61-141">For example, if <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType> is set to <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed.</span></span> <span data-ttu-id="dde61-142">Jeśli jednak ma jedną z tych operacji <xref:System.ServiceModel.OperationContractAttribute> równa <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType>, następnie komunikatów dla tej operacji są podpisane, ale wszystkie inne komunikaty w kontrakcie czy zaszyfrowana i podpisana.</span><span class="sxs-lookup"><span data-stu-id="dde61-142">If, however, one of those operations has the <xref:System.ServiceModel.OperationContractAttribute> set to <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed.</span></span>  
  
 <span data-ttu-id="dde61-143">Aby uzyskać szczegółowe informacje dotyczące poziomów ochrony i ich wartości domyślne i zakresów, zobacz [zrozumieć poziom ochrony](~/docs/framework/wcf/understanding-protection-level.md).</span><span class="sxs-lookup"><span data-stu-id="dde61-143">For details about protection levels and their assumptions and scopes, see [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).</span></span>  
  
 <span data-ttu-id="dde61-144">Zakresy, w których te wartości są ustawiane są następujące:</span><span class="sxs-lookup"><span data-stu-id="dde61-144">The scopes at which these values are set are:</span></span>  
  
 <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.MessageContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="dde61-145"><xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> Właściwość <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dde61-145">The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> property on <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="dde61-146"><xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> Właściwość <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dde61-146">The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> property on <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="dde61-147">Jeśli występuje żaden poziom ochrony jawnie określone w umowie bazowego powiązanie obsługuje zabezpieczenia, (zarówno na poziomie transportu lub wiadomości), poziom skuteczną ochronę całej umowy jest <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dde61-147">When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>.</span></span> <span data-ttu-id="dde61-148">Jeśli wiązanie nie obsługuje zabezpieczeń (takich jak <xref:System.ServiceModel.BasicHttpBinding>), obowiązującą <xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType> jest <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType> dla całej umowy.</span><span class="sxs-lookup"><span data-stu-id="dde61-148">If the binding does not support security (such as <xref:System.ServiceModel.BasicHttpBinding>), the effective <xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType> is <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType> for the whole contract.</span></span> <span data-ttu-id="dde61-149">Wynik jest, że zależą od powiązania punktu końcowego, klienci mogą wymagają różnych ochrony zabezpieczeń na poziomie komunikatu lub transportu, nawet wtedy, gdy kontrakt Określa <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dde61-149">The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>