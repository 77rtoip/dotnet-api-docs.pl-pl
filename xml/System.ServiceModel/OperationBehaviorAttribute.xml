<Type Name="OperationBehaviorAttribute" FullName="System.ServiceModel.OperationBehaviorAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="362ab32f223eb767fc048a2710ba78c05b09a279" /><Meta Name="ms.sourcegitcommit" Value="e7974886b08aa83a8fb461e8550f31a7d4331ee3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="07/23/2019" /><Meta Name="ms.locfileid" Value="68392466" /></Metadata><TypeSignature Language="C#" Value="public sealed class OperationBehaviorAttribute : Attribute, System.ServiceModel.Description.IOperationBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OperationBehaviorAttribute extends System.Attribute implements class System.ServiceModel.Description.IOperationBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.OperationBehaviorAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OperationBehaviorAttribute&#xA;Inherits Attribute&#xA;Implements IOperationBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class OperationBehaviorAttribute sealed : Attribute, System::ServiceModel::Description::IOperationBehavior" />
  <TypeSignature Language="F#" Value="type OperationBehaviorAttribute = class&#xA;    inherit Attribute&#xA;    interface IOperationBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IOperationBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Określa lokalne zachowanie metody usługi.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj atrybutu <xref:System.ServiceModel.OperationBehaviorAttribute> , aby określić, jakie zachowanie wykonania operacji zostało wykonane. (Aby określić zachowanie wykonywania na poziomie usługi, należy użyć <xref:System.ServiceModel.ServiceBehaviorAttribute> atrybutu).  
  
> [!NOTE]
>  Możesz również użyć <xref:System.ServiceModel.OperationBehaviorAttribute> , aby skonfigurować operację kontraktu wywołania zwrotnego w aplikacji klienckiej dupleksowej. Gdy jest używany w operacji wywołania zwrotnego <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> , właściwość musi <xref:System.ServiceModel.ReleaseInstanceMode.None> być lub <xref:System.InvalidOperationException> wyjątek jest zgłaszany w czasie wykonywania.  
  
 Ten <xref:System.ServiceModel.OperationBehaviorAttribute> atrybut jest funkcją modelu programowania w Windows Communication Foundation (WCF), która umożliwia korzystanie z typowych funkcji, które w przeciwnym wypadku deweloperzy muszą zaimplementować siebie.  
  
-   Właściwość <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A> określa, czy obiekty parametrów przenoszone do operacji są usuwane po zakończeniu operacji.  
  
-   <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> Właściwość określa, czy transakcja, w której wykonywana jest metoda, jest automatycznie zatwierdzana w przypadku braku nieobsłużonych wyjątków.  
  
-   Właściwość <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> określa, czy metoda musi być wykonywana w obrębie transakcji.  
  
-   <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> Właściwość określa, czy operacja usługi może, musi, czy nie może personifikować tożsamości obiektu wywołującego.  
  
-   Właściwość <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> określa, kiedy obiekty usługi są odtwarzane podczas procesu wywołania metody.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje operację, która jest wykonywana w ramach obowiązkowej transakcji rozproszonej. Właściwość wskazuje, że metoda jest wykonywana w ramach transakcji wywołującej <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> i Właściwość wskazuje, że jeśli wystąpią Nieobsłużone wyjątki, transakcja zostanie zatwierdzona automatycznie. <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> Jeśli wystąpi nieobsługiwany wyjątek, transakcja zostanie przerwana.  
  
 [!code-csharp[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_transaction/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_transaction/vb/services.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OperationBehaviorAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OperationBehaviorAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konstruktor bez parametrów tworzy wystąpienie klasy z następującymi wartościami domyślnymi:  
  
-   <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> Właściwość jest`true`.  
  
-   <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> Właściwość jest`false`.  
  
-   <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> Właściwość jest<xref:System.ServiceModel.ReleaseInstanceMode.None>.  
  
-   <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> Ma<xref:System.ServiceModel.ImpersonationOption.NotAllowed>wartość.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoDisposeParameters">
      <MemberSignature Language="C#" Value="public bool AutoDisposeParameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoDisposeParameters" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoDisposeParameters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoDisposeParameters { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoDisposeParameters : bool with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy parametry mają być usuwane automatycznie.</summary>
        <value><see langword="true" />Jeśli parametry mają być automatycznie usuwane; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość określa, czy usługa usuwa wszystkie parametry jednorazowe (parametry wejściowe, wyjściowe lub referencyjne), które zostały utworzone podczas przetwarzania komunikatu. Wartość domyślna to `true`. Ustaw tę właściwość na `false` , jeśli chcesz uniemożliwić systemowi usuwanie zasobów i buforować je w razie potrzeby.  
  
 Na przykład jeśli <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A> jest `false`, nadawca jest odpowiedzialny za zamknięcie strumienia po stronie wysyłającej.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Impersonation">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ImpersonationOption Impersonation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.ImpersonationOption Impersonation" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.Impersonation" />
      <MemberSignature Language="VB.NET" Value="Public Property Impersonation As ImpersonationOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ImpersonationOption Impersonation { System::ServiceModel::ImpersonationOption get(); void set(System::ServiceModel::ImpersonationOption value); };" />
      <MemberSignature Language="F#" Value="member this.Impersonation : System.ServiceModel.ImpersonationOption with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.Impersonation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ImpersonationOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą poziom personifikacji wywołującego obsługiwany przez operację.</summary>
        <value>Jedna z <see cref="T:System.ServiceModel.ImpersonationOption" /> wartości. Wartość domyślna to <see cref="F:System.ServiceModel.ImpersonationOption.NotAllowed" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości (wraz z konfiguracją powiązania, która obsługuje personifikację), aby włączyć określone metody (te oznaczone <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> właściwością ustawioną <xref:System.ServiceModel.ImpersonationOption.Required>na <xref:System.ServiceModel.ImpersonationOption.Allowed> lub) do wykonania w ramach tożsamości obiektu wywołującego. <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> Aby uzyskać szczegółowe informacje, w tym jak personifikacja <xref:System.ServiceModel.ImpersonationOption.Allowed> jest wykonywana przy <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations%2A?displayProperty=nameWithType> użyciu razem z właściwością, zobacz [ [delegowanie i personifikacja](~/docs/framework/wcf/feature-details/delegation-and-impersonation-with-wcf.md) oraz instrukcje: Personifikuj klienta w usłudze](~/docs/framework/wcf/how-to-impersonate-a-client-on-a-service.md).  
  
> [!NOTE]
>  Podczas programowego dodawania punktu końcowego usługi, który wykonuje personifikację, należy użyć jednej z <xref:System.ServiceModel.ServiceHost.AddServiceEndpoint%2A> metod <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A?displayProperty=nameWithType> lub metody w celu poprawnego załadowania kontraktu do <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> nowego obiektu. Korzystanie z pliku konfiguracji nie wymaga żadnych dodatkowych kroków.  
  
 Jeśli personifikacja nie jest obsługiwana, mogą istnieć określone scenariusze. Aby uzyskać więcej informacji, zobacz [scenariusze nieobsługiwane](~/docs/framework/wcf/feature-details/unsupported-scenarios.md).  
  
   
  
## Examples  
 Poniższy przykład kodu usługi wymaga personifikacji przez ustawienie <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> właściwości na. <xref:System.ServiceModel.ImpersonationOption.Required>  
  
 [!code-csharp[OperationBehaviorAttribute_Impersonation#1](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_impersonation/cs/services.cs#1)]
 [!code-vb[OperationBehaviorAttribute_Impersonation#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_impersonation/vb/services.vb#1)]  
  
 Poniższy przykład kodu pokazuje użycie <xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A> właściwości, aby ustawić poświadczenia aplikacji klienta przed wywołaniem operacji wymagającej poświadczeń dla personifikacji.  
  
 [!code-csharp[OperationBehaviorAttribute_Impersonation#3](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_impersonation/cs/client.cs#3)]
 [!code-vb[OperationBehaviorAttribute_Impersonation#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_impersonation/vb/client.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseInstanceMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ReleaseInstanceMode ReleaseInstanceMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.ReleaseInstanceMode ReleaseInstanceMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ReleaseInstanceMode As ReleaseInstanceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ReleaseInstanceMode ReleaseInstanceMode { System::ServiceModel::ReleaseInstanceMode get(); void set(System::ServiceModel::ReleaseInstanceMode value); };" />
      <MemberSignature Language="F#" Value="member this.ReleaseInstanceMode : System.ServiceModel.ReleaseInstanceMode with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReleaseInstanceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, kiedy w trakcie wywołania operacji w celu odtworzenia obiektu usługi.</summary>
        <value>Jedna z <see cref="T:System.ServiceModel.ReleaseInstanceMode" /> wartości. Wartość domyślna to <see cref="F:System.ServiceModel.ReleaseInstanceMode.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> , aby określić, kiedy Windows Communication Foundation (WCF) odtwarza obiekt usługi w trakcie wykonywania metody. Domyślnym zachowaniem jest odtwarzanie obiektu usługi zgodnie <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> z wartością. <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> Ustawienie właściwości zmienia to zachowanie domyślne.  
  
 Nie <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> wykonuje żadnych gwarancji dla wątków. Jeśli podczas działania usługi trzeba mieć nowy, niezmodyfikowany obiekt, należy ustawić <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> właściwość na. <xref:System.ServiceModel.InstanceContextMode.PerCall>  
  
 W scenariuszach <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> transakcji właściwość jest często używana do upewnienia się, że stare dane skojarzone z obiektem usługi są czyszczone przed przetworzeniem wywołania metody. Można również upewnić się, że obiekty usługi skojarzone z transakcjami są odtwarzane po pomyślnym zakończeniu <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> transakcji przez `true`ustawienie właściwości na.  
  
 Można wybrać następujące zachowania:  
  
-   Odtwórz obiekt usługi przed wywołaniem operacji.  
  
-   Odtwórz obiekt usługi po wywołaniu operacji.  
  
-   Odtwórz obiekt usługi zarówno przed, jak i po wywołaniu operacji.  
  
-   Brak zachowania odtwarzania.  
  
 Możesz również użyć <xref:System.ServiceModel.OperationBehaviorAttribute> , aby skonfigurować operację kontraktu wywołania zwrotnego w aplikacji klienckiej dupleksowej. Gdy jest używany w operacji wywołania zwrotnego <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> , właściwość musi <xref:System.ServiceModel.ReleaseInstanceMode.None> być lub <xref:System.InvalidOperationException> wyjątek jest zgłaszany w czasie wykonywania.  
  
 Ponadto ważne jest, aby pamiętać, że jeśli usługa zostanie utworzona przez przekazanie obiektu usługi do <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29?displayProperty=nameWithType> konstruktora, wartość tej właściwości jest traktowana tak, jakby była. <xref:System.ServiceModel.ReleaseInstanceMode.None>  
  
   
  
## Examples  
 Poniższy przykładowy kod ilustruje użycie programu <xref:System.ServiceModel.ReleaseInstanceMode> do odtwarzania obiektów usługi zarówno przed, jak i po wywołaniu.  
  
 [!code-csharp[OBA.ReleaseInstanceMode#1](~/samples/snippets/csharp/VS_Snippets_CFX/oba.releaseinstancemode/cs/services.cs#1)]
 [!code-vb[OBA.ReleaseInstanceMode#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/oba.releaseinstancemode/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość nie jest jedną z <see cref="T:System.ServiceModel.ReleaseInstanceMode" /> wartości.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IOperationBehavior.AddBindingParameters (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(class System.ServiceModel.Description.OperationDescription description, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Sub AddBindingParameters (description As OperationDescription, parameters As BindingParameterCollection) Implements IOperationBehavior.AddBindingParameters" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System::ServiceModel::Description::OperationDescription ^ description, System::ServiceModel::Channels::BindingParameterCollection ^ parameters) = System::ServiceModel::Description::IOperationBehavior::AddBindingParameters;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="description">Opis operacji został zmodyfikowany w celu <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> obsługi właściwości.</param>
        <param name="parameters">Parametry powiązania przesłane do obsługi zachowań powiązań.</param>
        <summary><see cref="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" /> Implementuje metodę.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior">
      <MemberSignature Language="C#" Value="void IOperationBehavior.ApplyClientBehavior (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Dispatcher.ClientOperation proxy);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(class System.ServiceModel.Description.OperationDescription description, class System.ServiceModel.Dispatcher.ClientOperation proxy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)" />
      <MemberSignature Language="VB.NET" Value="Sub ApplyClientBehavior (description As OperationDescription, proxy As ClientOperation) Implements IOperationBehavior.ApplyClientBehavior" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System::ServiceModel::Description::OperationDescription ^ description, System::ServiceModel::Dispatcher::ClientOperation ^ proxy) = System::ServiceModel::Description::IOperationBehavior::ApplyClientBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="proxy" Type="System.ServiceModel.Dispatcher.ClientOperation" />
      </Parameters>
      <Docs>
        <param name="description">Opis operacji został zmodyfikowany w celu <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> obsługi właściwości.</param>
        <param name="proxy">Punkt dostępu rozszerzalności służący do wstawiania niestandardowych modyfikacji klienta dla tej operacji.</param>
        <summary>Implementuje zachowanie operacji klienta.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IOperationBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Dispatcher.DispatchOperation dispatch);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.OperationDescription description, class System.ServiceModel.Dispatcher.DispatchOperation dispatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)" />
      <MemberSignature Language="VB.NET" Value="Sub ApplyDispatchBehavior (description As OperationDescription, dispatch As DispatchOperation) Implements IOperationBehavior.ApplyDispatchBehavior" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System::ServiceModel::Description::OperationDescription ^ description, System::ServiceModel::Dispatcher::DispatchOperation ^ dispatch) = System::ServiceModel::Description::IOperationBehavior::ApplyDispatchBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="dispatch" Type="System.ServiceModel.Dispatcher.DispatchOperation" />
      </Parameters>
      <Docs>
        <param name="description">Opis operacji został zmodyfikowany w celu <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> obsługi właściwości.</param>
        <param name="dispatch">Punkt rozszerzalności służący do wstawiania niestandardowych modyfikacji usługi dla tej operacji.</param>
        <summary>Implementuje zachowanie usługi.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.Validate">
      <MemberSignature Language="C#" Value="void IOperationBehavior.Validate (System.ServiceModel.Description.OperationDescription description);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.Validate(class System.ServiceModel.Description.OperationDescription description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)" />
      <MemberSignature Language="VB.NET" Value="Sub Validate (description As OperationDescription) Implements IOperationBehavior.Validate" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.Validate(System::ServiceModel::Description::OperationDescription ^ description) = System::ServiceModel::Description::IOperationBehavior::Validate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
      </Parameters>
      <Docs>
        <param name="description">Opis operacji do zweryfikowania.</param>
        <summary>Implementuje zachowanie walidacji.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionAutoComplete">
      <MemberSignature Language="C#" Value="public bool TransactionAutoComplete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactionAutoComplete" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionAutoComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactionAutoComplete { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionAutoComplete : bool with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy ma być automatycznie uzupełniany bieżący zakres transakcji, jeśli nie wystąpią żadne Nieobsłużone wyjątki.</summary>
        <value><see langword="true" />Aby ukończyć zakres transakcji automatycznie po pomyślnym wykonaniu operacji; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustaw właściwość na `false` , aby zakończyć lub przerwać transakcje bezpośrednio w kodzie dla operacji. <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A>  
  
 Obsłużone wyjątki mogą być zgłaszane w trakcie operacji bez automatycznego przerywania transakcji. Tylko Nieobsłużone wyjątki wyzwalają automatyczne przerywanie.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje operację, która jest wykonywana w ramach obowiązkowej transakcji rozproszonej. Właściwość wskazuje, że operacja jest wykonywana w ramach zakresu transakcji <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> , a właściwość wskazuje, że jeśli nie wystąpią Nieobsłużone wyjątki, zakres transakcji zostanie zakończony automatycznie. <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> Jeśli wystąpi nieobsługiwany wyjątek, transakcja zostanie przerwana.  
  
 [!code-csharp[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_transaction/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_transaction/vb/services.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionScopeRequired">
      <MemberSignature Language="C#" Value="public bool TransactionScopeRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactionScopeRequired" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionScopeRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactionScopeRequired { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionScopeRequired : bool with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy metoda wymaga zakresu transakcji dla jego wykonania.</summary>
        <value><see langword="true" />Jeśli metoda wymaga wykonania zakresu transakcji; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustaw wartość <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> na `true` , aby wymagać wykonania operacji w zakresie transakcji. Jeśli przepływa transakcja jest dostępna, operacja jest wykonywana w ramach tej transakcji. Jeśli jeden z nich nie jest dostępny, zostanie utworzona nowa transakcja i zostanie użyta do wykonania operacji. Powiązanie określone w punkcie końcowym kontroluje, czy są obsługiwane przepływy transakcji. W związku z tym, aby uzyskać właściwe zachowanie, należy zrozumieć interakcję między tym, czy przepływ transakcji jest dozwolony przez <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> powiązanie i właściwość. W poniższej tabeli przedstawiono możliwe zachowanie.  
  
|TransactionScopeRequired|Powiązanie umożliwia przepływ transakcji|Transakcja przepływów wywołujących|Wynik|  
|-|-|-|-|  
|False|False|Nie|Metoda jest wykonywana bez transakcji.|  
|Prawda|False|Nie|Metoda tworzy i wykonuje w ramach nowej transakcji.|  
|Wartość PRAWDA lub FAŁSZ|False|Yes|Zwracany jest błąd protokołu SOAP dla nagłówka transakcji.|  
|False|Prawda|Tak|Metoda jest wykonywana bez transakcji.|  
|Prawda|Prawda|Yes|Metoda jest wykonywana w ramach transakcji przepływu.|  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje operację, która jest wykonywana w ramach obowiązkowej transakcji rozproszonej. Właściwość wskazuje, że operacja jest wykonywana w ramach zakresu transakcji <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> , a właściwość wskazuje, że jeśli nie wystąpią Nieobsłużone wyjątki, zakres transakcji zostanie zakończony automatycznie. <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> Jeśli wystąpi nieobsługiwany wyjątek, transakcja zostanie przerwana.  
  
 [!code-csharp[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_transaction/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_transaction/vb/services.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>