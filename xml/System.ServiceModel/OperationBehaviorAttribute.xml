<Type Name="OperationBehaviorAttribute" FullName="System.ServiceModel.OperationBehaviorAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="23088f4fe82f21689d2e45fe2d40abb094d45a38" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39758426" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OperationBehaviorAttribute : Attribute, System.ServiceModel.Description.IOperationBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OperationBehaviorAttribute extends System.Attribute implements class System.ServiceModel.Description.IOperationBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.OperationBehaviorAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OperationBehaviorAttribute&#xA;Inherits Attribute&#xA;Implements IOperationBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class OperationBehaviorAttribute sealed : Attribute, System::ServiceModel::Description::IOperationBehavior" />
  <TypeSignature Language="F#" Value="type OperationBehaviorAttribute = class&#xA;    inherit Attribute&#xA;    interface IOperationBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IOperationBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Określa zachowanie lokalnego wykonania metody usługi.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.ServiceModel.OperationBehaviorAttribute> atrybutu, aby wskazać, w jaki sposób wykonywania określonych operacji operacja ma, kiedy wykonany. (Aby określić sposób wykonywania na poziomie usługi, użyj <xref:System.ServiceModel.ServiceBehaviorAttribute> atrybutu.)  
  
> [!NOTE]
>  Można również użyć <xref:System.ServiceModel.OperationBehaviorAttribute> do skonfigurowania operacji kontrakt wywołania zwrotnego w aplikacji klienckiej dwukierunkowego. Gdy jest używana w przypadku operacji wywołania zwrotnego <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> właściwość musi być <xref:System.ServiceModel.ReleaseInstanceMode.None> lub <xref:System.InvalidOperationException> wyjątek w czasie wykonywania.  
  
 <xref:System.ServiceModel.OperationBehaviorAttribute> Atrybut jest Windows Communication Foundation (WCF) programowania modelu funkcja, która umożliwia wspólne funkcje deweloperów, w przeciwnym razie należy zaimplementować samodzielnie.  
  
-   <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A> Właściwość określa, czy obiekty parametr przekazywany do operacji są usuwane po zakończeniu operacji.  
  
-   <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> Właściwość określa, czy transakcji, w którym metoda jest wykonywana jest automatycznie zatwierdzone, jeśli wystąpi żaden nieobsługiwany wyjątek.  
  
-   <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> Właściwość określa, czy metoda muszą być wykonywane w ramach transakcji.  
  
-   <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> Właściwość określa, czy operacja usługi może musi, nie można spersonifikować tożsamości elementu wywołującego.  
  
-   <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> Właściwość określa, kiedy obiektów usługi są odtwarzania podczas wywołania metody.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje operacją, który jest wykonywany w obrębie obowiązkowych transakcji rozproszonej. <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> Właściwość wskazuje, że metoda jest wykonywana w ramach transakcji wywołującego i <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> właściwość wskazuje, że ewentualnych nie nieobsłużonych wyjątków transakcji automatycznie zatwierdza. Jeśli wystąpi nieobsługiwany wyjątek, transakcja została przerwana.  
  
 [!code-csharp[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_transaction/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_transaction/vb/services.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OperationBehaviorAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OperationBehaviorAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślny konstruktor tworzy instancję klasy przy użyciu następujących ustawień domyślnych:  
  
-   <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> Właściwość `true`.  
  
-   <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> Właściwość `false`.  
  
-   <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> Właściwość <xref:System.ServiceModel.ReleaseInstanceMode.None>.  
  
-   <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> Jest <xref:System.ServiceModel.ImpersonationOption.NotAllowed>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoDisposeParameters">
      <MemberSignature Language="C#" Value="public bool AutoDisposeParameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoDisposeParameters" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoDisposeParameters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoDisposeParameters { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoDisposeParameters : bool with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia informację, czy parametry, które mają być automatycznie usuwane.</summary>
        <value>
          <see langword="true" /> Jeśli parametry mają automatycznie usunięte; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość określa, czy usługa usuwa wszystkie parametry jednorazowych (parametrów danych wejściowych, danych wyjściowych lub odwołania), które zostały utworzone podczas przetwarzania komunikatu. Wartość domyślna to `true`. Ustaw tę właściwość na `false` Jeśli chcesz zapobiec usuwania zasobów systemu i ich pamięci podręcznej, jeśli jest to wymagane.  
  
 Na przykład jeśli <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A> jest `false`, a następnie nadawca jest odpowiedzialny za zamyka strumień po stronie wysyłającej.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Impersonation">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ImpersonationOption Impersonation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.ImpersonationOption Impersonation" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.Impersonation" />
      <MemberSignature Language="VB.NET" Value="Public Property Impersonation As ImpersonationOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ImpersonationOption Impersonation { System::ServiceModel::ImpersonationOption get(); void set(System::ServiceModel::ImpersonationOption value); };" />
      <MemberSignature Language="F#" Value="member this.Impersonation : System.ServiceModel.ImpersonationOption with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.Impersonation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ImpersonationOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość, która wskazuje poziom personifikacji obiekt wywołujący, który obsługuje operację.</summary>
        <value>Jedną z <see cref="T:System.ServiceModel.ImpersonationOption" /> wartości. Wartość domyślna to <see cref="F:System.ServiceModel.ImpersonationOption.NotAllowed" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> właściwości (wraz z konfiguracji powiązania, który obsługuje personifikacji) aby określonej metody (te oznaczone <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> właściwością <xref:System.ServiceModel.ImpersonationOption.Allowed> lub <xref:System.ServiceModel.ImpersonationOption.Required>) do wykonania w ramach tożsamości elementu wywołującego. Aby uzyskać szczegółowe informacje, w tym jak personifikacja jest wykonywane przy użyciu <xref:System.ServiceModel.ImpersonationOption.Allowed> wraz z <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations%2A?displayProperty=nameWithType> właściwości, zobacz [delegowanie i personifikacja](~/docs/framework/wcf/feature-details/delegation-and-impersonation-with-wcf.md) i [instrukcje: Personifikowanie klienta w usłudze](~/docs/framework/wcf/how-to-impersonate-a-client-on-a-service.md).  
  
> [!NOTE]
>  Podczas programowego dodawania punktu końcowego usługi, który wykonuje personifikacji, należy użyć jednej z <xref:System.ServiceModel.ServiceHost.AddServiceEndpoint%2A> metody lub <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A?displayProperty=nameWithType> metoda prawidłowo załadować umowy do nowej <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> obiektu. Korzystanie z pliku konfiguracji wymaga nie dodatkowego kroku.  
  
 Może istnieć konkretnych scenariuszy, personifikacji nie jest obsługiwany. Aby uzyskać więcej informacji, zobacz [nieobsługiwane scenariusze](~/docs/framework/wcf/feature-details/unsupported-scenarios.md).  
  
   
  
## Examples  
 Poniższy przykład kodu usługi wymaga personifikacji, ustawiając <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> właściwość <xref:System.ServiceModel.ImpersonationOption.Required>.  
  
 [!code-csharp[OperationBehaviorAttribute_Impersonation#1](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_impersonation/cs/services.cs#1)]
 [!code-vb[OperationBehaviorAttribute_Impersonation#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_impersonation/vb/services.vb#1)]  
  
 Poniższy przykład kodu pokazuje użycie <xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A> właściwość można ustawić poświadczenia aplikacji przed wywołaniem operacji, która wymaga tych poświadczeń personifikacji klienta.  
  
 [!code-csharp[OperationBehaviorAttribute_Impersonation#3](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_impersonation/cs/client.cs#3)]
 [!code-vb[OperationBehaviorAttribute_Impersonation#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_impersonation/vb/client.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseInstanceMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ReleaseInstanceMode ReleaseInstanceMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.ReleaseInstanceMode ReleaseInstanceMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ReleaseInstanceMode As ReleaseInstanceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ReleaseInstanceMode ReleaseInstanceMode { System::ServiceModel::ReleaseInstanceMode get(); void set(System::ServiceModel::ReleaseInstanceMode value); };" />
      <MemberSignature Language="F#" Value="member this.ReleaseInstanceMode : System.ServiceModel.ReleaseInstanceMode with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReleaseInstanceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, w trakcie wywołania operacji odtworzenie obiektu usługi.</summary>
        <value>Jedną z <see cref="T:System.ServiceModel.ReleaseInstanceMode" /> wartości. Wartość domyślna to <see cref="F:System.ServiceModel.ReleaseInstanceMode.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> właściwości w celu określenia, kiedy usług Windows Communication Foundation (WCF) jest odtwarzana obiektem usługi w trakcie wykonywania metody. Domyślnym zachowaniem jest odtworzenie obiektu usługi, zgodnie z opisem w <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> wartość. Ustawienie <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> właściwość zmienia to zachowanie domyślne.  
  
 <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> Nie udziela żadnych gwarancji wątków. Jeśli konieczne jest posiadanie obiekt nowego, zostały zmodyfikowane po uruchomieniu usługi, ustaw <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> właściwość <xref:System.ServiceModel.InstanceContextMode.PerCall>.  
  
 W scenariuszach transakcji <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> właściwość jest często używana, aby upewnić się, że stare dane skojarzone z obiektem usługi jest czyszczona przed rozpoczęciem przetwarzania wywołania metody. Może również zagwarantować, obiektów usługi związane z transakcjami czy odtwarzania po pomyślnym ustawiając transakcji <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> właściwość `true`.  
  
 Można wybrać następujące zachowania:  
  
-   Odtwórz obiektu usługi przed wywołaniem operacji.  
  
-   Odtwórz obiektu usługi, po operacji jest wywoływana.  
  
-   Odtwórz obiektu usługi przed i po operacji jest wywoływana.  
  
-   Nie zachowanie odtwarzania.  
  
 Można również użyć <xref:System.ServiceModel.OperationBehaviorAttribute> do skonfigurowania operacji kontrakt wywołania zwrotnego w aplikacji klienckiej dwukierunkowego. Gdy jest używana w przypadku operacji wywołania zwrotnego <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> właściwość musi być <xref:System.ServiceModel.ReleaseInstanceMode.None> lub <xref:System.InvalidOperationException> wyjątek w czasie wykonywania.  
  
 Ponadto warto należy pamiętać, że jeśli usługa została utworzona przez przekazanie obiektu usługi, aby <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29?displayProperty=nameWithType> konstruktora, wartość tej właściwości jest traktowany tak, jakby była <xref:System.ServiceModel.ReleaseInstanceMode.None>.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.ServiceModel.ReleaseInstanceMode> odtwarzać obiektów usługi przed i po wywołaniu.  
  
 [!code-csharp[OBA.ReleaseInstanceMode#1](~/samples/snippets/csharp/VS_Snippets_CFX/oba.releaseinstancemode/cs/services.cs#1)]
 [!code-vb[OBA.ReleaseInstanceMode#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/oba.releaseinstancemode/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość nie jest jednym z <see cref="T:System.ServiceModel.ReleaseInstanceMode" /> wartości.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IOperationBehavior.AddBindingParameters (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(class System.ServiceModel.Description.OperationDescription description, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Sub AddBindingParameters (description As OperationDescription, parameters As BindingParameterCollection) Implements IOperationBehavior.AddBindingParameters" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System::ServiceModel::Description::OperationDescription ^ description, System::ServiceModel::Channels::BindingParameterCollection ^ parameters) = System::ServiceModel::Description::IOperationBehavior::AddBindingParameters;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="description">Opis operacji zmodyfikowany w celu obsługi <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> właściwości.</param>
        <param name="parameters">Wiązania parametrów przekazywany do obsługi zachowania powiązania.</param>
        <summary>Implementuje <see cref="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" /> metody.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior">
      <MemberSignature Language="C#" Value="void IOperationBehavior.ApplyClientBehavior (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Dispatcher.ClientOperation proxy);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(class System.ServiceModel.Description.OperationDescription description, class System.ServiceModel.Dispatcher.ClientOperation proxy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)" />
      <MemberSignature Language="VB.NET" Value="Sub ApplyClientBehavior (description As OperationDescription, proxy As ClientOperation) Implements IOperationBehavior.ApplyClientBehavior" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System::ServiceModel::Description::OperationDescription ^ description, System::ServiceModel::Dispatcher::ClientOperation ^ proxy) = System::ServiceModel::Description::IOperationBehavior::ApplyClientBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="proxy" Type="System.ServiceModel.Dispatcher.ClientOperation" />
      </Parameters>
      <Docs>
        <param name="description">Opis operacji zmodyfikowany w celu obsługi <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> właściwości.</param>
        <param name="proxy">Rozszerzalność punkt dostępu do wstawienia modyfikacje niestandardowego klienta dla tej operacji.</param>
        <summary>Implementuje zachowanie operacji klienta.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IOperationBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Dispatcher.DispatchOperation dispatch);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.OperationDescription description, class System.ServiceModel.Dispatcher.DispatchOperation dispatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)" />
      <MemberSignature Language="VB.NET" Value="Sub ApplyDispatchBehavior (description As OperationDescription, dispatch As DispatchOperation) Implements IOperationBehavior.ApplyDispatchBehavior" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System::ServiceModel::Description::OperationDescription ^ description, System::ServiceModel::Dispatcher::DispatchOperation ^ dispatch) = System::ServiceModel::Description::IOperationBehavior::ApplyDispatchBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="dispatch" Type="System.ServiceModel.Dispatcher.DispatchOperation" />
      </Parameters>
      <Docs>
        <param name="description">Opis operacji zmodyfikowany w celu obsługi <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> właściwości.</param>
        <param name="dispatch">Punkt rozszerzeń do wstawienia modyfikacje niestandardowe usługi dla tej operacji.</param>
        <summary>Implementuje zachowanie operacji usługi.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.Validate">
      <MemberSignature Language="C#" Value="void IOperationBehavior.Validate (System.ServiceModel.Description.OperationDescription description);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.Validate(class System.ServiceModel.Description.OperationDescription description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)" />
      <MemberSignature Language="VB.NET" Value="Sub Validate (description As OperationDescription) Implements IOperationBehavior.Validate" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.Validate(System::ServiceModel::Description::OperationDescription ^ description) = System::ServiceModel::Description::IOperationBehavior::Validate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
      </Parameters>
      <Docs>
        <param name="description">Opis operacji do sprawdzania poprawności.</param>
        <summary>Implementuje zachowanie walidacji.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionAutoComplete">
      <MemberSignature Language="C#" Value="public bool TransactionAutoComplete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactionAutoComplete" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionAutoComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactionAutoComplete { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionAutoComplete : bool with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy należy automatycznie wypełnić bieżącego zakresu transakcji, jeśli wystąpi żaden nieobsługiwany wyjątek.</summary>
        <value>
          <see langword="true" /> do ukończenia danego zakresu transakcji automatycznie po pomyślnym wykonaniu operacji; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustaw <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> właściwość `false` ukończyć lub przerwania transakcji bezpośrednio w kodzie dla tej operacji.  
  
 Obsługiwane wyjątki mogą być generowane w trakcie operacji bez automatycznie Przerywanie transakcji. Tylko nieobsługiwanych wyjątków wyzwalacza automatycznego przerywania.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje operacją, który jest wykonywany w obrębie obowiązkowych transakcji rozproszonej. <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> Właściwość wskazuje, czy operacja jest wykonywana w ramach zakresu transakcji i <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> właściwość wskazuje, że jeśli wystąpi żaden nieobsługiwany wyjątek, zakresu transakcji jest wypełniane automatycznie. Jeśli wystąpi nieobsługiwany wyjątek, transakcja została przerwana.  
  
 [!code-csharp[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_transaction/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_transaction/vb/services.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionScopeRequired">
      <MemberSignature Language="C#" Value="public bool TransactionScopeRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactionScopeRequired" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionScopeRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactionScopeRequired { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionScopeRequired : bool with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy metoda, która wymaga zakresu transakcji, do jego wykonania.</summary>
        <value>
          <see langword="true" /> Jeśli metoda, która wymaga zakresu transakcji, można wykonać; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustaw <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> do `true` będą musieli operację do wykonania w zakresie transakcji. Transakcji jest dostępny, operacja jest wykonywana w ramach tej transakcji. Jeśli nie jest dostępny, nowa transakcja jest tworzone i używane do wykonywania operacji. Powiązanie określone w kontrolkach punktu końcowego czy przesłanej transakcje są obsługiwane. W związku z tym, aby uzyskać odpowiednie zachowanie należy zrozumieć interakcję między czy przepływu transakcji jest dozwolona przez powiązanie i <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> właściwości. W poniższej tabeli przedstawiono możliwe zachowanie.  
  
|TransactionScopeRequired|Powiązanie pozwala przepływu transakcji|Obiekt wywołujący przepływy transakcji|Wynik|  
|-|-|-|-|  
|False|False|Nie|Metoda jest wykonywana bez transakcji.|  
|True|False|Nie|Metoda tworzy i uruchamia w ramach nowej transakcji.|  
|Wartość PRAWDA lub FAŁSZ|False|Tak|Błąd protokołu SOAP jest zwracana dla nagłówka transakcji.|  
|False|True|Tak|Metoda jest wykonywana bez transakcji.|  
|True|True|Tak|Metoda jest wykonywana w ramach transakcji.|  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje operacją, który jest wykonywany w obrębie obowiązkowych transakcji rozproszonej. <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> Właściwość wskazuje, czy operacja jest wykonywana w ramach zakresu transakcji i <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> właściwość wskazuje, że jeśli wystąpi żaden nieobsługiwany wyjątek, zakresu transakcji jest wypełniane automatycznie. Jeśli wystąpi nieobsługiwany wyjątek, transakcja została przerwana.  
  
 [!code-csharp[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_transaction/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_transaction/vb/services.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>