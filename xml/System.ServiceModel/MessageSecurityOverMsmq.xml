<Type Name="MessageSecurityOverMsmq" FullName="System.ServiceModel.MessageSecurityOverMsmq">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ca28f53fe7a5ec65d29cb01c38b184cb51a35e61" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69101709" /></Metadata><TypeSignature Language="C#" Value="public sealed class MessageSecurityOverMsmq" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MessageSecurityOverMsmq extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.MessageSecurityOverMsmq" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MessageSecurityOverMsmq" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageSecurityOverMsmq sealed" />
  <TypeSignature Language="F#" Value="type MessageSecurityOverMsmq = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Włącza Ustawianie właściwości zabezpieczeń na poziomie wiadomości dla <see cref="T:System.ServiceModel.NetMsmqBinding" /> powiązania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dostęp do tego obiektu odbywa się z powiązania za <xref:System.ServiceModel.NetMsmqBinding.Security%2A> pomocą właściwości, która <xref:System.ServiceModel.NetMsmqSecurity> zwraca obiekt. Ten obiekt ma <xref:System.ServiceModel.NetMsmqSecurity.Message%2A> właściwość, która dostarcza odwołanie <xref:System.ServiceModel.MessageSecurityOverMsmq> do obiektu.  
  
   
  
## Examples  
 [!code-csharp[UEMessageSecurityOverMsmq#1](~/samples/snippets/csharp/VS_Snippets_CFX/uemessagesecurityovermsmq/cs/program.cs#1)]
 [!code-vb[UEMessageSecurityOverMsmq#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemessagesecurityovermsmq/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageSecurityOverMsmq ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MessageSecurityOverMsmq.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageSecurityOverMsmq();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.MessageSecurityOverMsmq" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlgorithmSuite">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.SecurityAlgorithmSuite AlgorithmSuite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.SecurityAlgorithmSuite AlgorithmSuite" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageSecurityOverMsmq.AlgorithmSuite" />
      <MemberSignature Language="VB.NET" Value="Public Property AlgorithmSuite As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::SecurityAlgorithmSuite ^ AlgorithmSuite { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); void set(System::ServiceModel::Security::SecurityAlgorithmSuite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmSuite : System.ServiceModel.Security.SecurityAlgorithmSuite with get, set" Usage="System.ServiceModel.MessageSecurityOverMsmq.AlgorithmSuite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.ServiceModel.Security.SecurityAlgorithmSuite), "Default")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa pakiet algorytmów używany dla komunikatów zabezpieczeń na poziomie protokołu SOAP.</summary>
        <value>Ustawienie dla komunikatów wysyłanych <see cref="T:System.ServiceModel.NetMsmqBinding" /> za pośrednictwem powiązania. <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>definiuje różne algorytmy, takie jak kanonizacja, skróty, zawijanie, sygnatura, szyfrowanie i algorytmy tworzenia typów. Ta właściwość jest najbardziej istotna podczas pracy z platformą, która korzysta z zestawu algorytmów innych niż domyślne. Podczas wprowadzania modyfikacji tej właściwości należy mieć świadomość siły i słabości odpowiednich algorytmów.  
  
   
  
## Examples  
 [!code-csharp[UEMessageSecurityOverMsmq#2](~/samples/snippets/csharp/VS_Snippets_CFX/uemessagesecurityovermsmq/cs/program.cs#2)]
 [!code-vb[UEMessageSecurityOverMsmq#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemessagesecurityovermsmq/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCredentialType">
      <MemberSignature Language="C#" Value="public System.ServiceModel.MessageCredentialType ClientCredentialType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.MessageCredentialType ClientCredentialType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageSecurityOverMsmq.ClientCredentialType" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCredentialType As MessageCredentialType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::MessageCredentialType ClientCredentialType { System::ServiceModel::MessageCredentialType get(); void set(System::ServiceModel::MessageCredentialType value); };" />
      <MemberSignature Language="F#" Value="member this.ClientCredentialType : System.ServiceModel.MessageCredentialType with get, set" Usage="System.ServiceModel.MessageSecurityOverMsmq.ClientCredentialType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.MessageCredentialType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.ServiceModel.MessageCredentialType" /> ustawienie zabezpieczeń dla komunikatów wysyłanych za pośrednictwem transportu MSMQ.</summary>
        <value>Ustawienie <see cref="T:System.ServiceModel.MessageCredentialType" /> zabezpieczeń komunikatów wysyłanych za pośrednictwem transportu MSMQ.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tę właściwość można ustawić na jedną z następujących wartości:  
  
-   **Brak**: Dzięki temu usługa może korzystać z anonimowych klientów. Żadna usługa ani klient nie wymagają podania poświadczeń.  
  
-   **Windows**: Umożliwia to wymianę protokołu SOAP w ramach uwierzytelnionego kontekstu poświadczeń systemu Windows. Jest to zawsze wykonywane uwierzytelnianie oparte na protokole Kerberos.  
  
-   **Nazwa użytkownika**: Dzięki temu usługa musi wymagać uwierzytelnienia klienta przy użyciu poświadczeń nazwy użytkownika. To poświadczenie należy określić przy <xref:System.ServiceModel.Description.ClientCredentials> użyciu klasy.  
  
> [!NOTE]
>  Usługa WCF nie obsługuje wysyłania skrótu hasła ani wyprowadzania kluczy przy użyciu hasła i używania tych kluczy do zabezpieczenia komunikatów. W związku z tym WCF wymusza, aby program Exchange był zabezpieczony przy użyciu poświadczeń nazwy użytkownika. Ten tryb wymaga, aby certyfikat usługi został określony na kliencie przy użyciu `ClientCredential` zachowania i `serviceCertificate`:  
  
-   `Certificate`: Dzięki temu usługa musi wymagać uwierzytelnienia klienta przy użyciu certyfikatu. Poświadczenie klienta w tym przypadku należy określić przy użyciu <xref:System.ServiceModel.Description.ClientCredentials> klasy lub `ClientCredentials` zachowania. Poświadczenia usługi w tym przypadku należy określić przy użyciu <xref:System.ServiceModel.Description.ClientCredentials> klasy lub `ClientCredentials` zachowania, określając `serviceCertificate`.  
  
-   `InfoCard`: Dzięki temu usługa musi wymagać uwierzytelniania klienta przy użyciu InfoCard. W zachowaniu `serviceCertificate` musi być obsługiwana `ClientCredential` obsługa administracyjna.  
  
-   Poświadczenie certyfikatu dla programu `MessageSecurityOverMsmq` jest istotne tylko wtedy, gdy tryb zabezpieczeń jest ustawiony `Both` na `Message`lub.  
  
   
  
## Examples  
 [!code-csharp[UEMessageSecurityOverMsmq#3](~/samples/snippets/csharp/VS_Snippets_CFX/uemessagesecurityovermsmq/cs/program.cs#3)]
 [!code-vb[UEMessageSecurityOverMsmq#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemessagesecurityovermsmq/vb/program.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
