<Type Name="InstanceContextMode" FullName="System.ServiceModel.InstanceContextMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7b13e6cb7a96e103ce25b8374618dc5caf16d559" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34313840" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum InstanceContextMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed InstanceContextMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.InstanceContextMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum InstanceContextMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class InstanceContextMode" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Określa liczbę wystąpień usługi dostępne do obsługi połączeń, które są zawarte w wiadomości przychodzących.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> Zarządza skojarzenie między kanału i obiektów zdefiniowanych przez użytkownika usługi. Użyj <xref:System.ServiceModel.InstanceContextMode> wyliczenie z <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> właściwości w celu określenia okres istnienia <xref:System.ServiceModel.InstanceContext> obiektu. Windows Communication Foundation (WCF) można utworzyć nowy <xref:System.ServiceModel.InstanceContext> obiekt dla każdego wywołania każdej sesji lub określić, że <xref:System.ServiceModel.InstanceContext> obiektów jest powiązany z obiektem jednej usługi. Na przykład pracy, zobacz [Instancing](~/docs/framework/wcf/samples/instancing.md).  
  
 Pojedynczą wartość określa, że jeden <xref:System.ServiceModel.InstanceContextMode.Single> obiektu powinna być używana do istnienia usługi.  
  
> [!NOTE]
>  Jeśli <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> wartość jest równa jeden wynik jest, że usługa może przetwarzać tylko jeden komunikat w czasie chyba, że można również ustawić <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> do wartości <xref:System.ServiceModel.ConcurrencyMode>.  
  
   
  
## Examples  
 Poniższy kod przedstawia sposób ustawiania <xref:System.ServiceModel.InstanceContextMode> dla klasy usługi:  
  
 [!code-csharp[S_ReliableSession#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_reliablesession/cs/service.cs#1)]
 [!code-vb[S_ReliableSession#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_reliablesession/vb/service.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode" />
    <altmember cref="P:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode" />
  </Docs>
  <Members>
    <Member MemberName="PerCall">
      <MemberSignature Language="C#" Value="PerCall" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.InstanceContextMode PerCall = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.InstanceContextMode.PerCall" />
      <MemberSignature Language="VB.NET" Value="PerCall" />
      <MemberSignature Language="C++ CLI" Value="PerCall" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.InstanceContextMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Nowy <see cref="T:System.ServiceModel.InstanceContext" /> obiekt jest tworzony przed i po każdym wywołaniu z recyklingu.</summary>
      </Docs>
    </Member>
    <Member MemberName="PerSession">
      <MemberSignature Language="C#" Value="PerSession" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.InstanceContextMode PerSession = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.InstanceContextMode.PerSession" />
      <MemberSignature Language="VB.NET" Value="PerSession" />
      <MemberSignature Language="C++ CLI" Value="PerSession" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.InstanceContextMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Nowy <see cref="T:System.ServiceModel.InstanceContext" /> obiekt jest tworzony dla każdej sesji. Jeśli kanał nie tworzy sesję tę wartość zachowuje się tak, jakby była <see cref="F:System.ServiceModel.InstanceContextMode.PerCall" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="Single">
      <MemberSignature Language="C#" Value="Single" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.InstanceContextMode Single = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.InstanceContextMode.Single" />
      <MemberSignature Language="VB.NET" Value="Single" />
      <MemberSignature Language="C++ CLI" Value="Single" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.InstanceContextMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Tylko jeden <see cref="T:System.ServiceModel.InstanceContext" /> obiekt jest używany dla wszystkich połączeń przychodzących i nie jest ponownie przetworzony po wywołań. Jeśli obiekt usługi nie istnieje, zostanie utworzony jeden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Pojedyncze okres istnienia zachowania (na przykład, jeśli aplikacja hosta wywołuje <xref:System.ServiceModel.ServiceHost.%23ctor%2A> Konstruktor i przekazuje obiekt ma być używana jako usługa), klasy usługi musi być ustawiona <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> Single, lub jest zgłaszany wyjątek, po otwarciu hosta usługi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>