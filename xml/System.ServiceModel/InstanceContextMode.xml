<Type Name="InstanceContextMode" FullName="System.ServiceModel.InstanceContextMode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d3079ebf12bb7013ba2dfd7da4de97434fc3b896" /><Meta Name="ms.sourcegitcommit" Value="406d23aba879fbb482c6da0f64c8ef9494f6a944" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="07/31/2019" /><Meta Name="ms.locfileid" Value="68686380" /></Metadata><TypeSignature Language="C#" Value="public enum InstanceContextMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed InstanceContextMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.InstanceContextMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum InstanceContextMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class InstanceContextMode" />
  <TypeSignature Language="F#" Value="type InstanceContextMode = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="71f07-101">Określa liczbę wystąpień usługi dostępnych do obsługi wywołań, które są zawarte w wiadomościach przychodzących.</span><span class="sxs-lookup"><span data-stu-id="71f07-101">Specifies the number of service instances available for handling calls that are contained in incoming messages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="71f07-102"><xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> Klasa zarządza skojarzeniem między kanałem a obiektami usługi zdefiniowanymi przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="71f07-102">The <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> class manages the association between the channel and the user-defined service objects.</span></span> <span data-ttu-id="71f07-103">Użyj wyliczenia z właściwością, aby <xref:System.ServiceModel.InstanceContext> określić okres istnienia obiektu. <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> `InstanceContextMode`</span><span class="sxs-lookup"><span data-stu-id="71f07-103">Use the `InstanceContextMode` enumeration with the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> property to specify the lifetime of the <xref:System.ServiceModel.InstanceContext> object.</span></span> <span data-ttu-id="71f07-104">Windows Communication Foundation (WCF) może utworzyć nowy <xref:System.ServiceModel.InstanceContext> obiekt dla każdego wywołania, każdej sesji lub określić <xref:System.ServiceModel.InstanceContext> , że obiekt jest powiązany z pojedynczym obiektem usługi.</span><span class="sxs-lookup"><span data-stu-id="71f07-104">Windows Communication Foundation (WCF) can create a new <xref:System.ServiceModel.InstanceContext> object for every call, every session, or specify that the <xref:System.ServiceModel.InstanceContext> object is bound to a single service object.</span></span> <span data-ttu-id="71f07-105">Aby zapoznać się z przykładem roboczym, zobacz Tworzenie [wystąpień](~/docs/framework/wcf/samples/instancing.md).</span><span class="sxs-lookup"><span data-stu-id="71f07-105">For a working example, see [Instancing](~/docs/framework/wcf/samples/instancing.md).</span></span>  
  
<span data-ttu-id="71f07-106">Wartość określa, że w okresie <xref:System.ServiceModel.InstanceContext> istnienia usługi należy używać pojedynczego obiektu. `Single`</span><span class="sxs-lookup"><span data-stu-id="71f07-106">The `Single` value specifies that a single <xref:System.ServiceModel.InstanceContext> object should be used for the lifetime of the service.</span></span> <span data-ttu-id="71f07-107">Z `Single` wartością są skojarzone różne zastrzeżenia:</span><span class="sxs-lookup"><span data-stu-id="71f07-107">Several caveats are associated with the `Single` value:</span></span>

- <span data-ttu-id="71f07-108">Jeśli wartość jest ustawiona na `Single`, usługa może przetwarzać tylko jeden komunikat w danym momencie, <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A?displayProperty=nameWithtype> chyba że zostanie <xref:System.ServiceModel.ConcurrencyMode.Multiple?displayProperty=nameWithType>również ustawiona wartość. <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="71f07-108">If the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> value is set to `Single`, your service can only process one message at a time unless you also set the <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A?displayProperty=nameWithtype> value to <xref:System.ServiceModel.ConcurrencyMode.Multiple?displayProperty=nameWithType>.</span></span>  

- <span data-ttu-id="71f07-109">W przypadku działania pojedynczego okresu istnienia (na przykład jeśli aplikacja hosta wywołuje <xref:System.ServiceModel.ServiceHost.%23ctor%2A?displayProperty=nameWithType> konstruktora i przekazuje obiekt, który ma być używany jako usługa), Klasa usługi musi być <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> ustawiona `Single`na lub wyjątek jest zgłaszany, gdy host usługi jest otworzyć.</span><span class="sxs-lookup"><span data-stu-id="71f07-109">For singleton lifetime behavior (for example, if the host application calls the <xref:System.ServiceModel.ServiceHost.%23ctor%2A?displayProperty=nameWithType> constructor and passes an object to use as the service), the service class must set <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> to `Single`, or an exception is thrown when the service host is opened.</span></span>  

## Examples  
 <span data-ttu-id="71f07-110">Poniższy kod ilustruje sposób ustawienia <xref:System.ServiceModel.InstanceContextMode> dla klasy usługi:</span><span class="sxs-lookup"><span data-stu-id="71f07-110">The following code illustrates how to set the <xref:System.ServiceModel.InstanceContextMode> for a service class:</span></span>  
  
 [!code-csharp[S_ReliableSession#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_reliablesession/cs/service.cs#1)]
 [!code-vb[S_ReliableSession#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_reliablesession/vb/service.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode" />
    <altmember cref="P:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode" />
  </Docs>
  <Members>
    <Member MemberName="PerCall">
      <MemberSignature Language="C#" Value="PerCall" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.InstanceContextMode PerCall = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.InstanceContextMode.PerCall" />
      <MemberSignature Language="VB.NET" Value="PerCall" />
      <MemberSignature Language="C++ CLI" Value="PerCall" />
      <MemberSignature Language="F#" Value="PerCall = 1" Usage="System.ServiceModel.InstanceContextMode.PerCall" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.InstanceContextMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="71f07-111">Nowy <see cref="T:System.ServiceModel.InstanceContext" /> obiekt jest tworzony przed i odtwarzany po każdym wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="71f07-111">A new <see cref="T:System.ServiceModel.InstanceContext" /> object is created prior to and recycled subsequent to each call.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="PerSession">
      <MemberSignature Language="C#" Value="PerSession" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.InstanceContextMode PerSession = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.InstanceContextMode.PerSession" />
      <MemberSignature Language="VB.NET" Value="PerSession" />
      <MemberSignature Language="C++ CLI" Value="PerSession" />
      <MemberSignature Language="F#" Value="PerSession = 0" Usage="System.ServiceModel.InstanceContextMode.PerSession" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.InstanceContextMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="71f07-112">Nowy <see cref="T:System.ServiceModel.InstanceContext" /> obiekt jest tworzony dla każdej sesji.</span><span class="sxs-lookup"><span data-stu-id="71f07-112">A new <see cref="T:System.ServiceModel.InstanceContext" /> object is created for each session.</span></span> <span data-ttu-id="71f07-113">Jeśli kanał nie tworzy sesji, ta wartość zachowuje się tak, jakby była <see cref="F:System.ServiceModel.InstanceContextMode.PerCall" />.</span><span class="sxs-lookup"><span data-stu-id="71f07-113">If the channel does not create a session this value behaves as if it were <see cref="F:System.ServiceModel.InstanceContextMode.PerCall" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Single">
      <MemberSignature Language="C#" Value="Single" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.InstanceContextMode Single = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.InstanceContextMode.Single" />
      <MemberSignature Language="VB.NET" Value="Single" />
      <MemberSignature Language="C++ CLI" Value="Single" />
      <MemberSignature Language="F#" Value="Single = 2" Usage="System.ServiceModel.InstanceContextMode.Single" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.InstanceContextMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="71f07-114">Tylko jeden <see cref="T:System.ServiceModel.InstanceContext" /> obiekt jest używany dla wszystkich wywołań przychodzących i nie jest odtwarzany ponownie po wywołaniach.</span><span class="sxs-lookup"><span data-stu-id="71f07-114">Only one <see cref="T:System.ServiceModel.InstanceContext" /> object is used for all incoming calls and is not recycled subsequent to the calls.</span></span> <span data-ttu-id="71f07-115">Jeśli obiekt usługi nie istnieje, zostanie utworzony.</span><span class="sxs-lookup"><span data-stu-id="71f07-115">If a service object does not exist, one is created.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
