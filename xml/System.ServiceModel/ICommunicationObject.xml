<Type Name="ICommunicationObject" FullName="System.ServiceModel.ICommunicationObject">
  <TypeSignature Language="C#" Value="public interface ICommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="02bab-101">Definiuje kontrakt dla komputera stanu podstawowa dla wszystkich obiektów zorientowane na komunikacji w systemie, w tym kanały, menedżerów kanału fabryki, odbiorników i dystrybucja i hosty usługi.</span><span class="sxs-lookup"><span data-stu-id="02bab-101">Defines the contract for the basic state machine for all communication-oriented objects in the system, including channels, the channel managers, factories, listeners, and dispatchers, and service hosts.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02bab-102"><xref:System.ServiceModel.ICommunicationObject> Interfejs definiuje:</span><span class="sxs-lookup"><span data-stu-id="02bab-102">The <xref:System.ServiceModel.ICommunicationObject> interface defines:</span></span>  
  
-   <span data-ttu-id="02bab-103">Zestaw otworzyć, zamknij i abort metody inicjowania przejść stanu:</span><span class="sxs-lookup"><span data-stu-id="02bab-103">A set of open, close and abort methods for initiating state transitions:</span></span>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Open%2A>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Close%2A>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Abort%2A>  
  
-   <span data-ttu-id="02bab-104">Asynchroniczne wersji metod otwierających i zamykających:</span><span class="sxs-lookup"><span data-stu-id="02bab-104">Asynchronous versions of the open and close methods:</span></span>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.EndClose%2A>  
  
-   <span data-ttu-id="02bab-105">Zestaw zdarzeń, które zapewniają powiadomienia przejść stanu:</span><span class="sxs-lookup"><span data-stu-id="02bab-105">A set of events that provide notifications of state transitions:</span></span>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Opening>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Opened>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Closing>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Closed>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Faulted>  
  
-   <span data-ttu-id="02bab-106">Popularne <xref:System.ServiceModel.ICommunicationObject.State%2A> właściwość sprawdzenie stanu obiektu</span><span class="sxs-lookup"><span data-stu-id="02bab-106">A common <xref:System.ServiceModel.ICommunicationObject.State%2A> property for inspecting the state of an object</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="02bab-107">Powoduje, że obiekt komunikacyjny przejście bezpośrednio z jego bieżącym stanie w stanie zamkniętym.</span><span class="sxs-lookup"><span data-stu-id="02bab-107">Causes a communication object to transition immediately from its current state into the closed state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02bab-108">Tej metody oznacza, że wszystkie — Praca nieukończona powinien ignorowane, lub ungracefully zakończone przed zwróceniem.</span><span class="sxs-lookup"><span data-stu-id="02bab-108">This method indicates that any unfinished work should be ignored or ungracefully terminated before returning.</span></span> <span data-ttu-id="02bab-109"><xref:System.ServiceModel.ICommunicationObject.Abort%2A> Metody można użyć do anulowania oczekujących operacji, w tym wywołania oczekujące <xref:System.ServiceModel.ICommunicationObject.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="02bab-109">The <xref:System.ServiceModel.ICommunicationObject.Abort%2A> method can be used to cancel any outstanding operations, including outstanding calls to <xref:System.ServiceModel.ICommunicationObject.Close%2A>.</span></span>  
  
 <span data-ttu-id="02bab-110">Do poprawnego działania przejścia <xref:System.ServiceModel.ICommunicationObject> z <xref:System.ServiceModel.CommunicationState.Opened> stan <xref:System.ServiceModel.CommunicationState.Closed> stan wywołania <xref:System.ServiceModel.ICommunicationObject.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="02bab-110">To gracefully transition an <xref:System.ServiceModel.ICommunicationObject> from the <xref:System.ServiceModel.CommunicationState.Opened> state to the <xref:System.ServiceModel.CommunicationState.Closed> state call <xref:System.ServiceModel.ICommunicationObject.Close%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginClose">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02bab-111">Rozpoczyna operację asynchroniczną, aby zamknąć obiektu komunikacji.</span><span class="sxs-lookup"><span data-stu-id="02bab-111">Begins an asynchronous operation to close a communication object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02bab-112">Ta metoda powoduje <xref:System.ServiceModel.ICommunicationObject> do poprawnego działania przejścia z <xref:System.ServiceModel.CommunicationState.Opened> stan <xref:System.ServiceModel.CommunicationState.Closed> stanu.</span><span class="sxs-lookup"><span data-stu-id="02bab-112">This method causes an <xref:System.ServiceModel.ICommunicationObject> to gracefully transition from the <xref:System.ServiceModel.CommunicationState.Opened> state to the <xref:System.ServiceModel.CommunicationState.Closed> state.</span></span>  
  
 <span data-ttu-id="02bab-113">Podano w wersji z lub bez jawnego limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="02bab-113">Versions with and without an explicit timeout are provided.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginClose">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginClose (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginClose(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginClose (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginClose(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="02bab-114"><see cref="T:System.AsyncCallback" /> Delegata, która odbiera powiadomienia o zakończeniu asynchroniczną operację zamknięcia.</span><span class="sxs-lookup"><span data-stu-id="02bab-114">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous close operation.</span></span></param>
        <param name="state"><span data-ttu-id="02bab-115">Obiekt określony przez aplikację, który zawiera informacje o stanie skojarzone z asynchroniczną operację zamknięcia.</span><span class="sxs-lookup"><span data-stu-id="02bab-115">An object, specified by the application, that contains state information associated with the asynchronous close operation.</span></span></param>
        <summary><span data-ttu-id="02bab-116">Rozpoczyna operację asynchroniczną, aby zamknąć obiektu komunikacji.</span><span class="sxs-lookup"><span data-stu-id="02bab-116">Begins an asynchronous operation to close a communication object.</span></span></summary>
        <returns><span data-ttu-id="02bab-117"><see cref="T:System.IAsyncResult" /> , Która odwołuje się asynchroniczną operację zamknięcia.</span><span class="sxs-lookup"><span data-stu-id="02bab-117">The <see cref="T:System.IAsyncResult" /> that references the asynchronous close operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02bab-118">Ta metoda powoduje <xref:System.ServiceModel.ICommunicationObject> do poprawnego działania innych niż przejścia z dowolnego stanu <xref:System.ServiceModel.CommunicationState.Opened> stan <xref:System.ServiceModel.CommunicationState.Closed> stanu.</span><span class="sxs-lookup"><span data-stu-id="02bab-118">This method causes an <xref:System.ServiceModel.ICommunicationObject> to gracefully transition from any state, other than the <xref:System.ServiceModel.CommunicationState.Opened> state to the <xref:System.ServiceModel.CommunicationState.Closed> state.</span></span> <span data-ttu-id="02bab-119"><xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> Metoda pozwala niedokończone pracę, należy wykonać przed zwróceniem.</span><span class="sxs-lookup"><span data-stu-id="02bab-119">The <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> method allows any unfinished work to be completed before returning.</span></span> <span data-ttu-id="02bab-120">Na przykład wysyła komunikaty buforowanego Zakończ).</span><span class="sxs-lookup"><span data-stu-id="02bab-120">For example, finish sending any buffered messages).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="02bab-121"><see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> została wywołana dla obiekt w <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> stanu.</span><span class="sxs-lookup"><span data-stu-id="02bab-121"><see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="02bab-122">Domyślny limit czasu upłynął przed <see cref="T:System.ServiceModel.ICommunicationObject" /> mogła bezpiecznie zamknąć potoku.</span><span class="sxs-lookup"><span data-stu-id="02bab-122">The default timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginClose">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginClose (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginClose(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginClose (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginClose(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="02bab-123"><see cref="T:System.TimeSpan" /> Określający, jak długo ma zostać ukończona przed przekroczeniem limitu czasu operacji wysyłania.</span><span class="sxs-lookup"><span data-stu-id="02bab-123">The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</span></span></param>
        <param name="callback"><span data-ttu-id="02bab-124"><see cref="T:System.AsyncCallback" /> Delegata, która odbiera powiadomienia o zakończeniu asynchroniczną operację zamknięcia.</span><span class="sxs-lookup"><span data-stu-id="02bab-124">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous close operation.</span></span></param>
        <param name="state"><span data-ttu-id="02bab-125">Obiekt określony przez aplikację, który zawiera informacje o stanie skojarzone z asynchroniczną operację zamknięcia.</span><span class="sxs-lookup"><span data-stu-id="02bab-125">An object, specified by the application, that contains state information associated with the asynchronous close operation.</span></span></param>
        <summary><span data-ttu-id="02bab-126">Rozpoczyna operację asynchroniczną, aby zamknąć obiekt komunikacji z określonego limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="02bab-126">Begins an asynchronous operation to close a communication object with a specified timeout.</span></span></summary>
        <returns><span data-ttu-id="02bab-127"><see cref="T:System.IAsyncResult" /> , Która odwołuje się asynchroniczną operację zamknięcia.</span><span class="sxs-lookup"><span data-stu-id="02bab-127">The <see cref="T:System.IAsyncResult" /> that references the asynchronous close operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02bab-128">Ta metoda powoduje <xref:System.ServiceModel.ICommunicationObject> do poprawnego działania innych niż przejścia z dowolnego stanu <xref:System.ServiceModel.CommunicationState.Opened> stan <xref:System.ServiceModel.CommunicationState.Closed> stanu z w określonym przedziale czasu.</span><span class="sxs-lookup"><span data-stu-id="02bab-128">This method causes an <xref:System.ServiceModel.ICommunicationObject> to gracefully transition from any state, other than the <xref:System.ServiceModel.CommunicationState.Opened> state to the <xref:System.ServiceModel.CommunicationState.Closed> state with in a specified interval of time.</span></span> <span data-ttu-id="02bab-129"><xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> Metoda pozwala niedokończone pracę, należy wykonać przed zwróceniem.</span><span class="sxs-lookup"><span data-stu-id="02bab-129">The <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> method allows any unfinished work to be completed before returning.</span></span> <span data-ttu-id="02bab-130">Na przykład wysyła komunikaty buforowanego Zakończ).</span><span class="sxs-lookup"><span data-stu-id="02bab-130">For example, finish sending any buffered messages).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="02bab-131"><see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> została wywołana dla obiekt w <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> stanu.</span><span class="sxs-lookup"><span data-stu-id="02bab-131"><see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="02bab-132">Określony limit czasu upłynął przed <see cref="T:System.ServiceModel.ICommunicationObject" /> mogła bezpiecznie zamknąć potoku.</span><span class="sxs-lookup"><span data-stu-id="02bab-132">The specified timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginOpen">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02bab-133">Rozpoczyna operację asynchroniczną, aby zamknąć obiektu komunikacji.</span><span class="sxs-lookup"><span data-stu-id="02bab-133">Begins an asynchronous operation to close a communication object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02bab-134"><xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> Metody powoduje, że <xref:System.ServiceModel.ICommunicationObject> wejścia <xref:System.ServiceModel.CommunicationState.Opening> pozostaje w nim aż do jego przejścia do stanu <xref:System.ServiceModel.CommunicationState.Opened> stanu zostało zakończone lub nie powiedzie się.</span><span class="sxs-lookup"><span data-stu-id="02bab-134">The <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> method causes an <xref:System.ServiceModel.ICommunicationObject> to enter into the <xref:System.ServiceModel.CommunicationState.Opening> state where it remains until its transition to the <xref:System.ServiceModel.CommunicationState.Opened> state is completed or fails.</span></span>  
  
 <span data-ttu-id="02bab-135">Podano w wersji z lub bez jawnego limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="02bab-135">Versions with and without an explicit timeout are provided.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginOpen">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginOpen (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginOpen(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginOpen (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginOpen(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="02bab-136"><see cref="T:System.AsyncCallback" /> Delegata, która odbiera powiadomienia o ukończeniu operacji asynchronicznej open.</span><span class="sxs-lookup"><span data-stu-id="02bab-136">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous open operation.</span></span></param>
        <param name="state"><span data-ttu-id="02bab-137">Obiekt określony przez aplikację, który zawiera informacje o stanie skojarzone z operacji asynchronicznej open.</span><span class="sxs-lookup"><span data-stu-id="02bab-137">An object, specified by the application, that contains state information associated with the asynchronous open operation.</span></span></param>
        <summary><span data-ttu-id="02bab-138">Rozpoczyna operację asynchroniczną można otworzyć obiektu komunikacji.</span><span class="sxs-lookup"><span data-stu-id="02bab-138">Begins an asynchronous operation to open a communication object.</span></span></summary>
        <returns><span data-ttu-id="02bab-139"><see cref="T:System.IAsyncResult" /> Otwórz operację asynchroniczną, która odwołuje.</span><span class="sxs-lookup"><span data-stu-id="02bab-139">The <see cref="T:System.IAsyncResult" /> that references the asynchronous open operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02bab-140">Gdy <xref:System.ServiceModel.ICommunicationObject> jest uruchomiony, zaczyna się w <xref:System.ServiceModel.CommunicationState.Created> stanu.</span><span class="sxs-lookup"><span data-stu-id="02bab-140">When an <xref:System.ServiceModel.ICommunicationObject> is instantiated, it begins in the <xref:System.ServiceModel.CommunicationState.Created> state.</span></span> <span data-ttu-id="02bab-141">W <xref:System.ServiceModel.CommunicationState.Created> stanu, można skonfigurować obiektu (na przykład można ustawić właściwości lub zdarzenia może być zarejestrowany), ale nie jest jeszcze używany do wysyłania i odbierania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="02bab-141">In the <xref:System.ServiceModel.CommunicationState.Created> state, the object can be configured (for example, properties can be set, or events can be registered), but it is not yet usable to send or receive messages.</span></span> <span data-ttu-id="02bab-142"><xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> Metody powoduje, że <xref:System.ServiceModel.ICommunicationObject> wejścia <xref:System.ServiceModel.CommunicationState.Opening> stanu, w której pozostaje aż operacja otwierania zakończy się powodzeniem, operacja otwierania limitu czasu lub kończy się niepowodzeniem i błędny staje się obiekt, lub <xref:System.ServiceModel.ICommunicationObject> zostało przerwane.</span><span class="sxs-lookup"><span data-stu-id="02bab-142">The <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> method causes an <xref:System.ServiceModel.ICommunicationObject> to enter into the <xref:System.ServiceModel.CommunicationState.Opening> state where it remains until the open operation succeeds, the open operation times out or fails and the object becomes faulted, or the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span>  
  
 <span data-ttu-id="02bab-143">W <xref:System.ServiceModel.CommunicationState.Opened> stanu, <xref:System.ServiceModel.ICommunicationObject> można używać (na przykład wiadomości mogą być odbierane), ale nie jest już można skonfigurować.</span><span class="sxs-lookup"><span data-stu-id="02bab-143">In the <xref:System.ServiceModel.CommunicationState.Opened> state, the <xref:System.ServiceModel.ICommunicationObject> is usable (for example, messages can be received), but it is no longer configurable.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationException"><span data-ttu-id="02bab-144"><see cref="T:System.ServiceModel.ICommunicationObject" /> Nie może zostać otwarty i została wprowadzona <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> stanu.</span><span class="sxs-lookup"><span data-stu-id="02bab-144">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="02bab-145">Upłynął limit czasu otwierania domyślne <see cref="T:System.ServiceModel.ICommunicationObject" /> mógł wprowadź <see cref="F:System.ServiceModel.CommunicationState.Opened" /> stanu i została wprowadzona <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> stanu.</span><span class="sxs-lookup"><span data-stu-id="02bab-145">The default open timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginOpen">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginOpen (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginOpen(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginOpen (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginOpen(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="02bab-146"><see cref="T:System.TimeSpan" /> Określający, jak długo ma zostać ukończona przed przekroczeniem limitu czasu operacji wysyłania.</span><span class="sxs-lookup"><span data-stu-id="02bab-146">The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</span></span></param>
        <param name="callback"><span data-ttu-id="02bab-147"><see cref="T:System.AsyncCallback" /> Delegata, która odbiera powiadomienia o ukończeniu operacji asynchronicznej open.</span><span class="sxs-lookup"><span data-stu-id="02bab-147">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous open operation.</span></span></param>
        <param name="state"><span data-ttu-id="02bab-148">Obiekt określony przez aplikację, który zawiera informacje o stanie skojarzone z operacji asynchronicznej open.</span><span class="sxs-lookup"><span data-stu-id="02bab-148">An object, specified by the application, that contains state information associated with the asynchronous open operation.</span></span></param>
        <summary><span data-ttu-id="02bab-149">Rozpoczyna operację asynchroniczną można otworzyć obiektu komunikacji w określonym interwale czasu.</span><span class="sxs-lookup"><span data-stu-id="02bab-149">Begins an asynchronous operation to open a communication object within a specified interval of time.</span></span></summary>
        <returns><span data-ttu-id="02bab-150"><see cref="T:System.IAsyncResult" /> Otwórz operację asynchroniczną, która odwołuje.</span><span class="sxs-lookup"><span data-stu-id="02bab-150">The <see cref="T:System.IAsyncResult" /> that references the asynchronous open operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02bab-151">Gdy <xref:System.ServiceModel.ICommunicationObject> jest uruchomiony, zaczyna się w <xref:System.ServiceModel.CommunicationState.Created> stanu.</span><span class="sxs-lookup"><span data-stu-id="02bab-151">When an <xref:System.ServiceModel.ICommunicationObject> is instantiated, it begins in the <xref:System.ServiceModel.CommunicationState.Created> state.</span></span> <span data-ttu-id="02bab-152">W <xref:System.ServiceModel.CommunicationState.Created> stanu, można skonfigurować obiektu (na przykład można ustawić właściwości lub zdarzenia może być zarejestrowany), ale nie jest jeszcze używany do wysyłania i odbierania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="02bab-152">In the <xref:System.ServiceModel.CommunicationState.Created> state, the object can be configured (for example, properties can be set, or events can be registered), but it is not yet usable to send or receive messages.</span></span> <span data-ttu-id="02bab-153"><xref:System.ServiceModel.ICommunicationObject.Open%2A> Metody powoduje, że <xref:System.ServiceModel.ICommunicationObject> wejścia <xref:System.ServiceModel.CommunicationState.Opening> stanu, w której pozostaje aż operacja otwierania zakończy się powodzeniem, operacja otwierania limitu czasu lub kończy się niepowodzeniem i błędny staje się obiekt, lub <xref:System.ServiceModel.ICommunicationObject> zostało przerwane.</span><span class="sxs-lookup"><span data-stu-id="02bab-153">The <xref:System.ServiceModel.ICommunicationObject.Open%2A> method causes an <xref:System.ServiceModel.ICommunicationObject> to enter into the <xref:System.ServiceModel.CommunicationState.Opening> state where it remains until the open operation succeeds, the open operation times out or fails and the object becomes faulted, or the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span>  
  
 <span data-ttu-id="02bab-154">W <xref:System.ServiceModel.CommunicationState.Opened> stanu, <xref:System.ServiceModel.ICommunicationObject> można używać (na przykład wiadomości mogą być odbierane), ale nie jest już można skonfigurować.</span><span class="sxs-lookup"><span data-stu-id="02bab-154">In the <xref:System.ServiceModel.CommunicationState.Opened> state, the <xref:System.ServiceModel.ICommunicationObject> is usable (for example, messages can be received), but it is no longer configurable.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationException"><span data-ttu-id="02bab-155"><see cref="T:System.ServiceModel.ICommunicationObject" /> Nie może zostać otwarty i została wprowadzona <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> stanu.</span><span class="sxs-lookup"><span data-stu-id="02bab-155">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="02bab-156">Określony limit czasu upłynął przed <see cref="T:System.ServiceModel.ICommunicationObject" /> mógł wprowadź <see cref="F:System.ServiceModel.CommunicationState.Opened" /> stanu i została wprowadzona <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> stanu.</span><span class="sxs-lookup"><span data-stu-id="02bab-156">The specified timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="02bab-157">Operacja musi zgłosić <see cref="T:System.TimeoutException" /> Jeśli określonego <paramref name="timeout" /> został przekroczony.</span><span class="sxs-lookup"><span data-stu-id="02bab-157">The operation must throw a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded.</span></span></para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Close">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02bab-158">Powoduje, że obiekt komunikacyjny przejście od bieżącego stanu w stanie zamkniętym.</span><span class="sxs-lookup"><span data-stu-id="02bab-158">Causes a communication object to transition from its current state into the closed state.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="02bab-159">Powoduje, że obiekt komunikacyjny przejście od bieżącego stanu w stanie zamkniętym.</span><span class="sxs-lookup"><span data-stu-id="02bab-159">Causes a communication object to transition from its current state into the closed state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02bab-160">Ta metoda powoduje <xref:System.ServiceModel.ICommunicationObject> do poprawnego działania przejścia z <xref:System.ServiceModel.CommunicationState.Opened> stan <xref:System.ServiceModel.CommunicationState.Closed> stanu.</span><span class="sxs-lookup"><span data-stu-id="02bab-160">This method causes an <xref:System.ServiceModel.ICommunicationObject> to gracefully transition from the <xref:System.ServiceModel.CommunicationState.Opened> state to the <xref:System.ServiceModel.CommunicationState.Closed> state.</span></span> <span data-ttu-id="02bab-161"><xref:System.ServiceModel.ICommunicationObject.Close%2A> Metoda pozwala niedokończone pracę, należy wykonać przed zwróceniem.</span><span class="sxs-lookup"><span data-stu-id="02bab-161">The <xref:System.ServiceModel.ICommunicationObject.Close%2A> method allows any unfinished work to be completed before returning.</span></span> <span data-ttu-id="02bab-162">Na przykład wysyła komunikaty buforowanego Zakończ).</span><span class="sxs-lookup"><span data-stu-id="02bab-162">For example, finish sending any buffered messages).</span></span>  
  
 <span data-ttu-id="02bab-163"><xref:System.ServiceModel.ICommunicationObject> Wprowadza <xref:System.ServiceModel.CommunicationState.Closing> stanu i pozostaje w niej do przejścia do <xref:System.ServiceModel.CommunicationState.Closed> stanu zostało zakończone.</span><span class="sxs-lookup"><span data-stu-id="02bab-163">The <xref:System.ServiceModel.ICommunicationObject> enters the <xref:System.ServiceModel.CommunicationState.Closing> state and remains in it until the transition to the <xref:System.ServiceModel.CommunicationState.Closed> state is completed.</span></span>  
  
 <span data-ttu-id="02bab-164"><xref:System.ServiceModel.ICommunicationObject.Close%2A> Zwraca raz <xref:System.ServiceModel.CommunicationState.Closed> stan zostanie osiągnięty.</span><span class="sxs-lookup"><span data-stu-id="02bab-164"><xref:System.ServiceModel.ICommunicationObject.Close%2A> returns once the <xref:System.ServiceModel.CommunicationState.Closed> state is reached.</span></span>  
  
 <span data-ttu-id="02bab-165">Zamknięcia domyślny limit czasu musi upłynąć przed <xref:System.ServiceModel.ICommunicationObject> może bezpiecznie zamknąć potoku, <xref:System.ServiceModel.ICommunicationObject> zostało przerwane.</span><span class="sxs-lookup"><span data-stu-id="02bab-165">If the default close timeout elapses before the <xref:System.ServiceModel.ICommunicationObject> is able to close gracefully, the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span>  
  
 <span data-ttu-id="02bab-166">Jeśli <xref:System.ServiceModel.ICommunicationObject.Close%2A> jest wywoływana na <xref:System.ServiceModel.ICommunicationObject> w <xref:System.ServiceModel.CommunicationState.Created>, <xref:System.ServiceModel.CommunicationState.Opening>, lub <xref:System.ServiceModel.CommunicationState.Faulted> stanu, <xref:System.ServiceModel.ICommunicationObject> zostało przerwane.</span><span class="sxs-lookup"><span data-stu-id="02bab-166">If <xref:System.ServiceModel.ICommunicationObject.Close%2A> is called on an <xref:System.ServiceModel.ICommunicationObject> in the <xref:System.ServiceModel.CommunicationState.Created>, <xref:System.ServiceModel.CommunicationState.Opening>, or <xref:System.ServiceModel.CommunicationState.Faulted> state, the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span> <span data-ttu-id="02bab-167">Jeśli <xref:System.ServiceModel.ICommunicationObject.Close%2A> jest wywoływana na <xref:System.ServiceModel.ICommunicationObject> w <xref:System.ServiceModel.CommunicationState.Closing> lub <xref:System.ServiceModel.CommunicationState.Closed> stanu, wywołanie zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="02bab-167">If <xref:System.ServiceModel.ICommunicationObject.Close%2A> is called on an <xref:System.ServiceModel.ICommunicationObject> in the <xref:System.ServiceModel.CommunicationState.Closing> or <xref:System.ServiceModel.CommunicationState.Closed> state, the call returns immediately.</span></span>  
  
 <span data-ttu-id="02bab-168">Istnieje również asynchroniczną wersję inicjowanego przez wywołanie metody close <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> oraz zostać zakończona, wywołując <xref:System.ServiceModel.ICommunicationObject.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="02bab-168">There is also an asynchronous version of the close method that is initiated by calling <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> and completed by calling <xref:System.ServiceModel.ICommunicationObject.Close%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="02bab-169"><see cref="M:System.ServiceModel.ICommunicationObject.Close" /> została wywołana dla obiekt w <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> stanu.</span><span class="sxs-lookup"><span data-stu-id="02bab-169"><see cref="M:System.ServiceModel.ICommunicationObject.Close" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="02bab-170">Upłynął limit czasu zamknięcia domyślne <see cref="T:System.ServiceModel.ICommunicationObject" /> mogła bezpiecznie zamknąć potoku.</span><span class="sxs-lookup"><span data-stu-id="02bab-170">The default close timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="02bab-171"><see cref="T:System.TimeSpan" /> Określający, jak długo ma zostać ukończona przed przekroczeniem limitu czasu operacji wysyłania.</span><span class="sxs-lookup"><span data-stu-id="02bab-171">The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</span></span></param>
        <summary><span data-ttu-id="02bab-172">Powoduje, że obiekt komunikacyjny przejście od bieżącego stanu w stanie zamkniętym.</span><span class="sxs-lookup"><span data-stu-id="02bab-172">Causes a communication object to transition from its current state into the closed state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02bab-173">Ta metoda powoduje <xref:System.ServiceModel.ICommunicationObject> do poprawnego działania przejścia z <xref:System.ServiceModel.CommunicationState.Opened> stan <xref:System.ServiceModel.CommunicationState.Closed> stanu w określonym interwale czasu.</span><span class="sxs-lookup"><span data-stu-id="02bab-173">This method causes an <xref:System.ServiceModel.ICommunicationObject> to gracefully transition from the <xref:System.ServiceModel.CommunicationState.Opened> state to the <xref:System.ServiceModel.CommunicationState.Closed> state within a specified interval of time.</span></span> <span data-ttu-id="02bab-174"><xref:System.ServiceModel.ICommunicationObject.Close%2A> Metoda pozwala niedokończone pracę, należy wykonać przed zwróceniem.</span><span class="sxs-lookup"><span data-stu-id="02bab-174">The <xref:System.ServiceModel.ICommunicationObject.Close%2A> method allows any unfinished work to be completed before returning.</span></span> <span data-ttu-id="02bab-175">Na przykład wysyła komunikaty buforowanego Zakończ).</span><span class="sxs-lookup"><span data-stu-id="02bab-175">For example, finish sending any buffered messages).</span></span>  
  
 <span data-ttu-id="02bab-176"><xref:System.ServiceModel.ICommunicationObject> Wprowadza <xref:System.ServiceModel.CommunicationState.Closing> stanu i pozostaje w niej do przejścia do <xref:System.ServiceModel.CommunicationState.Closed> stanu zostało zakończone.</span><span class="sxs-lookup"><span data-stu-id="02bab-176">The <xref:System.ServiceModel.ICommunicationObject> enters the <xref:System.ServiceModel.CommunicationState.Closing> state and remains in it until the transition to the <xref:System.ServiceModel.CommunicationState.Closed> state is completed.</span></span>  
  
 <span data-ttu-id="02bab-177"><xref:System.ServiceModel.ICommunicationObject.Close%2A> Zwraca raz <xref:System.ServiceModel.CommunicationState.Closed> stan zostanie osiągnięty.</span><span class="sxs-lookup"><span data-stu-id="02bab-177"><xref:System.ServiceModel.ICommunicationObject.Close%2A> returns once the <xref:System.ServiceModel.CommunicationState.Closed> state is reached.</span></span>  
  
 <span data-ttu-id="02bab-178">Jeśli upłynie limit czasu przed <xref:System.ServiceModel.ICommunicationObject> może bezpiecznie zamknąć, <xref:System.ServiceModel.ICommunicationObject> zostało przerwane.</span><span class="sxs-lookup"><span data-stu-id="02bab-178">If the timeout elapses before the <xref:System.ServiceModel.ICommunicationObject> is able to gracefully close, the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span>  
  
 <span data-ttu-id="02bab-179">Jeśli <xref:System.ServiceModel.ICommunicationObject.Close%2A> jest wywoływana na <xref:System.ServiceModel.ICommunicationObject> w <xref:System.ServiceModel.CommunicationState.Created>, <xref:System.ServiceModel.CommunicationState.Opening>, lub <xref:System.ServiceModel.CommunicationState.Faulted> stanu, <xref:System.ServiceModel.ICommunicationObject> zostało przerwane.</span><span class="sxs-lookup"><span data-stu-id="02bab-179">If <xref:System.ServiceModel.ICommunicationObject.Close%2A> is called on an <xref:System.ServiceModel.ICommunicationObject> in the <xref:System.ServiceModel.CommunicationState.Created>, <xref:System.ServiceModel.CommunicationState.Opening>, or <xref:System.ServiceModel.CommunicationState.Faulted> state, the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span>  <span data-ttu-id="02bab-180">Jeśli <xref:System.ServiceModel.ICommunicationObject.Close%2A> jest wywoływana na <xref:System.ServiceModel.ICommunicationObject> w <xref:System.ServiceModel.CommunicationState.Closing> lub <xref:System.ServiceModel.CommunicationState.Closed> stanu, wywołanie zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="02bab-180">If <xref:System.ServiceModel.ICommunicationObject.Close%2A> is called on an <xref:System.ServiceModel.ICommunicationObject> in the <xref:System.ServiceModel.CommunicationState.Closing> or <xref:System.ServiceModel.CommunicationState.Closed> state, the call returns immediately.</span></span>  
  
 <span data-ttu-id="02bab-181">Istnieje również asynchroniczną wersję inicjowanego przez wywołanie metody close <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> oraz zostać zakończona, wywołując <xref:System.ServiceModel.ICommunicationObject.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="02bab-181">There is also an asynchronous version of the close method that is initiated by calling <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> and completed by calling <xref:System.ServiceModel.ICommunicationObject.Close%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="02bab-182"><see cref="M:System.ServiceModel.ICommunicationObject.Close" /> została wywołana dla obiekt w <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> stanu.</span><span class="sxs-lookup"><span data-stu-id="02bab-182"><see cref="M:System.ServiceModel.ICommunicationObject.Close" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="02bab-183">Limit czasu upłynął przed <see cref="T:System.ServiceModel.ICommunicationObject" /> mogła bezpiecznie zamknąć potoku.</span><span class="sxs-lookup"><span data-stu-id="02bab-183">The timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="02bab-184">Operacja musi zgłosić <see cref="T:System.TimeoutException" /> Jeśli określonego <paramref name="timeout" /> został przekroczony.</span><span class="sxs-lookup"><span data-stu-id="02bab-184">The operation must throw a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="event EventHandler Closed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closed" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Closed" />
      <MemberSignature Language="VB.NET" Value="Event Closed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Closed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02bab-185">Występuje, gdy obiekt komunikacyjny zakończeniu jego przejście ze stanu zamknięcia w stanie zamkniętym.</span><span class="sxs-lookup"><span data-stu-id="02bab-185">Occurs when the communication object completes its transition from the closing state into the closed state.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Closing">
      <MemberSignature Language="C#" Value="event EventHandler Closing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closing" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Closing" />
      <MemberSignature Language="VB.NET" Value="Event Closing As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Closing;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02bab-186">Występuje, gdy obiekt komunikacyjny najpierw przechodzi do stanu zamknięcia.</span><span class="sxs-lookup"><span data-stu-id="02bab-186">Occurs when the communication object first enters the closing state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02bab-187">To zdarzenie występuje, gdy obiekt komunikacyjny najpierw zaczyna przejście od <xref:System.ServiceModel.CommunicationState.Opened> stanu do <xref:System.ServiceModel.CommunicationState.Closed> stanu natychmiast po <xref:System.ServiceModel.ICommunicationObject.Close%2A> lub <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="02bab-187">This event occurs when the communication object first begins to transition from the <xref:System.ServiceModel.CommunicationState.Opened> state into the <xref:System.ServiceModel.CommunicationState.Closed> state, immediately after either the <xref:System.ServiceModel.ICommunicationObject.Close%2A> or <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> method is invoked.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndClose">
      <MemberSignature Language="C#" Value="public void EndClose (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndClose(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndClose (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndClose(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="02bab-188"><see cref="T:System.IAsyncResult" /> Który jest zwracany przez wywołanie do <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginClose" /> metody.</span><span class="sxs-lookup"><span data-stu-id="02bab-188">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginClose" /> method.</span></span></param>
        <summary><span data-ttu-id="02bab-189">Kończy operację asynchroniczną, aby zamknąć obiektu komunikacji.</span><span class="sxs-lookup"><span data-stu-id="02bab-189">Completes an asynchronous operation to close a communication object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="02bab-190"><see cref="Overload:System.ServiceModel.ICommunicationObject.BeginClose" /> została wywołana dla obiekt w <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> stanu.</span><span class="sxs-lookup"><span data-stu-id="02bab-190"><see cref="Overload:System.ServiceModel.ICommunicationObject.BeginClose" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="02bab-191">Limit czasu upłynął przed <see cref="T:System.ServiceModel.ICommunicationObject" /> mogła bezpiecznie zamknąć potoku.</span><span class="sxs-lookup"><span data-stu-id="02bab-191">The timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndOpen">
      <MemberSignature Language="C#" Value="public void EndOpen (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndOpen(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndOpen (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndOpen(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="02bab-192"><see cref="T:System.IAsyncResult" /> Który jest zwracany przez wywołanie do <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginOpen" /> metody.</span><span class="sxs-lookup"><span data-stu-id="02bab-192">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginOpen" /> method.</span></span></param>
        <summary><span data-ttu-id="02bab-193">Kończy operację asynchroniczną można otworzyć obiektu komunikacji.</span><span class="sxs-lookup"><span data-stu-id="02bab-193">Completes an asynchronous operation to open a communication object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ServiceModel.CommunicationException"><span data-ttu-id="02bab-194"><see cref="T:System.ServiceModel.ICommunicationObject" /> Nie może zostać otwarty i została wprowadzona <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> stanu.</span><span class="sxs-lookup"><span data-stu-id="02bab-194">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="02bab-195">Limit czasu upłynął przed <see cref="T:System.ServiceModel.ICommunicationObject" /> mógł wprowadź <see cref="F:System.ServiceModel.CommunicationState.Opened" /> stanu i została wprowadzona <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> stanu.</span><span class="sxs-lookup"><span data-stu-id="02bab-195">The timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Faulted">
      <MemberSignature Language="C#" Value="event EventHandler Faulted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Faulted" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Faulted" />
      <MemberSignature Language="VB.NET" Value="Event Faulted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Faulted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02bab-196">Występuje, gdy obiekt komunikacyjny po raz pierwszy najedzie stan.</span><span class="sxs-lookup"><span data-stu-id="02bab-196">Occurs when the communication object first enters the faulted state.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Open">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02bab-197">Powoduje, że obiekt komunikacyjny przejście ze stanu utworzonej w stanie otwartym.</span><span class="sxs-lookup"><span data-stu-id="02bab-197">Causes a communication object to transition from the created state into the opened state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02bab-198">Podano w wersji z lub bez jawnego limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="02bab-198">Versions with and without an explicit timeout are provided.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Open" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="02bab-199">Powoduje, że obiekt komunikacyjny przejście ze stanu utworzonej w stanie otwartym.</span><span class="sxs-lookup"><span data-stu-id="02bab-199">Causes a communication object to transition from the created state into the opened state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02bab-200">Gdy <xref:System.ServiceModel.ICommunicationObject> jest uruchomiony, zaczyna się w <xref:System.ServiceModel.CommunicationState.Created> stanu.</span><span class="sxs-lookup"><span data-stu-id="02bab-200">When an <xref:System.ServiceModel.ICommunicationObject> is instantiated, it begins in the <xref:System.ServiceModel.CommunicationState.Created> state.</span></span> <span data-ttu-id="02bab-201">W <xref:System.ServiceModel.CommunicationState.Created> stanu, można skonfigurować obiektu (na przykład można ustawić właściwości lub zdarzenia może być zarejestrowany), ale nie jest jeszcze używany do wysyłania i odbierania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="02bab-201">In the <xref:System.ServiceModel.CommunicationState.Created> state, the object can be configured (for example, properties can be set, or events can be registered), but it is not yet usable to send or receive messages.</span></span> <span data-ttu-id="02bab-202"><xref:System.ServiceModel.ICommunicationObject.Open%2A> Metody powoduje, że <xref:System.ServiceModel.ICommunicationObject> wejścia <xref:System.ServiceModel.CommunicationState.Opening> stanu, w której pozostaje aż operacja otwierania zakończy się powodzeniem, operacja otwierania limitu czasu lub kończy się niepowodzeniem i błędny staje się obiekt, lub <xref:System.ServiceModel.ICommunicationObject> zostało przerwane.</span><span class="sxs-lookup"><span data-stu-id="02bab-202">The <xref:System.ServiceModel.ICommunicationObject.Open%2A> method causes an <xref:System.ServiceModel.ICommunicationObject> to enter into the <xref:System.ServiceModel.CommunicationState.Opening> state where it remains until the open operation succeeds, the open operation times out or fails and the object becomes faulted, or the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span>  
  
 <span data-ttu-id="02bab-203">W <xref:System.ServiceModel.CommunicationState.Opened> stanu, <xref:System.ServiceModel.ICommunicationObject> można używać (na przykład wiadomości mogą być odbierane), ale nie jest już można skonfigurować.</span><span class="sxs-lookup"><span data-stu-id="02bab-203">In the <xref:System.ServiceModel.CommunicationState.Opened> state, the <xref:System.ServiceModel.ICommunicationObject> is usable (for example, messages can be received), but it is no longer configurable.</span></span>  
  
 <span data-ttu-id="02bab-204">Istnieje również asynchroniczną wersję inicjowanego przez wywołanie metody open <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> oraz zostać zakończona, wywołując <xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29>.</span><span class="sxs-lookup"><span data-stu-id="02bab-204">There is also an asynchronous version of the open method that is initiated by calling <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> and completed by calling <xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationException"><span data-ttu-id="02bab-205"><see cref="T:System.ServiceModel.ICommunicationObject" /> Nie może zostać otwarty i została wprowadzona <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> stanu.</span><span class="sxs-lookup"><span data-stu-id="02bab-205">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="02bab-206">Upłynął limit czasu otwierania domyślne <see cref="T:System.ServiceModel.ICommunicationObject" /> mógł wprowadź <see cref="F:System.ServiceModel.CommunicationState.Opened" /> stanu i została wprowadzona <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> stanu.</span><span class="sxs-lookup"><span data-stu-id="02bab-206">The default open timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Open(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="02bab-207"><see cref="T:System.TimeSpan" /> Określający, jak długo ma zostać ukończona przed przekroczeniem limitu czasu operacji wysyłania.</span><span class="sxs-lookup"><span data-stu-id="02bab-207">The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</span></span></param>
        <summary><span data-ttu-id="02bab-208">Powoduje, że obiekt komunikacyjny przejście ze stanu utworzonej w stanie otwartym w określonym interwale czasu.</span><span class="sxs-lookup"><span data-stu-id="02bab-208">Causes a communication object to transition from the created state into the opened state within a specified interval of time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02bab-209">Gdy <xref:System.ServiceModel.ICommunicationObject> jest uruchomiony, zaczyna się w <xref:System.ServiceModel.CommunicationState.Created> stanu.</span><span class="sxs-lookup"><span data-stu-id="02bab-209">When an <xref:System.ServiceModel.ICommunicationObject> is instantiated, it begins in the <xref:System.ServiceModel.CommunicationState.Created> state.</span></span> <span data-ttu-id="02bab-210">W <xref:System.ServiceModel.CommunicationState.Created> stanu, można skonfigurować obiektu (na przykład można ustawić właściwości lub zdarzenia może być zarejestrowany), ale nie jest jeszcze używany do wysyłania i odbierania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="02bab-210">In the <xref:System.ServiceModel.CommunicationState.Created> state, the object can be configured (for example, properties can be set, or events can be registered), but it is not yet usable to send or receive messages.</span></span> <span data-ttu-id="02bab-211"><xref:System.ServiceModel.ICommunicationObject.Open%2A> Metody powoduje, że <xref:System.ServiceModel.ICommunicationObject> wejścia <xref:System.ServiceModel.CommunicationState.Opening> stanu, w której pozostaje aż operacja otwierania zakończy się powodzeniem, operacja otwierania limitu czasu lub kończy się niepowodzeniem i błędny staje się obiekt, lub <xref:System.ServiceModel.ICommunicationObject> zostało przerwane.</span><span class="sxs-lookup"><span data-stu-id="02bab-211">The <xref:System.ServiceModel.ICommunicationObject.Open%2A> method causes an <xref:System.ServiceModel.ICommunicationObject> to enter into the <xref:System.ServiceModel.CommunicationState.Opening> state where it remains until the open operation succeeds, the open operation times out or fails and the object becomes faulted, or the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span>  
  
 <span data-ttu-id="02bab-212">W <xref:System.ServiceModel.CommunicationState.Opened> stanu, <xref:System.ServiceModel.ICommunicationObject> można używać (na przykład wiadomości mogą być odbierane), ale nie jest już można skonfigurować.</span><span class="sxs-lookup"><span data-stu-id="02bab-212">In the <xref:System.ServiceModel.CommunicationState.Opened> state, the <xref:System.ServiceModel.ICommunicationObject> is usable (for example, messages can be received), but it is no longer configurable.</span></span>  
  
 <span data-ttu-id="02bab-213">Istnieje również asynchroniczną wersję inicjowanego przez wywołanie metody open <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> oraz zostać zakończona, wywołując <xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29>.</span><span class="sxs-lookup"><span data-stu-id="02bab-213">There is also an asynchronous version of the open method that is initiated by calling <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> and completed by calling <xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationException"><span data-ttu-id="02bab-214"><see cref="T:System.ServiceModel.ICommunicationObject" /> Nie może zostać otwarty i została wprowadzona <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> stanu.</span><span class="sxs-lookup"><span data-stu-id="02bab-214">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="02bab-215">Określony limit czasu upłynął przed <see cref="T:System.ServiceModel.ICommunicationObject" /> mógł wprowadź <see cref="F:System.ServiceModel.CommunicationState.Opened" /> stanu i została wprowadzona <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> stanu.</span><span class="sxs-lookup"><span data-stu-id="02bab-215">The specified timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="02bab-216">Operacja musi zgłosić <see cref="T:System.TimeoutException" /> Jeśli określonego <paramref name="timeout" /> został przekroczony.</span><span class="sxs-lookup"><span data-stu-id="02bab-216">The operation must throw a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Opened">
      <MemberSignature Language="C#" Value="event EventHandler Opened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Opened" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Opened" />
      <MemberSignature Language="VB.NET" Value="Event Opened As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Opened;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02bab-217">Występuje, gdy obiekt komunikacyjny zakończeniu jego przejście ze stanu otwierania w stanie otwartym.</span><span class="sxs-lookup"><span data-stu-id="02bab-217">Occurs when the communication object completes its transition from the opening state into the opened state.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Opening">
      <MemberSignature Language="C#" Value="event EventHandler Opening;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Opening" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Opening" />
      <MemberSignature Language="VB.NET" Value="Event Opening As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Opening;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02bab-218">Występuje, gdy obiekt komunikacyjny najpierw przechodzi do stanu otwierania.</span><span class="sxs-lookup"><span data-stu-id="02bab-218">Occurs when the communication object first enters the opening state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02bab-219">To zdarzenie występuje, gdy obiekt komunikacyjny najpierw zaczyna przejście od <xref:System.ServiceModel.CommunicationState.Created> stanu do <xref:System.ServiceModel.CommunicationState.Opened> stanu natychmiast po <xref:System.ServiceModel.ICommunicationObject.Open%2A> lub <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="02bab-219">This event occurs when the communication object first begins to transition from the <xref:System.ServiceModel.CommunicationState.Created> state into the <xref:System.ServiceModel.CommunicationState.Opened> state, immediately after either the <xref:System.ServiceModel.ICommunicationObject.Open%2A> or <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> method is invoked.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.ServiceModel.CommunicationState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.CommunicationState State" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ICommunicationObject.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As CommunicationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::CommunicationState State { System::ServiceModel::CommunicationState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.CommunicationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02bab-220">Pobiera bieżący stan obiektu zorientowane na komunikację.</span><span class="sxs-lookup"><span data-stu-id="02bab-220">Gets the current state of the communication-oriented object.</span></span></summary>
        <value><span data-ttu-id="02bab-221">Wartość <see cref="T:System.ServiceModel.CommunicationState" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="02bab-221">The value of the <see cref="T:System.ServiceModel.CommunicationState" /> of the object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02bab-222">Dostępne stany głównego komunikacji <xref:System.ServiceModel.ICommunicationObject> są:</span><span class="sxs-lookup"><span data-stu-id="02bab-222">The main communication states available to an <xref:System.ServiceModel.ICommunicationObject> are:</span></span>  
  
-   <span data-ttu-id="02bab-223"><xref:System.ServiceModel.CommunicationState.Created><xref:System.ServiceModel.CommunicationState.Opened></span><span class="sxs-lookup"><span data-stu-id="02bab-223"><xref:System.ServiceModel.CommunicationState.Created> <xref:System.ServiceModel.CommunicationState.Opened></span></span>  
  
-   <xref:System.ServiceModel.CommunicationState.Closed>  
  
-   <xref:System.ServiceModel.CommunicationState.Faulted>  
  
 <span data-ttu-id="02bab-224">Dostępne są również przejściowymi stanów, które taki obiekt może być podczas przejścia między głównym pierwsze trzy stany:</span><span class="sxs-lookup"><span data-stu-id="02bab-224">There are also transitory states that such an object can occupy when transitioning between the first three main states:</span></span>  
  
-   <xref:System.ServiceModel.CommunicationState.Opening>  
  
-   <xref:System.ServiceModel.CommunicationState.Closing>  
  
 <span data-ttu-id="02bab-225">To <xref:System.ServiceModel.CommunicationState> definiuje stanów, które są prawidłowe dla wszystkich obiektów zorientowane na komunikacji w systemie, w tym odbiorniki kanałów, fabryki kanału i odbiornika i <xref:System.ServiceModel.ServiceHost> klasy.</span><span class="sxs-lookup"><span data-stu-id="02bab-225">This <xref:System.ServiceModel.CommunicationState> defines the states that are valid for all communication-oriented objects in the system, including channels, listeners, the channel and listener factories, and the <xref:System.ServiceModel.ServiceHost> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>