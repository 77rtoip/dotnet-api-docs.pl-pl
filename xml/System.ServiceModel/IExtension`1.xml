<Type Name="IExtension&lt;T&gt;" FullName="System.ServiceModel.IExtension&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="19a4cebc545321c4cac767f600199ab9db3d9c3d" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69232919" /></Metadata><TypeSignature Language="C#" Value="public interface IExtension&lt;T&gt; where T : IExtensibleObject&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IExtension`1&lt;(class System.ServiceModel.IExtensibleObject`1&lt;!T&gt;) T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.IExtension`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IExtension(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : IExtensibleObject&lt;T&gt;public interface class IExtension" />
  <TypeSignature Language="F#" Value="type IExtension&lt;'T (requires 'T :&gt; IExtensibleObject&lt;'T&gt;)&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <InterfaceName>System.ServiceModel.IExtensibleObject&lt;T&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T"><span data-ttu-id="f1bdb-101">Obiekt, który uczestniczy w zachowaniu niestandardowym.</span><span class="sxs-lookup"><span data-stu-id="f1bdb-101">The object that participates in the custom behavior.</span></span></typeparam>
    <summary><span data-ttu-id="f1bdb-102">Włącza obiekt do rozszerania innego obiektu za poorednictwem agregacji.</span><span class="sxs-lookup"><span data-stu-id="f1bdb-102">Enables an object to extend another object through aggregation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1bdb-103">Funkcja WCF umożliwia rozszerzanie <xref:System.ServiceModel.IExtensibleObject%601?displayProperty=nameWithType> obiektów <xref:System.ServiceModel.IContextChannel?displayProperty=nameWithType>(klasy, <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType> <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType>, i <xref:System.ServiceModel.OperationContext?displayProperty=nameWithType> ) przez dodanie nowego stanu lub zachowania przy użyciu jego wzorca rozszerzalnych obiektów.</span><span class="sxs-lookup"><span data-stu-id="f1bdb-103">WCF allows you to extend <xref:System.ServiceModel.IExtensibleObject%601?displayProperty=nameWithType> objects (the <xref:System.ServiceModel.IContextChannel?displayProperty=nameWithType>, <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType>, <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType>, and <xref:System.ServiceModel.OperationContext?displayProperty=nameWithType> classes) by adding a new state or behavior by using its extensible object pattern.</span></span> <span data-ttu-id="f1bdb-104">Rozszerzalny wzór obiektu jest używany w programie WCF do rozszerzania istniejących klas uruchomieniowych o nowe funkcje lub do dodawania nowych funkcji stanu do obiektu.</span><span class="sxs-lookup"><span data-stu-id="f1bdb-104">The extensible object pattern is used in WCF to either extend existing run-time classes with new functionality or to add new state features to an object.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="public void Attach (T owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Attach(!T owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.IExtension`1.Attach(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Attach (owner As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Attach(T owner);" />
      <MemberSignature Language="F#" Value="abstract member Attach : 'T -&gt; unit" Usage="iExtension.Attach owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="T" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="f1bdb-105">Rozszerzalny obiekt, który agreguje to rozszerzenie.</span><span class="sxs-lookup"><span data-stu-id="f1bdb-105">The extensible object that aggregates this extension.</span></span></param>
        <summary><span data-ttu-id="f1bdb-106">Umożliwia znalezienie obiektu rozszerzenia, gdy został zagregowany.</span><span class="sxs-lookup"><span data-stu-id="f1bdb-106">Enables an extension object to find out when it has been aggregated.</span></span> <span data-ttu-id="f1bdb-107">Wywoływana, gdy rozszerzenie zostanie dodane do <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="f1bdb-107">Called when the extension is added to the <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1bdb-108">Użyj tej metody, aby śledzić <xref:System.ServiceModel.IExtensibleObject%601> obiekt, do którego należy bieżące wystąpienie rozszerzenia.</span><span class="sxs-lookup"><span data-stu-id="f1bdb-108">Use this method to keep track of the <xref:System.ServiceModel.IExtensibleObject%601> object to which the current instance of the extension belongs.</span></span> <span data-ttu-id="f1bdb-109">To wywołanie umożliwia rozszerzeniom możliwość obsługi zdarzeń lub Sprawdzanie właściwości ich właściciela.</span><span class="sxs-lookup"><span data-stu-id="f1bdb-109">This call gives extensions a chance to handle events or inspect properties of their owner.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1bdb-110">Poniższy przykładowy kod pokazuje, <xref:System.ServiceModel.IExtensibleObject%601> jak ta metoda może być używana do śledzenia obiektu, do którego należy bieżące wystąpienie rozszerzenia.</span><span class="sxs-lookup"><span data-stu-id="f1bdb-110">The following example code shows how this method can be used to keep track of the <xref:System.ServiceModel.IExtensibleObject%601> object to which the current instance of the extension belongs.</span></span>  
  
```csharp  
InstanceContext owner;  
  
public void Attach(InstanceContext owner)  
{  
  this.owner = owner;   
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="public void Detach (T owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Detach(!T owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.IExtension`1.Detach(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Detach (owner As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Detach(T owner);" />
      <MemberSignature Language="F#" Value="abstract member Detach : 'T -&gt; unit" Usage="iExtension.Detach owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="T" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="f1bdb-111">Rozszerzalny obiekt, który agreguje to rozszerzenie.</span><span class="sxs-lookup"><span data-stu-id="f1bdb-111">The extensible object that aggregates this extension.</span></span></param>
        <summary><span data-ttu-id="f1bdb-112">Umożliwia znalezienie obiektu, gdy nie jest on już agregowany.</span><span class="sxs-lookup"><span data-stu-id="f1bdb-112">Enables an object to find out when it is no longer aggregated.</span></span> <span data-ttu-id="f1bdb-113">Wywoływana, <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /> gdy rozszerzenie zostanie usunięte z właściwości.</span><span class="sxs-lookup"><span data-stu-id="f1bdb-113">Called when an extension is removed from the <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1bdb-114"><xref:System.ServiceModel.IExtension%601.Detach%2A> Użyj metody, aby dowiedzieć się, kiedy rozszerzenie zostało usunięte.</span><span class="sxs-lookup"><span data-stu-id="f1bdb-114">Use the <xref:System.ServiceModel.IExtension%601.Detach%2A> method to find out when the extension has been removed.</span></span> <span data-ttu-id="f1bdb-115">Rozszerzenie może używać tego do odpinania zdarzeń na rozszerzalnym obiekcie.</span><span class="sxs-lookup"><span data-stu-id="f1bdb-115">An extension can use this to unhook events on the extensible object.</span></span> <span data-ttu-id="f1bdb-116">Rozszerzenie może również generować <xref:System.InvalidOperationException?displayProperty=nameWithType> z tej metody, aby wskazać, że po dodaniu nie można usunąć rozszerzenia.</span><span class="sxs-lookup"><span data-stu-id="f1bdb-116">An extension can also throw <xref:System.InvalidOperationException?displayProperty=nameWithType> from this method to indicate that, once added, the extension cannot be removed.</span></span>  
  
 <span data-ttu-id="f1bdb-117">Należy zauważyć, że ta metoda nie jest wywoływana, gdy obiekt właściciela jest usunięty lub zamknięty.</span><span class="sxs-lookup"><span data-stu-id="f1bdb-117">Note that this method is not called when the owner object is disposed or closed.</span></span> <span data-ttu-id="f1bdb-118">W razie potrzeby jest to rozszerzenie lub kod, który dodaje rozszerzenie, aby podłączyć odpowiednie <xref:System.ServiceModel.ICommunicationObject?displayProperty=nameWithType> zdarzenia lub zaimplementować odpowiednie interfejsy (dla <xref:System.ServiceModel.OperationContext?displayProperty=nameWithType>), aby obserwować cykl życia właściciela.</span><span class="sxs-lookup"><span data-stu-id="f1bdb-118">If needed, it is up to the extension or the code adding the extension to hook the appropriate <xref:System.ServiceModel.ICommunicationObject?displayProperty=nameWithType> events or implement the appropriate interfaces (for <xref:System.ServiceModel.OperationContext?displayProperty=nameWithType>) to observe the lifecycle of the owner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
