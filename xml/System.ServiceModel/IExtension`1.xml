<Type Name="IExtension&lt;T&gt;" FullName="System.ServiceModel.IExtension&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3cd9ef7ba62ca0261201ace92772b919330c31e3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IExtension&lt;T&gt; where T : IExtensibleObject&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IExtension`1&lt;(class System.ServiceModel.IExtensibleObject`1&lt;!T&gt;) T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.IExtension`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IExtension(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : IExtensibleObject&lt;T&gt;public interface class IExtension" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <InterfaceName>System.ServiceModel.IExtensibleObject&lt;T&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="ff7e6-101">Obiekt, który uczestniczy w zachowaniu niestandardowych.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ff7e6-101">The object that participates in the custom behavior.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="ff7e6-102">Umożliwia obiekt, aby rozszerzyć inny obiekt, za pośrednictwem agregacji.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ff7e6-102">Enables an object to extend another object through aggregation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[indigo2](~/includes/indigo2-md.md)]<span data-ttu-id="ff7e6-103"> umożliwia rozszerzanie <xref:System.ServiceModel.IExtensibleObject%601?displayProperty=nameWithType> obiektów ( <xref:System.ServiceModel.IContextChannel?displayProperty=nameWithType>, <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType>, <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType>, i <xref:System.ServiceModel.OperationContext?displayProperty=nameWithType> klasy) przez dodanie nowego stanu lub zachowania przy użyciu jego wzorzec rozszerzonego obiektu.</span><span class="sxs-lookup"><span data-stu-id="ff7e6-103"> allows you to extend <xref:System.ServiceModel.IExtensibleObject%601?displayProperty=nameWithType> objects (the <xref:System.ServiceModel.IContextChannel?displayProperty=nameWithType>, <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType>, <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType>, and <xref:System.ServiceModel.OperationContext?displayProperty=nameWithType> classes) by adding a new state or behavior by using its extensible object pattern.</span></span> <span data-ttu-id="ff7e6-104">Wzorzec extensible obiekt jest używany w [!INCLUDE[indigo2](~/includes/indigo2-md.md)] wydłużyć istniejące klasy środowiska wykonawczego z nowych funkcji lub dodawania nowych funkcji stanu do obiektu.</span><span class="sxs-lookup"><span data-stu-id="ff7e6-104">The extensible object pattern is used in [!INCLUDE[indigo2](~/includes/indigo2-md.md)] to either extend existing run-time classes with new functionality or to add new state features to an object.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="public void Attach (T owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Attach(!T owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.IExtension`1.Attach(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Attach (owner As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Attach(T owner);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="T" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="ff7e6-105">Obiekt rozszerzalnego agreguje tego rozszerzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff7e6-105">The extensible object that aggregates this extension.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff7e6-106">Umożliwia obiektu rozszerzenia dowiedzieć się, gdy ma zostać agregowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff7e6-106">Enables an extension object to find out when it has been aggregated.</span>
          </span>
          <span data-ttu-id="ff7e6-107">Wywoływane, gdy rozszerzenie zostanie dodany do <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff7e6-107">Called when the extension is added to the <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff7e6-108">Ta metoda służy do śledzenia <xref:System.ServiceModel.IExtensibleObject%601> obiekt, do której należy bieżącego wystąpienia rozszerzenia.</span><span class="sxs-lookup"><span data-stu-id="ff7e6-108">Use this method to keep track of the <xref:System.ServiceModel.IExtensibleObject%601> object to which the current instance of the extension belongs.</span></span> <span data-ttu-id="ff7e6-109">To wywołanie zapewnia rozszerzenia możliwość obsługi zdarzeń lub sprawdzić właściwości ich właściciela.</span><span class="sxs-lookup"><span data-stu-id="ff7e6-109">This call gives extensions a chance to handle events or inspect properties of their owner.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff7e6-110">Poniższy przykład kodu pokazuje, jak ta metoda może służyć do śledzenia <xref:System.ServiceModel.IExtensibleObject%601> obiekt, do której należy bieżącego wystąpienia rozszerzenia.</span><span class="sxs-lookup"><span data-stu-id="ff7e6-110">The following example code shows how this method can be used to keep track of the <xref:System.ServiceModel.IExtensibleObject%601> object to which the current instance of the extension belongs.</span></span>  
  
```csharp  
InstanceContext owner;  
  
public void Attach(InstanceContext owner)  
{  
  this.owner = owner;   
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="public void Detach (T owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Detach(!T owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.IExtension`1.Detach(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Detach (owner As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Detach(T owner);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="T" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="ff7e6-111">Obiekt rozszerzalnego agreguje tego rozszerzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff7e6-111">The extensible object that aggregates this extension.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff7e6-112">Umożliwia obiekt, aby ustalić, kiedy nie jest agregowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff7e6-112">Enables an object to find out when it is no longer aggregated.</span>
          </span>
          <span data-ttu-id="ff7e6-113">Wywoływane, gdy rozszerzenie zostanie usunięte z <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff7e6-113">Called when an extension is removed from the <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff7e6-114">Użyj <xref:System.ServiceModel.IExtension%601.Detach%2A> metodę, aby dowiedzieć się, gdy rozszerzenie został usunięty.</span><span class="sxs-lookup"><span data-stu-id="ff7e6-114">Use the <xref:System.ServiceModel.IExtension%601.Detach%2A> method to find out when the extension has been removed.</span></span> <span data-ttu-id="ff7e6-115">Rozszerzenia umożliwiają to odpięcie zdarzenia rozszerzonego obiektu.</span><span class="sxs-lookup"><span data-stu-id="ff7e6-115">An extension can use this to unhook events on the extensible object.</span></span> <span data-ttu-id="ff7e6-116">Rozszerzenie można również zgłosić <xref:System.InvalidOperationException?displayProperty=nameWithType> z tej metody w celu wskazania, że po dodaniu rozszerzenia nie może zostać usunięty.</span><span class="sxs-lookup"><span data-stu-id="ff7e6-116">An extension can also throw <xref:System.InvalidOperationException?displayProperty=nameWithType> from this method to indicate that, once added, the extension cannot be removed.</span></span>  
  
 <span data-ttu-id="ff7e6-117">Należy pamiętać, że ta metoda nie jest wywoływane, gdy właściciel obiektu jest usunięty lub zamknięty.</span><span class="sxs-lookup"><span data-stu-id="ff7e6-117">Note that this method is not called when the owner object is disposed or closed.</span></span> <span data-ttu-id="ff7e6-118">W razie potrzeby, jest rozszerzenie lub Dodawanie rozszerzenia do utworzenie punktu zaczepienia odpowiedni kod <xref:System.ServiceModel.ICommunicationObject?displayProperty=nameWithType> zdarzeń, lub zaimplementuj odpowiednich interfejsów (dla <xref:System.ServiceModel.OperationContext?displayProperty=nameWithType>) aby przyjrzeć się cyklu życia właściciela.</span><span class="sxs-lookup"><span data-stu-id="ff7e6-118">If needed, it is up to the extension or the code adding the extension to hook the appropriate <xref:System.ServiceModel.ICommunicationObject?displayProperty=nameWithType> events or implement the appropriate interfaces (for <xref:System.ServiceModel.OperationContext?displayProperty=nameWithType>) to observe the lifecycle of the owner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>