<Type Name="OperationContextScope" FullName="System.ServiceModel.OperationContextScope">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8e3a5390768c4fed7dc80c16b54934da75e86aaf" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69101745" /></Metadata><TypeSignature Language="C#" Value="public sealed class OperationContextScope : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OperationContextScope extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.OperationContextScope" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OperationContextScope&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OperationContextScope sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type OperationContextScope = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="05f89-101">Tworzy blok, w obrębie którego <see cref="T:System.ServiceModel.OperationContext" /> obiekt znajduje się w zakresie.</span><span class="sxs-lookup"><span data-stu-id="05f89-101">Creates a block within which an <see cref="T:System.ServiceModel.OperationContext" /> object is in scope.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05f89-102">Użyj klasy <xref:System.ServiceModel.OperationContextScope> , aby utworzyć zakres dla określonego <xref:System.ServiceModel.OperationContext> obiektu lub zakres dla nowego <xref:System.ServiceModel.OperationContext> obiektu przy użyciu określonego <xref:System.ServiceModel.IContextChannel> obiektu.</span><span class="sxs-lookup"><span data-stu-id="05f89-102">Use the <xref:System.ServiceModel.OperationContextScope> class to create a scope for a specific <xref:System.ServiceModel.OperationContext> object or a scope for a new <xref:System.ServiceModel.OperationContext> object using a specified <xref:System.ServiceModel.IContextChannel> object.</span></span> <span data-ttu-id="05f89-103"><xref:System.ServiceModel.OperationContextScope> Może być używana w usłudze Windows Communication Foundation (WCF) lub aplikacji klienckiej WCF.</span><span class="sxs-lookup"><span data-stu-id="05f89-103">An <xref:System.ServiceModel.OperationContextScope> can be used in a Windows Communication Foundation (WCF) service or WCF client application.</span></span>  
  
 <span data-ttu-id="05f89-104">Gdy obiekt ustanowił bieżący kontekst operacji, można <xref:System.ServiceModel.OperationContext> użyć do: <xref:System.ServiceModel.OperationContextScope></span><span class="sxs-lookup"><span data-stu-id="05f89-104">Once the <xref:System.ServiceModel.OperationContextScope> object has established the current operation context, you can use the <xref:System.ServiceModel.OperationContext> to:</span></span>  
  
-   <span data-ttu-id="05f89-105">Dostęp do i modyfikowanie nagłówków wiadomości przychodzących i wychodzących oraz innych właściwości.</span><span class="sxs-lookup"><span data-stu-id="05f89-105">Access and modify incoming and outgoing message headers and other properties.</span></span>  
  
-   <span data-ttu-id="05f89-106">Uzyskiwanie dostępu do środowiska uruchomieniowego, w tym dla dyspozytorów, hosta, kanału i rozszerzeń.</span><span class="sxs-lookup"><span data-stu-id="05f89-106">Access the runtime, including dispatchers, the host, channel, and extensions.</span></span>  
  
-   <span data-ttu-id="05f89-107">Dostęp do innych typów kontekstów, takich jak zabezpieczenia, wystąpienia i konteksty żądania.</span><span class="sxs-lookup"><span data-stu-id="05f89-107">Access other types of contexts, such as security, instance, and request contexts.</span></span>  
  
-   <span data-ttu-id="05f89-108">Uzyskaj dostęp do kanału skojarzonego z <xref:System.ServiceModel.OperationContext> obiektem lub (Jeśli kanał implementuje <xref:System.ServiceModel.Channels.ISession?displayProperty=nameWithType>) identyfikator sesji skojarzonego kanału.</span><span class="sxs-lookup"><span data-stu-id="05f89-108">Access the channel associated with the <xref:System.ServiceModel.OperationContext> object or (if the channel implements <xref:System.ServiceModel.Channels.ISession?displayProperty=nameWithType>) the associated channel's session identifier.</span></span>  
  
 <span data-ttu-id="05f89-109">Gdy jest tworzony, bieżąca <xref:System.ServiceModel.OperationContext> jest zachowywana, a nowy <xref:System.ServiceModel.OperationContext> zostanie zwrócony przez <xref:System.ServiceModel.OperationContext.Current%2A> właściwość. <xref:System.ServiceModel.OperationContextScope></span><span class="sxs-lookup"><span data-stu-id="05f89-109">When an <xref:System.ServiceModel.OperationContextScope> is created, the current <xref:System.ServiceModel.OperationContext> is stored and the new <xref:System.ServiceModel.OperationContext> becomes the one returned by the <xref:System.ServiceModel.OperationContext.Current%2A> property.</span></span> <span data-ttu-id="05f89-110">Po usunięciu <xref:System.ServiceModel.OperationContext>zostanieprzywróconyoryginał <xref:System.ServiceModel.OperationContextScope> .</span><span class="sxs-lookup"><span data-stu-id="05f89-110">When the <xref:System.ServiceModel.OperationContextScope> is disposed, the original <xref:System.ServiceModel.OperationContext> is restored.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="05f89-111">Nie używaj asynchronicznego wzorca "await" w bloku OperationContextScope.</span><span class="sxs-lookup"><span data-stu-id="05f89-111">Do not use the asynchronous "await" pattern within a OperationContextScope block.</span></span> <span data-ttu-id="05f89-112">Gdy wystąpi kontynuacja, może działać w innym wątku, a OperationContextScope jest specyficzny dla wątku.</span><span class="sxs-lookup"><span data-stu-id="05f89-112">When the continuation occurs, it may run on a different thread and OperationContextScope is thread specific.</span></span> <span data-ttu-id="05f89-113">Jeśli musisz wywołać "await" dla wywołania asynchronicznego, użyj go poza blokiem OperationContextScope.</span><span class="sxs-lookup"><span data-stu-id="05f89-113">If you need to call "await" for an async call, use it outside of the OperationContextScope block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05f89-114">Poniższy przykład pokazuje, <xref:System.ServiceModel.OperationContextScope> jak używać do tworzenia nowego kontekstu w aplikacji klienckiej w celu dodania niestandardowego nagłówka do wiadomości wychodzącej.</span><span class="sxs-lookup"><span data-stu-id="05f89-114">The following example shows how to use the <xref:System.ServiceModel.OperationContextScope> to create a new context in a client application to add a custom header to the outgoing message.</span></span>  
  
 [!code-csharp[OperationContextScope#3](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontextscope/cs/client.cs#3)]
 [!code-vb[OperationContextScope#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontextscope/vb/client.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="05f89-115">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.OperationContextScope" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="05f89-115">Initializes a new instance of the <see cref="T:System.ServiceModel.OperationContextScope" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OperationContextScope (System.ServiceModel.IContextChannel channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.IContextChannel channel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (channel As IContextChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OperationContextScope(System::ServiceModel::IContextChannel ^ channel);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.OperationContextScope : System.ServiceModel.IContextChannel -&gt; System.ServiceModel.OperationContextScope" Usage="new System.ServiceModel.OperationContextScope channel" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="channel" Type="System.ServiceModel.IContextChannel" />
      </Parameters>
      <Docs>
        <param name="channel"><span data-ttu-id="05f89-116">Kanał, który ma być używany podczas tworzenia zakresu dla nowego <see cref="T:System.ServiceModel.OperationContext" />.</span><span class="sxs-lookup"><span data-stu-id="05f89-116">The channel to use when creating the scope for a new <see cref="T:System.ServiceModel.OperationContext" />.</span></span></param>
        <summary><span data-ttu-id="05f89-117">Inicjuje nowe wystąpienie <see cref="T:System.ServiceModel.OperationContextScope" /> klasy, która używa określonego <see cref="T:System.ServiceModel.IContextChannel" /> do utworzenia nowego <see cref="T:System.ServiceModel.OperationContext" /> dla zakresu.</span><span class="sxs-lookup"><span data-stu-id="05f89-117">Initializes a new instance of the <see cref="T:System.ServiceModel.OperationContextScope" /> class that uses the specified <see cref="T:System.ServiceModel.IContextChannel" /> to create a new <see cref="T:System.ServiceModel.OperationContext" /> for the scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05f89-118">Użyj konstruktora, aby utworzyć nowy <xref:System.ServiceModel.OperationContext> kanał klienta, którego można użyć do dodawania lub modyfikowania nagłówków komunikatów wychodzących, odczytywania nagłówków wiadomości przychodzących lub uzyskiwania dostępu do innych właściwości <xref:System.ServiceModel.OperationContext>czasu wykonywania. <xref:System.ServiceModel.OperationContextScope.%23ctor%2A></span><span class="sxs-lookup"><span data-stu-id="05f89-118">Use the <xref:System.ServiceModel.OperationContextScope.%23ctor%2A> constructor to create a new <xref:System.ServiceModel.OperationContext> for a client channel that can be used to add or modify outbound message headers, read incoming message headers, or access other run-time properties of the <xref:System.ServiceModel.OperationContext>.</span></span>  
  
 <span data-ttu-id="05f89-119">Nagłówki dodane do <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A?displayProperty=nameWithType> właściwości nowo utworzonego <xref:System.ServiceModel.OperationContext> stosują się tylko do kanału <xref:System.ServiceModel.OperationContextScope.%23ctor%2A> , który został przesłany do konstruktora.</span><span class="sxs-lookup"><span data-stu-id="05f89-119">The headers added to the <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A?displayProperty=nameWithType> property of the newly created <xref:System.ServiceModel.OperationContext> apply only to the channel that was passed to the <xref:System.ServiceModel.OperationContextScope.%23ctor%2A> constructor.</span></span> <span data-ttu-id="05f89-120">Jeśli użytkownik utworzy nowy kanał w swoim zakresie, nagłówki nie są stosowane do komunikatów wysyłanych w nowym kanale.</span><span class="sxs-lookup"><span data-stu-id="05f89-120">If the user creates a new channel within its scope then the headers are not applied to messages sent on the new channel.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05f89-121">Poniższy przykład pokazuje, <xref:System.ServiceModel.OperationContextScope> jak używać do tworzenia nowego kontekstu w aplikacji klienckiej w celu dodania niestandardowego nagłówka do wiadomości wychodzącej.</span><span class="sxs-lookup"><span data-stu-id="05f89-121">The following example shows how to use the <xref:System.ServiceModel.OperationContextScope> to create a new context in a client application in order to add a custom header to the outgoing message.</span></span>  
  
 [!code-csharp[OperationContextScope#4](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontextscope/cs/client.cs#4)]
 [!code-vb[OperationContextScope#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontextscope/vb/client.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OperationContextScope (System.ServiceModel.OperationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.OperationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As OperationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OperationContextScope(System::ServiceModel::OperationContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.OperationContextScope : System.ServiceModel.OperationContext -&gt; System.ServiceModel.OperationContextScope" Usage="new System.ServiceModel.OperationContextScope context" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.OperationContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="05f89-122">Aktywny <see cref="T:System.ServiceModel.OperationContext" /> w utworzonym zakresie.</span><span class="sxs-lookup"><span data-stu-id="05f89-122">The active <see cref="T:System.ServiceModel.OperationContext" /> in the created scope.</span></span></param>
        <summary><span data-ttu-id="05f89-123">Inicjuje nowe wystąpienie <see cref="T:System.ServiceModel.OperationContextScope" /> klasy w celu utworzenia zakresu dla określonego <see cref="T:System.ServiceModel.OperationContext" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="05f89-123">Initializes a new instance of the <see cref="T:System.ServiceModel.OperationContextScope" /> class to create a scope for the specified <see cref="T:System.ServiceModel.OperationContext" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05f89-124">Użyj konstruktora <xref:System.ServiceModel.OperationContextScope.%23ctor%2A> , aby utworzyć blok kodu, w którym określony <xref:System.ServiceModel.OperationContextScope> obiekt jest bieżącym zakresem.</span><span class="sxs-lookup"><span data-stu-id="05f89-124">Use the <xref:System.ServiceModel.OperationContextScope.%23ctor%2A> constructor to create a code block within which the specified <xref:System.ServiceModel.OperationContextScope> object is the current scope.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationContextScope.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="operationContextScope.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="05f89-125">Przywraca pierwotny <see cref="T:System.ServiceModel.OperationContext" /> kontekst do aktywnego kontekstu i odtwarza <see cref="T:System.ServiceModel.OperationContextScope" /> obiekt.</span><span class="sxs-lookup"><span data-stu-id="05f89-125">Restores the original <see cref="T:System.ServiceModel.OperationContext" /> to the active context and recycles the <see cref="T:System.ServiceModel.OperationContextScope" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
