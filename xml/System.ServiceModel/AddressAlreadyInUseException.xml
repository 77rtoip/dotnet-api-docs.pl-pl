<Type Name="AddressAlreadyInUseException" FullName="System.ServiceModel.AddressAlreadyInUseException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9fb1483bbd27a1991678d0dd8143ffbcaf8af173" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69102899" /></Metadata><TypeSignature Language="C#" Value="public class AddressAlreadyInUseException : System.ServiceModel.CommunicationException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit AddressAlreadyInUseException extends System.ServiceModel.CommunicationException" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.AddressAlreadyInUseException" />
  <TypeSignature Language="VB.NET" Value="Public Class AddressAlreadyInUseException&#xA;Inherits CommunicationException" />
  <TypeSignature Language="C++ CLI" Value="public ref class AddressAlreadyInUseException : System::ServiceModel::CommunicationException" />
  <TypeSignature Language="F#" Value="type AddressAlreadyInUseException = class&#xA;    inherit CommunicationException" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.CommunicationException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7d078-101">Wyjątek, który jest generowany, gdy adres jest niedostępny, ponieważ jest już używany.</span><span class="sxs-lookup"><span data-stu-id="7d078-101">The exception that is thrown when an address is unavailable because it is already in use.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d078-102">Ten wyjątek pochodzi z <xref:System.ServiceModel.CommunicationException> tego, który reprezentuje klasę błędów, które mogą zostać zgłoszone podczas komunikacji między punktami Windows Communication Foundation końcowymi</span><span class="sxs-lookup"><span data-stu-id="7d078-102">This exception derives from <xref:System.ServiceModel.CommunicationException> that represents a class of recoverable errors that may be thrown during communication between endpoints and that robust Windows Communication Foundation (WCF) client and service applications are expected to handle.</span></span> <span data-ttu-id="7d078-103">Aby zapobiec przechwyceniu <xref:System.ServiceModel.CommunicationException> bardziej szczegółowych <xref:System.ServiceModel.AddressAlreadyInUseException>informacji przez program obsługi, Przechwyć ten wyjątek przed obsługą <xref:System.ServiceModel.CommunicationException>.</span><span class="sxs-lookup"><span data-stu-id="7d078-103">To prevent a handler for <xref:System.ServiceModel.CommunicationException> from catching the more specific <xref:System.ServiceModel.AddressAlreadyInUseException>, catch this exception prior to handling <xref:System.ServiceModel.CommunicationException>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7d078-104">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="7d078-104">Initializes a new instance of the <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d078-105">Jeśli chcesz przekazać użytkownikowi komunikat o błędzie, użyj <xref:System.ServiceModel.AddressAlreadyInUseException.%23ctor%28System.String%29> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="7d078-105">If you want to pass an error message to the user, use the <xref:System.ServiceModel.AddressAlreadyInUseException.%23ctor%28System.String%29> constructor.</span></span>  
  
 <span data-ttu-id="7d078-106">Jeśli chcesz przekazać komunikat o błędzie i odwołanie do wewnętrznego wyjątku, który jest przyczyną wyjątku dla użytkownika, użyj <xref:System.ServiceModel.AddressAlreadyInUseException.%23ctor%28System.String%2CSystem.Exception%29> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="7d078-106">If you want to pass an error message and a reference to the inner exception that is the cause of the exception to the user, use the <xref:System.ServiceModel.AddressAlreadyInUseException.%23ctor%28System.String%2CSystem.Exception%29> constructor.</span></span>  
  
 <span data-ttu-id="7d078-107">Jeśli chcesz przekazać informacje o serializacji i kontekście przesyłania strumieniowego, użyj <xref:System.ServiceModel.AddressAlreadyInUseException.%23ctor%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="7d078-107">If you want to pass serialization information and streaming context, use the <xref:System.ServiceModel.AddressAlreadyInUseException.%23ctor%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AddressAlreadyInUseException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.AddressAlreadyInUseException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AddressAlreadyInUseException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d078-108">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="7d078-108">Initializes a new instance of the <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AddressAlreadyInUseException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AddressAlreadyInUseException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.AddressAlreadyInUseException : string -&gt; System.ServiceModel.AddressAlreadyInUseException" Usage="new System.ServiceModel.AddressAlreadyInUseException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="7d078-109">Komunikat o błędzie wyjaśniający przyczynę wyjątku.</span><span class="sxs-lookup"><span data-stu-id="7d078-109">The error message that explains the reason for the exception.</span></span></param>
        <summary><span data-ttu-id="7d078-110">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> klasy przy użyciu określonego komunikatu o błędzie.</span><span class="sxs-lookup"><span data-stu-id="7d078-110">Initializes a new instance of the <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> class with a specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d078-111">Użyj tego konstruktora, gdy chcesz przekazać użytkownikowi komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="7d078-111">Use this constructor when you want to pass an error message to the user.</span></span> <span data-ttu-id="7d078-112">Zawartość parametru message powinna być zrozumiała dla zamierzonego użytkownika.</span><span class="sxs-lookup"><span data-stu-id="7d078-112">The content of the message parameter should be understandable to the intended user.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AddressAlreadyInUseException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AddressAlreadyInUseException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.AddressAlreadyInUseException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.ServiceModel.AddressAlreadyInUseException" Usage="new System.ServiceModel.AddressAlreadyInUseException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="7d078-113"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> Zawiera wszystkie dane wymagane do serializacji wyjątku.</span><span class="sxs-lookup"><span data-stu-id="7d078-113">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</span></span></param>
        <param name="context"><span data-ttu-id="7d078-114"><see cref="T:System.Runtime.Serialization.StreamingContext" /> Określa źródło i miejsce docelowe strumienia.</span><span class="sxs-lookup"><span data-stu-id="7d078-114">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</span></span></param>
        <summary><span data-ttu-id="7d078-115">Inicjuje nowe wystąpienie <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> klasy z informacjami o serializacji i określonym kontekście przesyłania strumieniowego.</span><span class="sxs-lookup"><span data-stu-id="7d078-115">Initializes a new instance of the <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> class with serialization information and streaming context specified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d078-116">Ten konstruktor jest wywoływany podczas deserializacji w celu odtworzenia obiektu wyjątku przesyłanego przez strumień.</span><span class="sxs-lookup"><span data-stu-id="7d078-116">This constructor is called during deserialization to reconstruct the exception object transmitted over a stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AddressAlreadyInUseException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AddressAlreadyInUseException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.AddressAlreadyInUseException : string * Exception -&gt; System.ServiceModel.AddressAlreadyInUseException" Usage="new System.ServiceModel.AddressAlreadyInUseException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="7d078-117">Komunikat o błędzie wyjaśniający przyczynę wyjątku.</span><span class="sxs-lookup"><span data-stu-id="7d078-117">The error message that explains the reason for the exception.</span></span></param>
        <param name="innerException"><span data-ttu-id="7d078-118"><see cref="T:System.Exception" /> , Który spowodował zgłoszenie bieżącego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="7d078-118">The <see cref="T:System.Exception" /> that caused the current exception to be thrown.</span></span></param>
        <summary><span data-ttu-id="7d078-119">Inicjuje nowe wystąpienie <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> klasy z określonym komunikatem o błędzie i odwołaniem do wyjątku wewnętrznego, który jest przyczyną wyjątku.</span><span class="sxs-lookup"><span data-stu-id="7d078-119">Initializes a new instance of the <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> class with a specified error message and a reference to the inner exception that is the cause of the exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d078-120">Użyj tego konstruktora, gdy chcesz przekazać komunikat o błędzie i informacje o wyjątku wewnętrznym do użytkownika.</span><span class="sxs-lookup"><span data-stu-id="7d078-120">Use this constructor when you want to pass an error message and information about an inner exception up to the user.</span></span> <span data-ttu-id="7d078-121">Zawartość parametru message powinna być zrozumiała dla zamierzonych użytkowników.</span><span class="sxs-lookup"><span data-stu-id="7d078-121">The content of the message parameter should be understandable to the intended users.</span></span>  
  
 <span data-ttu-id="7d078-122">Wyjątek, który jest generowany jako bezpośredni wynik poprzedniego wyjątku może zawierać odwołanie do poprzedniego wyjątku we <xref:System.Exception.InnerException%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="7d078-122">An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="7d078-123">Właściwość zwraca tę samą wartość, która jest przenoszona do konstruktora `null` lub odwołanie (`Nothing` w Visual Basic), jeśli <xref:System.Exception.InnerException%2A> właściwość nie poda wewnętrznej wartości wyjątku do konstruktora. <xref:System.Exception.InnerException%2A></span><span class="sxs-lookup"><span data-stu-id="7d078-123">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a `null` reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
