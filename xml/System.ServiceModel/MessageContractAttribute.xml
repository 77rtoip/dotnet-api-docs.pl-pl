<Type Name="MessageContractAttribute" FullName="System.ServiceModel.MessageContractAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="185956c8d35c7d5f536b784d75e1096537c9a36f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30576211" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class MessageContractAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MessageContractAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.MessageContractAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MessageContractAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageContractAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiuje silnie typizowaną klasę, która odpowiada na komunikat protokołu SOAP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.ServiceModel.MessageContractAttribute> atrybutu, aby określić strukturę koperty protokołu SOAP dla danego komunikatu. Usługa może służyć komunikatu jako parametr lub typ zwracany w operacji usługi. Informacje dotyczące sterowania serializacji zawartość treści protokołu SOAP bez modyfikowania samego koperty protokołu SOAP domyślnego, zobacz <xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=nameWithType>, [Określanie transferu danych w kontraktach usług](~/docs/framework/wcf/feature-details/specifying-data-transfer-in-service-contracts.md), i [Using Kontrakty danych](~/docs/framework/wcf/feature-details/using-data-contracts.md).  
  
> [!NOTE]
>  Nie można używać typów niestandardowych komunikatów w regularnych można serializować parametrów operacji usługi. Użyj typów niestandardowych komunikatów lub które można serializować parametrów, które nie są <xref:System.ServiceModel.Channels.Message> obiektów. Aby uzyskać więcej informacji zobacz, [Określanie transferu danych w kontraktach usług](~/docs/framework/wcf/feature-details/specifying-data-transfer-in-service-contracts.md).  
  
 Aby zaimplementować kontrakt komunikatów dla określonego typu, dodawać adnotacje go przy użyciu <xref:System.ServiceModel.MessageContractAttribute> i adnotacje co najmniej jednego pola lub właściwości z klasy <xref:System.ServiceModel.MessageBodyMemberAttribute>, <xref:System.ServiceModel.MessageHeaderAttribute>, lub <xref:System.ServiceModel.MessageHeaderArrayAttribute>.  
  
> [!NOTE]
>  <xref:System.ServiceModel.MessageParameterAttribute?displayProperty=nameWithType> nie jest atrybutem kontraktu komunikatu i nie można używać w połączeniu z <xref:System.ServiceModel.MessageContractAttribute>.  
  
 Użyj <xref:System.ServiceModel.OperationContractAttribute.Action%2A> i <xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A> właściwości, aby określić wartość `<Action>` elementu komunikatu protokołu SOAP.  
  
-   Użyj <xref:System.ServiceModel.MessageContractAttribute.HasProtectionLevel%2A> i <xref:System.ServiceModel.MessageContractAttribute.ProtectionLevel%2A> właściwości w celu wskazania, czy typ komunikatu protokołu SOAP ma poziom ochrony, a jeśli tak, jakie są.  
  
-   Użyj <xref:System.ServiceModel.MessageContractAttribute.IsWrapped%2A> właściwości, aby wskazać, czy treść komunikatu ma element otoki, a jeśli tak, użyj <xref:System.ServiceModel.MessageContractAttribute.WrapperName%2A> i <xref:System.ServiceModel.MessageContractAttribute.WrapperNamespace%2A> właściwości, aby określić nazwę i przestrzeń nazw, odpowiednio elementu zawijania.  
  
 Aby uzyskać więcej informacji, zobacz [za pomocą kontraktów komunikatu](~/docs/framework/wcf/feature-details/using-message-contracts.md).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.ServiceModel.MessageContractAttribute> do kontrolowania struktury koperty protokołu SOAP dla komunikatu żądania i komunikat odpowiedzi i użyj obu <xref:System.ServiceModel.MessageHeaderAttribute> (Aby utworzyć nagłówek SOAP dla komunikatu odpowiedzi) i <xref:System.ServiceModel.MessageBodyMemberAttribute>(na przykład aby określić treść komunikatu żądań i odpowiedzi). Przykładowy kod zawiera przykład każdej wiadomości przy wysyłaniu.  
  
 [!code-csharp[MessageHeaderAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/messageheaderattribute/cs/services.cs#1)]
 [!code-vb[MessageHeaderAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/messageheaderattribute/vb/services.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageContractAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MessageContractAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageContractAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.MessageContractAttribute" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasProtectionLevel">
      <MemberSignature Language="C#" Value="public bool HasProtectionLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageContractAttribute.HasProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasProtectionLevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasProtectionLevel { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy wiadomość ma poziom ochrony.</summary>
        <value>
          <see langword="true" /> Jeśli wiadomości muszą być szyfrowane, podpisane, albo dla obu; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli to ustawienie jest `true`, poziom ochrony dla komunikatu jest wartością <xref:System.ServiceModel.MessageContractAttribute.ProtectionLevel%2A>. Aby uzyskać więcej informacji dotyczących poziomów ochrony i założenia i zakresy, zobacz [poziom ochrony opis](~/docs/framework/wcf/understanding-protection-level.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWrapped">
      <MemberSignature Language="C#" Value="public bool IsWrapped { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWrapped" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageContractAttribute.IsWrapped" />
      <MemberSignature Language="VB.NET" Value="Public Property IsWrapped As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWrapped { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy treść komunikatu ma element otoki.</summary>
        <value>
          <see langword="true" /> Jeśli treść wiadomości zawiera element otoki; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustaw wartość <xref:System.ServiceModel.MessageContractAttribute.IsWrapped%2A> do `false` do pomijania element otoki, do którego serializowany jest treść komunikatu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionLevel">
      <MemberSignature Language="C#" Value="public System.Net.Security.ProtectionLevel ProtectionLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.ProtectionLevel ProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageContractAttribute.ProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectionLevel As ProtectionLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::ProtectionLevel ProtectionLevel { System::Net::Security::ProtectionLevel get(); void set(System::Net::Security::ProtectionLevel value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Security.ProtectionLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość, która określić, czy wiadomości muszą być szyfrowane, podpisany, lub obie.</summary>
        <value>Jeden z <see cref="T:System.Net.Security.ProtectionLevel" /> wartości. Wartość domyślna to <see cref="F:System.Net.Security.ProtectionLevel.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji dotyczących poziomów ochrony i założenia i zakresy, zobacz [poziom ochrony opis](~/docs/framework/wcf/understanding-protection-level.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość przekazywana do właściwości, gdy ustawienie nie jest jednym z <see cref="T:System.Net.Security.ProtectionLevel" /> wartości.</exception>
      </Docs>
    </Member>
    <Member MemberName="WrapperName">
      <MemberSignature Language="C#" Value="public string WrapperName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WrapperName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageContractAttribute.WrapperName" />
      <MemberSignature Language="VB.NET" Value="Public Property WrapperName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WrapperName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę elementu otoki treści wiadomości.</summary>
        <value>Nazwa elementu otoki w treści wiadomości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.ServiceModel.MessageContractAttribute.WrapperName%2A> właściwości można ustawić nazwy elementu otoki.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość jest ciągiem pustym.</exception>
      </Docs>
    </Member>
    <Member MemberName="WrapperNamespace">
      <MemberSignature Language="C#" Value="public string WrapperNamespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WrapperNamespace" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageContractAttribute.WrapperNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Property WrapperNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WrapperNamespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obszar nazw elementu otoki treści wiadomości.</summary>
        <value>Przestrzeń nazw elementu otoki.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.ServiceModel.MessageContractAttribute.WrapperNamespace%2A> właściwości można ustawić przestrzeń nazw elementu otoki.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.ServiceModel.MessageContractAttribute> do kontrolowania struktury koperty protokołu SOAP dla komunikatu żądania i komunikat odpowiedzi i użyj obu <xref:System.ServiceModel.MessageHeaderAttribute> (Aby utworzyć nagłówek SOAP dla komunikatu odpowiedzi) i <xref:System.ServiceModel.MessageBodyMemberAttribute>(na przykład aby określić treść komunikatu żądań i odpowiedzi). Przykładowy kod zawiera przykład każdej wiadomości przy wysyłaniu.  
  
 [!code-csharp[MessageHeaderAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/messageheaderattribute/cs/services.cs#1)]
 [!code-vb[MessageHeaderAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/messageheaderattribute/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>