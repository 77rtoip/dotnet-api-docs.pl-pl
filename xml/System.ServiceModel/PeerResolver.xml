<Type Name="PeerResolver" FullName="System.ServiceModel.PeerResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c2e2314c5056323d9b83e16668843d9c296f5535" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69101258" /></Metadata><TypeSignature Language="C#" Value="public abstract class PeerResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PeerResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.PeerResolver" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PeerResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerResolver abstract" />
  <TypeSignature Language="F#" Value="type PeerResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b96a2-101">Określa typ podstawowy używany do definiowania kontraktu na potrzeby rejestracji i rozpoznawania identyfikatora siatki równorzędnej na adresy punktów końcowych węzłów uczestniczących w sieci.</span><span class="sxs-lookup"><span data-stu-id="b96a2-101">Specifies a base type used to define the contract for the registration and resolution of a peer mesh ID to the endpoint addresses of nodes participating in the mesh.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a2-102">Ta klasa jest klasą bazową dla implementacji niestandardowych obiektów rozpoznawania nazw elementów równorzędnych.</span><span class="sxs-lookup"><span data-stu-id="b96a2-102">This class is the base class for the implementation of custom peer name resolvers.</span></span> <span data-ttu-id="b96a2-103">Program rozpoznawania nazw równorzędnych to usługa odnajdywania używana przez kanały równorzędne do znajdowania węzłów równorzędnych uczestniczących w sieci równorzędnej.</span><span class="sxs-lookup"><span data-stu-id="b96a2-103">A peer name resolver is a discovery service used by peer channels to find peer nodes participating in a peer mesh.</span></span> <span data-ttu-id="b96a2-104">Jest również używany do "Zarejestruj" węzeł z siatką równorzędną, mechanizm, za pomocą którego węzeł równorzędny jest znany i dostępny w sieci równorzędnej.</span><span class="sxs-lookup"><span data-stu-id="b96a2-104">It is also used to "register" a node with a peer mesh, the mechanism by which the peer node becomes known and available from the peer mesh.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PeerResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b96a2-105">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.PeerResolver" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="b96a2-105">Initializes a new instance of the <see cref="T:System.ServiceModel.PeerResolver" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanShareReferrals">
      <MemberSignature Language="C#" Value="public abstract bool CanShareReferrals { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanShareReferrals" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.PeerResolver.CanShareReferrals" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanShareReferrals As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanShareReferrals { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanShareReferrals : bool" Usage="System.ServiceModel.PeerResolver.CanShareReferrals" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b96a2-106">Określa, czy program rozpoznawania nazw elementów równorzędnych może udostępniać odwołania.</span><span class="sxs-lookup"><span data-stu-id="b96a2-106">Gets whether the peer name resolver can share referrals.</span></span></summary>
        <value><span data-ttu-id="b96a2-107">W przypadku wartości true program rozpoznawania nazw elementów równorzędnych może udostępniać odwołania; Jeśli wartość jest równa false, nie może.</span><span class="sxs-lookup"><span data-stu-id="b96a2-107">If true, the peer name resolver can share referrals; if false, it cannot.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual void Initialize (System.ServiceModel.EndpointAddress address, System.ServiceModel.Channels.Binding binding, System.ServiceModel.Description.ClientCredentials credentials, System.ServiceModel.PeerResolvers.PeerReferralPolicy referralPolicy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class System.ServiceModel.EndpointAddress address, class System.ServiceModel.Channels.Binding binding, class System.ServiceModel.Description.ClientCredentials credentials, valuetype System.ServiceModel.PeerResolvers.PeerReferralPolicy referralPolicy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolver.Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(System::ServiceModel::EndpointAddress ^ address, System::ServiceModel::Channels::Binding ^ binding, System::ServiceModel::Description::ClientCredentials ^ credentials, System::ServiceModel::PeerResolvers::PeerReferralPolicy referralPolicy);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : System.ServiceModel.EndpointAddress * System.ServiceModel.Channels.Binding * System.ServiceModel.Description.ClientCredentials * System.ServiceModel.PeerResolvers.PeerReferralPolicy -&gt; unit&#xA;override this.Initialize : System.ServiceModel.EndpointAddress * System.ServiceModel.Channels.Binding * System.ServiceModel.Description.ClientCredentials * System.ServiceModel.PeerResolvers.PeerReferralPolicy -&gt; unit" Usage="peerResolver.Initialize (address, binding, credentials, referralPolicy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="credentials" Type="System.ServiceModel.Description.ClientCredentials" />
        <Parameter Name="referralPolicy" Type="System.ServiceModel.PeerResolvers.PeerReferralPolicy" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="b96a2-108"><see cref="T:System.ServiceModel.EndpointAddress" />zawiera nowy adres punktu końcowego tego wystąpienia równorzędnego programu rozpoznawania nazw.</span><span class="sxs-lookup"><span data-stu-id="b96a2-108"><see cref="T:System.ServiceModel.EndpointAddress" /> that contains the new endpoint address of this peer resolver instance.</span></span></param>
        <param name="binding"><span data-ttu-id="b96a2-109"><see cref="T:System.ServiceModel.Channels.Binding" />Określa nowe powiązanie sieciowe dla tego programu rozpoznawania równorzędnego.</span><span class="sxs-lookup"><span data-stu-id="b96a2-109"><see cref="T:System.ServiceModel.Channels.Binding" /> that specifies the new network binding for this peer resolver.</span></span></param>
        <param name="credentials"><span data-ttu-id="b96a2-110"><see cref="T:System.ServiceModel.Description.ClientCredentials" />Określa nowe poświadczenia klienta dla tego programu rozpoznawania elementów równorzędnych.</span><span class="sxs-lookup"><span data-stu-id="b96a2-110"><see cref="T:System.ServiceModel.Description.ClientCredentials" /> that specifies the new client credentials for this peer resolver.</span></span></param>
        <param name="referralPolicy"><span data-ttu-id="b96a2-111"><see cref="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" />Określa nowe zasady odwołań dla tego programu rozpoznawania elementów równorzędnych.</span><span class="sxs-lookup"><span data-stu-id="b96a2-111"><see cref="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" /> that specifies the new referral policy for this peer resolver.</span></span></param>
        <summary><span data-ttu-id="b96a2-112">Inicjuje bieżące wystąpienie programu rozpoznawania elementów równorzędnych z nowym podanym adresem punktu końcowego i ustawieniami.</span><span class="sxs-lookup"><span data-stu-id="b96a2-112">Initializes the current peer resolver instance with the new supplied endpoint address and settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a2-113">Ta metoda po prostu inicjuje istniejące wystąpienie programu rozpoznawania elementów równorzędnych; nie powoduje utworzenia nowego.</span><span class="sxs-lookup"><span data-stu-id="b96a2-113">This method simply initializes the existing peer resolver instance; it does not create a new one.</span></span> <span data-ttu-id="b96a2-114">Aby utworzyć nowy program rozpoznawania elementów równorzędnych, wywołaj metodę CreatePeerResolver na odpowiednim elemencie powiązania (na przykład <xref:System.ServiceModel.Channels.PnrpPeerResolverBindingElement>).</span><span class="sxs-lookup"><span data-stu-id="b96a2-114">To create a new peer resolver, call the CreatePeerResolver method on the corresponding binding element (for example, <xref:System.ServiceModel.Channels.PnrpPeerResolverBindingElement>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public abstract object Register (string meshId, System.ServiceModel.PeerNodeAddress nodeAddress, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Register(string meshId, class System.ServiceModel.PeerNodeAddress nodeAddress, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Register (meshId As String, nodeAddress As PeerNodeAddress, timeout As TimeSpan) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Register(System::String ^ meshId, System::ServiceModel::PeerNodeAddress ^ nodeAddress, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Register : string * System.ServiceModel.PeerNodeAddress * TimeSpan -&gt; obj" Usage="peerResolver.Register (meshId, nodeAddress, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="meshId" Type="System.String" />
        <Parameter Name="nodeAddress" Type="System.ServiceModel.PeerNodeAddress" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="meshId"><span data-ttu-id="b96a2-115">Identyfikator sieci równorzędnej, w której ma zostać zarejestrowany węzeł elementu równorzędnego.</span><span class="sxs-lookup"><span data-stu-id="b96a2-115">The ID of the peer mesh in which the peer node is to be registered.</span></span></param>
        <param name="nodeAddress"><span data-ttu-id="b96a2-116"><see cref="T:System.ServiceModel.PeerNodeAddress" /> Do zarejestrowania w sieci równorzędnej.</span><span class="sxs-lookup"><span data-stu-id="b96a2-116">The <see cref="T:System.ServiceModel.PeerNodeAddress" /> to be registered with the peer mesh.</span></span></param>
        <param name="timeout"><span data-ttu-id="b96a2-117">Czas oczekiwania na sukces przed przerwaniem próby zarejestrowania się w sieci równorzędnej.</span><span class="sxs-lookup"><span data-stu-id="b96a2-117">The length of time to wait for success before aborting the attempt to register with the peer mesh.</span></span> <span data-ttu-id="b96a2-118">Jeśli próba nie powiedzie <see cref="T:System.TimeoutException" /> się, zostanie zgłoszone w elemencie równorzędnym.</span><span class="sxs-lookup"><span data-stu-id="b96a2-118">If the attempt fails, <see cref="T:System.TimeoutException" /> is raised on the peer.</span></span></param>
        <summary><span data-ttu-id="b96a2-119"><see cref="T:System.ServiceModel.PeerNodeAddress" /> Rejestruje dla określonej siatki równorzędnej.</span><span class="sxs-lookup"><span data-stu-id="b96a2-119">Registers a <see cref="T:System.ServiceModel.PeerNodeAddress" /> for a specific peer mesh.</span></span></summary>
        <returns><span data-ttu-id="b96a2-120"><see cref="T:System.Object" /> Reprezentuje identyfikator rejestracji.</span><span class="sxs-lookup"><span data-stu-id="b96a2-120">An <see cref="T:System.Object" /> that represents the registration ID.</span></span> <span data-ttu-id="b96a2-121">Ten obiekt identyfikatora rejestracji jest przesyłany do <see cref="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" /> metod <see cref="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)" /> i.</span><span class="sxs-lookup"><span data-stu-id="b96a2-121">This registration ID object is passed to the <see cref="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" /> and <see cref="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)" /> methods.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ServiceModel.PeerNodeAddress&gt; Resolve (string meshId, int maxAddresses, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.ServiceModel.PeerNodeAddress&gt; Resolve(string meshId, int32 maxAddresses, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolver.Resolve(System.String,System.Int32,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Resolve (meshId As String, maxAddresses As Integer, timeout As TimeSpan) As ReadOnlyCollection(Of PeerNodeAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::ObjectModel::ReadOnlyCollection&lt;System::ServiceModel::PeerNodeAddress ^&gt; ^ Resolve(System::String ^ meshId, int maxAddresses, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Resolve : string * int * TimeSpan -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ServiceModel.PeerNodeAddress&gt;" Usage="peerResolver.Resolve (meshId, maxAddresses, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ServiceModel.PeerNodeAddress&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="meshId" Type="System.String" />
        <Parameter Name="maxAddresses" Type="System.Int32" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="meshId"><span data-ttu-id="b96a2-122">Identyfikator siatki sieci równorzędnej, w której <see cref="T:System.ServiceModel.PeerNodeAddress" /> będą uzyskiwane obiekty reprezentujące węzły uczestniczące.</span><span class="sxs-lookup"><span data-stu-id="b96a2-122">The mesh ID of the peer mesh within which the <see cref="T:System.ServiceModel.PeerNodeAddress" /> objects representing participating nodes are to be obtained.</span></span></param>
        <param name="maxAddresses"><span data-ttu-id="b96a2-123">Liczba adresów punktu końcowego do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="b96a2-123">The number of endpoint addresses to return.</span></span></param>
        <param name="timeout"><span data-ttu-id="b96a2-124">Czas oczekiwania na sukces przed przerwaniem próby rozpoznania adresów punktów końcowych w sieci równorzędnej.</span><span class="sxs-lookup"><span data-stu-id="b96a2-124">The length of time to wait for success before aborting the attempt to resolve endpoint addresses within the peer mesh.</span></span> <span data-ttu-id="b96a2-125">Jeśli próba nie powiedzie <see cref="T:System.TimeoutException" /> się, zostanie zgłoszone w elemencie równorzędnym.</span><span class="sxs-lookup"><span data-stu-id="b96a2-125">If the attempt fails, <see cref="T:System.TimeoutException" /> is raised on the peer.</span></span></param>
        <summary><span data-ttu-id="b96a2-126">Rozwiązuje podany identyfikator sieci do zera lub większej liczby punktów końcowych węzłów uczestniczących w sieci równorzędnej.</span><span class="sxs-lookup"><span data-stu-id="b96a2-126">Resolves the supplied mesh ID to zero or more endpoint addresses of nodes participating in the peer mesh.</span></span></summary>
        <returns><span data-ttu-id="b96a2-127">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> , który <see cref="T:System.ServiceModel.PeerNodeAddress" /> zawiera obiekty reprezentujące węzły uczestniczące w sieci równorzędnej.</span><span class="sxs-lookup"><span data-stu-id="b96a2-127">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains <see cref="T:System.ServiceModel.PeerNodeAddress" /> objects representing nodes participating in the peer mesh.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public abstract void Unregister (object registrationId, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unregister(object registrationId, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Unregister (registrationId As Object, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Unregister(System::Object ^ registrationId, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Unregister : obj * TimeSpan -&gt; unit" Usage="peerResolver.Unregister (registrationId, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="registrationId" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="registrationId"><span data-ttu-id="b96a2-128">Identyfikator rejestracji dla węzła uzyskanego przez poprzednie wywołanie do <see cref="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" />.</span><span class="sxs-lookup"><span data-stu-id="b96a2-128">A registration ID for the node obtained by a previous call to <see cref="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" />.</span></span></param>
        <param name="timeout"><span data-ttu-id="b96a2-129">Czas oczekiwania na pomyślne usunięcie rejestracji z siatki równorzędnej.</span><span class="sxs-lookup"><span data-stu-id="b96a2-129">The length of time to wait for a successful removal of the registration from the peer mesh.</span></span> <span data-ttu-id="b96a2-130">Jeśli próba nie powiedzie <see cref="T:System.TimeoutException" /> się, zostanie zgłoszone w elemencie równorzędnym.</span><span class="sxs-lookup"><span data-stu-id="b96a2-130">If the attempt fails, <see cref="T:System.TimeoutException" /> is raised on the peer.</span></span></param>
        <summary><span data-ttu-id="b96a2-131">Usuwa wpis rejestracji dla węzła z siatki równorzędnej.</span><span class="sxs-lookup"><span data-stu-id="b96a2-131">Removes the registration entry for a node from a peer mesh.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a2-132">Identyfikator rejestracji to równorzędny token programu rozpoznawania nazw, który w bardzo minimalnym stopniu reprezentuje spójność identyfikatora węzła równorzędnego i identyfikatora siatki.</span><span class="sxs-lookup"><span data-stu-id="b96a2-132">A registration ID is a peer resolver token, that, at the very minimum, represents the tuple of a peer node ID and the mesh ID.</span></span> <span data-ttu-id="b96a2-133">Ta wartość identyfikatora musi zostać uzyskana w poprzednim wywołaniu metody <xref:System.ServiceModel.PeerResolver.Register%2A>.</span><span class="sxs-lookup"><span data-stu-id="b96a2-133">This ID value must have been obtained in a previous call to <xref:System.ServiceModel.PeerResolver.Register%2A>.</span></span>  
  
 <span data-ttu-id="b96a2-134"><xref:System.ServiceModel.PeerResolver.Unregister%2A>jest wywoływana w dwóch określonych przypadkach:</span><span class="sxs-lookup"><span data-stu-id="b96a2-134"><xref:System.ServiceModel.PeerResolver.Unregister%2A> is called in two specific cases:</span></span>  
  
-   <span data-ttu-id="b96a2-135"><xref:System.ServiceModel.PeerNode> Gdy opuszcza siatkę równorzędną (zazwyczaj jako wynik zamykania ostatniego kanału równorzędnego lub hosta usługi skojarzonego z nim).</span><span class="sxs-lookup"><span data-stu-id="b96a2-135">When the <xref:System.ServiceModel.PeerNode> is leaving the peer mesh (usually as the result of closing the last peer channel or service host that is associated with it).</span></span>  
  
-   <span data-ttu-id="b96a2-136">Gdy program nie może znaleźć żadnych dostępnych adresów punktów końcowych innych węzłów uczestniczących w sieci równorzędnej. <xref:System.ServiceModel.PeerNode></span><span class="sxs-lookup"><span data-stu-id="b96a2-136">When the <xref:System.ServiceModel.PeerNode> can find no available endpoint addresses of other nodes participating in the peer mesh.</span></span> <span data-ttu-id="b96a2-137">W związku z tym <xref:System.ServiceModel.PeerNode> program nie jest już dostępny i podejmie próbę wywołania <xref:System.ServiceModel.PeerResolver.Unregister%2A> wyrejestrowania się z <xref:System.ServiceModel.PeerResolver>.</span><span class="sxs-lookup"><span data-stu-id="b96a2-137">As a result, the <xref:System.ServiceModel.PeerNode> is no longer reachable, and it will attempt to call <xref:System.ServiceModel.PeerResolver.Unregister%2A> to unregister itself from the <xref:System.ServiceModel.PeerResolver>.</span></span> <span data-ttu-id="b96a2-138">Jeśli inne węzły równorzędne w siatce staną się dostępne po zakończeniu rejestracji, węzeł może zostać ponownie zarejestrowany przez wywołanie <xref:System.ServiceModel.PeerResolver.Register%2A> i uzyskanie nowego identyfikatora rejestracji.</span><span class="sxs-lookup"><span data-stu-id="b96a2-138">If other peer nodes within the mesh become available subsequent to unregistration, the node can re-register itself by calling <xref:System.ServiceModel.PeerResolver.Register%2A> and obtaining a new registration ID.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public abstract void Update (object registrationId, System.ServiceModel.PeerNodeAddress updatedNodeAddress, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(object registrationId, class System.ServiceModel.PeerNodeAddress updatedNodeAddress, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Update (registrationId As Object, updatedNodeAddress As PeerNodeAddress, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Update(System::Object ^ registrationId, System::ServiceModel::PeerNodeAddress ^ updatedNodeAddress, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Update : obj * System.ServiceModel.PeerNodeAddress * TimeSpan -&gt; unit" Usage="peerResolver.Update (registrationId, updatedNodeAddress, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="registrationId" Type="System.Object" />
        <Parameter Name="updatedNodeAddress" Type="System.ServiceModel.PeerNodeAddress" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="registrationId"><span data-ttu-id="b96a2-139">Token identyfikatora rejestracji dla węzła uzyskany przez poprzednie wywołanie elementu<see cref="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" /></span><span class="sxs-lookup"><span data-stu-id="b96a2-139">A registration ID token for the node, obtained by a previous call to <see cref="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" /></span></span></param>
        <param name="updatedNodeAddress"><span data-ttu-id="b96a2-140">Zaktualizowany adres punktu końcowego (oraz inne wieloadresowości adresy IP).</span><span class="sxs-lookup"><span data-stu-id="b96a2-140">The updated endpoint address (and other multihoming IP addresses).</span></span></param>
        <param name="timeout"><span data-ttu-id="b96a2-141">Czas oczekiwania na sukces przed przerwaniem próby zaktualizowania rejestracji węzła w sieci równorzędnej.</span><span class="sxs-lookup"><span data-stu-id="b96a2-141">The length of time to wait for success before aborting the attempt to update the node's registration within the peer mesh.</span></span> <span data-ttu-id="b96a2-142">Jeśli próba nie powiedzie <see cref="T:System.TimeoutException" /> się, zostanie zgłoszone w elemencie równorzędnym.</span><span class="sxs-lookup"><span data-stu-id="b96a2-142">If the attempt fails, <see cref="T:System.TimeoutException" /> is raised on the peer.</span></span></param>
        <summary><span data-ttu-id="b96a2-143"><see cref="T:System.ServiceModel.PeerNodeAddress" /> Aktualizuje dla węzła zarejestrowanego z określoną siatką równorzędną.</span><span class="sxs-lookup"><span data-stu-id="b96a2-143">Updates the <see cref="T:System.ServiceModel.PeerNodeAddress" /> for a node registered with a specific peer mesh.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b96a2-144"><xref:System.ServiceModel.PeerResolver.Update%2A>jest wywoływana, gdy adres <xref:System.ServiceModel.PeerNode> zmian na komputerze lokalnym.</span><span class="sxs-lookup"><span data-stu-id="b96a2-144"><xref:System.ServiceModel.PeerResolver.Update%2A> is called when the address of the <xref:System.ServiceModel.PeerNode> changes on the local machine.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
