<Type Name="PeerResolver" FullName="System.ServiceModel.PeerResolver">
  <TypeSignature Language="C#" Value="public abstract class PeerResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PeerResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.PeerResolver" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PeerResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerResolver abstract" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4e248-101">Określa typ podstawowy używany do definiowania kontrakt dla rejestracji i rozpoznawania elementu równorzędnego ID siatki adresy punktów końcowych węzłów uczestniczących w sieci.</span><span class="sxs-lookup"><span data-stu-id="4e248-101">Specifies a base type used to define the contract for the registration and resolution of a peer mesh ID to the endpoint addresses of nodes participating in the mesh.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e248-102">Ta klasa jest klasą podstawową dla implementacji mechanizmy rozpoznawania elementów równorzędnych niestandardowe nazwy.</span><span class="sxs-lookup"><span data-stu-id="4e248-102">This class is the base class for the implementation of custom peer name resolvers.</span></span> <span data-ttu-id="4e248-103">Nazwa elementu równorzędnego program rozpoznawania nazw odnajdywania usługa jest używana przez kanałów elementów równorzędnych można znaleźć elementu równorzędnego węzłów uczestniczących w sieci równorzędnej.</span><span class="sxs-lookup"><span data-stu-id="4e248-103">A peer name resolver is a discovery service used by peer channels to find peer nodes participating in a peer mesh.</span></span> <span data-ttu-id="4e248-104">Służy również do "register" węzeł z siatki elementów równorzędnych, mechanizm, za pomocą którego węzła równorzędnego staje się znane i dostępne w sieci równorzędnej.</span><span class="sxs-lookup"><span data-stu-id="4e248-104">It is also used to "register" a node with a peer mesh, the mechanism by which the peer node becomes known and available from the peer mesh.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PeerResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4e248-105">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.PeerResolver" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="4e248-105">Initializes a new instance of the <see cref="T:System.ServiceModel.PeerResolver" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanShareReferrals">
      <MemberSignature Language="C#" Value="public abstract bool CanShareReferrals { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanShareReferrals" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.PeerResolver.CanShareReferrals" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanShareReferrals As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanShareReferrals { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4e248-106">Pobiera, czy nazwa elementu równorzędnego programu rozpoznawania nazw mogą udostępniać odwołań.</span><span class="sxs-lookup"><span data-stu-id="4e248-106">Gets whether the peer name resolver can share referrals.</span></span></summary>
        <value><span data-ttu-id="4e248-107">Jeśli PRAWDA, nazwa elementu równorzędnego programu rozpoznawania nazw mogą udostępniać odwołań; w przypadku wartości FAŁSZ, które nie.</span><span class="sxs-lookup"><span data-stu-id="4e248-107">If true, the peer name resolver can share referrals; if false, it cannot.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual void Initialize (System.ServiceModel.EndpointAddress address, System.ServiceModel.Channels.Binding binding, System.ServiceModel.Description.ClientCredentials credentials, System.ServiceModel.PeerResolvers.PeerReferralPolicy referralPolicy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class System.ServiceModel.EndpointAddress address, class System.ServiceModel.Channels.Binding binding, class System.ServiceModel.Description.ClientCredentials credentials, valuetype System.ServiceModel.PeerResolvers.PeerReferralPolicy referralPolicy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolver.Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(System::ServiceModel::EndpointAddress ^ address, System::ServiceModel::Channels::Binding ^ binding, System::ServiceModel::Description::ClientCredentials ^ credentials, System::ServiceModel::PeerResolvers::PeerReferralPolicy referralPolicy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="credentials" Type="System.ServiceModel.Description.ClientCredentials" />
        <Parameter Name="referralPolicy" Type="System.ServiceModel.PeerResolvers.PeerReferralPolicy" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="4e248-108"><see cref="T:System.ServiceModel.EndpointAddress" /> zawiera nowy adres punktu końcowego tego wystąpienia programu rozpoznawania nazw równorzędnych.</span><span class="sxs-lookup"><span data-stu-id="4e248-108"><see cref="T:System.ServiceModel.EndpointAddress" /> that contains the new endpoint address of this peer resolver instance.</span></span></param>
        <param name="binding">
          <span data-ttu-id="4e248-109"><see cref="T:System.ServiceModel.Channels.Binding" /> która określa nowego powiązania sieci dla tego elementu równorzędnego programu rozpoznawania nazw.</span><span class="sxs-lookup"><span data-stu-id="4e248-109"><see cref="T:System.ServiceModel.Channels.Binding" /> that specifies the new network binding for this peer resolver.</span></span></param>
        <param name="credentials">
          <span data-ttu-id="4e248-110"><see cref="T:System.ServiceModel.Description.ClientCredentials" /> dla tego elementu równorzędnego programu rozpoznawania nazw, która określa nowe poświadczenia klienta.</span><span class="sxs-lookup"><span data-stu-id="4e248-110"><see cref="T:System.ServiceModel.Description.ClientCredentials" /> that specifies the new client credentials for this peer resolver.</span></span></param>
        <param name="referralPolicy">
          <span data-ttu-id="4e248-111"><see cref="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" /> dla tego elementu równorzędnego programu rozpoznawania nazw, która określa nowe zasady odwołań.</span><span class="sxs-lookup"><span data-stu-id="4e248-111"><see cref="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" /> that specifies the new referral policy for this peer resolver.</span></span></param>
        <summary><span data-ttu-id="4e248-112">Inicjuje bieżące wystąpienie programu rozpoznawania nazw równorzędnych nowy adres podany punktu końcowego i ustawieniami.</span><span class="sxs-lookup"><span data-stu-id="4e248-112">Initializes the current peer resolver instance with the new supplied endpoint address and settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e248-113">Ta metoda inicjuje istniejące wystąpienie równorzędnego programu rozpoznawania; nie powoduje utworzenia nowego.</span><span class="sxs-lookup"><span data-stu-id="4e248-113">This method simply initializes the existing peer resolver instance; it does not create a new one.</span></span> <span data-ttu-id="4e248-114">Aby utworzyć nowy program rozpoznawania elementów równorzędnych, należy wywołać metodę CreatePeerResolver na odpowiadający mu element powiązania (na przykład <xref:System.ServiceModel.Channels.PnrpPeerResolverBindingElement>).</span><span class="sxs-lookup"><span data-stu-id="4e248-114">To create a new peer resolver, call the CreatePeerResolver method on the corresponding binding element (for example, <xref:System.ServiceModel.Channels.PnrpPeerResolverBindingElement>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public abstract object Register (string meshId, System.ServiceModel.PeerNodeAddress nodeAddress, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Register(string meshId, class System.ServiceModel.PeerNodeAddress nodeAddress, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Register (meshId As String, nodeAddress As PeerNodeAddress, timeout As TimeSpan) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Register(System::String ^ meshId, System::ServiceModel::PeerNodeAddress ^ nodeAddress, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="meshId" Type="System.String" />
        <Parameter Name="nodeAddress" Type="System.ServiceModel.PeerNodeAddress" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="meshId"><span data-ttu-id="4e248-115">Identyfikator siatki elementów równorzędnych węzła równorzędnego jest rejestrowany.</span><span class="sxs-lookup"><span data-stu-id="4e248-115">The ID of the peer mesh in which the peer node is to be registered.</span></span></param>
        <param name="nodeAddress"><span data-ttu-id="4e248-116"><see cref="T:System.ServiceModel.PeerNodeAddress" /> Ma zostać zarejestrowany z siatki elementów równorzędnych.</span><span class="sxs-lookup"><span data-stu-id="4e248-116">The <see cref="T:System.ServiceModel.PeerNodeAddress" /> to be registered with the peer mesh.</span></span></param>
        <param name="timeout"><span data-ttu-id="4e248-117">Długość czasu oczekiwania w przypadku powodzenia przed przerwaniem próby zarejestrowania z siatki elementów równorzędnych.</span><span class="sxs-lookup"><span data-stu-id="4e248-117">The length of time to wait for success before aborting the attempt to register with the peer mesh.</span></span> <span data-ttu-id="4e248-118">Jeśli próba nie powiedzie się, <see cref="T:System.TimeoutException" /> jest wywoływane na element równorzędny.</span><span class="sxs-lookup"><span data-stu-id="4e248-118">If the attempt fails, <see cref="T:System.TimeoutException" /> is raised on the peer.</span></span></param>
        <summary><span data-ttu-id="4e248-119">Rejestruje <see cref="T:System.ServiceModel.PeerNodeAddress" /> siatki określonego elementu równorzędnego.</span><span class="sxs-lookup"><span data-stu-id="4e248-119">Registers a <see cref="T:System.ServiceModel.PeerNodeAddress" /> for a specific peer mesh.</span></span></summary>
        <returns><span data-ttu-id="4e248-120"><see cref="T:System.Object" /> Reprezentujący identyfikator rejestracji.</span><span class="sxs-lookup"><span data-stu-id="4e248-120">An <see cref="T:System.Object" /> that represents the registration ID.</span></span> <span data-ttu-id="4e248-121">Ten obiekt identyfikator rejestracji jest przekazywany do <see cref="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" /> i <see cref="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="4e248-121">This registration ID object is passed to the <see cref="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" /> and <see cref="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)" /> methods.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ServiceModel.PeerNodeAddress&gt; Resolve (string meshId, int maxAddresses, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.ServiceModel.PeerNodeAddress&gt; Resolve(string meshId, int32 maxAddresses, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolver.Resolve(System.String,System.Int32,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Resolve (meshId As String, maxAddresses As Integer, timeout As TimeSpan) As ReadOnlyCollection(Of PeerNodeAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::ObjectModel::ReadOnlyCollection&lt;System::ServiceModel::PeerNodeAddress ^&gt; ^ Resolve(System::String ^ meshId, int maxAddresses, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ServiceModel.PeerNodeAddress&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="meshId" Type="System.String" />
        <Parameter Name="maxAddresses" Type="System.Int32" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="meshId"><span data-ttu-id="4e248-122">Identyfikator sieci elementu równorzędnego siatki w ramach którego <see cref="T:System.ServiceModel.PeerNodeAddress" /> obiekty reprezentujące węzłów uczestniczących mają być uzyskany.</span><span class="sxs-lookup"><span data-stu-id="4e248-122">The mesh ID of the peer mesh within which the <see cref="T:System.ServiceModel.PeerNodeAddress" /> objects representing participating nodes are to be obtained.</span></span></param>
        <param name="maxAddresses"><span data-ttu-id="4e248-123">Liczba adresy punktów końcowych do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="4e248-123">The number of endpoint addresses to return.</span></span></param>
        <param name="timeout"><span data-ttu-id="4e248-124">Długość czasu oczekiwania w przypadku powodzenia przed przerwaniem próby rozwiązania adresy punktów końcowych w obrębie siatki elementów równorzędnych.</span><span class="sxs-lookup"><span data-stu-id="4e248-124">The length of time to wait for success before aborting the attempt to resolve endpoint addresses within the peer mesh.</span></span> <span data-ttu-id="4e248-125">Jeśli próba nie powiedzie się, <see cref="T:System.TimeoutException" /> jest wywoływane na element równorzędny.</span><span class="sxs-lookup"><span data-stu-id="4e248-125">If the attempt fails, <see cref="T:System.TimeoutException" /> is raised on the peer.</span></span></param>
        <summary><span data-ttu-id="4e248-126">Adresy punktów końcowych zero lub więcej węzłów uczestniczących w sieci równorzędnej jest rozpoznawany jako identyfikator dostarczony siatki.</span><span class="sxs-lookup"><span data-stu-id="4e248-126">Resolves the supplied mesh ID to zero or more endpoint addresses of nodes participating in the peer mesh.</span></span></summary>
        <returns><span data-ttu-id="4e248-127">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> zawierający <see cref="T:System.ServiceModel.PeerNodeAddress" /> obiekty reprezentujące węzłów uczestniczących w sieci równorzędnej.</span><span class="sxs-lookup"><span data-stu-id="4e248-127">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains <see cref="T:System.ServiceModel.PeerNodeAddress" /> objects representing nodes participating in the peer mesh.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public abstract void Unregister (object registrationId, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unregister(object registrationId, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Unregister (registrationId As Object, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Unregister(System::Object ^ registrationId, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="registrationId" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="registrationId"><span data-ttu-id="4e248-128">Identyfikator rejestracji dla węzła uzyskany przez poprzednie wywołanie <see cref="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" />.</span><span class="sxs-lookup"><span data-stu-id="4e248-128">A registration ID for the node obtained by a previous call to <see cref="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" />.</span></span></param>
        <param name="timeout"><span data-ttu-id="4e248-129">Limit czasu oczekiwania na pomyślne usunięcie rejestracji w sieci równorzędnej.</span><span class="sxs-lookup"><span data-stu-id="4e248-129">The length of time to wait for a successful removal of the registration from the peer mesh.</span></span> <span data-ttu-id="4e248-130">Jeśli próba nie powiedzie się, <see cref="T:System.TimeoutException" /> jest wywoływane na element równorzędny.</span><span class="sxs-lookup"><span data-stu-id="4e248-130">If the attempt fails, <see cref="T:System.TimeoutException" /> is raised on the peer.</span></span></param>
        <summary><span data-ttu-id="4e248-131">Usuwa wpis rejestracji dla węzła z siatki elementów równorzędnych.</span><span class="sxs-lookup"><span data-stu-id="4e248-131">Removes the registration entry for a node from a peer mesh.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e248-132">Identyfikator rejestracji jest tokenem rozpoznawania elementów równorzędnych, reprezentujący, w bardzo minimalna krotki identyfikator węzła równorzędnego i identyfikatora siatki.</span><span class="sxs-lookup"><span data-stu-id="4e248-132">A registration ID is a peer resolver token, that, at the very minimum, represents the tuple of a peer node ID and the mesh ID.</span></span> <span data-ttu-id="4e248-133">Ta wartość Identyfikatora musi być uzyskane w poprzednie wywołanie <xref:System.ServiceModel.PeerResolver.Register%2A>.</span><span class="sxs-lookup"><span data-stu-id="4e248-133">This ID value must have been obtained in a previous call to <xref:System.ServiceModel.PeerResolver.Register%2A>.</span></span>  
  
 <span data-ttu-id="4e248-134"><xref:System.ServiceModel.PeerResolver.Unregister%2A> jest wywoływana w dwóch przypadkach:</span><span class="sxs-lookup"><span data-stu-id="4e248-134"><xref:System.ServiceModel.PeerResolver.Unregister%2A> is called in two specific cases:</span></span>  
  
-   <span data-ttu-id="4e248-135">Gdy <xref:System.ServiceModel.PeerNode> jest pozostawienie węzła równorzędnego siatki (zazwyczaj w wyniku zamykanie ostatniego elementu równorzędnego kanału lub usługi hosta skojarzonego z nim).</span><span class="sxs-lookup"><span data-stu-id="4e248-135">When the <xref:System.ServiceModel.PeerNode> is leaving the peer mesh (usually as the result of closing the last peer channel or service host that is associated with it).</span></span>  
  
-   <span data-ttu-id="4e248-136">Gdy <xref:System.ServiceModel.PeerNode> można znaleźć żadnych adresów dostępnego punktu końcowego innych węzłów uczestniczących w sieci równorzędnej.</span><span class="sxs-lookup"><span data-stu-id="4e248-136">When the <xref:System.ServiceModel.PeerNode> can find no available endpoint addresses of other nodes participating in the peer mesh.</span></span> <span data-ttu-id="4e248-137">W związku z tym <xref:System.ServiceModel.PeerNode> nie jest już dostępny, i ponowi próbę wywołania <xref:System.ServiceModel.PeerResolver.Unregister%2A> wyrejestrować się z <xref:System.ServiceModel.PeerResolver>.</span><span class="sxs-lookup"><span data-stu-id="4e248-137">As a result, the <xref:System.ServiceModel.PeerNode> is no longer reachable, and it will attempt to call <xref:System.ServiceModel.PeerResolver.Unregister%2A> to unregister itself from the <xref:System.ServiceModel.PeerResolver>.</span></span> <span data-ttu-id="4e248-138">Jeśli inne węzły równorzędne siatki, stają się dostępne po wyrejestrowanie, węzeł może ponownie zarejestrowany przez wywołanie metody <xref:System.ServiceModel.PeerResolver.Register%2A> i uzyskanie nowego identyfikatora rejestracji.</span><span class="sxs-lookup"><span data-stu-id="4e248-138">If other peer nodes within the mesh become available subsequent to unregistration, the node can re-register itself by calling <xref:System.ServiceModel.PeerResolver.Register%2A> and obtaining a new registration ID.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public abstract void Update (object registrationId, System.ServiceModel.PeerNodeAddress updatedNodeAddress, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(object registrationId, class System.ServiceModel.PeerNodeAddress updatedNodeAddress, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Update (registrationId As Object, updatedNodeAddress As PeerNodeAddress, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Update(System::Object ^ registrationId, System::ServiceModel::PeerNodeAddress ^ updatedNodeAddress, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="registrationId" Type="System.Object" />
        <Parameter Name="updatedNodeAddress" Type="System.ServiceModel.PeerNodeAddress" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="registrationId"><span data-ttu-id="4e248-139">Token identyfikator rejestracji dla tego węzła, uzyskany przez poprzednie wywołanie <see cref="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" /></span><span class="sxs-lookup"><span data-stu-id="4e248-139">A registration ID token for the node, obtained by a previous call to <see cref="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" /></span></span></param>
        <param name="updatedNodeAddress"><span data-ttu-id="4e248-140">Adres punktu końcowego zaktualizowane (i innych funkcji wieloadresowości adresów IP).</span><span class="sxs-lookup"><span data-stu-id="4e248-140">The updated endpoint address (and other multihoming IP addresses).</span></span></param>
        <param name="timeout"><span data-ttu-id="4e248-141">Długość czasu oczekiwania w przypadku powodzenia przed przerwaniem próby zaktualizowania węzła rejestracji w sieci równorzędnej.</span><span class="sxs-lookup"><span data-stu-id="4e248-141">The length of time to wait for success before aborting the attempt to update the node's registration within the peer mesh.</span></span> <span data-ttu-id="4e248-142">Jeśli próba nie powiedzie się, <see cref="T:System.TimeoutException" /> jest wywoływane na element równorzędny.</span><span class="sxs-lookup"><span data-stu-id="4e248-142">If the attempt fails, <see cref="T:System.TimeoutException" /> is raised on the peer.</span></span></param>
        <summary><span data-ttu-id="4e248-143">Aktualizacje <see cref="T:System.ServiceModel.PeerNodeAddress" /> zarejestrowany siatki elementów równorzędnych określonego węzła.</span><span class="sxs-lookup"><span data-stu-id="4e248-143">Updates the <see cref="T:System.ServiceModel.PeerNodeAddress" /> for a node registered with a specific peer mesh.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e248-144"><xref:System.ServiceModel.PeerResolver.Update%2A> wywoływana, gdy adres <xref:System.ServiceModel.PeerNode> zmian na komputerze lokalnym.</span><span class="sxs-lookup"><span data-stu-id="4e248-144"><xref:System.ServiceModel.PeerResolver.Update%2A> is called when the address of the <xref:System.ServiceModel.PeerNode> changes on the local machine.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>