<Type Name="PeerResolver" FullName="System.ServiceModel.PeerResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c58954030a1213b9bbd8f261c84addca77e8e7e6" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30578575" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PeerResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PeerResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.PeerResolver" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PeerResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerResolver abstract" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Określa typ podstawowy używany do definiowania kontrakt dla rejestracji i rozpoznawania elementu równorzędnego ID siatki adresy punktów końcowych węzłów uczestniczących w sieci.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa jest klasą podstawową dla implementacji mechanizmy rozpoznawania elementów równorzędnych niestandardowe nazwy. Nazwa elementu równorzędnego program rozpoznawania nazw odnajdywania usługa jest używana przez kanałów elementów równorzędnych można znaleźć elementu równorzędnego węzłów uczestniczących w sieci równorzędnej. Służy również do "register" węzeł z siatki elementów równorzędnych, mechanizm, za pomocą którego węzła równorzędnego staje się znane i dostępne w sieci równorzędnej.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PeerResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.PeerResolver" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanShareReferrals">
      <MemberSignature Language="C#" Value="public abstract bool CanShareReferrals { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanShareReferrals" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.PeerResolver.CanShareReferrals" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanShareReferrals As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanShareReferrals { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera, czy nazwa elementu równorzędnego programu rozpoznawania nazw mogą udostępniać odwołań.</summary>
        <value>Jeśli PRAWDA, nazwa elementu równorzędnego programu rozpoznawania nazw mogą udostępniać odwołań; w przypadku wartości FAŁSZ, które nie.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual void Initialize (System.ServiceModel.EndpointAddress address, System.ServiceModel.Channels.Binding binding, System.ServiceModel.Description.ClientCredentials credentials, System.ServiceModel.PeerResolvers.PeerReferralPolicy referralPolicy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class System.ServiceModel.EndpointAddress address, class System.ServiceModel.Channels.Binding binding, class System.ServiceModel.Description.ClientCredentials credentials, valuetype System.ServiceModel.PeerResolvers.PeerReferralPolicy referralPolicy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolver.Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(System::ServiceModel::EndpointAddress ^ address, System::ServiceModel::Channels::Binding ^ binding, System::ServiceModel::Description::ClientCredentials ^ credentials, System::ServiceModel::PeerResolvers::PeerReferralPolicy referralPolicy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="credentials" Type="System.ServiceModel.Description.ClientCredentials" />
        <Parameter Name="referralPolicy" Type="System.ServiceModel.PeerResolvers.PeerReferralPolicy" />
      </Parameters>
      <Docs>
        <param name="address">
          <see cref="T:System.ServiceModel.EndpointAddress" /> zawiera nowy adres punktu końcowego tego wystąpienia programu rozpoznawania nazw równorzędnych.</param>
        <param name="binding">
          <see cref="T:System.ServiceModel.Channels.Binding" /> która określa nowego powiązania sieci dla tego elementu równorzędnego programu rozpoznawania nazw.</param>
        <param name="credentials">
          <see cref="T:System.ServiceModel.Description.ClientCredentials" /> dla tego elementu równorzędnego programu rozpoznawania nazw, która określa nowe poświadczenia klienta.</param>
        <param name="referralPolicy">
          <see cref="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" /> dla tego elementu równorzędnego programu rozpoznawania nazw, która określa nowe zasady odwołań.</param>
        <summary>Inicjuje bieżące wystąpienie programu rozpoznawania nazw równorzędnych nowy adres podany punktu końcowego i ustawieniami.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda inicjuje istniejące wystąpienie równorzędnego programu rozpoznawania; nie powoduje utworzenia nowego. Aby utworzyć nowy program rozpoznawania elementów równorzędnych, należy wywołać metodę CreatePeerResolver na odpowiadający mu element powiązania (na przykład <xref:System.ServiceModel.Channels.PnrpPeerResolverBindingElement>).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public abstract object Register (string meshId, System.ServiceModel.PeerNodeAddress nodeAddress, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Register(string meshId, class System.ServiceModel.PeerNodeAddress nodeAddress, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Register (meshId As String, nodeAddress As PeerNodeAddress, timeout As TimeSpan) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Register(System::String ^ meshId, System::ServiceModel::PeerNodeAddress ^ nodeAddress, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="meshId" Type="System.String" />
        <Parameter Name="nodeAddress" Type="System.ServiceModel.PeerNodeAddress" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="meshId">Identyfikator siatki elementów równorzędnych węzła równorzędnego jest rejestrowany.</param>
        <param name="nodeAddress">
          <see cref="T:System.ServiceModel.PeerNodeAddress" /> Ma zostać zarejestrowany z siatki elementów równorzędnych.</param>
        <param name="timeout">Długość czasu oczekiwania w przypadku powodzenia przed przerwaniem próby zarejestrowania z siatki elementów równorzędnych. Jeśli próba nie powiedzie się, <see cref="T:System.TimeoutException" /> jest wywoływane na element równorzędny.</param>
        <summary>Rejestruje <see cref="T:System.ServiceModel.PeerNodeAddress" /> siatki określonego elementu równorzędnego.</summary>
        <returns>
          <see cref="T:System.Object" /> Reprezentujący identyfikator rejestracji. Ten obiekt identyfikator rejestracji jest przekazywany do <see cref="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" /> i <see cref="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)" /> metody.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ServiceModel.PeerNodeAddress&gt; Resolve (string meshId, int maxAddresses, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.ServiceModel.PeerNodeAddress&gt; Resolve(string meshId, int32 maxAddresses, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolver.Resolve(System.String,System.Int32,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Resolve (meshId As String, maxAddresses As Integer, timeout As TimeSpan) As ReadOnlyCollection(Of PeerNodeAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::ObjectModel::ReadOnlyCollection&lt;System::ServiceModel::PeerNodeAddress ^&gt; ^ Resolve(System::String ^ meshId, int maxAddresses, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ServiceModel.PeerNodeAddress&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="meshId" Type="System.String" />
        <Parameter Name="maxAddresses" Type="System.Int32" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="meshId">Identyfikator sieci elementu równorzędnego siatki w ramach którego <see cref="T:System.ServiceModel.PeerNodeAddress" /> obiekty reprezentujące węzłów uczestniczących mają być uzyskany.</param>
        <param name="maxAddresses">Liczba adresy punktów końcowych do zwrócenia.</param>
        <param name="timeout">Długość czasu oczekiwania w przypadku powodzenia przed przerwaniem próby rozwiązania adresy punktów końcowych w obrębie siatki elementów równorzędnych. Jeśli próba nie powiedzie się, <see cref="T:System.TimeoutException" /> jest wywoływane na element równorzędny.</param>
        <summary>Adresy punktów końcowych zero lub więcej węzłów uczestniczących w sieci równorzędnej jest rozpoznawany jako identyfikator dostarczony siatki.</summary>
        <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> zawierający <see cref="T:System.ServiceModel.PeerNodeAddress" /> obiekty reprezentujące węzłów uczestniczących w sieci równorzędnej.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public abstract void Unregister (object registrationId, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unregister(object registrationId, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Unregister (registrationId As Object, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Unregister(System::Object ^ registrationId, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="registrationId" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="registrationId">Identyfikator rejestracji dla węzła uzyskany przez poprzednie wywołanie <see cref="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" />.</param>
        <param name="timeout">Limit czasu oczekiwania na pomyślne usunięcie rejestracji w sieci równorzędnej. Jeśli próba nie powiedzie się, <see cref="T:System.TimeoutException" /> jest wywoływane na element równorzędny.</param>
        <summary>Usuwa wpis rejestracji dla węzła z siatki elementów równorzędnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikator rejestracji jest tokenem rozpoznawania elementów równorzędnych, reprezentujący, w bardzo minimalna krotki identyfikator węzła równorzędnego i identyfikatora siatki. Ta wartość Identyfikatora musi być uzyskane w poprzednie wywołanie <xref:System.ServiceModel.PeerResolver.Register%2A>.  
  
 <xref:System.ServiceModel.PeerResolver.Unregister%2A> jest wywoływana w dwóch przypadkach:  
  
-   Gdy <xref:System.ServiceModel.PeerNode> jest pozostawienie węzła równorzędnego siatki (zazwyczaj w wyniku zamykanie ostatniego elementu równorzędnego kanału lub usługi hosta skojarzonego z nim).  
  
-   Gdy <xref:System.ServiceModel.PeerNode> można znaleźć żadnych adresów dostępnego punktu końcowego innych węzłów uczestniczących w sieci równorzędnej. W związku z tym <xref:System.ServiceModel.PeerNode> nie jest już dostępny, i ponowi próbę wywołania <xref:System.ServiceModel.PeerResolver.Unregister%2A> wyrejestrować się z <xref:System.ServiceModel.PeerResolver>. Jeśli inne węzły równorzędne siatki, stają się dostępne po wyrejestrowanie, węzeł może ponownie zarejestrowany przez wywołanie metody <xref:System.ServiceModel.PeerResolver.Register%2A> i uzyskanie nowego identyfikatora rejestracji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public abstract void Update (object registrationId, System.ServiceModel.PeerNodeAddress updatedNodeAddress, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(object registrationId, class System.ServiceModel.PeerNodeAddress updatedNodeAddress, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Update (registrationId As Object, updatedNodeAddress As PeerNodeAddress, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Update(System::Object ^ registrationId, System::ServiceModel::PeerNodeAddress ^ updatedNodeAddress, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="registrationId" Type="System.Object" />
        <Parameter Name="updatedNodeAddress" Type="System.ServiceModel.PeerNodeAddress" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="registrationId">Token identyfikator rejestracji dla tego węzła, uzyskany przez poprzednie wywołanie <see cref="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" /></param>
        <param name="updatedNodeAddress">Adres punktu końcowego zaktualizowane (i innych funkcji wieloadresowości adresów IP).</param>
        <param name="timeout">Długość czasu oczekiwania w przypadku powodzenia przed przerwaniem próby zaktualizowania węzła rejestracji w sieci równorzędnej. Jeśli próba nie powiedzie się, <see cref="T:System.TimeoutException" /> jest wywoływane na element równorzędny.</param>
        <summary>Aktualizacje <see cref="T:System.ServiceModel.PeerNodeAddress" /> zarejestrowany siatki elementów równorzędnych określonego węzła.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.PeerResolver.Update%2A> wywoływana, gdy adres <xref:System.ServiceModel.PeerNode> zmian na komputerze lokalnym.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>