<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PeerResolver.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c58954030a1213b9bbd8f261c84addca77e8e7e6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c58954030a1213b9bbd8f261c84addca77e8e7e6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.PeerResolver">
          <source>Specifies a base type used to define the contract for the registration and resolution of a peer mesh ID to the endpoint addresses of nodes participating in the mesh.</source>
          <target state="translated">Określa typ podstawowy używany do definiowania kontrakt dla rejestracji i rozpoznawania elementu równorzędnego ID siatki adresy punktów końcowych węzłów uczestniczących w sieci.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.PeerResolver">
          <source>This class is the base class for the implementation of custom peer name resolvers.</source>
          <target state="translated">Ta klasa jest klasą podstawową dla implementacji mechanizmy rozpoznawania elementów równorzędnych niestandardowe nazwy.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.PeerResolver">
          <source>A peer name resolver is a discovery service used by peer channels to find peer nodes participating in a peer mesh.</source>
          <target state="translated">Nazwa elementu równorzędnego program rozpoznawania nazw odnajdywania usługa jest używana przez kanałów elementów równorzędnych można znaleźć elementu równorzędnego węzłów uczestniczących w sieci równorzędnej.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.PeerResolver">
          <source>It is also used to "register" a node with a peer mesh, the mechanism by which the peer node becomes known and available from the peer mesh.</source>
          <target state="translated">Służy również do "register" węzeł z siatki elementów równorzędnych, mechanizm, za pomocą którego węzła równorzędnego staje się znane i dostępne w sieci równorzędnej.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.PeerResolver" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.ServiceModel.PeerResolver" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.PeerResolver.CanShareReferrals">
          <source>Gets whether the peer name resolver can share referrals.</source>
          <target state="translated">Pobiera, czy nazwa elementu równorzędnego programu rozpoznawania nazw mogą udostępniać odwołań.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.PeerResolver.CanShareReferrals">
          <source>If true, the peer name resolver can share referrals; if false, it cannot.</source>
          <target state="translated">Jeśli PRAWDA, nazwa elementu równorzędnego programu rozpoznawania nazw mogą udostępniać odwołań; w przypadku wartości FAŁSZ, które nie.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)">
          <source><ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph> that contains the new endpoint address of this peer resolver instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph> zawiera nowy adres punktu końcowego tego wystąpienia programu rozpoznawania nazw równorzędnych.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)">
          <source><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> that specifies the new network binding for this peer resolver.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> która określa nowego powiązania sieci dla tego elementu równorzędnego programu rozpoznawania nazw.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)">
          <source><ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ClientCredentials" /&gt;</ph> that specifies the new client credentials for this peer resolver.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ClientCredentials" /&gt;</ph> dla tego elementu równorzędnego programu rozpoznawania nazw, która określa nowe poświadczenia klienta.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)">
          <source><ph id="ph1">&lt;see cref="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" /&gt;</ph> that specifies the new referral policy for this peer resolver.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" /&gt;</ph> dla tego elementu równorzędnego programu rozpoznawania nazw, która określa nowe zasady odwołań.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)">
          <source>Initializes the current peer resolver instance with the new supplied endpoint address and settings.</source>
          <target state="translated">Inicjuje bieżące wystąpienie programu rozpoznawania nazw równorzędnych nowy adres podany punktu końcowego i ustawieniami.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.PeerResolver.Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)">
          <source>This method simply initializes the existing peer resolver instance; it does not create a new one.</source>
          <target state="translated">Ta metoda inicjuje istniejące wystąpienie równorzędnego programu rozpoznawania; nie powoduje utworzenia nowego.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.PeerResolver.Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)">
          <source>To create a new peer resolver, call the CreatePeerResolver method on the corresponding binding element (for example, <ph id="ph1">&lt;xref:System.ServiceModel.Channels.PnrpPeerResolverBindingElement&gt;</ph>).</source>
          <target state="translated">Aby utworzyć nowy program rozpoznawania elementów równorzędnych, należy wywołać metodę CreatePeerResolver na odpowiadający mu element powiązania (na przykład <ph id="ph1">&lt;xref:System.ServiceModel.Channels.PnrpPeerResolverBindingElement&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)">
          <source>The ID of the peer mesh in which the peer node is to be registered.</source>
          <target state="translated">Identyfikator siatki elementów równorzędnych węzła równorzędnego jest rejestrowany.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.PeerNodeAddress" /&gt;</ph> to be registered with the peer mesh.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.PeerNodeAddress" /&gt;</ph> Ma zostać zarejestrowany z siatki elementów równorzędnych.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)">
          <source>The length of time to wait for success before aborting the attempt to register with the peer mesh.</source>
          <target state="translated">Długość czasu oczekiwania w przypadku powodzenia przed przerwaniem próby zarejestrowania z siatki elementów równorzędnych.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)">
          <source>If the attempt fails, <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is raised on the peer.</source>
          <target state="translated">Jeśli próba nie powiedzie się, <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> jest wywoływane na element równorzędny.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)">
          <source>Registers a <ph id="ph1">&lt;see cref="T:System.ServiceModel.PeerNodeAddress" /&gt;</ph> for a specific peer mesh.</source>
          <target state="translated">Rejestruje <ph id="ph1">&lt;see cref="T:System.ServiceModel.PeerNodeAddress" /&gt;</ph> siatki określonego elementu równorzędnego.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the registration ID.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> Reprezentujący identyfikator rejestracji.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)">
          <source>This registration ID object is passed to the <ph id="ph1">&lt;see cref="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)" /&gt;</ph> methods.</source>
          <target state="translated">Ten obiekt identyfikator rejestracji jest przekazywany do <ph id="ph1">&lt;see cref="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" /&gt;</ph> i <ph id="ph2">&lt;see cref="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Resolve(System.String,System.Int32,System.TimeSpan)">
          <source>The mesh ID of the peer mesh within which the <ph id="ph1">&lt;see cref="T:System.ServiceModel.PeerNodeAddress" /&gt;</ph> objects representing participating nodes are to be obtained.</source>
          <target state="translated">Identyfikator sieci elementu równorzędnego siatki w ramach którego <ph id="ph1">&lt;see cref="T:System.ServiceModel.PeerNodeAddress" /&gt;</ph> obiekty reprezentujące węzłów uczestniczących mają być uzyskany.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Resolve(System.String,System.Int32,System.TimeSpan)">
          <source>The number of endpoint addresses to return.</source>
          <target state="translated">Liczba adresy punktów końcowych do zwrócenia.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Resolve(System.String,System.Int32,System.TimeSpan)">
          <source>The length of time to wait for success before aborting the attempt to resolve endpoint addresses within the peer mesh.</source>
          <target state="translated">Długość czasu oczekiwania w przypadku powodzenia przed przerwaniem próby rozwiązania adresy punktów końcowych w obrębie siatki elementów równorzędnych.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Resolve(System.String,System.Int32,System.TimeSpan)">
          <source>If the attempt fails, <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is raised on the peer.</source>
          <target state="translated">Jeśli próba nie powiedzie się, <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> jest wywoływane na element równorzędny.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Resolve(System.String,System.Int32,System.TimeSpan)">
          <source>Resolves the supplied mesh ID to zero or more endpoint addresses of nodes participating in the peer mesh.</source>
          <target state="translated">Adresy punktów końcowych zero lub więcej węzłów uczestniczących w sieci równorzędnej jest rozpoznawany jako identyfikator dostarczony siatki.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Resolve(System.String,System.Int32,System.TimeSpan)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> that contains <ph id="ph2">&lt;see cref="T:System.ServiceModel.PeerNodeAddress" /&gt;</ph> objects representing nodes participating in the peer mesh.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> zawierający <ph id="ph2">&lt;see cref="T:System.ServiceModel.PeerNodeAddress" /&gt;</ph> obiekty reprezentujące węzłów uczestniczących w sieci równorzędnej.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)">
          <source>A registration ID for the node obtained by a previous call to <ph id="ph1">&lt;see cref="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" /&gt;</ph>.</source>
          <target state="translated">Identyfikator rejestracji dla węzła uzyskany przez poprzednie wywołanie <ph id="ph1">&lt;see cref="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)">
          <source>The length of time to wait for a successful removal of the registration from the peer mesh.</source>
          <target state="translated">Limit czasu oczekiwania na pomyślne usunięcie rejestracji w sieci równorzędnej.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)">
          <source>If the attempt fails, <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is raised on the peer.</source>
          <target state="translated">Jeśli próba nie powiedzie się, <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> jest wywoływane na element równorzędny.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)">
          <source>Removes the registration entry for a node from a peer mesh.</source>
          <target state="translated">Usuwa wpis rejestracji dla węzła z siatki elementów równorzędnych.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)">
          <source>A registration ID is a peer resolver token, that, at the very minimum, represents the tuple of a peer node ID and the mesh ID.</source>
          <target state="translated">Identyfikator rejestracji jest tokenem rozpoznawania elementów równorzędnych, reprezentujący, w bardzo minimalna krotki identyfikator węzła równorzędnego i identyfikatora siatki.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)">
          <source>This ID value must have been obtained in a previous call to <ph id="ph1">&lt;xref:System.ServiceModel.PeerResolver.Register%2A&gt;</ph>.</source>
          <target state="translated">Ta wartość Identyfikatora musi być uzyskane w poprzednie wywołanie <ph id="ph1">&lt;xref:System.ServiceModel.PeerResolver.Register%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.PeerResolver.Unregister%2A&gt;</ph> is called in two specific cases:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.PeerResolver.Unregister%2A&gt;</ph> jest wywoływana w dwóch przypadkach:</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)">
          <source>When the <ph id="ph1">&lt;xref:System.ServiceModel.PeerNode&gt;</ph> is leaving the peer mesh (usually as the result of closing the last peer channel or service host that is associated with it).</source>
          <target state="translated">Gdy <ph id="ph1">&lt;xref:System.ServiceModel.PeerNode&gt;</ph> jest pozostawienie węzła równorzędnego siatki (zazwyczaj w wyniku zamykanie ostatniego elementu równorzędnego kanału lub usługi hosta skojarzonego z nim).</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)">
          <source>When the <ph id="ph1">&lt;xref:System.ServiceModel.PeerNode&gt;</ph> can find no available endpoint addresses of other nodes participating in the peer mesh.</source>
          <target state="translated">Gdy <ph id="ph1">&lt;xref:System.ServiceModel.PeerNode&gt;</ph> można znaleźć żadnych adresów dostępnego punktu końcowego innych węzłów uczestniczących w sieci równorzędnej.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)">
          <source>As a result, the <ph id="ph1">&lt;xref:System.ServiceModel.PeerNode&gt;</ph> is no longer reachable, and it will attempt to call <ph id="ph2">&lt;xref:System.ServiceModel.PeerResolver.Unregister%2A&gt;</ph> to unregister itself from the <ph id="ph3">&lt;xref:System.ServiceModel.PeerResolver&gt;</ph>.</source>
          <target state="translated">W związku z tym <ph id="ph1">&lt;xref:System.ServiceModel.PeerNode&gt;</ph> nie jest już dostępny, i ponowi próbę wywołania <ph id="ph2">&lt;xref:System.ServiceModel.PeerResolver.Unregister%2A&gt;</ph> wyrejestrować się z <ph id="ph3">&lt;xref:System.ServiceModel.PeerResolver&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)">
          <source>If other peer nodes within the mesh become available subsequent to unregistration, the node can re-register itself by calling <ph id="ph1">&lt;xref:System.ServiceModel.PeerResolver.Register%2A&gt;</ph> and obtaining a new registration ID.</source>
          <target state="translated">Jeśli inne węzły równorzędne siatki, stają się dostępne po wyrejestrowanie, węzeł może ponownie zarejestrowany przez wywołanie metody <ph id="ph1">&lt;xref:System.ServiceModel.PeerResolver.Register%2A&gt;</ph> i uzyskanie nowego identyfikatora rejestracji.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)">
          <source>A registration ID token for the node, obtained by a previous call to <ph id="ph1">&lt;see cref="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" /&gt;</ph></source>
          <target state="translated">Token identyfikator rejestracji dla tego węzła, uzyskany przez poprzednie wywołanie <ph id="ph1">&lt;see cref="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)">
          <source>The updated endpoint address (and other multihoming IP addresses).</source>
          <target state="translated">Adres punktu końcowego zaktualizowane (i innych funkcji wieloadresowości adresów IP).</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)">
          <source>The length of time to wait for success before aborting the attempt to update the node's registration within the peer mesh.</source>
          <target state="translated">Długość czasu oczekiwania w przypadku powodzenia przed przerwaniem próby zaktualizowania węzła rejestracji w sieci równorzędnej.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)">
          <source>If the attempt fails, <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is raised on the peer.</source>
          <target state="translated">Jeśli próba nie powiedzie się, <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> jest wywoływane na element równorzędny.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)">
          <source>Updates the <ph id="ph1">&lt;see cref="T:System.ServiceModel.PeerNodeAddress" /&gt;</ph> for a node registered with a specific peer mesh.</source>
          <target state="translated">Aktualizacje <ph id="ph1">&lt;see cref="T:System.ServiceModel.PeerNodeAddress" /&gt;</ph> zarejestrowany siatki elementów równorzędnych określonego węzła.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.PeerResolver.Update%2A&gt;</ph> is called when the address of the <ph id="ph2">&lt;xref:System.ServiceModel.PeerNode&gt;</ph> changes on the local machine.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.PeerResolver.Update%2A&gt;</ph> wywoływana, gdy adres <ph id="ph2">&lt;xref:System.ServiceModel.PeerNode&gt;</ph> zmian na komputerze lokalnym.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>