<Type Name="MessageHeaderAttribute" FullName="System.ServiceModel.MessageHeaderAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4d4eec8914d0af556862fd839c6aaf86c2a5c039" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34315322" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MessageHeaderAttribute : System.ServiceModel.MessageContractMemberAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageHeaderAttribute extends System.ServiceModel.MessageContractMemberAttribute" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.MessageHeaderAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageHeaderAttribute&#xA;Inherits MessageContractMemberAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageHeaderAttribute : System::ServiceModel::MessageContractMemberAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.MessageContractMemberAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Property, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Określa, że element członkowski danych nagłówek komunikatu SOAP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.MessageHeaderAttribute> Atrybutu umożliwia mapowanie pól i właściwości typu oznaczone <xref:System.ServiceModel.MessageContractAttribute> atrybutu nagłówki komunikatów SOAP. Pole lub właściwość może być typu prostego lub typu złożonego, który można serializować.  
  
 Uzyskać informacji na temat kontrolowania serializacji zawartość treści protokołu SOAP bez modyfikowania samego koperty protokołu SOAP domyślne, zobacz <xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=nameWithType>, [Określanie transferu danych w kontraktach usług](~/docs/framework/wcf/feature-details/specifying-data-transfer-in-service-contracts.md), i [przy użyciu danych Kontrakty](~/docs/framework/wcf/feature-details/using-data-contracts.md).  
  
 Aby uzyskać więcej informacji o tworzeniu kontrakty komunikatów, zobacz [za pomocą kontraktów komunikatu](~/docs/framework/wcf/feature-details/using-message-contracts.md).  
  
 SOAP standard definiuje następujące atrybuty, które mogą znajdować się w nagłówku:  
  
-   `Actor` lub `Role` (`Actor` w SOAP 1.1, `Role` w SOAP 1.2)  
  
-   `MustUnderstand`  
  
-   `Relay`  
  
 `Actor` Lub `Role` atrybut określa identyfikator URI węzła, dla którego ma określony nagłówek. `MustUnderstand` Atrybut określa, czy nagłówek rozumie przetwarzania węzła. `Relay` Atrybut określa, czy nagłówek jest przekazywanie węzły podrzędne. Windows Communication Foundation (WCF) nie wykonuje żadnych przetwarzania tych atrybutów w komunikatach przychodzących, z wyjątkiem `MustUnderstand` atrybutu.  
  
 Można jednak odczytu i zapisu tych atrybutów, nawet jeśli nie są wysyłane domyślnie. Można ustawić wartości atrybutów na dwa sposoby. Po pierwsze, można zmienić <xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A>, <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A> i <xref:System.ServiceModel.MessageHeaderAttribute.Relay%2A> właściwości <xref:System.ServiceModel.MessageHeaderAttribute>. (Brak nie `Role` ustawić właściwości — <xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A> właściwości i `Role` jest przekazywana, jeśli jest używany protokół SOAP 1.2). Na przykład:  
  
  
  
 Drugi sposób kontrolowania tych atrybutów jest udostępniając żądanego nagłówka, parametru typu z typu <xref:System.ServiceModel.MessageHeader%601> klasy i przy użyciu wynikowy typ razem z <xref:System.ServiceModel.MessageHeaderAttribute>. Następnie użyj <xref:System.ServiceModel.MessageHeader%601> właściwości programowo, można ustawić atrybutów protokołu SOAP. Na przykład:  
  
  
  
  
  
 Jeśli są używane zarówno dynamiczny, jak i mechanizmy kontroli statycznych, statyczne ustawienia są domyślnie, ale może zostać zastąpiona przy użyciu mechanizmu dynamicznej. Na przykład:  
  
  
  
  
  
 Tworzenie powtarzane nagłówki za pomocą formantu atrybutu dynamic jest dozwolone. Na przykład:  
  
```  
[MessageHeaderArray] public MessageHeader<Person> documentApprovers[];  
```  
  
 Po stronie odbiorczej odczytywania tych atrybutów SOAP jest możliwe tylko jeśli ogólnego <xref:System.ServiceModel.MessageHeader%601> klasa jest używana. Sprawdź <xref:System.ServiceModel.MessageHeader%601.Actor%2A>, <xref:System.ServiceModel.MessageHeader%601.Relay%2A> lub <xref:System.ServiceModel.MessageHeader%601.MustUnderstand%2A> właściwości nagłówka o <xref:System.ServiceModel.MessageHeader%601> typ, aby wykryć ustawienia atrybutu dla odebranego komunikatu.  
  
 Gdy komunikat jest odbierany i następnie odesłał, SOAP atrybutu ustawień tylko komunikacja dwukierunkowa dla nagłówków <xref:System.ServiceModel.MessageHeader%601> typu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.ServiceModel.MessageHeaderAttribute> do tworzenia nagłówka SOAP dla komunikatu odpowiedzi z <xref:System.ServiceModel.MessageContractMemberAttribute.Name%2A>, <xref:System.ServiceModel.MessageContractMemberAttribute.Namespace%2A> i <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A> odpowiednie wartości właściwości dla tego nagłówka. Przykładowy kod następuje przykład wiadomości przy wysyłaniu.  
  
 [!code-csharp[MessageHeaderAttribute#4](~/samples/snippets/csharp/VS_Snippets_CFX/messageheaderattribute/cs/services.cs#4)]
 [!code-vb[MessageHeaderAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/messageheaderattribute/vb/services.vb#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageHeaderAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MessageHeaderAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageHeaderAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.MessageHeaderAttribute" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Actor">
      <MemberSignature Language="C#" Value="public string Actor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Actor" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageHeaderAttribute.Actor" />
      <MemberSignature Language="VB.NET" Value="Public Property Actor As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Actor { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia identyfikator URI, który wskazuje węzła, w którym jest przeznaczony ten nagłówek. Mapowany do atrybutu nagłówka roli, używanego protokołu SOAP 1.2 i atrybut nagłówka aktora stosowania SOAP 1.1.</summary>
        <value>Identyfikator URI, który wskazuje węzła, w którym jest przeznaczony ten nagłówek. Ten identyfikator URI Odwzorowuje atrybut nagłówka roli, używanego protokołu SOAP 1.2 i atrybut nagłówka aktora stosowania SOAP 1.1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zobacz sekcję uwag <xref:System.ServiceModel.MessageHeaderAttribute> szczegółowe informacje.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MustUnderstand">
      <MemberSignature Language="C#" Value="public bool MustUnderstand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MustUnderstand" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageHeaderAttribute.MustUnderstand" />
      <MemberSignature Language="VB.NET" Value="Public Property MustUnderstand As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MustUnderstand { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa, czy węzeł działające w <see cref="P:System.ServiceModel.MessageHeaderAttribute.Actor" /> roli należy poznać tego nagłówka. To jest mapowany na <see langword="mustUnderstand" /> atrybut nagłówka SOAP.</summary>
        <value>
          <see langword="true" /> Jeśli węzeł działające w <see cref="P:System.ServiceModel.MessageHeaderAttribute.Actor" /> roli, trzeba zrozumieć, ten nagłówek; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zobacz sekcję uwag <xref:System.ServiceModel.MessageHeaderAttribute> szczegółowe informacje.  
  
> [!IMPORTANT]
>  Należy pamiętać, że jeśli <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A> jest właściwość `true` w wiadomości wysyłanych i aplikacji po stronie odbierającej nie rozpoznaje nagłówka, generowany jest błąd. Z drugiej strony Jeśli nagłówek o `mustUnderstand` atrybut nagłówka SOAP ustawioną `true` odebrania przez Windows Communication Foundation (WCF), jego musi być częścią kontraktu komunikatu (lub muszą zostać przetworzone przez jedną Windows Communication Foundation (WCF) kanały); w przeciwnym razie zakłada się, że nagłówek nie jest rozpoznawany i jest zgłaszany wyjątek.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.ServiceModel.MessageHeaderAttribute> do tworzenia nagłówka SOAP dla komunikatu odpowiedzi z <xref:System.ServiceModel.MessageContractMemberAttribute.Name%2A>, <xref:System.ServiceModel.MessageContractMemberAttribute.Namespace%2A> i <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A> odpowiednie wartości właściwości dla tego nagłówka. Przykładowy kod następuje przykład wiadomości przy wysyłaniu.  
  
 [!code-csharp[MessageHeaderAttribute#4](~/samples/snippets/csharp/VS_Snippets_CFX/messageheaderattribute/cs/services.cs#4)]
 [!code-vb[MessageHeaderAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/messageheaderattribute/vb/services.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Relay">
      <MemberSignature Language="C#" Value="public bool Relay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Relay" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageHeaderAttribute.Relay" />
      <MemberSignature Language="VB.NET" Value="Public Property Relay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Relay { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa, czy ten nagłówek do węzłów podrzędnych. To jest mapowany na <see langword="relay" /> atrybut nagłówka SOAP.</summary>
        <value>
          <see langword="true" /> w przypadku tego nagłówka do węzłów podrzędnych; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest ignorowana, gdy jest używany protokół SOAP 1.1. Aby uzyskać więcej informacji, zobacz sekcję uwag <xref:System.ServiceModel.MessageHeaderAttribute> szczegółowe informacje.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>