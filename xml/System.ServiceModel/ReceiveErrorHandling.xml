<Type Name="ReceiveErrorHandling" FullName="System.ServiceModel.ReceiveErrorHandling">
  <TypeSignature Language="C#" Value="public enum ReceiveErrorHandling" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ReceiveErrorHandling extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ReceiveErrorHandling" />
  <TypeSignature Language="VB.NET" Value="Public Enum ReceiveErrorHandling" />
  <TypeSignature Language="C++ CLI" Value="public enum class ReceiveErrorHandling" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="20bbd-101">Wyliczenie określająca obsługę Trująca wiadomość.</span><span class="sxs-lookup"><span data-stu-id="20bbd-101">An enumeration that specifies handling for a poison message.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20bbd-102">Trująca wiadomość jest komunikat, który zakończy się niepowodzeniem kolejnych nieudanych prób dostarczenia do aplikacji.</span><span class="sxs-lookup"><span data-stu-id="20bbd-102">A poison message is a message that fails repeated attempts to deliver to the application.</span></span> <span data-ttu-id="20bbd-103">Ma to zastosowanie tylko wtedy, gdy użycie powiązania na podstawie usługi kolejkowania wiadomości MSMQ.</span><span class="sxs-lookup"><span data-stu-id="20bbd-103">This is applicable only when using a Message Queuing (MSMQ)-based binding.</span></span> <span data-ttu-id="20bbd-104">Wartość domyślna to `Fault`, który błędów odbiornika i w związku z tym ServiceHost.</span><span class="sxs-lookup"><span data-stu-id="20bbd-104">The default value is `Fault`, which faults the listener and therefore the ServiceHost.</span></span> <span data-ttu-id="20bbd-105">W przypadku których usługa była do awarii z powodu Trująca wiadomość, <xref:System.ServiceModel.MsmqPoisonMessageException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="20bbd-105">In the case where the service was to fault because of a poison message, a <xref:System.ServiceModel.MsmqPoisonMessageException> is thrown.</span></span> <span data-ttu-id="20bbd-106">Wyjątek zawiera `LookupId` wiadomości MSMQ, które można przenieść komunikatu przeszkadza przy użyciu interfejsu API System.Messaging.</span><span class="sxs-lookup"><span data-stu-id="20bbd-106">The exception contains the `LookupId` of the MSMQ message that can be used to move the message out of the way using System.Messaging API.</span></span> <span data-ttu-id="20bbd-107">Niektóre wartości <xref:System.ServiceModel.ReceiveErrorHandling> wyliczenia, takich jak `Reject` i `Move` są dostępne tylko na [!INCLUDE[wv](~/includes/wv-md.md)].</span><span class="sxs-lookup"><span data-stu-id="20bbd-107">Certain values of the <xref:System.ServiceModel.ReceiveErrorHandling> enumeration such as `Reject` and `Move` are only available on [!INCLUDE[wv](~/includes/wv-md.md)].</span></span> <span data-ttu-id="20bbd-108">Kontrolowanie Trująca wiadomość została obsługa przez ustawienie <xref:System.ServiceModel.Channels.MsmqBindingElementBase.ReceiveErrorHandling%2A> właściwości do jednej z wartości tego wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="20bbd-108">You control poison message handling by setting the <xref:System.ServiceModel.Channels.MsmqBindingElementBase.ReceiveErrorHandling%2A> property to one of the values of this enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20bbd-109">Poniższy kod konfiguracji ilustruje sposób ustawić tę właściwość w pliku konfiguracji usługi:</span><span class="sxs-lookup"><span data-stu-id="20bbd-109">The following configuration code illustrates how to set this property in the service configuration file:</span></span>  
  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Drop">
      <MemberSignature Language="C#" Value="Drop" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.ReceiveErrorHandling Drop = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.ReceiveErrorHandling.Drop" />
      <MemberSignature Language="VB.NET" Value="Drop" />
      <MemberSignature Language="C++ CLI" Value="Drop" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReceiveErrorHandling</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="20bbd-110">Ta opcja powoduje Trująca wiadomość.</span><span class="sxs-lookup"><span data-stu-id="20bbd-110">This option drops the poison message.</span></span> <span data-ttu-id="20bbd-111">Komunikat nigdy nie pobiera dostarczany do aplikacji.</span><span class="sxs-lookup"><span data-stu-id="20bbd-111">The message never gets delivered to the application.</span></span> <span data-ttu-id="20bbd-112">Jeśli czas wygaśnięcia wiadomości już wygasło na tym etapie, komunikat może się pojawić w kolejki utraconych wiadomości nadawcy.</span><span class="sxs-lookup"><span data-stu-id="20bbd-112">If the message's TTL had already expired at this point, then the message may appear in the sender's Dead Letter Queue.</span></span> <span data-ttu-id="20bbd-113">Jeśli nie, wiadomość nie jest wyświetlana z dowolnego miejsca.</span><span class="sxs-lookup"><span data-stu-id="20bbd-113">If not, the message does not appear anywhere.</span></span> <span data-ttu-id="20bbd-114">Ta opcja wskazuje, że użytkownik naprawdę interesują Jeśli wiadomość zostanie przerwane.</span><span class="sxs-lookup"><span data-stu-id="20bbd-114">This option indicates that the user does not really care if the message is lost.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20bbd-115">Odpowiednie platformy: [!INCLUDE[wxp](~/includes/wxp-md.md)], [!INCLUDE[ws2003](~/includes/ws2003-md.md)], i [!INCLUDE[wv](~/includes/wv-md.md)].</span><span class="sxs-lookup"><span data-stu-id="20bbd-115">Applicable platforms: [!INCLUDE[wxp](~/includes/wxp-md.md)], [!INCLUDE[ws2003](~/includes/ws2003-md.md)], and [!INCLUDE[wv](~/includes/wv-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fault">
      <MemberSignature Language="C#" Value="Fault" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.ReceiveErrorHandling Fault = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.ReceiveErrorHandling.Fault" />
      <MemberSignature Language="VB.NET" Value="Fault" />
      <MemberSignature Language="C++ CLI" Value="Fault" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReceiveErrorHandling</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="20bbd-116">Ta opcja wysyła usterki do odbiornika, który spowodował ServiceHost do błędów.</span><span class="sxs-lookup"><span data-stu-id="20bbd-116">This option sends a fault to the listener that caused the ServiceHost to fault.</span></span> <span data-ttu-id="20bbd-117">Komunikat należy usunąć z kolejki aplikacji przez inny mechanizm zewnętrzny przed kontynuowaniem aplikacji do przetwarzania komunikatów z kolejki.</span><span class="sxs-lookup"><span data-stu-id="20bbd-117">The message must be removed from the application queue by some external mechanism before the application can continue to process messages from the queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20bbd-118">Odpowiednie platformy: Windows XP, Windows Server 2003 i Windows Vista.</span><span class="sxs-lookup"><span data-stu-id="20bbd-118">Applicable platforms: Windows XP, Windows Server 2003, and Windows Vista.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="Move" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.ReceiveErrorHandling Move = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.ReceiveErrorHandling.Move" />
      <MemberSignature Language="VB.NET" Value="Move" />
      <MemberSignature Language="C++ CLI" Value="Move" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReceiveErrorHandling</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="20bbd-119">Spowoduje to przeniesienie Trująca wiadomość do skażone kolejki komunikatów do późniejszego przetwarzania przez Trująca wiadomość obsługi aplikacji.</span><span class="sxs-lookup"><span data-stu-id="20bbd-119">This moves the poison message to a Poison Message Queue for later processing by a poison message handling application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20bbd-120">Odpowiednie platformy: [!INCLUDE[wv](~/includes/wv-md.md)] tylko.</span><span class="sxs-lookup"><span data-stu-id="20bbd-120">Applicable platforms: [!INCLUDE[wv](~/includes/wv-md.md)] only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reject">
      <MemberSignature Language="C#" Value="Reject" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.ReceiveErrorHandling Reject = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.ReceiveErrorHandling.Reject" />
      <MemberSignature Language="VB.NET" Value="Reject" />
      <MemberSignature Language="C++ CLI" Value="Reject" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReceiveErrorHandling</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="20bbd-121">Powoduje to, że usługi MSMQ do odesłania negatywnego potwierdzenia do wysyłania menedżera kolejek, że nie można odebrać wiadomości przez aplikację.</span><span class="sxs-lookup"><span data-stu-id="20bbd-121">This instructs MSMQ to send a negative acknowledgement back to the sending queue manager that the message cannot be received by the application.</span></span> <span data-ttu-id="20bbd-122">Wiadomość jest umieszczana w kolejce wiadomości utraconych wysyłania menedżera kolejek.</span><span class="sxs-lookup"><span data-stu-id="20bbd-122">The message is placed in the sending queue manager's Dead Letter Queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20bbd-123">Odpowiednie platformy: [!INCLUDE[wv](~/includes/wv-md.md)] tylko.</span><span class="sxs-lookup"><span data-stu-id="20bbd-123">Applicable platforms: [!INCLUDE[wv](~/includes/wv-md.md)] only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>