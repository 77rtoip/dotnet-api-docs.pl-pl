<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ConcurrencyMode.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b72197c6ac0dcd174f493c1f27f3f2b847bc537fe3e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">197c6ac0dcd174f493c1f27f3f2b847bc537fe3e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ConcurrencyMode">
          <source>Specifies whether a service class supports single-threaded or multi-threaded modes of operation.</source>
          <target state="translated">Określa, czy klasa usługi obsługuje jednowątkowe lub wielowątkowych tryby pracy.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ConcurrencyMode">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.ConcurrencyMode&gt;</ph> is used in conjunction with the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A&gt;</ph> property to specify whether a service class supports single-threaded or multi-threaded modes of operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ConcurrencyMode&gt;</ph> jest używany w połączeniu z <ph id="ph2">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A&gt;</ph> właściwości w celu określenia, czy klasa usługi obsługuje jednowątkowe lub wielowątkowych tryby pracy.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ConcurrencyMode">
          <source>A single-threaded operation can be either reentrant or non-reentrant.</source>
          <target state="translated">Operacji jednowątkowej może być współużytkowane ani nie obsługującą.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ConcurrencyMode">
          <source>The following table shows when <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> permits an operation to be invoked while another one is in progress, depending upon the <ph id="ph2">&lt;xref:System.ServiceModel.ConcurrencyMode&gt;</ph>.</source>
          <target state="translated">W poniższej tabeli przedstawiono kiedy <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> zezwala na wywoływany podczas drugiego jedną jest w toku, w zależności od operacji <ph id="ph2">&lt;xref:System.ServiceModel.ConcurrencyMode&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ConcurrencyMode">
          <source>ConcurrencyMode Value</source>
          <target state="translated">Wartość ConcurrencyMode</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ConcurrencyMode">
          <source>Can a new operation be invoked?</source>
          <target state="translated">Może być wywoływany nową operację?</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ConcurrencyMode">
          <source>Single</source>
          <target state="translated">Single</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ConcurrencyMode">
          <source>Never.</source>
          <target state="translated">Nigdy nie.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ConcurrencyMode">
          <source>Reentrant</source>
          <target state="translated">Procedura wielobieżna</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ConcurrencyMode">
          <source>Only while invoking another service or a callback.</source>
          <target state="translated">Tylko podczas wywoływania inną usługę lub wywołania zwrotnego.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ConcurrencyMode">
          <source>Multiple</source>
          <target state="translated">Wielokrotne</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ConcurrencyMode">
          <source>Always.</source>
          <target state="translated">Zawsze.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ConcurrencyMode">
          <source>The following code example demonstrates the different between using Single, Reentrant, and Multiple.</source>
          <target state="translated">Poniższy przykład kodu pokazuje różnic między przy użyciu pojedynczej, współużytkowanej współbieżności i wielu.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ConcurrencyMode">
          <source>This sample does not compile without a real implementation behind it, but does demonstrate the kind of threading guarantees that WCF makes and what that means for your operation code.</source>
          <target state="translated">W tym przykładzie nie kompiluje się bez rzeczywistego wykonania za nią, ale pokazują rodzaj wątkowość gwarantuje, że ułatwia WCF i który znaczenia dla kodu operacji.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.ConcurrencyMode.Multiple">
          <source>The service instance is multi-threaded.</source>
          <target state="translated">Wystąpienie usługi będzie wielowątkowych.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.ConcurrencyMode.Multiple">
          <source>No synchronization guarantees are made.</source>
          <target state="translated">Nie gwarantuje synchronizacji zostały wprowadzone.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.ConcurrencyMode.Multiple">
          <source>Because other threads can change your service object at any time, you must handle synchronization and state consistency at all times.</source>
          <target state="translated">Nie ma innych wątków można zmienić obiektu usługi w dowolnym momencie, musi obsługiwać synchronizacji i stan spójności.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.ConcurrencyMode.Reentrant">
          <source>The service instance is single-threaded and accepts reentrant calls.</source>
          <target state="translated">Wystąpienie usługi jest jednowątkowy i akceptuje wywołania współużytkowane.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.ConcurrencyMode.Reentrant">
          <source>The reentrant service accepts calls when you call another service; it is therefore your responsibility to leave your object state consistent before callouts and you must confirm that operation-local data is valid after callouts.</source>
          <target state="translated">Usługa współużytkowane akceptuje wywołań podczas wywoływania innego usługi; Dlatego obowiązek pozostaw Nazwa stanu obiektu spójne przed objaśnienia i musisz potwierdzić, że dane lokalne operacji jest ważne po objaśnienia.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.ConcurrencyMode.Reentrant">
          <source>Note that the service instance is unlocked only by calling another service over a WCF channel.</source>
          <target state="translated">Należy pamiętać, że wystąpienie usługi jest odblokowana tylko wywołując innej usługi za pośrednictwem kanału WCF.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.ConcurrencyMode.Reentrant">
          <source>In this case, the called service can reenter the first service via a callback.</source>
          <target state="translated">W takim przypadku usługa o nazwie można ponownie pierwszej usługi za pośrednictwem wywołania zwrotnego.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.ConcurrencyMode.Reentrant">
          <source>If the first service is not reentrant, the sequence of calls results in a deadlock.</source>
          <target state="translated">Jeśli pierwsza usługa nie jest współużytkowane, sekwencję wywołań powoduje zakleszczenie.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.ConcurrencyMode.Reentrant">
          <source>For details, see <ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode" /&gt;</ph>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.ConcurrencyMode.Single">
          <source>The service instance is single-threaded and does not accept reentrant calls.</source>
          <target state="translated">Wystąpienie usługi jest jednowątkowy i nie akceptuje wywołania współużytkowane.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.ConcurrencyMode.Single">
          <source>If the <ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode" /&gt;</ph> property is <ph id="ph2">&lt;see cref="F:System.ServiceModel.InstanceContextMode.Single" /&gt;</ph>, and additional messages arrive while the instance services a call, these messages must wait until the service is available or until the messages time out.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode" /&gt;</ph> właściwość jest <ph id="ph2">&lt;see cref="F:System.ServiceModel.InstanceContextMode.Single" /&gt;</ph>i dodatkowych komunikatów przychodzących podczas, gdy wystąpienie usługi wywołanie, te komunikaty musi poczekać, aż usługa jest dostępna aż lub limit czasu wiadomości.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>