<Type Name="WSHttpBinding" FullName="System.ServiceModel.WSHttpBinding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6ddf8539ff4f020457dc950a30c61bb26e7d0398" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30578881" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WSHttpBinding : System.ServiceModel.WSHttpBindingBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WSHttpBinding extends System.ServiceModel.WSHttpBindingBase" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.WSHttpBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class WSHttpBinding&#xA;Inherits WSHttpBindingBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WSHttpBinding : System::ServiceModel::WSHttpBindingBase" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.WSHttpBindingBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje interoperacyjne powiązanie, które obsługuje transakcje rozproszone i bezpieczne, niezawodne sesje.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.WSHttpBinding> Jest podobny do <xref:System.ServiceModel.BasicHttpBinding> , ale zawierają więcej funkcji usługi sieci Web. Używa transportu HTTP i zapewnia bezpieczeństwo komunikatów, tak jak w przypadku <xref:System.ServiceModel.BasicHttpBinding>, ale również zapewnia transakcji, niezawodna obsługa komunikatów i WS-Addressing, domyślnie włączona ani dostępne za pomocą ustawienia jeden formant.  
  
   
  
## Examples  
 Następujący przykładowy kod przedstawia sposób użycia <xref:System.ServiceModel.WSHttpBinding> klasy.  
  
 [!code-csharp[WSHttpBinding#0](~/samples/snippets/csharp/VS_Snippets_CFX/wshttpbinding/cs/wshttpbinding.cs#0)]
 [!code-vb[WSHttpBinding#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/wshttpbinding/vb/wshttpbinding.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.WSHttpBinding" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSHttpBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSHttpBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSHttpBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.WSHttpBinding" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Następujący przykładowy kod pokazuje, jak zainicjować nowe wystąpienie klasy <xref:System.ServiceModel.WSHttpBinding> klasy.  
  
 [!code-csharp[WSHttpBinding#1](~/samples/snippets/csharp/VS_Snippets_CFX/wshttpbinding/cs/wshttpbinding.cs#1)]
 [!code-vb[WSHttpBinding#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/wshttpbinding/vb/wshttpbinding.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSHttpBinding (System.ServiceModel.SecurityMode securityMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ServiceModel.SecurityMode securityMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSHttpBinding.#ctor(System.ServiceModel.SecurityMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSHttpBinding(System::ServiceModel::SecurityMode securityMode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="securityMode" Type="System.ServiceModel.SecurityMode" />
      </Parameters>
      <Docs>
        <param name="securityMode">Wartość <see cref="T:System.ServiceModel.SecurityMode" /> określająca typ zabezpieczeń, które jest używane z komunikatu protokołu SOAP i dla klienta.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.WSHttpBinding" /> klasy z określonym typem zabezpieczeń używanym przez wiązanie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, jak zainicjować nowe wystąpienie klasy <xref:System.ServiceModel.WSHttpBinding> klasy z `securityMode` parametru.  
  
 [!code-csharp[WSHttpBinding#7](~/samples/snippets/csharp/VS_Snippets_CFX/wshttpbinding/cs/wshttpbinding.cs#7)]
 [!code-vb[WSHttpBinding#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/wshttpbinding/vb/wshttpbinding.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSHttpBinding (string configName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string configName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSHttpBinding.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (configName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSHttpBinding(System::String ^ configName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="configName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configName">Nazwa konfiguracji powiązania dla <see cref="T:System.ServiceModel.Configuration.WSHttpBindingElement" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.WSHttpBinding" /> klasy z powiązaniem określonego za pomocą nazwy konfiguracji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, jak zainicjować nowe wystąpienie klasy <xref:System.ServiceModel.WSHttpBinding> klasy z argumentem ciągu.  
  
 [!code-csharp[WSHttpBinding#5](~/samples/snippets/csharp/VS_Snippets_CFX/wshttpbinding/cs/wshttpbinding.cs#5)]
 [!code-vb[WSHttpBinding#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/wshttpbinding/vb/wshttpbinding.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Element powiązania o nazwie <paramref name="configName" /> nie został znaleziony.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSHttpBinding (System.ServiceModel.SecurityMode securityMode, bool reliableSessionEnabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ServiceModel.SecurityMode securityMode, bool reliableSessionEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSHttpBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSHttpBinding(System::ServiceModel::SecurityMode securityMode, bool reliableSessionEnabled);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="securityMode" Type="System.ServiceModel.SecurityMode" />
        <Parameter Name="reliableSessionEnabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="securityMode">Wartość <see cref="T:System.ServiceModel.SecurityMode" /> określająca typ zabezpieczeń, które jest używane z komunikatu protokołu SOAP i dla klienta.</param>
        <param name="reliableSessionEnabled">
          <see langword="true" /> Jeśli niezawodnej sesji jest włączony; w przeciwnym razie <see langword="false" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.WSHttpBinding" /> klasy z określonym typem zabezpieczeń używanym przez wiązanie i wartość, która wskazuje, czy włączono niezawodnej sesji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, jak zainicjować nowe wystąpienie klasy <xref:System.ServiceModel.WSHttpBinding> klasy z `securityMode` i `reliableSessionEnabled` parametru.  
  
 [!code-csharp[WSHttpBinding#6](~/samples/snippets/csharp/VS_Snippets_CFX/wshttpbinding/cs/wshttpbinding.cs#6)]
 [!code-vb[WSHttpBinding#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/wshttpbinding/vb/wshttpbinding.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowCookies">
      <MemberSignature Language="C#" Value="public bool AllowCookies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowCookies" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSHttpBinding.AllowCookies" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowCookies As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowCookies { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy klient WCF zostaną automatycznie przechowywania i Wyślij ponownie żadnych plików cookie wysłanych przez usługę sieci web jednej.</summary>
        <value>
          <see langword="True" /> Jeśli automatyczne plików cookie przetwarzania jest wymagane; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienie <xref:System.ServiceModel.WSHttpBinding.AllowCookies%2A> do `true` jest przydatne, gdy klient prowadzi interakcję z usługą jedną witrynę sieci web, która używa plików cookie.  Jeśli uzyskują dostęp do wielu usług przy użyciu tego samego pliku cookie, ustaw <xref:System.ServiceModel.WSHttpBinding.AllowCookies%2A> do `false` i będzie konieczne ręczne dodanie nagłówka pliku cookie do każdego komunikatu wychodzącego. Poniższy kod przedstawia, jak to zrobić:  
  
```csharp  
MyWebServiceClient client = new MyWebServiceClient();  
  
        using (new OperationContextScope(client.InnerChannel))  
        {  
            client.DoSomething();  
  
            // Extract the cookie embedded in the received web service response  
            // and stores it locally  
            HttpResponseMessageProperty response = (HttpResponseMessageProperty)  
            OperationContext.Current.IncomingMessageProperties[  
                HttpResponseMessageProperty.Name];  
            sharedCookie = response.Headers["Set-Cookie"];  
        }  
  
        MyOtherWebServiceClient otherClient = new MyOtherWebServiceClient();  
  
        using (new OperationContextScope(otherClient.InnerChannel))  
        {  
            // Embeds the extracted cookie in the next web service request  
            // Note that we manually have to create the request object since  
            // since it doesn't exist yet at this stage   
            HttpRequestMessageProperty request = new HttpRequestMessageProperty();  
            request.Headers["Cookie"] = sharedCookie;  
            OperationContext.Current.OutgoingMessageProperties[  
                HttpRequestMessageProperty.Name] = request;  
  
            otherClient.DoSomethingElse();  
        }  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelFactory(Of TChannel) (parameters As BindingParameterCollection) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingParameterCollection ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">Tworzy typ kanału fabryki kanałów.</typeparam>
        <param name="parameters">Określa wymagania, wbudowane fabryki kanałów.</param>
        <summary>Tworzy stosu fabryki kanałów na komputerze klienckim, który tworzy określony typ kanału i odpowiadającej funkcji określonej przez kolekcję wiązania parametrów.</summary>
        <returns>
          <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> Typu TChannel spełniająca funkcji określonej przez kolekcji.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBindingElements">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElementCollection CreateBindingElements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElementCollection CreateBindingElements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSHttpBinding.CreateBindingElements" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateBindingElements () As BindingElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElementCollection ^ CreateBindingElements();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElementCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca uporządkowaną kolekcję elementów wiązania zawartych w bieżącym wiązaniu.</summary>
        <returns>
          <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> Zawierający uporządkowanej stosu opisanego przez elementów wiązania <see cref="T:System.ServiceModel.WSHttpBinding" /> powiązania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ważna jest kolejność elementów powiązania. Odzwierciedla kolejność, w którym kanały transportu i protokół są zbudowane i skumulowany.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób uzyskiwania <xref:System.ServiceModel.Channels.BindingElementCollection> zawierający uporządkowanej stosu opisanego przez elementów wiązania <xref:System.ServiceModel.WSHttpBinding> powiązania.  
  
 [!code-csharp[WSHttpBinding#9](~/samples/snippets/csharp/VS_Snippets_CFX/wshttpbinding/cs/wshttpbinding.cs#9)]
 [!code-vb[WSHttpBinding#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/wshttpbinding/vb/wshttpbinding.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Ustaw tryb zabezpieczeń transport nie może dostarczyć niezawodnej sesji, który został włączony.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateMessageSecurity">
      <MemberSignature Language="C#" Value="protected override System.ServiceModel.Channels.SecurityBindingElement CreateMessageSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.ServiceModel.Channels.SecurityBindingElement CreateMessageSecurity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSHttpBinding.CreateMessageSecurity" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateMessageSecurity () As SecurityBindingElement" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::ServiceModel::Channels::SecurityBindingElement ^ CreateMessageSecurity();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SecurityBindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca element powiązania zabezpieczeń z bieżącego powiązania.</summary>
        <returns>A <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> z bieżącego powiązania.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTransport">
      <MemberSignature Language="C#" Value="protected override System.ServiceModel.Channels.TransportBindingElement GetTransport ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.ServiceModel.Channels.TransportBindingElement GetTransport() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSHttpBinding.GetTransport" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetTransport () As TransportBindingElement" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::ServiceModel::Channels::TransportBindingElement ^ GetTransport();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.TransportBindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca element powiązania transportu z bieżącego powiązania.</summary>
        <returns>
          <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> z bieżącego powiązania.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Security">
      <MemberSignature Language="C#" Value="public System.ServiceModel.WSHttpSecurity Security { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.WSHttpSecurity Security" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSHttpBinding.Security" />
      <MemberSignature Language="VB.NET" Value="Public Property Security As WSHttpSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::WSHttpSecurity ^ Security { System::ServiceModel::WSHttpSecurity ^ get(); void set(System::ServiceModel::WSHttpSecurity ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.WSHttpSecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ustawienia zabezpieczeń używane dla tego wiązania.</summary>
        <value>
          <see cref="T:System.ServiceModel.WSHttpSecurity" /> Używana przez to powiązanie. Wartość domyślna <see cref="P:System.ServiceModel.WSHttpSecurity.Mode" /> jest właściwość <see cref="P:System.ServiceModel.WSHttpSecurity.Message" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby użyć czegoś innego niż domyślny typ zabezpieczeń, użyj <xref:System.ServiceModel.WSHttpBinding.%23ctor%28System.ServiceModel.SecurityMode%29> konstruktora.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób uzyskiwania wartości <xref:System.ServiceModel.WSHttpBinding.Security%2A>.  
  
 [!code-csharp[WSHttpBinding#8](~/samples/snippets/csharp/VS_Snippets_CFX/wshttpbinding/cs/wshttpbinding.cs#8)]
 [!code-vb[WSHttpBinding#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/wshttpbinding/vb/wshttpbinding.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSecurity">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeSecurity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSHttpBinding.ShouldSerializeSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeSecurity () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeSecurity();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wartość wskazującą, czy <see cref="P:System.ServiceModel.WSHttpBinding.Security" /> właściwości została zmieniona z jej wartości domyślnej i powinny być serializowane.</summary>
        <returns>
          <see langword="true" /> Jeśli <see cref="P:System.ServiceModel.WSHttpBinding.Security" /> wartość właściwości powinny być serializowane; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>