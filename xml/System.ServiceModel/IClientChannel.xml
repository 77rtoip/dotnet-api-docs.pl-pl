<Type Name="IClientChannel" FullName="System.ServiceModel.IClientChannel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3af7d0743208b8eba14dd1a1fb7e85ac527f5d5a" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34315313" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IClientChannel : IDisposable, System.ServiceModel.IContextChannel, System.ServiceModel.IExtensibleObject&lt;System.ServiceModel.IContextChannel&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IClientChannel implements class System.IDisposable, class System.ServiceModel.Channels.IChannel, class System.ServiceModel.ICommunicationObject, class System.ServiceModel.IContextChannel, class System.ServiceModel.IExtensibleObject`1&lt;class System.ServiceModel.IContextChannel&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.IClientChannel" />
  <TypeSignature Language="VB.NET" Value="Public Interface IClientChannel&#xA;Implements IContextChannel, IDisposable, IExtensibleObject(Of IContextChannel)" />
  <TypeSignature Language="C++ CLI" Value="public interface class IClientChannel : IDisposable, System::ServiceModel::IContextChannel, System::ServiceModel::IExtensibleObject&lt;System::ServiceModel::IContextChannel ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.IContextChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.IExtensibleObject&lt;System.ServiceModel.IContextChannel&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="2c05d-101">Definiuje zachowanie żądania wychodzącego i używanych przez aplikacje klienckie kanałów żądanie/odpowiedź.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2c05d-101">Defines the behavior of outbound request and request/reply channels used by client applications.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c05d-102"><xref:System.ServiceModel.IClientChannel> Interfejsu określa operacje obsługiwane przez wszystkie kanały zwrócony przez wywołanie do <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2c05d-102">The <xref:System.ServiceModel.IClientChannel> interface defines the operations supported by all channels returned by a call to <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2c05d-103">Użyj <xref:System.ServiceModel.IClientChannel> metody i właściwości do przeglądania i modyfikowania wychodzących kanałów określonego.</span><span class="sxs-lookup"><span data-stu-id="2c05d-103">Use the <xref:System.ServiceModel.IClientChannel> methods and properties to inspect and modify the outbound typed channel.</span></span> <span data-ttu-id="2c05d-104">[Narzędzie narzędzia metadanych elementu ServiceModel (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) eksportuje zarówno <xref:System.ServiceModel.ClientBase%601> klas i interfejsu kontraktu usługi, tworząc interfejsu kontraktu, który dziedziczy z obu kontrakt usługi docelowej i <xref:System.ServiceModel.IClientChannel>, Włączanie używanie rozszerzonych kontraktu jako proxy do usługi oraz dostęp do kanału klienta.</span><span class="sxs-lookup"><span data-stu-id="2c05d-104">The [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) exports both a <xref:System.ServiceModel.ClientBase%601> class and a service contract interface by creating a contract interface that inherits from both the target service contract and <xref:System.ServiceModel.IClientChannel>, enabling you to use the extended contract as both the proxy to the service and to access the client channel.</span></span>  
  
 <span data-ttu-id="2c05d-105">Aby uzyskać więcej informacji, zobacz [Architektura klienta WCF](~/docs/framework/wcf/feature-details/client-architecture.md).</span><span class="sxs-lookup"><span data-stu-id="2c05d-105">For more information, see [WCF Client Architecture](~/docs/framework/wcf/feature-details/client-architecture.md).</span></span> <span data-ttu-id="2c05d-106">Przykłady jego wyglądu w plikach kodu wygenerowanego klienta można znaleźć [opis wygenerowany kod klienta](~/docs/framework/wcf/feature-details/understanding-generated-client-code.md).</span><span class="sxs-lookup"><span data-stu-id="2c05d-106">For examples of its appearance in generated client code files, see [Understanding Generated Client Code](~/docs/framework/wcf/feature-details/understanding-generated-client-code.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllowInitializationUI">
      <MemberSignature Language="C#" Value="public bool AllowInitializationUI { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowInitializationUI" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.IClientChannel.AllowInitializationUI" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowInitializationUI As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowInitializationUI { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2c05d-107">Pobiera lub ustawia wartość wskazującą czy <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> próby wywołania <see cref="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" /> obiekty w <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers" /> właściwości lub zgłasza, jeśli w tej kolekcji nie jest pusty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c05d-107">Gets or sets a value indicating whether <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> attempts to call the <see cref="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" /> objects in the <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers" /> property or throws if that collection is not empty.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2c05d-108">
            <see langword="true" /> Jeśli Windows Communication Foundation (WCF) może wywołać interakcyjne kanału inicjatory; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c05d-108">
              <see langword="true" /> if Windows Communication Foundation (WCF) is permitted to invoke interactive channel initializers; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c05d-109">Ustaw tę wartość na `false` Aby zgłosić wyjątek, zamiast wyświetlania okna dialogowego inicjowania.</span><span class="sxs-lookup"><span data-stu-id="2c05d-109">Set this to `false` if you want to throw an exception rather than display an initialization dialog.</span></span> <span data-ttu-id="2c05d-110">Jest to przydatne w przypadku scenariusza warstwy środkowej, w którym chcesz zagwarantować, nawet jeśli aplikacja jest skonfigurowana do wyświetlania jednego pojawi się okno nie.</span><span class="sxs-lookup"><span data-stu-id="2c05d-110">This is useful in a middle-tier scenario in which you want to guarantee that no dialog appears even if the application is configured to display one.</span></span> <span data-ttu-id="2c05d-111">Aby uzyskać więcej informacji, zobacz [dostęp do usług za pomocą klienta WCF](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md) i <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2c05d-111">For details, see [Accessing Services Using a WCF Client](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md) and <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDisplayInitializationUI">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginDisplayInitializationUI (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginDisplayInitializationUI(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginDisplayInitializationUI (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginDisplayInitializationUI(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="2c05d-112">Metoda, która jest wywoływana po zakończeniu tej metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c05d-112">The method that is called when this method completes.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="2c05d-113">Informacje o stanie kanału.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c05d-113">Information about the state of the channel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c05d-114">Wywołanie asynchroniczne, aby rozpocząć korzystanie z interfejsu użytkownika można uzyskać informacji o poświadczeniach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c05d-114">An asynchronous call to begin using a user interface to obtain credential information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2c05d-115">
            <see cref="T:System.IAsyncResult" /> Można użyć do wywołania po zakończeniu przetwarzania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c05d-115">The <see cref="T:System.IAsyncResult" /> to use to call back when processing has completed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c05d-116">Wywołaj tę metodę, aby spowodować, że wszystkie inicjacji kanału interakcyjne (na przykład wyboru karty CardSpace) występuje.</span><span class="sxs-lookup"><span data-stu-id="2c05d-116">Call this method to cause any interactive channel initialization (for example, CardSpace card selection) to occur.</span></span> <span data-ttu-id="2c05d-117">Jest to wykonywane automatycznie, gdy kanał jest używane bez jawnie podczas wywoływania <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType>, więc dla wielu aplikacji to wywołanie jest opcjonalne.</span><span class="sxs-lookup"><span data-stu-id="2c05d-117">This happens automatically if the channel is used without explicitly calling <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType>, so for many applications this call is optional.</span></span>  
  
 <span data-ttu-id="2c05d-118">Jednak użytkownik zajmuje dużo czasu, w procesie wyboru, operację, która automatycznie wywołuje ten może upłynął limit czasu. Aby tego uniknąć, należy wywołać <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A> lub <xref:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI%2A> i <xref:System.ServiceModel.IClientChannel.EndDisplayInitializationUI%2A> jawnie.</span><span class="sxs-lookup"><span data-stu-id="2c05d-118">However, if the user takes a long time in the selection process, the operation that automatically called this may time out. To prevent this, call <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A> or <xref:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI%2A> and <xref:System.ServiceModel.IClientChannel.EndDisplayInitializationUI%2A> explicitly.</span></span> <span data-ttu-id="2c05d-119">Te operacje nie wygasają i pozwala na kontrolowanie dokładnie gdzie w aplikacji to okno dialogowe pojawia się.</span><span class="sxs-lookup"><span data-stu-id="2c05d-119">These operations do not time out and allow you to control exactly where in your application this dialog comes up.</span></span>  
  
 <span data-ttu-id="2c05d-120">Ta metoda wywołuje okno dialogowe tylko jeśli aplikacja jest skonfigurowana w tym celu.</span><span class="sxs-lookup"><span data-stu-id="2c05d-120">This method only brings up a dialog if the application is configured to do so.</span></span> <span data-ttu-id="2c05d-121">Gdy aplikacja nie jest skonfigurowany do używania CardSpace lub inny kanał interaktywnego inicjatora, to wywołanie zwraca bez żadnych działań.</span><span class="sxs-lookup"><span data-stu-id="2c05d-121">When the application is not configured to use CardSpace or another interactive channel initializer, this call returns without any action.</span></span>  
  
 <span data-ttu-id="2c05d-122">Jawnie wywołać tę metodę należy otworzyć również jawnie kanału przed jego użyciem.</span><span class="sxs-lookup"><span data-stu-id="2c05d-122">If you call this method explicitly, you must also explicitly open the channel before using it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DidInteractiveInitialization">
      <MemberSignature Language="C#" Value="public bool DidInteractiveInitialization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DidInteractiveInitialization" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.IClientChannel.DidInteractiveInitialization" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DidInteractiveInitialization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DidInteractiveInitialization { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2c05d-123">Pobiera wartość wskazującą, czy Wykonano wywołanie do interfejsu użytkownika można uzyskać informacji o poświadczeniach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c05d-123">Gets a value indicating whether a call was done to a user interface to obtain credential information.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2c05d-124">
            <see langword="true" /> Jeśli <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> wywołano metodę (lub <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> i <see cref="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" /> metod; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c05d-124">
              <see langword="true" /> if the <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> method was called (or the <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> and <see cref="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" /> methods; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c05d-125">Jeśli działania są nazywane na <xref:System.ServiceModel.IClientChannel> bez wywoływania elementu <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A> i <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType>, te metody są nazywane automatycznie.</span><span class="sxs-lookup"><span data-stu-id="2c05d-125">If operations are called on an <xref:System.ServiceModel.IClientChannel> without calling <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A> and <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType>, these methods are called automatically.</span></span> <span data-ttu-id="2c05d-126">Aby uzyskać więcej informacji, zobacz [dostęp do usług za pomocą klienta WCF](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md) i <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2c05d-126">For details, see [Accessing Services Using a WCF Client](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md) and <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayInitializationUI">
      <MemberSignature Language="C#" Value="public void DisplayInitializationUI ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisplayInitializationUI() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisplayInitializationUI ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisplayInitializationUI();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2c05d-127">Wywołanie interfejsu użytkownika można uzyskać informacji o poświadczeniach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c05d-127">A call to a user interface to obtain credential information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c05d-128">Wywołaj tę metodę, aby spowodować, że wszystkie inicjacji kanału interakcyjne (na przykład wyboru karty CardSpace) występuje.</span><span class="sxs-lookup"><span data-stu-id="2c05d-128">Call this method to cause any interactive channel initialization (for example, CardSpace card selection) to occur.</span></span> <span data-ttu-id="2c05d-129">Jest to wykonywane automatycznie, gdy kanał jest używane bez jawnie podczas wywoływania <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType>, więc dla wielu aplikacji to wywołanie jest opcjonalne.</span><span class="sxs-lookup"><span data-stu-id="2c05d-129">This happens automatically if the channel is used without explicitly calling <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType>, so for many applications this call is optional.</span></span>  
  
 <span data-ttu-id="2c05d-130">Jednak użytkownik zajmuje dużo czasu, w procesie wyboru, operację, która automatycznie wywołuje ten może upłynął limit czasu. Aby tego uniknąć, należy wywołać <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A> lub <xref:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI%2A> i <xref:System.ServiceModel.IClientChannel.EndDisplayInitializationUI%2A> jawnie.</span><span class="sxs-lookup"><span data-stu-id="2c05d-130">However, if the user takes a long time in the selection process, the operation that automatically called this may time out. To prevent this, call <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A> or <xref:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI%2A> and <xref:System.ServiceModel.IClientChannel.EndDisplayInitializationUI%2A> explicitly.</span></span> <span data-ttu-id="2c05d-131">Te operacje nie wygasają i pozwala na kontrolowanie dokładnie gdzie w aplikacji to okno dialogowe pojawia się.</span><span class="sxs-lookup"><span data-stu-id="2c05d-131">These operations do not time out and allow you to control exactly where in your application this dialog comes up.</span></span>  
  
 <span data-ttu-id="2c05d-132">Ta metoda wywołuje okno dialogowe tylko jeśli aplikacja jest skonfigurowana w tym celu.</span><span class="sxs-lookup"><span data-stu-id="2c05d-132">This method only brings up a dialog if the application is configured to do so.</span></span> <span data-ttu-id="2c05d-133">Gdy aplikacja nie jest skonfigurowany do używania CardSpace lub inny kanał interaktywnego inicjatora, to wywołanie zwraca bez żadnych działań.</span><span class="sxs-lookup"><span data-stu-id="2c05d-133">When the application is not configured to use CardSpace or another interactive channel initializer, this call returns without any action.</span></span>  
  
 <span data-ttu-id="2c05d-134">Jawnie wywołać tę metodę należy otworzyć również jawnie kanału przed jego użyciem.</span><span class="sxs-lookup"><span data-stu-id="2c05d-134">If you call this method explicitly, you must also explicitly open the channel before using it.</span></span>  
  
 <span data-ttu-id="2c05d-135">Aby uzyskać więcej informacji, zobacz [dostęp do usług za pomocą klienta WCF](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md) i <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2c05d-135">For details, see [Accessing Services Using a WCF Client](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md) and <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDisplayInitializationUI">
      <MemberSignature Language="C#" Value="public void EndDisplayInitializationUI (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDisplayInitializationUI(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndDisplayInitializationUI (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndDisplayInitializationUI(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="2c05d-136">
            <see cref="T:System.IAsyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c05d-136">The <see cref="T:System.IAsyncResult" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c05d-137">Wywoływane, gdy wywołanie <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> zostało zakończone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c05d-137">Called when the call to <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> has finished.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownMessageReceived">
      <MemberSignature Language="C#" Value="event EventHandler&lt;System.ServiceModel.UnknownMessageReceivedEventArgs&gt; UnknownMessageReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.ServiceModel.UnknownMessageReceivedEventArgs&gt; UnknownMessageReceived" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.IClientChannel.UnknownMessageReceived" />
      <MemberSignature Language="VB.NET" Value="Event UnknownMessageReceived As EventHandler(Of UnknownMessageReceivedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::ServiceModel::UnknownMessageReceivedEventArgs ^&gt; ^ UnknownMessageReceived;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.ServiceModel.UnknownMessageReceivedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2c05d-138">To jest zdarzenie zastrzeżone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c05d-138">This is a reserved event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Via">
      <MemberSignature Language="C#" Value="public Uri Via { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Via" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.IClientChannel.Via" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Via As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Via { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2c05d-139">Pobiera identyfikator URI zawierający adres transportu, do którego są wysyłane w kanale klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c05d-139">Gets the URI that contains the transport address to which messages are sent on the client channel.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2c05d-140">
            <see cref="T:System.Uri" /> Zawierający adres transportu, do którego są wysyłane w kanale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c05d-140">The <see cref="T:System.Uri" /> that contains the transport address to which messages are sent on the channel.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c05d-141"><xref:System.ServiceModel.EndpointAddress> Służy jako docelowy ultimate i adresu fizycznego, jeśli <xref:System.ServiceModel.IClientChannel.Via%2A> nie jest określona.</span><span class="sxs-lookup"><span data-stu-id="2c05d-141">The <xref:System.ServiceModel.EndpointAddress> serves as both the ultimate destination and the physical address if a <xref:System.ServiceModel.IClientChannel.Via%2A> is not specified.</span></span> <span data-ttu-id="2c05d-142">Jeśli <xref:System.ServiceModel.IClientChannel.Via%2A> zostanie określony, to rzeczywisty adres fizyczny jest wysyłany komunikat, a za pomocą którego wiadomości musi przejść do osiągnięcia miejsca docelowego.</span><span class="sxs-lookup"><span data-stu-id="2c05d-142">If the <xref:System.ServiceModel.IClientChannel.Via%2A> is specified, then that is the actual physical address to which the message is sent and through which the message must go to arrive at its destination.</span></span> <span data-ttu-id="2c05d-143">Tę wartość można ustawić z pliku konfiguracji przy użyciu <xref:System.ServiceModel.Description.ClientViaBehavior?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2c05d-143">This value can be set from a configuration file using the <xref:System.ServiceModel.Description.ClientViaBehavior?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>