<Type Name="WSDualHttpBinding" FullName="System.ServiceModel.WSDualHttpBinding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="64c194475ff6449b6daea2f1add907287c17f3db" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WSDualHttpBinding : System.ServiceModel.Channels.Binding, System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WSDualHttpBinding extends System.ServiceModel.Channels.Binding implements class System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.WSDualHttpBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class WSDualHttpBinding&#xA;Inherits Binding&#xA;Implements IBindingRuntimePreferences" />
  <TypeSignature Language="C++ CLI" Value="public ref class WSDualHttpBinding : System::ServiceModel::Channels::Binding, System::ServiceModel::Channels::IBindingRuntimePreferences" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.Binding</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IBindingRuntimePreferences</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="ba1a8-101">Bezpieczne i interoperacyjne powiązanie jest przeznaczony do użytku z kontraktów usługi duplex, który umożliwia zarówno usług, jak i klientów do wysyłania i odbierania wiadomości.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ba1a8-101">A secure and interoperable binding that is designed for use with duplex service contracts that allows both services and clients to send and receive messages.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1a8-102"><xref:System.ServiceModel.WSDualHttpBinding> Udostępnia możliwość obsługi tego samego protokoły usług sieci Web jako <xref:System.ServiceModel.WSHttpBinding>, ale do użycia z kontraktów dupleksowych.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-102">The <xref:System.ServiceModel.WSDualHttpBinding> provides the same support for Web Service protocols as the <xref:System.ServiceModel.WSHttpBinding>, but for use with duplex contracts.</span></span> <span data-ttu-id="ba1a8-103"><xref:System.ServiceModel.WSDualHttpBinding> obsługuje zabezpieczenia protokołu SOAP i tylko wymaga niezawodnej obsługi komunikatów.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-103"><xref:System.ServiceModel.WSDualHttpBinding> only supports SOAP security and requires reliable messaging.</span></span> <span data-ttu-id="ba1a8-104">To powiązanie wymaga, że klient ma publiczny identyfikator URI, który zawiera punkt końcowy wywołania zwrotnego dla usługi.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-104">This binding requires that the client has a public URI that provides a callback endpoint for the service.</span></span> <span data-ttu-id="ba1a8-105">Jest to obsługiwane przez <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A>.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-105">This is provided by the <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A>.</span></span> <span data-ttu-id="ba1a8-106">Dwa powiązania udostępnia adres IP klienta do usługi.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-106">A dual binding exposes the IP address of the client to the service.</span></span> <span data-ttu-id="ba1a8-107">Klienta należy użyć zabezpieczeń, aby upewnić się, że go tylko łączy się z usługami go relacji zaufania.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-107">The client should use security to ensure that it only connects to services it trusts.</span></span>  
  
 <span data-ttu-id="ba1a8-108">Domyślnie <xref:System.ServiceModel.WSDualHttpBinding> generuje następujący stos elementu powiązania:</span><span class="sxs-lookup"><span data-stu-id="ba1a8-108">By default the <xref:System.ServiceModel.WSDualHttpBinding> generates the following binding element stack:</span></span>  
  
-   <xref:System.ServiceModel.Channels.TransactionFlowBindingElement>  
  
-   <xref:System.ServiceModel.Channels.ReliableSessionBindingElement>  
  
-   <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement>  
  
-   <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement>  
  
-   <xref:System.ServiceModel.Channels.OneWayBindingElement>  
  
-   <xref:System.ServiceModel.Channels.TextMessageEncodingBindingElement>  
  
-   <xref:System.ServiceModel.Channels.HttpTransportBindingElement>  
  
   
  
## Examples  
 <span data-ttu-id="ba1a8-109">Poniższy przykład przedstawia sposób określić `wsDualHttpBinding` powiązania w pliku konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-109">The following example shows how to specify the `wsDualHttpBinding` binding in a configuration file.</span></span>  
  
 [!code-csharp[S_dualhttp#134](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#134)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ba1a8-110">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.WSDualHttpBinding" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-110">Initializes a new instance of the <see cref="T:System.ServiceModel.WSDualHttpBinding" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSDualHttpBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSDualHttpBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ba1a8-111">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.WSDualHttpBinding" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-111">Initializes a new instance of the <see cref="T:System.ServiceModel.WSDualHttpBinding" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ba1a8-112">Poniższy przykład przedstawia użycie domyślnego konstruktora dla wsDualHttpBinding.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-112">The following example shows how to use the default constructor for wsDualHttpBinding.</span></span>  
  
 [!code-csharp[S_dualhttp#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#1)]
 [!code-vb[S_dualhttp#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSDualHttpBinding (System.ServiceModel.WSDualHttpSecurityMode securityMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ServiceModel.WSDualHttpSecurityMode securityMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.#ctor(System.ServiceModel.WSDualHttpSecurityMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (securityMode As WSDualHttpSecurityMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSDualHttpBinding(System::ServiceModel::WSDualHttpSecurityMode securityMode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="securityMode" Type="System.ServiceModel.WSDualHttpSecurityMode" />
      </Parameters>
      <Docs>
        <param name="securityMode">
          <span data-ttu-id="ba1a8-113">Wartość <see cref="T:System.ServiceModel.WSDualHttpSecurityMode" /> określająca typ zabezpieczeń, które jest używane z komunikatu protokołu SOAP i dla klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-113">The value of <see cref="T:System.ServiceModel.WSDualHttpSecurityMode" /> that specifies the type of security that is used with the SOAP message and for the client.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba1a8-114">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.WSDualHttpBinding" /> klasy z określonym typem zabezpieczeń używanym przez wiązanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-114">Initializes a new instance of the <see cref="T:System.ServiceModel.WSDualHttpBinding" /> class with a specified type of security used by the binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1a8-115">Niezawodna obsługa komunikatów jest wymagany przez <xref:System.ServiceModel.WSDualHttpBinding>, więc nie ma żadnych Konstruktor, który zawiera przełącznik, aby wyłączyć, ponieważ ma na <xref:System.ServiceModel.WSHttpBinding.%23ctor%28System.ServiceModel.SecurityMode%29> Konstruktor <xref:System.ServiceModel.WSHttpBinding>.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-115">Reliable messaging is required by the <xref:System.ServiceModel.WSDualHttpBinding>, so there is no constructor that provides a switch to turn it off as there is on the <xref:System.ServiceModel.WSHttpBinding.%23ctor%28System.ServiceModel.SecurityMode%29> constructor for the <xref:System.ServiceModel.WSHttpBinding>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba1a8-116">Poniższy przykład przedstawia użycie `wsDualHttpBinding` konstruktora z trybu zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-116">The following example shows how to use the `wsDualHttpBinding` constructor with a security mode.</span></span>  
  
 [!code-csharp[S_dualhttp#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#3)]
 [!code-vb[S_dualhttp#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSDualHttpBinding (string configName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string configName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (configName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSDualHttpBinding(System::String ^ configName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="configName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configName">
          <span data-ttu-id="ba1a8-117">Nazwa konfiguracji powiązania dla <see cref="T:System.ServiceModel.Configuration.WSHttpBindingElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-117">The binding configuration name for the <see cref="T:System.ServiceModel.Configuration.WSHttpBindingElement" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba1a8-118">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.WSDualHttpBinding" /> klasy z powiązaniem określonego za pomocą nazwy konfiguracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-118">Initializes a new instance of the <see cref="T:System.ServiceModel.WSDualHttpBinding" /> class with a binding specified by its configuration name.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="ba1a8-119">Element powiązania o nazwie <paramref name="configurationName" /> nie został znaleziony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-119">The binding element with the name <paramref name="configurationName" /> was not found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BypassProxyOnLocal">
      <MemberSignature Language="C#" Value="public bool BypassProxyOnLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BypassProxyOnLocal" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property BypassProxyOnLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BypassProxyOnLocal { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ba1a8-120">Pobiera lub ustawia wartość wskazującą, czy pominąć serwer proxy dla adresów lokalnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-120">Gets or sets a value that indicates whether to bypass the proxy server for local addresses.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ba1a8-121">
            <see langword="true" /> Aby pominąć serwer proxy dla adresów lokalnych; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-121">
              <see langword="true" /> to bypass the proxy server for local addresses; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ba1a8-122">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-122">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1a8-123">Zasobu internetowego jest lokalny, jeśli ma ona adresu lokalnego.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-123">An Internet resource is local if it has a local address.</span></span> <span data-ttu-id="ba1a8-124">Lokalny adres jest taki, który znajduje się na tym samym komputerze, lokalnej sieci LAN lub intranet i jest identyfikowany, składniowo, brak kropki (.) jak identyfikatory URI "http://webserver/"i"http://localhost/".</span><span class="sxs-lookup"><span data-stu-id="ba1a8-124">A local address is one that is on the same computer, the local LAN or intranet and is identified, syntactically, by the lack of a period (.) as in the URIs "http://webserver/" and "http://localhost/".</span></span>  
  
 <span data-ttu-id="ba1a8-125">Ustawienie <xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A> właściwość określa, czy punkty końcowe skonfigurowane z <xref:System.ServiceModel.WSDualHttpBinding> użycie serwera proxy podczas uzyskiwania dostępu do zasobów lokalnych.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-125">Setting the <xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A> property determines whether endpoints configured with the <xref:System.ServiceModel.WSDualHttpBinding> use the proxy server when accessing local resources.</span></span>  
  
 <span data-ttu-id="ba1a8-126">Jeśli <xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A> jest `true`, żądań lokalnych zasobów w Internecie, nie należy używać serwera proxy.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-126">If <xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A> is `true`, requests to local Internet resources do not use the proxy server.</span></span> <span data-ttu-id="ba1a8-127">Użyj nazwy hosta (a nie `localhost`) Jeśli chcesz, aby klienci przechodzić przez serwer proxy po rozmowie z usługi na tym samym komputerze, gdy ta właściwość ma wartość `true`.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-127">Use the host name (rather than `localhost`) if you want clients to go through a proxy when talking to services on the same machine when this property is set to `true`.</span></span>  
  
 <span data-ttu-id="ba1a8-128">Gdy <xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A> jest `false`, wszystkie żądania internetowe są nawiązywane przy użyciu serwera proxy.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-128">When <xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A> is `false`, all Internet requests are made through the proxy server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba1a8-129">Poniższy przykład pokazuje, jak określić powiązanie wsDualHttpBinding w pliku konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-129">The following example shows how to specify the wsDualHttpBinding binding in a configuration file.</span></span>  
  
  
  
 <span data-ttu-id="ba1a8-130">Poniższy przykład przedstawia tę właściwość, aby wskazać, że serwer proxy należy pominąć dla zasobów lokalnych.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-130">The following example sets this property to indicate that the proxy should be bypassed for local resources.</span></span>  
  
 [!code-csharp[S_dualhttp#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#6)]
 [!code-vb[S_dualhttp#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#6)]  
  
 <span data-ttu-id="ba1a8-131">Wartość tej właściwości można ustawić w taki sposób, w pliku konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-131">The value of this property can also be set in the configuration file.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientBaseAddress">
      <MemberSignature Language="C#" Value="public Uri ClientBaseAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ClientBaseAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.ClientBaseAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientBaseAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ClientBaseAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ba1a8-132">Pobiera lub ustawia adres podstawowy klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-132">Gets or sets the base address of the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ba1a8-133">
            <see cref="T:System.Uri" /> Czyli adres podstawowy klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-133">The <see cref="T:System.Uri" /> that is the base address of the client.</span>
          </span>
          <span data-ttu-id="ba1a8-134">Wartość domyślna to <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-134">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1a8-135">Ten publiczny identyfikator URI dla klienta zawiera punkt końcowy wywołania zwrotnego wymaganych przez usługę do kontaktowania się z klienta w przypadku kontraktu dwukierunkowego.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-135">This public URI for the client provides the callback endpoint required for the service to contact the client when the contract is duplex.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba1a8-136">Poniższy przykład pokazuje, jak określić powiązanie wsDualHttpBinding w pliku konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-136">The following example shows how to specify the wsDualHttpBinding binding in a configuration file.</span></span>  
  
 [!code-csharp[S_dualhttp#8](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#8)]
 [!code-vb[S_dualhttp#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBindingElements">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElementCollection CreateBindingElements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElementCollection CreateBindingElements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.CreateBindingElements" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateBindingElements () As BindingElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElementCollection ^ CreateBindingElements();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElementCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ba1a8-137">Zwraca uporządkowaną kolekcję elementów wiązania zawartych w bieżącym wiązaniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-137">Returns an ordered collection of binding elements contained in the current binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba1a8-138">A <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> zawierającą <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" /> i, ponieważ wymaga niezawodnej sesji <see cref="T:System.ServiceModel.WSDualHttpBinding" />, <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-138">A <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that includes a <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" /> and, because a reliable session is required for the <see cref="T:System.ServiceModel.WSDualHttpBinding" />, a <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ba1a8-139">Poniższy przykład pokazuje, jak pobrać uporządkowaną kolekcję elementów wiązania zawartych w bieżącym wiązaniu.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-139">The following example shows how to get an ordered collection of binding elements contained in the current binding.</span></span>  
  
 [!code-csharp[S_dualhttp#20](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#20)]
 [!code-vb[S_dualhttp#20](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvelopeVersion">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EnvelopeVersion EnvelopeVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EnvelopeVersion EnvelopeVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.EnvelopeVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnvelopeVersion As EnvelopeVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EnvelopeVersion ^ EnvelopeVersion { System::ServiceModel::EnvelopeVersion ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EnvelopeVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ba1a8-140">Pobiera wersję protokołu SOAP używaną dla komunikatów przetwarzanych przez to powiązanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-140">Gets the version of SOAP that is used for messages that are processed by this binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ba1a8-141">Wartość <see cref="T:System.ServiceModel.EnvelopeVersion" /> używana przez to powiązanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-141">The value of the <see cref="T:System.ServiceModel.EnvelopeVersion" /> that is used with this binding.</span>
          </span>
          <span data-ttu-id="ba1a8-142">Wartość musi być zawsze SOAP 1.2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-142">The value must always be SOAP 1.2.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ba1a8-143">Poniższy przykład pokazuje, jak pobrać wersję protokołu SOAP używaną dla komunikatów przetwarzanych przez to powiązanie.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-143">The following example shows how to get the version of SOAP that is used for messages that are processed by this binding.</span></span>  
  
 [!code-csharp[S_dualhttp#21](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#21)]
 [!code-vb[S_dualhttp#21](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostNameComparisonMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.HostNameComparisonMode HostNameComparisonMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.HostNameComparisonMode HostNameComparisonMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.HostNameComparisonMode" />
      <MemberSignature Language="VB.NET" Value="Public Property HostNameComparisonMode As HostNameComparisonMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::HostNameComparisonMode HostNameComparisonMode { System::ServiceModel::HostNameComparisonMode get(); void set(System::ServiceModel::HostNameComparisonMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.HostNameComparisonMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ba1a8-144">Pobiera lub ustawia wartość wskazującą, czy nazwa hosta jest używana w celu dotarcia do usługi podczas dopasowywania identyfikatora URI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-144">Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ba1a8-145">
            <see cref="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode" /> Wartość, która wskazuje, czy nazwa hosta jest używana w celu dotarcia do usługi podczas dopasowywania identyfikatora URI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-145">The <see cref="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode" /> value that indicates whether the hostname is used to reach the service when matching on the URI.</span>
          </span>
          <span data-ttu-id="ba1a8-146">Wartość domyślna to <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />, który ignoruje nazwy hosta w dopasowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-146">The default value is <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />, which ignores the hostname in the match.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ba1a8-147">Poniższy przykład pokazuje, jak określić powiązanie wsDualHttpBinding w pliku konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-147">The following example shows how to specify the wsDualHttpBinding binding in a configuration file.</span></span>  
  
 [!code-csharp[S_dualhttp#9](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#9)]
 [!code-vb[S_dualhttp#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBufferPoolSize">
      <MemberSignature Language="C#" Value="public long MaxBufferPoolSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxBufferPoolSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBufferPoolSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxBufferPoolSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(524288)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ba1a8-148">Pobiera lub ustawia maksymalną ilość pamięci w bajtach, które mogą być przydzielone dla menedżera buforów komunikatów, który odbiera komunikaty w punkty końcowe skonfigurowane dla tego wiązania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-148">Gets or sets the maximum amount of memory, in bytes, that can be allocated for the manager of message buffers that receive messages at the endpoints configured with this binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ba1a8-149">Maksymalny rozmiar w bajtach dla puli buforów używanej przez punkt końcowy skonfigurowany dla tego wiązania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-149">The maximum size, in bytes, for the pool of buffers used by an endpoint configured with this binding.</span>
          </span>
          <span data-ttu-id="ba1a8-150">Wartość domyślna to 524288 bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-150">The default value is 524288 bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1a8-151"><xref:System.ServiceModel.Channels.BufferManager> Minimalizację kosztów bufory puli bufora.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-151">The <xref:System.ServiceModel.Channels.BufferManager> minimizes the cost of using buffers with a buffer pool.</span></span> <span data-ttu-id="ba1a8-152">Bufory są wymagane do przetwarzania komunikatów przez usługę, po znalezieniu poza kanału.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-152">Buffers are required to process messages by the service when they come out of the channel.</span></span> <span data-ttu-id="ba1a8-153">Jeśli nie jest wystarczająca ilość pamięci w puli buforów do przetworzenia obciążenia komunikat <xref:System.ServiceModel.Channels.BufferManager> przydzielić pamięć sterty CLR, co zwiększa obciążenie kolekcji pamięci.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-153">If there is not sufficient memory in the buffer pool to process the message load, the <xref:System.ServiceModel.Channels.BufferManager> must allocate additional memory from the CLR heap, which increases the garbage collection overhead.</span></span> <span data-ttu-id="ba1a8-154">Rozbudowana alokacji sterty pamięci CLR jest wskazanie, że rozmiar puli buforów jest za mały i że można poprawić wydajność z alokacją większych zwiększając <xref:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize%2A> limit.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-154">Extensive allocation from the CLR garbage heap is an indication that the buffer pool size is too small and that performance can be improved with a larger allocation by increasing the <xref:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize%2A> limit.</span></span>  
  
 <span data-ttu-id="ba1a8-155">Ograniczenia rozmiaru buforu określonego w tym miejscu są przeznaczone dla optymalizacji wydajności wymiany wiadomości.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-155">The limitations on buffer size set here are for optimizing the performance of message exchanges.</span></span> <span data-ttu-id="ba1a8-156">Jeśli wiadomość przekracza wartość maksymalną dla buforu, nie zostanie usunięte.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-156">If a message exceeds the maximum value set for the buffer, it is not dropped.</span></span> <span data-ttu-id="ba1a8-157">Zamiast tego zażąda więcej pamięci sterty CLR i wiąże się z tym więcej pamięci niż narzut bufory.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-157">Instead, more memory is requested from the CLR heap and this incurs more garbage collection overhead than using the buffers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba1a8-158">Poniższy przykład przedstawia sposób ustawiania `MaxBufferPoolSize`.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-158">The following example shows how to set the `MaxBufferPoolSize`.</span></span>  
  
 [!code-csharp[S_dualhttp#10](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#10)]
 [!code-vb[S_dualhttp#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxReceivedMessageSize">
      <MemberSignature Language="C#" Value="public long MaxReceivedMessageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxReceivedMessageSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxReceivedMessageSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxReceivedMessageSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(65536)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ba1a8-159">Pobiera lub ustawia maksymalny rozmiar w bajtach komunikat, który może zostać odebrany w kanale skonfigurowane dla tego wiązania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-159">Gets or sets the maximum size, in bytes, for a message that can be received on a channel configured with this binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ba1a8-160">Maksymalny rozmiar w bajtach dla komunikatu przetwarzanego przez wiązanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-160">The maximum size, in bytes, for a message that is processed by the binding.</span>
          </span>
          <span data-ttu-id="ba1a8-161">Wartość domyślna to 65 536 bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-161">The default value is 65,536 bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1a8-162">Rozmiar wiadomości, które mogą być odbierane przesyłania usług za pomocą <xref:System.ServiceModel.WSDualHttpBinding> jest ograniczone przez ilość pamięci przydzielonej dla każdego komunikatu.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-162">The size of the messages that can be received on the wire by services using the <xref:System.ServiceModel.WSDualHttpBinding> is bounded by the amount of memory allocated for each message.</span></span> <span data-ttu-id="ba1a8-163">To powiązana rozmiar wiadomości ma na celu ograniczenia narażenia na ataki DOS stylu.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-163">This bound on message size is intended to limit exposure to DOS-style attacks.</span></span>  
  
 <span data-ttu-id="ba1a8-164">Należy pamiętać, że ustawienia <xref:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize%2A> i <xref:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize%2A> są behawioralnej ustawienia lokalne.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-164">Note that the settings for <xref:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize%2A> and <xref:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize%2A> are local behavioral settings.</span></span> <span data-ttu-id="ba1a8-165">Oznacza to, że nie są przekazywane do innych punktów końcowych w metadanych.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-165">This means that they are not transmitted to other endpoints in metadata.</span></span> <span data-ttu-id="ba1a8-166">Jeśli użytkownik generuje serwer proxy do usługi za pomocą maksymalny rozmiar komunikatu o wartości 2GB z metadanych, serwer proxy nadal ma wartość domyślną 64 KB.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-166">If you generate a proxy to a service with a maximum message size of 2GB from metadata, the proxy still has a default value 64K.</span></span> <span data-ttu-id="ba1a8-167">Spowoduje to pozostawienie kontrolę nad granicami odpowiednie dla komunikatu i rozmiar buforu komunikatu w zakresie grupy lokalnych administratorów.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-167">This leaves control of the appropriate bounds for message and message buffer size in the scope of local administrators.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba1a8-168">Poniższy przykład przedstawia sposób uzyskać <xref:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-168">The following example shows how to get the <xref:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize%2A> property.</span></span>  
  
 [!code-csharp[S_dualhttp#22](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#22)]
 [!code-vb[S_dualhttp#22](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ba1a8-169">Wartość jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-169">The value is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MessageEncoding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.WSMessageEncoding MessageEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.WSMessageEncoding MessageEncoding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.MessageEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageEncoding As WSMessageEncoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::WSMessageEncoding MessageEncoding { System::ServiceModel::WSMessageEncoding get(); void set(System::ServiceModel::WSMessageEncoding value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.WSMessageEncoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ba1a8-170">Pobiera lub ustawia, czy MTOM lub Text/XML jest używany do kodowania protokołu SOAP wiadomości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-170">Gets or sets whether MTOM or Text/XML is used to encode SOAP messages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ba1a8-171">Wartość <see cref="T:System.ServiceModel.WSMessageEncoding" /> wskazujące, że MTOM lub Text/XML jest używany do kodowania wiadomości SOAP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-171">The value of <see cref="T:System.ServiceModel.WSMessageEncoding" /> that indicates that MTOM or Text/XML is used to encode SOAP messages.</span>
          </span>
          <span data-ttu-id="ba1a8-172">Wartość domyślna to <see cref="F:System.ServiceModel.WSMessageEncoding.Text" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-172">The default value is <see cref="F:System.ServiceModel.WSMessageEncoding.Text" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ba1a8-173">Poniższy przykład przedstawia sposób ustawiania `WSMessageEncoding` właściwości MTOM.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-173">The following example shows how to set the `WSMessageEncoding` property to MTOM.</span></span>  
  
 [!code-csharp[S_dualhttp#11](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#11)]
 [!code-vb[S_dualhttp#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProxyAddress">
      <MemberSignature Language="C#" Value="public Uri ProxyAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ProxyAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.ProxyAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property ProxyAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ProxyAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ba1a8-174">Pobiera lub ustawia adres URI serwera proxy HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-174">Gets or sets the URI address of the HTTP proxy.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ba1a8-175">A <see cref="T:System.Uri" /> służy jako adres serwera proxy HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-175">A <see cref="T:System.Uri" /> that serves as the address of the HTTP proxy.</span>
          </span>
          <span data-ttu-id="ba1a8-176">Wartość domyślna to <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-176">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1a8-177">Jeśli <xref:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy%2A> ustawiono `true`, wartość <xref:System.ServiceModel.WSDualHttpBinding.ProxyAddress%2A> jest ignorowana.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-177">If the <xref:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy%2A> is set to `true`, the value of the <xref:System.ServiceModel.WSDualHttpBinding.ProxyAddress%2A> is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba1a8-178">Poniższy przykład przedstawia sposób określenia adresu serwera proxy HTTP.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-178">The following example shows how to specify the address of the HTTP proxy.</span></span>  
  
 [!code-csharp[S_dualhttp#12](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#12)]
 [!code-vb[S_dualhttp#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReaderQuotas">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReaderQuotas ReaderQuotas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDictionaryReaderQuotas ReaderQuotas" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Property ReaderQuotas As XmlDictionaryReaderQuotas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlDictionaryReaderQuotas ^ ReaderQuotas { System::Xml::XmlDictionaryReaderQuotas ^ get(); void set(System::Xml::XmlDictionaryReaderQuotas ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReaderQuotas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ba1a8-179">Pobiera lub ustawia ograniczenia złożoności wiadomości SOAP, które mogą być przetwarzane przez punkty końcowe skonfigurowane dla tego wiązania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-179">Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ba1a8-180">
            <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> , Który określa ograniczenia złożoności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-180">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1a8-181">Ograniczenia złożoności obejmują elementy, takie jak element maksymalnej głębokości i maksymalnej długości zawartości ciągu w komunikacie.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-181">The complexity constraints include items such as a maximum element depth and a maximum length for string content within the message.</span></span> <span data-ttu-id="ba1a8-182">Ograniczenia ochrony przed klasą "odmowa usługi" (DOS), które próbują użyć złożoności wiadomości wiązać punkt końcowy przetwarzający zasobów.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-182">The constraints protect against a class of denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba1a8-183">Poniższy przykład przedstawia sposób uzyskać `ReaderQuotas` właściwości.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-183">The following example shows how to get the `ReaderQuotas` property.</span></span>  
  
 [!code-csharp[S_dualhttp#13](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#13)]
 [!code-vb[S_dualhttp#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReliableSession">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ReliableSession ReliableSession { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ReliableSession ReliableSession" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.ReliableSession" />
      <MemberSignature Language="VB.NET" Value="Public Property ReliableSession As ReliableSession" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ReliableSession ^ ReliableSession { System::ServiceModel::ReliableSession ^ get(); void set(System::ServiceModel::ReliableSession ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReliableSession</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ba1a8-184">Pobiera obiekt, który umożliwia wygodne dostęp do właściwości elementu powiązania niezawodnej sesji, które są dostępne w przypadku korzystania z jednego powiązania dostarczane przez system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-184">Gets an object that provides convenient access to the properties of a reliable session binding element that are available when using one of the system-provided bindings.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ba1a8-185">
            <see cref="T:System.ServiceModel.ReliableSession" /> Udostępniająca wygodny dostęp do właściwości elementu powiązania niezawodnej sesji, które są dostępne w przypadku korzystania z jednego powiązania dostarczane przez system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-185">The <see cref="T:System.ServiceModel.ReliableSession" /> that provides convenient access to the properties of a reliable session binding element that are available when using one of the system-provided bindings.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1a8-186">Niezawodna sesja jest wymagana dla usługi skonfigurowano <xref:System.ServiceModel.WSDualHttpBinding>.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-186">The reliable session is required for service configured with a <xref:System.ServiceModel.WSDualHttpBinding>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba1a8-187">Poniższy przykład przedstawia sposób uzyskać <xref:System.ServiceModel.WSDualHttpBinding.ReliableSession%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-187">The following example shows how to get the <xref:System.ServiceModel.WSDualHttpBinding.ReliableSession%2A> property.</span></span>  
  
 [!code-csharp[S_dualhttp#14](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#14)]
 [!code-vb[S_dualhttp#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public override string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.Scheme" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Scheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Scheme { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ba1a8-188">Pobiera schemat transportu identyfikatora URI dla kanałów i odbiorników skonfigurowanych dla tego wiązania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-188">Gets the URI transport scheme for the channels and listeners that are configured with this binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ba1a8-189">Schemat transportu: "http".</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-189">The transport scheme: "http".</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ba1a8-190">Poniższy przykład pokazuje, jak określić powiązanie wsDualHttpBinding w pliku konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-190">The following example shows how to specify the wsDualHttpBinding binding in a configuration file.</span></span>  
  
 [!code-csharp[S_dualhttp#15](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#15)]
 [!code-vb[S_dualhttp#15](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Security">
      <MemberSignature Language="C#" Value="public System.ServiceModel.WSDualHttpSecurity Security { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.WSDualHttpSecurity Security" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.Security" />
      <MemberSignature Language="VB.NET" Value="Public Property Security As WSDualHttpSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::WSDualHttpSecurity ^ Security { System::ServiceModel::WSDualHttpSecurity ^ get(); void set(System::ServiceModel::WSDualHttpSecurity ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.WSDualHttpSecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ba1a8-191">Pobiera obiekt, który określa ustawienia zabezpieczeń używane dla tego wiązania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-191">Gets an object that specifies the security settings used with this binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ba1a8-192">
            <see cref="T:System.ServiceModel.WSDualHttpSecurity" /> , Który określa ustawienia zabezpieczeń używane dla wiązania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-192">The <see cref="T:System.ServiceModel.WSDualHttpSecurity" /> that specifies security settings used with the binding.</span>
          </span>
          <span data-ttu-id="ba1a8-193">Wartość domyślna <see cref="T:System.ServiceModel.WSDualHttpSecurityMode" /> jest <see cref="F:System.ServiceModel.WSDualHttpSecurityMode.Message" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-193">The default value of <see cref="T:System.ServiceModel.WSDualHttpSecurityMode" /> is <see cref="F:System.ServiceModel.WSDualHttpSecurityMode.Message" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1a8-194">Dwa powiązania udostępnia adres IP klienta do usługi.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-194">A dual binding exposes the IP address of the client to the service.</span></span> <span data-ttu-id="ba1a8-195">Klienta należy użyć zabezpieczeń, aby upewnić się, że go tylko łączy się z usługami go relacji zaufania.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-195">The client should use security to ensure that it only connects to services it trusts.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba1a8-196">Poniższy przykład pokazuje, jak można pobrać typu zabezpieczeń powiązania.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-196">The following example shows how to get the type of security of the binding.</span></span>  
  
 [!code-csharp[S_dualhttp#16](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#16)]
 [!code-vb[S_dualhttp#16](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeReaderQuotas">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeReaderQuotas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeReaderQuotas() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeReaderQuotas () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeReaderQuotas();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ba1a8-197">Zwraca wartość wskazującą, czy <see cref="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas" /> właściwości została zmieniona z jej wartości domyślnej i powinny być serializowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-197">Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas" /> property has changed from its default value and should be serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba1a8-198">
            <see langword="true" /> Jeśli <see cref="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas" /> wartość właściwości powinny być serializowane; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-198">
              <see langword="true" /> if the <see cref="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeReliableSession">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeReliableSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeReliableSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeReliableSession" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeReliableSession () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeReliableSession();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ba1a8-199">Zwraca wartość wskazującą, czy <see cref="P:System.ServiceModel.WSDualHttpBinding.ReliableSession" /> właściwości została zmieniona z jej wartości domyślnej i powinny być serializowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-199">Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSDualHttpBinding.ReliableSession" /> property has changed from its default value and should be serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba1a8-200">
            <see langword="true" /> Jeśli <see cref="P:System.ServiceModel.WSDualHttpBinding.ReliableSession" /> wartość właściwości powinny być serializowane; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-200">
              <see langword="true" /> if the <see cref="P:System.ServiceModel.WSDualHttpBinding.ReliableSession" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSecurity">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeSecurity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeSecurity () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeSecurity();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ba1a8-201">Zwraca wartość wskazującą, czy <see cref="P:System.ServiceModel.WSDualHttpBinding.Security" /> właściwości została zmieniona z jej wartości domyślnej i powinny być serializowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-201">Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSDualHttpBinding.Security" /> property has changed from its default value and should be serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba1a8-202">
            <see langword="true" /> Jeśli <see cref="P:System.ServiceModel.WSDualHttpBinding.Security" /> wartość właściwości powinny być serializowane; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-202">
              <see langword="true" /> if the <see cref="P:System.ServiceModel.WSDualHttpBinding.Security" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTextEncoding">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTextEncoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTextEncoding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeTextEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTextEncoding () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTextEncoding();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ba1a8-203">Zwraca wartość wskazującą, czy <see cref="P:System.ServiceModel.WSDualHttpBinding.TextEncoding" /> właściwości została zmieniona z jej wartości domyślnej i powinny być serializowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-203">Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSDualHttpBinding.TextEncoding" /> property has changed from its default value and should be serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba1a8-204">
            <see langword="true" /> Jeśli <see cref="P:System.ServiceModel.WSDualHttpBinding.TextEncoding" /> wartość właściwości powinny być serializowane; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-204">
              <see langword="true" /> if the <see cref="P:System.ServiceModel.WSDualHttpBinding.TextEncoding" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously">
      <MemberSignature Language="C#" Value="bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ReceiveSynchronously As Boolean Implements IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="C++ CLI" Value="property bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ba1a8-205">Pobiera wartość wskazującą, czy żądania przychodzące są obsługiwane synchronicznie lub asynchronicznie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-205">Gets a value that indicates whether incoming requests are handled synchronously or asynchronously.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ba1a8-206">
            <see langword="true" /> Jeśli żądania są obsługiwane synchronicznie; <see langword="false" /> Jeśli asynchronicznie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-206">
              <see langword="true" /> if requests are handled synchronously; <see langword="false" /> if handled asynchronously.</span>
          </span>
          <span data-ttu-id="ba1a8-207">Wartość zwracana jest zawsze jest <see langword="false" />, do obsługi żądań asynchronicznie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-207">The value returned is always is <see langword="false" />, to handle requests asynchronously.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1a8-208">Tę wartość można zmienić za pomocą zachowanie modelu usługi.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-208">This value can be changed by using a service model behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba1a8-209">W poniższych przykładach pokazano, jak uzyskać <xref:System.ServiceModel.WSDualHttpBinding.System%23ServiceModel%23Channels%23IBindingRuntimePreferences%23ReceiveSynchronously%2A> wartość.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-209">The following examples show how to get the <xref:System.ServiceModel.WSDualHttpBinding.System%23ServiceModel%23Channels%23IBindingRuntimePreferences%23ReceiveSynchronously%2A> value.</span></span>  
  
 [!code-csharp[S_dualhttp#23](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#23)]
 [!code-vb[S_dualhttp#23](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#23)]  
  
 [!code-csharp[S_dualhttp#24](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#24)]
 [!code-vb[S_dualhttp#24](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding TextEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding TextEncoding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.TextEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property TextEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ TextEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.EncodingConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ba1a8-210">Pobiera lub ustawia kodowanie znaków, które służy do treści wiadomości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-210">Gets or sets the character encoding that is used for the message text.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ba1a8-211">
            <see cref="T:System.Text.Encoding" /> Wskazujące kodowania znaków, który jest używany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-211">The <see cref="T:System.Text.Encoding" /> that indicates the character encoding that is used.</span>
          </span>
          <span data-ttu-id="ba1a8-212">Wartość domyślna to <see cref="T:System.Text.UTF8Encoding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-212">The default is <see cref="T:System.Text.UTF8Encoding" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ba1a8-213">Poniższy przykład pokazuje, jak uzyskać kodowanie znaków, służący do treści wiadomości.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-213">The following example shows how to get the character encoding that is used for the message text.</span></span>  
  
 [!code-csharp[S_dualhttp#17](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#17)]
 [!code-vb[S_dualhttp#17](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionFlow">
      <MemberSignature Language="C#" Value="public bool TransactionFlow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactionFlow" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.TransactionFlow" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionFlow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactionFlow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ba1a8-214">Pobiera lub ustawia wartość wskazującą, czy to powiązanie powinny obsługiwać przechodzenia WS-transakcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-214">Gets or sets a value that indicates whether this binding should support flowing WS-Transactions.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ba1a8-215">
            <see langword="true" /> Jeśli przepływu transakcji jest obsługiwany; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-215">
              <see langword="true" /> if the flowing of transactions is supported; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ba1a8-216">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-216">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba1a8-217">Wartość domyślna Określa, że klienci nie przepływu transakcji i usługi odrzucić wiadomości z nagłówek komunikatu przesłanej transakcji.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-217">The default value specifies that clients do not flow transactions and services reject messages with a flowed transaction message header.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba1a8-218">Poniższy przykład przedstawia sposób ustawiania `TransactionFlow` właściwości do obsługi przepływu transakcji.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-218">The following example shows how to set the `TransactionFlow` property to support the flowing of transactions.</span></span>  
  
 [!code-csharp[S_dualhttp#18](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#18)]
 [!code-vb[S_dualhttp#18](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultWebProxy">
      <MemberSignature Language="C#" Value="public bool UseDefaultWebProxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultWebProxy" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultWebProxy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultWebProxy { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ba1a8-219">Pobiera lub ustawia wartość wskazującą, czy ma być używane automatycznie skonfigurowany serwer proxy HTTP systemu, jeśli jest dostępna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-219">Gets or sets a value that indicates whether the auto-configured HTTP proxy of the system should be used, if available.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ba1a8-220">
            <see langword="true" /> Jeśli serwer proxy HTTP automatycznie skonfigurowane systemu powinno być używane, jeśli jest dostępna; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-220">
              <see langword="true" /> if the auto-configured HTTP proxy of the system should be used, if available; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ba1a8-221">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba1a8-221">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ba1a8-222">Poniższy przykład przedstawia sposób ustawiania `UseDefaultWebProxy` właściwości, aby użyć serwera proxy protokołu HTTP skonfigurowany automatycznie systemu.</span><span class="sxs-lookup"><span data-stu-id="ba1a8-222">The following example shows how to set the `UseDefaultWebProxy` property to use the auto-configured HTTP proxy of the system.</span></span>  
  
 [!code-csharp[S_dualhttp#19](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#19)]
 [!code-vb[S_dualhttp#19](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>