<Type Name="ServiceHost" FullName="System.ServiceModel.ServiceHost">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b9bd9e574a16f37d9722705874671597e3cb60aa" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36410444" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServiceHost : System.ServiceModel.ServiceHostBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceHost extends System.ServiceModel.ServiceHostBase" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ServiceHost" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceHost&#xA;Inherits ServiceHostBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceHost : System::ServiceModel::ServiceHostBase" />
  <TypeSignature Language="F#" Value="type ServiceHost = class&#xA;    inherit ServiceHostBase" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.ServiceHostBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="be003-101">Zapewnia hosta usługi.</span>
      <span class="sxs-lookup">
        <span data-stu-id="be003-101">Provides a host for services.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be003-102">Implementuje hosta używany przez model usługi Windows Communication Foundation (WCF), modelu programowania.</span><span class="sxs-lookup"><span data-stu-id="be003-102">Implements the host used by the Windows Communication Foundation (WCF) service model programming model.</span></span>  
  
 <span data-ttu-id="be003-103">Użyj <xref:System.ServiceModel.ServiceHost> klasy do konfiguracji i ekspozycji usługi do użycia przez aplikacje klienckie, gdy nie używasz usług Internet Information Services (IIS) lub usługi aktywacji systemu Windows (WAS) do udostępnienia usługi.</span><span class="sxs-lookup"><span data-stu-id="be003-103">Use the <xref:System.ServiceModel.ServiceHost> class to configure and expose a service for use by client applications when you are not using Internet Information Services (IIS) or Windows Activation Services (WAS) to expose a service.</span></span> <span data-ttu-id="be003-104">Zarówno usług IIS i WAS współdziałają z <xref:System.ServiceModel.ServiceHost> obiektu w Twoim imieniu.</span><span class="sxs-lookup"><span data-stu-id="be003-104">Both IIS and WAS interact with a <xref:System.ServiceModel.ServiceHost> object on your behalf.</span></span>  
  
 <span data-ttu-id="be003-105">Do udostępnienia usługi do użycia przez obiekty wywołujące, WCF wymaga opisu usługi pełną (reprezentowane przez <xref:System.ServiceModel.Description.ServiceDescription> klasy).</span><span class="sxs-lookup"><span data-stu-id="be003-105">To expose a service for use by callers, WCF requires a complete service description (represented by the <xref:System.ServiceModel.Description.ServiceDescription> class).</span></span> <span data-ttu-id="be003-106"><xref:System.ServiceModel.ServiceHost> Tworzy klasy <xref:System.ServiceModel.Description.ServiceDescription> z informacje dotyczące typu i konfiguracji usługi, a następnie używa opis, aby utworzyć <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> obiektów dla każdego punktu końcowego w opisie.</span><span class="sxs-lookup"><span data-stu-id="be003-106">The <xref:System.ServiceModel.ServiceHost> class creates a <xref:System.ServiceModel.Description.ServiceDescription> from the service type and configuration information and then uses that description to create <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects for each endpoint in the description.</span></span>  
  
 <span data-ttu-id="be003-107">Użyj <xref:System.ServiceModel.ServiceHost> obiekt, aby załadować usługi, skonfiguruj punkty końcowe, Zastosuj ustawienia zabezpieczeń i uruchomić odbiorników do obsługi żądań przychodzących.</span><span class="sxs-lookup"><span data-stu-id="be003-107">Use a <xref:System.ServiceModel.ServiceHost> object to load a service, configure endpoints, apply security settings, and start listeners to handle incoming requests.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_SelfHost#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#1)]
 [!code-vb[S_SelfHost#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_selfhost/vb/wholeenchilada.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="be003-108">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.ServiceHost" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-108">Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceHost" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ServiceHost ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ServiceHost();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="be003-109">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.ServiceHost" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-109">Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceHost" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be003-110">Istnieją dwa konstruktory użyty do utworzenia wystąpienia <xref:System.ServiceModel.ServiceHost> klasy.</span><span class="sxs-lookup"><span data-stu-id="be003-110">There are two constructors used to create an instance of the <xref:System.ServiceModel.ServiceHost> class.</span></span> <span data-ttu-id="be003-111">Użyj <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Type%2CSystem.Uri%5B%5D%29> konstruktora, który przyjmuje jako parametr wejściowy, w większości przypadków typu usługi.</span><span class="sxs-lookup"><span data-stu-id="be003-111">Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Type%2CSystem.Uri%5B%5D%29> constructor which takes the service type as an input parameter, most of the time.</span></span> <span data-ttu-id="be003-112">Host umożliwia to tworzenie nowych usług zgodnie z potrzebami.</span><span class="sxs-lookup"><span data-stu-id="be003-112">The host can use this to create new services as needed.</span></span> <span data-ttu-id="be003-113">Użyj <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> Konstruktor zamiast niego tylko wtedy, gdy chcesz używać określonego pojedyncze wystąpienie usługi host usługi.</span><span class="sxs-lookup"><span data-stu-id="be003-113">Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> constructor instead only when you want the service host to use a specific singleton instance of the service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceHost (object singletonInstance, params Uri[] baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object singletonInstance, class System.Uri[] baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (singletonInstance As Object, ParamArray baseAddresses As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceHost(System::Object ^ singletonInstance, ... cli::array &lt;Uri ^&gt; ^ baseAddresses);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.ServiceHost : obj * Uri[] -&gt; System.ServiceModel.ServiceHost" Usage="new System.ServiceModel.ServiceHost (singletonInstance, baseAddresses)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="singletonInstance" Type="System.Object" />
        <Parameter Name="baseAddresses" Type="System.Uri[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="singletonInstance">
          <span data-ttu-id="be003-114">Wystąpienie usługi hostowanej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-114">The instance of the hosted service.</span>
          </span>
        </param>
        <param name="baseAddresses">
          <span data-ttu-id="be003-115">
            <see cref="T:System.Array" /> Typu <see cref="T:System.Uri" /> zawierający adres podstawowy usługi hostowanej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-115">An <see cref="T:System.Array" /> of type <see cref="T:System.Uri" /> that contains the base addresses for the hosted service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be003-116">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.ServiceHost" /> klasy z wystąpienia usługi i jego adres podstawowy określony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-116">Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceHost" /> class with the instance of the service and its base addresses specified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be003-117">Użyj tego konstruktora jako alternatywę do wdrażania niestandardowego <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=nameWithType> gdy chcesz podać wystąpienie określonego obiektu do użytku przez usługi singleton.</span><span class="sxs-lookup"><span data-stu-id="be003-117">Use this constructor as an alternative to implementing a custom <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=nameWithType> when you want to provide a specific object instance for use by a singleton service.</span></span> <span data-ttu-id="be003-118">Można użyć tego przeciążenia z typem implementacji usługi jest trudne do skonstruowania (na przykład, jeśli nie implementuje domyślnego konstruktora publicznego, który nie ma parametrów).</span><span class="sxs-lookup"><span data-stu-id="be003-118">You may want to use this overload when your service implementation type is difficult to construct (for example, if it does not implement a default public constructor that has no parameters).</span></span>  
  
 <span data-ttu-id="be003-119">Należy pamiętać, że jeśli obiekt został dostarczony do tego przeciążenia, niektóre funkcje związane z do systemu Windows Communication Foundation (WCF) wystąpień zachowanie działają inaczej.</span><span class="sxs-lookup"><span data-stu-id="be003-119">Note that when an object is provided to this overload, some features related to the Windows Communication Foundation (WCF) instancing behavior work differently.</span></span> <span data-ttu-id="be003-120">Na przykład wywołanie elementu <xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A?displayProperty=nameWithType> nie obowiązują, gdy wystąpienie dobrze znanego obiektu jest realizowane przy użyciu tego przeciążenia konstruktora.</span><span class="sxs-lookup"><span data-stu-id="be003-120">For example, calling <xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A?displayProperty=nameWithType> have no effect when a well-known object instance is provided using this constructor overload.</span></span> <span data-ttu-id="be003-121">Podobnie inny mechanizm wersji wystąpienia jest ignorowana.</span><span class="sxs-lookup"><span data-stu-id="be003-121">Similarly, any other instance release mechanism is ignored.</span></span> <span data-ttu-id="be003-122"><xref:System.ServiceModel.ServiceHost> Zawsze zachowuje się tak, jakby <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A?displayProperty=nameWithType> ma ustawioną wartość właściwości <xref:System.ServiceModel.ReleaseInstanceMode.None?displayProperty=nameWithType> dla wszystkich operacji.</span><span class="sxs-lookup"><span data-stu-id="be003-122">The <xref:System.ServiceModel.ServiceHost> always behaves as if the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A?displayProperty=nameWithType> property is set to <xref:System.ServiceModel.ReleaseInstanceMode.None?displayProperty=nameWithType> for all operations.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEServiceHost2#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicehost2/cs/service.cs#1)]
 [!code-vb[S_UEServiceHost2#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueservicehost2/vb/service.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be003-123">
            <paramref name="singletonInstance" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-123">
              <paramref name="singletonInstance" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceHost (Type serviceType, params Uri[] baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type serviceType, class System.Uri[] baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceType As Type, ParamArray baseAddresses As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceHost(Type ^ serviceType, ... cli::array &lt;Uri ^&gt; ^ baseAddresses);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.ServiceHost : Type * Uri[] -&gt; System.ServiceModel.ServiceHost" Usage="new System.ServiceModel.ServiceHost (serviceType, baseAddresses)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="baseAddresses" Type="System.Uri[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="be003-124">Typ usługi hostowanej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-124">The type of hosted service.</span>
          </span>
        </param>
        <param name="baseAddresses">
          <span data-ttu-id="be003-125">Tablica typu <see cref="T:System.Uri" /> zawierający adres podstawowy usługi hostowanej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-125">An array of type <see cref="T:System.Uri" /> that contains the base addresses for the hosted service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be003-126">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.ServiceHost" /> klasy z typem usługi i jego adres podstawowy określony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-126">Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceHost" /> class with the type of service and its base addresses specified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be003-127">Użyj tego konstruktora, gdy typ usługi, możesz utworzyć nowe wystąpienia klasy ją w razie potrzeby, nawet jeśli wymagane jest pojedyncze wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="be003-127">Use this constructor when you have the service type and you can create new instances of it when needed, even when you need a singleton instance.</span></span> <span data-ttu-id="be003-128">Użyj <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> Konstruktor zamiast niego tylko wtedy, gdy chcesz używać określonego pojedyncze wystąpienie usługi host usługi.</span><span class="sxs-lookup"><span data-stu-id="be003-128">Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> constructor instead only when you want the service host to use a specific singleton instance of the service.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be003-129">W tym przykładzie przedstawiono metodę zastosowania <xref:System.ServiceModel.ServiceHost> klasy do obsługi usługi Windows Communication Foundation:</span><span class="sxs-lookup"><span data-stu-id="be003-129">This sample illustrates how to use the <xref:System.ServiceModel.ServiceHost> class to host a Windows Communication Foundation service:</span></span>  
  
 [!code-csharp[S_UEServiceHost#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicehost/cs/service.cs#1)]
 [!code-vb[S_UEServiceHost#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueservicehost/vb/service.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be003-130">
            <paramref name="serviceType" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-130">
              <paramref name="serviceType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddServiceEndpoint">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="be003-131">Dodaje punkt końcowy usługi do usługi hostowanej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-131">Adds a service endpoint to the hosted service.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(class System.Type implementedContract, class System.ServiceModel.Channels.Binding binding, string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(Type ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, System::String ^ address);" />
      <MemberSignature Language="F#" Value="override this.AddServiceEndpoint : Type * System.ServiceModel.Channels.Binding * string -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="serviceHost.AddServiceEndpoint (implementedContract, binding, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="implementedContract">
          <span data-ttu-id="be003-132">
            <see cref="T:System.Type" /> Kontraktu punktu końcowego dodane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-132">The <see cref="T:System.Type" /> of contract for the endpoint added.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="be003-133">
            <see cref="T:System.ServiceModel.Channels.Binding" /> Dodać punktu końcowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-133">The <see cref="T:System.ServiceModel.Channels.Binding" /> for the endpoint added.</span>
          </span>
        </param>
        <param name="address">
          <span data-ttu-id="be003-134">Adres punktu końcowego dodane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-134">The address for the endpoint added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be003-135">Dodaje punkt końcowy usługi do usługi hostowanej z określonego kontrakt, powiązanie i adres punktu końcowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-135">Adds a service endpoint to the hosted service with a specified contract, binding, and endpoint address.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be003-136">
            <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> Dodane do usługi hostowanej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-136">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> added to the hosted service.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UEServiceHost#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicehost/cs/service.cs#3)]
 [!code-vb[S_UEServiceHost#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueservicehost/vb/service.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be003-137">
            <paramref name="implementedContract" /> lub <paramref name="binding" /> lub <paramref name="address" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-137">
              <paramref name="implementedContract" /> or <paramref name="binding" /> or <paramref name="address" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(class System.Type implementedContract, class System.ServiceModel.Channels.Binding binding, class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(Type ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, Uri ^ address);" />
      <MemberSignature Language="F#" Value="override this.AddServiceEndpoint : Type * System.ServiceModel.Channels.Binding * Uri -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="serviceHost.AddServiceEndpoint (implementedContract, binding, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="implementedContract">
          <span data-ttu-id="be003-138">
            <see cref="T:System.Type" /> Kontraktu punktu końcowego dodane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-138">The <see cref="T:System.Type" /> of contract for the endpoint added.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="be003-139">
            <see cref="T:System.ServiceModel.Channels.Binding" /> Dodać punktu końcowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-139">The <see cref="T:System.ServiceModel.Channels.Binding" /> for the endpoint added.</span>
          </span>
        </param>
        <param name="address">
          <span data-ttu-id="be003-140">
            <see cref="T:System.Uri" /> Zawierający adres punktu końcowego dodane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-140">The <see cref="T:System.Uri" /> that contains the address for the endpoint added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be003-141">Dodaje punkt końcowy usługi do usługi hostowanej z określonym kontraktu, powiązania i identyfikator URI zawierający adres punktu końcowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-141">Adds a service endpoint to the hosted service with a specified contract, binding, and URI that contains the endpoint address.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be003-142">
            <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> Dodane do usługi hostowanej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-142">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> added to the hosted service.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UEServiceHost#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicehost/cs/service.cs#4)]
 [!code-vb[S_UEServiceHost#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueservicehost/vb/service.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be003-143">
            <paramref name="implementedContract" /> lub <paramref name="binding" /> lub <paramref name="address" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-143">
              <paramref name="implementedContract" /> or <paramref name="binding" /> or <paramref name="address" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, string address, Uri listenUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(class System.Type implementedContract, class System.ServiceModel.Channels.Binding binding, string address, class System.Uri listenUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(Type ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, System::String ^ address, Uri ^ listenUri);" />
      <MemberSignature Language="F#" Value="override this.AddServiceEndpoint : Type * System.ServiceModel.Channels.Binding * string * Uri -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="serviceHost.AddServiceEndpoint (implementedContract, binding, address, listenUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="listenUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="implementedContract">
          <span data-ttu-id="be003-144">
            <see cref="T:System.Type" /> Kontraktu punktu końcowego dodane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-144">The <see cref="T:System.Type" /> of contract for the endpoint added.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="be003-145">
            <see cref="T:System.ServiceModel.Channels.Binding" /> Dodać punktu końcowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-145">The <see cref="T:System.ServiceModel.Channels.Binding" /> for the endpoint added.</span>
          </span>
        </param>
        <param name="address">
          <span data-ttu-id="be003-146">Adres punktu końcowego usługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-146">The endpoint address for the service.</span>
          </span>
        </param>
        <param name="listenUri">
          <span data-ttu-id="be003-147">
            <see cref="T:System.Uri" /> Na można nasłuchiwać punktów końcowych usługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-147">The <see cref="T:System.Uri" /> on which the service endpoints can listen.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be003-148">Dodaje punkt końcowy usługi do usługi hostowanej z określonego kontrakt, powiązanie adresu punktu końcowego i identyfikatora URI, na którym nasłuchuje usługa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-148">Adds a service endpoint to the hosted service with a specified contract, binding, an endpoint address, and a URI on which the service listens.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be003-149">
            <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> Dodane do usługi hostowanej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-149">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> added to the hosted service.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be003-150">Użyj tej wersji metody, jeśli masz wiele punktów końcowych, które należy do nasłuchiwania na tym samym określony identyfikator URI.</span><span class="sxs-lookup"><span data-stu-id="be003-150">Use this version of the method when you have multiple endpoints that need to listen on the same, specified URI.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEServiceHost#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicehost/cs/service.cs#5)]
 [!code-vb[S_UEServiceHost#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueservicehost/vb/service.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be003-151">
            <paramref name="implementedContract" /> lub <paramref name="binding" /> lub <paramref name="address" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-151">
              <paramref name="implementedContract" /> or <paramref name="binding" /> or <paramref name="address" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, Uri address, Uri listenUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(class System.Type implementedContract, class System.ServiceModel.Channels.Binding binding, class System.Uri address, class System.Uri listenUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(Type ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, Uri ^ address, Uri ^ listenUri);" />
      <MemberSignature Language="F#" Value="override this.AddServiceEndpoint : Type * System.ServiceModel.Channels.Binding * Uri * Uri -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="serviceHost.AddServiceEndpoint (implementedContract, binding, address, listenUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="listenUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="implementedContract">
          <span data-ttu-id="be003-152">
            <see cref="T:System.Type" /> Kontraktu punktu końcowego dodane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-152">The <see cref="T:System.Type" /> of contract for the endpoint added.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="be003-153">
            <see cref="T:System.ServiceModel.Channels.Binding" /> Dodać punktu końcowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-153">The <see cref="T:System.ServiceModel.Channels.Binding" /> for the endpoint added.</span>
          </span>
        </param>
        <param name="address">
          <span data-ttu-id="be003-154">
            <see cref="T:System.Uri" /> Zawierający adres punktu końcowego dodane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-154">The <see cref="T:System.Uri" /> that contains the address for the endpoint added.</span>
          </span>
        </param>
        <param name="listenUri">
          <span data-ttu-id="be003-155">
            <see cref="T:System.Uri" /> Na można nasłuchiwać punktów końcowych usługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-155">The <see cref="T:System.Uri" /> on which the service endpoints can listen.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be003-156">Dodaje punkt końcowy usługi do usługi hostowanej z określonego kontrakt, powiązanie, identyfikator URI zawierający adres punktu końcowego i identyfikatora URI, na którym nasłuchuje usługa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-156">Adds a service endpoint to the hosted service with a specified contract, binding, a URI that contains the endpoint address, and a URI on which the service listens.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be003-157">
            <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> Dodane do usługi hostowanej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-157">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> added to the hosted service.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be003-158">Użyj tej wersji metody, jeśli masz wiele punktów końcowych, które należy do nasłuchiwania na tym samym określony identyfikator URI.</span><span class="sxs-lookup"><span data-stu-id="be003-158">Use this version of the method when you have multiple endpoints that need to listen on the same, specified URI.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEServiceHost#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicehost/cs/service.cs#6)]
 [!code-vb[S_UEServiceHost#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueservicehost/vb/service.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be003-159">
            <paramref name="implementedContract" /> lub <paramref name="binding" /> lub <paramref name="address" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-159">
              <paramref name="implementedContract" /> or <paramref name="binding" /> or <paramref name="address" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="be003-160">Nie zainicjowano umów lub nie można odnaleźć kluczy kontraktu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-160">The contracts are not initialized or the contract keys cannot be found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ApplyConfiguration">
      <MemberSignature Language="C#" Value="protected override void ApplyConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ApplyConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.ApplyConfiguration" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ApplyConfiguration ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ApplyConfiguration();" />
      <MemberSignature Language="F#" Value="override this.ApplyConfiguration : unit -&gt; unit" Usage="serviceHost.ApplyConfiguration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="be003-161">Ładuje opisu usługi z pliku konfiguracji i stosuje je do środowiska wykonawczego tworzona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-161">Loads the service description from the configuration file and applies it to the runtime being constructed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDescription">
      <MemberSignature Language="C#" Value="protected override System.ServiceModel.Description.ServiceDescription CreateDescription (out System.Collections.Generic.IDictionary&lt;string,System.ServiceModel.Description.ContractDescription&gt; implementedContracts);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.ServiceModel.Description.ServiceDescription CreateDescription([out] class System.Collections.Generic.IDictionary`2&lt;string, class System.ServiceModel.Description.ContractDescription&gt;&amp; implementedContracts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDescription (ByRef implementedContracts As IDictionary(Of String, ContractDescription)) As ServiceDescription" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::ServiceModel::Description::ServiceDescription ^ CreateDescription([Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, System::ServiceModel::Description::ContractDescription ^&gt; ^ % implementedContracts);" />
      <MemberSignature Language="F#" Value="override this.CreateDescription :  -&gt; System.ServiceModel.Description.ServiceDescription" Usage="serviceHost.CreateDescription implementedContracts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContracts" Type="System.Collections.Generic.IDictionary&lt;System.String,System.ServiceModel.Description.ContractDescription&gt;&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="implementedContracts">
          <span data-ttu-id="be003-162">
            <see cref="T:System.Collections.Generic.IDictionary`2" /> z parami kluczy typu (<see cref="T:System.String" />, <see cref="T:System.ServiceModel.Description.ContractDescription" />) zawierający keyed umów usługi hostowanej, które zostały wdrożone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-162">The <see cref="T:System.Collections.Generic.IDictionary`2" /> with key pairs of type (<see cref="T:System.String" />, <see cref="T:System.ServiceModel.Description.ContractDescription" />) that contains the keyed-contracts of the hosted service that have been implemented.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be003-163">Tworzy opis usługi hostowanej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-163">Creates a description of the service hosted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be003-164">A <see cref="T:System.ServiceModel.Description.ServiceDescription" /> usługi hostowanej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-164">A <see cref="T:System.ServiceModel.Description.ServiceDescription" /> of the hosted service.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be003-165">Ta metoda jest używana do konstruowania opisy umowy z dostosowanych modele programowania.</span><span class="sxs-lookup"><span data-stu-id="be003-165">This method is used to construct contract descriptions from customized programming models.</span></span> <span data-ttu-id="be003-166">Zastąp metodę odpowiedniej klasy podstawowej <xref:System.ServiceModel.ServiceHostBase.CreateDescription%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.ServiceModel.Description.ContractDescription%7D%40%29>, aby zaimplementować dostosowane modelu.</span><span class="sxs-lookup"><span data-stu-id="be003-166">Override the corresponding base class method, <xref:System.ServiceModel.ServiceHostBase.CreateDescription%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.ServiceModel.Description.ContractDescription%7D%40%29>, to implement the customized model.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="be003-167">Typ usługi hostowanej jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-167">The type of service hosted is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="InitializeDescription">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="be003-168">Inicjuje opis usługi hostowanej na podstawie jego typ lub wystąpienie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-168">Initializes a description of the service hosted based on its type or instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be003-169">Ta metoda usuwa wymóg adres podstawowy może być przekazywany jako część <xref:System.ServiceModel.ServiceHost.%23ctor%2A>.</span><span class="sxs-lookup"><span data-stu-id="be003-169">This method removes the requirement for passing base addresses as part of <xref:System.ServiceModel.ServiceHost.%23ctor%2A>.</span></span> <span data-ttu-id="be003-170">Klasy, które dziedziczą z <xref:System.ServiceModel.ServiceHost> można wywołać <xref:System.ServiceModel.ServiceHost.%23ctor%2A> , a następnie można wywołać jeden z <xref:System.ServiceModel.ServiceHost.InitializeDescription%2A> Jeśli adres podstawowy nie jest dostępny.</span><span class="sxs-lookup"><span data-stu-id="be003-170">Classes that inherit from <xref:System.ServiceModel.ServiceHost> can call <xref:System.ServiceModel.ServiceHost.%23ctor%2A> and then can call one of the <xref:System.ServiceModel.ServiceHost.InitializeDescription%2A> when a base address is available.</span></span> <span data-ttu-id="be003-171">Jest to implementowania usługi modelu narzędzie do obsługi metadanych (Svcutil.exe).</span><span class="sxs-lookup"><span data-stu-id="be003-171">This is how the Service Model Metadata Utility Tool (Svcutil.exe) is implemented.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="InitializeDescription">
      <MemberSignature Language="C#" Value="protected void InitializeDescription (object singletonInstance, System.ServiceModel.UriSchemeKeyedCollection baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InitializeDescription(object singletonInstance, class System.ServiceModel.UriSchemeKeyedCollection baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InitializeDescription (singletonInstance As Object, baseAddresses As UriSchemeKeyedCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InitializeDescription(System::Object ^ singletonInstance, System::ServiceModel::UriSchemeKeyedCollection ^ baseAddresses);" />
      <MemberSignature Language="F#" Value="override this.InitializeDescription : obj * System.ServiceModel.UriSchemeKeyedCollection -&gt; unit" Usage="serviceHost.InitializeDescription (singletonInstance, baseAddresses)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="singletonInstance" Type="System.Object" />
        <Parameter Name="baseAddresses" Type="System.ServiceModel.UriSchemeKeyedCollection" />
      </Parameters>
      <Docs>
        <param name="singletonInstance">
          <span data-ttu-id="be003-172">Wystąpienie usługi hostowanej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-172">The instance of the hosted service.</span>
          </span>
        </param>
        <param name="baseAddresses">
          <span data-ttu-id="be003-173">
            <see cref="T:System.ServiceModel.UriSchemeKeyedCollection" /> Zawierający adres podstawowy usługi hostowanej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-173">The <see cref="T:System.ServiceModel.UriSchemeKeyedCollection" /> that contains the base addresses for the hosted service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be003-174">Inicjuje opis usługi hostowanej na podstawie jego wystąpieniu i określonej podstawowej adresów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-174">Initializes a description of the service hosted based on its instance and specified base addresses.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be003-175">
            <paramref name="singletonInstance" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-175">
              <paramref name="singletonInstance" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InitializeDescription">
      <MemberSignature Language="C#" Value="protected void InitializeDescription (Type serviceType, System.ServiceModel.UriSchemeKeyedCollection baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InitializeDescription(class System.Type serviceType, class System.ServiceModel.UriSchemeKeyedCollection baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InitializeDescription (serviceType As Type, baseAddresses As UriSchemeKeyedCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InitializeDescription(Type ^ serviceType, System::ServiceModel::UriSchemeKeyedCollection ^ baseAddresses);" />
      <MemberSignature Language="F#" Value="override this.InitializeDescription : Type * System.ServiceModel.UriSchemeKeyedCollection -&gt; unit" Usage="serviceHost.InitializeDescription (serviceType, baseAddresses)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="baseAddresses" Type="System.ServiceModel.UriSchemeKeyedCollection" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="be003-176">
            <see cref="T:System.Type" /> Usługi hostowanej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-176">The <see cref="T:System.Type" /> of service hosted.</span>
          </span>
        </param>
        <param name="baseAddresses">
          <span data-ttu-id="be003-177">
            <see cref="T:System.ServiceModel.UriSchemeKeyedCollection" /> Zawierający adres podstawowy usługi hostowanej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-177">The <see cref="T:System.ServiceModel.UriSchemeKeyedCollection" /> that contains the base addresses for the hosted service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be003-178">Inicjuje opis usługi hostowanej na podstawie jego typu i określonej podstawowej adresów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-178">Initializes a description of the service hosted based on its type and specified base addresses.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="be003-179">
            <paramref name="serviceType" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-179">
              <paramref name="serviceType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected override void OnClosed ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClosed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.OnClosed" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClosed ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClosed();" />
      <MemberSignature Language="F#" Value="override this.OnClosed : unit -&gt; unit" Usage="serviceHost.OnClosed " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="be003-180">Usuwa jednorazowe usług, które są obsługiwane, gdy host usługi jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-180">Disposes of disposable services that are being hosted when the service host is closed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be003-181">W przypadku przesłaniania <xref:System.ServiceModel.ServiceHost.OnClosed%2A> metody muszą zapewnić podstawowym. Wywoływana jest metoda OnClosed, nawet jeśli wystąpi wyjątek.</span><span class="sxs-lookup"><span data-stu-id="be003-181">When overriding the <xref:System.ServiceModel.ServiceHost.OnClosed%2A> method you must ensure the base.OnClosed method is called, even if an exception occurs.</span></span> <span data-ttu-id="be003-182">Poniższy kod ilustruje sposób to zrobić.</span><span class="sxs-lookup"><span data-stu-id="be003-182">The following code illustrates how to do this.</span></span>  
  
```  
protected override void OnClosed()  
{  
    try  
    {  
        if (FaultFlagService.faultFlag == ThrowDuring.OnClosed)  
        {  
            FaultFlagService.faultFlag = ThrowDuring.Never;  
            throw new ServiceActivationException("Faulting the service because FaultFlagService.faultFlag = ThrowDuring.OnClosed");  
        }  
    }  
    finally  
    {  
        base.OnClosed();  
    }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SingletonInstance">
      <MemberSignature Language="C#" Value="public object SingletonInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SingletonInstance" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceHost.SingletonInstance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SingletonInstance As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SingletonInstance { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SingletonInstance : obj" Usage="System.ServiceModel.ServiceHost.SingletonInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="be003-183">Pobiera pojedyncze wystąpienie usługi hostowanej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-183">Gets the singleton instance of the hosted service.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="be003-184">Obiekt usługi hostowanej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be003-184">The hosted service object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be003-185">Użyj <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> konstruktora w celu zainicjowania pojedyncze wystąpienie usługi, która ma być obsługiwana, gdy użytkownik chce sterować tym wystąpieniem usługi, która jest używana.</span><span class="sxs-lookup"><span data-stu-id="be003-185">Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> constructor to initialize a singleton instance of the service to be hosted when you want to control the instance of the service that is used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>