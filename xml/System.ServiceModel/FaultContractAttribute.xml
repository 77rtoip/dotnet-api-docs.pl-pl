<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="FaultContractAttribute.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56d5024403ef5bc0cdcebd07b8615a0863134d991.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6d5024403ef5bc0cdcebd07b8615a0863134d991</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>Specifies one or more SOAP faults that are returned when a service operation encounters processing errors.</source>
          <target state="translated">Określa jeden lub więcej błędów protokołu SOAP, które są zwracane, gdy operacja usługi wystąpią błędy przetwarzania.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>Mark an operation with the <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> attribute to declare one or more specific exception conditions that are added to the Web Service Description Language (WSDL) description of the service operation as explicit SOAP fault messages returned by the operation.</source>
          <target state="translated">Oznacz operację, podając <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> atrybutu, aby zadeklarować jedną lub więcej wyjątek warunków, które są dodawane do opisu usługi sieci Web Service Description Language (WSDL) operacji usługi jako jawne SOAP fault wiadomości zwrócony przez operację.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>In all managed applications, processing errors are represented by <ph id="ph1">&lt;xref:System.Exception&gt;</ph> objects.</source>
          <target state="translated">We wszystkich aplikacjach zarządzanych błędy przetwarzania są reprezentowane przez <ph id="ph1">&lt;xref:System.Exception&gt;</ph> obiektów.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>In SOAP-based applications such as <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> applications, service methods communicate processing error information using SOAP fault messages.</source>
          <target state="translated">W aplikacjach opartego na protokole SOAP, takich jak <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> komunikacji metody usług aplikacji, przetwarzania przy użyciu protokołu SOAP komunikatów "fault" informacje o błędzie.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>Because <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> applications execute under both types of error systems, any managed exception information that must be sent to the client must be converted from exceptions into SOAP faults.</source>
          <target state="translated">Ponieważ <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> wykonany oba rodzaje systemów błąd aplikacji, wszystkie informacje o zarządzanym wyjątku wysłania do klienta musi zostać przekonwertowany z wyjątków w błędach SOAP.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>You can use the default service exception behaviors, or you can explicitly control whether -- and how -- exceptions are mapped to fault messages.</source>
          <target state="translated">Można użyć domyślnego zachowania wyjątek usługi lub jawnie kontrolowanie, czy--i jak--wyjątki są mapowane na komunikaty o błędach.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>For an overview of exceptions and SOAP faults in <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> applications, see <bpt id="p1">[</bpt>Specifying and Handling Faults in Contracts and Services<ept id="p1">](~/docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md)</ept>.</source>
          <target state="translated">Dla przeglądu wyjątki i SOAP błędów w <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> aplikacji, zobacz <bpt id="p1">[</bpt>określanie i obsługa błędów w kontraktach i usługach<ept id="p1">](~/docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>It is recommended that service operations use the <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> to formally specify all SOAP faults that a client can expect to receive in the normal course of an operation.</source>
          <target state="translated">Zalecane jest, aby używać operacji usługi <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> formalnie określić wszystkie błędach SOAP, które klient może oczekiwać w trakcie normalnego przebiegu operacji.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>It is also recommended that only that information a client must know is returned in a SOAP fault to minimize information disclosure.</source>
          <target state="translated">Zalecane jest również, że tylko te informacje, których klient musi wiedzieć, jest zwracany w błędu protokołu SOAP, aby zminimalizować ujawnienie informacji.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.Action%2A&gt;</ph> property controls the action of the fault message.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.Action%2A&gt;</ph> Właściwość kontroluje akcji komunikat o błędzie.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.DetailType%2A&gt;</ph> property gets the type of the detail object serialized in the fault message.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.DetailType%2A&gt;</ph> Właściwość pobiera typ obiektu szczegóły zserializowane w komunikat o błędzie.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.Name%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.FaultContractAttribute.Namespace%2A&gt;</ph> properties control the name and namespace, respectively, of the fault message.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.Name%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.ServiceModel.FaultContractAttribute.Namespace%2A&gt;</ph> właściwości formantu nazwę i przestrzeń nazw, odpowiednio z komunikat o błędzie.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.HasProtectionLevel%2A&gt;</ph> indicates whether the fault message has a protection level specified, and if so, the <ph id="ph2">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph> property controls that level of protection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.HasProtectionLevel%2A&gt;</ph> Wskazuje, czy określony poziom ochrony jest komunikat o błędzie i <ph id="ph2">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph> właściwość określa, że poziom ochrony.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>If a fault message carries information that is sensitive or can lead to security problems, it is strongly recommended that the <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph> property be set.</source>
          <target state="translated">Jeśli komunikat o błędzie zawiera informacje poufne lub może prowadzić do problemów z zabezpieczeniami, zdecydowanie zalecane jest <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph> można ustawić właściwości.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>If you set the <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph> explicitly to either <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType&gt;</ph> or <ph id="ph3">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph>, then you must use a binding with security enabled using the <ph id="ph4">&lt;xref:System.ServiceModel.SecurityMode?displayProperty=nameWithType&gt;</ph> property on the binding or an exception is thrown.</source>
          <target state="translated">Jeśli ustawisz <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph> jawnie na jeden <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType&gt;</ph> lub <ph id="ph3">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph>, należy użyć powiązania z zabezpieczeniami włączyć za pomocą <ph id="ph4">&lt;xref:System.ServiceModel.SecurityMode?displayProperty=nameWithType&gt;</ph> właściwości powiązania ani wyjątek jest zgłaszany.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>If you select a binding that enables security and you do not set the <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph> property anywhere on the contract, all application data will be encrypted and signed.</source>
          <target state="translated">Po wybraniu powiązania, które zapewnia bezpieczeństwo i nie należy ustawiać <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph> właściwość dowolnym kontrakt wszystkich aplikacji, danych zostanie zaszyfrowana i podpisana.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>If you select a binding that does not have security enabled (for example, the <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding?displayProperty=nameWithType&gt;</ph> has security disabled by default), and the <ph id="ph2">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph> is not explicitly set, then none of the application data will be protected.</source>
          <target state="translated">Jeśli wybierzesz powiązania, które nie ma włączoną obsługą zabezpieczeń (na przykład <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding?displayProperty=nameWithType&gt;</ph> zabezpieczeń domyślnie wyłączone) i <ph id="ph2">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph> nie jest jawnie ustawiona, a następnie żadne dane aplikacji ma podlegać ochronie.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>For many scenarios setting <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph> for fault messages is sufficient.</source>
          <target state="translated">W różnych scenariuszach ustawienie <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph> do <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph> błędu wiadomości jest wystarczająca.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>For more details, see <bpt id="p1">[</bpt>Understanding Protection Level<ept id="p1">](~/docs/framework/wcf/understanding-protection-level.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>poziom ochrony opis<ept id="p1">](~/docs/framework/wcf/understanding-protection-level.md)</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>To return a specified fault from an operation marked with <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph>, throw a <ph id="ph2">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> (where the type parameter is the serializable error information) when the managed exception occurs during the operation.</source>
          <target state="translated">Aby zwrócić określonego błędu z operacji oznaczonej jako <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph>, throw <ph id="ph2">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> (gdzie parametr typu jest informacje o błędzie do serializacji) po wystąpieniu wyjątku zarządzanego podczas operacji.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source><ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client applications surface the SOAP fault as the same type as was thrown in the client implementation -- that is, as a <ph id="ph2">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> (where the typeparameter is the serializable error information).</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> aplikacje klienckie powierzchni błędu protokołu SOAP jako ten sam typ, jak został zgłoszony w implementacji klienta — to znaczy jako <ph id="ph2">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> (gdzie typeparameter jest informacje o błędzie do serializacji).</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> can be used only to specify SOAP faults for two-way service operations and for asynchronous operation pairs; one-way operations do not support SOAP faults and therefore do not support <ph id="ph2">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> Mogą być używane tylko w celu określenia SOAP błędów dla operacji usługi dwukierunkowe i operacji asynchronicznej pary; operacji jednokierunkowych nie obsługują błędach SOAP i dlatego nie obsługują <ph id="ph2">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>You can use any serializable type to convey error information.</source>
          <target state="translated">Dowolny typ możliwy do serializacji służy do przekazywania informacji o błędzie.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>The only restriction in this version of <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> is that types specified in a <ph id="ph2">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> must be serializable by the <ph id="ph3">&lt;xref:System.Runtime.Serialization.DataContractSerializer?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Tylko ograniczenie w tej wersji programu <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> jest, że typy określone w <ph id="ph2">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> muszą umożliwiać serializację za pomocą <ph id="ph3">&lt;xref:System.Runtime.Serialization.DataContractSerializer?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>For the serialization support the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> provides, see <bpt id="p1">[</bpt>Data Contract Serializer<ept id="p1">](~/docs/framework/wcf/feature-details/data-contract-serializer.md)</ept>.</source>
          <target state="translated">Do obsługi serializacji <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> udostępnia, zobacz <bpt id="p1">[</bpt>serializator kontraktu danych<ept id="p1">](~/docs/framework/wcf/feature-details/data-contract-serializer.md)</ept>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>For example, to specify that clients can expect a SOAP fault that contains an <ph id="ph1">&lt;xref:System.Int32&gt;</ph>, place that type parameter in the <ph id="ph2">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> on your service method.</source>
          <target state="translated">Na przykład, aby określić, że klientów można spodziewać się SOAP usterki, które zawiera <ph id="ph1">&lt;xref:System.Int32&gt;</ph>, umieść ten parametr typu w <ph id="ph2">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> na metodę usługi.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>The following code examples do not set the <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.FaultContractAttribute.Name%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.ServiceModel.FaultContractAttribute.Namespace%2A&gt;</ph> properties.</source>
          <target state="translated">W poniższych przykładach kodu nie należy ustawiać <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.FaultContractAttribute.Name%2A&gt;</ph>, lub <ph id="ph3">&lt;xref:System.ServiceModel.FaultContractAttribute.Namespace%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>Then, in your service method, throw a new <ph id="ph1">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> where the type parameter is the type that contains the error information (in the above case, a <ph id="ph2">&lt;xref:System.Int32&gt;</ph>).</source>
          <target state="translated">Następnie, w metodę usługi, throw nowy <ph id="ph1">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> gdzie parametr typu jest typ, który zawiera informacje o błędzie (w przypadku powyższych <ph id="ph2">&lt;xref:System.Int32&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>For example:</source>
          <target state="translated">Na przykład:</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>The preceding example is very basic; almost any information can be passed using an <ph id="ph1">&lt;xref:System.Int32?displayProperty=nameWithType&gt;</ph> code, so this detail type is not the most useful.</source>
          <target state="translated">Powyższy przykład jest bardzo proste; prawie wszystkie informacje mogą zostać przekazane za pomocą <ph id="ph1">&lt;xref:System.Int32?displayProperty=nameWithType&gt;</ph> kod, więc ten typ szczegółów nie jest najbardziej przydatna.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>Typically, <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> applications specify SOAP faults with detail types specific to the error information requirements of the client.</source>
          <target state="translated">Zazwyczaj <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> aplikacji określ błędach SOAP z typami szczegółów specyficzne dla wymagań informacji błąd klienta.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>For a more complete example, see the Example section.</source>
          <target state="translated">Na przykład bardziej szczegółowy zobacz sekcję przykład.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>If you specify a <ph id="ph1">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> where the type parameter is a <ph id="ph2">&lt;xref:System.String?displayProperty=nameWithType&gt;</ph>, the string value is assigned to the Detail property in the client application; clients cannot retrieve that string by calling the <ph id="ph3">&lt;xref:System.ServiceModel.FaultException%601.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Jeśli określisz <ph id="ph1">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> gdzie parametr typu jest <ph id="ph2">&lt;xref:System.String?displayProperty=nameWithType&gt;</ph>, wartość ciągu jest przypisany do właściwości szczegółu w aplikacji klienckiej; klienci nie mogą pobrać ten ciąg przez wywołanie metody <ph id="ph3">&lt;xref:System.ServiceModel.FaultException%601.ToString%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>To have the string value returned when the client application calls <ph id="ph1">&lt;xref:System.Exception.ToString%2A?displayProperty=nameWithType&gt;</ph>, throw a <ph id="ph2">&lt;xref:System.ServiceModel.FaultException?displayProperty=nameWithType&gt;</ph> exception inside the operation and pass the string to the constructor.</source>
          <target state="translated">Wartości ciągu zwracany, gdy aplikacja klient wywołuje <ph id="ph1">&lt;xref:System.Exception.ToString%2A?displayProperty=nameWithType&gt;</ph>, throw <ph id="ph2">&lt;xref:System.ServiceModel.FaultException?displayProperty=nameWithType&gt;</ph> wyjątek w operacji i przekazać ciąg konstruktora.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>To explicitly control the behavior of the application when an exception or <ph id="ph1">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> is thrown, implement the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType&gt;</ph> interface on an <ph id="ph3">&lt;xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType&gt;</ph> or <ph id="ph5">&lt;xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType&gt;</ph> and assign it to the <ph id="ph6">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Aby jawnie wpływają na zachowanie aplikacji, gdy wyjątek lub <ph id="ph1">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> jest zgłoszony, wdrożenie <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType&gt;</ph> interfejs w <ph id="ph3">&lt;xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType&gt;</ph> lub <ph id="ph5">&lt;xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType&gt;</ph> i przypisz go do <ph id="ph6">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IErrorHandler&gt;</ph> enables you to explicitly control the SOAP fault that is generated and whether to send it back to the client.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IErrorHandler&gt;</ph> Umożliwia użytkownikom jawnie kontrolowania błędu protokołu SOAP, który jest generowany i czy do wysłania do klienta.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>To facilitate debugging, set the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType&gt;</ph> to <ph id="ph2">`true`</ph> in code or you can use the <ph id="ph3">&lt;xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType&gt;</ph> in an application configuration file.</source>
          <target state="translated">W celu ułatwienia debugowania, ustaw <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType&gt;</ph> do <ph id="ph2">`true`</ph> w kodzie, lub można użyć <ph id="ph3">&lt;xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType&gt;</ph> w pliku konfiguracyjnym aplikacji.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>When enabled, the service automatically returns exception information to the caller.</source>
          <target state="translated">Po włączeniu usługa automatycznie zwraca informacje o wyjątku do obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>These faults appear to the client as <ph id="ph1">&lt;xref:System.ServiceModel.FaultException&gt;</ph> exceptions.</source>
          <target state="translated">Te błędy są wyświetlane do klienta jako <ph id="ph1">&lt;xref:System.ServiceModel.FaultException&gt;</ph> wyjątków.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>Because managed exceptions can expose internal application information, setting <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType&gt;</ph> to <ph id="ph3">`true`</ph> can permit <ph id="ph4">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> clients to obtain information about internal service operation exceptions, including personally identifiable or other sensitive information.</source>
          <target state="translated">Ponieważ zarządzane wyjątki może ujawnić informacje o wewnętrznych aplikacji, ustawianie <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType&gt;</ph> lub <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType&gt;</ph> do <ph id="ph3">`true`</ph> zezwolić na <ph id="ph4">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> klientów, aby uzyskać informacje dotyczące wyjątków operacji wewnętrzny usługi, w tym osobiście do zidentyfikowania lub inne poufne informacje.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>Therefore, setting <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType&gt;</ph> to <ph id="ph3">`true`</ph> is only recommended as a way of temporarily debugging a service application.</source>
          <target state="translated">W związku z tym ustawienie <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType&gt;</ph> lub <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType&gt;</ph> do <ph id="ph3">`true`</ph> jest zalecane tylko w sposób tymczasowo debugowania aplikacji usługi.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>In addition, the WSDL for a method that returns unhandled managed exceptions in this way does not contain the contract for the <ph id="ph1">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> of type <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">Ponadto WSDL dla metody, która zwraca nieobsługiwanych wyjątków w ten sposób zarządzanych nie zawiera kontraktu dla <ph id="ph1">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> typu <ph id="ph2">&lt;xref:System.String&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>Clients must expect the possibility of an unknown SOAP fault (returned to <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> clients as <ph id="ph2">&lt;xref:System.ServiceModel.FaultException?displayProperty=nameWithType&gt;</ph> objects) to obtain the debugging information properly.</source>
          <target state="translated">Klienci muszą oczekują możliwości nieznany błąd protokołu SOAP (Powrót do <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> klientów jako <ph id="ph2">&lt;xref:System.ServiceModel.FaultException?displayProperty=nameWithType&gt;</ph> obiektów) można uzyskać informacji o debugowaniu poprawnie.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>The following code example shows the use of <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> to specify that the <ph id="ph2">`SampleMethod`</ph> operation can return a SOAP fault with the detail type of <ph id="ph3">`GreetingFault`</ph>.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób użycia <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> Aby określić, że <ph id="ph2">`SampleMethod`</ph> operacji może zwrócić błąd SOAP z typem szczegółów <ph id="ph3">`GreetingFault`</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.FaultContractAttribute">
          <source>The following code example shows that <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> clients of <ph id="ph2">`ISampleService`</ph> experience this SOAP fault as a <ph id="ph3">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> of type <ph id="ph4">`GreetingFault`</ph>.</source>
          <target state="translated">W poniższym przykładzie pokazano, że <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> klientów <ph id="ph2">`ISampleService`</ph> wystąpić tego błędu protokołu SOAP jako <ph id="ph3">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> typu <ph id="ph4">`GreetingFault`</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultContractAttribute.#ctor(System.Type)">
          <source>The serializable type that contains error information for the caller.</source>
          <target state="translated">Typ możliwy do serializacji, który zawiera informacje o błędzie do obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultContractAttribute.#ctor(System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultContractAttribute" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.ServiceModel.FaultContractAttribute" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.FaultContractAttribute.#ctor(System.Type)">
          <source>The constructor is typically executed by applying the attribute to a service method and specifying a type as the argument in the attribute.</source>
          <target state="translated">Konstruktor jest zazwyczaj wykonywane przez stosowanie atrybut do metody usługi i określanie typu jako argumentu w atrybucie.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.FaultContractAttribute.#ctor(System.Type)">
          <source>The following code example shows the use of <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> to specify that the <ph id="ph2">`SampleMethod`</ph> operation can return a SOAP fault with the detail type of <ph id="ph3">`GreetingFault`</ph>.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób użycia <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> Aby określić, że <ph id="ph2">`SampleMethod`</ph> operacji może zwrócić błąd SOAP z typem szczegółów <ph id="ph3">`GreetingFault`</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.FaultContractAttribute.#ctor(System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="detailType" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="detailType" /&gt;</ph> Argument jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.FaultContractAttribute.Action">
          <source>Gets or sets the action of the SOAP fault message that is specified as part of the operation contract.</source>
          <target state="translated">Pobiera lub ustawia akcję komunikat o błędzie SOAP, który jest określony jako część kontrakt operacji.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.Action">
          <source>The value of the action for the SOAP fault message.</source>
          <target state="translated">Wartość akcji dla komunikatu błędu SOAP.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.Action">
          <source>Use to control the action of the SOAP fault message.</source>
          <target state="translated">Użyj, aby kontrolować działań komunikatu błędu SOAP.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.FaultContractAttribute.DetailType">
          <source>Gets the type of a serializable object that contains error information.</source>
          <target state="translated">Pobiera typ możliwy do serializacji obiektu, który zawiera informacje o błędzie.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.DetailType">
          <source>The type that represents the serializable error class.</source>
          <target state="translated">Typ, który reprezentuje klasę błąd serializacji.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.DetailType">
          <source>The following code example shows the use of <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> to specify that the <ph id="ph2">`SampleMethod`</ph> operation can return a SOAP fault with the detail type of <ph id="ph3">`GreetingFault`</ph>.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób użycia <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> Aby określić, że <ph id="ph2">`SampleMethod`</ph> operacji może zwrócić błąd SOAP z typem szczegółów <ph id="ph3">`GreetingFault`</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.FaultContractAttribute.HasProtectionLevel">
          <source>Gets a value that indicates whether the SOAP fault message has a protection level assigned.</source>
          <target state="translated">Pobiera wartość wskazującą, czy komunikat o błędzie protokołu SOAP ma przypisano poziomu ochrony.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.HasProtectionLevel">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the fault message has a protection level; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli komunikat o błędzie ma poziom ochrony; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.HasProtectionLevel">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.HasProtectionLevel">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.HasProtectionLevel%2A&gt;</ph> property to specify whether the SOAP fault message must be encrypted, signed, or both.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.HasProtectionLevel%2A&gt;</ph> właściwości w celu określenia, czy komunikat o błędzie SOAP musi być zaszyfrowany, podpisany, lub obie.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.HasProtectionLevel">
          <source>See the <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph> property for details.</source>
          <target state="translated">Zobacz <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph> właściwości, aby uzyskać szczegółowe informacje.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.FaultContractAttribute.Name">
          <source>Gets or sets the name of the fault message in Web Services Description Language (WSDL).</source>
          <target state="translated">Pobiera lub ustawia nazwę komunikat o błędzie w sieci Web Services Description Language (WSDL).</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.Name">
          <source>The fault message name.</source>
          <target state="translated">Nazwa komunikat błędu.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.Name">
          <source>The default is the name of the type used as the fault detail.</source>
          <target state="translated">Wartością domyślną jest nazwa typu używany jako szczegół błędu.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.FaultContractAttribute.Namespace">
          <source>Gets or sets the namespace of the SOAP fault.</source>
          <target state="translated">Pobiera lub ustawia obszar nazw błędu protokołu SOAP.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.Namespace">
          <source>The namespace of the SOAP fault.</source>
          <target state="translated">Przestrzeń nazw błędu protokołu SOAP.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
          <source>Specifies the level of protection the SOAP fault requires from the binding.</source>
          <target state="translated">Określa poziom ochrony wymaga błędu protokołu SOAP z powiązania.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> values.</source>
          <target state="translated">Jeden z <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Net.Security.ProtectionLevel.None" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see cref="F:System.Net.Security.ProtectionLevel.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.FaultDescription.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> property to specify the degree to which the binding must encrypt, sign, or both when sending the SOAP fault.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.ServiceModel.Description.FaultDescription.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> właściwość, aby określić stopień, w której powiązania musi szyfrowania, zaloguj się i/lub podczas wysyłania błędu protokołu SOAP.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
          <source>It is strongly recommended that an operation's fault explicitly decide the security protection level requirements on the contract.</source>
          <target state="translated">Zdecydowanie zaleca się błędu operacji jawnie zdecydować wymagania poziomu ochrony zabezpieczeń kontraktu.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
          <source>The default protection level is <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph>, meaning that the SOAP fault message you are defining does not require encryption or a digital signature (although your binding may provide this support if it is configured to do so).</source>
          <target state="translated">Domyślny poziom ochrony jest <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph>, co oznacza, że komunikat o błędzie SOAP są definiowane nie wymaga szyfrowania lub podpis cyfrowy (chociaż wiązania może zapewniają tę obsługę, jeśli jest skonfigurowany w tym celu).</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
          <source>If a fault message carries information that is sensitive or can lead to security problems, it is strongly recommended that the <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph> property be set to <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Jeśli komunikat o błędzie zawiera informacje poufne lub może prowadzić do problemów z zabezpieczeniami, zdecydowanie zalecane jest <ph id="ph1">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph> właściwości można ustawić <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
          <source>For more about security issues, see <bpt id="p1">[</bpt>Understanding Protection Level<ept id="p1">](~/docs/framework/wcf/understanding-protection-level.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji na temat problemów z zabezpieczeniami, zobacz <bpt id="p1">[</bpt>poziom ochrony opis<ept id="p1">](~/docs/framework/wcf/understanding-protection-level.md)</ept>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
          <source>The protection behavior at runtime is the combination of the protection-level properties that have a hierarchical structure.</source>
          <target state="translated">Zachowania ochrony w czasie wykonywania jest kombinacją właściwości poziomu ochrony, które mają strukturę hierarchiczną.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
          <source>Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set.</source>
          <target state="translated">Ustawienie wartości peryferyjnych ustanawia ustawieniem domyślnym dla wszystkich zakresów mniejszą niż, chyba że jawnie ustawiono inną wartość mniejszą niż zakres.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
          <source>In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.</source>
          <target state="translated">W takim przypadku wartość zewnętrzne pozostaje domyślnego dla wszystkich mniejszą niż zakresów z wyjątkiem obsługującej ustawione.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
          <source>For example, if <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed, including fault messages.</source>
          <target state="translated">Na przykład jeśli <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> ustawiono <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph> i nie mniejszą niż zakresy mają ustawienia poziomu ochrony, wszystkie wiadomości w kontrakt operacji są zaszyfrowana i podpisana, w tym komunikatów "fault".</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
          <source>If, however, one of those operations has the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> set to <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType&gt;</ph>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed, including fault messages.</source>
          <target state="translated">Jeśli jednak jeden z tych działań ma <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> ustawioną <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType&gt;</ph>, następnie komunikatów dla tej operacji jest zarejestrowany, ale wszystkie inne komunikaty w kontrakcie są zaszyfrowana i podpisana, w tym komunikatów "fault".</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
          <source>The scopes at which these values are set are:</source>
          <target state="translated">Zakresy, w których te wartości są ustawiane są:</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> property on <ph id="ph2">&lt;xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> Właściwość <ph id="ph2">&lt;xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> property on <ph id="ph2">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> Właściwość <ph id="ph2">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
          <source>When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Gdy nie poziomu ochrony, nie jawnie określone w umowie a podstawowej powiązanie obsługuje zabezpieczeń, (zarówno na poziomie transportu lub komunikat), poziom skutecznej ochrony dla całej umowy jest <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
          <source>If the binding does not support security (such as <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>), the effective <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType&gt;</ph> is <ph id="ph3">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph> for the whole contract.</source>
          <target state="translated">Jeśli powiązanie nie obsługuje zabezpieczeń (takich jak <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>), obowiązującą <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType&gt;</ph> jest <ph id="ph3">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph> dla całej umowy.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
          <source>The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Wynik jest, w zależności od powiązanie punktu końcowego, klienci mogą wymagają różnych ochrony zabezpieczeń na poziomie komunikatu i transportu, nawet wtedy, gdy kontrakt Określa <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>