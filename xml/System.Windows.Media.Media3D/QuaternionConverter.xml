<Type Name="QuaternionConverter" FullName="System.Windows.Media.Media3D.QuaternionConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ff3c6da98be85fd19869e25e8e58c17c918025b8" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37498046" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class QuaternionConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit QuaternionConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Media3D.QuaternionConverter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class QuaternionConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class QuaternionConverter sealed : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type QuaternionConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ba59d-101">Konwertuje instancje innych typów wystąpień <see cref="T:System.Windows.Media.Media3D.Quaternion" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ba59d-101">Converts instances of other types to and from instances of <see cref="T:System.Windows.Media.Media3D.Quaternion" />.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QuaternionConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.QuaternionConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QuaternionConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ba59d-102">Inicjuje wystąpienie <see cref="T:System.Windows.Media.Media3D.QuaternionConverter" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba59d-102">Initializes an instance of the <see cref="T:System.Windows.Media.Media3D.QuaternionConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.QuaternionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="quaternionConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="ba59d-103">ITypeDescriptorContext dla tego wywołania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba59d-103">ITypeDescriptorContext for this call.</span>
          </span>
        </param>
        <param name="sourceType">
          <span data-ttu-id="ba59d-104">Typ, którego dotyczy kwerenda pomocy technicznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba59d-104">Type being queried for support.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba59d-105">Pobiera wartość wskazującą, czy tego konwertera typu można konwertować z danym typem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba59d-105">Gets a value that indicates whether this type converter can convert from a given type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba59d-106">Konwerter wartość true, jeśli można przekonwertować z typu podany, wartość false w przeciwnym razie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba59d-106">True if this converter can convert from the provided type, false otherwise.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.QuaternionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="quaternionConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="ba59d-107">ITypeDescriptorContext dla tego wywołania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba59d-107">ITypeDescriptorContext for this call.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="ba59d-108">Typ, którego dotyczy kwerenda pomocy technicznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba59d-108">Type being queried for support.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba59d-109">Pobiera wartość wskazującą, czy tego konwertera typu można konwertować do danego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba59d-109">Gets a value that indicates whether this type converter can convert to the given type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba59d-110">Konwerter wartość true, jeśli można przekonwertować na typ podana wartość false w przeciwnym razie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba59d-110">True if this converter can convert to the provided type, false otherwise.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.QuaternionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="quaternionConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="ba59d-111">ITypeDescriptorContext dla tego wywołania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba59d-111">ITypeDescriptorContext for this call.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="ba59d-112">Informacje o języku przestrzegać podczas konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba59d-112">CultureInfo to be respected when converting.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ba59d-113">Obiekt do przekonwertowania na wystąpienie Quaternion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba59d-113">Object to convert to an instance of Quaternion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba59d-114">Konwertuje określony obiekt do <see cref="T:System.Windows.Media.Media3D.Quaternion" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba59d-114">Converts the specified object to a <see cref="T:System.Windows.Media.Media3D.Quaternion" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba59d-115">Quaternion, który został zbudowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba59d-115">Quaternion that was constructed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.QuaternionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="quaternionConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="ba59d-116">ITypeDescriptorContext dla tego wywołania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba59d-116">The ITypeDescriptorContext for this call.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="ba59d-117">CultureInfo, które są uwzględniane podczas konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba59d-117">The CultureInfo which is respected when converting.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ba59d-118">Obiekt do przekonwertowania na wystąpienie <c>destinationType</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba59d-118">The object to convert to an instance of <c>destinationType</c>.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="ba59d-119">Typ, do którego zostaną przekonwertowane wystąpienia Matrix3D.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba59d-119">The type to which the Matrix3D instance will be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba59d-120">Stara się przekonwertować wystąpienia <see cref="T:System.Windows.Media.Media3D.Quaternion" /> do danego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba59d-120">Attempts to convert an instance of <see cref="T:System.Windows.Media.Media3D.Quaternion" /> to the given type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba59d-121">Obiekt, który został zbudowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba59d-121">Object that was constructed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>