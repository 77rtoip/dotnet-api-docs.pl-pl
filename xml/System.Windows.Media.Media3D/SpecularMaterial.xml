<Type Name="SpecularMaterial" FullName="System.Windows.Media.Media3D.SpecularMaterial">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3ac42b3219586b623a3e1ceb262149acfbbfdf1a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69447539" /></Metadata><TypeSignature Language="C#" Value="public sealed class SpecularMaterial : System.Windows.Media.Media3D.Material" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SpecularMaterial extends System.Windows.Media.Media3D.Material" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Media3D.SpecularMaterial" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SpecularMaterial&#xA;Inherits Material" />
  <TypeSignature Language="C++ CLI" Value="public ref class SpecularMaterial sealed : System::Windows::Media::Media3D::Material" />
  <TypeSignature Language="F#" Value="type SpecularMaterial = class&#xA;    inherit Material" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Media3D.Material</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zezwala na używanie pędzla 2-d, <see cref="T:System.Windows.Media.SolidColorBrush" /> takiego <see cref="T:System.Windows.Media.TileBrush" />jak lub, do zastosowania do modelu 3-d specularly.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Media3D.SpecularMaterial>dodaje kolor do innych materiałów, które są stosowane do siatki, zamiast odjęcia go.  
  
 <xref:System.Windows.Media.Media3D.SpecularMaterial>zastosowane do siatki zostanie oświetlone wszędzie tam, gdzie wystąpią odblasków dla modelu.  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie <xref:System.Windows.Media.Media3D.SpecularMaterial> i ustawia jego właściwości pędzla.  
  
 [!code-xaml[hittest3d#_MIL3D_HitTest3D_xaml_n1](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTest3D/CSharp/MyApp.xaml#_mil3d_hittest3d_xaml_n1)]  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159959">Przykład testowania trafień 3-D</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Media.Media3D.SpecularMaterial" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpecularMaterial ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.SpecularMaterial.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SpecularMaterial();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Media.Media3D.SpecularMaterial" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Media3D.SpecularMaterial>dodaje kolor do innych materiałów, które są stosowane do siatki, zamiast odjęcia go.  
  
 <xref:System.Windows.Media.Media3D.SpecularMaterial>zastosowane do siatki zostanie oświetlone wszędzie tam, gdzie wystąpią odblasków dla modelu.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159959">Przykład testowania trafień 3-D</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpecularMaterial (System.Windows.Media.Brush brush, double specularPower);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Media.Brush brush, float64 specularPower) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.SpecularMaterial.#ctor(System.Windows.Media.Brush,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SpecularMaterial(System::Windows::Media::Brush ^ brush, double specularPower);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Media3D.SpecularMaterial : System.Windows.Media.Brush * double -&gt; System.Windows.Media.Media3D.SpecularMaterial" Usage="new System.Windows.Media.Media3D.SpecularMaterial (brush, specularPower)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="brush" Type="System.Windows.Media.Brush" />
        <Parameter Name="specularPower" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="brush">Pędzel stosowany przez nowy <see cref="T:System.Windows.Media.Media3D.SpecularMaterial" />.</param>
        <param name="specularPower">Wykładnik odblasków.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.Media.Media3D.SpecularMaterial" /> klasy z określonym pędzlem i wykładnikiem odblasków.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Media3D.SpecularMaterial>dodaje kolor do innych materiałów, które są stosowane do siatki, zamiast odjęcia go.  
  
 <xref:System.Windows.Media.Media3D.SpecularMaterial>zastosowane do siatki zostanie oświetlone wszędzie tam, gdzie wystąpią odblasków dla modelu.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159959">Przykład testowania trafień 3-D</related>
      </Docs>
    </Member>
    <Member MemberName="Brush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush Brush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush Brush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Media3D.SpecularMaterial.Brush" />
      <MemberSignature Language="VB.NET" Value="Public Property Brush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ Brush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Brush : System.Windows.Media.Brush with get, set" Usage="System.Windows.Media.Media3D.SpecularMaterial.Brush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia [!INCLUDE[TLA#tla_2d](~/includes/tlasharptla-2d-md.md)] Pędzel, który ma zostać zastosowany do [!INCLUDE[TLA#tla_3d](~/includes/tlasharptla-3d-md.md)] modelu specularly.</summary>
        <value>Pędzel, który ma zostać zastosowany.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli dla elementu <xref:System.Windows.Media.Media3D.MeshGeometry3D>nie określono współrzędnych tekstury, jego materiał może nie być renderowany zgodnie z oczekiwaniami.  Jedynym wyjątkiem jest to, że ta właściwość określa <xref:System.Windows.Media.SolidColorBrush>. w tym przypadku materiał będzie renderowany przy użyciu domyślnego zestawu współrzędnych tekstury.  
  
<a name="dependencyPropertyInfo_BrushProperty"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.Media.Media3D.SpecularMaterial.BrushProperty>|  
|Właściwości metadanych ustawione na`true`|Brak|  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie <xref:System.Windows.Media.Media3D.SpecularMaterial> i ustawia jego właściwości pędzla.  
  
 [!code-xaml[hittest3d#_MIL3D_HitTest3D_xaml_n1](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTest3D/CSharp/MyApp.xaml#_mil3d_hittest3d_xaml_n1)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159959">Przykład testowania trafień 3-D</related>
      </Docs>
    </Member>
    <Member MemberName="BrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Media3D.SpecularMaterial.BrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BrushProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BrushProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Media3D.SpecularMaterial.BrushProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje właściwość <see cref="P:System.Windows.Media.Media3D.SpecularMaterial.Brush" /> zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Media3D.SpecularMaterial Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Media3D.SpecularMaterial Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.SpecularMaterial.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As SpecularMaterial" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Media3D::SpecularMaterial ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Media3D.SpecularMaterial" Usage="specularMaterial.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Media3D.SpecularMaterial</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy modyfikowalny klon tego <see cref="T:System.Windows.Media.Media3D.SpecularMaterial" />elementu, tworząc głębokie kopie wartości tego obiektu. Podczas kopiowania właściwości zależności ta metoda kopiuje odwołania do zasobów i powiązania danych (ale mogą nie być już rozpoznawane), ale nie ma animacji ani ich bieżących wartości.</summary>
        <returns>Modyfikowalny klon bieżącego obiektu. <see cref="P:System.Windows.Freezable.IsFrozen" /> Właściwość sklonowanego obiektu <see langword="false" /> będzie <see cref="P:System.Windows.Freezable.IsFrozen" /> nawet wtedy, gdy właściwość źródła była<see langword="true." /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do tworzenia modyfikowalnych kopii obiektów zamrożonych <xref:System.Windows.Freezable> (lub dowolnego <xref:System.Windows.Freezable> obiektu). Dla wygody ta metoda zaciemnienia dziedziczonej wersji z silnie wpisaną implementacją.  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Media3D.SpecularMaterial CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Media3D.SpecularMaterial CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.SpecularMaterial.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As SpecularMaterial" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Media3D::SpecularMaterial ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.Media.Media3D.SpecularMaterial" Usage="specularMaterial.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Media3D.SpecularMaterial</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy modyfikowalny klon tego <see cref="T:System.Windows.Media.Media3D.SpecularMaterial" /> obiektu, tworząc głębokie kopie bieżących wartości tego obiektu. Odwołania do zasobów, powiązania danych i animacje nie są kopiowane, ale ich bieżące wartości to.</summary>
        <returns>Modyfikowalny klon bieżącego obiektu. <see cref="P:System.Windows.Freezable.IsFrozen" /> Właściwość sklonowanego obiektu <see langword="false" /> będzie <see cref="P:System.Windows.Freezable.IsFrozen" /> nawet wtedy, gdy właściwość źródła była <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do tworzenia modyfikowalnych kopii obiektów zamrożonych <xref:System.Windows.Freezable> (lub dowolnego <xref:System.Windows.Freezable> obiektu). Dla wygody ta metoda zaciemnienia dziedziczonej wersji z silnie wpisaną implementacją.  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Color">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Color Color { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Color Color" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Media3D.SpecularMaterial.Color" />
      <MemberSignature Language="VB.NET" Value="Public Property Color As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Color Color { System::Windows::Media::Color get(); void set(System::Windows::Media::Color value); };" />
      <MemberSignature Language="F#" Value="member this.Color : System.Windows.Media.Color with get, set" Usage="System.Windows.Media.Media3D.SpecularMaterial.Color" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość, która filtruje właściwości koloru materiału zastosowanego do modelu.</summary>
        <value>Kolor, z którego ma zostać odfiltrowany materiał.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość ma wpływ na filtrowanie materiału zastosowanego do modelu przez określoną wartość koloru.  Na przykład ustawienie tej właściwości na `Colors.Red` occlude niebieską i zieloną w materiale.  
  
<a name="dependencyPropertyInfo_Color"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.Media.Media3D.SpecularMaterial.ColorProperty>|  
|Właściwości metadanych ustawione na`true`|Brak|  
  
   
  
## Examples  
 [!code-xaml[hittest3d#_MIL3D_HitTest3D_xaml_n1](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTest3D/CSharp/MyApp.xaml#_mil3d_hittest3d_xaml_n1)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159959">Przykład testowania trafień 3-D</related>
      </Docs>
    </Member>
    <Member MemberName="ColorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ColorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ColorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Media3D.SpecularMaterial.ColorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ColorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ColorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ColorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Media3D.SpecularMaterial.ColorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje właściwość <see cref="P:System.Windows.Media.Media3D.SpecularMaterial.Color" /> zależności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikator <xref:System.Windows.Media.Media3D.SpecularMaterial.Color%2A> właściwości zależności.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.SpecularMaterial.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="specularMaterial.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpecularPower">
      <MemberSignature Language="C#" Value="public double SpecularPower { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SpecularPower" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Media3D.SpecularMaterial.SpecularPower" />
      <MemberSignature Language="VB.NET" Value="Public Property SpecularPower As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SpecularPower { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.SpecularPower : double with get, set" Usage="System.Windows.Media.Media3D.SpecularMaterial.SpecularPower" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą stopień, w jakim materiał stosowany do modelu 3-D odzwierciedla model oświetlenia jako pełny.</summary>
        <value>Względne współudziały dla materiału zastosowanego jako [!INCLUDE[TLA2#tla_2d](~/includes/tla2sharptla-2d-md.md)] pędzel [!INCLUDE[TLA2#tla_3d](~/includes/tla2sharptla-3d-md.md)] do modelu, składnika odblasków modelu oświetlenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oświetlenie odblasków reprodukuje wygląd powierzchni, które są Shiny lub odzwierciedlają najważniejsze elementy. Ta właściwość wskazuje względną wartość "współczynnika połysku" materiału zastosowanego do modelu.  Większa wartość tej właściwości określa większy rozmiar i ostrość w pozostałej części materiału.  
  
<a name="dependencyPropertyInfo_SpecularPowerProperty"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.Media.Media3D.SpecularMaterial.SpecularPowerProperty>|  
|Właściwości metadanych ustawione na`true`|Brak|  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie klasy <xref:System.Windows.Media.Media3D.SpecularMaterial> i ustawia tę właściwość.  
  
 [!code-xaml[hittest3d#_MIL3D_HitTest3D_xaml_n1](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTest3D/CSharp/MyApp.xaml#_mil3d_hittest3d_xaml_n1)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159959">Przykład testowania trafień 3-D</related>
      </Docs>
    </Member>
    <Member MemberName="SpecularPowerProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SpecularPowerProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SpecularPowerProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Media3D.SpecularMaterial.SpecularPowerProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SpecularPowerProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SpecularPowerProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SpecularPowerProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Media3D.SpecularMaterial.SpecularPowerProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje właściwość <see cref="P:System.Windows.Media.Media3D.SpecularMaterial.SpecularPower" /> zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
