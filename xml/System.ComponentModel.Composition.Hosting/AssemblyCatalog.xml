<Type Name="AssemblyCatalog" FullName="System.ComponentModel.Composition.Hosting.AssemblyCatalog">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d0ca83c848facec562749dd24349c5c7da2f3f4a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30440370" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AssemblyCatalog : System.ComponentModel.Composition.Primitives.ComposablePartCatalog, System.ComponentModel.Composition.Primitives.ICompositionElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AssemblyCatalog extends System.ComponentModel.Composition.Primitives.ComposablePartCatalog implements class System.ComponentModel.Composition.Primitives.ICompositionElement" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />
  <TypeSignature Language="VB.NET" Value="Public Class AssemblyCatalog&#xA;Inherits ComposablePartCatalog&#xA;Implements ICompositionElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyCatalog : System::ComponentModel::Composition::Primitives::ComposablePartCatalog, System::ComponentModel::Composition::Primitives::ICompositionElement" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Composition.Primitives.ComposablePartCatalog</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Composition.Primitives.ICompositionElement</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.ComponentModel.Composition.Hosting.AssemblyCatalogDebuggerProxy))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Odnajduje oparte na atrybutach części w zestawie kodu zarządzanego.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> Używany do przeanalizowania wszystkich części znajdujących się w określonym zestawie. Zestaw docelowy mogą być wskazywane przez odwołanie do obiektu lub ścieżki.  
  
> [!IMPORTANT]
>  Ten typ implementuje <xref:System.IDisposable> interfejsu. Po zakończeniu przy użyciu typu bezpośrednio lub pośrednio należy usunąć z niego. Do usuwania tego typu, należy wywołać jej <xref:System.IDisposable.Dispose%2A> metody w `try` / `catch` bloku. Do usunięcia ich pośrednio, użyj konstrukcji języka takiego jak `using` (w języku C#) lub `Using` (w języku Visual Basic). Aby uzyskać więcej informacji, zobacz sekcję "Przy użyciu obiektu który implementuje interfejs IDisposable" w <xref:System.IDisposable> interfejsu tematu.  
  
 Ten typ jest bezpieczny wątkowo.  
  
   
  
## Examples  
 Poniższy kod przedstawia typowy scenariusz tworzenia aplikacji <xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> przeanalizować własny zestaw. Jest to łatwe można załadować części zawarte w jednym projekcie w ramach zarządzanego rozszerzalności (MEF).  
  
 [!code-csharp[Composition.CompositionContainer#1](~/samples/snippets/csharp/VS_Snippets_Misc/composition.compositioncontainer/cs/program.cs#1)]
 [!code-vb[Composition.CompositionContainer#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/composition.compositioncontainer/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::Reflection::Assembly ^ assembly);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly">Zestaw zawierający oparte na atrybutach <see cref="T:System.Type" /> obiekty do dodania do <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> obiektu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> klasy z określonego zestawu.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="assembly" /> jest <see langword="null" />.  
  
 —lub—  
  
 <paramref name="assembly" /> został załadowany w kontekstu reflection-only.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (string codeBase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string codeBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (codeBase As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::String ^ codeBase);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeBase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="codeBase">Ciąg określający ścieżki bazowej kodu zestawu (to znaczy, że ścieżka do pliku zestawu) zawiera oparte na atrybutach <see cref="T:System.Type" /> obiekty do dodania do <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> obiektu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> klasy z określonym kodem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Odwołuje się zestaw `codeBase` jest ładowany w kontekście ładowania.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.BadImageFormatException">
          <paramref name="codeBase" /> nie jest prawidłowym zestawem.  
  
 —lub—  
  
 W wersji 2.0 lub starszego aparatu plików wykonywalnych języka wspólnego jest aktualnie załadowany i <paramref name="codeBase" /> został skompilowany przy użyciu nowszej wersji.</exception>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący nie ma uprawnień odnajdywania ścieżki.</exception>
        <exception cref="T:System.IO.FileLoadException">
          <paramref name="codeBase" /> Nie można załadować.  
  
 —lub—  
  
 <paramref name="codeBase" /> określony katalog.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="codeBase" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <paramref name="codeBase" /> Nie znaleziono.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="codeBase" /> jest ciągiem o zerowej długości, zawiera tylko biały znak lub zawiera jeden lub więcej nieprawidłowych znaków, zgodnie z definicją w <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Podana ścieżka, nazwa pliku lub obie przekraczają maksymalną długość zdefiniowaną przez system.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (System.Reflection.Assembly assembly, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Assembly assembly, class System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::Reflection::Assembly ^ assembly, System::ComponentModel::Composition::Primitives::ICompositionElement ^ definitionOrigin);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="definitionOrigin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="assembly">Zestaw zawierający oparte na atrybutach <see cref="T:System.Type" /> obiekty do dodania do <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> obiektu.</param>
        <param name="definitionOrigin">Element używany przez diagnostyki do identyfikowania źródeł części.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> klasy z określonego zestawu.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="assembly" /> lub <paramref name="definitionOrigin" /> jest <see langword="null" />.  
  
 —lub—  
  
 <paramref name="assembly" /> został załadowany w kontekstu reflection-only.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (System.Reflection.Assembly assembly, System.Reflection.ReflectionContext reflectionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Assembly assembly, class System.Reflection.ReflectionContext reflectionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly,System.Reflection.ReflectionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::Reflection::Assembly ^ assembly, System::Reflection::ReflectionContext ^ reflectionContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" />
      </Parameters>
      <Docs>
        <param name="assembly">Zestaw zawierający oparte na atrybutach <see cref="T:System.Type" /> obiekty do dodania do <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> obiektu.</param>
        <param name="reflectionContext">Kontekst używane przez wykaz, aby zinterpretować typów.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> klasy z określonego zestawu i odbicie kontekstu.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="assembly" /> lub <paramref name="reflectionContext" /> jest <see langword="null" />.  
  
 —lub—  
  
 <paramref name="assembly" /> został załadowany w kontekstu reflection-only.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (string codeBase, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string codeBase, class System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (codeBase As String, definitionOrigin As ICompositionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::String ^ codeBase, System::ComponentModel::Composition::Primitives::ICompositionElement ^ definitionOrigin);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeBase" Type="System.String" />
        <Parameter Name="definitionOrigin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="codeBase">Ciąg określający ścieżki bazowej kodu zestawu (to znaczy, że ścieżka do pliku zestawu) zawiera oparte na atrybutach <see cref="T:System.Type" /> obiekty do dodania do <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> obiektu.</param>
        <param name="definitionOrigin">Element używany przez diagnostyki do identyfikowania źródeł części.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> klasy z określonym kodem.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.BadImageFormatException">
          <paramref name="codeBase" /> nie jest prawidłowym zestawem.  
  
 —lub—  
  
 W wersji 2.0 lub nowszej środowisko uruchomieniowe języka wspólnego jest aktualnie załadowany i <paramref name="codeBase" /> został skompilowany przy użyciu nowszej wersji.</exception>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący nie ma uprawnień odnajdywania ścieżki.</exception>
        <exception cref="T:System.IO.FileLoadException">
          <paramref name="codeBase" /> Nie można załadować.  
  
 —lub—  
  
 <paramref name="codeBase" /> określony katalog.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="codebase" /> lub <paramref name="definitionOrigin" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <paramref name="codeBase" /> Nie znaleziono.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="codeBase" /> jest ciągiem o zerowej długości, zawiera tylko biały znak lub zawiera jeden lub więcej nieprawidłowych znaków, zgodnie z definicją w <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Podana ścieżka, nazwa pliku lub obie przekraczają maksymalną długość zdefiniowaną przez system.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (string codeBase, System.Reflection.ReflectionContext reflectionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string codeBase, class System.Reflection.ReflectionContext reflectionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String,System.Reflection.ReflectionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::String ^ codeBase, System::Reflection::ReflectionContext ^ reflectionContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeBase" Type="System.String" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" />
      </Parameters>
      <Docs>
        <param name="codeBase">Ciąg określający ścieżki bazowej kodu zestawu (to znaczy, że ścieżka do pliku zestawu) zawiera oparte na atrybutach <see cref="T:System.Type" /> obiekty do dodania do <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> obiektu.</param>
        <param name="reflectionContext">Kontekst używane przez wykaz, aby zinterpretować typów.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> klasy z kontekstem podstawowe i odbicie określony kod.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.BadImageFormatException">
          <paramref name="codeBase" /> nie jest prawidłowym zestawem.  
  
 —lub—  
  
 W wersji 2.0 lub nowszej środowisko uruchomieniowe języka wspólnego jest aktualnie załadowany i <paramref name="codeBase" /> został skompilowany przy użyciu nowszej wersji.</exception>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący nie ma uprawnień odnajdywania ścieżki.</exception>
        <exception cref="T:System.IO.FileLoadException">
          <paramref name="codeBase" /> Nie można załadować.  
  
 —lub—  
  
 <paramref name="codeBase" /> określony katalog.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="codebase" /> lub <paramref name="reflectionContext" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <paramref name="codeBase" /> Nie znaleziono.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="codeBase" /> jest ciągiem o zerowej długości, zawiera tylko biały znak lub zawiera jeden lub więcej nieprawidłowych znaków, zgodnie z definicją w <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Podana ścieżka, nazwa pliku lub obie przekraczają maksymalną długość zdefiniowaną przez system.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (System.Reflection.Assembly assembly, System.Reflection.ReflectionContext reflectionContext, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Assembly assembly, class System.Reflection.ReflectionContext reflectionContext, class System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::Reflection::Assembly ^ assembly, System::Reflection::ReflectionContext ^ reflectionContext, System::ComponentModel::Composition::Primitives::ICompositionElement ^ definitionOrigin);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" />
        <Parameter Name="definitionOrigin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="assembly">Zestaw zawierający oparte na atrybutach <see cref="T:System.Type" /> obiekty do dodania do <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> obiektu.</param>
        <param name="reflectionContext">Kontekst używane przez wykaz, aby zinterpretować typów.</param>
        <param name="definitionOrigin">Element używany przez diagnostyki do identyfikowania źródeł części.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> klasy z określonego zestawu i odbicie kontekstu.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="assembly" />, <paramref name="definitionOrigin" />, lub <paramref name="reflectionContext" /> jest <see langword="null" />.  
  
 —lub—  
  
 <paramref name="assembly" /> został załadowany w kontekstu reflection-only.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (string codeBase, System.Reflection.ReflectionContext reflectionContext, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string codeBase, class System.Reflection.ReflectionContext reflectionContext, class System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::String ^ codeBase, System::Reflection::ReflectionContext ^ reflectionContext, System::ComponentModel::Composition::Primitives::ICompositionElement ^ definitionOrigin);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeBase" Type="System.String" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" />
        <Parameter Name="definitionOrigin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="codeBase">Ciąg określający ścieżki bazowej kodu zestawu (to znaczy, że ścieżka do pliku zestawu) zawiera oparte na atrybutach <see cref="T:System.Type" /> obiekty do dodania do <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> obiektu.</param>
        <param name="reflectionContext">Kontekst używane przez wykaz, aby zinterpretować typów.</param>
        <param name="definitionOrigin">Element używany przez diagnostyki do identyfikowania źródeł części.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> klasy z kontekstem podstawowe i odbicie określony kod.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.BadImageFormatException">
          <paramref name="codeBase" /> nie jest prawidłowym zestawem.  
  
 —lub—  
  
 W wersji 2.0 lub nowszej środowisko uruchomieniowe języka wspólnego jest aktualnie załadowany i <paramref name="codeBase" /> został skompilowany przy użyciu nowszej wersji.</exception>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący nie ma uprawnień odnajdywania ścieżki.</exception>
        <exception cref="T:System.IO.FileLoadException">
          <paramref name="codeBase" /> Nie można załadować.  
  
 —lub—  
  
 <paramref name="codeBase" /> określony katalog.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="codebase" />, <paramref name="definitionOrigin" /> lub <paramref name="reflectionContext" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <paramref name="codeBase" /> Nie znaleziono.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="codeBase" /> jest ciągiem o zerowej długości, zawiera tylko biały znak lub zawiera jeden lub więcej nieprawidłowych znaków, zgodnie z definicją w <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Podana ścieżka, nazwa pliku lub obie przekraczają maksymalną długość zdefiniowaną przez system.</exception>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly Assembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Assembly ^ Assembly { System::Reflection::Assembly ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera zestaw, których typy oparte na atrybutach znajdują się w katalogu zestawu.</summary>
        <value>Zestaw którego oparte na atrybutach <see cref="T:System.Type" /> obiekty są zawarte w <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko zasoby niezarządzane.</param>
        <summary>Zwalnia zasoby niezarządzane używane przez <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> i opcjonalnie zwalnia zasoby zarządzane.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerator&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator(Of ComposablePartDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IEnumerator&lt;System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^&gt; ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca moduł wyliczający, który iteruje po katalogu.</summary>
        <returns>Moduł wyliczający, który może służyć do iterowania po katalogu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExports">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;Tuple&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt; GetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Tuple`2&lt;class System.ComponentModel.Composition.Primitives.ComposablePartDefinition, class System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt; GetExports(class System.ComponentModel.Composition.Primitives.ImportDefinition definition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetExports (definition As ImportDefinition) As IEnumerable(Of Tuple(Of ComposablePartDefinition, ExportDefinition))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IEnumerable&lt;Tuple&lt;System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^, System::ComponentModel::Composition::Primitives::ExportDefinition ^&gt; ^&gt; ^ GetExports(System::ComponentModel::Composition::Primitives::ImportDefinition ^ definition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Tuple&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
      </Parameters>
      <Docs>
        <param name="definition">Warunki określające, które eksportuje do dopasowania.</param>
        <summary>Pobiera kolekcję eksportu, które spełnia warunki określone w definicji importu.</summary>
        <returns>Kolekcja eksportu spełniających kryteria określone przez <paramref name="definition" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName">
      <MemberSignature Language="C#" Value="string System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DisplayName As String Implements ICompositionElement.DisplayName" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę wyświetlaną <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> obiektu.</summary>
        <value>Ciąg reprezentujący typ i zestaw tego <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> wystąpienia jest rzutowane na <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Composition.Primitives.ICompositionElement.Origin">
      <MemberSignature Language="C#" Value="System.ComponentModel.Composition.Primitives.ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.Origin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Composition.Primitives.ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.Origin" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Origin As ICompositionElement Implements ICompositionElement.Origin" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::Composition::Primitives::ICompositionElement ^ System.ComponentModel.Composition.Primitives.ICompositionElement.Origin { System::ComponentModel::Composition::Primitives::ICompositionElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Composition.Primitives.ICompositionElement.Origin</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ICompositionElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera element kompozycji, do którego ten element pochodzi z.</summary>
        <value>Zawsze <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> wystąpienia jest rzutowane na <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera reprezentację ciągu obiektu katalogu zestawu.</summary>
        <returns>Reprezentacja katalogu zestawu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>