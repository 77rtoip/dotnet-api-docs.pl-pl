<Type Name="ImportEngine" FullName="System.ComponentModel.Composition.Hosting.ImportEngine">
  <Metadata><Meta Name="ms.openlocfilehash" Value="697de33454fecd6ee59c23c4a326e406a2b08a74" /><Meta Name="ms.sourcegitcommit" Value="690605a2d62010b93e13edf329aafe2bdc57423a" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="07/11/2019" /><Meta Name="ms.locfileid" Value="67801257" /></Metadata><TypeSignature Language="C#" Value="public class ImportEngine : IDisposable, System.ComponentModel.Composition.ICompositionService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImportEngine extends System.Object implements class System.ComponentModel.Composition.ICompositionService, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Hosting.ImportEngine" />
  <TypeSignature Language="VB.NET" Value="Public Class ImportEngine&#xA;Implements ICompositionService, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportEngine : IDisposable, System::ComponentModel::Composition::ICompositionService" />
  <TypeSignature Language="F#" Value="type ImportEngine = class&#xA;    interface ICompositionService&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Composition.ICompositionService</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="32747-101">Wykonuje kompozycji dla kontenerów.</span><span class="sxs-lookup"><span data-stu-id="32747-101">Performs composition for containers.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32747-102">Ta klasa jest używana wewnętrznie przez <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.</span><span class="sxs-lookup"><span data-stu-id="32747-102">This class is used internally by <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.</span></span> <span data-ttu-id="32747-103">Zazwyczaj nie należy używać go, chyba że tworzenia kontenera.</span><span class="sxs-lookup"><span data-stu-id="32747-103">You should generally not use it unless you are authoring a container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="32747-104">Ten typ implementuje <xref:System.IDisposable> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="32747-104">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="32747-105">Po zakończeniu przy użyciu typu bezpośrednio lub pośrednio należy usunąć z niej.</span><span class="sxs-lookup"><span data-stu-id="32747-105">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="32747-106">Do usuwania tego typu, należy wywołać jej <xref:System.IDisposable.Dispose%2A> method in Class metoda `try` / `catch` bloku.</span><span class="sxs-lookup"><span data-stu-id="32747-106">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="32747-107">Aby usunąć ją pośrednio, użyj konstrukcją języka pierwszej klasy takiej jak `using` (w języku C#) lub `Using` (w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="32747-107">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="32747-108">Aby uzyskać więcej informacji, zobacz sekcję "Przy użyciu obiektu który implementuje interfejs IDisposable" w <xref:System.IDisposable> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="32747-108">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="32747-109">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="32747-109">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportEngine (System.ComponentModel.Composition.Hosting.ExportProvider sourceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Composition.Hosting.ExportProvider sourceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourceProvider As ExportProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportEngine(System::ComponentModel::Composition::Hosting::ExportProvider ^ sourceProvider);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.ImportEngine : System.ComponentModel.Composition.Hosting.ExportProvider -&gt; System.ComponentModel.Composition.Hosting.ImportEngine" Usage="new System.ComponentModel.Composition.Hosting.ImportEngine sourceProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="sourceProvider" Type="System.ComponentModel.Composition.Hosting.ExportProvider" />
      </Parameters>
      <Docs>
        <param name="sourceProvider"><span data-ttu-id="32747-110"><see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> Zapewniający <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> dostęp do <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="32747-110">The <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> that provides the <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> access to <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects.</span></span></param>
        <summary><span data-ttu-id="32747-111">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="32747-111">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportEngine (System.ComponentModel.Composition.Hosting.ExportProvider sourceProvider, bool isThreadSafe);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Composition.Hosting.ExportProvider sourceProvider, bool isThreadSafe) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourceProvider As ExportProvider, isThreadSafe As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportEngine(System::ComponentModel::Composition::Hosting::ExportProvider ^ sourceProvider, bool isThreadSafe);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.ImportEngine : System.ComponentModel.Composition.Hosting.ExportProvider * bool -&gt; System.ComponentModel.Composition.Hosting.ImportEngine" Usage="new System.ComponentModel.Composition.Hosting.ImportEngine (sourceProvider, isThreadSafe)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sourceProvider" Type="System.ComponentModel.Composition.Hosting.ExportProvider" />
        <Parameter Name="isThreadSafe" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sourceProvider"><span data-ttu-id="32747-112"><see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> Zapewniający <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> dostęp do <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="32747-112">The <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> that provides the <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> access to <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects.</span></span></param>
        <param name="isThreadSafe"><span data-ttu-id="32747-113"><see langword="true" /> Jeśli bezpieczeństwo wątków jest wymagana. w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="32747-113"><see langword="true" /> if thread safety is required; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="32747-114">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> klasy, opcjonalnie w trybie metodą o bezpiecznych wątkach.</span><span class="sxs-lookup"><span data-stu-id="32747-114">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> class, optionally in thread-safe mode.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportEngine (System.ComponentModel.Composition.Hosting.ExportProvider sourceProvider, System.ComponentModel.Composition.Hosting.CompositionOptions compositionOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Composition.Hosting.ExportProvider sourceProvider, valuetype System.ComponentModel.Composition.Hosting.CompositionOptions compositionOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider,System.ComponentModel.Composition.Hosting.CompositionOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportEngine(System::ComponentModel::Composition::Hosting::ExportProvider ^ sourceProvider, System::ComponentModel::Composition::Hosting::CompositionOptions compositionOptions);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.ImportEngine : System.ComponentModel.Composition.Hosting.ExportProvider * System.ComponentModel.Composition.Hosting.CompositionOptions -&gt; System.ComponentModel.Composition.Hosting.ImportEngine" Usage="new System.ComponentModel.Composition.Hosting.ImportEngine (sourceProvider, compositionOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sourceProvider" Type="System.ComponentModel.Composition.Hosting.ExportProvider" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="compositionOptions" Type="System.ComponentModel.Composition.Hosting.CompositionOptions" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="sourceProvider"><span data-ttu-id="32747-115"><see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> Zapewniający <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> dostęp do <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="32747-115">The <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> that provides the <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> access to <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects.</span></span></param>
        <param name="compositionOptions"><span data-ttu-id="32747-116">Obiekt, który określa opcje, które mają wpływ na zachowanie aparatu.</span><span class="sxs-lookup"><span data-stu-id="32747-116">An object that specifies options that affect the behavior of the engine.</span></span></param>
        <summary><span data-ttu-id="32747-117">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> klasy przy użyciu określonych opcji.</span><span class="sxs-lookup"><span data-stu-id="32747-117">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> class with the specified options.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="32747-118">Zwalnia zasoby używane przez <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" />.</span><span class="sxs-lookup"><span data-stu-id="32747-118">Releases the resources used by the <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="importEngine.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="32747-119">Zwalnia wszelkie zasoby używane przez bieżące wystąpienie <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="32747-119">Releases all resources used by the current instance of the <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32747-120">Wywołaj `Dispose` po zakończeniu przy użyciu <xref:System.ComponentModel.Composition.Hosting.ImportEngine>.</span><span class="sxs-lookup"><span data-stu-id="32747-120">Call `Dispose` when you are finished using the <xref:System.ComponentModel.Composition.Hosting.ImportEngine>.</span></span> <span data-ttu-id="32747-121">`Dispose` Pozostawia metoda <xref:System.ComponentModel.Composition.Hosting.ImportEngine> w stanie uniemożliwiającym jego używanie.</span><span class="sxs-lookup"><span data-stu-id="32747-121">The `Dispose` method leaves the <xref:System.ComponentModel.Composition.Hosting.ImportEngine> in an unusable state.</span></span> <span data-ttu-id="32747-122">Po wywołaniu `Dispose`, trzeba zwolnić wszystkie odwołania do <xref:System.ComponentModel.Composition.Hosting.ImportEngine> , moduł zbierający elementy bezużyteczne mógł odzyskać pamięć, <xref:System.ComponentModel.Composition.Hosting.ImportEngine> zajmowaną przez wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="32747-122">After calling `Dispose`, you must release all references to the <xref:System.ComponentModel.Composition.Hosting.ImportEngine> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Composition.Hosting.ImportEngine> was occupying.</span></span>  
  
 <span data-ttu-id="32747-123">Aby uzyskać więcej informacji, zobacz [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) i [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="32747-123">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="32747-124">Zawsze wywołuj `Dispose` przed publikacją swoje ostatnie odwołanie do <xref:System.ComponentModel.Composition.Hosting.ImportEngine>.</span><span class="sxs-lookup"><span data-stu-id="32747-124">Always call `Dispose` before you release your last reference to the <xref:System.ComponentModel.Composition.Hosting.ImportEngine>.</span></span> <span data-ttu-id="32747-125">W przeciwnym razie zasobów jest przy użyciu nie zostanie zwolniona, dopóki moduł odśmiecania pamięci wywołuje <xref:System.ComponentModel.Composition.Hosting.ImportEngine> obiektu `Finalize` metody.</span><span class="sxs-lookup"><span data-stu-id="32747-125">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Composition.Hosting.ImportEngine> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="importEngine.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="32747-126"><see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko niezarządzane zasoby.</span><span class="sxs-lookup"><span data-stu-id="32747-126"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="32747-127">Zwalnia zasoby niezarządzane używane przez <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> i opcjonalnie zwalnia zasoby zarządzane.</span><span class="sxs-lookup"><span data-stu-id="32747-127">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewImports">
      <MemberSignature Language="C#" Value="public void PreviewImports (System.ComponentModel.Composition.Primitives.ComposablePart part, System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PreviewImports(class System.ComponentModel.Composition.Primitives.ComposablePart part, class System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ImportEngine.PreviewImports(System.ComponentModel.Composition.Primitives.ComposablePart,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreviewImports(System::ComponentModel::Composition::Primitives::ComposablePart ^ part, System::ComponentModel::Composition::Hosting::AtomicComposition ^ atomicComposition);" />
      <MemberSignature Language="F#" Value="member this.PreviewImports : System.ComponentModel.Composition.Primitives.ComposablePart * System.ComponentModel.Composition.Hosting.AtomicComposition -&gt; unit" Usage="importEngine.PreviewImports (part, atomicComposition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePart" />
        <Parameter Name="atomicComposition" Type="System.ComponentModel.Composition.Hosting.AtomicComposition" />
      </Parameters>
      <Docs>
        <param name="part"><span data-ttu-id="32747-128">Część operacji importu w wersji zapoznawczej.</span><span class="sxs-lookup"><span data-stu-id="32747-128">The part to preview the imports of.</span></span></param>
        <param name="atomicComposition"><span data-ttu-id="32747-129">Skład transakcji do użycia, lub <see langword="null" /> nie transakcji kompozycji.</span><span class="sxs-lookup"><span data-stu-id="32747-129">The composition transaction to use, or <see langword="null" /> for no composition transaction.</span></span></param>
        <summary><span data-ttu-id="32747-130">Wyświetla podgląd wszystkich wymaganych importów dla określonej części upewnić się, że mogą być spełnione, bez faktycznie ich ustawienie.</span><span class="sxs-lookup"><span data-stu-id="32747-130">Previews all the required imports for the specified part to make sure that they can be satisfied, without actually setting them.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.Composition.CompositionException"><span data-ttu-id="32747-131">Wystąpił błąd podczas wyświetlania podglądu, a <paramref name="atomicComposition" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="32747-131">An error occurred during previewing, and <paramref name="atomicComposition" /> is <see langword="null" />.</span></span> <span data-ttu-id="32747-132"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> zawiera kolekcję błędy, które wystąpiły.</span><span class="sxs-lookup"><span data-stu-id="32747-132"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of errors that occurred.</span></span> <span data-ttu-id="32747-133">Istniejące kompozycji jest w nieznanym stanie, w zależności od błędów, które wystąpiły.</span><span class="sxs-lookup"><span data-stu-id="32747-133">The pre-existing composition is in an unknown state, depending on the errors that occurred.</span></span></exception>
        <exception cref="T:System.ComponentModel.Composition.ChangeRejectedException"><span data-ttu-id="32747-134">Wystąpił błąd podczas wyświetlania podglądu, a <paramref name="atomicComposition" /> nie <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="32747-134">An error occurred during previewing, and <paramref name="atomicComposition" /> is not <see langword="null" />.</span></span> <span data-ttu-id="32747-135"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> zawiera kolekcję błędy, które wystąpiły.</span><span class="sxs-lookup"><span data-stu-id="32747-135"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of errors that occurred.</span></span> <span data-ttu-id="32747-136">Istniejące kompozycji pozostaje w nieprawidłowym stanie.</span><span class="sxs-lookup"><span data-stu-id="32747-136">The pre-existing composition remains in valid state.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="32747-137"><see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> Został usunięty.</span><span class="sxs-lookup"><span data-stu-id="32747-137">The <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReleaseImports">
      <MemberSignature Language="C#" Value="public void ReleaseImports (System.ComponentModel.Composition.Primitives.ComposablePart part, System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseImports(class System.ComponentModel.Composition.Primitives.ComposablePart part, class System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ImportEngine.ReleaseImports(System.ComponentModel.Composition.Primitives.ComposablePart,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseImports(System::ComponentModel::Composition::Primitives::ComposablePart ^ part, System::ComponentModel::Composition::Hosting::AtomicComposition ^ atomicComposition);" />
      <MemberSignature Language="F#" Value="member this.ReleaseImports : System.ComponentModel.Composition.Primitives.ComposablePart * System.ComponentModel.Composition.Hosting.AtomicComposition -&gt; unit" Usage="importEngine.ReleaseImports (part, atomicComposition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePart" />
        <Parameter Name="atomicComposition" Type="System.ComponentModel.Composition.Hosting.AtomicComposition" />
      </Parameters>
      <Docs>
        <param name="part"><span data-ttu-id="32747-138">Część wersji operacji importu.</span><span class="sxs-lookup"><span data-stu-id="32747-138">The part to release the imports of.</span></span></param>
        <param name="atomicComposition"><span data-ttu-id="32747-139">Skład transakcji do użycia, lub <see langword="null" /> nie transakcji kompozycji.</span><span class="sxs-lookup"><span data-stu-id="32747-139">The composition transaction to use, or <see langword="null" /> for no composition transaction.</span></span></param>
        <summary><span data-ttu-id="32747-140">Zwalnia wszystkich eksporty użyte do zaspokojenia polecenie importuje określona część.</span><span class="sxs-lookup"><span data-stu-id="32747-140">Releases all the exports used to satisfy the imports of the specified part.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SatisfyImports">
      <MemberSignature Language="C#" Value="public void SatisfyImports (System.ComponentModel.Composition.Primitives.ComposablePart part);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SatisfyImports(class System.ComponentModel.Composition.Primitives.ComposablePart part) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ImportEngine.SatisfyImports(System.ComponentModel.Composition.Primitives.ComposablePart)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SatisfyImports (part As ComposablePart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SatisfyImports(System::ComponentModel::Composition::Primitives::ComposablePart ^ part);" />
      <MemberSignature Language="F#" Value="member this.SatisfyImports : System.ComponentModel.Composition.Primitives.ComposablePart -&gt; unit" Usage="importEngine.SatisfyImports part" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePart" />
      </Parameters>
      <Docs>
        <param name="part"><span data-ttu-id="32747-141">Części do spełnienia operacji importu.</span><span class="sxs-lookup"><span data-stu-id="32747-141">The part to satisfy the imports of.</span></span></param>
        <summary><span data-ttu-id="32747-142">Spełnia polecenie importuje określona część.</span><span class="sxs-lookup"><span data-stu-id="32747-142">Satisfies the imports of the specified part.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="32747-143"><paramref name="part" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="32747-143"><paramref name="part" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionException"><span data-ttu-id="32747-144">Wystąpił błąd podczas tworzenia.</span><span class="sxs-lookup"><span data-stu-id="32747-144">An error occurred during composition.</span></span> <span data-ttu-id="32747-145"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> zawiera kolekcję błędy, które wystąpiły.</span><span class="sxs-lookup"><span data-stu-id="32747-145"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of errors that occurred.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="32747-146"><see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> Został usunięty.</span><span class="sxs-lookup"><span data-stu-id="32747-146">The <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SatisfyImportsOnce">
      <MemberSignature Language="C#" Value="public void SatisfyImportsOnce (System.ComponentModel.Composition.Primitives.ComposablePart part);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SatisfyImportsOnce(class System.ComponentModel.Composition.Primitives.ComposablePart part) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ImportEngine.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SatisfyImportsOnce (part As ComposablePart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SatisfyImportsOnce(System::ComponentModel::Composition::Primitives::ComposablePart ^ part);" />
      <MemberSignature Language="F#" Value="abstract member SatisfyImportsOnce : System.ComponentModel.Composition.Primitives.ComposablePart -&gt; unit&#xA;override this.SatisfyImportsOnce : System.ComponentModel.Composition.Primitives.ComposablePart -&gt; unit" Usage="importEngine.SatisfyImportsOnce part" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Composition.ICompositionService.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePart" />
      </Parameters>
      <Docs>
        <param name="part"><span data-ttu-id="32747-147">Części do spełnienia operacji importu.</span><span class="sxs-lookup"><span data-stu-id="32747-147">The part to satisfy the imports of.</span></span></param>
        <summary><span data-ttu-id="32747-148">Spełnia polecenie importuje określona część, bez rejestrowania ich w celu recomposition.</span><span class="sxs-lookup"><span data-stu-id="32747-148">Satisfies the imports of the specified part without registering them for recomposition.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="32747-149"><paramref name="part" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="32747-149"><paramref name="part" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionException"><span data-ttu-id="32747-150">Wystąpił błąd podczas tworzenia.</span><span class="sxs-lookup"><span data-stu-id="32747-150">An error occurred during composition.</span></span> <span data-ttu-id="32747-151"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> zawiera kolekcję błędy, które wystąpiły.</span><span class="sxs-lookup"><span data-stu-id="32747-151"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of errors that occurred.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="32747-152"><see cref="T:System.ComponentModel.Composition.ICompositionService" /> Został usunięty.</span><span class="sxs-lookup"><span data-stu-id="32747-152">The <see cref="T:System.ComponentModel.Composition.ICompositionService" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
