<Type Name="TypeCatalog" FullName="System.ComponentModel.Composition.Hosting.TypeCatalog">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c6bf6aa58bf7d6d7ef92603ae36b254973b33e75" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39836705" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TypeCatalog : System.ComponentModel.Composition.Primitives.ComposablePartCatalog, System.ComponentModel.Composition.Primitives.ICompositionElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeCatalog extends System.ComponentModel.Composition.Primitives.ComposablePartCatalog implements class System.ComponentModel.Composition.Primitives.ICompositionElement" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Hosting.TypeCatalog" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeCatalog&#xA;Inherits ComposablePartCatalog&#xA;Implements ICompositionElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeCatalog : System::ComponentModel::Composition::Primitives::ComposablePartCatalog, System::ComponentModel::Composition::Primitives::ICompositionElement" />
  <TypeSignature Language="F#" Value="type TypeCatalog = class&#xA;    inherit ComposablePartCatalog&#xA;    interface ICompositionElement" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Composition.Primitives.ComposablePartCatalog</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Composition.Primitives.ICompositionElement</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.ComponentModel.Composition.Primitives.ComposablePartCatalogDebuggerProxy))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="52c70-101">Odnajduje opartego na atrybutach składniki Report Part z kolekcją typów.</span>
      <span class="sxs-lookup">
        <span data-stu-id="52c70-101">Discovers attributed parts from a collection of types.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="52c70-102">Ten typ implementuje <xref:System.IDisposable> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="52c70-102">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="52c70-103">Po zakończeniu przy użyciu typu bezpośrednio lub pośrednio należy usunąć z niej.</span><span class="sxs-lookup"><span data-stu-id="52c70-103">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="52c70-104">Do usuwania tego typu, należy wywołać jej <xref:System.IDisposable.Dispose%2A> method in Class metoda `try` / `catch` bloku.</span><span class="sxs-lookup"><span data-stu-id="52c70-104">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="52c70-105">Aby usunąć ją pośrednio, użyj konstrukcją języka pierwszej klasy takiej jak `using` (w języku C#) lub `Using` (w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="52c70-105">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="52c70-106">Aby uzyskać więcej informacji, zobacz sekcję "Przy użyciu obiektu który implementuje interfejs IDisposable" w <xref:System.IDisposable> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="52c70-106">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="52c70-107">Ta klasa jest bezpieczny dla wątków.</span><span class="sxs-lookup"><span data-stu-id="52c70-107">This class is thread safe.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="52c70-108">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-108">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeCatalog (System.Collections.Generic.IEnumerable&lt;Type&gt; types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (types As IEnumerable(Of Type))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeCatalog(System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.TypeCatalog : seq&lt;Type&gt; -&gt; System.ComponentModel.Composition.Hosting.TypeCatalog" Usage="new System.ComponentModel.Composition.Hosting.TypeCatalog types" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="types" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="types">
          <span data-ttu-id="52c70-109">Kolekcja opartego na atrybutach <see cref="T:System.Type" /> obiektów, aby dodać do <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-109">A collection of attributed <see cref="T:System.Type" /> objects to add to the <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52c70-110">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> klasy przy użyciu określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-110">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> class with the specified types.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52c70-111">
            <paramref name="types" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-111">
              <paramref name="types" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="52c70-112">
            <paramref name="types" /> zawiera element, który jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-112">
              <paramref name="types" /> contains an element that is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="52c70-113">- lub - <paramref name="types" /> zawiera element, który został załadowany w kontekstu reflection-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-113">-or-  <paramref name="types" /> contains an element that was loaded in the reflection-only context.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeCatalog (params Type[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray types As Type())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeCatalog(... cli::array &lt;Type ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.TypeCatalog : Type[] -&gt; System.ComponentModel.Composition.Hosting.TypeCatalog" Usage="new System.ComponentModel.Composition.Hosting.TypeCatalog types" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="types">
          <span data-ttu-id="52c70-114">Tablica opartego na atrybutach <see cref="T:System.Type" /> obiektów, aby dodać do <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-114">An array of attributed <see cref="T:System.Type" /> objects to add to the <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52c70-115">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> klasy przy użyciu określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-115">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> class with the specified types.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52c70-116">
            <paramref name="types" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-116">
              <paramref name="types" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="52c70-117">
            <paramref name="types" /> zawiera element, który jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-117">
              <paramref name="types" /> contains an element that is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="52c70-118">- lub - <paramref name="types" /> zawiera element, który został załadowany w kontekstu reflection-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-118">-or-  <paramref name="types" /> contains an element that was loaded in the reflection-only context.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeCatalog (System.Collections.Generic.IEnumerable&lt;Type&gt; types, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; types, class System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (types As IEnumerable(Of Type), definitionOrigin As ICompositionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeCatalog(System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ types, System::ComponentModel::Composition::Primitives::ICompositionElement ^ definitionOrigin);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.TypeCatalog : seq&lt;Type&gt; * System.ComponentModel.Composition.Primitives.ICompositionElement -&gt; System.ComponentModel.Composition.Hosting.TypeCatalog" Usage="new System.ComponentModel.Composition.Hosting.TypeCatalog (types, definitionOrigin)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="types" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
        <Parameter Name="definitionOrigin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="types">
          <span data-ttu-id="52c70-119">Kolekcja opartego na atrybutach <see cref="T:System.Type" /> obiektów, aby dodać do <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-119">A collection of attributed <see cref="T:System.Type" /> objects to add to the <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> object.</span>
          </span>
        </param>
        <param name="definitionOrigin">
          <span data-ttu-id="52c70-120">Element używany przez diagnostykę do identyfikowania źródła dla części.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-120">An element used by diagnostics to identify the source for parts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52c70-121">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> klasy przy użyciu określonych typów i źródła dla części.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-121">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> class with the specified types and source for parts.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52c70-122">
            <paramref name="types" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-122">
              <paramref name="types" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="52c70-123">
            <paramref name="types" /> zawiera element, który jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-123">
              <paramref name="types" /> contains an element that is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="52c70-124">- lub - <paramref name="types" /> zawiera element, który został załadowany w kontekstu reflection-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-124">-or-  <paramref name="types" /> contains an element that was loaded in the reflection-only context.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeCatalog (System.Collections.Generic.IEnumerable&lt;Type&gt; types, System.Reflection.ReflectionContext reflectionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; types, class System.Reflection.ReflectionContext reflectionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},System.Reflection.ReflectionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeCatalog(System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ types, System::Reflection::ReflectionContext ^ reflectionContext);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.TypeCatalog : seq&lt;Type&gt; * System.Reflection.ReflectionContext -&gt; System.ComponentModel.Composition.Hosting.TypeCatalog" Usage="new System.ComponentModel.Composition.Hosting.TypeCatalog (types, reflectionContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="types" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" />
      </Parameters>
      <Docs>
        <param name="types">
          <span data-ttu-id="52c70-125">Kolekcja opartego na atrybutach <see cref="T:System.Type" /> obiektów, aby dodać do <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-125">A collection of attributed <see cref="T:System.Type" /> objects to add to the <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> object.</span>
          </span>
        </param>
        <param name="reflectionContext">
          <span data-ttu-id="52c70-126">Kontekst używany do interpretacji parametrów typów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-126">The context used to interpret the types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52c70-127">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> klasy przy użyciu określonych typów w kontekście określonej odbicia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-127">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> class with the specified types in the specified reflection context.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52c70-128">
            <paramref name="types" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-128">
              <paramref name="types" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="52c70-129">
            <paramref name="types" /> zawiera element, który jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-129">
              <paramref name="types" /> contains an element that is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="52c70-130">- lub - <paramref name="types" /> zawiera element, który został załadowany w kontekstu reflection-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-130">-or-  <paramref name="types" /> contains an element that was loaded in the reflection-only context.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeCatalog (System.Collections.Generic.IEnumerable&lt;Type&gt; types, System.Reflection.ReflectionContext reflectionContext, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; types, class System.Reflection.ReflectionContext reflectionContext, class System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeCatalog(System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ types, System::Reflection::ReflectionContext ^ reflectionContext, System::ComponentModel::Composition::Primitives::ICompositionElement ^ definitionOrigin);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.TypeCatalog : seq&lt;Type&gt; * System.Reflection.ReflectionContext * System.ComponentModel.Composition.Primitives.ICompositionElement -&gt; System.ComponentModel.Composition.Hosting.TypeCatalog" Usage="new System.ComponentModel.Composition.Hosting.TypeCatalog (types, reflectionContext, definitionOrigin)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="types" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" />
        <Parameter Name="definitionOrigin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="types">
          <span data-ttu-id="52c70-131">Kolekcja opartego na atrybutach <see cref="T:System.Type" /> obiektów, aby dodać do <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-131">A collection of attributed <see cref="T:System.Type" /> objects to add to the <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> object.</span>
          </span>
        </param>
        <param name="reflectionContext">
          <span data-ttu-id="52c70-132">Kontekst używany do interpretacji parametrów typów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-132">The context used to interpret the types.</span>
          </span>
        </param>
        <param name="definitionOrigin">
          <span data-ttu-id="52c70-133">Element używany przez diagnostykę do identyfikowania źródła dla części.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-133">An element used by diagnostics to identify the source for parts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52c70-134">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> klasy przy użyciu określonych typów w kontekście określonej odbicia i źródła dla części.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-134">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> class with the specified types in the specified reflection context and source for parts.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52c70-135">
            <paramref name="types" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-135">
              <paramref name="types" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="52c70-136">
            <paramref name="types" /> zawiera element, który jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-136">
              <paramref name="types" /> contains an element that is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="52c70-137">- lub - <paramref name="types" /> zawiera element, który został załadowany w kontekstu reflection-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-137">-or-  <paramref name="types" /> contains an element that was loaded in the reflection-only context.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.TypeCatalog.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="typeCatalog.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="52c70-138">
            <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko niezarządzane zasoby.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-138">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52c70-139">Zwalnia zasoby niezarządzane używane przez <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> i opcjonalnie zwalnia zasoby zarządzane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-139">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerator&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.TypeCatalog.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator(Of ComposablePartDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IEnumerator&lt;System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt;" Usage="typeCatalog.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="52c70-140">Zwraca moduł wyliczający, który iteruje po katalogu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-140">Returns an enumerator that iterates through the catalog.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52c70-141">Moduł wyliczający, który może służyć do iterowania po katalogu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-141">An enumerator that can be used to iterate through the catalog.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExports">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;Tuple&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt; GetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Tuple`2&lt;class System.ComponentModel.Composition.Primitives.ComposablePartDefinition, class System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt; GetExports(class System.ComponentModel.Composition.Primitives.ImportDefinition definition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.TypeCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetExports (definition As ImportDefinition) As IEnumerable(Of Tuple(Of ComposablePartDefinition, ExportDefinition))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IEnumerable&lt;Tuple&lt;System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^, System::ComponentModel::Composition::Primitives::ExportDefinition ^&gt; ^&gt; ^ GetExports(System::ComponentModel::Composition::Primitives::ImportDefinition ^ definition);" />
      <MemberSignature Language="F#" Value="override this.GetExports : System.ComponentModel.Composition.Primitives.ImportDefinition -&gt; seq&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition * System.ComponentModel.Composition.Primitives.ExportDefinition&gt;" Usage="typeCatalog.GetExports definition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Tuple&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
      </Parameters>
      <Docs>
        <param name="definition">
          <span data-ttu-id="52c70-142">Warunki określające, które eksportuje do dopasowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-142">Conditions that specify which exports to match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52c70-143">Pobiera kolekcję eksportu spełniających kryteria określone zgodnie z definicją importu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-143">Gets a collection of exports that match the conditions specified by the import definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52c70-144">Kolekcja eksportu spełniających kryteria określone przez <paramref name="definition" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-144">A collection of exports that match the conditions specified by <paramref name="definition" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parts">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt; Parts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.IQueryable`1&lt;class System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt; Parts" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.TypeCatalog.Parts" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Parts As IQueryable(Of ComposablePartDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Linq::IQueryable&lt;System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^&gt; ^ Parts { System::Linq::IQueryable&lt;System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parts : System.Linq.IQueryable&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt;" Usage="System.ComponentModel.Composition.Hosting.TypeCatalog.Parts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52c70-145">Pobiera definicje części, które są zawarte w wykazie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-145">Gets the part definitions that are contained in the catalog.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52c70-146">
            <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> Obiekty, które są zawarte w <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-146">The <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> objects that are contained in the <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="52c70-147">
            <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> Obiekt został usunięty z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-147">The <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> object has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName">
      <MemberSignature Language="C#" Value="string System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.TypeCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DisplayName As String Implements ICompositionElement.DisplayName" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System::ComponentModel::Composition::Primitives::ICompositionElement::DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52c70-148">Pobiera nazwę wyświetlaną katalogu typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-148">Gets the display name of the type catalog.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52c70-149">Ciąg zawierający nazwę wyświetlaną czytelny dla człowieka <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-149">A string containing a human-readable display name of the <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52c70-150">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="52c70-150">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="52c70-151">Mogą być używane tylko wtedy, gdy <xref:System.ComponentModel.Composition.Hosting.TypeCatalog> wystąpienia jest rzutowany na <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="52c70-151">It can be used only when the <xref:System.ComponentModel.Composition.Hosting.TypeCatalog> instance is cast to an <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Composition.Primitives.ICompositionElement.Origin">
      <MemberSignature Language="C#" Value="System.ComponentModel.Composition.Primitives.ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.Origin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Composition.Primitives.ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.Origin" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.TypeCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Origin As ICompositionElement Implements ICompositionElement.Origin" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::Composition::Primitives::ICompositionElement ^ System::ComponentModel::Composition::Primitives::ICompositionElement::Origin { System::ComponentModel::Composition::Primitives::ICompositionElement ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Composition.Primitives.ICompositionElement.Origin" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Composition.Primitives.ICompositionElement.Origin</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ICompositionElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52c70-152">Pobiera element kompozycji, z której pochodzi katalogu typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-152">Gets the composition element from which the type catalog originated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52c70-153">Zawsze <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-153">Always <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52c70-154">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="52c70-154">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="52c70-155">Mogą być używane tylko wtedy, gdy <xref:System.ComponentModel.Composition.Hosting.TypeCatalog> wystąpienia jest rzutowany na <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="52c70-155">It can be used only when the <xref:System.ComponentModel.Composition.Hosting.TypeCatalog> instance is cast to an <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.TypeCatalog.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="typeCatalog.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="52c70-156">Zwraca ciąg reprezentujący typ katalogu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-156">Returns a string representation of the type catalog.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52c70-157">Ciąg reprezentujący typ katalogu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52c70-157">A string representation of the type catalog.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>