<Type Name="LogConverter" FullName="System.Diagnostics.Design.LogConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cdbe31037abc906f6505e45d2c04f639a44a89bf" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69365402" /></Metadata><TypeSignature Language="C#" Value="public class LogConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LogConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Design.LogConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class LogConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class LogConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type LogConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4b6d1-101">Udostępnia konwerter typu dla <see cref="P:System.Diagnostics.EventLog.Log" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="4b6d1-101">Provides the type converter for the <see cref="P:System.Diagnostics.EventLog.Log" /> property.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b6d1-102"><xref:System.Diagnostics.Design.LogConverter>Konwertuje odwołania do obiektów do i z innych reprezentacji.</span><span class="sxs-lookup"><span data-stu-id="4b6d1-102"><xref:System.Diagnostics.Design.LogConverter> converts object references to and from other representations.</span></span>  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="4b6d1-103">dla prawa do wykonywania kodu niezarządzanego.</span><span class="sxs-lookup"><span data-stu-id="4b6d1-103">for the right to execute unmanaged code.</span></span> <span data-ttu-id="4b6d1-104">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="4b6d1-104">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="4b6d1-105">Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="4b6d1-105">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LogConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Design.LogConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LogConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4b6d1-106">Inicjuje nowe wystąpienie <see cref="T:System.Diagnostics.Design.LogConverter" /> klasy dla danego typu.</span><span class="sxs-lookup"><span data-stu-id="4b6d1-106">Initializes a new instance of the <see cref="T:System.Diagnostics.Design.LogConverter" /> class for the given type.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="4b6d1-107">możliwość uzyskania dostępu do kodu niezarządzanego.</span><span class="sxs-lookup"><span data-stu-id="4b6d1-107">for the ability to access unmanaged code.</span></span> <span data-ttu-id="4b6d1-108">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="4b6d1-108">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="4b6d1-109">Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="4b6d1-109">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Design.LogConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="logConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="4b6d1-110"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zawiera kontekst formatu.</span><span class="sxs-lookup"><span data-stu-id="4b6d1-110">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="sourceType"><span data-ttu-id="4b6d1-111">Element T:System.Type, który reprezentuje typ, z którego chcesz dokonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="4b6d1-111">A T:System.Type  that represents the type you want to convert from.</span></span></param>
        <summary><span data-ttu-id="4b6d1-112">Wskazuje, czy ten konwerter może konwertować obiekt danego typu na typ tego konwertera przy użyciu określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="4b6d1-112">Indicates whether this converter can convert an object of the given type to the type of this converter, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="4b6d1-113"><see langword="true" />Jeśli można wykonać konwersję, w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="4b6d1-113"><see langword="true" /> if the conversion can be performed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Design.LogConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="logConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="4b6d1-114">Element T:System.ComponentModel.ITypeDescriptorContext, który zawiera kontekst formatu.</span><span class="sxs-lookup"><span data-stu-id="4b6d1-114">An T:System.ComponentModel.ITypeDescriptorContext  that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="4b6d1-115">T:System.Globalization.CultureInfo do użycia jako bieżąca kultura.</span><span class="sxs-lookup"><span data-stu-id="4b6d1-115">The T:System.Globalization.CultureInfo  to use as the current culture.</span></span></param>
        <param name="value"><span data-ttu-id="4b6d1-116">T:System.Object do przekonwertowania</span><span class="sxs-lookup"><span data-stu-id="4b6d1-116">The T:System.Object  to convert</span></span></param>
        <summary><span data-ttu-id="4b6d1-117">Konwertuje dany obiekt na ciąg, korzystając z określonych informacji o kontekście i kulturze.</span><span class="sxs-lookup"><span data-stu-id="4b6d1-117">Converts the given object to a string, using the specified context and culture information.</span></span></summary>
        <returns><span data-ttu-id="4b6d1-118"><see cref="T:System.Object" /> Reprezentuje przekonwertowaną wartość.</span><span class="sxs-lookup"><span data-stu-id="4b6d1-118">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Design.LogConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection" Usage="logConverter.GetStandardValues context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="4b6d1-119"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zawiera kontekst formatu.</span><span class="sxs-lookup"><span data-stu-id="4b6d1-119">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="4b6d1-120">Pobiera kolekcję wartości standardowych dla typu danych, dla których zaprojektowano ten moduł sprawdzania poprawności.</span><span class="sxs-lookup"><span data-stu-id="4b6d1-120">Gets a collection of standard values for the data type this validator is designed for.</span></span></summary>
        <returns><span data-ttu-id="4b6d1-121">, Który zawiera standardowy zestaw prawidłowych wartości lub <see langword="null" /> Jeśli typ danych nie obsługuje standardowego zestawu wartości. <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /></span><span class="sxs-lookup"><span data-stu-id="4b6d1-121">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b6d1-122">Ten `context` parametr może służyć do wyodrębnienia dodatkowych informacji o środowisku, z którego ten konwerter jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="4b6d1-122">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="4b6d1-123">Może to być `null`, więc zawsze sprawdzaj.</span><span class="sxs-lookup"><span data-stu-id="4b6d1-123">This can be `null`, so always check.</span></span> <span data-ttu-id="4b6d1-124">Ponadto właściwości obiektu kontekstu mogą zwrócić `null`.</span><span class="sxs-lookup"><span data-stu-id="4b6d1-124">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Design.LogConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="logConverter.GetStandardValuesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="4b6d1-125"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zawiera kontekst formatu.</span><span class="sxs-lookup"><span data-stu-id="4b6d1-125">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="4b6d1-126">Wskazuje, czy ten obiekt obsługuje standardowy zestaw wartości, które można pobrać z listy przy użyciu określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="4b6d1-126">Indicates whether this object supports a standard set of values that can be picked from a list using the specified context.</span></span></summary>
        <returns><span data-ttu-id="4b6d1-127"><see langword="true" />Ponieważ <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> należy ją wywołać, aby znaleźć wspólny zestaw wartości obsługiwanych przez obiekt.</span><span class="sxs-lookup"><span data-stu-id="4b6d1-127"><see langword="true" /> because <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports.</span></span> <span data-ttu-id="4b6d1-128">Ta metoda nigdy nie <see langword="false" />zwraca.</span><span class="sxs-lookup"><span data-stu-id="4b6d1-128">This method never returns <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b6d1-129">Ten `context` parametr może służyć do wyodrębnienia dodatkowych informacji o środowisku, z którego ten konwerter jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="4b6d1-129">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="4b6d1-130">Może to być `null`, więc zawsze sprawdzaj.</span><span class="sxs-lookup"><span data-stu-id="4b6d1-130">This can be `null`, so always check.</span></span> <span data-ttu-id="4b6d1-131">Ponadto właściwości obiektu kontekstu mogą zwrócić `null`.</span><span class="sxs-lookup"><span data-stu-id="4b6d1-131">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
  </Members>
</Type>
