<Type Name="LogConverter" FullName="System.Diagnostics.Design.LogConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a05aa540dbb4e91be5a276e86c5a506535dd7d0a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36676375" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LogConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LogConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Design.LogConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class LogConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class LogConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type LogConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="da862-101">Udostępnia konwerter typów dla <see cref="P:System.Diagnostics.EventLog.Log" /> właściwości.</span>
      <span class="sxs-lookup">
        <span data-stu-id="da862-101">Provides the type converter for the <see cref="P:System.Diagnostics.EventLog.Log" /> property.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da862-102"><xref:System.Diagnostics.Design.LogConverter> Konwertuje odwołania do obiektów, do i z innych oświadczenia.</span><span class="sxs-lookup"><span data-stu-id="da862-102"><xref:System.Diagnostics.Design.LogConverter> converts object references to and from other representations.</span></span>  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">
      <span data-ttu-id="da862-103">prawo do wykonywania kodu niezarządzanego.</span>
      <span class="sxs-lookup">
        <span data-stu-id="da862-103">for the right to execute unmanaged code.</span>
      </span>
      <span data-ttu-id="da862-104">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="da862-104">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
      </span>
      <span data-ttu-id="da862-105">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
      <span class="sxs-lookup">
        <span data-stu-id="da862-105">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
      </span>
    </permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LogConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Design.LogConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LogConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="da862-106">Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.Design.LogConverter" /> klasy dla danego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da862-106">Initializes a new instance of the <see cref="T:System.Diagnostics.Design.LogConverter" /> class for the given type.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="da862-107">Aby uzyskać możliwość dostępu kodu niezarządzanego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da862-107">for the ability to access unmanaged code.</span>
          </span>
          <span data-ttu-id="da862-108">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da862-108">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="da862-109">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="da862-109">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Design.LogConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="logConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="da862-110">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da862-110">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="sourceType">
          <span data-ttu-id="da862-111">T:System.Type, który reprezentuje typ, który chcesz przekonwertować z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da862-111">A T:System.Type  that represents the type you want to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da862-112">Wskazuje, czy ten konwerter można konwertować obiekt danego typu na typ tego konwertera, używając określonego kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da862-112">Indicates whether this converter can convert an object of the given type to the type of this converter, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da862-113">
            <see langword="true" /> Jeśli można wykonać konwersji; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da862-113">
              <see langword="true" /> if the conversion can be performed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Design.LogConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="logConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="da862-114">T:System.ComponentModel.ITypeDescriptorContext, które dostarcza kontekst formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da862-114">An T:System.ComponentModel.ITypeDescriptorContext  that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="da862-115">T:System.Globalization.CultureInfo do użycia jako bieżącej kultury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da862-115">The T:System.Globalization.CultureInfo  to use as the current culture.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="da862-116">T:System.Object do przekonwertowania</span>
          <span class="sxs-lookup">
            <span data-stu-id="da862-116">The T:System.Object  to convert</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da862-117">Konwertuje dany obiekt na ciąg, przy użyciu określonego kontekstu i kultury informacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da862-117">Converts the given object to a string, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da862-118">
            <see cref="T:System.Object" /> Reprezentujący wartość przekonwertowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da862-118">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Design.LogConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection&#xA;override this.GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection" Usage="logConverter.GetStandardValues context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="da862-119">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da862-119">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da862-120">Pobiera kolekcję wartości domyślnych dla tego modułu sprawdzania poprawności jest przeznaczona dla typu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da862-120">Gets a collection of standard values for the data type this validator is designed for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da862-121">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> który zawiera standardowy zestaw prawidłowych wartości lub <see langword="null" /> Jeśli typem danych nie obsługuje standardowy zestaw wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da862-121">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da862-122">`context` Parametru można wyodrębnić dodatkowe informacje o środowisku konwerter jest wywoływany z.</span><span class="sxs-lookup"><span data-stu-id="da862-122">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="da862-123">Może to być `null`, dlatego należy zawsze sprawdzić.</span><span class="sxs-lookup"><span data-stu-id="da862-123">This can be `null`, so always check.</span></span> <span data-ttu-id="da862-124">Ponadto może zwrócić właściwości obiektu context `null`.</span><span class="sxs-lookup"><span data-stu-id="da862-124">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Design.LogConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="logConverter.GetStandardValuesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="da862-125">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da862-125">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da862-126">Wskazuje, czy ten obiekt obsługuje standardowy zestaw wartości, które mogą być pobierane z listy przy użyciu określonego kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da862-126">Indicates whether this object supports a standard set of values that can be picked from a list using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da862-127">
            <see langword="true" /> Ponieważ <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> powinna być wywoływana, aby znaleźć wspólny zbiór wartości, które obsługuje obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da862-127">
              <see langword="true" /> because <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports.</span>
          </span>
          <span data-ttu-id="da862-128">Ta metoda nie zwraca <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da862-128">This method never returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da862-129">`context` Parametru można wyodrębnić dodatkowe informacje o środowisku konwerter jest wywoływany z.</span><span class="sxs-lookup"><span data-stu-id="da862-129">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="da862-130">Może to być `null`, dlatego należy zawsze sprawdzić.</span><span class="sxs-lookup"><span data-stu-id="da862-130">This can be `null`, so always check.</span></span> <span data-ttu-id="da862-131">Ponadto może zwrócić właściwości obiektu context `null`.</span><span class="sxs-lookup"><span data-stu-id="da862-131">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
  </Members>
</Type>