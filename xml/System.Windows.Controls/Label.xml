<Type Name="Label" FullName="System.Windows.Controls.Label">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c4a5f2ce81ee4d4f598a81a6454105ecd05fa2f5" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69214087" /></Metadata><TypeSignature Language="C#" Value="public class Label : System.Windows.Controls.ContentControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Label extends System.Windows.Controls.ContentControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Label" />
  <TypeSignature Language="VB.NET" Value="Public Class Label&#xA;Inherits ContentControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class Label : System::Windows::Controls::ContentControl" />
  <TypeSignature Language="F#" Value="type Label = class&#xA;    inherit ContentControl" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Label)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Przedstawia etykietę tekstową kontrolki i zapewnia obsługę kluczy dostępu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa zapewnia obsługę funkcjonalną i wizualną dla kluczy dostępu (nazywanych również skrótami). Jest on często używany do włączania szybkiego dostępu do kontrolek, takich <xref:System.Windows.Controls.TextBox>jak. Aby przypisać <xref:System.Windows.Controls.Label> <xref:System.Windows.Controls.Control>do, ustaw <xref:System.Windows.Controls.Label.Target%2A> właściwość na kontrolkę, która powinna mieć fokus, gdy użytkownik naciśnie klawisz dostępu. Ustawienie obiektu docelowego powoduje [!INCLUDE[TLA#tla_uiautomation](~/includes/tlasharptla-uiautomation-md.md)] również, że w celu użycia tekstu etykiety jako nazwy kontrolki docelowej. Aby uzyskać więcej informacji, zobacz [ułatwienia dostępu](~/docs/framework/ui-automation/index.md).  
  
 Aby ustawić klucz dostępu, Dodaj podkreślenie przed znakiem, który powinien być kluczem dostępu. Jeśli zawartość zawiera wiele znaków podkreślenia, tylko pierwszy z nich jest konwertowany na klucz dostępu; Pozostałe znaki podkreślenia są wyświetlane w postaci zwykłego tekstu. Jeśli podkreślenie, które ma zostać przekształcone na klucz dostępu nie jest pierwszym podkreśleniem, użyj dwóch kolejnych podkreśleń dla wszelkich podkreślów poprzedzających te, które chcesz skonwertować. Na przykład poniższy kod zawiera klucz dostępu i jest wyświetlany jako _Hello**w**orld:  
  
```  
<Label>__Hello_World</Label>   
```  
  
 Ze względu na to, że znak podkreślenia poprzedzający H jest podwójny, rejestr W kluczu jest rejestrowany jako klucz dostępu.  
  
 Etykieta nie jest skoncentrowana i nie jest tabulatorem. Aby uzyskać szczegółowe informacje, zobacz temat [Omówienie fokusu](~/docs/framework/wpf/advanced/focus-overview.md).  
  
 <xref:System.Windows.Controls.Label> A<xref:System.Windows.Controls.ContentControl>jest, co oznacza, że może zawierać pojedynczy obiekt dowolnego typu (na przykład ciąg, obraz lub panel). Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Controls.ContentControl> Klasa.  
  
## <a name="customizing-the-label-control"></a>Dostosowywanie kontrolki etykieta  
 Aby zastosować te same ustawienia właściwości do wielu <xref:System.Windows.Controls.Label> formantów, <xref:System.Windows.FrameworkElement.Style%2A> Użyj właściwości. Można zmienić wartość domyślną <xref:System.Windows.Controls.ControlTemplate> , aby dać formantowi unikatowy wygląd. Aby uzyskać więcej informacji na temat <xref:System.Windows.Controls.ControlTemplate>tworzenia, zobacz [Dostosowywanie wyglądu istniejącej kontrolki przez utworzenie ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  Aby zobaczyć części i Stany <xref:System.Windows.Controls.Label>, które są specyficzne dla, zobacz [Style i szablony etykiet](~/docs/framework/wpf/controls/label-styles-and-templates.md).  
  
 Właściwości zależności dla tego formantu można ustawić przy użyciu domyślnego stylu kontrolki.  Jeśli właściwość jest ustawiana za pomocą stylu domyślnego, właściwość może ulec zmianie z wartości domyślnej, gdy kontrolka pojawi się w aplikacji. Domyślny styl jest określany na podstawie tego, który Motyw pulpitu jest używany, gdy aplikacja jest uruchomiona.  Aby uzyskać więcej informacji, zobacz [domyślne motywy WPF](https://go.microsoft.com/fwlink/?LinkID=158252).  
  
[!INCLUDE[setting-a-visual-property](~/includes/visual-property-note.md)]  
  
## Examples  
 Poniższy przykład pokazuje <xref:System.Windows.Controls.Label> , jak utworzyć element, który używa powiązania, aby ustawić element docelowy.  
  
 [!code-xaml[LabelSnippet#1](~/samples/snippets/csharp/VS_Snippets_Wpf/LabelSnippet/CS/Pane1.xaml#1)]   
  
 Poniższy przykład pokazuje <xref:System.Windows.Controls.Label> , jak utworzyć, który ma klucz dostępu i obsługuje Zawijanie tekstu.  
  
 [!code-xaml[LabelSnippet#4](~/samples/snippets/csharp/VS_Snippets_Wpf/LabelSnippet/CS/Pane1.xaml#4)]   
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms752101(v=vs.90)">Instrukcje: Ustaw właściwość docelową etykiety</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Label ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Label.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Label();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Controls.Label" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Label.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="label.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapewnia odpowiednią <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /> implementację tej kontrolki w ramach [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastruktury.</summary>
        <returns>Implementacja specyficzna <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> dla typu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public System.Windows.UIElement Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.UIElement Target" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Label.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As UIElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::UIElement ^ Target { System::Windows::UIElement ^ get(); void set(System::Windows::UIElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : System.Windows.UIElement with get, set" Usage="System.Windows.Controls.Label.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.NameReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia element, który otrzymuje fokus, gdy użytkownik naciśnie klawisz dostępu etykiety.</summary>
        <value>Zostanie <see cref="T:System.Windows.UIElement" /> wyświetlony fokus, gdy użytkownik naciśnie klawisz dostępu. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz podać skróty klawiaturowe dla elementów, które nie obsługują kluczy dostępu, nadając <xref:System.Windows.Controls.Label> klawiszowi dostępu i ustawiając tę właściwość. Przypisanie klucza dostępu do etykiety przez umieszczenie podkreślenia bezpośrednio przed znakiem, który działa jako klucz dostępu. Klucz dostępu można określić we <xref:System.Windows.Controls.ContentControl.Content%2A> właściwości lub przez ustawienie <xref:System.Windows.Controls.ContentControl.Content%2A> do <xref:System.Windows.Controls.AccessText> obiektu.  
  
 Tej właściwości nie można użyć do zdefiniowania <xref:System.Windows.UIElement>. Na przykład następujące kompilacje, ale nie są funkcjonalne: `<object.Target><UIElement../></object.Target>`. Ta właściwość zawiera odwołanie do elementu, który jest już zdefiniowany w aplikacji.  
  
<a name="dependencyPropertyInfo_Target"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.Controls.Label.TargetProperty>|  
|Właściwości metadanych ustawione na`true`|Brak|  
  
<a name="xamlAttributeUsage_Target"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<Label Target=" nameOfExistingElement"/>  
  
```  
  
<a name="xamlPropertyElementUsage_Target"></a>   
## <a name="xaml-property-element-usage"></a>Użycie elementu właściwości języka XAML  
  
<a name="xamlValues_Target"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 `nameOfExistingElement`  
 Nazwa <xref:System.Windows.UIElement> , która otrzymuje fokus po naciśnięciu klawisza dostępu.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Windows.Controls.Label.Target%2A> jak ustawić właściwość. <xref:System.Windows.Controls.Label>  
  
 [!code-xaml[LabelSnippet#1](~/samples/snippets/csharp/VS_Snippets_Wpf/LabelSnippet/CS/Pane1.xaml#1)]   
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms752101(v=vs.90)">Instrukcje: Ustaw właściwość docelową etykiety</related>
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Label.TargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TargetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Label.TargetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje właściwość <see cref="P:System.Windows.Controls.Label.Target" /> zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
