<Type Name="UserControl" FullName="System.Windows.Controls.UserControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9f95b7c502419dceb769f24f96e431efa9edb417" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39768976" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UserControl : System.Windows.Controls.ContentControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi UserControl extends System.Windows.Controls.ContentControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.UserControl" />
  <TypeSignature Language="VB.NET" Value="Public Class UserControl&#xA;Inherits ContentControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class UserControl : System::Windows::Controls::ContentControl" />
  <TypeSignature Language="F#" Value="type UserControl = class&#xA;    inherit ContentControl" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zapewnia prosty sposób utworzyć kontrolkę.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrolki w [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] obsługuje sformatowanej zawartości, style, wyzwalaczy i szablony. W wielu przypadkach te funkcje umożliwiają tworzenie niestandardowych i spójne środowiska bez konieczności tworzenia nowego formantu. Aby uzyskać więcej informacji, zobacz [Tworzenie szablonów i stylów](~/docs/framework/wpf/controls/styling-and-templating.md).  
  
 Jeśli musisz utworzyć nowy formant, najprostszym sposobem jest utworzyć klasę, która jest pochodną <xref:System.Windows.Controls.UserControl>. Przed wykonaniem tej czynności należy wziąć pod uwagę, formant nie obsługuje szablonów i w związku z tym nie będzie obsługiwał złożonych dostosowań. Jednak pochodząca od <xref:System.Windows.Controls.UserControl> jest modelem odpowiednie, jeśli chcesz skompilować Twoją kontrolą, dodając istniejące elementy do niego, podobnie jak sposób tworzenia aplikacji, a nie trzeba do obsługi złożonych dostosowań. (Jeśli chcesz użyć szablonów z kontroli nad dziedziczyć <xref:System.Windows.Controls.Control> zamiast.) Aby uzyskać więcej informacji na temat różnych modeli na potrzeby tworzenia formantów, zobacz [omówienie tworzenia kontrolek](~/docs/framework/wpf/controls/control-authoring-overview.md).  
  
 A <xref:System.Windows.Controls.UserControl> jest <xref:System.Windows.Controls.ContentControl>, co oznacza, że może ono zawierać pojedynczy obiekt dowolnego typu (na przykład ciąg, obrazu lub panelu). Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Controls.ContentControl> klasy.  
  
 Właściwości zależności dla tego formantu może być ustawione przez domyślnego stylu.  Jeśli właściwość jest ustawiana przez domyślnego stylu, zmienić właściwość z jego wartość domyślną gdy formant ma być wyświetlany w aplikacji. Domyślny styl jest określona, przez który motyw pulpitu jest używany podczas działania aplikacji.  Aby uzyskać więcej informacji, zobacz [domyślne motywy WPF](http://go.microsoft.com/fwlink/?LinkID=158252).  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak utworzyć prostą `NumericUpDown` <xref:System.Windows.Controls.UserControl>.  
  
 [!code-xaml[UserControlNumericUpDown#Markup](~/samples/snippets/csharp/VS_Snippets_Wpf/UserControlNumericUpDown/CSharp/NumericUpDown.xaml#markup)]  
  
 Poniżej pokazano logiki to <xref:System.Windows.Controls.UserControl>:  
  
 [!code-csharp[UserControlNumericUpDown#CodeBehind](~/samples/snippets/csharp/VS_Snippets_Wpf/UserControlNumericUpDown/CSharp/NumericUpDown.xaml.cs#codebehind)]
 [!code-vb[UserControlNumericUpDown#CodeBehind](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UserControlNumericUpDown/visualbasic/numericupdown.xaml.vb#codebehind)]  
  
 Aby uzyskać więcej informacji, zobacz [omówienie tworzenia kontrolek](~/docs/framework/wpf/controls/control-authoring-overview.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UserControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.UserControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UserControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Controls.UserControl" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.UserControl.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="userControl.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy i zwraca <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> tego <see cref="T:System.Windows.Controls.UserControl" />.</summary>
        <returns>Nowy <see cref="T:System.Windows.Automation.Peers.UserControlAutomationPeer" /> tego <see cref="T:System.Windows.Controls.UserControl" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>