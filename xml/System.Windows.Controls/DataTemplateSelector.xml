<Type Name="DataTemplateSelector" FullName="System.Windows.Controls.DataTemplateSelector">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7cf6ef824251b65f85296296a1a43a3ae2db5d26" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30697208" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataTemplateSelector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataTemplateSelector extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.DataTemplateSelector" />
  <TypeSignature Language="VB.NET" Value="Public Class DataTemplateSelector" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTemplateSelector" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="95ee1-101">Umożliwia wybranie <see cref="T:System.Windows.DataTemplate" /> na podstawie obiektu danych i powiązane z danymi elementu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="95ee1-101">Provides a way to choose a <see cref="T:System.Windows.DataTemplate" /> based on the data object and the data-bound element.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95ee1-102">Zazwyczaj w celu utworzenia <xref:System.Windows.Controls.DataTemplateSelector> Jeśli masz więcej niż jeden <xref:System.Windows.DataTemplate> dla tego samego typu obiektów i użytkownik chce dostarczyć logiki wybrać <xref:System.Windows.DataTemplate> do zastosowania na podstawie właściwości każdego obiektu danych.</span><span class="sxs-lookup"><span data-stu-id="95ee1-102">Typically, you create a <xref:System.Windows.Controls.DataTemplateSelector> when you have more than one <xref:System.Windows.DataTemplate> for the same type of objects and you want to supply your own logic to choose a <xref:System.Windows.DataTemplate> to apply based on the properties of each data object.</span></span> <span data-ttu-id="95ee1-103">Należy pamiętać, że jeśli obiekty z różnych typów można ustawić <xref:System.Windows.DataTemplate.DataType%2A> właściwość <xref:System.Windows.DataTemplate>.</span><span class="sxs-lookup"><span data-stu-id="95ee1-103">Note that if you have objects of different types you can set the <xref:System.Windows.DataTemplate.DataType%2A> property on the <xref:System.Windows.DataTemplate>.</span></span> <span data-ttu-id="95ee1-104">Jeśli można to zrobić, nie istnieje potrzeba do utworzenia <xref:System.Windows.Controls.DataTemplateSelector>.</span><span class="sxs-lookup"><span data-stu-id="95ee1-104">If you do that then there is no need to create a <xref:System.Windows.Controls.DataTemplateSelector>.</span></span> <span data-ttu-id="95ee1-105">Ponadto, jeśli obiekty tego samego typu, ale z innymi właściwościami, można także rozważyć użycie <xref:System.Windows.DataTrigger> lub konwertera danych.</span><span class="sxs-lookup"><span data-stu-id="95ee1-105">Furthermore, if you have objects of the same type but with different properties, you can also consider using a <xref:System.Windows.DataTrigger> or a data converter.</span></span> <span data-ttu-id="95ee1-106">Aby uzyskać więcej informacji, zobacz [omówienie tworzenia szablonów danych](~/docs/framework/wpf/data/data-templating-overview.md).</span><span class="sxs-lookup"><span data-stu-id="95ee1-106">For more information, see [Data Templating Overview](~/docs/framework/wpf/data/data-templating-overview.md).</span></span>  
  
 <span data-ttu-id="95ee1-107">Selektor szablonu, utworzyć klasę, która dziedziczy <xref:System.Windows.Controls.DataTemplateSelector> i zastąpić <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="95ee1-107">To create a template selector, create a class that inherits from <xref:System.Windows.Controls.DataTemplateSelector> and override the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method.</span></span> <span data-ttu-id="95ee1-108">Po klasie zdefiniowano wystąpienia klasy można przypisać do właściwości selektor szablonu z elementu.</span><span class="sxs-lookup"><span data-stu-id="95ee1-108">Once your class is defined you can assign an instance of the class to the template selector property of your element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95ee1-109">W tym przykładzie źródle powiązania znajduje się lista `Task` obiektów.</span><span class="sxs-lookup"><span data-stu-id="95ee1-109">In this example, the binding source is a list of `Task` objects.</span></span> <span data-ttu-id="95ee1-110">Jedna z właściwości obiektu `Task` obiekt jest `Priority`.</span><span class="sxs-lookup"><span data-stu-id="95ee1-110">One of the properties of a `Task` object is `Priority`.</span></span> <span data-ttu-id="95ee1-111">Istnieją dwa szablony dane zdefiniowane, `myTaskTemplate` i `importantTaskTemplate`.</span><span class="sxs-lookup"><span data-stu-id="95ee1-111">There are two data templates defined, `myTaskTemplate` and `importantTaskTemplate`.</span></span>  
  
 <span data-ttu-id="95ee1-112">Umożliwiają określanie logiki, aby wybrać <xref:System.Windows.DataTemplate> do użycia na podstawie `Priority` wartość obiektu danych, Utwórz podklasę <xref:System.Windows.Controls.DataTemplateSelector> i zastąpić <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="95ee1-112">To supply logic to choose which <xref:System.Windows.DataTemplate> to use based on the `Priority` value of the data object, create a subclass of <xref:System.Windows.Controls.DataTemplateSelector> and override the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method.</span></span> <span data-ttu-id="95ee1-113">W poniższym przykładzie <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> metoda zawiera logikę do zwrócenia odpowiedni szablon na podstawie wartości z `Priority` właściwości.</span><span class="sxs-lookup"><span data-stu-id="95ee1-113">In the following example, the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method provides logic to return the appropriate template based on the value of the `Priority` property.</span></span> <span data-ttu-id="95ee1-114">Szablon do zwrócenia zostanie znaleziony w zasobów obejmujące <xref:System.Windows.Window> elementu.</span><span class="sxs-lookup"><span data-stu-id="95ee1-114">The template to return is found in the resources of the enveloping <xref:System.Windows.Window> element.</span></span>  
  
 [!code-csharp[DataTemplatingIntro_snip#DTSClass](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/TaskListDataTemplateSelector.cs#dtsclass)]
 [!code-vb[DataTemplatingIntro_snip#DTSClass](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataTemplatingIntro_snip/visualbasic/tasklistdatatemplateselector.vb#dtsclass)]  
  
 <span data-ttu-id="95ee1-115">Firma Microsoft może następnie zadeklarować `TaskListDataTemplateSelector` jako zasób:</span><span class="sxs-lookup"><span data-stu-id="95ee1-115">We can then declare the `TaskListDataTemplateSelector` as a resource:</span></span>  
  
 [!code-xaml[DataTemplatingIntro_snip#R1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#r1)]  
[!code-xaml[DataTemplatingIntro_snip#DTS](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#dts)]  
[!code-xaml[DataTemplatingIntro_snip#R2](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#r2)]  
  
 <span data-ttu-id="95ee1-116">Aby korzystać z zasobów selektor szablonu, przypisz go do <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> właściwość <xref:System.Windows.Controls.ListBox>.</span><span class="sxs-lookup"><span data-stu-id="95ee1-116">To use the template selector resource, assign it to the <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> property of the <xref:System.Windows.Controls.ListBox>.</span></span> <span data-ttu-id="95ee1-117"><xref:System.Windows.Controls.ListBox> Wywołania <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> metody `TaskListDataTemplateSelector` dla poszczególnych elementów w źródłowej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="95ee1-117">The <xref:System.Windows.Controls.ListBox> calls the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method of the `TaskListDataTemplateSelector` for each of the items in the underlying collection.</span></span> <span data-ttu-id="95ee1-118">Wywołanie przekazuje obiekt danych jako parametru elementu.</span><span class="sxs-lookup"><span data-stu-id="95ee1-118">The call passes the data object as the item parameter.</span></span> <span data-ttu-id="95ee1-119"><xref:System.Windows.DataTemplate> Zwracany przez metodę jest następnie stosowany do tego obiektu danych.</span><span class="sxs-lookup"><span data-stu-id="95ee1-119">The <xref:System.Windows.DataTemplate> that is returned by the method is then applied to that data object.</span></span>  
  
 [!code-xaml[DataTemplatingIntro_snip#ItemTemplateSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#itemtemplateselector)]  
  
 <span data-ttu-id="95ee1-120">Pełny przykład, zobacz [wprowadzenie do danych przykładowych tworzenia szablonów](http://go.microsoft.com/fwlink/?LinkID=160009).</span><span class="sxs-lookup"><span data-stu-id="95ee1-120">For the complete sample, see [Introduction to Data Templating Sample](http://go.microsoft.com/fwlink/?LinkID=160009).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTemplateSelector ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataTemplateSelector.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTemplateSelector();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="95ee1-121">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Controls.DataTemplateSelector" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95ee1-121">Initializes a new instance of the <see cref="T:System.Windows.Controls.DataTemplateSelector" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Windows.DataTemplate SelectTemplate (object item, System.Windows.DependencyObject container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.DataTemplate SelectTemplate(object item, class System.Windows.DependencyObject container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectTemplate (item As Object, container As DependencyObject) As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::DataTemplate ^ SelectTemplate(System::Object ^ item, System::Windows::DependencyObject ^ container);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="container" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="95ee1-122">Obiekt danych, do których chcesz wybrać szablon.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95ee1-122">The data object for which to select the template.</span>
          </span>
        </param>
        <param name="container">
          <span data-ttu-id="95ee1-123">Obiekt powiązane z danymi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95ee1-123">The data-bound object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95ee1-124">Po przesłonięciu w klasie pochodnej zwraca <see cref="T:System.Windows.DataTemplate" /> opartych na logice niestandardowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95ee1-124">When overridden in a derived class, returns a <see cref="T:System.Windows.DataTemplate" /> based on custom logic.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95ee1-125">Zwraca <see cref="T:System.Windows.DataTemplate" /> lub <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95ee1-125">Returns a <see cref="T:System.Windows.DataTemplate" /> or <see langword="null" />.</span>
          </span>
          <span data-ttu-id="95ee1-126">Wartość domyślna to <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95ee1-126">The default value is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95ee1-127">Zazwyczaj selektor szablonu używane w sytuacji, gdy masz więcej niż jeden szablon danych zdefiniowany dla tego samego typu obiektów.</span><span class="sxs-lookup"><span data-stu-id="95ee1-127">Typically, you use a template selector when you have more than one data template defined for the same type of objects.</span></span> <span data-ttu-id="95ee1-128">Na przykład jeżeli źródło powiązania jest lista listę obiektów dla użytkowników domowych i chcesz zastosować danego szablonu niepełnym studentom.</span><span class="sxs-lookup"><span data-stu-id="95ee1-128">For example, if your binding source is list a list of student objects and you want to apply a particular template to the part-time students.</span></span> <span data-ttu-id="95ee1-129">Można to zrobić, tworząc klasę, która dziedziczy <xref:System.Windows.Controls.DataTemplateSelector> i zastępowanie <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="95ee1-129">You can do this by creating a class that inherits from <xref:System.Windows.Controls.DataTemplateSelector> and overriding the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method.</span></span> <span data-ttu-id="95ee1-130">Po klasie zdefiniowano wystąpienia klasy można przypisać do właściwości selektor szablonu z elementu.</span><span class="sxs-lookup"><span data-stu-id="95ee1-130">Once your class is defined you can assign an instance of the class to the template selector property of your element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95ee1-131">W tym przykładzie źródle powiązania znajduje się lista `Task` obiektów.</span><span class="sxs-lookup"><span data-stu-id="95ee1-131">In this example, the binding source is a list of `Task` objects.</span></span> <span data-ttu-id="95ee1-132">Jedna z właściwości obiektu `Task` obiekt jest `Priority`.</span><span class="sxs-lookup"><span data-stu-id="95ee1-132">One of the properties of a `Task` object is `Priority`.</span></span> <span data-ttu-id="95ee1-133">Istnieją dwa szablony dane zdefiniowane, `myTaskTemplate` i `importantTaskTemplate`.</span><span class="sxs-lookup"><span data-stu-id="95ee1-133">There are two data templates defined, `myTaskTemplate` and `importantTaskTemplate`.</span></span>  
  
 <span data-ttu-id="95ee1-134">Umożliwiają określanie logiki, aby wybrać <xref:System.Windows.DataTemplate> do użycia na podstawie `Priority` wartość obiektu danych, Utwórz podklasę <xref:System.Windows.Controls.DataTemplateSelector> i zastąpić <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="95ee1-134">To supply logic to choose which <xref:System.Windows.DataTemplate> to use based on the `Priority` value of the data object, create a subclass of <xref:System.Windows.Controls.DataTemplateSelector> and override the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method.</span></span> <span data-ttu-id="95ee1-135">W poniższym przykładzie <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> metoda zawiera logikę do zwrócenia odpowiedni szablon na podstawie wartości z `Priority` właściwości.</span><span class="sxs-lookup"><span data-stu-id="95ee1-135">In the following example, the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method provides logic to return the appropriate template based on the value of the `Priority` property.</span></span> <span data-ttu-id="95ee1-136">Szablon do zwrócenia zostanie znaleziony w zasobów obejmujące <xref:System.Windows.Window> elementu.</span><span class="sxs-lookup"><span data-stu-id="95ee1-136">The template to return is found in the resources of the enveloping <xref:System.Windows.Window> element.</span></span>  
  
 [!code-csharp[DataTemplatingIntro_snip#DTSClass](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/TaskListDataTemplateSelector.cs#dtsclass)]
 [!code-vb[DataTemplatingIntro_snip#DTSClass](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataTemplatingIntro_snip/visualbasic/tasklistdatatemplateselector.vb#dtsclass)]  
  
 <span data-ttu-id="95ee1-137">Firma Microsoft może następnie zadeklarować `TaskListDataTemplateSelector` jako zasób:</span><span class="sxs-lookup"><span data-stu-id="95ee1-137">We can then declare the `TaskListDataTemplateSelector` as a resource:</span></span>  
  
 [!code-xaml[DataTemplatingIntro_snip#R1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#r1)]  
[!code-xaml[DataTemplatingIntro_snip#DTS](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#dts)]  
[!code-xaml[DataTemplatingIntro_snip#R2](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#r2)]  
  
 <span data-ttu-id="95ee1-138">Aby korzystać z zasobów selektor szablonu, przypisz go do <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> właściwość <xref:System.Windows.Controls.ListBox>.</span><span class="sxs-lookup"><span data-stu-id="95ee1-138">To use the template selector resource, assign it to the <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> property of the <xref:System.Windows.Controls.ListBox>.</span></span> <span data-ttu-id="95ee1-139"><xref:System.Windows.Controls.ListBox> Wywołania <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> metody `TaskListDataTemplateSelector` dla poszczególnych elementów w źródłowej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="95ee1-139">The <xref:System.Windows.Controls.ListBox> calls the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method of the `TaskListDataTemplateSelector` for each of the items in the underlying collection.</span></span> <span data-ttu-id="95ee1-140">Wywołanie przekazuje obiekt danych jako parametru elementu.</span><span class="sxs-lookup"><span data-stu-id="95ee1-140">The call passes the data object as the item parameter.</span></span> <span data-ttu-id="95ee1-141"><xref:System.Windows.DataTemplate> Zwracany przez metodę jest następnie stosowany do tego obiektu danych.</span><span class="sxs-lookup"><span data-stu-id="95ee1-141">The <xref:System.Windows.DataTemplate> that is returned by the method is then applied to that data object.</span></span>  
  
 [!code-xaml[DataTemplatingIntro_snip#ItemTemplateSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#itemtemplateselector)]  
  
 <span data-ttu-id="95ee1-142">Pełny przykład, zobacz [wprowadzenie do danych przykładowych tworzenia szablonów](http://go.microsoft.com/fwlink/?LinkID=160009).</span><span class="sxs-lookup"><span data-stu-id="95ee1-142">For the complete sample, see [Introduction to Data Templating Sample](http://go.microsoft.com/fwlink/?LinkID=160009).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>