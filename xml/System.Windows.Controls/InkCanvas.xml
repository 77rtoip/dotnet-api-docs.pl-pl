<Type Name="InkCanvas" FullName="System.Windows.Controls.InkCanvas">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="42ba86c1dbd2eab3ddd951fe615e1e7a4f36eb6e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30697727" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class InkCanvas : System.Windows.FrameworkElement, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi InkCanvas extends System.Windows.FrameworkElement implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.InkCanvas" />
  <TypeSignature Language="VB.NET" Value="Public Class InkCanvas&#xA;Inherits FrameworkElement&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class InkCanvas : System::Windows::FrameworkElement, System::Windows::Markup::IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.FrameworkElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Children")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="86c4d-101">Definiuje obszar, który odbiera i wyświetlane pociągnięcia odręczne.</span>
      <span class="sxs-lookup">
        <span data-stu-id="86c4d-101">Defines an area that receives and displays ink strokes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-102"><xref:System.Windows.Controls.InkCanvas> Jest elementem, który może służyć do pobierania i wyświetlania odręczne.</span><span class="sxs-lookup"><span data-stu-id="86c4d-102">An <xref:System.Windows.Controls.InkCanvas> is an element that can be used to receive and display ink input.</span></span> <span data-ttu-id="86c4d-103">Często jest to realizowane przy użyciu pióra, która współdziała z dyskretyzatora, aby utworzyć przy użyciu pióro lub mysz pociągnięcia odręczne.</span><span class="sxs-lookup"><span data-stu-id="86c4d-103">This is commonly done through the use of a stylus, which interacts with a digitizer to produce ink strokes using a stylus or a mouse.</span></span> <span data-ttu-id="86c4d-104">Utworzona kolekcja strokes są reprezentowane jako <xref:System.Windows.Ink.Stroke> obiektów i można operować albo programowo lub w oparciu o dane wejściowe użytkownika.</span><span class="sxs-lookup"><span data-stu-id="86c4d-104">The created strokes are represented as <xref:System.Windows.Ink.Stroke> objects, and can be manipulated either programmatically or based on user input.</span></span> <span data-ttu-id="86c4d-105"><xref:System.Windows.Controls.InkCanvas> Umożliwia użytkownikom zmodyfikować lub usunąć istniejące <xref:System.Windows.Ink.Stroke>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-105">The <xref:System.Windows.Controls.InkCanvas> enables users to modify or delete an existing <xref:System.Windows.Ink.Stroke>.</span></span>  
  
 <span data-ttu-id="86c4d-106"><xref:System.Windows.Controls.InkCanvas> Może być powiązana ze źródłem danych.</span><span class="sxs-lookup"><span data-stu-id="86c4d-106">The <xref:System.Windows.Controls.InkCanvas> can be bound to a data source.</span></span> <span data-ttu-id="86c4d-107">Na przykład można powiązać <xref:System.Windows.Controls.InkCanvas.Strokes%2A> właściwości: base-64, zakodowany ciąg, który zawiera odręczne dane serializowane odręczne formatu (ISF); a nawet do <xref:System.Windows.Controls.InkCanvas.Strokes%2A> mienia innych <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-107">For example, you can bind the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property to: a base-64, encoded string that contains ink data in Ink Serialized format (ISF); or even to the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property of another <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="86c4d-108">Może także powiązać właściwości, takie jak <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> i <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, z innymi źródłami danych.</span><span class="sxs-lookup"><span data-stu-id="86c4d-108">You can also bind properties, such as <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> and <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, to other data sources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86c4d-109">W poniższym przykładzie pokazano symulowanie Użyj pióra i wyróżnienia na tym samym <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-109">The following example demonstrates how to simulate the use of both a pen and a highlighter on the same <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="86c4d-110">W przykładzie założono, że element główny w pliku markup language (XAML) to <xref:System.Windows.Controls.DockPanel> o nazwie `root`.</span><span class="sxs-lookup"><span data-stu-id="86c4d-110">The example assumes that the root element in the markup language (XAML) file is a <xref:System.Windows.Controls.DockPanel> called `root`.</span></span> <span data-ttu-id="86c4d-111">Założono również, że istnieje <xref:System.Windows.Controls.Button> o nazwie `switchHighlighter` , a jednocześnie <xref:System.Windows.Controls.Primitives.ButtonBase.Click> i <xref:System.Windows.FrameworkElement.Loaded> zdarzenia są podłączone do obsługi zdarzeń w tym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="86c4d-111">It also assumes that there is a <xref:System.Windows.Controls.Button> called `switchHighlighter` and that both the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> and <xref:System.Windows.FrameworkElement.Loaded> events are connected to the example's event handler.</span></span>  
  
 [!code-csharp[DrawingAttributes#3](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#3)]
 [!code-vb[DrawingAttributes#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#3)]  
  
 <span data-ttu-id="86c4d-112">Poniższy przykład deklaruje dwa <xref:System.Windows.Controls.InkCanvas> obiektów w kodzie XAML i ustanawia powiązania danych między nimi i innych źródeł danych.</span><span class="sxs-lookup"><span data-stu-id="86c4d-112">The following example declares two <xref:System.Windows.Controls.InkCanvas> objects in XAML and establishes data binding between them and other data sources.</span></span> <span data-ttu-id="86c4d-113">Pierwszy <xref:System.Windows.Controls.InkCanvas>o nazwie `ic`, jest powiązany z dwóch źródeł danych.</span><span class="sxs-lookup"><span data-stu-id="86c4d-113">The first <xref:System.Windows.Controls.InkCanvas>, called `ic`, is bound to two data sources.</span></span> <span data-ttu-id="86c4d-114"><xref:System.Windows.Controls.InkCanvas.EditingMode%2A> i <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> właściwości `ic` są powiązane z <xref:System.Windows.Controls.ListBox> obiektów, które z kolei powiązane z tablic zdefiniowane w pliku XAML.</span><span class="sxs-lookup"><span data-stu-id="86c4d-114">The <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> and <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> properties on `ic` are bound to <xref:System.Windows.Controls.ListBox> objects, which are, in turn, bound to arrays defined in the XAML.</span></span> <span data-ttu-id="86c4d-115"><xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A>, I <xref:System.Windows.Controls.InkCanvas.Strokes%2A> właściwości drugiego <xref:System.Windows.Controls.InkCanvas> powiązanych do pierwszej <xref:System.Windows.Controls.InkCanvas> w poniższym kodzie.</span><span class="sxs-lookup"><span data-stu-id="86c4d-115">The <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A>, and <xref:System.Windows.Controls.InkCanvas.Strokes%2A> properties of the second <xref:System.Windows.Controls.InkCanvas> are bound to the first <xref:System.Windows.Controls.InkCanvas> in the following code.</span></span>  
  
 [!code-xaml[InkCanvasBindingSnippet#1](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasBindingSnippet/CS/Window1.xaml#1)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InkCanvas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InkCanvas();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-116">Inicjuje nowe wystąpienie klasy InkCanvas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-116">Initializes a new instance of the InkCanvas class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveEditingMode">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.InkCanvasEditingMode ActiveEditingMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.InkCanvasEditingMode ActiveEditingMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.ActiveEditingMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveEditingMode As InkCanvasEditingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::InkCanvasEditingMode ActiveEditingMode { System::Windows::Controls::InkCanvasEditingMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasEditingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-117">Pobiera bieżący tryb edycji <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-117">Gets the current editing mode of the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86c4d-118">Bieżący tryb edycji <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-118">The current editing mode of the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-119"><xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> Właściwość wskazuje bieżący <xref:System.Windows.Controls.InkCanvasEditingMode> z <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-119">The <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> property indicates the current <xref:System.Windows.Controls.InkCanvasEditingMode> of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  <span data-ttu-id="86c4d-120">Załóżmy, że <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> ustawiono <xref:System.Windows.Controls.InkCanvasEditingMode.Ink> i <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> ma ustawioną wartość <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-120">Suppose that the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode.Ink> and the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.</span></span>  <span data-ttu-id="86c4d-121">Gdy pióro jest używany w pozycji odwrócony <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> ma wartość <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-121">When the tablet pen is used in an inverted position, <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> has a value of <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.</span></span> <span data-ttu-id="86c4d-122">W przeciwnym razie jego wartość wynosi <xref:System.Windows.Controls.InkCanvasEditingMode.Ink>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-122">Otherwise, its value is <xref:System.Windows.Controls.InkCanvasEditingMode.Ink>.</span></span>  
  
<a name="dependencyPropertyInfo_ActiveEditingMode"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="86c4d-123">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="86c4d-123">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="86c4d-124">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="86c4d-124">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.ActiveEditingModeProperty>|  
|<span data-ttu-id="86c4d-125">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="86c4d-125">Metadata properties set to `true`</span></span>|<span data-ttu-id="86c4d-126">Brak</span><span class="sxs-lookup"><span data-stu-id="86c4d-126">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="86c4d-127">Poniższy przykład raporty wartość <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> zawsze, gdy zmieni się.</span><span class="sxs-lookup"><span data-stu-id="86c4d-127">The following example reports the value of <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> whenever it changes.</span></span>  
  
 [!code-csharp[InkCanvasSamples#36](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#36)]
 [!code-vb[InkCanvasSamples#36](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#36)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveEditingModeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler ActiveEditingModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler ActiveEditingModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ActiveEditingModeChanged As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ ActiveEditingModeChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-128">Występuje po zmianie bieżącego trybu edycji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-128">Occurs when the current editing mode changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-129"><xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> Zawsze, gdy zmienia się właściwość <xref:System.Windows.Controls.InkCanvas> wprowadza nowy tryb edycji.</span><span class="sxs-lookup"><span data-stu-id="86c4d-129">The <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> property changes whenever the <xref:System.Windows.Controls.InkCanvas> enters a new editing mode.</span></span> <span data-ttu-id="86c4d-130">Na przykład, załóżmy, że <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> ustawiono <xref:System.Windows.Controls.InkCanvasEditingMode.Ink> i <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> ma ustawioną wartość <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-130">For example, suppose that the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode.Ink> and the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.</span></span> <span data-ttu-id="86c4d-131">Gdy użytkownik zmieni poradę pióra, <xref:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged> zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="86c4d-131">When the user changes the tip of tablet pen, the <xref:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged> event occurs.</span></span>  
  
<a name="routedEventInfo_ActiveEditingModeChanged"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="86c4d-132">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="86c4d-132">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="86c4d-133">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="86c4d-133">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.ActiveEditingModeChangedEvent>|  
|<span data-ttu-id="86c4d-134">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="86c4d-134">Routing strategy</span></span>|<span data-ttu-id="86c4d-135">Bubbling</span><span class="sxs-lookup"><span data-stu-id="86c4d-135">Bubbling</span></span>|  
|<span data-ttu-id="86c4d-136">Delegate</span><span class="sxs-lookup"><span data-stu-id="86c4d-136">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="86c4d-137">Poniższy przykład raporty wartość <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> zawsze, gdy zmieni się.</span><span class="sxs-lookup"><span data-stu-id="86c4d-137">The following example reports the value of <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> whenever it changes.</span></span>  
  
 [!code-csharp[InkCanvasSamples#36](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#36)]
 [!code-vb[InkCanvasSamples#36](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#36)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnActiveEditingModeChanged(System.Windows.RoutedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ActiveEditingModeChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ActiveEditingModeChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ActiveEditingModeChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.ActiveEditingModeChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ActiveEditingModeChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ActiveEditingModeChangedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-138">Identyfikuje <see cref="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-138">Identifies the <see cref="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveEditingModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ActiveEditingModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ActiveEditingModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.ActiveEditingModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ActiveEditingModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ActiveEditingModeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-139">Identyfikuje <see cref="P:System.Windows.Controls.InkCanvas.ActiveEditingMode" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-139">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.ActiveEditingMode" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size ArrangeOverride (System.Windows.Size arrangeSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size ArrangeOverride(valuetype System.Windows.Size arrangeSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.ArrangeOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ArrangeOverride (arrangeSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size ArrangeOverride(System::Windows::Size arrangeSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrangeSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="arrangeSize">
          <span data-ttu-id="86c4d-140">Obszar końcowego nadrzędnym, która powinna być używana przez ten element ułożyć się i jego elementów podrzędnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-140">The final area within the parent that this element should use to arrange itself and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86c4d-141">Określa położenie elementów podrzędnych i określa rozmiar <see cref="T:System.Windows.Controls.InkCanvas" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-141">Positions child elements and determines a size for the <see cref="T:System.Windows.Controls.InkCanvas" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86c4d-142">Rzeczywisty rozmiar używane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-142">The actual size used.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Background">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush Background { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush Background" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.Background" />
      <MemberSignature Language="VB.NET" Value="Public Property Background As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ Background { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-143">Pobiera lub ustawia <see cref="T:System.Windows.Media.Brush" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-143">Gets or sets a <see cref="T:System.Windows.Media.Brush" />.</span>
          </span>
          <span data-ttu-id="86c4d-144">Pędzel używany do wypełnienia obramowania otaczającego obszar <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-144">The brush is used to fill the border area surrounding a <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86c4d-145">A <see cref="T:System.Windows.Media.Brush" /> używany do wypełnienia obramowania otaczającego obszar <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-145">A <see cref="T:System.Windows.Media.Brush" /> used to fill the border area surrounding a <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Background"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="86c4d-146">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="86c4d-146">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="86c4d-147">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="86c4d-147">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.BackgroundProperty>|  
|<span data-ttu-id="86c4d-148">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="86c4d-148">Metadata properties set to `true`</span></span>|<span data-ttu-id="86c4d-149"><xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A></span><span class="sxs-lookup"><span data-stu-id="86c4d-149"><xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="86c4d-150">W poniższym przykładzie pokazano, jak ustawić <xref:System.Windows.Controls.InkCanvas.Background%2A> właściwość <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-150">The following example demonstrates how to set the <xref:System.Windows.Controls.InkCanvas.Background%2A> property on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#37](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#37)]
 [!code-vb[InkCanvasSamples#37](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#37)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BackgroundProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BackgroundProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.BackgroundProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BackgroundProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BackgroundProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-151">Identyfikuje <see cref="P:System.Windows.Controls.InkCanvas.Background" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-151">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Background" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bottom">
      <MemberSignature Language="C#" Value="see GetBottom, and SetBottom" />
      <MemberSignature Language="ILAsm" Value="see GetBottom, and SetBottom" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.Bottom" />
      <MemberSignature Language="VB.NET" Value="see GetBottom, and SetBottom" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BottomProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BottomProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BottomProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.BottomProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BottomProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BottomProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-152">Identyfikuje <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> dołączona właściwość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-152">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanPaste">
      <MemberSignature Language="C#" Value="public bool CanPaste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanPaste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.CanPaste" />
      <MemberSignature Language="VB.NET" Value="Public Function CanPaste () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanPaste();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-153">Wskazuje, czy zawartość Schowka można wkleić do <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-153">Indicates whether the contents of the Clipboard can be pasted into the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86c4d-154">
            <see langword="true" /> Jeśli zawartość Schowka można wkleić w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-154">
              <see langword="true" /> if the contents of the Clipboard can be pasted in; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-155"><xref:System.Windows.Controls.InkCanvas> Może obsługiwać danych ze Schowka w [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]i format tekstu.</span><span class="sxs-lookup"><span data-stu-id="86c4d-155">The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)], and text format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86c4d-156">W poniższym przykładzie kopiuje element do Schowka i wkleja go do <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-156">The following example copies an element to the Clipboard and pastes it to the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="86c4d-157">W tym przykładzie założono, że istnieje element o nazwie `rect1`oraz że <xref:System.Windows.Controls.Primitives.ButtonBase.Click> zdarzenia były podłączone do obsługi zdarzeń w przykładzie.</span><span class="sxs-lookup"><span data-stu-id="86c4d-157">This example assumes that there is an element called `rect1`, and that the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> events have been connected to the event handlers in the example.</span></span>  
  
 [!code-csharp[InkCanvasSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[InkCanvasSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="86c4d-158">Uprawnienia do Wklej zawartość Schowka do <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-158">Permission to paste content from the Clipboard to the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
          <span data-ttu-id="86c4d-159">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-159">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" />.</span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Controls.InkCanvas.CopySelection" />
        <altmember cref="Overload:System.Windows.Controls.InkCanvas.Paste" />
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.UIElementCollection Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.UIElementCollection Children" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.Children" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Children As UIElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::UIElementCollection ^ Children { System::Windows::Controls::UIElementCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.UIElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-160">Pobiera elementy podrzędne <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-160">Retrieves child elements of the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86c4d-161">Kolekcja elementów podrzędnych znajdujących się na <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-161">A collection of child elements located on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Children"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="86c4d-162">Użycie elementu właściwości języka XAML</span><span class="sxs-lookup"><span data-stu-id="86c4d-162">XAML Property Element Usage</span></span>  
  
```  
<object>  
  OneOrMoreUIElements  
</object>  
```  
  
<a name="xamlValues_Children"></a>   
## <a name="xaml-values"></a><span data-ttu-id="86c4d-163">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="86c4d-163">XAML Values</span></span>  
 <span data-ttu-id="86c4d-164">*OneOrMoreUIElements*</span><span class="sxs-lookup"><span data-stu-id="86c4d-164">*OneOrMoreUIElements*</span></span>  
 <span data-ttu-id="86c4d-165">Co najmniej jeden <xref:System.Windows.UIElement> obiektów.</span><span class="sxs-lookup"><span data-stu-id="86c4d-165">One or more <xref:System.Windows.UIElement> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86c4d-166">W poniższym przykładzie dodano <xref:System.Windows.Controls.TextBlock> do <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-166">The following example adds a <xref:System.Windows.Controls.TextBlock> to an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#8](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#8)]
 [!code-vb[InkCanvasSamples#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopySelection">
      <MemberSignature Language="C#" Value="public void CopySelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopySelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.CopySelection" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopySelection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopySelection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-167">Kopie wybranych pociągnięć i/lub elementy do Schowka.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-167">Copies selected strokes and/or elements to the Clipboard.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-168"><xref:System.Windows.Controls.InkCanvas> Może obsługiwać danych ze Schowka w [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]i format tekstu.</span><span class="sxs-lookup"><span data-stu-id="86c4d-168">The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)], and text format.</span></span> <span data-ttu-id="86c4d-169">Pociągnięć do Schowka są [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)].</span><span class="sxs-lookup"><span data-stu-id="86c4d-169">Strokes to the Clipboard are both [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86c4d-170">Poniższy przykład wybiera dwa elementy w <xref:System.Windows.Controls.InkCanvas> i kopiuje je do Schowka.</span><span class="sxs-lookup"><span data-stu-id="86c4d-170">The following example selects two elements on an <xref:System.Windows.Controls.InkCanvas> and copies them to the Clipboard.</span></span> <span data-ttu-id="86c4d-171">W tym przykładzie założono, że istnieje <xref:System.Windows.Controls.TextBox> o nazwie `textbox1` i <xref:System.Windows.Controls.Button> o nazwie `button1 -` i elementy podrzędne są formanty thatboth <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-171">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textbox1` and a <xref:System.Windows.Controls.Button> called `button1 -` and thatboth controls are child elements of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#3](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#3)]
 [!code-vb[InkCanvasSamples#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.CanPaste" />
        <altmember cref="Overload:System.Windows.Controls.InkCanvas.Paste" />
      </Docs>
    </Member>
    <Member MemberName="CutSelection">
      <MemberSignature Language="C#" Value="public void CutSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CutSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.CutSelection" />
      <MemberSignature Language="VB.NET" Value="Public Sub CutSelection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CutSelection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-172">Usuwa wybranych pociągnięć i elementów i kopiuje je do Schowka.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-172">Deletes the selected strokes and elements, and copies them to the Clipboard.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-173"><xref:System.Windows.Controls.InkCanvas> Może obsługiwać danych ze Schowka w [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]i format tekstu.</span><span class="sxs-lookup"><span data-stu-id="86c4d-173">The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)], and text format.</span></span> <span data-ttu-id="86c4d-174">Pociągnięć do Schowka są [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)].</span><span class="sxs-lookup"><span data-stu-id="86c4d-174">Strokes to the Clipboard are both [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86c4d-175">W poniższym przykładzie wybiera i poprzecznego dwa elementy na <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-175">The following example selects and cuts two elements on an <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="86c4d-176">W tym przykładzie założono, że istnieje <xref:System.Windows.Controls.TextBox> o nazwie `textbox1` i <xref:System.Windows.Controls.Button> o nazwie `button1` - i że oba formanty są elementy podrzędne <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-176">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textbox1` and a <xref:System.Windows.Controls.Button> called `button1` - and that both controls are child elements of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#4](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#4)]
 [!code-vb[InkCanvasSamples#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultDrawingAttributes">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.DrawingAttributes DefaultDrawingAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Ink.DrawingAttributes DefaultDrawingAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultDrawingAttributes As DrawingAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Ink::DrawingAttributes ^ DefaultDrawingAttributes { System::Windows::Ink::DrawingAttributes ^ get(); void set(System::Windows::Ink::DrawingAttributes ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.DrawingAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-177">Pobiera lub ustawia atrybuty rysowania, które są stosowane do nowych pociągnięcia odręczne na <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-177">Gets or sets the drawing attributes that are applied to new ink strokes made on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86c4d-178">Domyślne atrybuty rysowania <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-178">The default drawing attributes for the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-179">Ustawienie tej właściwości będzie miało wpływ na tylko nowych obiektów wprowadzone po ustawieniu tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="86c4d-179">Setting this property will affect only new strokes that are made after this property is set.</span></span> <span data-ttu-id="86c4d-180">Aby zastosować nowe atrybuty rysowania ma już utworzony <xref:System.Windows.Ink.Stroke> obiektów, dostęp do nich oddzielnie, używając <xref:System.Windows.Controls.InkCanvas.Strokes%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="86c4d-180">To apply new drawing attributes to already-created <xref:System.Windows.Ink.Stroke> objects, access them individually using the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property.</span></span>  
  
<a name="dependencyPropertyInfo_DefaultDrawingAttributes"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="86c4d-181">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="86c4d-181">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="86c4d-182">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="86c4d-182">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesProperty>|  
|<span data-ttu-id="86c4d-183">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="86c4d-183">Metadata properties set to `true`</span></span>|<span data-ttu-id="86c4d-184">Brak</span><span class="sxs-lookup"><span data-stu-id="86c4d-184">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="86c4d-185">W poniższym przykładzie pokazano, jak używać dwóch <xref:System.Windows.Ink.DrawingAttributes> obiektów do symulowania środowiska przy użyciu pióra i wyróżnienia na tym samym <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-185">The following example demonstrates how to use two <xref:System.Windows.Ink.DrawingAttributes> objects to simulate the experience of using a pen and a highlighter on the same <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="86c4d-186">W przykładzie założono, że element główny w pliku markup language (XAML) to <xref:System.Windows.Controls.DockPanel> o nazwie `root`.</span><span class="sxs-lookup"><span data-stu-id="86c4d-186">The example assumes that the root element in the markup language (XAML) file is a <xref:System.Windows.Controls.DockPanel> called `root`.</span></span> <span data-ttu-id="86c4d-187">Założono również, że istnieje <xref:System.Windows.Controls.Button> o nazwie `switchHilighter` oraz że <xref:System.Windows.Controls.Primitives.ButtonBase.Click> zdarzeń jest podłączony do obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="86c4d-187">It also assumes that there is a <xref:System.Windows.Controls.Button> called `switchHilighter` and that the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event is connected to the event handler.</span></span>  
  
 [!code-csharp[DrawingAttributes#3](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#3)]
 [!code-vb[DrawingAttributes#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#3)]  
  
 <span data-ttu-id="86c4d-188">W poniższym przykładzie pokazano, jak można powiązać <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> właściwości ze źródłem danych.</span><span class="sxs-lookup"><span data-stu-id="86c4d-188">The following example demonstrates how to bind the <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> property to a data source.</span></span>  
  
 [!code-xaml[InkCanvasBindingSnippet#3](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasBindingSnippet/CS/Window2.xaml#3)]  
 [!code-xaml[InkCanvasBindingSnippet#4](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasBindingSnippet/CS/Window2.xaml#4)]   
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.InkCanvas.Strokes" />
      </Docs>
    </Member>
    <Member MemberName="DefaultDrawingAttributesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DefaultDrawingAttributesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DefaultDrawingAttributesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultDrawingAttributesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DefaultDrawingAttributesProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-189">Identyfikuje <see cref="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-189">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultDrawingAttributesReplaced">
      <MemberSignature Language="C#" Value="public event System.Windows.Ink.DrawingAttributesReplacedEventHandler DefaultDrawingAttributesReplaced;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Ink.DrawingAttributesReplacedEventHandler DefaultDrawingAttributesReplaced" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced" />
      <MemberSignature Language="VB.NET" Value="Public Event DefaultDrawingAttributesReplaced As DrawingAttributesReplacedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Ink::DrawingAttributesReplacedEventHandler ^ DefaultDrawingAttributesReplaced;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.DrawingAttributesReplacedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-190">Występuje, gdy <see cref="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" /> zastępuje właściwość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-190">Occurs when the <see cref="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" /> property is replaced.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86c4d-191">Poniższy przykład sprawdza wartość <xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A> właściwości nowej <xref:System.Windows.Ink.DrawingAttributes> obiektu.</span><span class="sxs-lookup"><span data-stu-id="86c4d-191">The following example checks the value of the <xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A> property of the new <xref:System.Windows.Ink.DrawingAttributes> object.</span></span>  
  
 [!code-csharp[DrawingAttributes#17](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#17)]
 [!code-vb[DrawingAttributes#17](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultStylusPointDescription">
      <MemberSignature Language="C#" Value="public System.Windows.Input.StylusPointDescription DefaultStylusPointDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.StylusPointDescription DefaultStylusPointDescription" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultStylusPointDescription As StylusPointDescription" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::StylusPointDescription ^ DefaultStylusPointDescription { System::Windows::Input::StylusPointDescription ^ get(); void set(System::Windows::Input::StylusPointDescription ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusPointDescription</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-192">Pobiera lub ustawia opis punktu pióro <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-192">Gets or sets the stylus point description for an <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86c4d-193">Opis punktu pióro <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-193">The stylus point description for an <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-194">Domyślnie <xref:System.Windows.Controls.InkCanvas> przechowuje tylko <xref:System.Windows.Input.StylusPointProperties.X>, <xref:System.Windows.Input.StylusPointProperties.Y>, i <xref:System.Windows.Input.StylusPointProperties.NormalPressure> właściwości dla każdego <xref:System.Windows.Input.StylusPoint> należące do obiektu stroke.</span><span class="sxs-lookup"><span data-stu-id="86c4d-194">By default, the <xref:System.Windows.Controls.InkCanvas> stores only the <xref:System.Windows.Input.StylusPointProperties.X>, <xref:System.Windows.Input.StylusPointProperties.Y>, and <xref:System.Windows.Input.StylusPointProperties.NormalPressure> properties for each <xref:System.Windows.Input.StylusPoint> belonging to a stroke.</span></span> <span data-ttu-id="86c4d-195">Właściwość DefaultStylusPointDescription służy do przechowywania dodatkowych informacji o punktach obejmujące naciśnięcia na <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-195">You can use the DefaultStylusPointDescription property to store additional information about points comprising the strokes on a <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="86c4d-196">Ustawienie tej właściwości będzie miało wpływ na tylko nowych obiektów wprowadzone po ustawieniu właściwości.</span><span class="sxs-lookup"><span data-stu-id="86c4d-196">Setting this property will affect only new strokes that are made after the property is set.</span></span>  
  
<a name="xamlTextUsage_DefaultStylusPointDescription"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="86c4d-197">Użycie tekstu w języku XAML</span><span class="sxs-lookup"><span data-stu-id="86c4d-197">XAML Text Usage</span></span>  
 <span data-ttu-id="86c4d-198">Nie można użyć tej właściwości w [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="86c4d-198">You cannot use this property in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86c4d-199">W poniższym przykładzie <xref:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription%2A> , aby punkty pióro pociągnięć na <xref:System.Windows.Controls.InkCanvas> zawierają <xref:System.Windows.Input.StylusPointProperties.X>, <xref:System.Windows.Input.StylusPointProperties.Y>, <xref:System.Windows.Input.StylusPointProperties.NormalPressure>, i <xref:System.Windows.Input.StylusPointProperties.TipButton> właściwości.</span><span class="sxs-lookup"><span data-stu-id="86c4d-199">The following example sets the <xref:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription%2A> so that the stylus points of the strokes on the <xref:System.Windows.Controls.InkCanvas> contain the <xref:System.Windows.Input.StylusPointProperties.X>, <xref:System.Windows.Input.StylusPointProperties.Y>, <xref:System.Windows.Input.StylusPointProperties.NormalPressure>, and <xref:System.Windows.Input.StylusPointProperties.TipButton> properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86c4d-200">Tylko pociągnięć, które są dodawane do <xref:System.Windows.Controls.InkCanvas> po <xref:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription%2A> ma ustawioną wartość zawiera dodatkowe właściwości.</span><span class="sxs-lookup"><span data-stu-id="86c4d-200">Only the strokes that are added to the <xref:System.Windows.Controls.InkCanvas> after the <xref:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription%2A> is set to contain the additional property.</span></span>  
  
 [!code-csharp[InkCanvasSamples#9](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#9)]
 [!code-vb[InkCanvasSamples#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.StylusPointProperties" />
        <altmember cref="T:System.Windows.Input.StylusPointProperty" />
        <altmember cref="T:System.Windows.Input.StylusPointPropertyInfo" />
      </Docs>
    </Member>
    <Member MemberName="DynamicRenderer">
      <MemberSignature Language="C#" Value="protected System.Windows.Input.StylusPlugIns.DynamicRenderer DynamicRenderer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.StylusPlugIns.DynamicRenderer DynamicRenderer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.DynamicRenderer" />
      <MemberSignature Language="VB.NET" Value="Protected Property DynamicRenderer As DynamicRenderer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Input::StylusPlugIns::DynamicRenderer ^ DynamicRenderer { System::Windows::Input::StylusPlugIns::DynamicRenderer ^ get(); void set(System::Windows::Input::StylusPlugIns::DynamicRenderer ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusPlugIns.DynamicRenderer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-201">Pobiera lub ustawia mechanizm renderujący to dynamicznie rysuje pismo odręczne na <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-201">Gets or sets the renderer that dynamically draws ink on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86c4d-202">Mechanizm renderujący czy dynamicznie rysuje pismo odręczne na <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-202">The renderer that dynamically draws ink on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-203">Można ustawić <xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A> właściwości do niestandardowego <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> Jeśli chcesz dostosować pismo odręczne.</span><span class="sxs-lookup"><span data-stu-id="86c4d-203">You can set the <xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A> property to a custom <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> if you want to customize the ink.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86c4d-204"><xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A> Jest elementem członkowskim <xref:System.Windows.UIElement.StylusPlugIns%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="86c4d-204">The <xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A> is a member of the <xref:System.Windows.UIElement.StylusPlugIns%2A> collection.</span></span> <span data-ttu-id="86c4d-205">Podczas ustawiania <xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A>, <xref:System.Windows.Controls.InkCanvas> usuwa stare <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> z <xref:System.Windows.Input.StylusPlugIns.StylusPlugInCollection> i dodaje nowe <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> na końcu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="86c4d-205">When you set the <xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A>, the <xref:System.Windows.Controls.InkCanvas> removes the old <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> from the <xref:System.Windows.Input.StylusPlugIns.StylusPlugInCollection> and adds the new <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> to the end of the collection.</span></span> <span data-ttu-id="86c4d-206">Może to spowodować zmianę zachowania <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-206">This may change the behavior of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingMode">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.InkCanvasEditingMode EditingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.InkCanvasEditingMode EditingMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.EditingMode" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingMode As InkCanvasEditingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::InkCanvasEditingMode EditingMode { System::Windows::Controls::InkCanvasEditingMode get(); void set(System::Windows::Controls::InkCanvasEditingMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasEditingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-207">Pobiera lub ustawia użytkownika używany przez urządzenie wskazujące aktywny tryb edycji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-207">Gets or sets the user editing mode used by an active pointing device.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86c4d-208">Tryb edycji używany, gdy urządzenia wskazującego (na przykład pióro lub mysz) jest aktywny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-208">The editing mode used when a pointing device (such as a tablet pen or mouse) is active.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-209">Wartość domyślna <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> jest <xref:System.Windows.Controls.InkCanvasEditingMode.Ink>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-209">The default <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> is <xref:System.Windows.Controls.InkCanvasEditingMode.Ink>.</span></span> <span data-ttu-id="86c4d-210">Zmiana <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> spowoduje usunięcie istniejących zaznaczeń.</span><span class="sxs-lookup"><span data-stu-id="86c4d-210">Changing the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> clears any existing selections.</span></span>  
  
 <span data-ttu-id="86c4d-211"><xref:System.Windows.Controls.InkCanvas.EditingMode%2A> Określa tryb urządzenia wskazującego, jak interakcji z <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-211">The <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> specifies the mode of the pointing device as it interacts with the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="86c4d-212"><xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> jest używany przez niektóre digitizerów, gdy kontaktuje się "Gumka końca" pióro dyskretyzatora.</span><span class="sxs-lookup"><span data-stu-id="86c4d-212"><xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> is used by some digitizers when the "eraser end" of the stylus contacts the digitizer.</span></span>  
  
<a name="dependencyPropertyInfo_EditingMode"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="86c4d-213">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="86c4d-213">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="86c4d-214">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="86c4d-214">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.EditingModeProperty>|  
|<span data-ttu-id="86c4d-215">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="86c4d-215">Metadata properties set to `true`</span></span>|<span data-ttu-id="86c4d-216">Brak</span><span class="sxs-lookup"><span data-stu-id="86c4d-216">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="86c4d-217">Poniższy przykład tworzy aplikację, która używa różnych typów tryby edycji na <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-217">The following example creates an application that uses the various types of editing modes on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[ICEditingModeSample#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ICEditingModeSample/CSharp/Window1.xaml.cs#1)]
 [!code-vb[ICEditingModeSample#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ICEditingModeSample/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" />
      </Docs>
    </Member>
    <Member MemberName="EditingModeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler EditingModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler EditingModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.EditingModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EditingModeChanged As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ EditingModeChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-218">Występuje, gdy <see cref="P:System.Windows.Controls.InkCanvas.EditingMode" /> właściwość <see cref="T:System.Windows.Controls.InkCanvas" /> obiekt został zmieniony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-218">Occurs when the <see cref="P:System.Windows.Controls.InkCanvas.EditingMode" /> property of an <see cref="T:System.Windows.Controls.InkCanvas" /> object has been changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-219">To zdarzenie występuje po zmianie trybu edycji; zmiany zostaną odzwierciedlone w <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> właściwość <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-219">This event occurs after the editing mode has been changed; the changes are reflected in the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
<a name="routedEventInfo_EditingModeChanged"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="86c4d-220">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="86c4d-220">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="86c4d-221">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="86c4d-221">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.EditingModeChangedEvent>|  
|<span data-ttu-id="86c4d-222">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="86c4d-222">Routing strategy</span></span>|<span data-ttu-id="86c4d-223">Bubbling</span><span class="sxs-lookup"><span data-stu-id="86c4d-223">Bubbling</span></span>|  
|<span data-ttu-id="86c4d-224">Delegate</span><span class="sxs-lookup"><span data-stu-id="86c4d-224">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="86c4d-225">Następujące testy przykład czy <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> właściwość jest ustawiona na <xref:System.Windows.Controls.InkCanvasEditingMode.Ink> lub <xref:System.Windows.Controls.InkCanvasEditingMode.Select>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-225">The following example checks whether the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode.Ink> or <xref:System.Windows.Controls.InkCanvasEditingMode.Select>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#21](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#21)]
 [!code-vb[InkCanvasSamples#21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingModeChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent EditingModeChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent EditingModeChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.EditingModeChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EditingModeChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ EditingModeChangedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-226">Identyfikuje <see cref="E:System.Windows.Controls.InkCanvas.EditingModeChanged" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-226">Identifies the <see cref="E:System.Windows.Controls.InkCanvas.EditingModeChanged" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingModeInverted">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.InkCanvasEditingMode EditingModeInverted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.InkCanvasEditingMode EditingModeInverted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.EditingModeInverted" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingModeInverted As InkCanvasEditingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::InkCanvasEditingMode EditingModeInverted { System::Windows::Controls::InkCanvasEditingMode get(); void set(System::Windows::Controls::InkCanvasEditingMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasEditingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-227">Pobiera lub ustawia użytkownika tryb edycji, gdy pióro jest zmieniany przy interakcji z <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-227">Gets or sets the user editing mode if the stylus is inverted when it interacts with the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86c4d-228">Odwrócony tryb edycji <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-228">The inverted editing mode of the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-229">Ta właściwość określa akcje, które są wykonywane, gdy pióro jest odwrócony.</span><span class="sxs-lookup"><span data-stu-id="86c4d-229">This property controls the actions that are performed when the stylus is inverted.</span></span>  
  
 <span data-ttu-id="86c4d-230">Podobnie <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> właściwość określa akcje, które są wykonywane, gdy pióro znajduje się w stanie standardowe, porada w dół względem dyskretyzatora,</span><span class="sxs-lookup"><span data-stu-id="86c4d-230">Similarly, the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property controls actions that are performed when the stylus is in a standard, tip-down position against the digitizer,</span></span>  
  
<a name="dependencyPropertyInfo_EditingModeInverted"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="86c4d-231">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="86c4d-231">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="86c4d-232">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="86c4d-232">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.EditingModeInvertedProperty>|  
|<span data-ttu-id="86c4d-233">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="86c4d-233">Metadata properties set to `true`</span></span>|<span data-ttu-id="86c4d-234">Brak</span><span class="sxs-lookup"><span data-stu-id="86c4d-234">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="86c4d-235">W poniższym przykładzie pokazano, jak zezwolić użytkownikowi na częściowo wymazać pociągnięć odwrócony końcówką pióra.</span><span class="sxs-lookup"><span data-stu-id="86c4d-235">The following example demonstrates how to allow a user to partially erase strokes with the inverted tip of a stylus.</span></span> <span data-ttu-id="86c4d-236">Pojawi się eliptycznej kursor na <xref:System.Windows.Controls.InkCanvas> gdy użytkownik usuwa odręczne.</span><span class="sxs-lookup"><span data-stu-id="86c4d-236">An elliptical cursor appears on the <xref:System.Windows.Controls.InkCanvas> when the user erases ink.</span></span>  
  
 [!code-csharp[InkCanvasSamples#6](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#6)]
 [!code-vb[InkCanvasSamples#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingModeInvertedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler EditingModeInvertedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler EditingModeInvertedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EditingModeInvertedChanged As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ EditingModeInvertedChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-237">Występuje, gdy <see cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" /> właściwość <see cref="T:System.Windows.Controls.InkCanvas" /> obiekt został zmieniony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-237">Occurs when the <see cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" /> property of an <see cref="T:System.Windows.Controls.InkCanvas" /> object has been changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-238">To zdarzenie występuje po zmianie trybu edycji odwrócony.</span><span class="sxs-lookup"><span data-stu-id="86c4d-238">This event occurs after the inverted editing mode has been changed.</span></span> <span data-ttu-id="86c4d-239">Te zmiany zostaną odzwierciedlone w <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> właściwość <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-239">These changes are reflected in the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> property of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
<a name="routedEventInfo_EditingModeInvertedChanged"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="86c4d-240">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="86c4d-240">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="86c4d-241">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="86c4d-241">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.EditingModeInvertedChangedEvent>|  
|<span data-ttu-id="86c4d-242">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="86c4d-242">Routing strategy</span></span>|<span data-ttu-id="86c4d-243">Bubbling</span><span class="sxs-lookup"><span data-stu-id="86c4d-243">Bubbling</span></span>|  
|<span data-ttu-id="86c4d-244">Delegate</span><span class="sxs-lookup"><span data-stu-id="86c4d-244">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="86c4d-245">Następujące testy przykład czy <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> właściwość jest ustawiona na <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint> lub <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-245">The following example checks whether the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint> or <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#20](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#20)]
 [!code-vb[InkCanvasSamples#20](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingModeInvertedChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent EditingModeInvertedChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent EditingModeInvertedChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.EditingModeInvertedChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EditingModeInvertedChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ EditingModeInvertedChangedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-246">Identyfikuje <see cref="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-246">Identifies the <see cref="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingModeInvertedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty EditingModeInvertedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty EditingModeInvertedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.EditingModeInvertedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EditingModeInvertedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ EditingModeInvertedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-247">Identyfikuje <see cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-247">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty EditingModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty EditingModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.EditingModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EditingModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ EditingModeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-248">Identyfikuje <see cref="P:System.Windows.Controls.InkCanvas.EditingMode" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-248">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.EditingMode" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EraserShape">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StylusShape EraserShape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Ink.StylusShape EraserShape" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.EraserShape" />
      <MemberSignature Language="VB.NET" Value="Public Property EraserShape As StylusShape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Ink::StylusShape ^ EraserShape { System::Windows::Ink::StylusShape ^ get(); void set(System::Windows::Ink::StylusShape ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StylusShape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-249">Pobiera lub ustawia <see cref="T:System.Windows.Ink.StylusShape" /> używany do punktu wymazywanie pismo odręczne z <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-249">Gets or sets the <see cref="T:System.Windows.Ink.StylusShape" /> used to point-erase ink from an <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86c4d-250">Kształt gumki skojarzone z <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-250">The eraser shape associated with the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-251">Ten kształt będzie służyć do wymazywania z <xref:System.Windows.Controls.InkCanvas> podczas bieżącej <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> ma ustawioną wartość <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-251">This shape will be used to erase ink from an <xref:System.Windows.Controls.InkCanvas> when the current <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.</span></span>  
  
 <span data-ttu-id="86c4d-252">Poszczególnych właściwości <xref:System.Windows.Ink.StylusShape> nie można zmodyfikować po utworzeniu kształtu.</span><span class="sxs-lookup"><span data-stu-id="86c4d-252">Individual properties of a <xref:System.Windows.Ink.StylusShape> cannot be modified once the shape has been created.</span></span>  
  
 <span data-ttu-id="86c4d-253">Jeśli zmienisz <xref:System.Windows.Controls.InkCanvas.EraserShape%2A>, kursor odwzorowane na <xref:System.Windows.Controls.InkCanvas> jest aktualizowana dopiero następnego <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> zmienić.</span><span class="sxs-lookup"><span data-stu-id="86c4d-253">If you change the <xref:System.Windows.Controls.InkCanvas.EraserShape%2A>, the cursor rendered on the <xref:System.Windows.Controls.InkCanvas> is not updated until the next <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> change.</span></span>  
  
<a name="xamlTextUsage_EraserShape"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="86c4d-254">Użycie tekstu w języku XAML</span><span class="sxs-lookup"><span data-stu-id="86c4d-254">XAML Text Usage</span></span>  
 <span data-ttu-id="86c4d-255">Ta właściwość nie jest zazwyczaj używana w [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="86c4d-255">This property is not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86c4d-256">W poniższym przykładzie pokazano, jak zezwolić użytkownikowi na częściowo wymazać pociągnięć odwrócony końcówką pióra.</span><span class="sxs-lookup"><span data-stu-id="86c4d-256">The following example demonstrates how to allow a user to partially erase strokes with the inverted tip of a stylus.</span></span> <span data-ttu-id="86c4d-257">Pojawi się eliptycznej kursor na <xref:System.Windows.Controls.InkCanvas> gdy użytkownik usuwa odręczne.</span><span class="sxs-lookup"><span data-stu-id="86c4d-257">An elliptical cursor appears on the <xref:System.Windows.Controls.InkCanvas> when the user erases ink.</span></span>  
  
 [!code-csharp[InkCanvasSamples#6](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#6)]
 [!code-vb[InkCanvasSamples#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Ink.StylusShape" />
      </Docs>
    </Member>
    <Member MemberName="Gesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasGestureEventHandler Gesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasGestureEventHandler Gesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.Gesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Gesture As InkCanvasGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::InkCanvasGestureEventHandler ^ Gesture;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-258">Występuje, gdy <see cref="T:System.Windows.Controls.InkCanvas" /> wykryciu gestu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-258">Occurs when the <see cref="T:System.Windows.Controls.InkCanvas" /> detects a gesture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_Gesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="86c4d-259">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="86c4d-259">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="86c4d-260">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="86c4d-260">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.GestureEvent>|  
|<span data-ttu-id="86c4d-261">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="86c4d-261">Routing strategy</span></span>|<span data-ttu-id="86c4d-262">Bubbling</span><span class="sxs-lookup"><span data-stu-id="86c4d-262">Bubbling</span></span>|  
|<span data-ttu-id="86c4d-263">Delegate</span><span class="sxs-lookup"><span data-stu-id="86c4d-263">Delegate</span></span>|<xref:System.Windows.Controls.InkCanvasGestureEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="86c4d-264">W poniższym przykładzie pokazano, jak skonfigurować <xref:System.Windows.Controls.InkCanvas> do rozpoznawania gestów aplikacji.</span><span class="sxs-lookup"><span data-stu-id="86c4d-264">The following example demonstrates how to set up an <xref:System.Windows.Controls.InkCanvas> to recognize application gestures.</span></span>  
  
 [!code-csharp[GestureSample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#3)]
 [!code-vb[GestureSample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[GestureSample#1](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#1)]
[!code-vb[GestureSample#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.GestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GestureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-265">Identyfikuje <see cref="E:System.Windows.Controls.InkCanvas.Gesture" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-265">Identifies the <see cref="E:System.Windows.Controls.InkCanvas.Gesture" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBottom">
      <MemberSignature Language="C#" Value="public static double GetBottom (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetBottom(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetBottom(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBottom (element As UIElement) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetBottom(System::Windows::UIElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForChildren</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="86c4d-266">Element, którego można pobrać właściwości dolnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-266">The element of which to get the bottom property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86c4d-267">Pobiera wartość <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> dołączona właściwość zależności danego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-267">Gets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> attached property for a given dependency object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86c4d-268">Dolna współrzędna obiekt zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-268">The bottom coordinate of the dependency object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86c4d-269">W poniższym przykładzie pokazano, jak uzyskać położenie <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-269">The following example demonstrates how to get the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#34](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#34)]
 [!code-vb[InkCanvasSamples#34](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnabledGestures">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Ink.ApplicationGesture&gt; GetEnabledGestures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;valuetype System.Windows.Ink.ApplicationGesture&gt; GetEnabledGestures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetEnabledGestures" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnabledGestures () As ReadOnlyCollection(Of ApplicationGesture)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Ink::ApplicationGesture&gt; ^ GetEnabledGestures();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Ink.ApplicationGesture&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-270">Zwraca kolekcję gestów aplikacji, które są rozpoznawane przez <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-270">Returns a collection of application gestures that are recognized by <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86c4d-271">Kolekcja gesty, przy użyciu którego <see cref="T:System.Windows.Controls.InkCanvas" /> rozpoznaje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-271">A collection of gestures that the <see cref="T:System.Windows.Controls.InkCanvas" /> recognizes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86c4d-272">W poniższym przykładzie pokazano, jak uzyskać gestów aplikacja obsługująca z <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-272">The following example demonstrates how to get the enabled application gestures from the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#24](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#24)]
 [!code-vb[InkCanvasSamples#24](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="86c4d-273">
            <see cref="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" /> Jest właściwość <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-273">The <see cref="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" /> property is <see langword="false" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLeft">
      <MemberSignature Language="C#" Value="public static double GetLeft (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetLeft(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetLeft(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLeft (element As UIElement) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetLeft(System::Windows::UIElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForChildren</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="86c4d-274">Element, którego można pobrać właściwości lewego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-274">The element of which to get the left property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86c4d-275">Pobiera wartość <see cref="P:System.Windows.Controls.InkCanvas.Left" /> dołączona właściwość zależności danego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-275">Gets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Left" /> attached property for a given dependency object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86c4d-276">Lewa współrzędna obiekt zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-276">The left coordinate of the dependency object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86c4d-277">W poniższym przykładzie pokazano, jak uzyskać położenie <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-277">The following example demonstrates how to get the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#31](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#31)]
 [!code-vb[InkCanvasSamples#31](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#31)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRight">
      <MemberSignature Language="C#" Value="public static double GetRight (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetRight(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetRight(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRight (element As UIElement) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetRight(System::Windows::UIElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForChildren</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="86c4d-278">Element, którego można uzyskać prawo własności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-278">The element of which to get the right property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86c4d-279">Pobiera wartość <see cref="P:System.Windows.Controls.InkCanvas.Right" /> dołączona właściwość zależności danego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-279">Gets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Right" /> attached property for a given dependency object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86c4d-280">Prawa Współrzędna obiekt zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-280">The right coordinate of the dependency object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86c4d-281">W poniższym przykładzie pokazano, jak uzyskać położenie <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-281">The following example demonstrates how to get the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#32](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#32)]
 [!code-vb[InkCanvasSamples#32](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#32)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelectedElements">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.UIElement&gt; GetSelectedElements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.UIElement&gt; GetSelectedElements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSelectedElements () As ReadOnlyCollection(Of UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::UIElement ^&gt; ^ GetSelectedElements();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.UIElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-282">Pobiera <see cref="T:System.Windows.FrameworkElement" /> obiektów, które są wybrane w <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-282">Retrieves the <see cref="T:System.Windows.FrameworkElement" /> objects that are selected in the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86c4d-283">Tablica <see cref="T:System.Windows.FrameworkElement" /> obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-283">Array of <see cref="T:System.Windows.FrameworkElement" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-284">Ta metoda zwraca tylko <xref:System.Windows.FrameworkElement> obiekty nie <xref:System.Windows.Ink.Stroke> obiektów.</span><span class="sxs-lookup"><span data-stu-id="86c4d-284">This method returns only <xref:System.Windows.FrameworkElement> objects, not <xref:System.Windows.Ink.Stroke> objects.</span></span>  
  
 <span data-ttu-id="86c4d-285">Można pobrać wybrane <xref:System.Windows.Ink.Stroke> obiektów, wywołaj <xref:System.Windows.Controls.InkCanvas.GetSelectedStrokes%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="86c4d-285">To retrieve selected <xref:System.Windows.Ink.Stroke> objects, call the <xref:System.Windows.Controls.InkCanvas.GetSelectedStrokes%2A> method.</span></span>  
  
 <span data-ttu-id="86c4d-286">Jeśli <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> z <xref:System.Windows.Controls.InkCanvas> ustawiono <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, użytkownicy mogą wybrać <xref:System.Windows.Ink.Stroke> obiektów i <xref:System.Windows.FrameworkElement> obiektów.</span><span class="sxs-lookup"><span data-stu-id="86c4d-286">If the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> of <xref:System.Windows.Controls.InkCanvas> is set to <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, users can select <xref:System.Windows.Ink.Stroke> objects and <xref:System.Windows.FrameworkElement> objects.</span></span> <span data-ttu-id="86c4d-287">Możesz też obu typów obiektów można wybrać przy użyciu kodu: po prostu Wywołaj <xref:System.Windows.Controls.InkCanvas.Select%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="86c4d-287">Alternatively, both types of objects can be selected using code:  just call the <xref:System.Windows.Controls.InkCanvas.Select%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86c4d-288">Poniższy przykład podwaja wysokość i szerokość każdego elementu na <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-288">The following example doubles the height and width of each selected element on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#12](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#12)]
 [!code-vb[InkCanvasSamples#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
        <altmember cref="Overload:System.Windows.Controls.InkCanvas.Select" />
      </Docs>
    </Member>
    <Member MemberName="GetSelectedStrokes">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection GetSelectedStrokes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection GetSelectedStrokes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSelectedStrokes () As StrokeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::StrokeCollection ^ GetSelectedStrokes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-289">Pobiera <see cref="T:System.Windows.Ink.StrokeCollection" /> reprezentująca wybrane <see cref="T:System.Windows.Ink.Stroke" /> obiektów na <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-289">Retrieves a <see cref="T:System.Windows.Ink.StrokeCollection" /> that represents selected <see cref="T:System.Windows.Ink.Stroke" /> objects on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86c4d-290">Kolekcja wybranych pociągnięć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-290">The collection of selected strokes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-291">Ta metoda zwraca <xref:System.Windows.Ink.Stroke> obiektów tylko.</span><span class="sxs-lookup"><span data-stu-id="86c4d-291">This method returns <xref:System.Windows.Ink.Stroke> objects, only.</span></span> <span data-ttu-id="86c4d-292">Można pobrać wybrane <xref:System.Windows.FrameworkElement> obiektów, wywołaj <xref:System.Windows.Controls.InkCanvas.GetSelectedElements%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="86c4d-292">To retrieve selected <xref:System.Windows.FrameworkElement> objects, call the <xref:System.Windows.Controls.InkCanvas.GetSelectedElements%2A> method.</span></span>  
  
 <span data-ttu-id="86c4d-293">Jeśli <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> z <xref:System.Windows.Controls.InkCanvas> ustawiono <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, użytkownicy mogą wybrać <xref:System.Windows.Ink.Stroke> obiektów i <xref:System.Windows.FrameworkElement> obiektów.</span><span class="sxs-lookup"><span data-stu-id="86c4d-293">If the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> of <xref:System.Windows.Controls.InkCanvas> is set to <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, users can select <xref:System.Windows.Ink.Stroke> objects and <xref:System.Windows.FrameworkElement> objects.</span></span> <span data-ttu-id="86c4d-294">Możesz też obu typów obiektów można wybrać przy użyciu kodu: po prostu Wywołaj <xref:System.Windows.Controls.InkCanvas.Select%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="86c4d-294">Alternatively, both types of objects can be selected using code: just call the <xref:System.Windows.Controls.InkCanvas.Select%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86c4d-295">Poniższy przykład umożliwia zmianę koloru każdego wybranego obrysu na <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-295">The following example changes the color of each selected stroke on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#11](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#11)]
 [!code-vb[InkCanvasSamples#11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Controls.InkCanvas.Select" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      </Docs>
    </Member>
    <Member MemberName="GetSelectionBounds">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetSelectionBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetSelectionBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetSelectionBounds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSelectionBounds () As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetSelectionBounds();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-296">Pobiera granice wybranych pociągnięć i elementów <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-296">Gets the bounds of the selected strokes and elements on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86c4d-297">Najmniejszego prostokąta, który obejmuje wszystkich wybranych pociągnięć i elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-297">The smallest rectangle that encompasses all selected strokes and elements.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86c4d-298">Poniższy przykład uniemożliwia użytkownikowi dokonanie wyboru mniejszym niż oryginalny rozmiar.</span><span class="sxs-lookup"><span data-stu-id="86c4d-298">The following example prevents the user from making a selection smaller than its original size.</span></span>  
  
 [!code-csharp[InkCanvasSamples#16](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#16)]
 [!code-vb[InkCanvasSamples#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTop">
      <MemberSignature Language="C#" Value="public static double GetTop (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetTop(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetTop(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTop (element As UIElement) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetTop(System::Windows::UIElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForChildren</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="86c4d-299">Element, z którego można pobrać właściwość top.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-299">The element of which to get the top property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86c4d-300">Pobiera wartość <see cref="P:System.Windows.Controls.InkCanvas.Top" /> dołączona właściwość zależności danego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-300">Gets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Top" /> attached property for a given dependency object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86c4d-301">Górna współrzędna obiekt zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-301">The top coordinate of the dependency object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86c4d-302">W poniższym przykładzie pokazano, jak uzyskać położenie <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-302">The following example demonstrates how to get the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#33](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#33)]
 [!code-vb[InkCanvasSamples#33](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#33)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVisualChild">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.Visual GetVisualChild (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.Visual GetVisualChild(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetVisualChild(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetVisualChild (index As Integer) As Visual" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::Visual ^ GetVisualChild(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="86c4d-303">Liczony od zera indeks elementu podrzędnego żądanego elementu w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-303">The zero-based index of the requested child element in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86c4d-304">Zastępuje <see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" />i zwraca element podrzędny o określonym indeksie kolekcji elementów podrzędnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-304">Overrides <see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" />, and returns a child at the specified index from a collection of child elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86c4d-305">Element podrzędny żądanej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-305">The requested child element.</span>
          </span>
          <span data-ttu-id="86c4d-306">To nie może zwracać <see langword="null" />; Jeśli podany indeks jest poza zakresu, jest zgłaszany wyjątek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-306">This should not return <see langword="null" />; if the provided index is out of range, an exception is thrown.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.HitTestResult HitTestCore (System.Windows.Media.PointHitTestParameters hitTestParams);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.HitTestResult HitTestCore(class System.Windows.Media.PointHitTestParameters hitTestParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.HitTestCore(System.Windows.Media.PointHitTestParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HitTestCore (hitTestParams As PointHitTestParameters) As HitTestResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::HitTestResult ^ HitTestCore(System::Windows::Media::PointHitTestParameters ^ hitTestParams);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParams" Type="System.Windows.Media.PointHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParams">
          <span data-ttu-id="86c4d-307">Obiekt, który określa <see cref="T:System.Windows.Point" /> trafienie badanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-307">An object that specifies the <see cref="T:System.Windows.Point" /> to hit test against.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86c4d-308">Określa, czy dany punkt mieści się w granicach renderowania <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-308">Determines whether a given point falls within the rendering bounds of an <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86c4d-309">Obiekt reprezentujący <see cref="T:System.Windows.Media.Visual" /> która jest zwracana z testu trafienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-309">An object that represents the <see cref="T:System.Windows.Media.Visual" /> that is returned from a hit test.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTestSelection">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.InkCanvasSelectionHitResult HitTestSelection (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Controls.InkCanvasSelectionHitResult HitTestSelection(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.HitTestSelection(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Controls::InkCanvasSelectionHitResult HitTestSelection(System::Windows::Point point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasSelectionHitResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="86c4d-310">Wskaż testowania trafienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-310">The point to hit test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86c4d-311">Zwraca wartość wskazującą, która część wyboru moduł definiowania układu przecina lub wokół punktu określonego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-311">Returns a value that indicates which part of the selection adorner intersects or surrounds the specified point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86c4d-312">Wartość wskazująca, która część wyboru moduł definiowania układu przecina lub wokół punktu określonego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-312">A value that indicates which part of the selection adorner intersects or surrounds a specified point.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-313">Użyj <xref:System.Windows.Controls.InkCanvas.HitTestSelection%2A> metodę, aby określić, czy punkt znajduje się w zakresie wyboru pociągnięć lub jednego z osiem uchwytów.</span><span class="sxs-lookup"><span data-stu-id="86c4d-313">Use the <xref:System.Windows.Controls.InkCanvas.HitTestSelection%2A> method to determine whether the point is within a stroke selection's bounds or on one of the eight handles.</span></span>  <span data-ttu-id="86c4d-314">Jest to przydatne podczas wykonywania operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="86c4d-314">This is useful when performing drag and drop operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86c4d-315">W poniższym przykładzie pokazano sposób użycia <xref:System.Windows.Controls.InkCanvas.HitTestSelection%2A> do ustalenia, czy należy utworzyć <xref:System.Windows.DataObject> zainicjować przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="86c4d-315">The following example demonstrates how use <xref:System.Windows.Controls.InkCanvas.HitTestSelection%2A> to determine whether to create a <xref:System.Windows.DataObject> to initiate drag and drop.</span></span>  <span data-ttu-id="86c4d-316">Aby zaimplementować przeciągania i upuszczania między dwiema <xref:System.Windows.Controls.InkCanvas> obiekty, zobacz [porady: przeciągania i upuszczania odręczne](~/docs/framework/wpf/advanced/how-to-drag-and-drop-ink.md).</span><span class="sxs-lookup"><span data-stu-id="86c4d-316">To implement drag and drop between two <xref:System.Windows.Controls.InkCanvas> objects, see [How to: Drag and Drop Ink](~/docs/framework/wpf/advanced/how-to-drag-and-drop-ink.md).</span></span>  
  
 [!code-csharp[InkDragDrop#3](~/samples/snippets/csharp/VS_Snippets_Wpf/InkDragDrop/CSharp/Window1.xaml.cs#3)]
 [!code-vb[InkDragDrop#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkDragDrop/VisualBasic/Window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InkPresenter">
      <MemberSignature Language="C#" Value="protected System.Windows.Controls.InkPresenter InkPresenter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.InkPresenter InkPresenter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.InkPresenter" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InkPresenter As InkPresenter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Controls::InkPresenter ^ InkPresenter { System::Windows::Controls::InkPresenter ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkPresenter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-317">Pobiera prezenterze odręczne, który wyświetla odręcznego <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-317">Gets the ink presenter that displays ink on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86c4d-318">Prezenterze odręczne, który wyświetla odręcznego <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-318">The ink presenter that displays ink on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGestureRecognizerAvailable">
      <MemberSignature Language="C#" Value="public bool IsGestureRecognizerAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGestureRecognizerAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsGestureRecognizerAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsGestureRecognizerAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-319">Pobiera (określa) czy składnik rozpoznawania gestów jest dostępna w systemie użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-319">Gets (determines) whether the gesture recognition component is available on the user's system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86c4d-320">
            <see langword="true" /> Jeśli składnik rozpoznawania jest dostępna; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-320">
              <see langword="true" /> if the recognition component is available; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86c4d-321">W poniższym przykładzie pokazano sposób konfigurowania <xref:System.Windows.Controls.InkCanvas> do rozpoznawania gestów aplikacji.</span><span class="sxs-lookup"><span data-stu-id="86c4d-321">The following example demonstrates how to configure an <xref:System.Windows.Controls.InkCanvas> to recognize application gestures.</span></span>  
  
 [!code-csharp[GestureSample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#3)]
 [!code-vb[GestureSample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[GestureSample#1](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#1)]
[!code-vb[GestureSample#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="see GetLeft, and SetLeft" />
      <MemberSignature Language="ILAsm" Value="see GetLeft, and SetLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.Left" />
      <MemberSignature Language="VB.NET" Value="see GetLeft, and SetLeft" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeftProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LeftProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LeftProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.LeftProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LeftProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LeftProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-322">Identyfikuje <see cref="P:System.Windows.Controls.InkCanvas.Left" /> dołączona właściwość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-322">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Left" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-323">Zwraca moduł wyliczający logicznych elementów podrzędnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-323">Returns enumerator to logical children.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size availableSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size availableSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (availableSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size availableSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="availableSize">
          <span data-ttu-id="86c4d-324">Dostępny rozmiar tego elementu może być elementów podrzędnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-324">The available size that this element can give to child elements.</span>
          </span>
          <span data-ttu-id="86c4d-325">Infinity można określić jako wartość, aby wskazać, czy rozmiar elementu zostanie zmieniony na niezależnie od zawartość jest dostępna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-325">Infinity can be specified as a value to indicate that the element will size to whatever content is available.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86c4d-326">Mierzy rozmiar w układzie wymaganych elementów podrzędnych i określa rozmiar <see cref="System.Windows.Controls.InkCanvas" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-326">Measures the size in layout required for child elements and determines a size for the <see cref="System.Windows.Controls.InkCanvas" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86c4d-327">Rozmiar ten element określa ona musi podczas układu, na podstawie jego obliczeń rozmiary elementu podrzędnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-327">The size that this element determines it needs during layout, based on its calculations of child element sizes.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="MoveEnabled">
      <MemberSignature Language="C#" Value="public bool MoveEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MoveEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.MoveEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property MoveEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MoveEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-328">Pobiera lub ustawia wartość Boolean wskazującą, czy użytkownik jest włączone, można przenieść wybranych pociągnięć i/lub elementy <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-328">Gets or sets a Boolean value which indicates whether the user is enabled to move selected ink strokes and/or elements on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86c4d-329">
            <see langword="true" /> Jeśli użytkownik przejść pociągnięć i/lub elementy <see cref="T:System.Windows.Controls.InkCanvas" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-329">
              <see langword="true" /> if a user can move strokes and/or elements on the <see cref="T:System.Windows.Controls.InkCanvas" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-330">Jeśli ta właściwość jest ustawiona na `true`, moduł definiowania układu kodu obramowania jest rysowany wokół pociągnięć odręcznych lub elementów po jej wybraniu.</span><span class="sxs-lookup"><span data-stu-id="86c4d-330">If this property is set to `true`, an adorner border is drawn around ink strokes and/or elements when they are selected.</span></span> <span data-ttu-id="86c4d-331">To obramowanie umożliwia użytkownikowi przenoszenie wybranych obiektów.</span><span class="sxs-lookup"><span data-stu-id="86c4d-331">This border enables the user to move the selected objects.</span></span> <span data-ttu-id="86c4d-332">Jeśli <xref:System.Windows.Controls.InkCanvas.ResizeEnabled%2A> jest `true`, moduł definiowania układu umożliwia użytkownikowi zmienianie rozmiaru pociągnięć lub elementów również.</span><span class="sxs-lookup"><span data-stu-id="86c4d-332">If <xref:System.Windows.Controls.InkCanvas.ResizeEnabled%2A> is `true`, the adorner enables the user to resize the strokes and/or elements as well.</span></span>  
  
 <span data-ttu-id="86c4d-333">Jeśli ta właściwość jest ustawiona na `false` podczas pociągnięć odręcznych lub elementów są wybrane, obramowanie modułu definiowania układu kodu zostaną automatycznie usunięte z wybranych obiektów.</span><span class="sxs-lookup"><span data-stu-id="86c4d-333">If this property is set to `false` while one or more ink strokes and/or elements are selected, the adorner border will be automatically removed from the selected objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86c4d-334">W poniższym przykładzie uniemożliwia użytkownikom przenoszenie i zmienianie rozmiaru elementów i obrysy na <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-334">The following example prevents a user from moving and resizing the elements and strokes on a <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#7](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#7)]
 [!code-vb[InkCanvasSamples#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActiveEditingModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnActiveEditingModeChanged (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnActiveEditingModeChanged(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnActiveEditingModeChanged(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnActiveEditingModeChanged (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnActiveEditingModeChanged(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="86c4d-335">Dane dotyczące zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-335">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86c4d-336">Zgłasza <see cref="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-336">Raises the <see cref="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-337">Zawiera odpowiednie <see cref="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer" /> implementacji dla tego formantu, jako część [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastruktury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-337">Provides an appropriate <see cref="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer" /> implementation for this control, as part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDefaultDrawingAttributesReplaced">
      <MemberSignature Language="C#" Value="protected virtual void OnDefaultDrawingAttributesReplaced (System.Windows.Ink.DrawingAttributesReplacedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDefaultDrawingAttributesReplaced(class System.Windows.Ink.DrawingAttributesReplacedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnDefaultDrawingAttributesReplaced(System.Windows.Ink.DrawingAttributesReplacedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDefaultDrawingAttributesReplaced (e As DrawingAttributesReplacedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDefaultDrawingAttributesReplaced(System::Windows::Ink::DrawingAttributesReplacedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Ink.DrawingAttributesReplacedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="86c4d-338">Dane dotyczące zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-338">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86c4d-339">Zgłasza <see cref="E:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-339">Raises the <see cref="E:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEditingModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnEditingModeChanged (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEditingModeChanged(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnEditingModeChanged(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEditingModeChanged (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEditingModeChanged(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="86c4d-340">Dane dotyczące zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-340">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86c4d-341">Zgłasza <see cref="E:System.Windows.Controls.InkCanvas.EditingModeChanged" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-341">Raises the <see cref="E:System.Windows.Controls.InkCanvas.EditingModeChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-342">To zdarzenie występuje po zmianie trybu edycji; zmiany zostaną odzwierciedlone w <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> właściwość <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-342">This event occurs after the editing mode has been changed; the changes are reflected in the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEditingModeInvertedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnEditingModeInvertedChanged (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEditingModeInvertedChanged(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnEditingModeInvertedChanged(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEditingModeInvertedChanged (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEditingModeInvertedChanged(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="86c4d-343">Dane dotyczące zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-343">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86c4d-344">Zgłasza <see cref="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-344">Raises the <see cref="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-345">To zdarzenie występuje po zmianie trybu edycji odwrócony; zmiany zostaną uwzględnione w <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> właściwość <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-345">This event occurs after the inverted editing mode has been changed; the changes reflected in the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> property of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGesture">
      <MemberSignature Language="C#" Value="protected virtual void OnGesture (System.Windows.Controls.InkCanvasGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGesture(class System.Windows.Controls.InkCanvasGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnGesture(System.Windows.Controls.InkCanvasGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGesture (e As InkCanvasGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGesture(System::Windows::Controls::InkCanvasGestureEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="86c4d-346">Dane dotyczące zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-346">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86c4d-347">Zgłasza <see cref="E:System.Windows.Controls.InkCanvas.Gesture" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-347">Raises the <see cref="E:System.Windows.Controls.InkCanvas.Gesture" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPropertyChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPropertyChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPropertyChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="86c4d-348">Dane zdarzenia, opisujące właściwość zmienione, a także starej i nowej wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-348">The event data that describes the property that changed, as well as old and new values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86c4d-349">Wywoływane, gdy wartość efektywna dowolnej właściwości zależności na tym <see cref="T:System.Windows.FrameworkElement" /> została zaktualizowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-349">Invoked whenever the effective value of any dependency property on this <see cref="T:System.Windows.FrameworkElement" /> has been updated.</span>
          </span>
          <span data-ttu-id="86c4d-350">Właściwości określonych zależności, które zmienić jest zgłaszana w parametrze argumentów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-350">The specific dependency property that changed is reported in the arguments parameter.</span>
          </span>
          <span data-ttu-id="86c4d-351">Zastępuje <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-351">Overrides <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnSelectionChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="86c4d-352">Dane dotyczące zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-352">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86c4d-353">Zgłasza <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanged" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-353">Raises the <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-354">Ta metoda jest wywoływana po zestaw pociągnięć odręcznych lub elementów po wybraniu przez użytkownika i zmień wybór zostały zastosowane.</span><span class="sxs-lookup"><span data-stu-id="86c4d-354">This method is called after a set of ink strokes and/or elements has been selected by the user and the selection change has been applied.</span></span> <span data-ttu-id="86c4d-355">Przed zastosowaniem zmian <xref:System.Windows.Controls.InkCanvas.OnSelectionChanging%2A> metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="86c4d-355">Before the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionChanging%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnSelectionChanging(System.Windows.Controls.InkCanvasSelectionChangingEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionChanging (System.Windows.Controls.InkCanvasSelectionChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionChanging(class System.Windows.Controls.InkCanvasSelectionChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnSelectionChanging(System.Windows.Controls.InkCanvasSelectionChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionChanging (e As InkCanvasSelectionChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionChanging(System::Windows::Controls::InkCanvasSelectionChangingEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasSelectionChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="86c4d-356">Dane dotyczące zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-356">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86c4d-357">Zgłasza <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanging" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-357">Raises the <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanging" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-358">Ta metoda jest wywoływana po nawiązaniu nowego wyboru pociągnięć lub elementów przez użytkownika, ale przed zastosowaniem zmian.</span><span class="sxs-lookup"><span data-stu-id="86c4d-358">This method is called when a new selection of strokes and/or elements is made by the user, but before the change is applied.</span></span> <span data-ttu-id="86c4d-359">Po zastosowaniu zmiany <xref:System.Windows.Controls.InkCanvas.OnSelectionChanged%2A> metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="86c4d-359">After the change has been applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionChanged%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnSelectionChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionMoved">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionMoved (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionMoved(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnSelectionMoved(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionMoved (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionMoved(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="86c4d-360">Nie używany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-360">Not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86c4d-361">Zdarzenie o zaznaczone i przenieść wyboru pociągnięć lub elementów użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-361">An event announcing that the user selected and moved a selection of strokes and/or elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-362">Ta metoda jest wywoływana po przeniesieniu przez użytkownika wyboru pociągnięć lub elementów i zmiany zostały zastosowane.</span><span class="sxs-lookup"><span data-stu-id="86c4d-362">This method is called after a selection of strokes and/or elements has been moved by the user and the change has been applied.</span></span> <span data-ttu-id="86c4d-363">Przed zastosowaniem zmian <xref:System.Windows.Controls.InkCanvas.OnSelectionMoving%2A> metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="86c4d-363">Before the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionMoving%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnSelectionMoving(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionMoving">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionMoving (System.Windows.Controls.InkCanvasSelectionEditingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionMoving(class System.Windows.Controls.InkCanvasSelectionEditingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnSelectionMoving(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionMoving (e As InkCanvasSelectionEditingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionMoving(System::Windows::Controls::InkCanvasSelectionEditingEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasSelectionEditingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="86c4d-364">Dane dotyczące zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-364">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86c4d-365">Zgłasza <see cref="E:System.Windows.Controls.InkCanvas.SelectionMoving" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-365">Raises the <see cref="E:System.Windows.Controls.InkCanvas.SelectionMoving" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-366">Ta metoda jest wywoływana po użytkownik żąda przeniesienia wyboru pociągnięć lub elementów i przed zastosowaniem zmian.</span><span class="sxs-lookup"><span data-stu-id="86c4d-366">This method is called after the user requests that a selection of strokes and/or elements be moved and before the change is applied.</span></span> <span data-ttu-id="86c4d-367">Po zastosowaniu zmiany <xref:System.Windows.Controls.InkCanvas.OnSelectionMoved%2A> metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="86c4d-367">After the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionMoved%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnSelectionMoved(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionResized">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionResized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionResized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnSelectionResized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionResized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionResized(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="86c4d-368">Dane dotyczące zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-368">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86c4d-369">Zgłasza <see cref="E:System.Windows.Controls.InkCanvas.SelectionResized" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-369">Raises the <see cref="E:System.Windows.Controls.InkCanvas.SelectionResized" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-370">Ta metoda jest wywoływana po wyboru pociągnięć lub elementów został zmieniony przez użytkownika i zmiany zostały zastosowane.</span><span class="sxs-lookup"><span data-stu-id="86c4d-370">This method is called after a selection of strokes and/or elements has been resized by the user and the change has been applied.</span></span> <span data-ttu-id="86c4d-371">Przed zastosowaniem zmian <xref:System.Windows.Controls.InkCanvas.OnSelectionResizing%2A> metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="86c4d-371">Before the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionResizing%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnSelectionResizing(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionResizing">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionResizing (System.Windows.Controls.InkCanvasSelectionEditingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionResizing(class System.Windows.Controls.InkCanvasSelectionEditingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnSelectionResizing(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionResizing (e As InkCanvasSelectionEditingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionResizing(System::Windows::Controls::InkCanvasSelectionEditingEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasSelectionEditingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="86c4d-372">Dane dotyczące zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-372">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86c4d-373">Zgłasza <see cref="E:System.Windows.Controls.InkCanvas.SelectionResizing" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-373">Raises the <see cref="E:System.Windows.Controls.InkCanvas.SelectionResizing" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-374">Ta metoda jest wywoływana po na żądanie użytkownika można zmienić rozmiaru wyboru pociągnięć lub elementów i przed zastosowaniem zmian.</span><span class="sxs-lookup"><span data-stu-id="86c4d-374">This method is called after the user requests a selection of strokes and/or elements be resized and before the change is applied.</span></span> <span data-ttu-id="86c4d-375">Po zastosowaniu zmiany <xref:System.Windows.Controls.InkCanvas.OnSelectionResized%2A> metoda zostanie wywołana.</span><span class="sxs-lookup"><span data-stu-id="86c4d-375">After the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionResized%2A> method will be called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnSelectionResized(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnStrokeCollected">
      <MemberSignature Language="C#" Value="protected virtual void OnStrokeCollected (System.Windows.Controls.InkCanvasStrokeCollectedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStrokeCollected(class System.Windows.Controls.InkCanvasStrokeCollectedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnStrokeCollected(System.Windows.Controls.InkCanvasStrokeCollectedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStrokeCollected (e As InkCanvasStrokeCollectedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStrokeCollected(System::Windows::Controls::InkCanvasStrokeCollectedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasStrokeCollectedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="86c4d-376">Dane dotyczące zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-376">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86c4d-377">Zgłasza <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-377">Raises the <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-378"><xref:System.Windows.Controls.InkCanvas.OnStrokeCollected%2A> jest wywoływane, gdy użytkownik fizycznie zakończeniu pociągnięcia, na przykład, podnosząc pióra od tabletem po wprowadzeniu ruchu.</span><span class="sxs-lookup"><span data-stu-id="86c4d-378"><xref:System.Windows.Controls.InkCanvas.OnStrokeCollected%2A> is called when a user physically completes a stroke, for example, by raising the stylus from a tablet after making a motion.</span></span>  
  
 <span data-ttu-id="86c4d-379">Programowe Dodawanie naciśniętych <xref:System.Windows.Controls.InkCanvas.Strokes%2A> nie wywoła kolekcji <xref:System.Windows.Controls.InkCanvas.OnStrokeCollected%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="86c4d-379">A programmatic addition of strokes to the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> collection will not call the <xref:System.Windows.Controls.InkCanvas.OnStrokeCollected%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStrokeErased">
      <MemberSignature Language="C#" Value="protected virtual void OnStrokeErased (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStrokeErased(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnStrokeErased(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStrokeErased (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStrokeErased(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="86c4d-380">Dane dotyczące zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-380">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86c4d-381">Zgłasza <see cref="E:System.Windows.Controls.InkCanvas.StrokeErased" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-381">Raises the <see cref="E:System.Windows.Controls.InkCanvas.StrokeErased" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStrokeErasing">
      <MemberSignature Language="C#" Value="protected virtual void OnStrokeErasing (System.Windows.Controls.InkCanvasStrokeErasingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStrokeErasing(class System.Windows.Controls.InkCanvasStrokeErasingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnStrokeErasing(System.Windows.Controls.InkCanvasStrokeErasingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStrokeErasing (e As InkCanvasStrokeErasingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStrokeErasing(System::Windows::Controls::InkCanvasStrokeErasingEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasStrokeErasingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="86c4d-382">Dane dotyczące zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-382">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86c4d-383">Zgłasza <see cref="E:System.Windows.Controls.InkCanvas.StrokeErasing" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-383">Raises the <see cref="E:System.Windows.Controls.InkCanvas.StrokeErasing" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStrokesReplaced">
      <MemberSignature Language="C#" Value="protected virtual void OnStrokesReplaced (System.Windows.Controls.InkCanvasStrokesReplacedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStrokesReplaced(class System.Windows.Controls.InkCanvasStrokesReplacedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnStrokesReplaced(System.Windows.Controls.InkCanvasStrokesReplacedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStrokesReplaced (e As InkCanvasStrokesReplacedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStrokesReplaced(System::Windows::Controls::InkCanvasStrokesReplacedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasStrokesReplacedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="86c4d-384">Dane dotyczące zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-384">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86c4d-385">Zgłasza <see cref="E:System.Windows.Controls.InkCanvas.StrokesReplaced" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-385">Raises the <see cref="E:System.Windows.Controls.InkCanvas.StrokesReplaced" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Paste">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-386">Wkleja zawartość Schowka do <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-386">Pastes the contents of the Clipboard to the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-387"><xref:System.Windows.Controls.InkCanvas> Może obsługiwać danych ze Schowka w [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]i format tekstu.</span><span class="sxs-lookup"><span data-stu-id="86c4d-387">The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)], and text format.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-388">Wkleja zawartość Schowek do lewego górnego rogu <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-388">Pastes the contents of the Clipboard to the top-left corner of the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-389"><xref:System.Windows.Controls.InkCanvas> Może obsługiwać danych ze Schowka w [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]i format tekstu.</span><span class="sxs-lookup"><span data-stu-id="86c4d-389">The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)], and text format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86c4d-390">W poniższym przykładzie kopiuje element do Schowka i wkleja go do <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-390">The following example copies an element to the Clipboard and pastes it to the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="86c4d-391">W tym przykładzie założono, że istnieje element o nazwie `rect1`oraz że <xref:System.Windows.Controls.Primitives.ButtonBase.Click> zdarzenia były podłączone do obsługi zdarzeń w przykładzie.</span><span class="sxs-lookup"><span data-stu-id="86c4d-391">This example assumes that there is an element called `rect1`, and that the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> events have been connected to the event handlers in the example.</span></span>  
  
 [!code-csharp[InkCanvasSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[InkCanvasSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="86c4d-392">zawartość Schowka do wklejania <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-392">for pasting content from the Clipboard to the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
          <span data-ttu-id="86c4d-393">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-393">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" />.</span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Controls.InkCanvas.CopySelection" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.CanPaste" />
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.Paste(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste(System::Windows::Point point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="86c4d-394">Punkt, w którym należy wkleić pociągnięć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-394">The point at which to paste the strokes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86c4d-395">Wkleja zawartość Schowka do <see cref="T:System.Windows.Controls.InkCanvas" /> w danym momencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-395">Pastes the contents of the Clipboard to the <see cref="T:System.Windows.Controls.InkCanvas" /> at a given point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-396"><xref:System.Windows.Controls.InkCanvas> Może obsługiwać danych ze Schowka w [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]i format tekstu.</span><span class="sxs-lookup"><span data-stu-id="86c4d-396">The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)], and text format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86c4d-397">W poniższym przykładzie kopiuje element do Schowka i wkleja go do <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-397">The following example copies an element to the Clipboard and pastes it to the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="86c4d-398">W tym przykładzie założono, że istnieje element o nazwie `rect1`oraz że <xref:System.Windows.Controls.Primitives.ButtonBase.Click> zdarzenia są podłączone do obsługi zdarzeń w przykładzie.</span><span class="sxs-lookup"><span data-stu-id="86c4d-398">This example assumes that there is an element called `rect1`, and that the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> events are connected to the event handlers in the example.</span></span>  
  
 [!code-csharp[InkCanvasSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[InkCanvasSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="86c4d-399">Uprawnienia do Wklej zawartość Schowka do <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-399">Permission to paste content from the Clipboard to the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
          <span data-ttu-id="86c4d-400">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-400">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" />.</span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Controls.InkCanvas.CopySelection" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.CanPaste" />
      </Docs>
    </Member>
    <Member MemberName="PreferredPasteFormats">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Controls.InkCanvasClipboardFormat&gt; PreferredPasteFormats { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Controls.InkCanvasClipboardFormat&gt; PreferredPasteFormats" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.PreferredPasteFormats" />
      <MemberSignature Language="VB.NET" Value="Public Property PreferredPasteFormats As IEnumerable(Of InkCanvasClipboardFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Controls::InkCanvasClipboardFormat&gt; ^ PreferredPasteFormats { System::Collections::Generic::IEnumerable&lt;System::Windows::Controls::InkCanvasClipboardFormat&gt; ^ get(); void set(System::Collections::Generic::IEnumerable&lt;System::Windows::Controls::InkCanvasClipboardFormat&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Controls.InkCanvasClipboardFormat&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-401">Pobiera lub ustawia formaty, które można wkleić na <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-401">Gets or sets formats that can be pasted onto the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86c4d-402">Kolekcja wartości wyliczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-402">A collection of enumeration values.</span>
          </span>
          <span data-ttu-id="86c4d-403">Wartość domyślna to <see cref="F:System.Windows.Controls.InkCanvasClipboardFormat.InkSerializedFormat" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-403">The default is <see cref="F:System.Windows.Controls.InkCanvasClipboardFormat.InkSerializedFormat" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_PreferredPasteFormats"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="86c4d-404">Użycie elementu właściwości języka XAML</span><span class="sxs-lookup"><span data-stu-id="86c4d-404">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.PreferredPasteFormats>  
    InkCanvasClipboardFormats  
  </object.PreferredPasteFormats>  
</object>  
```  
  
<a name="xamlValues_PreferredPasteFormats"></a>   
## <a name="xaml-values"></a><span data-ttu-id="86c4d-405">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="86c4d-405">XAML Values</span></span>  
 <span data-ttu-id="86c4d-406">*InkCanvasClipboardFormats*</span><span class="sxs-lookup"><span data-stu-id="86c4d-406">*InkCanvasClipboardFormats*</span></span>  
 <span data-ttu-id="86c4d-407">Tablica <xref:System.Windows.Controls.InkCanvasClipboardFormat> wartości wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="86c4d-407">An array of <xref:System.Windows.Controls.InkCanvasClipboardFormat> enumeration values.</span></span> <span data-ttu-id="86c4d-408">Określanie tablicy w języku XAML wymaga `x:Array` użycia.</span><span class="sxs-lookup"><span data-stu-id="86c4d-408">Specifying an array in XAML requires `x:Array` usage.</span></span> <span data-ttu-id="86c4d-409">Określenie wartości wyliczenia jako element, który deklaruje element członkowski tablicy wymaga `x:Static` użycia.</span><span class="sxs-lookup"><span data-stu-id="86c4d-409">Specifying an enumeration value as an element that declares an array member requires `x:Static` usage.</span></span> <span data-ttu-id="86c4d-410">Aby uzyskać więcej informacji, zobacz [x: Array — rozszerzenie znaczników](~/docs/framework/xaml-services/x-array-markup-extension.md) i [x: Static — rozszerzenie znaczników](~/docs/framework/xaml-services/x-static-markup-extension.md).</span><span class="sxs-lookup"><span data-stu-id="86c4d-410">For more information, see [x:Array Markup Extension](~/docs/framework/xaml-services/x-array-markup-extension.md) and [x:Static Markup Extension](~/docs/framework/xaml-services/x-static-markup-extension.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86c4d-411">W poniższym przykładzie <xref:System.Windows.Controls.InkCanvas.PreferredPasteFormats%2A> aby <xref:System.Windows.Controls.InkCanvas> zaakceptować [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)].</span><span class="sxs-lookup"><span data-stu-id="86c4d-411">The following example sets the <xref:System.Windows.Controls.InkCanvas.PreferredPasteFormats%2A> to make the <xref:System.Windows.Controls.InkCanvas> accept [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)].</span></span>  
  
 [!code-csharp[InkCanvasSamples#26](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#26)]
 [!code-vb[InkCanvasSamples#26](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#26)]  
  
 <span data-ttu-id="86c4d-412">Poniższy przykład umożliwia zrealizowanie samo w [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="86c4d-412">The following example accomplishes the same thing in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span></span>  
  
 [!code-xaml[InkCanvasSamples#38](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window2.xaml#38)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResizeEnabled">
      <MemberSignature Language="C#" Value="public bool ResizeEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResizeEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.ResizeEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ResizeEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ResizeEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-413">Pobiera lub ustawia wartość Boolean wskazującą, czy użytkownik może zmieniać rozmiar wybranych pociągnięć i/lub elementy na <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-413">Gets or sets a Boolean value that indicates whether the user can resize selected ink strokes and/or elements on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86c4d-414">
            <see langword="true" /> Jeśli użytkownika można zmienić rozmiar pociągnięć i/lub elementy, na <see cref="T:System.Windows.Controls.InkCanvas" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-414">
              <see langword="true" /> if a user can resize strokes and/or elements on the <see cref="T:System.Windows.Controls.InkCanvas" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-415">Jeśli ta właściwość jest ustawiona na `true`, moduł definiowania układu kodu obramowania jest rysowany wokół pociągnięć odręcznych lub elementów po jej wybraniu.</span><span class="sxs-lookup"><span data-stu-id="86c4d-415">If this property is set to `true`, an adorner border is drawn around ink strokes and/or elements when they are selected.</span></span> <span data-ttu-id="86c4d-416">To obramowanie umożliwia użytkownikowi zmienianie rozmiaru wybranych obiektów.</span><span class="sxs-lookup"><span data-stu-id="86c4d-416">This border enables the user to resize the selected objects.</span></span> <span data-ttu-id="86c4d-417">Jeśli <xref:System.Windows.Controls.InkCanvas.MoveEnabled%2A> jest `true`, użytkownik może przechodzić pociągnięć lub elementów również umożliwia moduł definiowania układu.</span><span class="sxs-lookup"><span data-stu-id="86c4d-417">If <xref:System.Windows.Controls.InkCanvas.MoveEnabled%2A> is `true`, the adorner enables the user to move the strokes and/or elements as well.</span></span>  
  
 <span data-ttu-id="86c4d-418">Jeśli ta właściwość jest ustawiona na `false` podczas pociągnięć odręcznych lub elementów są wybrane, obramowanie modułu definiowania układu kodu zostanie automatycznie usunięta z wybranych obiektów.</span><span class="sxs-lookup"><span data-stu-id="86c4d-418">If this property is set to `false` while one or more ink strokes and/or elements are selected, the adorner border is automatically removed from the selected objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86c4d-419">W poniższym przykładzie uniemożliwia użytkownikom przenoszenie i zmienianie rozmiaru elementów i obrysy na <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-419">The following example prevents a user from moving and resizing the elements and strokes on a <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#7](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#7)]
 [!code-vb[InkCanvasSamples#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="see GetRight, and SetRight" />
      <MemberSignature Language="ILAsm" Value="see GetRight, and SetRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.Right" />
      <MemberSignature Language="VB.NET" Value="see GetRight, and SetRight" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.RightProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RightProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RightProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-420">Identyfikuje <see cref="P:System.Windows.Controls.InkCanvas.Right" /> dołączony propertyy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-420">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Right" /> attached propertyy.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Select">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-421">Wybiera grupę odręczne <see cref="T:System.Windows.Ink.Stroke" /> obiektów i/lub <see cref="T:System.Windows.FrameworkElement" /> obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-421">Selects a set of ink <see cref="T:System.Windows.Ink.Stroke" /> objects and/or <see cref="T:System.Windows.FrameworkElement" /> objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-422"><xref:System.Windows.Controls.InkCanvas> Może zawierać <xref:System.Windows.Ink.Stroke> obiektów, które są tworzone w odpowiedzi na dane wejściowe użytkownika pióra, i <xref:System.Windows.FrameworkElement> obiekty, takie jak <xref:System.Windows.Controls.Image> i <xref:System.Windows.Controls.Button> obiektów.</span><span class="sxs-lookup"><span data-stu-id="86c4d-422">An <xref:System.Windows.Controls.InkCanvas> can contain <xref:System.Windows.Ink.Stroke> objects, which are created in response to user stylus input, and <xref:System.Windows.FrameworkElement> objects, such as <xref:System.Windows.Controls.Image> and <xref:System.Windows.Controls.Button> objects.</span></span>  
  
 <span data-ttu-id="86c4d-423">Wybranych pociągnięć będzie wyświetlane z modułu definiowania układu kodu wokół nich w celu ułatwienia rozpoznawania i manipulowania nimi.</span><span class="sxs-lookup"><span data-stu-id="86c4d-423">Selected strokes will be displayed with an adorner around them for ease of recognition and manipulation.</span></span> <span data-ttu-id="86c4d-424"><xref:System.Windows.FrameworkElement> obiekty nie są wyświetlane inaczej w przypadku wybrania.</span><span class="sxs-lookup"><span data-stu-id="86c4d-424"><xref:System.Windows.FrameworkElement> objects will not display differently when selected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (System.Collections.Generic.IEnumerable&lt;System.Windows.UIElement&gt; selectedElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.UIElement&gt; selectedElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.Select(System.Collections.Generic.IEnumerable{System.Windows.UIElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (selectedElements As IEnumerable(Of UIElement))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(System::Collections::Generic::IEnumerable&lt;System::Windows::UIElement ^&gt; ^ selectedElements);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedElements" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.UIElement&gt;" />
      </Parameters>
      <Docs>
        <param name="selectedElements">
          <span data-ttu-id="86c4d-425">Kolekcja <see cref="T:System.Windows.UIElement" /> obiektów do wybrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-425">A collection of <see cref="T:System.Windows.UIElement" /> objects to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86c4d-426">Wybiera grupę <see cref="T:System.Windows.UIElement" /> obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-426">Selects a set of <see cref="T:System.Windows.UIElement" /> objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-427"><xref:System.Windows.Controls.InkCanvas> Może zawierać <xref:System.Windows.Ink.Stroke> obiektów, które są tworzone w odpowiedzi na dane wejściowe użytkownika pióra i <xref:System.Windows.UIElement> obiekty, takie jak <xref:System.Windows.Controls.Image> i <xref:System.Windows.Controls.Button> obiektów.</span><span class="sxs-lookup"><span data-stu-id="86c4d-427">An <xref:System.Windows.Controls.InkCanvas> can contain <xref:System.Windows.Ink.Stroke> objects, which are created in response to user stylus input and <xref:System.Windows.UIElement> objects, such as <xref:System.Windows.Controls.Image> and <xref:System.Windows.Controls.Button> objects.</span></span>  
  
 <span data-ttu-id="86c4d-428">Wybranych pociągnięć są wyświetlane z modułu definiowania układu kodu wokół nich w celu ułatwienia rozpoznawania i manipulowania nimi.</span><span class="sxs-lookup"><span data-stu-id="86c4d-428">Selected strokes are displayed with an adorner around them for ease of recognition and manipulation.</span></span> <span data-ttu-id="86c4d-429"><xref:System.Windows.UIElement> obiekty nie są wyświetlane inaczej w przypadku wybrania.</span><span class="sxs-lookup"><span data-stu-id="86c4d-429"><xref:System.Windows.UIElement> objects will not display differently when selected.</span></span> <span data-ttu-id="86c4d-430">Jeśli <xref:System.Windows.UIElement> w `selectedElements` nie znajduje się w kolekcji Children <xref:System.Windows.Controls.InkCanvas.Select%2A> ignoruje <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-430">If a <xref:System.Windows.UIElement> in `selectedElements` is not in the Children collection, <xref:System.Windows.Controls.InkCanvas.Select%2A> ignores the <xref:System.Windows.UIElement>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86c4d-431">Następujące wybiera przykładzie wszystkie i dwóch elementów w <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-431">The following example selects all the strokes and two elements on an <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="86c4d-432">W tym przykładzie założono, że istnieje <xref:System.Windows.Controls.TextBox> o nazwie `textbox1` i <xref:System.Windows.Controls.Button> o nazwie `button1` - i że oba formanty są elementy podrzędne <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-432">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textbox1` and a <xref:System.Windows.Controls.Button> called `button1` - and that both controls are child elements of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#2](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#2)]
 [!code-vb[InkCanvasSamples#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (System.Windows.Ink.StrokeCollection selectedStrokes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(class System.Windows.Ink.StrokeCollection selectedStrokes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (selectedStrokes As StrokeCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(System::Windows::Ink::StrokeCollection ^ selectedStrokes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedStrokes" Type="System.Windows.Ink.StrokeCollection" />
      </Parameters>
      <Docs>
        <param name="selectedStrokes">
          <span data-ttu-id="86c4d-433">Kolekcja <see cref="T:System.Windows.Ink.Stroke" /> obiektów do wybrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-433">A collection of <see cref="T:System.Windows.Ink.Stroke" /> objects to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86c4d-434">Wybiera grupę odręczne <see cref="T:System.Windows.Ink.Stroke" /> obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-434">Selects a set of ink <see cref="T:System.Windows.Ink.Stroke" /> objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-435"><xref:System.Windows.Controls.InkCanvas> Może zawierać <xref:System.Windows.Ink.Stroke> obiektów, które są tworzone w odpowiedzi na dane wejściowe użytkownika pióra, i <xref:System.Windows.FrameworkElement> obiekty, takie jak <xref:System.Windows.Controls.Image> i <xref:System.Windows.Controls.Button> obiektów.</span><span class="sxs-lookup"><span data-stu-id="86c4d-435">An <xref:System.Windows.Controls.InkCanvas> can contain <xref:System.Windows.Ink.Stroke> objects, which are created in response to user stylus input, and <xref:System.Windows.FrameworkElement> objects, such as <xref:System.Windows.Controls.Image> and <xref:System.Windows.Controls.Button> objects.</span></span>  
  
 <span data-ttu-id="86c4d-436">Wybranych pociągnięć są wyświetlane z modułu definiowania układu kodu wokół nich w celu ułatwienia rozpoznawania i manipulowania nimi.</span><span class="sxs-lookup"><span data-stu-id="86c4d-436">Selected strokes are displayed with an adorner around them for ease of recognition and manipulation.</span></span> <span data-ttu-id="86c4d-437"><xref:System.Windows.FrameworkElement> obiekty nie są wyświetlane inaczej w przypadku wybrania.</span><span class="sxs-lookup"><span data-stu-id="86c4d-437"><xref:System.Windows.FrameworkElement> objects do not display differently when selected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86c4d-438">Następujące wybiera przykładzie wszystkie i dwóch elementów w <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-438">The following example selects all the strokes and two elements on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  <span data-ttu-id="86c4d-439">W tym przykładzie założono, że istnieje <xref:System.Windows.Controls.TextBox> o nazwie `textbox1` i <xref:System.Windows.Controls.Button> o nazwie `button1` - i że oba formanty są elementy podrzędne <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-439">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textbox1` and a <xref:System.Windows.Controls.Button> called `button1` - and that both controls are child elements of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#2](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#2)]
 [!code-vb[InkCanvasSamples#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="86c4d-440">Co najmniej jeden pociągnięć w <paramref name="selectedStrokes" /> nie znajduje się w <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-440">One or more strokes in <paramref name="selectedStrokes" /> is not in the <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (System.Windows.Ink.StrokeCollection selectedStrokes, System.Collections.Generic.IEnumerable&lt;System.Windows.UIElement&gt; selectedElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(class System.Windows.Ink.StrokeCollection selectedStrokes, class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.UIElement&gt; selectedElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection,System.Collections.Generic.IEnumerable{System.Windows.UIElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (selectedStrokes As StrokeCollection, selectedElements As IEnumerable(Of UIElement))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(System::Windows::Ink::StrokeCollection ^ selectedStrokes, System::Collections::Generic::IEnumerable&lt;System::Windows::UIElement ^&gt; ^ selectedElements);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedStrokes" Type="System.Windows.Ink.StrokeCollection" />
        <Parameter Name="selectedElements" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.UIElement&gt;" />
      </Parameters>
      <Docs>
        <param name="selectedStrokes">
          <span data-ttu-id="86c4d-441">Kolekcja <see cref="T:System.Windows.Ink.Stroke" /> obiektów do wybrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-441">A collection of <see cref="T:System.Windows.Ink.Stroke" /> objects to select.</span>
          </span>
        </param>
        <param name="selectedElements">
          <span data-ttu-id="86c4d-442">Kolekcja <see cref="T:System.Windows.UIElement" /> obiektów do wybrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-442">A collection of <see cref="T:System.Windows.UIElement" /> objects to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86c4d-443">Wybiera kombinację <see cref="T:System.Windows.Ink.Stroke" /> i <see cref="T:System.Windows.UIElement" /> obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-443">Selects a combination of <see cref="T:System.Windows.Ink.Stroke" /> and <see cref="T:System.Windows.UIElement" /> objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-444"><xref:System.Windows.Controls.InkCanvas> Może zawierać <xref:System.Windows.Ink.Stroke> obiektów, które są tworzone w odpowiedzi na dane wejściowe użytkownika pióra i <xref:System.Windows.UIElement> obiekty, takie jak <xref:System.Windows.Controls.Image> i <xref:System.Windows.Controls.Button> obiektów.</span><span class="sxs-lookup"><span data-stu-id="86c4d-444">An <xref:System.Windows.Controls.InkCanvas> can contain <xref:System.Windows.Ink.Stroke> objects, which are created in response to user stylus input and <xref:System.Windows.UIElement> objects, such as <xref:System.Windows.Controls.Image> and <xref:System.Windows.Controls.Button> objects.</span></span>  
  
 <span data-ttu-id="86c4d-445">Wybranych pociągnięć będzie wyświetlane z modułu definiowania układu kodu wokół nich w celu ułatwienia rozpoznawania i manipulowania nimi.</span><span class="sxs-lookup"><span data-stu-id="86c4d-445">Selected strokes will be displayed with an adorner around them for ease of recognition and manipulation.</span></span> <span data-ttu-id="86c4d-446"><xref:System.Windows.UIElement> obiekty nie są wyświetlane inaczej w przypadku wybrania.</span><span class="sxs-lookup"><span data-stu-id="86c4d-446"><xref:System.Windows.UIElement> objects will not display differently when selected.</span></span> <span data-ttu-id="86c4d-447">Jeśli <xref:System.Windows.UIElement> w `selectedElements` nie znajduje się w kolekcji Children <xref:System.Windows.Controls.InkCanvas.Select%2A> ignoruje <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-447">If a <xref:System.Windows.UIElement> in `selectedElements` is not in the Children collection, <xref:System.Windows.Controls.InkCanvas.Select%2A> ignores the <xref:System.Windows.UIElement>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86c4d-448">Następujące wybiera przykładzie wszystkie i dwóch elementów w <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-448">The following example selects all the strokes and two elements on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  <span data-ttu-id="86c4d-449">W tym przykładzie założono, że istnieje <xref:System.Windows.Controls.TextBox> o nazwie `textbox1` i <xref:System.Windows.Controls.Button> o nazwie `button1` - i że oba formanty są elementy podrzędne <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-449">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textbox1` and a <xref:System.Windows.Controls.Button> called `button1` - and that both controls are child elements of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#2](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#2)]
 [!code-vb[InkCanvasSamples#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="86c4d-450">Co najmniej jeden pociągnięć w <paramref name="selectedStrokes" /> nie jest uwzględniony w <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-450">One or more strokes in <paramref name="selectedStrokes" /> is not included in the <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SelectionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.SelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event SelectionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectionChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-451">Występuje, gdy zaznaczenie na <see cref="T:System.Windows.Controls.InkCanvas" /> zmiany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-451">Occurs when the selection on the <see cref="T:System.Windows.Controls.InkCanvas" /> changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-452">To zdarzenie jest wywoływane po został wybrany zestaw pociągnięć odręcznych lub elementów i stosowane przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="86c4d-452">This event is raised after a set of ink strokes and/or elements has been selected and applied by the user.</span></span>  
  
 <span data-ttu-id="86c4d-453">Jeśli zamiast tego muszą obsługiwać żądanie wybierz zestaw pociągnięć odręcznych lub elementów przed zastosowaniem zaznaczenie, Dodaj program obsługi zdarzeń do <xref:System.Windows.Controls.InkCanvas.SelectionChanging> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="86c4d-453">If, instead, you must handle a request that select a set of ink strokes and/or elements before the selection is applied, add an event handler to the <xref:System.Windows.Controls.InkCanvas.SelectionChanging> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86c4d-454">Poniższy przykład uniemożliwia użytkownikowi dokonanie wyboru mniejszym niż oryginalny rozmiar.</span><span class="sxs-lookup"><span data-stu-id="86c4d-454">The following example prevents the user from making a selection smaller than its original size.</span></span>  
  
 [!code-csharp[InkCanvasSamples#16](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#16)]
 [!code-vb[InkCanvasSamples#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.InkCanvas.SelectionChanging" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      </Docs>
    </Member>
    <Member MemberName="SelectionChanging">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasSelectionChangingEventHandler SelectionChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasSelectionChangingEventHandler SelectionChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.SelectionChanging" />
      <MemberSignature Language="VB.NET" Value="Public Event SelectionChanging As InkCanvasSelectionChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::InkCanvasSelectionChangingEventHandler ^ SelectionChanging;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasSelectionChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-455">Występuje, gdy wybrano nowy zestaw pociągnięć odręcznych lub elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-455">Occurs when a new set of ink strokes and/or elements is being selected.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-456"><xref:System.Windows.Controls.InkCanvas.SelectionChanging> Zdarzenie jest zgłaszane, gdy pociągnięć i/lub elementy wybrane przez użytkownika -, ale przed zastosowaniem zmian.</span><span class="sxs-lookup"><span data-stu-id="86c4d-456">The <xref:System.Windows.Controls.InkCanvas.SelectionChanging> event is raised when strokes and/or elements are selected by the user - but before the change is applied.</span></span>  
  
 <span data-ttu-id="86c4d-457"><xref:System.Windows.Controls.InkCanvas.SelectionChanging> Przetwarzania zdarzeń po <xref:System.Windows.Controls.InkCanvasSelectionChangingEventHandler> odbiera <xref:System.Windows.Controls.InkCanvasSelectionChangingEventArgs> obiektu.</span><span class="sxs-lookup"><span data-stu-id="86c4d-457">The <xref:System.Windows.Controls.InkCanvas.SelectionChanging> event is processed when the <xref:System.Windows.Controls.InkCanvasSelectionChangingEventHandler> receives an <xref:System.Windows.Controls.InkCanvasSelectionChangingEventArgs> object.</span></span> <span data-ttu-id="86c4d-458"><xref:System.Windows.Controls.InkCanvasSelectionChangingEventArgs> dostarcza metod dostępu do <xref:System.Windows.FrameworkElement> i <xref:System.Windows.Ink.StrokeCollection> obiektów po zaznaczeniu przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="86c4d-458"><xref:System.Windows.Controls.InkCanvasSelectionChangingEventArgs> provides methods for accessing <xref:System.Windows.FrameworkElement> and <xref:System.Windows.Ink.StrokeCollection> objects after they are selected by the user.</span></span>  
  
 <span data-ttu-id="86c4d-459">Po zastosowaniu zmiany <xref:System.Windows.Controls.InkCanvas.SelectionChanged> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="86c4d-459">After the change is applied, the <xref:System.Windows.Controls.InkCanvas.SelectionChanged> event is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86c4d-460"><xref:System.Windows.Controls.InkCanvas.SelectionChanging> Zdarzenie nie występuje po usunięciu wybranych pociągnięć lub <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> zmiany właściwości.</span><span class="sxs-lookup"><span data-stu-id="86c4d-460">The <xref:System.Windows.Controls.InkCanvas.SelectionChanging> event does not occur when the selected strokes are deleted or when the <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> property changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86c4d-461">Poniższy przykład powoduje, że wybranych pociągnięć ciemnoniebieskim.</span><span class="sxs-lookup"><span data-stu-id="86c4d-461">The following example makes selected strokes royal blue.</span></span>  
  
 [!code-csharp[InkCanvasSamples#14](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#14)]
 [!code-vb[InkCanvasSamples#14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.GetSelectedElements" />
        <altmember cref="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.GetSelectedStrokes" />
        <altmember cref="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.SetSelectedElements(System.Collections.Generic.IEnumerable{System.Windows.UIElement})" />
        <altmember cref="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.SetSelectedStrokes(System.Windows.Ink.StrokeCollection)" />
      </Docs>
    </Member>
    <Member MemberName="SelectionMoved">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionMoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionMoved" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.SelectionMoved" />
      <MemberSignature Language="VB.NET" Value="Public Event SelectionMoved As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectionMoved;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-462">Występuje, gdy użytkownik przesuwa wyboru pociągnięć lub elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-462">Occurs after the user moves a selection of strokes and/or elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-463">To zdarzenie występuje po przeniesieniu wyboru pociągnięć lub elementów, ale przed obrysu lub element danych jest aktualizowana do rejestrowania jego nowego położenia.</span><span class="sxs-lookup"><span data-stu-id="86c4d-463">This event occurs after a selection of strokes and/or elements is moved, but before the stroke or element data is updated to record its new position.</span></span> <span data-ttu-id="86c4d-464">Dodawanie obsługi zdarzeń do <xref:System.Windows.Controls.InkCanvas.SelectionMoving> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="86c4d-464">Add an event handler to the <xref:System.Windows.Controls.InkCanvas.SelectionMoving> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86c4d-465">Poniższy przykład usuwa elementy na <xref:System.Windows.Controls.InkCanvas> po przejścia przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="86c4d-465">The following example unselects items on an <xref:System.Windows.Controls.InkCanvas> after the user moves them.</span></span>  
  
 [!code-csharp[InkCanvasSamples#19](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#19)]
 [!code-vb[InkCanvasSamples#19](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.InkCanvas.SelectionMoving" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      </Docs>
    </Member>
    <Member MemberName="SelectionMoving">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasSelectionEditingEventHandler SelectionMoving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasSelectionEditingEventHandler SelectionMoving" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.SelectionMoving" />
      <MemberSignature Language="VB.NET" Value="Public Event SelectionMoving As InkCanvasSelectionEditingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::InkCanvasSelectionEditingEventHandler ^ SelectionMoving;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasSelectionEditingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-466">Występuje, zanim zostaną przeniesione wybranych pociągnięć i elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-466">Occurs before selected strokes and elements are moved.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-467">To zdarzenie występuje po użytkownik żąda przeniesienia wyboru pociągnięć lub elementów, ale przed zastosowaniem zmian.</span><span class="sxs-lookup"><span data-stu-id="86c4d-467">This event occurs after the user requests that a selection of strokes and/or elements be moved, but before the change is applied.</span></span>  
  
 <span data-ttu-id="86c4d-468">Program obsługi zdarzeń odbiera argumentu typu <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs> z dwóch właściwości: <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> i <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-468">The event handler receives an argument of type <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs> with two properties: <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> and <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A>.</span></span> <span data-ttu-id="86c4d-469"><xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> Definiuje granice zaznaczenie przed przeniesienie i <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A> definiuje granic zaznaczenia po przeniesieniu.</span><span class="sxs-lookup"><span data-stu-id="86c4d-469"><xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> defines the boundaries of the selection before the move and <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A> defines the boundaries of the selection after the move.</span></span>  
  
 <span data-ttu-id="86c4d-470">Po zastosowaniu zmiany <xref:System.Windows.Controls.InkCanvas.SelectionMoved> wystąpi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="86c4d-470">After the change is applied, the <xref:System.Windows.Controls.InkCanvas.SelectionMoved> event will occur.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86c4d-471">Poniższy przykład uniemożliwia przenoszenie wybranych elementów w pionie na <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-471">The following example prevents the user from moving selected items vertically on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#13](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#13)]
 [!code-vb[InkCanvasSamples#13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.InkCanvas.SelectionMoved" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      </Docs>
    </Member>
    <Member MemberName="SelectionResized">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionResized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionResized" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.SelectionResized" />
      <MemberSignature Language="VB.NET" Value="Public Event SelectionResized As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectionResized;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-472">Występuje, gdy wyboru pociągnięć lub elementów został zmieniony przez użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-472">Occurs when a selection of strokes and/or elements has been resized by the user.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-473">To zdarzenie jest wywoływane po rozmiaru wyboru pociągnięć lub elementów.</span><span class="sxs-lookup"><span data-stu-id="86c4d-473">This event is raised after a selection of strokes and/or elements is resized.</span></span>  
  
 <span data-ttu-id="86c4d-474">Jeśli zamiast tego muszą obsługiwać żądania zmiany rozmiaru zaznaczenia, zanim zmiany rozmiaru pociągnięć i/lub elementy, Dodaj program obsługi zdarzeń do <xref:System.Windows.Controls.InkCanvas.SelectionResizing> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="86c4d-474">If, instead, you must handle a request to resize a selection before the strokes and/or elements are resized, add an event handler to the <xref:System.Windows.Controls.InkCanvas.SelectionResizing> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86c4d-475">Poniższy przykład usuwa wszystkie elementy na <xref:System.Windows.Controls.InkCanvas> po użytkownik ponownie rozmiary zaznaczenia.</span><span class="sxs-lookup"><span data-stu-id="86c4d-475">The following example unselects all the items on an <xref:System.Windows.Controls.InkCanvas> after the user re-sizes the selection.</span></span>  
  
 [!code-csharp[InkCanvasSamples#23](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#23)]
 [!code-vb[InkCanvasSamples#23](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#23)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.InkCanvas.SelectionResizing" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      </Docs>
    </Member>
    <Member MemberName="SelectionResizing">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasSelectionEditingEventHandler SelectionResizing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasSelectionEditingEventHandler SelectionResizing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.SelectionResizing" />
      <MemberSignature Language="VB.NET" Value="Public Event SelectionResizing As InkCanvasSelectionEditingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::InkCanvasSelectionEditingEventHandler ^ SelectionResizing;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasSelectionEditingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-476">Występuje, zanim zmiany rozmiaru wybranych pociągnięć i elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-476">Occurs before selected strokes and elements are resized.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-477">To zdarzenie występuje po użytkownik zażąda, że można zmienić rozmiaru wyboru pociągnięć lub elementów, ale przed zastosowaniem zmian.</span><span class="sxs-lookup"><span data-stu-id="86c4d-477">This event occurs after the user requests that a selection of strokes and/or elements be resized, but before the change is applied.</span></span>  
  
 <span data-ttu-id="86c4d-478">Program obsługi zdarzeń odbiera argumentu typu <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs> zawiera dwie właściwości: <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> i <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-478">The event handler receives an argument of type <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs> that contains two properties: <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> and <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A>.</span></span> <span data-ttu-id="86c4d-479"><xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> Definiuje granice zaznaczenie przed operacji zmiany rozmiaru i <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A> definiuje granic zaznaczenia po wykonaniu operacji zmiany rozmiaru.</span><span class="sxs-lookup"><span data-stu-id="86c4d-479"><xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> defines the boundaries of the selection before the resizing operation and <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A> defines the boundaries of the selection after the resizing operation.</span></span>  
  
 <span data-ttu-id="86c4d-480">Po pociągnięć i/lub elementy są aktualizowane przy użyciu nowego rozmiaru <xref:System.Windows.Controls.InkCanvas.SelectionResized> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="86c4d-480">After the strokes and/or elements are updated with the new size, the <xref:System.Windows.Controls.InkCanvas.SelectionResized> event is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86c4d-481">Poniższy przykład uniemożliwia użytkownikowi dokonanie wyboru mniejszym niż oryginalny rozmiar.</span><span class="sxs-lookup"><span data-stu-id="86c4d-481">The following example prevents the user from making a selection smaller than its original size.</span></span>  
  
 [!code-csharp[InkCanvasSamples#16](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#16)]
 [!code-vb[InkCanvasSamples#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.InkCanvas.SelectionResized" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      </Docs>
    </Member>
    <Member MemberName="SetBottom">
      <MemberSignature Language="C#" Value="public static void SetBottom (System.Windows.UIElement element, double length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetBottom(class System.Windows.UIElement element, float64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.SetBottom(System.Windows.UIElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetBottom (element As UIElement, length As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetBottom(System::Windows::UIElement ^ element, double length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="length" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="86c4d-482">Element, dla którego można ustawić właściwości dolnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-482">The element on which to set the bottom property.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="86c4d-483">Dolna Współrzędna <c>elementu</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-483">The bottom coordinate of <c>element</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86c4d-484">Ustawia wartość <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> dołączona właściwość zależności danego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-484">Sets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> attached property for a given dependency object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86c4d-485">W poniższym przykładzie pokazano, jak ustawić pozycji <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-485">The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#28](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#28)]
 [!code-vb[InkCanvasSamples#28](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEnabledGestures">
      <MemberSignature Language="C#" Value="public void SetEnabledGestures (System.Collections.Generic.IEnumerable&lt;System.Windows.Ink.ApplicationGesture&gt; applicationGestures);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEnabledGestures(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Ink.ApplicationGesture&gt; applicationGestures) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.SetEnabledGestures(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetEnabledGestures (applicationGestures As IEnumerable(Of ApplicationGesture))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetEnabledGestures(System::Collections::Generic::IEnumerable&lt;System::Windows::Ink::ApplicationGesture&gt; ^ applicationGestures);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationGestures" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Ink.ApplicationGesture&gt;" />
      </Parameters>
      <Docs>
        <param name="applicationGestures">
          <span data-ttu-id="86c4d-486">Zbiór aplikacji gesty, przy użyciu którego <see cref="T:System.Windows.Controls.InkCanvas" /> rozpozna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-486">A collection of application gestures that the <see cref="T:System.Windows.Controls.InkCanvas" /> will recognize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86c4d-487">Ustawia gestów aplikacji, która <see cref="T:System.Windows.Controls.InkCanvas" /> rozpozna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-487">Sets the application gestures that the <see cref="T:System.Windows.Controls.InkCanvas" /> will recognize.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-488">W poniższym przykładzie pokazano, jak skonfigurować <xref:System.Windows.Controls.InkCanvas> do rozpoznawania gestów aplikacji.</span><span class="sxs-lookup"><span data-stu-id="86c4d-488">The following example demonstrates how to set up an <xref:System.Windows.Controls.InkCanvas> to recognize application gestures.</span></span>  
  
 [!code-csharp[GestureSample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#3)]
 [!code-vb[GestureSample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[GestureSample#1](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#1)]
[!code-vb[GestureSample#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="86c4d-489">
            <see cref="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" /> Jest właściwość <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-489">The <see cref="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" /> property is <see langword="false" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLeft">
      <MemberSignature Language="C#" Value="public static void SetLeft (System.Windows.UIElement element, double length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetLeft(class System.Windows.UIElement element, float64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.SetLeft(System.Windows.UIElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetLeft (element As UIElement, length As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetLeft(System::Windows::UIElement ^ element, double length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="length" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="86c4d-490">Element, dla którego można ustawić właściwości po lewej stronie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-490">The element on which to set the left property.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="86c4d-491">Lewa Współrzędna <c>elementu</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-491">The left coordinate of <c>element</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86c4d-492">Ustawia wartość <see cref="P:System.Windows.Controls.InkCanvas.Left" /> dołączona właściwość zależności danego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-492">Sets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Left" /> attached property for a given dependency object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86c4d-493">W poniższym przykładzie pokazano, jak ustawić pozycji <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-493">The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#29](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#29)]
 [!code-vb[InkCanvasSamples#29](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#29)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRight">
      <MemberSignature Language="C#" Value="public static void SetRight (System.Windows.UIElement element, double length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetRight(class System.Windows.UIElement element, float64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.SetRight(System.Windows.UIElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetRight (element As UIElement, length As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetRight(System::Windows::UIElement ^ element, double length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="length" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="86c4d-494">Element, dla którego można ustawić właściwości prawo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-494">The element on which to set the right property.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="86c4d-495">Prawa Współrzędna <c>elementu</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-495">The right coordinate of <c>element</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86c4d-496">Ustawia wartość <see cref="P:System.Windows.Controls.InkCanvas.Right" /> dołączona właściwość zależności danego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-496">Sets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Right" /> attached property for a given dependency object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86c4d-497">W poniższym przykładzie pokazano, jak ustawić pozycji <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-497">The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#30](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#30)]
 [!code-vb[InkCanvasSamples#30](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTop">
      <MemberSignature Language="C#" Value="public static void SetTop (System.Windows.UIElement element, double length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTop(class System.Windows.UIElement element, float64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.SetTop(System.Windows.UIElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTop (element As UIElement, length As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTop(System::Windows::UIElement ^ element, double length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="length" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="86c4d-498">Element, dla których należy ustawić właściwość top.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-498">The element on which to set the top property.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="86c4d-499">Górna Współrzędna <c>elementu</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-499">The top coordinate of <c>element</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86c4d-500">Ustawia wartość <see cref="P:System.Windows.Controls.InkCanvas.Top" /> dołączona właściwość zależności danego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-500">Sets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Top" /> attached property for a given dependency object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86c4d-501">W poniższym przykładzie pokazano, jak ustawić pozycji <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-501">The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#27](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#27)]
 [!code-vb[InkCanvasSamples#27](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeCollected">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasStrokeCollectedEventHandler StrokeCollected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasStrokeCollectedEventHandler StrokeCollected" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.StrokeCollected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StrokeCollected As InkCanvasStrokeCollectedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::InkCanvasStrokeCollectedEventHandler ^ StrokeCollected;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasStrokeCollectedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-502">Występuje, gdy pociągnięcia przez użytkownika jest dodawany do <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-502">Occurs when a stroke drawn by the user is added to the <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-503">To zdarzenie jest wywoływane, gdy użytkownik zakończy pociągnięcia za pomocą urządzenia wskazującego.</span><span class="sxs-lookup"><span data-stu-id="86c4d-503">This event is raised when a user completes a stroke using a pointing device.</span></span> <span data-ttu-id="86c4d-504">Na przykład użytkownik może podnieść pióra od dyskretyzatora po wprowadzeniu ruchu, a tym samym zakończeniu pociągnięcia.</span><span class="sxs-lookup"><span data-stu-id="86c4d-504">For example, a user might raise a stylus from a digitizer after making a motion, thereby completing a stroke.</span></span>  
  
 <span data-ttu-id="86c4d-505">Program obsługi zdarzeń odbiera argumentu typu <xref:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs>, który odwołuje się do obrysu ukończone.</span><span class="sxs-lookup"><span data-stu-id="86c4d-505">The event handler receives an argument of type <xref:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs>, which references the completed stroke.</span></span> <span data-ttu-id="86c4d-506">Obrysu jest także dodawane do <xref:System.Windows.Controls.InkCanvas.Strokes%2A> właściwość <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-506">The stroke is also added to the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 <span data-ttu-id="86c4d-507">Programowe Dodawanie <xref:System.Windows.Ink.Stroke> do obiektu <xref:System.Windows.Controls.InkCanvas.Strokes%2A> kolekcji nie wygenerował tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="86c4d-507">The programmatic addition of a <xref:System.Windows.Ink.Stroke> object to the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> collection does not raise this event.</span></span>  
  
<a name="routedEventInfo_StrokeCollected"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="86c4d-508">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="86c4d-508">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="86c4d-509">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="86c4d-509">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.StrokeCollectedEvent>|  
|<span data-ttu-id="86c4d-510">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="86c4d-510">Routing strategy</span></span>|<span data-ttu-id="86c4d-511">Bubbling</span><span class="sxs-lookup"><span data-stu-id="86c4d-511">Bubbling</span></span>|  
|<span data-ttu-id="86c4d-512">Delegate</span><span class="sxs-lookup"><span data-stu-id="86c4d-512">Delegate</span></span>|<xref:System.Windows.Controls.InkCanvasStrokeCollectedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="86c4d-513">Poniższy przykład zapisuje czas jako właściwości niestandardowej, gdy użytkownik dodaje obrysu <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-513">The following example saves the time as a custom property when a user adds a stroke to the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#22](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#22)]
 [!code-vb[InkCanvasSamples#22](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#22)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Ink.Stroke.AddPropertyData(System.Guid,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="StrokeCollectedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StrokeCollectedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StrokeCollectedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.StrokeCollectedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StrokeCollectedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StrokeCollectedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-514">Identyfikuje <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-514">Identifies the <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeErased">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler StrokeErased;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler StrokeErased" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.StrokeErased" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StrokeErased As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ StrokeErased;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-515">Występuje, gdy użytkownik wymazaniu pociągnięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-515">Occurs when user erases a stroke.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-516">To zdarzenie występuje, gdy użytkownik usuwa odręczne czy <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> właściwość jest ustawiona na <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint> lub <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-516">This event occurs when a user erases ink whether the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint> or <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke>.</span></span>  
  
<a name="routedEventInfo_StrokeErasing"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="86c4d-517">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="86c4d-517">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="86c4d-518">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="86c4d-518">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.StrokeErasedEvent>|  
|<span data-ttu-id="86c4d-519">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="86c4d-519">Routing strategy</span></span>|<span data-ttu-id="86c4d-520">Bubbling</span><span class="sxs-lookup"><span data-stu-id="86c4d-520">Bubbling</span></span>|  
|<span data-ttu-id="86c4d-521">Delegate</span><span class="sxs-lookup"><span data-stu-id="86c4d-521">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="86c4d-522">Poniższy przykład raporty Liczba naciśnięć, znajdujących się na <xref:System.Windows.Controls.InkCanvas> podczas <xref:System.Windows.Controls.InkCanvas.StrokeErased> zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="86c4d-522">The following example reports the number of strokes that are on an <xref:System.Windows.Controls.InkCanvas> when the <xref:System.Windows.Controls.InkCanvas.StrokeErased> event occurs.</span></span> <span data-ttu-id="86c4d-523">Jeśli <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> ustawiono <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint> i użytkownik usuwa środka pociągnięcia, Liczba naciśnięć na <xref:System.Windows.Controls.InkCanvas> zwiększa.</span><span class="sxs-lookup"><span data-stu-id="86c4d-523">If <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint> and the user erases the middle of a stroke, the number of strokes on the <xref:System.Windows.Controls.InkCanvas> increases.</span></span> <span data-ttu-id="86c4d-524">Jest to spowodowane starego obrysu został zastąpiony przez dwóch nowych obiektów.</span><span class="sxs-lookup"><span data-stu-id="86c4d-524">This is because the old stroke was replaced by two new strokes.</span></span>  
  
 [!code-csharp[InkCanvasSamples#18](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#18)]
 [!code-vb[InkCanvasSamples#18](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeErasedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StrokeErasedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StrokeErasedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.StrokeErasedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StrokeErasedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StrokeErasedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-525">Identyfikuje <see cref="E:System.Windows.Controls.InkCanvas.StrokeErased" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-525">Identifies the <see cref="E:System.Windows.Controls.InkCanvas.StrokeErased" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeErasing">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasStrokeErasingEventHandler StrokeErasing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasStrokeErasingEventHandler StrokeErasing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.StrokeErasing" />
      <MemberSignature Language="VB.NET" Value="Public Event StrokeErasing As InkCanvasStrokeErasingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::InkCanvasStrokeErasingEventHandler ^ StrokeErasing;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasStrokeErasingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-526">Występuje zaraz przed użytkownikiem wymazaniu pociągnięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-526">Occurs just before a user erases a stroke.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-527">Obsługa tego zdarzenia, kiedy chcesz sprawdzić, czy pociągnięcia powinny być usuwane.</span><span class="sxs-lookup"><span data-stu-id="86c4d-527">Handle this event when you want to check whether a stroke should be erased.</span></span> <span data-ttu-id="86c4d-528">Ustaw <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwości `true` Jeśli chcesz zapobiec wymazywania pociągnięć.</span><span class="sxs-lookup"><span data-stu-id="86c4d-528">Set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `true` if you want to prevent the stroke from being erased.</span></span> <span data-ttu-id="86c4d-529">Można użyć tej metody podczas <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> lub <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> właściwość jest ustawiona na <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke> lub <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-529">You can use this technique when the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> or <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke> or <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86c4d-530">Poniższy przykład uniemożliwia żadnych pociągnięć wyróżnienia wymazanie jest renderowana.</span><span class="sxs-lookup"><span data-stu-id="86c4d-530">The following example prevents any strokes rendered as highlighters from being erased.</span></span> <span data-ttu-id="86c4d-531">W przykładzie założono, że <xref:System.Windows.Controls.InkCanvas> jest podłączony do obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="86c4d-531">The example assumes that the <xref:System.Windows.Controls.InkCanvas> is connected to the event handler.</span></span>  
  
 [!code-csharp[DrawingAttributes#16](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#16)]
 [!code-vb[DrawingAttributes#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Strokes">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection Strokes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Ink.StrokeCollection Strokes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.Strokes" />
      <MemberSignature Language="VB.NET" Value="Public Property Strokes As StrokeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Ink::StrokeCollection ^ Strokes { System::Windows::Ink::StrokeCollection ^ get(); void set(System::Windows::Ink::StrokeCollection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-532">Pobiera lub ustawia kolekcję odręczne <see cref="T:System.Windows.Ink.Stroke" /> obiektów zebrane przez <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-532">Gets or sets the collection of ink <see cref="T:System.Windows.Ink.Stroke" /> objects collected by the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86c4d-533">Kolekcja <see cref="T:System.Windows.Ink.Stroke" /> obiektów zawartych w <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-533">The collection of <see cref="T:System.Windows.Ink.Stroke" /> objects contained within the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Strokes"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="86c4d-534">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="86c4d-534">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="86c4d-535">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="86c4d-535">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.StrokesProperty>|  
|<span data-ttu-id="86c4d-536">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="86c4d-536">Metadata properties set to `true`</span></span>|<span data-ttu-id="86c4d-537">Brak</span><span class="sxs-lookup"><span data-stu-id="86c4d-537">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="86c4d-538">W poniższym przykładzie pokazano, jak używać dwóch <xref:System.Windows.Ink.StrokeCollection> obiektów dla tego samego <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-538">The following example demonstrates how to use two <xref:System.Windows.Ink.StrokeCollection> objects for the same <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="86c4d-539">W tym przykładzie player jedną i player dwa każdego korzystają poszczególnych "pisma odręcznego powierzchni" nawet, jeśli mają takie same <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-539">In this example, player one and player two each use an individual "inking surface" even though they share the same <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="86c4d-540">W tym przykładzie założono zdarzenie click jest podłączony do obsługi zdarzeń `switchPlayersButton_Click`.</span><span class="sxs-lookup"><span data-stu-id="86c4d-540">This example assumes the click event is connected to the event handler, `switchPlayersButton_Click`.</span></span>  
  
 [!code-csharp[InkCanvasSamples#15](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#15)]
 [!code-vb[InkCanvasSamples#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#15)]  
  
 <span data-ttu-id="86c4d-541">W poniższym przykładzie pokazano, jak można powiązać <xref:System.Windows.Controls.InkCanvas.Strokes%2A> właściwość <xref:System.Windows.Controls.InkCanvas> do innego <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-541">The following example demonstrates how to bind the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property of an <xref:System.Windows.Controls.InkCanvas> to another <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-xaml[InkCanvasBindingSnippet#2](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasBindingSnippet/CS/Window2.xaml#2)]   
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Ink.StrokeCollection" />
      </Docs>
    </Member>
    <Member MemberName="StrokesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StrokesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StrokesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.StrokesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StrokesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StrokesProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-542">Identyfikuje <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-542">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokesReplaced">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasStrokesReplacedEventHandler StrokesReplaced;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasStrokesReplacedEventHandler StrokesReplaced" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.StrokesReplaced" />
      <MemberSignature Language="VB.NET" Value="Public Event StrokesReplaced As InkCanvasStrokesReplacedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::InkCanvasStrokesReplacedEventHandler ^ StrokesReplaced;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasStrokesReplacedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-543">Występuje, gdy <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> zastępuje właściwość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-543">Occurs when the <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> property is replaced.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86c4d-544">W poniższym przykładzie pokazano, jak używać dwóch <xref:System.Windows.Ink.StrokeCollection> obiektów kolokowane na tym samym <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-544">The following example demonstrates how to use two <xref:System.Windows.Ink.StrokeCollection> objects that are co-located on the same <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="86c4d-545">W tym przykładzie player jedną i player dwa każdego korzystają poszczególnych "pisma odręcznego powierzchni" nawet, jeśli mają takie same <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-545">In this example, player one and player two each use an individual "inking surface" even though they share the same <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="86c4d-546">W tym przykładzie założono, że `switchPlayersButton_Click` zdarzeń jest podłączony do obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="86c4d-546">This example assumes that the `switchPlayersButton_Click` event is connected to the event handler.</span></span>  
  
 [!code-csharp[InkCanvasSamples#15](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#15)]
 [!code-vb[InkCanvasSamples#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="86c4d-547">Aby dodać obiekt podrzędny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-547">The child object to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86c4d-548">Dodaje określony obiekt do <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-548">Adds the specified object to the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (textData As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ textData) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textData">
          <span data-ttu-id="86c4d-549">Nie używany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-549">Not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86c4d-550">Dodaje tekst który w znacznikach w znaczniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-550">Adds the text that within the tags in markup.</span>
          </span>
          <span data-ttu-id="86c4d-551">Zawsze zwraca <see cref="T:System.ArgumentException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-551">Always throws an <see cref="T:System.ArgumentException" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="see GetTop, and SetTop" />
      <MemberSignature Language="ILAsm" Value="see GetTop, and SetTop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.Top" />
      <MemberSignature Language="VB.NET" Value="see GetTop, and SetTop" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TopProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TopProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TopProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.TopProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TopProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TopProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-552">Identyfikuje <see cref="P:System.Windows.Controls.InkCanvas.Top" /> dołączona właściwość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-552">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Top" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseCustomCursor">
      <MemberSignature Language="C#" Value="public bool UseCustomCursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCustomCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.UseCustomCursor" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCustomCursor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCustomCursor { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-553">Pobiera lub ustawia wartość Boolean wskazującą, czy mają być zastępowane standard <see cref="T:System.Windows.Controls.InkCanvas" /> kursora funkcję obsługi niestandardowych kursora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-553">Gets or sets a Boolean value that indicates whether to override standard <see cref="T:System.Windows.Controls.InkCanvas" /> cursor functionality to support a custom cursor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86c4d-554">
            <see langword="true" /> Jeśli <see cref="T:System.Windows.Controls.InkCanvas" /> używa niestandardowych kursorów; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-554">
              <see langword="true" /> if the <see cref="T:System.Windows.Controls.InkCanvas" /> is using a custom cursor; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86c4d-555"><xref:System.Windows.Controls.InkCanvas> Zmieni styl kursora w celu odzwierciedlenia bieżącej <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> gdy kursor znajduje się w granicach <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-555">The <xref:System.Windows.Controls.InkCanvas> will change the cursor style to reflect the current <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> while the cursor is within the bounds of the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="86c4d-556">Jeśli to zachowanie przydaje się, na przykład kiedy <xref:System.Windows.Controls.InkCanvas> używa niestandardowego kursora, ta właściwość jest ustawiona na `true`, i kursora nie zmienia się <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-556">If this behavior is not wanted, for example, when the <xref:System.Windows.Controls.InkCanvas> uses a custom cursor, set this property to `true`, and the cursor will not change with the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86c4d-557">W poniższym przykładzie pokazano sposób użycia kursor, który jest inny niż ten, który został dostarczony przez <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="86c4d-557">The following example demonstrates how to use a cursor that is different than the one supplied by the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#5](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#5)]
 [!code-vb[InkCanvasSamples#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualChildrenCount">
      <MemberSignature Language="C#" Value="protected override int VisualChildrenCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisualChildrenCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.VisualChildrenCount" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property VisualChildrenCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int VisualChildrenCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86c4d-558">Pobiera liczbę elementów podrzędnych visual w obrębie tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-558">Gets the number of visual child elements within this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86c4d-559">Liczba elementów podrzędnych visual dla tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86c4d-559">The number of visual child elements for this element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.FrameworkElement.VisualChildrenCount" />
      </Docs>
    </Member>
  </Members>
</Type>