<Type Name="MenuItem" FullName="System.Windows.Controls.MenuItem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5157bb8a5c6026f70b517f31d566205db19e300c" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53481109" /></Metadata><TypeSignature Language="C#" Value="public class MenuItem : System.Windows.Controls.HeaderedItemsControl, System.Windows.Input.ICommandSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi MenuItem extends System.Windows.Controls.HeaderedItemsControl implements class System.Windows.Input.ICommandSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.MenuItem" />
  <TypeSignature Language="VB.NET" Value="Public Class MenuItem&#xA;Inherits HeaderedItemsControl&#xA;Implements ICommandSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class MenuItem : System::Windows::Controls::HeaderedItemsControl, System::Windows::Input::ICommandSource" />
  <TypeSignature Language="F#" Value="type MenuItem = class&#xA;    inherit HeaderedItemsControl&#xA;    interface ICommandSource" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.HeaderedItemsControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Input.ICommandSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("Click")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Menu)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.StyleTypedProperty(Property="ItemContainerStyle", StyleTargetType=typeof(System.Windows.Controls.MenuItem))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.TemplatePart(Name="PART_Popup", Type=typeof(System.Windows.Controls.Primitives.Popup))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3e44c-101">Reprezentuje wybieralny element wewnątrz <see cref="T:System.Windows.Controls.Menu" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-101">Represents a selectable item inside a <see cref="T:System.Windows.Controls.Menu" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e44c-102"><xref:System.Windows.Controls.MenuItem> jest <xref:System.Windows.Controls.HeaderedItemsControl>, co oznacza jego nagłówka i kolekcji obiektów może być dowolnego typu (na przykład ciąg, obrazu lub panelu).</span><span class="sxs-lookup"><span data-stu-id="3e44c-102"><xref:System.Windows.Controls.MenuItem> is a <xref:System.Windows.Controls.HeaderedItemsControl>, which means its header and collection of objects can be of any type (such as string, image, or panel).</span></span> <span data-ttu-id="3e44c-103">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Controls.HeaderedItemsControl> klasy.</span><span class="sxs-lookup"><span data-stu-id="3e44c-103">For more information, see the <xref:System.Windows.Controls.HeaderedItemsControl> class.</span></span>  
  
 <span data-ttu-id="3e44c-104">Element <xref:System.Windows.Controls.MenuItem> może mieć podmenu.</span><span class="sxs-lookup"><span data-stu-id="3e44c-104">A <xref:System.Windows.Controls.MenuItem> can have submenus.</span></span> <span data-ttu-id="3e44c-105">Podmenu <xref:System.Windows.Controls.MenuItem> składa się z obiektów w ramach <xref:System.Windows.Controls.ItemCollection> z <xref:System.Windows.Controls.MenuItem>.</span><span class="sxs-lookup"><span data-stu-id="3e44c-105">The submenu of the <xref:System.Windows.Controls.MenuItem> is made up of the objects within the <xref:System.Windows.Controls.ItemCollection> of a <xref:System.Windows.Controls.MenuItem>.</span></span>  <span data-ttu-id="3e44c-106">Często <xref:System.Windows.Controls.MenuItem> zawiera inne <xref:System.Windows.Controls.MenuItem> i obiektów zagnieżdżonych podmenu.</span><span class="sxs-lookup"><span data-stu-id="3e44c-106">It is common for a <xref:System.Windows.Controls.MenuItem> to contain other <xref:System.Windows.Controls.MenuItem> objects to create nested submenus.</span></span>  
  
 <span data-ttu-id="3e44c-107">Element <xref:System.Windows.Controls.MenuItem> może mieć jedną z szeregu funkcji:</span><span class="sxs-lookup"><span data-stu-id="3e44c-107">A <xref:System.Windows.Controls.MenuItem> can have one of several functions:</span></span>  
  
-   <span data-ttu-id="3e44c-108">Może ona zostać wybrana do wywołania polecenia.</span><span class="sxs-lookup"><span data-stu-id="3e44c-108">It can be selected to invoke a command.</span></span>  
  
-   <span data-ttu-id="3e44c-109">Może być separatorem dla innych elementów menu.</span><span class="sxs-lookup"><span data-stu-id="3e44c-109">It can be a separator for other menu items.</span></span>  
  
-   <span data-ttu-id="3e44c-110">Może to być nagłówka podmenu.</span><span class="sxs-lookup"><span data-stu-id="3e44c-110">It can be a header for a submenu.</span></span>  
  
-   <span data-ttu-id="3e44c-111">Może być zaznaczony lub niezaznaczony.</span><span class="sxs-lookup"><span data-stu-id="3e44c-111">It can be checked or unchecked.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3e44c-112">Domyślnie <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> z <xref:System.Windows.Controls.MenuItem> ustawiono <xref:System.Windows.HorizontalAlignment.Stretch?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3e44c-112">By default, the <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> of a <xref:System.Windows.Controls.MenuItem> is set to <xref:System.Windows.HorizontalAlignment.Stretch?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3e44c-113">Domyślne położenie w poziomie <xref:System.Windows.Controls.StackPanel> jest <xref:System.Windows.HorizontalAlignment.Center?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3e44c-113">The default horizontal position of a <xref:System.Windows.Controls.StackPanel> is <xref:System.Windows.HorizontalAlignment.Center?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3e44c-114">Jeśli ustawisz <xref:System.Windows.FrameworkElement.Width%2A> właściwość <xref:System.Windows.Controls.MenuItem> za pośrednictwem <xref:System.Windows.Controls.StackPanel>, jest stosowany panel stosu domyślnego i skupia się elementu.</span><span class="sxs-lookup"><span data-stu-id="3e44c-114">If you set the <xref:System.Windows.FrameworkElement.Width%2A> property of a <xref:System.Windows.Controls.MenuItem> through a <xref:System.Windows.Controls.StackPanel>, the stack panel's default is applied and the item is centered.</span></span>  
  
 <span data-ttu-id="3e44c-115"><xref:System.Windows.Controls.MenuItem> Uchwyty <xref:System.Windows.UIElement.MouseDown> zdarzeń, więc Jeśli dołączysz program obsługi zdarzeń do <xref:System.Windows.UIElement.MouseDown>, nigdy nie zostanie wywołana programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="3e44c-115">The <xref:System.Windows.Controls.MenuItem> handles the <xref:System.Windows.UIElement.MouseDown> event, so if you attach an event handler to <xref:System.Windows.UIElement.MouseDown>, your handler will never be called.</span></span>  <span data-ttu-id="3e44c-116">Aby dodać własne program obsługi, Subskrybuj <xref:System.Windows.UIElement.PreviewMouseDown> zdarzeń lub subskrybować <xref:System.Windows.UIElement.MouseDown> przez wywołanie metody <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> z `handledEventsToo` równa `true`.</span><span class="sxs-lookup"><span data-stu-id="3e44c-116">To add your own handler, subscribe to the <xref:System.Windows.UIElement.PreviewMouseDown> event or subscribe to <xref:System.Windows.UIElement.MouseDown> by calling <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
## <a name="customizing-the-menuitem-control"></a><span data-ttu-id="3e44c-117">Dostosowywanie formantu MenuItem</span><span class="sxs-lookup"><span data-stu-id="3e44c-117">Customizing the MenuItem Control</span></span>  
 <span data-ttu-id="3e44c-118">Aby zastosować te same ustawienia właściwości z wieloma <xref:System.Windows.Controls.MenuItem> kontrolki, używać <xref:System.Windows.FrameworkElement.Style%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="3e44c-118">To apply the same property settings to multiple <xref:System.Windows.Controls.MenuItem> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="3e44c-119">Można zmodyfikować domyślne <xref:System.Windows.Controls.ControlTemplate> zapewnienie unikatowego wyglądu kontrolki.</span><span class="sxs-lookup"><span data-stu-id="3e44c-119">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="3e44c-120">Aby uzyskać więcej informacji o tworzeniu <xref:System.Windows.Controls.ControlTemplate>, zobacz [Dostosowywanie wyglądu istniejącego formantu przez stworzenie ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="3e44c-120">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="3e44c-121">Aby zobaczyć elementy i Stany, które są specyficzne dla <xref:System.Windows.Controls.MenuItem>, zobacz [style i szablony Menu](~/docs/framework/wpf/controls/menu-styles-and-templates.md).</span><span class="sxs-lookup"><span data-stu-id="3e44c-121">To see the parts and states that are specific to the <xref:System.Windows.Controls.MenuItem>, see [Menu Styles and Templates](~/docs/framework/wpf/controls/menu-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="3e44c-122">Właściwości zależności dla tego formantu może być ustawione przez domyślnego stylu.</span><span class="sxs-lookup"><span data-stu-id="3e44c-122">Dependency properties for this control might be set by the control's default style.</span></span>  <span data-ttu-id="3e44c-123">Jeśli właściwość jest ustawiana przez domyślnego stylu, zmienić właściwość z jego wartość domyślną gdy formant ma być wyświetlany w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="3e44c-123">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="3e44c-124">Domyślny styl jest określona, przez który motyw pulpitu jest używany podczas działania aplikacji.</span><span class="sxs-lookup"><span data-stu-id="3e44c-124">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="3e44c-125">Aby uzyskać więcej informacji, zobacz [domyślne motywy WPF](https://go.microsoft.com/fwlink/?LinkID=158252).</span><span class="sxs-lookup"><span data-stu-id="3e44c-125">For more information, see [Default WPF Themes](https://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3e44c-126">Ustawienie wartości właściwości wizualnej tylko obowiązuje, jeśli ta właściwość jest obecny w <xref:System.Windows.Controls.MenuItem> kontrolki użytkownika domyślnego szablonu i ustawić za pomocą [TemplateBinding](~/docs/framework/wpf/advanced/templatebinding-markup-extension.md).</span><span class="sxs-lookup"><span data-stu-id="3e44c-126">Setting a visual property only has an effect if that property is both present in the <xref:System.Windows.Controls.MenuItem> control's default template and is set by using a [TemplateBinding](~/docs/framework/wpf/advanced/templatebinding-markup-extension.md).</span></span> <span data-ttu-id="3e44c-127">Lista właściwości visual można znaleźć w sekcji "Zmiana Visual struktury z Control" [Dostosowywanie wyglądu istniejącego formantu przez stworzenie ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="3e44c-127">You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e44c-128">Poniższy przykład tworzy <xref:System.Windows.Controls.Menu> do manipulowania tekstem w <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="3e44c-128">The following example creates a <xref:System.Windows.Controls.Menu> to manipulate text in a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="3e44c-129"><xref:System.Windows.Controls.Menu> Zawiera <xref:System.Windows.Controls.MenuItem> obiektów używających <xref:System.Windows.Controls.MenuItem.Command%2A>, <xref:System.Windows.Controls.MenuItem.IsCheckable%2A>, i <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> właściwości i <xref:System.Windows.Controls.MenuItem.Checked>, <xref:System.Windows.Controls.MenuItem.Unchecked>, i <xref:System.Windows.Controls.MenuItem.Click> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="3e44c-129">The <xref:System.Windows.Controls.Menu> contains <xref:System.Windows.Controls.MenuItem> objects that use the <xref:System.Windows.Controls.MenuItem.Command%2A>, <xref:System.Windows.Controls.MenuItem.IsCheckable%2A>, and <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> properties and the <xref:System.Windows.Controls.MenuItem.Checked>, <xref:System.Windows.Controls.MenuItem.Unchecked>, and <xref:System.Windows.Controls.MenuItem.Click> events.</span></span>  
  
 [!code-xaml[MenuItemCommandsAndEvents#1](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml#1)]  
  
 [!code-csharp[MenuItemCommandsAndEvents#2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml.cs#2)]
 [!code-vb[MenuItemCommandsAndEvents#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItemCommandsAndEvents/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.Menu" />
    <altmember cref="T:System.Windows.Controls.ContextMenu" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3e44c-130">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Controls.MenuItem" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="3e44c-130">Initializes a new instance of the <see cref="T:System.Windows.Controls.MenuItem" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Checked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Checked" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.MenuItem.Checked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Checked As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Checked;" />
      <MemberSignature Language="F#" Value="member this.Checked : System.Windows.RoutedEventHandler " Usage="member this.Checked : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-131">Występuje, gdy zaznaczono element menu.</span><span class="sxs-lookup"><span data-stu-id="3e44c-131">Occurs when a menu item is checked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_Checked"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3e44c-132">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="3e44c-132">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3e44c-133">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="3e44c-133">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.CheckedEvent>|  
|<span data-ttu-id="3e44c-134">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="3e44c-134">Routing strategy</span></span>|<span data-ttu-id="3e44c-135">Propagacja</span><span class="sxs-lookup"><span data-stu-id="3e44c-135">Bubbling</span></span>|  
|<span data-ttu-id="3e44c-136">Delegate</span><span class="sxs-lookup"><span data-stu-id="3e44c-136">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3e44c-137">W poniższym przykładzie pokazano obsługi <xref:System.Windows.Controls.MenuItem.Checked> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="3e44c-137">The following example demonstrates handling the <xref:System.Windows.Controls.MenuItem.Checked> event.</span></span>  
  
 [!code-xaml[MenuItemCommandsAndEvents#3](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml#3)]  
  
 [!code-csharp[MenuItemCommandsAndEvents#4](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml.cs#4)]
 [!code-vb[MenuItemCommandsAndEvents#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItemCommandsAndEvents/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent CheckedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent CheckedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.CheckedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CheckedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ CheckedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable CheckedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.MenuItem.CheckedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-138">Identyfikuje <see cref="E:System.Windows.Controls.MenuItem.Checked" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="3e44c-138">Identifies the <see cref="E:System.Windows.Controls.MenuItem.Checked" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.MenuItem.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : System.Windows.RoutedEventHandler " Usage="member this.Click : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-139">Występuje, gdy <see cref="T:System.Windows.Controls.MenuItem" /> kliknięciu.</span><span class="sxs-lookup"><span data-stu-id="3e44c-139">Occurs when a <see cref="T:System.Windows.Controls.MenuItem" /> is clicked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e44c-140"><xref:System.Windows.Controls.MenuItem.Click> Zdarzenie nie występuje w przypadku <xref:System.Windows.Controls.MenuItem> ma podmenu.</span><span class="sxs-lookup"><span data-stu-id="3e44c-140">The <xref:System.Windows.Controls.MenuItem.Click> event does not occur if the <xref:System.Windows.Controls.MenuItem> has a submenu.</span></span>  
  
<a name="routedEventInfo_Click"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3e44c-141">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="3e44c-141">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3e44c-142">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="3e44c-142">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.ClickEvent>|  
|<span data-ttu-id="3e44c-143">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="3e44c-143">Routing strategy</span></span>|<span data-ttu-id="3e44c-144">Propagacja</span><span class="sxs-lookup"><span data-stu-id="3e44c-144">Bubbling</span></span>|  
|<span data-ttu-id="3e44c-145">Delegate</span><span class="sxs-lookup"><span data-stu-id="3e44c-145">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3e44c-146">Poniższy przykład tworzy <xref:System.Windows.Controls.Menu> do manipulowania tekstem w <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="3e44c-146">The following example creates a <xref:System.Windows.Controls.Menu> to manipulate text in a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="3e44c-147"><xref:System.Windows.Controls.Menu> Zawiera <xref:System.Windows.Controls.MenuItem> obiektów używających <xref:System.Windows.Controls.MenuItem.Command%2A>, <xref:System.Windows.Controls.MenuItem.IsCheckable%2A>, i <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> właściwości i <xref:System.Windows.Controls.MenuItem.Checked>, <xref:System.Windows.Controls.MenuItem.Unchecked>, i <xref:System.Windows.Controls.MenuItem.Click> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="3e44c-147">The <xref:System.Windows.Controls.Menu> contains <xref:System.Windows.Controls.MenuItem> objects that use the <xref:System.Windows.Controls.MenuItem.Command%2A>, <xref:System.Windows.Controls.MenuItem.IsCheckable%2A>, and <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> properties and the <xref:System.Windows.Controls.MenuItem.Checked>, <xref:System.Windows.Controls.MenuItem.Unchecked>, and <xref:System.Windows.Controls.MenuItem.Click> events.</span></span>  
  
 [!code-xaml[MenuItemCommandsAndEvents#1](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml#1)]  
  
 [!code-csharp[MenuItemCommandsAndEvents#2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml.cs#2)]
 [!code-vb[MenuItemCommandsAndEvents#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItemCommandsAndEvents/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClickEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ClickEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ClickEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.ClickEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClickEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ClickEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClickEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.MenuItem.ClickEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-148">Identyfikuje <see cref="E:System.Windows.Controls.MenuItem.Click" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="3e44c-148">Identifies the <see cref="E:System.Windows.Controls.MenuItem.Click" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e44c-149">Odpowiada to zdarzenie kliknięcia przycisku myszy po lewej stronie.</span><span class="sxs-lookup"><span data-stu-id="3e44c-149">This event corresponds to a left mouse button click.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.Command" />
      <MemberSignature Language="VB.NET" Value="Public Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); void set(System::Windows::Input::ICommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Windows.Input.ICommand with get, set" Usage="System.Windows.Controls.MenuItem.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-150">Pobiera lub ustawia polecenie skojarzone z elementem menu.</span><span class="sxs-lookup"><span data-stu-id="3e44c-150">Gets or sets the command associated with the menu item.</span></span></summary>
        <value><span data-ttu-id="3e44c-151">Polecenie skojarzone z <see cref="T:System.Windows.Controls.MenuItem" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-151">The command associated with the <see cref="T:System.Windows.Controls.MenuItem" />.</span></span>  <span data-ttu-id="3e44c-152">Wartość domyślna to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-152">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e44c-153">Ta właściwość jest używana do kojarzenia polecenia z określonym <xref:System.Windows.Controls.MenuItem> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="3e44c-153">This property is used to associate a command with a particular <xref:System.Windows.Controls.MenuItem> instance.</span></span> <span data-ttu-id="3e44c-154">W poniższym przykładzie **kopiowania** polecenia <xref:System.Windows.Controls.MenuItem> i automatycznie dostarcza tekst wejściowy gestu **klawisze Ctrl + C**.</span><span class="sxs-lookup"><span data-stu-id="3e44c-154">The following example associates the **Copy** command with a <xref:System.Windows.Controls.MenuItem> and automatically supplies the input gesture text **Ctrl+C**.</span></span> <span data-ttu-id="3e44c-155">Przykład Nieustawione <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> właściwości, ale <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> dla <xref:System.Windows.Controls.MenuItem> jest "Kopiuj" w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="3e44c-155">The example does not set the <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> property, but the <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> for the <xref:System.Windows.Controls.MenuItem> is "Copy" at run time.</span></span>  <span data-ttu-id="3e44c-156">Możesz określić inny nagłówek <xref:System.Windows.Controls.MenuItem> jeśli ma ona być inna.</span><span class="sxs-lookup"><span data-stu-id="3e44c-156">You can specify another header for the <xref:System.Windows.Controls.MenuItem> if you want it to be different.</span></span> <span data-ttu-id="3e44c-157">Aby uzyskać informacji na temat sposobu tworzenia powiązania do żądanego polecenia, zobacz [dodać polecenie do MenuItem](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741839(v=vs.90)).</span><span class="sxs-lookup"><span data-stu-id="3e44c-157">For information on how to bind to the desired command, see [Add a Command to a MenuItem](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741839(v=vs.90)).</span></span>  
  
 [!code-xaml[MenuItems_snip#MenuItemCommand](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml#menuitemcommand)]  
  
 <span data-ttu-id="3e44c-158">Polecenie jest wywoływane, gdy <xref:System.Windows.Controls.MenuItem> kliknięciu - tuż za <xref:System.Windows.Controls.MenuItem.Click> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="3e44c-158">A command is raised when a <xref:System.Windows.Controls.MenuItem> is clicked - just after the <xref:System.Windows.Controls.MenuItem.Click> event.</span></span> <span data-ttu-id="3e44c-159">Polecenie jest wywoływane na elemencie zgodnie z następującymi priorytetami:</span><span class="sxs-lookup"><span data-stu-id="3e44c-159">The command is raised on the element according to the following priorities:</span></span>  
  
1.  <span data-ttu-id="3e44c-160">Jeśli <xref:System.Windows.Controls.MenuItem.CommandTarget%2A> jest ustawiona na <xref:System.Windows.Controls.MenuItem>, ten element jest używany.</span><span class="sxs-lookup"><span data-stu-id="3e44c-160">If <xref:System.Windows.Controls.MenuItem.CommandTarget%2A> is set on the <xref:System.Windows.Controls.MenuItem>, that element is used.</span></span>  
  
2.  <span data-ttu-id="3e44c-161"><xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A> z <xref:System.Windows.Controls.ContextMenu> zawierający <xref:System.Windows.Controls.MenuItem>.</span><span class="sxs-lookup"><span data-stu-id="3e44c-161">The <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A> of a <xref:System.Windows.Controls.ContextMenu> that contains the <xref:System.Windows.Controls.MenuItem>.</span></span>  
  
3.  <span data-ttu-id="3e44c-162">Element docelowy fokusu okna głównego, który zawiera <xref:System.Windows.Controls.Menu>.</span><span class="sxs-lookup"><span data-stu-id="3e44c-162">The focus target of the main window that contains a <xref:System.Windows.Controls.Menu>.</span></span>  
  
4.  <span data-ttu-id="3e44c-163"><xref:System.Windows.Controls.MenuItem> Który został kliknięty.</span><span class="sxs-lookup"><span data-stu-id="3e44c-163">The <xref:System.Windows.Controls.MenuItem> that was clicked.</span></span>  
  
<a name="dependencyPropertyInfo_Command"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3e44c-164">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="3e44c-164">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3e44c-165">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="3e44c-165">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.CommandProperty>|  
|<span data-ttu-id="3e44c-166">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="3e44c-166">Metadata properties set to `true`</span></span>|<span data-ttu-id="3e44c-167">Brak</span><span class="sxs-lookup"><span data-stu-id="3e44c-167">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3e44c-168">Poniższe przykłady pokazują, jak użyć właściwości polecenia, aby skojarzyć poleceń z elementami menu.</span><span class="sxs-lookup"><span data-stu-id="3e44c-168">The following examples show how to use the command property to associate commands with menu items.</span></span>  
  
 [!code-xaml[MenuEvent#8](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuEvent/CSharp/Pane1.xaml#8)]  
  
 [!code-csharp[MenuEvent#9](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuEvent/CSharp/Pane1.xaml.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandParameter">
      <MemberSignature Language="C#" Value="public object CommandParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.CommandParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandParameter { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandParameter : obj with get, set" Usage="System.Windows.Controls.MenuItem.CommandParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-169">Pobiera lub Ustawia parametr do przekazania do <see cref="P:System.Windows.Controls.MenuItem.Command" /> właściwość <see cref="T:System.Windows.Controls.MenuItem" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-169">Gets or sets the parameter to pass to the <see cref="P:System.Windows.Controls.MenuItem.Command" /> property of a <see cref="T:System.Windows.Controls.MenuItem" />.</span></span></summary>
        <value><span data-ttu-id="3e44c-170">Parametr do przekazania do <see cref="P:System.Windows.Controls.MenuItem.Command" /> właściwość <see cref="T:System.Windows.Controls.MenuItem" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-170">The parameter to pass to the <see cref="P:System.Windows.Controls.MenuItem.Command" /> property of a <see cref="T:System.Windows.Controls.MenuItem" />.</span></span> <span data-ttu-id="3e44c-171">Wartość domyślna to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-171">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_CommandParameter"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3e44c-172">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="3e44c-172">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3e44c-173">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="3e44c-173">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.CommandParameterProperty>|  
|<span data-ttu-id="3e44c-174">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="3e44c-174">Metadata properties set to `true`</span></span>|<span data-ttu-id="3e44c-175">Brak</span><span class="sxs-lookup"><span data-stu-id="3e44c-175">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandParameterProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandParameterProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandParameterProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.CommandParameterProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandParameterProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandParameterProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommandParameterProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MenuItem.CommandParameterProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-176">Identyfikuje <see cref="P:System.Windows.Controls.MenuItem.CommandParameter" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="3e44c-176">Identifies the <see cref="P:System.Windows.Controls.MenuItem.CommandParameter" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.CommandProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommandProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MenuItem.CommandProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-177">Identyfikuje <see cref="P:System.Windows.Controls.MenuItem.Command" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="3e44c-177">Identifies the <see cref="P:System.Windows.Controls.MenuItem.Command" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTarget">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement CommandTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement CommandTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.CommandTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTarget As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ CommandTarget { System::Windows::IInputElement ^ get(); void set(System::Windows::IInputElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandTarget : System.Windows.IInputElement with get, set" Usage="System.Windows.Controls.MenuItem.CommandTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-178">Pobiera lub ustawia element docelowy, na którym ma zostać wywołane określone polecenie.</span><span class="sxs-lookup"><span data-stu-id="3e44c-178">Gets or sets the target element on which to raise the specified command.</span></span></summary>
        <value><span data-ttu-id="3e44c-179">Element, na którym ma zostać wywołane określone polecenie.</span><span class="sxs-lookup"><span data-stu-id="3e44c-179">The element on which to raise the specified command.</span></span> <span data-ttu-id="3e44c-180">Wartość domyślna to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-180">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e44c-181"><xref:System.Windows.Controls.MenuItem.CommandTarget%2A> Właściwość określa element, gdzie występuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="3e44c-181">The <xref:System.Windows.Controls.MenuItem.CommandTarget%2A> property specifies the element where the command occurs.</span></span> <span data-ttu-id="3e44c-182">Jeśli <xref:System.Windows.Controls.MenuItem.CommandTarget%2A> nie jest ustawiony, element, który ma fokus klawiatury będą otrzymywać polecenia.</span><span class="sxs-lookup"><span data-stu-id="3e44c-182">If <xref:System.Windows.Controls.MenuItem.CommandTarget%2A> is not set, the element that has keyboard focus will receive the command.</span></span>  
  
<a name="dependencyPropertyInfo_CommandTarget"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3e44c-183">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="3e44c-183">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3e44c-184">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="3e44c-184">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.CommandTargetProperty>|  
|<span data-ttu-id="3e44c-185">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="3e44c-185">Metadata properties set to `true`</span></span>|<span data-ttu-id="3e44c-186">Brak</span><span class="sxs-lookup"><span data-stu-id="3e44c-186">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandTargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandTargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.CommandTargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandTargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandTargetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommandTargetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MenuItem.CommandTargetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-187">Identyfikuje <see cref="P:System.Windows.Controls.MenuItem.CommandTarget" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="3e44c-187">Identifies the <see cref="P:System.Windows.Controls.MenuItem.CommandTarget" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.DependencyObject GetContainerForItemOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.DependencyObject GetContainerForItemOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.GetContainerForItemOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetContainerForItemOverride () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::DependencyObject ^ GetContainerForItemOverride();" />
      <MemberSignature Language="F#" Value="override this.GetContainerForItemOverride : unit -&gt; System.Windows.DependencyObject" Usage="menuItem.GetContainerForItemOverride " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3e44c-188">Tworzy lub identyfikuje element używany do wyświetlania określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="3e44c-188">Creates or identifies the element used to display a specified item.</span></span></summary>
        <returns><span data-ttu-id="3e44c-189">Element używany do wyświetlania określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="3e44c-189">The element used to display a specified item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlesScrolling">
      <MemberSignature Language="C#" Value="protected internal override bool HandlesScrolling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HandlesScrolling" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.HandlesScrolling" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property HandlesScrolling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HandlesScrolling { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HandlesScrolling : bool" Usage="System.Windows.Controls.MenuItem.HandlesScrolling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-190">Pobiera informacje, czy są obsługiwane przez kontrolkę przewijania.</span><span class="sxs-lookup"><span data-stu-id="3e44c-190">Gets whether the control supports scrolling.</span></span></summary>
        <value><span data-ttu-id="3e44c-191"><see langword="true" /> we wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="3e44c-191"><see langword="true" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e44c-192">Jeśli kontrolka ma <xref:System.Windows.Controls.ScrollViewer> w jego styl i ma klawiatury niestandardowej przewijanie zachowanie <xref:System.Windows.Controls.ListBox.HandlesScrolling%2A> powinna zwrócić `true`.</span><span class="sxs-lookup"><span data-stu-id="3e44c-192">If the control has a <xref:System.Windows.Controls.ScrollViewer> in its style and has a custom keyboard scrolling behavior, <xref:System.Windows.Controls.ListBox.HandlesScrolling%2A> should return `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Icon">
      <MemberSignature Language="C#" Value="public object Icon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Icon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.Icon" />
      <MemberSignature Language="VB.NET" Value="Public Property Icon As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Icon { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Icon : obj with get, set" Usage="System.Windows.Controls.MenuItem.Icon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-193">Pobiera lub ustawia ikonę, która jest wyświetlana w <see cref="T:System.Windows.Controls.MenuItem" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-193">Gets or sets the icon that appears in a <see cref="T:System.Windows.Controls.MenuItem" />.</span></span></summary>
        <value><span data-ttu-id="3e44c-194">Ikona wyświetlana w <see cref="T:System.Windows.Controls.MenuItem" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-194">The icon that appears in a <see cref="T:System.Windows.Controls.MenuItem" />.</span></span> <span data-ttu-id="3e44c-195">Wartość domyślna to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-195">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e44c-196">Wiele <xref:System.Windows.Controls.Menu> kontrolki mają więcej niż tylko tekst <xref:System.Windows.Controls.MenuItem> elementów.</span><span class="sxs-lookup"><span data-stu-id="3e44c-196">Many <xref:System.Windows.Controls.Menu> controls have more than just text in the <xref:System.Windows.Controls.MenuItem> elements.</span></span> <span data-ttu-id="3e44c-197">Często istnieje ikony, znaczniki wyboru, akceleratory i strzałki wskazujące podmenu.</span><span class="sxs-lookup"><span data-stu-id="3e44c-197">Often there are icons, check marks, accelerators, and arrows to indicate submenus.</span></span>  
  
<a name="dependencyPropertyInfo_Icon"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3e44c-198">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="3e44c-198">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3e44c-199">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="3e44c-199">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.IconProperty>|  
|<span data-ttu-id="3e44c-200">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="3e44c-200">Metadata properties set to `true`</span></span>|<span data-ttu-id="3e44c-201">Brak</span><span class="sxs-lookup"><span data-stu-id="3e44c-201">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3e44c-202">Poniższy przykład tworzy element menu przy użyciu ikony.</span><span class="sxs-lookup"><span data-stu-id="3e44c-202">The following example creates a menu item with an icon.</span></span>  
  
 [!code-xaml[MenuItems_snip#MenuItemIcon](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml#menuitemicon)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IconProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IconProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IconProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.IconProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IconProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IconProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IconProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MenuItem.IconProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-203">Identyfikuje <see cref="P:System.Windows.Controls.MenuItem.Icon" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="3e44c-203">Identifies the <see cref="P:System.Windows.Controls.MenuItem.Icon" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputGestureText">
      <MemberSignature Language="C#" Value="public string InputGestureText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InputGestureText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.InputGestureText" />
      <MemberSignature Language="VB.NET" Value="Public Property InputGestureText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InputGestureText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InputGestureText : string with get, set" Usage="System.Windows.Controls.MenuItem.InputGestureText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-204">Ustawia tekst opisujący danych wejściowych gest, który będzie wybierany polecenia związany z określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="3e44c-204">Sets the text describing an input gesture that will call the command tied to the specified item.</span></span></summary>
        <value><span data-ttu-id="3e44c-205">Tekst, który opisuje gestu danych wejściowych, takie jak **klawisze Ctrl + C** dla **kopiowania** polecenia.</span><span class="sxs-lookup"><span data-stu-id="3e44c-205">The text that describes the input gesture, such as **Ctrl+C** for the **Copy** command.</span></span> <span data-ttu-id="3e44c-206">Wartością domyślną jest ciąg pusty ("").</span><span class="sxs-lookup"><span data-stu-id="3e44c-206">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e44c-207">Ta właściwość nie kojarzy gestu danych wejściowych z elementem menu; po prostu dodaje tekst elementu menu.</span><span class="sxs-lookup"><span data-stu-id="3e44c-207">This property does not associate the input gesture with the menu item; it simply adds text to the menu item.</span></span> <span data-ttu-id="3e44c-208">Aplikacja musi obsłużyć dane wejściowe użytkownika do wykonania akcji.</span><span class="sxs-lookup"><span data-stu-id="3e44c-208">The application must handle the user's input to carry out the action.</span></span>  <span data-ttu-id="3e44c-209">Aby uzyskać informacji na temat sposobu kojarzenia polecenia przy użyciu elementu menu, zobacz <xref:System.Windows.Controls.MenuItem.Command%2A>.</span><span class="sxs-lookup"><span data-stu-id="3e44c-209">For information on how to associate a command with a menu item, see <xref:System.Windows.Controls.MenuItem.Command%2A>.</span></span>  
  
<a name="dependencyPropertyInfo_InputGestureText"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3e44c-210">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="3e44c-210">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3e44c-211">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="3e44c-211">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.InputGestureTextProperty>|  
|<span data-ttu-id="3e44c-212">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="3e44c-212">Metadata properties set to `true`</span></span>|<span data-ttu-id="3e44c-213">Brak</span><span class="sxs-lookup"><span data-stu-id="3e44c-213">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3e44c-214">W poniższych przykładach pokazano sposób użycia <xref:System.Windows.Controls.MenuItem.InputGestureText%2A> właściwości, aby przypisać tekst skrótów klawiaturowych z elementami menu.</span><span class="sxs-lookup"><span data-stu-id="3e44c-214">The following examples show how to use the <xref:System.Windows.Controls.MenuItem.InputGestureText%2A> property to assign keyboard shortcuts text to menu items.</span></span>  
  
 [!code-xaml[MenuEvent#6](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuEvent/CSharp/Pane1.xaml#6)]  
  
 [!code-csharp[MenuEvent#7](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuEvent/CSharp/Pane1.xaml.cs#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741839(v=vs.90)"><span data-ttu-id="3e44c-215">Dodawanie polecenia do element MenuItem</span><span class="sxs-lookup"><span data-stu-id="3e44c-215">Add a Command to a MenuItem</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InputGestureTextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty InputGestureTextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty InputGestureTextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.InputGestureTextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InputGestureTextProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ InputGestureTextProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable InputGestureTextProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MenuItem.InputGestureTextProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-216">Identyfikuje <see cref="P:System.Windows.Controls.MenuItem.InputGestureText" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="3e44c-216">Identifies the <see cref="P:System.Windows.Controls.MenuItem.InputGestureText" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCheckable">
      <MemberSignature Language="C#" Value="public bool IsCheckable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCheckable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.IsCheckable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsCheckable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCheckable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsCheckable : bool with get, set" Usage="System.Windows.Controls.MenuItem.IsCheckable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-217">Pobiera wartość wskazującą, czy <see cref="T:System.Windows.Controls.MenuItem" /> może zostać sprawdzone.</span><span class="sxs-lookup"><span data-stu-id="3e44c-217">Gets a value that indicates whether a <see cref="T:System.Windows.Controls.MenuItem" /> can be checked.</span></span></summary>
        <value><span data-ttu-id="3e44c-218"><see langword="true" /> Jeśli element menu może zostać sprawdzone; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-218"><see langword="true" /> if the menu item can be checked; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="3e44c-219">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-219">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsCheckable"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3e44c-220">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="3e44c-220">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3e44c-221">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="3e44c-221">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.IsCheckableProperty>|  
|<span data-ttu-id="3e44c-222">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="3e44c-222">Metadata properties set to `true`</span></span>|<span data-ttu-id="3e44c-223">Brak</span><span class="sxs-lookup"><span data-stu-id="3e44c-223">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3e44c-224">Poniższy przykład pokazuje, jak wprowadzić <xref:System.Windows.Controls.MenuItem> formantów, które są sprawdzane, kiedy użytkownik kliknie je.</span><span class="sxs-lookup"><span data-stu-id="3e44c-224">The following example shows how to make <xref:System.Windows.Controls.MenuItem> controls that are checked when a user clicks them.</span></span>  
  
 [!code-xaml[MenuEvent#11](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuEvent/CSharp/Pane1.xaml#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCheckableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsCheckableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsCheckableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.IsCheckableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsCheckableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsCheckableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsCheckableProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MenuItem.IsCheckableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-225">Identyfikuje <see cref="P:System.Windows.Controls.MenuItem.IsCheckable" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="3e44c-225">Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsCheckable" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsChecked">
      <MemberSignature Language="C#" Value="public bool IsChecked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsChecked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.IsChecked" />
      <MemberSignature Language="VB.NET" Value="Public Property IsChecked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsChecked { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsChecked : bool with get, set" Usage="System.Windows.Controls.MenuItem.IsChecked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-226">Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Windows.Controls.MenuItem" /> jest zaznaczone.</span><span class="sxs-lookup"><span data-stu-id="3e44c-226">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.MenuItem" /> is checked.</span></span></summary>
        <value><span data-ttu-id="3e44c-227"><see langword="true" /> Jeśli <see cref="T:System.Windows.Controls.MenuItem" /> jest zaznaczony; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-227"><see langword="true" /> if a <see cref="T:System.Windows.Controls.MenuItem" /> is checked; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3e44c-228">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-228">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsChecked"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3e44c-229">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="3e44c-229">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3e44c-230">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="3e44c-230">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.IsCheckedProperty>|  
|<span data-ttu-id="3e44c-231">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="3e44c-231">Metadata properties set to `true`</span></span>|<span data-ttu-id="3e44c-232"><xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A></span><span class="sxs-lookup"><span data-stu-id="3e44c-232"><xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3e44c-233">W poniższym przykładzie pokazano sposób, w jaki <xref:System.Windows.Controls.MenuItem.IsChecked%2A> właściwość może służyć do Umieść znacznik wyboru w miejscu dostępnym dla elementu menu.</span><span class="sxs-lookup"><span data-stu-id="3e44c-233">The following example shows how the <xref:System.Windows.Controls.MenuItem.IsChecked%2A> property can be used to place a check mark in front of a menu item.</span></span>  
  
 [!code-xaml[MenuStylesSnippet#6](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuStylesSnippet/CS/pane1.xaml#6)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCheckedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsCheckedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsCheckedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.IsCheckedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsCheckedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsCheckedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsCheckedProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MenuItem.IsCheckedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-234">Identyfikuje <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="3e44c-234">Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected override bool IsEnabledCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.IsEnabledCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property IsEnabledCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsEnabledCore { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabledCore : bool" Usage="System.Windows.Controls.MenuItem.IsEnabledCore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-235">Pobiera wartość wskazującą, czy <see cref="P:System.Windows.ContentElement.IsEnabled" /> właściwość <see langword="true" /> dla bieżącego elementu menu.</span><span class="sxs-lookup"><span data-stu-id="3e44c-235">Gets a value that indicates whether the <see cref="P:System.Windows.ContentElement.IsEnabled" /> property is <see langword="true" /> for the current menu item.</span></span></summary>
        <value><span data-ttu-id="3e44c-236"><see langword="true" /> Jeśli <see cref="T:System.Windows.Controls.MenuItem" /> może być wybrana; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-236"><see langword="true" /> if the <see cref="T:System.Windows.Controls.MenuItem" /> can be selected; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHighlighted">
      <MemberSignature Language="C#" Value="public bool IsHighlighted { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHighlighted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.IsHighlighted" />
      <MemberSignature Language="VB.NET" Value="Public Property IsHighlighted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:  property bool IsHighlighted {  public:&#xA;bool get(); protected:&#xA; void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsHighlighted : bool with get, set" Usage="System.Windows.Controls.MenuItem.IsHighlighted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-237">Pobiera wartość wskazującą, czy <see cref="T:System.Windows.Controls.MenuItem" /> zostanie wyróżniona.</span><span class="sxs-lookup"><span data-stu-id="3e44c-237">Gets a value that indicates whether a <see cref="T:System.Windows.Controls.MenuItem" /> is highlighted.</span></span></summary>
        <value><span data-ttu-id="3e44c-238"><see langword="true" /> Jeśli <see cref="T:System.Windows.Controls.MenuItem" /> jest wyróżniony; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-238"><see langword="true" /> if a <see cref="T:System.Windows.Controls.MenuItem" /> is highlighted; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3e44c-239">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-239">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e44c-240">Począwszy od programu .NET Framework w wersji 3.0 z dodatkiem Service Pack 1, <xref:System.Windows.Controls.MenuItem.IsHighlighted%2A> właściwość ma chronione metody ustawiającej.</span><span class="sxs-lookup"><span data-stu-id="3e44c-240">Starting with the .NET Framework version 3.0 Service Pack 1, the <xref:System.Windows.Controls.MenuItem.IsHighlighted%2A> property has a protected setter.</span></span> <span data-ttu-id="3e44c-241">Aby używać tej funkcji, aplikacji powinien dotyczyć .NET Framework w wersji 3.5.</span><span class="sxs-lookup"><span data-stu-id="3e44c-241">To use this functionality, your application should target the .NET Framework version 3.5.</span></span>  <span data-ttu-id="3e44c-242">Aby uzyskać więcej informacji, zobacz [wersje programu .NET Framework i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="3e44c-242">For more information, see [.NET Framework Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsHighlighted"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3e44c-243">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="3e44c-243">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3e44c-244">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="3e44c-244">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.IsHighlightedProperty>|  
|<span data-ttu-id="3e44c-245">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="3e44c-245">Metadata properties set to `true`</span></span>|<span data-ttu-id="3e44c-246">Brak</span><span class="sxs-lookup"><span data-stu-id="3e44c-246">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3e44c-247">Poniższy przykład pokazuje, jak ustalić, czy element menu zostanie wyróżniona.</span><span class="sxs-lookup"><span data-stu-id="3e44c-247">The following example shows how to determine whether a menu item is highlighted.</span></span>  
  
 [!code-csharp[MenuItems_snip#MenuItemIsHighlighted](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml.cs#menuitemishighlighted)]
 [!code-vb[MenuItems_snip#MenuItemIsHighlighted](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItems_snip/visualbasic/pane1.xaml.vb#menuitemishighlighted)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHighlightedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsHighlightedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsHighlightedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.IsHighlightedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsHighlightedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsHighlightedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsHighlightedProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MenuItem.IsHighlightedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-248">Identyfikuje <see cref="P:System.Windows.Controls.MenuItem.IsHighlighted" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="3e44c-248">Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsHighlighted" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemItsOwnContainerOverride">
      <MemberSignature Language="C#" Value="protected override bool IsItemItsOwnContainerOverride (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsItemItsOwnContainerOverride(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.IsItemItsOwnContainerOverride(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsItemItsOwnContainerOverride (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsItemItsOwnContainerOverride(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.IsItemItsOwnContainerOverride : obj -&gt; bool" Usage="menuItem.IsItemItsOwnContainerOverride item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="3e44c-249">Określony element.</span><span class="sxs-lookup"><span data-stu-id="3e44c-249">Specified item.</span></span></param>
        <summary><span data-ttu-id="3e44c-250">Określa, czy określony element jest (lub kwalifikuje się jako) swój własny <c>ItemContainer</c>.</span><span class="sxs-lookup"><span data-stu-id="3e44c-250">Determines if the specified item is (or is eligible to be) its own <c>ItemContainer</c>.</span></span></summary>
        <returns><span data-ttu-id="3e44c-251"><see langword="true" /> Jeśli element znajduje się własną <c>ItemContainer</c>; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-251"><see langword="true" /> if the item is its own <c>ItemContainer</c>; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPressed">
      <MemberSignature Language="C#" Value="public bool IsPressed { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPressed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.IsPressed" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPressed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:  property bool IsPressed {  public:&#xA;bool get(); protected:&#xA; void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsPressed : bool with get, set" Usage="System.Windows.Controls.MenuItem.IsPressed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-252">Pobiera wartość wskazującą, czy <see cref="T:System.Windows.Controls.MenuItem" /> naciśnięciu.</span><span class="sxs-lookup"><span data-stu-id="3e44c-252">Gets a value that indicates whether a <see cref="T:System.Windows.Controls.MenuItem" /> is pressed.</span></span></summary>
        <value><span data-ttu-id="3e44c-253"><see langword="true" /> Jeśli <see cref="T:System.Windows.Controls.MenuItem" /> jest po naciśnięciu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-253"><see langword="true" /> if a <see cref="T:System.Windows.Controls.MenuItem" /> is pressed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3e44c-254">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-254">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e44c-255">Począwszy od programu .NET Framework w wersji 3.0 z dodatkiem Service Pack 1, <xref:System.Windows.Controls.MenuItem.IsPressed%2A> właściwość ma chronione metody ustawiającej.</span><span class="sxs-lookup"><span data-stu-id="3e44c-255">Starting with the .NET Framework version 3.0 Service Pack 1, the <xref:System.Windows.Controls.MenuItem.IsPressed%2A> property has a protected setter.</span></span> <span data-ttu-id="3e44c-256">Aby używać tej funkcji, aplikacji powinien dotyczyć .NET Framework w wersji 3.5.</span><span class="sxs-lookup"><span data-stu-id="3e44c-256">To use this functionality, your application should target the .NET Framework version 3.5.</span></span>  <span data-ttu-id="3e44c-257">Aby uzyskać więcej informacji, zobacz [wersje programu .NET Framework i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="3e44c-257">For more information, see [.NET Framework Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsPressed"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3e44c-258">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="3e44c-258">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3e44c-259">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="3e44c-259">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.IsPressedProperty>|  
|<span data-ttu-id="3e44c-260">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="3e44c-260">Metadata properties set to `true`</span></span>|<span data-ttu-id="3e44c-261">Brak</span><span class="sxs-lookup"><span data-stu-id="3e44c-261">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3e44c-262">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Controls.MenuItem.IsPressed%2A> właściwości w stylu elementu menu.</span><span class="sxs-lookup"><span data-stu-id="3e44c-262">The following example shows how to use the <xref:System.Windows.Controls.MenuItem.IsPressed%2A> property in a menu item style.</span></span> <span data-ttu-id="3e44c-263">Kiedy element menu jest wciśnięty, styl jej pierwszego planu, rozmiar tekstu i Zmień styl tekstu.</span><span class="sxs-lookup"><span data-stu-id="3e44c-263">When the menu item is pressed, the style of its foreground, text size, and text style change.</span></span>  
  
 [!code-xaml[MenuItemsStyle_snip#MenuItemsIsPressed](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemsStyle_snip/CSharp/MyApp.xaml#menuitemsispressed)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPressedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsPressedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsPressedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.IsPressedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsPressedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsPressedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsPressedProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MenuItem.IsPressedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-264">Identyfikuje <see cref="P:System.Windows.Controls.MenuItem.IsPressed" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="3e44c-264">Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsPressed" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubmenuOpen">
      <MemberSignature Language="C#" Value="public bool IsSubmenuOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSubmenuOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSubmenuOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSubmenuOpen { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsSubmenuOpen : bool with get, set" Usage="System.Windows.Controls.MenuItem.IsSubmenuOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-265">Pobiera lub ustawia wartość wskazującą, czy z podmenu <see cref="T:System.Windows.Controls.MenuItem" /> jest otwarty.</span><span class="sxs-lookup"><span data-stu-id="3e44c-265">Gets or sets a value that indicates whether the submenu of the <see cref="T:System.Windows.Controls.MenuItem" /> is open.</span></span></summary>
        <value><span data-ttu-id="3e44c-266"><see langword="true" /> Jeśli podmenu <see cref="T:System.Windows.Controls.MenuItem" /> jest otwarty w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-266"><see langword="true" /> if the submenu of the <see cref="T:System.Windows.Controls.MenuItem" /> is open; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3e44c-267">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-267">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e44c-268">Gdy <xref:System.Windows.Controls.MenuItem.IsSubmenuOpen%2A> ustawiono `true`, przechwytywanie myszy jest ustawiona na <xref:System.Windows.Controls.MenuItem> i jego poddrzewa.</span><span class="sxs-lookup"><span data-stu-id="3e44c-268">When <xref:System.Windows.Controls.MenuItem.IsSubmenuOpen%2A> is set to `true`, mouse capture is set to the <xref:System.Windows.Controls.MenuItem> and its subtree.</span></span>  
  
<a name="dependencyPropertyInfo_IsSubmenuOpen"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3e44c-269">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="3e44c-269">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3e44c-270">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="3e44c-270">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.IsSubmenuOpenProperty>|  
|<span data-ttu-id="3e44c-271">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="3e44c-271">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="3e44c-272">Poniższy przykład pokazuje, jak otworzyć podmenu <xref:System.Windows.Controls.MenuItem>.</span><span class="sxs-lookup"><span data-stu-id="3e44c-272">The following example shows how to open a submenu of a <xref:System.Windows.Controls.MenuItem>.</span></span>  <span data-ttu-id="3e44c-273">W tym przykładzie <xref:System.Windows.Controls.MenuItem> o nazwie `fileMenu` zawiera <xref:System.Windows.Controls.MenuItem> o nazwie `recentFiles` zawierający podmenu.</span><span class="sxs-lookup"><span data-stu-id="3e44c-273">In this example, the <xref:System.Windows.Controls.MenuItem> called `fileMenu` contains a <xref:System.Windows.Controls.MenuItem> called `recentFiles` that has a submenu.</span></span> <span data-ttu-id="3e44c-274">Gdy `fileMenu` jest otwarty, <xref:System.Windows.Controls.MenuItem.SubmenuOpened> zdarzenie jest zgłaszane i `FileMenu_Opened` programu obsługi zdarzeń spowoduje otwarcie podmenu `recentFiles`.</span><span class="sxs-lookup"><span data-stu-id="3e44c-274">When `fileMenu` is opened, the <xref:System.Windows.Controls.MenuItem.SubmenuOpened> event is raised and the `FileMenu_Opened` event handler opens the submenu of `recentFiles`.</span></span>  
  
 [!code-xaml[MenuItems_snip#IsSubMenuOpenMenu](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml#issubmenuopenmenu)]  
  
 [!code-csharp[MenuItems_snip#IsSubMenuOpen](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml.cs#issubmenuopen)]
 [!code-vb[MenuItems_snip#IsSubMenuOpen](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItems_snip/visualbasic/pane1.xaml.vb#issubmenuopen)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubmenuOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsSubmenuOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsSubmenuOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.IsSubmenuOpenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSubmenuOpenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsSubmenuOpenProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsSubmenuOpenProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MenuItem.IsSubmenuOpenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-275">Identyfikuje <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="3e44c-275">Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSuspendingPopupAnimation">
      <MemberSignature Language="C#" Value="public bool IsSuspendingPopupAnimation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSuspendingPopupAnimation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSuspendingPopupAnimation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSuspendingPopupAnimation { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSuspendingPopupAnimation : bool" Usage="System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-276">Pobiera informację, czy menu wstrzymuje animacji w jego <see cref="T:System.Windows.Controls.Primitives.Popup" /> kontroli.</span><span class="sxs-lookup"><span data-stu-id="3e44c-276">Gets whether a menu suspends animations on its <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</span></span></summary>
        <value><span data-ttu-id="3e44c-277"><see langword="true" /> Jeśli menu powinien Zawieś animacji w jego menu podręczne; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-277"><see langword="true" /> if the menu should suspend animations on its popup; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3e44c-278">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-278">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsSuspendingPopupAnimation"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3e44c-279">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="3e44c-279">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3e44c-280">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="3e44c-280">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimationProperty>|  
|<span data-ttu-id="3e44c-281">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="3e44c-281">Metadata properties set to `true`</span></span>|<span data-ttu-id="3e44c-282">Brak</span><span class="sxs-lookup"><span data-stu-id="3e44c-282">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSuspendingPopupAnimationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsSuspendingPopupAnimationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsSuspendingPopupAnimationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSuspendingPopupAnimationProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsSuspendingPopupAnimationProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsSuspendingPopupAnimationProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MenuItem.IsSuspendingPopupAnimationProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-283">Identyfikuje <see cref="P:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="3e44c-283">Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ItemContainerTemplateSelector ItemContainerTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ItemContainerTemplateSelector ItemContainerTemplateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.ItemContainerTemplateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemContainerTemplateSelector As ItemContainerTemplateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ItemContainerTemplateSelector ^ ItemContainerTemplateSelector { System::Windows::Controls::ItemContainerTemplateSelector ^ get(); void set(System::Windows::Controls::ItemContainerTemplateSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemContainerTemplateSelector : System.Windows.Controls.ItemContainerTemplateSelector with get, set" Usage="System.Windows.Controls.MenuItem.ItemContainerTemplateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ItemContainerTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-284">Pobiera lub ustawia logikę niestandardową dotyczące wybierania szablonu, używany do wyświetlania każdego elementu.</span><span class="sxs-lookup"><span data-stu-id="3e44c-284">Gets or sets the custom logic for choosing a template used to display each item.</span></span></summary>
        <value><span data-ttu-id="3e44c-285">Niestandardowy obiekt, który zawiera logikę i zwraca kontenera elementu.</span><span class="sxs-lookup"><span data-stu-id="3e44c-285">A custom object that provides logic and returns an item container.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e44c-286">Użyj <xref:System.Windows.Controls.ItemContainerTemplateSelector> wybrać kontenery innego elementu, jeśli elementy w kolekcji są tego samego typu i musisz zapewnić logikę niestandardową, aby wybrać kontener elementów.</span><span class="sxs-lookup"><span data-stu-id="3e44c-286">Use an <xref:System.Windows.Controls.ItemContainerTemplateSelector> to choose different item containers if the items in your collection are the same type and you need to provide custom logic to choose the item container.</span></span>  
  
<a name="dependencyPropertyInfo_ItemContainerTemplateSelector"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3e44c-287">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="3e44c-287">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3e44c-288">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="3e44c-288">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.ItemContainerTemplateSelectorProperty>|  
|<span data-ttu-id="3e44c-289">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="3e44c-289">Metadata properties set to `true`</span></span>|<span data-ttu-id="3e44c-290">Brak</span><span class="sxs-lookup"><span data-stu-id="3e44c-290">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerTemplateSelectorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemContainerTemplateSelectorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemContainerTemplateSelectorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.ItemContainerTemplateSelectorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ItemContainerTemplateSelectorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ItemContainerTemplateSelectorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ItemContainerTemplateSelectorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MenuItem.ItemContainerTemplateSelectorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-291">Identyfikuje <see cref="P:System.Windows.Controls.MenuItem.ItemContainerTemplateSelector" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="3e44c-291">Identifies the <see cref="P:System.Windows.Controls.MenuItem.ItemContainerTemplateSelector" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAccessKey">
      <MemberSignature Language="C#" Value="protected override void OnAccessKey (System.Windows.Input.AccessKeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAccessKey(class System.Windows.Input.AccessKeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnAccessKey (e As AccessKeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnAccessKey(System::Windows::Input::AccessKeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnAccessKey : System.Windows.Input.AccessKeyEventArgs -&gt; unit" Usage="menuItem.OnAccessKey e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.AccessKeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3e44c-292">Dane zdarzeń dla <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="3e44c-292">The event data for the <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> event.</span></span></param>
        <summary><span data-ttu-id="3e44c-293">Odpowiada gdy <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> dla tej kontrolki jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="3e44c-293">Responds when the <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> for this control is invoked.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberSignature Language="F#" Value="override this.OnApplyTemplate : unit -&gt; unit" Usage="menuItem.OnApplyTemplate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3e44c-294">Wywołuje się, gdy drzewo szablonu jest generowany.</span><span class="sxs-lookup"><span data-stu-id="3e44c-294">Called when the template's tree is generated.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChecked">
      <MemberSignature Language="C#" Value="protected virtual void OnChecked (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChecked(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnChecked(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnChecked (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnChecked(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnChecked : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnChecked : System.Windows.RoutedEventArgs -&gt; unit" Usage="menuItem.OnChecked e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3e44c-295">Dane zdarzeń dla <see cref="E:System.Windows.Controls.MenuItem.Checked" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="3e44c-295">The event data for the <see cref="E:System.Windows.Controls.MenuItem.Checked" /> event.</span></span></param>
        <summary><span data-ttu-id="3e44c-296">Wywoływane, gdy <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> staje się właściwość <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-296">Called when the <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> property becomes <see langword="true" />.</span></span> <span data-ttu-id="3e44c-297">Ta metoda wywołuje <see cref="E:System.Windows.Controls.MenuItem.Checked" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="3e44c-297">This method raises the <see cref="E:System.Windows.Controls.MenuItem.Checked" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e44c-298">Kontrolka wywołuje <xref:System.Windows.Controls.MenuItem.Checked> zdarzeń przez wywołanie metody <xref:System.Windows.UIElement.RaiseEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3e44c-298">The control raises the <xref:System.Windows.Controls.MenuItem.Checked> event by calling <xref:System.Windows.UIElement.RaiseEvent%2A>.</span></span> <span data-ttu-id="3e44c-299">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń kierowane](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3e44c-299">For more information, see [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="3e44c-300">Podczas zastępowania <see cref="M:System.Windows.Controls.MenuItem.OnChecked(System.Windows.RoutedEventArgs)" /> w klasie pochodnej, upewnij się wywołać klasy bazowej <see cref="M:System.Windows.Controls.MenuItem.OnChecked(System.Windows.RoutedEventArgs)" /> metody, która zarejestrowana delegaci otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="3e44c-300">When overriding <see cref="M:System.Windows.Controls.MenuItem.OnChecked(System.Windows.RoutedEventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.Controls.MenuItem.OnChecked(System.Windows.RoutedEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnClick" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick();" />
      <MemberSignature Language="F#" Value="abstract member OnClick : unit -&gt; unit&#xA;override this.OnClick : unit -&gt; unit" Usage="menuItem.OnClick " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3e44c-301">Wywoływane, gdy <see cref="T:System.Windows.Controls.MenuItem" /> kliknięciu i zgłasza <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="3e44c-301">Called when a <see cref="T:System.Windows.Controls.MenuItem" /> is clicked and raises a <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e44c-302">Jeśli dziedziczą z <xref:System.Windows.Controls.MenuItem>, pamiętaj wywołać klasy bazowej, aby uzyskać następujące zachowanie.</span><span class="sxs-lookup"><span data-stu-id="3e44c-302">If you inherit from <xref:System.Windows.Controls.MenuItem>, be sure to call the base class to get the following behavior.</span></span>  
  
-   <span data-ttu-id="3e44c-303">Przełączanie z <xref:System.Windows.Controls.MenuItem.IsChecked%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="3e44c-303">Toggling of the <xref:System.Windows.Controls.MenuItem.IsChecked%2A> property.</span></span>  
  
-   <span data-ttu-id="3e44c-304">Skup się element menu zostanie ustawiona.</span><span class="sxs-lookup"><span data-stu-id="3e44c-304">Focus being set to the menu item.</span></span>  
  
-   <span data-ttu-id="3e44c-305">Automatyzacja wywołać zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="3e44c-305">Automation invoke event.</span></span>  
  
-   <span data-ttu-id="3e44c-306"><xref:System.Windows.Controls.MenuItem.Click> zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="3e44c-306"><xref:System.Windows.Controls.MenuItem.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="menuItem.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3e44c-307">Zapewnia odpowiednią <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> implementacji dla tej kontrolki, jako część [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] automatyzacji infrastruktury.</span><span class="sxs-lookup"><span data-stu-id="3e44c-307">Provides an appropriate <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> implementation for this control, as part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] automation infrastructure.</span></span></summary>
        <returns><span data-ttu-id="3e44c-308">A <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> tego <see cref="T:System.Windows.Controls.MenuItem" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-308">A <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> for this <see cref="T:System.Windows.Controls.MenuItem" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="menuItem.OnGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3e44c-309">Dane zdarzeń dla <see cref="E:System.Windows.UIElement.GotFocus" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="3e44c-309">The event data for the <see cref="E:System.Windows.UIElement.GotFocus" /> event.</span></span></param>
        <summary><span data-ttu-id="3e44c-310">Informuje, że klawiatura ma fokus w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="3e44c-310">Announces that the keyboard is focused on this element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInitialized">
      <MemberSignature Language="C#" Value="protected override void OnInitialized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInitialized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnInitialized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInitialized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInitialized(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInitialized : EventArgs -&gt; unit" Usage="menuItem.OnInitialized e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3e44c-311">Dane zdarzeń dla <see cref="E:System.Windows.FrameworkElement.Initialized" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="3e44c-311">The event data for the <see cref="E:System.Windows.FrameworkElement.Initialized" /> event.</span></span></param>
        <summary><span data-ttu-id="3e44c-312">Wywoływane, gdy <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> właściwość jest ustawiona na <see langword="true" /> i zgłasza <see cref="E:System.Windows.FrameworkElement.Initialized" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="3e44c-312">Called when the <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> property is set to <see langword="true" /> and raises an <see cref="E:System.Windows.FrameworkElement.Initialized" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="menuItem.OnIsKeyboardFocusWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3e44c-313">Dane zdarzeń dla <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="3e44c-313">The event data for the <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> event.</span></span></param>
        <summary><span data-ttu-id="3e44c-314">Wywołuje się, gdy fokus nie jest już dla lub w obrębie <see cref="T:System.Windows.Controls.MenuItem" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-314">Called when the focus is no longer on or within a <see cref="T:System.Windows.Controls.MenuItem" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemsChanged">
      <MemberSignature Language="C#" Value="protected override void OnItemsChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnItemsChanged(class System.Collections.Specialized.NotifyCollectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnItemsChanged (e As NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnItemsChanged(System::Collections::Specialized::NotifyCollectionChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnItemsChanged : System.Collections.Specialized.NotifyCollectionChangedEventArgs -&gt; unit" Usage="menuItem.OnItemsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3e44c-315">Dane zdarzeń dla <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="3e44c-315">The event data for the <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> event.</span></span></param>
        <summary><span data-ttu-id="3e44c-316">Wywoływane, gdy <see cref="P:System.Windows.Controls.ItemsControl.Items" /> zmiany właściwości.</span><span class="sxs-lookup"><span data-stu-id="3e44c-316">Called when the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> property changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="menuItem.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3e44c-317">Dane zdarzeń dla <see cref="E:System.Windows.UIElement.KeyDown" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="3e44c-317">The event data for the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</span></span></param>
        <summary><span data-ttu-id="3e44c-318">Odpowiada <see cref="E:System.Windows.UIElement.KeyDown" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="3e44c-318">Responds to the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected override void OnMouseEnter (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseEnter(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseEnter(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseEnter : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="menuItem.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3e44c-319">Dane zdarzeń dla <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="3e44c-319">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> event.</span></span></param>
        <summary><span data-ttu-id="3e44c-320">Wywoływana zawsze, gdy wskaźnik myszy zostanie przesunięty <see cref="T:System.Windows.Controls.MenuItem" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-320">Called whenever the mouse enters a <see cref="T:System.Windows.Controls.MenuItem" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeave : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="menuItem.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3e44c-321">Dane zdarzeń dla <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="3e44c-321">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> event.</span></span></param>
        <summary><span data-ttu-id="3e44c-322">Wywoływana zawsze, gdy wskaźnik myszy pozostawia <see cref="T:System.Windows.Controls.MenuItem" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-322">Called whenever the mouse leaves a <see cref="T:System.Windows.Controls.MenuItem" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="menuItem.OnMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3e44c-323">Dane zdarzeń dla <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="3e44c-323">The event data for the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> event.</span></span></param>
        <summary><span data-ttu-id="3e44c-324">Wywoływane po naciśnięciu lewego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="3e44c-324">Called when the left mouse button is pressed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="menuItem.OnMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3e44c-325">Dane zdarzeń dla <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="3e44c-325">The event data for the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> event.</span></span></param>
        <summary><span data-ttu-id="3e44c-326">Wywołuje się po zwolnieniu lewego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="3e44c-326">Called when the left mouse button is released.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="menuItem.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3e44c-327">Dane zdarzeń dla <see cref="E:System.Windows.Input.Mouse.MouseMove" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="3e44c-327">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseMove" /> event.</span></span></param>
        <summary><span data-ttu-id="3e44c-328">Wywołuje się, gdy wskaźnik myszy jest przesuwany nad element menu.</span><span class="sxs-lookup"><span data-stu-id="3e44c-328">Called when the mouse is moved over a menu item.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="menuItem.OnMouseRightButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3e44c-329">Dane zdarzeń dla <see cref="E:System.Windows.UIElement.MouseRightButtonDown" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="3e44c-329">The event data for the <see cref="E:System.Windows.UIElement.MouseRightButtonDown" /> event.</span></span></param>
        <summary><span data-ttu-id="3e44c-330">Wywoływane po naciśnięciu prawego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="3e44c-330">Called when the right mouse button is pressed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="menuItem.OnMouseRightButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3e44c-331">Dane zdarzeń dla <see cref="E:System.Windows.UIElement.MouseRightButtonUp" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="3e44c-331">The event data for the <see cref="E:System.Windows.UIElement.MouseRightButtonUp" /> event.</span></span></param>
        <summary><span data-ttu-id="3e44c-332">Wywołuje się po zwolnieniu prawego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="3e44c-332">Called when the right mouse button is released.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSubmenuClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnSubmenuClosed (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSubmenuClosed(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnSubmenuClosed(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSubmenuClosed (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSubmenuClosed(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSubmenuClosed : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnSubmenuClosed : System.Windows.RoutedEventArgs -&gt; unit" Usage="menuItem.OnSubmenuClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3e44c-333">Dane zdarzeń dla <see cref="E:System.Windows.Controls.MenuItem.SubmenuClosed" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="3e44c-333">The event data for the <see cref="E:System.Windows.Controls.MenuItem.SubmenuClosed" /> event.</span></span></param>
        <summary><span data-ttu-id="3e44c-334">Wywoływane, gdy z podmenu <see cref="T:System.Windows.Controls.MenuItem" /> jest zamknięty.</span><span class="sxs-lookup"><span data-stu-id="3e44c-334">Called when the submenu of a <see cref="T:System.Windows.Controls.MenuItem" /> is closed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3e44c-335">W tym przykładzie pokazano, jak używać <xref:System.Windows.Controls.MenuItem.OnSubmenuClosed%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="3e44c-335">This example shows how to use the <xref:System.Windows.Controls.MenuItem.OnSubmenuClosed%2A> method.</span></span>  
  
 [!code-csharp[MenuItems_snip#SubmenuEventClosed2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml.cs#submenueventclosed2)]
 [!code-vb[MenuItems_snip#SubmenuEventClosed2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItems_snip/visualbasic/pane1.xaml.vb#submenueventclosed2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSubmenuOpened">
      <MemberSignature Language="C#" Value="protected virtual void OnSubmenuOpened (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSubmenuOpened(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnSubmenuOpened(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSubmenuOpened (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSubmenuOpened(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSubmenuOpened : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnSubmenuOpened : System.Windows.RoutedEventArgs -&gt; unit" Usage="menuItem.OnSubmenuOpened e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3e44c-336">Dane zdarzeń dla <see cref="E:System.Windows.Controls.MenuItem.SubmenuOpened" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="3e44c-336">The event data for the <see cref="E:System.Windows.Controls.MenuItem.SubmenuOpened" /> event.</span></span></param>
        <summary><span data-ttu-id="3e44c-337">Wywoływane, gdy z podmenu <see cref="T:System.Windows.Controls.MenuItem" /> jest otwarty.</span><span class="sxs-lookup"><span data-stu-id="3e44c-337">Called when the submenu of a <see cref="T:System.Windows.Controls.MenuItem" /> is opened.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3e44c-338">W tym przykładzie pokazano, jak używać <xref:System.Windows.Controls.MenuItem.OnSubmenuOpened%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="3e44c-338">This example shows how to use the <xref:System.Windows.Controls.MenuItem.OnSubmenuOpened%2A> method.</span></span>  
  
 [!code-csharp[MenuItems_snip#SubmenuEventOpened2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml.cs#submenueventopened2)]
 [!code-vb[MenuItems_snip#SubmenuEventOpened2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItems_snip/visualbasic/pane1.xaml.vb#submenueventopened2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnchecked">
      <MemberSignature Language="C#" Value="protected virtual void OnUnchecked (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUnchecked(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnUnchecked(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUnchecked (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUnchecked(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUnchecked : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnUnchecked : System.Windows.RoutedEventArgs -&gt; unit" Usage="menuItem.OnUnchecked e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3e44c-339">Dane zdarzeń dla <see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="3e44c-339">The event data for the <see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> event.</span></span></param>
        <summary><span data-ttu-id="3e44c-340">Wywoływane, gdy <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> staje się właściwość <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-340">Called when the <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> property becomes <see langword="false" />.</span></span> <span data-ttu-id="3e44c-341">Ta metoda wywołuje <see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="3e44c-341">This method raises the <see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e44c-342">Kontrolka wywołuje <xref:System.Windows.Controls.MenuItem.Unchecked> zdarzeń przez wywołanie metody <xref:System.Windows.UIElement.RaiseEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3e44c-342">The control raises the <xref:System.Windows.Controls.MenuItem.Unchecked> event by calling <xref:System.Windows.UIElement.RaiseEvent%2A>.</span></span> <span data-ttu-id="3e44c-343">Aby uzyskać więcej informacji, zobacz [Przegląd zdarzeń kierowane](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3e44c-343">For more information, see [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="3e44c-344">Podczas zastępowania <see cref="M:System.Windows.Controls.MenuItem.OnUnchecked(System.Windows.RoutedEventArgs)" /> w klasie pochodnej, upewnij się wywołać klasy bazowej <see cref="M:System.Windows.Controls.MenuItem.OnUnchecked(System.Windows.RoutedEventArgs)" /> metody, która zarejestrowana delegaci otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="3e44c-344">When overriding <see cref="M:System.Windows.Controls.MenuItem.OnUnchecked(System.Windows.RoutedEventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.Controls.MenuItem.OnUnchecked(System.Windows.RoutedEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberSignature Language="F#" Value="override this.OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit" Usage="menuItem.OnVisualParentChanged oldParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent"><span data-ttu-id="3e44c-345">Stara wartość elementu nadrzędnego wizualizacji, lub wartość null, jeśli wizualizacja nie miał elementu nadrzędnego.</span><span class="sxs-lookup"><span data-stu-id="3e44c-345">Old value of the parent of the visual, or null if the visual did not have a parent.</span></span></param>
        <summary><span data-ttu-id="3e44c-346">Wywoływane, gdy element nadrzędny element wizualny <see cref="T:System.Windows.Controls.MenuItem" /> zmiany.</span><span class="sxs-lookup"><span data-stu-id="3e44c-346">Called when the parent of the visual <see cref="T:System.Windows.Controls.MenuItem" /> changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.PrepareContainerForItemOverride : System.Windows.DependencyObject * obj -&gt; unit" Usage="menuItem.PrepareContainerForItemOverride (element, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3e44c-347">Element służący do wyświetlania określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="3e44c-347">Element used to display the specified item.</span></span></param>
        <param name="item"><span data-ttu-id="3e44c-348">Określony element.</span><span class="sxs-lookup"><span data-stu-id="3e44c-348">Specified item.</span></span></param>
        <summary><span data-ttu-id="3e44c-349">Przygotowuje określony element, aby wyświetlić określony element.</span><span class="sxs-lookup"><span data-stu-id="3e44c-349">Prepares the specified element to display the specified item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e44c-350">Trwa przygotowywanie elementu może obejmować stosowanie stylów, ustawienia powiązania i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="3e44c-350">Preparing the element may involve applying styles, setting bindings, and so on.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Role">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.MenuItemRole Role { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.MenuItemRole Role" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.Role" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Role As MenuItemRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::MenuItemRole Role { System::Windows::Controls::MenuItemRole get(); };" />
      <MemberSignature Language="F#" Value="member this.Role : System.Windows.Controls.MenuItemRole" Usage="System.Windows.Controls.MenuItem.Role" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.MenuItemRole</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-351">Pobiera wartość wskazującą, rola <see cref="T:System.Windows.Controls.MenuItem" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-351">Gets a value that indicates the role of a <see cref="T:System.Windows.Controls.MenuItem" />.</span></span></summary>
        <value><span data-ttu-id="3e44c-352">Jedną z <see cref="T:System.Windows.Controls.MenuItemRole" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="3e44c-352">One of the <see cref="T:System.Windows.Controls.MenuItemRole" /> values.</span></span> <span data-ttu-id="3e44c-353">Wartość domyślna to <see cref="F:System.Windows.Controls.MenuItemRole.TopLevelItem" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-353">The default is <see cref="F:System.Windows.Controls.MenuItemRole.TopLevelItem" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e44c-354">Wartość <xref:System.Windows.Controls.MenuItem.Role%2A> zależy od relacji z elementem <xref:System.Windows.Controls.Menu> i innych <xref:System.Windows.Controls.MenuItem> obiektów.</span><span class="sxs-lookup"><span data-stu-id="3e44c-354">The value of <xref:System.Windows.Controls.MenuItem.Role%2A> depends on the relationship to the <xref:System.Windows.Controls.Menu> and other <xref:System.Windows.Controls.MenuItem> objects.</span></span>  
  
<a name="dependencyPropertyInfo_Role"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3e44c-355">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="3e44c-355">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3e44c-356">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="3e44c-356">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.RoleProperty>|  
|<span data-ttu-id="3e44c-357">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="3e44c-357">Metadata properties set to `true`</span></span>|<span data-ttu-id="3e44c-358">Brak</span><span class="sxs-lookup"><span data-stu-id="3e44c-358">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RoleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RoleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.RoleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RoleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RoleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RoleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MenuItem.RoleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-359">Identyfikuje <see cref="P:System.Windows.Controls.MenuItem.Role" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="3e44c-359">Identifies the <see cref="P:System.Windows.Controls.MenuItem.Role" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeparatorStyleKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey SeparatorStyleKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey SeparatorStyleKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.SeparatorStyleKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SeparatorStyleKey As ResourceKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::ResourceKey ^ SeparatorStyleKey { System::Windows::ResourceKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SeparatorStyleKey : System.Windows.ResourceKey" Usage="System.Windows.Controls.MenuItem.SeparatorStyleKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-360">Pobiera klucz zasobu styl stosowany do <see cref="T:System.Windows.Controls.MenuItem" /> podczas <see cref="T:System.Windows.Controls.MenuItem" /> jest <see cref="T:System.Windows.Controls.Separator" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-360">Gets the resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a <see cref="T:System.Windows.Controls.Separator" />.</span></span></summary>
        <value><span data-ttu-id="3e44c-361">Klucz zasobu styl stosowany do <see cref="T:System.Windows.Controls.MenuItem" /> podczas <see cref="T:System.Windows.Controls.MenuItem" /> jest <see cref="T:System.Windows.Controls.Separator" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-361">The resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a <see cref="T:System.Windows.Controls.Separator" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e44c-362">Ta właściwość umożliwia zmianę stylu <xref:System.Windows.Controls.Separator> w menu.</span><span class="sxs-lookup"><span data-stu-id="3e44c-362">Use this property to change the style of a <xref:System.Windows.Controls.Separator> in a menu.</span></span>  
  
<a name="xamlAttributeUsage_SeparatorStyleKey"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="3e44c-363">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="3e44c-363">XAML Attribute Usage</span></span>  
 <span data-ttu-id="3e44c-364"><*obiekt* *właściwość*= { **MenuItem.SeparatorStyleKey**}`"`/></span><span class="sxs-lookup"><span data-stu-id="3e44c-364"><*object* *property*={ **MenuItem.SeparatorStyleKey**}`"`/></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e44c-365">Poniższy przykład pokazuje, jak używać tej właściwości stylu <xref:System.Windows.Controls.Separator> w <xref:System.Windows.Controls.Menu>.</span><span class="sxs-lookup"><span data-stu-id="3e44c-365">The following example shows how to use this property to style a <xref:System.Windows.Controls.Separator> in a <xref:System.Windows.Controls.Menu>.</span></span>  
  
 [!code-xaml[MenuStylesSnippet#4](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuStylesSnippet/CS/app.xaml#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms749214(v=vs.90)"><span data-ttu-id="3e44c-366">Styl separatora, używana jako elementu Menu.</span><span class="sxs-lookup"><span data-stu-id="3e44c-366">Style a Separator Used as a Menu Item</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ShouldApplyItemContainerStyle">
      <MemberSignature Language="C#" Value="protected override bool ShouldApplyItemContainerStyle (System.Windows.DependencyObject container, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ShouldApplyItemContainerStyle(class System.Windows.DependencyObject container, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.ShouldApplyItemContainerStyle(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ShouldApplyItemContainerStyle (container As DependencyObject, item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ShouldApplyItemContainerStyle(System::Windows::DependencyObject ^ container, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.ShouldApplyItemContainerStyle : System.Windows.DependencyObject * obj -&gt; bool" Usage="menuItem.ShouldApplyItemContainerStyle (container, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="container"><span data-ttu-id="3e44c-367">Kontener, do którego zostanie zastosowany styl.</span><span class="sxs-lookup"><span data-stu-id="3e44c-367">Container to which the style will be applied.</span></span></param>
        <param name="item"><span data-ttu-id="3e44c-368">Element, do którego należy kontener.</span><span class="sxs-lookup"><span data-stu-id="3e44c-368">Item to which the container belongs.</span></span></param>
        <summary><span data-ttu-id="3e44c-369">Używane do ustalenia, czy należy zastosować styl do kontenera elementu.</span><span class="sxs-lookup"><span data-stu-id="3e44c-369">Used to determine whether to apply a style to the item container.</span></span></summary>
        <returns><span data-ttu-id="3e44c-370"><see langword="true" /> Jeśli <see cref="T:System.Windows.Controls.MenuItem" /> nie <see cref="T:System.Windows.Controls.Separator" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-370"><see langword="true" /> if the <see cref="T:System.Windows.Controls.MenuItem" /> is not a <see cref="T:System.Windows.Controls.Separator" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StaysOpenOnClick">
      <MemberSignature Language="C#" Value="public bool StaysOpenOnClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StaysOpenOnClick" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.StaysOpenOnClick" />
      <MemberSignature Language="VB.NET" Value="Public Property StaysOpenOnClick As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StaysOpenOnClick { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StaysOpenOnClick : bool with get, set" Usage="System.Windows.Controls.MenuItem.StaysOpenOnClick" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-371">Pobiera lub ustawia wartość określającą, czy podmenu, w której ta <see cref="T:System.Windows.Controls.MenuItem" /> znajduje się nie powinna zamykać po kliknięciu tego elementu.</span><span class="sxs-lookup"><span data-stu-id="3e44c-371">Gets or sets a value that indicates that the submenu in which this <see cref="T:System.Windows.Controls.MenuItem" /> is located should not close when this item is clicked.</span></span></summary>
        <value><span data-ttu-id="3e44c-372"><see langword="true" /> Jeśli podmenu, w której ta <see cref="T:System.Windows.Controls.MenuItem" /> znajduje się nie powinna zamykać, gdy ten element jest kliknięto; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-372"><see langword="true" /> if the submenu in which this <see cref="T:System.Windows.Controls.MenuItem" /> is located should not close when this item is clicked; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3e44c-373">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-373">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_StaysOpenOnClick"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3e44c-374">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="3e44c-374">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3e44c-375">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="3e44c-375">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.StaysOpenOnClickProperty>|  
|<span data-ttu-id="3e44c-376">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="3e44c-376">Metadata properties set to `true`</span></span>|<span data-ttu-id="3e44c-377">Brak</span><span class="sxs-lookup"><span data-stu-id="3e44c-377">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3e44c-378">W poniższym przykładzie użyto <xref:System.Windows.Controls.MenuItem.StaysOpenOnClick%2A> właściwość, aby utworzyć element w podmenu, który nie zamyka się po kliknięciu elementu.</span><span class="sxs-lookup"><span data-stu-id="3e44c-378">The following example uses the <xref:System.Windows.Controls.MenuItem.StaysOpenOnClick%2A> property to create an item in a submenu that does not close when the item is clicked.</span></span>  
  
 [!code-xaml[MenuItems_snip#SubmenuStaysOpen](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml#submenustaysopen)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaysOpenOnClickProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StaysOpenOnClickProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StaysOpenOnClickProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.StaysOpenOnClickProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StaysOpenOnClickProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StaysOpenOnClickProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable StaysOpenOnClickProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MenuItem.StaysOpenOnClickProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-379">Identyfikuje <see cref="P:System.Windows.Controls.MenuItem.StaysOpenOnClick" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="3e44c-379">Identifies the <see cref="P:System.Windows.Controls.MenuItem.StaysOpenOnClick" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmenuClosed">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler SubmenuClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler SubmenuClosed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.MenuItem.SubmenuClosed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SubmenuClosed As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ SubmenuClosed;" />
      <MemberSignature Language="F#" Value="member this.SubmenuClosed : System.Windows.RoutedEventHandler " Usage="member this.SubmenuClosed : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-380">Występuje, gdy stan <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> zmiany właściwości <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-380">Occurs when the state of the <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> property changes to <see langword="false" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_SubmenuClosed"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3e44c-381">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="3e44c-381">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3e44c-382">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="3e44c-382">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.SubmenuClosedEvent>|  
|<span data-ttu-id="3e44c-383">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="3e44c-383">Routing strategy</span></span>|<span data-ttu-id="3e44c-384">Propagacja</span><span class="sxs-lookup"><span data-stu-id="3e44c-384">Bubbling</span></span>|  
|<span data-ttu-id="3e44c-385">Delegate</span><span class="sxs-lookup"><span data-stu-id="3e44c-385">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3e44c-386">W poniższych przykładach pokazano obsługi i wywoływania <xref:System.Windows.Controls.MenuItem.SubmenuClosed> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="3e44c-386">The following examples demonstrate calling and handling the <xref:System.Windows.Controls.MenuItem.SubmenuClosed> event.</span></span>  
  
 [!code-xaml[MenuItems_snip#SubmenuEvents1](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml#submenuevents1)]  
  
 [!code-csharp[MenuItems_snip#SubmenuEventClosed2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml.cs#submenueventclosed2)]
 [!code-vb[MenuItems_snip#SubmenuEventClosed2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItems_snip/visualbasic/pane1.xaml.vb#submenueventclosed2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmenuClosedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SubmenuClosedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SubmenuClosedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.SubmenuClosedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SubmenuClosedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SubmenuClosedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable SubmenuClosedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.MenuItem.SubmenuClosedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-387">Identyfikuje <see cref="E:System.Windows.Controls.MenuItem.SubmenuClosed" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="3e44c-387">Identifies the <see cref="E:System.Windows.Controls.MenuItem.SubmenuClosed" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmenuHeaderTemplateKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey SubmenuHeaderTemplateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey SubmenuHeaderTemplateKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.SubmenuHeaderTemplateKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SubmenuHeaderTemplateKey As ResourceKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::ResourceKey ^ SubmenuHeaderTemplateKey { System::Windows::ResourceKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SubmenuHeaderTemplateKey : System.Windows.ResourceKey" Usage="System.Windows.Controls.MenuItem.SubmenuHeaderTemplateKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-388">Pobiera klucz zasobu styl stosowany do <see cref="T:System.Windows.Controls.MenuItem" /> podczas <see cref="T:System.Windows.Controls.MenuItem" /> nagłówek podmenu.</span><span class="sxs-lookup"><span data-stu-id="3e44c-388">Gets the resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a header of a submenu.</span></span></summary>
        <value><span data-ttu-id="3e44c-389">Klucz zasobu styl stosowany do <see cref="T:System.Windows.Controls.MenuItem" /> podczas <see cref="T:System.Windows.Controls.MenuItem" /> nagłówek podmenu.</span><span class="sxs-lookup"><span data-stu-id="3e44c-389">The resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a header of a submenu.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e44c-390">Ta właściwość umożliwia zmianę stylu <xref:System.Windows.Controls.MenuItem> którego <xref:System.Windows.Controls.MenuItem.Role%2A> właściwość jest ustawiona na <xref:System.Windows.Controls.MenuItemRole.SubmenuHeader?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3e44c-390">Use this property to change the style of a <xref:System.Windows.Controls.MenuItem> whose <xref:System.Windows.Controls.MenuItem.Role%2A> property is set to <xref:System.Windows.Controls.MenuItemRole.SubmenuHeader?displayProperty=nameWithType>.</span></span>  
  
<a name="xamlAttributeUsage_SubmenuHeaderTemplateKey"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="3e44c-391">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="3e44c-391">XAML Attribute Usage</span></span>  
 <span data-ttu-id="3e44c-392"><*object* *property*={ **MenuItem.SubmenuHeaderTemplateKey**}`"`/></span><span class="sxs-lookup"><span data-stu-id="3e44c-392"><*object* *property*={ **MenuItem.SubmenuHeaderTemplateKey**}`"`/></span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmenuItemTemplateKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey SubmenuItemTemplateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey SubmenuItemTemplateKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.SubmenuItemTemplateKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SubmenuItemTemplateKey As ResourceKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::ResourceKey ^ SubmenuItemTemplateKey { System::Windows::ResourceKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SubmenuItemTemplateKey : System.Windows.ResourceKey" Usage="System.Windows.Controls.MenuItem.SubmenuItemTemplateKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-393">Pobiera klucz zasobu styl stosowany do <see cref="T:System.Windows.Controls.MenuItem" /> podczas <see cref="T:System.Windows.Controls.MenuItem" /> jest podmenu.</span><span class="sxs-lookup"><span data-stu-id="3e44c-393">Gets the resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a submenu.</span></span></summary>
        <value><span data-ttu-id="3e44c-394">Klucz zasobu styl stosowany do <see cref="T:System.Windows.Controls.MenuItem" /> podczas <see cref="T:System.Windows.Controls.MenuItem" /> jest podmenu.</span><span class="sxs-lookup"><span data-stu-id="3e44c-394">The resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a submenu.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e44c-395">Ta właściwość umożliwia zmianę stylu <xref:System.Windows.Controls.MenuItem> którego <xref:System.Windows.Controls.MenuItem.Role%2A> właściwość jest ustawiona na <xref:System.Windows.Controls.MenuItemRole.SubmenuItem?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3e44c-395">Use this property to change the style of a <xref:System.Windows.Controls.MenuItem> whose <xref:System.Windows.Controls.MenuItem.Role%2A> property is set to <xref:System.Windows.Controls.MenuItemRole.SubmenuItem?displayProperty=nameWithType>.</span></span>  
  
<a name="xamlAttributeUsage_SubmenuItemTemplateKey"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="3e44c-396">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="3e44c-396">XAML Attribute Usage</span></span>  
 <span data-ttu-id="3e44c-397"><*object* *property*={ **MenuItem.SubmenuItemTemplateKey**}`"`/></span><span class="sxs-lookup"><span data-stu-id="3e44c-397"><*object* *property*={ **MenuItem.SubmenuItemTemplateKey**}`"`/></span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmenuOpened">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler SubmenuOpened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler SubmenuOpened" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.MenuItem.SubmenuOpened" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SubmenuOpened As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ SubmenuOpened;" />
      <MemberSignature Language="F#" Value="member this.SubmenuOpened : System.Windows.RoutedEventHandler " Usage="member this.SubmenuOpened : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-398">Występuje, gdy stan <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> zmiany właściwości <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-398">Occurs when the state of the <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> property changes to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_SubmenuOpened"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3e44c-399">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="3e44c-399">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3e44c-400">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="3e44c-400">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.SubmenuOpenedEvent>|  
|<span data-ttu-id="3e44c-401">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="3e44c-401">Routing strategy</span></span>|<span data-ttu-id="3e44c-402">Propagacja</span><span class="sxs-lookup"><span data-stu-id="3e44c-402">Bubbling</span></span>|  
|<span data-ttu-id="3e44c-403">Delegate</span><span class="sxs-lookup"><span data-stu-id="3e44c-403">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3e44c-404">W poniższych przykładach pokazano obsługi i wywoływania <xref:System.Windows.Controls.MenuItem.SubmenuOpened> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="3e44c-404">The following examples demonstrate calling and handling the <xref:System.Windows.Controls.MenuItem.SubmenuOpened> event.</span></span>  
  
 [!code-xaml[MenuItems_snip#SubmenuEvents1](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml#submenuevents1)]  
  
 [!code-csharp[MenuItems_snip#SubmenuEventOpened2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml.cs#submenueventopened2)]
 [!code-vb[MenuItems_snip#SubmenuEventOpened2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItems_snip/visualbasic/pane1.xaml.vb#submenueventopened2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmenuOpenedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SubmenuOpenedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SubmenuOpenedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.SubmenuOpenedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SubmenuOpenedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SubmenuOpenedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable SubmenuOpenedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.MenuItem.SubmenuOpenedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-405">Identyfikuje <see cref="E:System.Windows.Controls.MenuItem.SubmenuOpened" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="3e44c-405">Identifies the <see cref="E:System.Windows.Controls.MenuItem.SubmenuOpened" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TopLevelHeaderTemplateKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey TopLevelHeaderTemplateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey TopLevelHeaderTemplateKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.TopLevelHeaderTemplateKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TopLevelHeaderTemplateKey As ResourceKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::ResourceKey ^ TopLevelHeaderTemplateKey { System::Windows::ResourceKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TopLevelHeaderTemplateKey : System.Windows.ResourceKey" Usage="System.Windows.Controls.MenuItem.TopLevelHeaderTemplateKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-406">Pobiera klucz zasobu styl stosowany do <see cref="T:System.Windows.Controls.MenuItem" /> podczas <see cref="T:System.Windows.Controls.MenuItem" /> nagłówek menu najwyższego poziomu.</span><span class="sxs-lookup"><span data-stu-id="3e44c-406">Gets the resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a header of a top-level menu.</span></span></summary>
        <value><span data-ttu-id="3e44c-407">Klucz zasobu styl stosowany do <see cref="T:System.Windows.Controls.MenuItem" /> podczas <see cref="T:System.Windows.Controls.MenuItem" /> nagłówek menu najwyższego poziomu.</span><span class="sxs-lookup"><span data-stu-id="3e44c-407">The resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a header of a top-level menu.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e44c-408">Ta właściwość umożliwia zmianę stylu <xref:System.Windows.Controls.MenuItem> którego <xref:System.Windows.Controls.MenuItem.Role%2A> właściwość jest ustawiona na <xref:System.Windows.Controls.MenuItemRole.TopLevelHeader?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3e44c-408">Use this property to change the style of a <xref:System.Windows.Controls.MenuItem> whose <xref:System.Windows.Controls.MenuItem.Role%2A> property is set to <xref:System.Windows.Controls.MenuItemRole.TopLevelHeader?displayProperty=nameWithType>.</span></span>  
  
<a name="xamlAttributeUsage_TopLevelHeaderTemplateKey"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="3e44c-409">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="3e44c-409">XAML Attribute Usage</span></span>  
 <span data-ttu-id="3e44c-410"><*obiekt* *właściwość*= { **MenuItem.TopLevelHeaderTemplateKey**}`"`/></span><span class="sxs-lookup"><span data-stu-id="3e44c-410"><*object* *property*={ **MenuItem.TopLevelHeaderTemplateKey**}`"`/></span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TopLevelItemTemplateKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey TopLevelItemTemplateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey TopLevelItemTemplateKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.TopLevelItemTemplateKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TopLevelItemTemplateKey As ResourceKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::ResourceKey ^ TopLevelItemTemplateKey { System::Windows::ResourceKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TopLevelItemTemplateKey : System.Windows.ResourceKey" Usage="System.Windows.Controls.MenuItem.TopLevelItemTemplateKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-411">Pobiera klucz zasobu styl stosowany do <see cref="T:System.Windows.Controls.MenuItem" /> znajduje się w najwyższego poziomu <see cref="T:System.Windows.Controls.MenuItem" /> , można wywołać polecenia.</span><span class="sxs-lookup"><span data-stu-id="3e44c-411">Gets the resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when it is a top-level <see cref="T:System.Windows.Controls.MenuItem" /> that can invoke commands.</span></span></summary>
        <value><span data-ttu-id="3e44c-412">Klucz zasobu styl stosowany do <see cref="T:System.Windows.Controls.MenuItem" /> znajduje się w najwyższego poziomu <see cref="T:System.Windows.Controls.MenuItem" /> , można wywołać polecenia.</span><span class="sxs-lookup"><span data-stu-id="3e44c-412">The resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when it is a top-level <see cref="T:System.Windows.Controls.MenuItem" /> that can invoke commands.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e44c-413">Ta właściwość umożliwia zmianę stylu <xref:System.Windows.Controls.MenuItem> którego <xref:System.Windows.Controls.MenuItem.Role%2A> właściwość jest ustawiona na <xref:System.Windows.Controls.MenuItemRole.TopLevelItem?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3e44c-413">Use this property to change the style of a <xref:System.Windows.Controls.MenuItem> whose <xref:System.Windows.Controls.MenuItem.Role%2A> property is set to <xref:System.Windows.Controls.MenuItemRole.TopLevelItem?displayProperty=nameWithType>.</span></span>  
  
<a name="xamlAttributeUsage_TopLevelItemTemplateKey"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="3e44c-414">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="3e44c-414">XAML Attribute Usage</span></span>  
 <span data-ttu-id="3e44c-415"><*obiekt* *właściwość*= { **MenuItem.TopLevelItemTemplateKey**}`"`/></span><span class="sxs-lookup"><span data-stu-id="3e44c-415"><*object* *property*={ **MenuItem.TopLevelItemTemplateKey**}`"`/></span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unchecked">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Unchecked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Unchecked" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.MenuItem.Unchecked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Unchecked As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Unchecked;" />
      <MemberSignature Language="F#" Value="member this.Unchecked : System.Windows.RoutedEventHandler " Usage="member this.Unchecked : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-416">Występuje, gdy <see cref="T:System.Windows.Controls.MenuItem" /> nie jest zaznaczone.</span><span class="sxs-lookup"><span data-stu-id="3e44c-416">Occurs when a <see cref="T:System.Windows.Controls.MenuItem" /> is unchecked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_Unchecked"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3e44c-417">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="3e44c-417">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3e44c-418">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="3e44c-418">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.UncheckedEvent>|  
|<span data-ttu-id="3e44c-419">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="3e44c-419">Routing strategy</span></span>|<span data-ttu-id="3e44c-420">Propagacja</span><span class="sxs-lookup"><span data-stu-id="3e44c-420">Bubbling</span></span>|  
|<span data-ttu-id="3e44c-421">Delegate</span><span class="sxs-lookup"><span data-stu-id="3e44c-421">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3e44c-422">W poniższym przykładzie pokazano obsługi <xref:System.Windows.Controls.MenuItem.Unchecked> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="3e44c-422">The following example demonstrates handling the <xref:System.Windows.Controls.MenuItem.Unchecked> event.</span></span>  
  
 [!code-xaml[MenuItemCommandsAndEvents#3](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml#3)]  
  
 [!code-csharp[MenuItemCommandsAndEvents#4](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml.cs#4)]
 [!code-vb[MenuItemCommandsAndEvents#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItemCommandsAndEvents/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UncheckedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent UncheckedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent UncheckedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.UncheckedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UncheckedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ UncheckedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable UncheckedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.MenuItem.UncheckedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-423">Identyfikuje <see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="3e44c-423">Identifies the <see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesItemContainerTemplate">
      <MemberSignature Language="C#" Value="public bool UsesItemContainerTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesItemContainerTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.UsesItemContainerTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property UsesItemContainerTemplate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsesItemContainerTemplate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UsesItemContainerTemplate : bool with get, set" Usage="System.Windows.Controls.MenuItem.UsesItemContainerTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-424">Pobiera lub ustawia wartość wskazującą, czy menu wybiera kontenery innego elementu, w zależności od typu elementu w kolekcji źródłowej lub niektórych innych heurystyki.</span><span class="sxs-lookup"><span data-stu-id="3e44c-424">Gets or sets a value that indicates whether the menu selects different item containers, depending on the type of the item in the underlying collection or some other heuristic.</span></span></summary>
        <value><span data-ttu-id="3e44c-425"><see langword="true" /> menu wybierze inny element kontenerów; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-425"><see langword="true" /> the menu selects different item containers; otherwise, <see langword="false" />.</span></span>  
  
<span data-ttu-id="3e44c-426">Zarejestrowaną wartością domyślną jest <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3e44c-426">The registered default is <see langword="false" />.</span></span> <span data-ttu-id="3e44c-427">Aby uzyskać więcej informacji o obiektach mogących wpływać wartość, zobacz [następstwo wartości właściwości](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="3e44c-427">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e44c-428">Ta właściwość jest przydatna, jeśli chcesz utworzyć menu przez powiązanie do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="3e44c-428">This property is useful if you want to create a menu by binding to a collection.</span></span>  <span data-ttu-id="3e44c-429">Kontener elementu jest element interfejsu użytkownika, który wyświetla obiekt w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="3e44c-429">The item container is the UI element that displays the object in a collection.</span></span> <span data-ttu-id="3e44c-430">Jeśli chcesz powiązać do kolekcji, aby utworzyć menu, który zawiera <xref:System.Windows.Controls.MenuItem> obiektów i <xref:System.Windows.Controls.Separator> obiektów, ustaw <xref:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate%2A> właściwości na wartość true, a następnie utwórz <xref:System.Windows.Controls.ItemContainerTemplate> dla każdego typu obiektu w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="3e44c-430">If you want to bind to a collection to create a menu that contains <xref:System.Windows.Controls.MenuItem> objects and <xref:System.Windows.Controls.Separator> objects, set the <xref:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate%2A> property to true and create an <xref:System.Windows.Controls.ItemContainerTemplate> for each type of object in your collection.</span></span>  <span data-ttu-id="3e44c-431">Każdy <xref:System.Windows.Controls.ItemContainerTemplate> musi zawierać albo <xref:System.Windows.Controls.MenuItem> lub <xref:System.Windows.Controls.Separator>.</span><span class="sxs-lookup"><span data-stu-id="3e44c-431">Each <xref:System.Windows.Controls.ItemContainerTemplate> must contain either a <xref:System.Windows.Controls.MenuItem> or a <xref:System.Windows.Controls.Separator>.</span></span>  
  
<a name="dependencyPropertyInfo_UsesItemContainerTemplate"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3e44c-432">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="3e44c-432">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3e44c-433">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="3e44c-433">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.UsesItemContainerTemplateProperty>|  
|<span data-ttu-id="3e44c-434">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="3e44c-434">Metadata properties set to `true`</span></span>|<span data-ttu-id="3e44c-435">Brak</span><span class="sxs-lookup"><span data-stu-id="3e44c-435">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesItemContainerTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty UsesItemContainerTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty UsesItemContainerTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.UsesItemContainerTemplateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UsesItemContainerTemplateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ UsesItemContainerTemplateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable UsesItemContainerTemplateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.MenuItem.UsesItemContainerTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e44c-436">Identyfikuje <see cref="P:System.Windows.Controls.MenuItem.UsesItemContainerTemplate" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="3e44c-436">Identifies the <see cref="P:System.Windows.Controls.MenuItem.UsesItemContainerTemplate" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>