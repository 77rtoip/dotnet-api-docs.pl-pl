<Type Name="MenuItem" FullName="System.Windows.Controls.MenuItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5a19278c7892f31790ef5ecdfa46e80c19907ed1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30697745" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MenuItem : System.Windows.Controls.HeaderedItemsControl, System.Windows.Input.ICommandSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi MenuItem extends System.Windows.Controls.HeaderedItemsControl implements class System.Windows.Input.ICommandSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.MenuItem" />
  <TypeSignature Language="VB.NET" Value="Public Class MenuItem&#xA;Inherits HeaderedItemsControl&#xA;Implements ICommandSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class MenuItem : System::Windows::Controls::HeaderedItemsControl, System::Windows::Input::ICommandSource" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.HeaderedItemsControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Input.ICommandSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Click")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Menu)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.StyleTypedProperty(Property="ItemContainerStyle", StyleTargetType=typeof(System.Windows.Controls.MenuItem))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_Popup", Type=typeof(System.Windows.Controls.Primitives.Popup))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ed805-101">Reprezentuje element możliwy do wyboru wewnątrz <see cref="T:System.Windows.Controls.Menu" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ed805-101">Represents a selectable item inside a <see cref="T:System.Windows.Controls.Menu" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed805-102"><xref:System.Windows.Controls.MenuItem> jest <xref:System.Windows.Controls.HeaderedItemsControl>, co oznacza jego nagłówka i kolekcji obiektów mogą być dowolnego typu (np. ciąg, image lub panelu).</span><span class="sxs-lookup"><span data-stu-id="ed805-102"><xref:System.Windows.Controls.MenuItem> is a <xref:System.Windows.Controls.HeaderedItemsControl>, which means its header and collection of objects can be of any type (such as string, image, or panel).</span></span> <span data-ttu-id="ed805-103">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Controls.HeaderedItemsControl> klasy.</span><span class="sxs-lookup"><span data-stu-id="ed805-103">For more information, see the <xref:System.Windows.Controls.HeaderedItemsControl> class.</span></span>  
  
 <span data-ttu-id="ed805-104">A <xref:System.Windows.Controls.MenuItem> może mieć podmenu.</span><span class="sxs-lookup"><span data-stu-id="ed805-104">A <xref:System.Windows.Controls.MenuItem> can have submenus.</span></span> <span data-ttu-id="ed805-105">Podmenu <xref:System.Windows.Controls.MenuItem> składa się z obiektów w <xref:System.Windows.Controls.ItemCollection> z <xref:System.Windows.Controls.MenuItem>.</span><span class="sxs-lookup"><span data-stu-id="ed805-105">The submenu of the <xref:System.Windows.Controls.MenuItem> is made up of the objects within the <xref:System.Windows.Controls.ItemCollection> of a <xref:System.Windows.Controls.MenuItem>.</span></span>  <span data-ttu-id="ed805-106">Często <xref:System.Windows.Controls.MenuItem> do zawierać inne <xref:System.Windows.Controls.MenuItem> obiektów do tworzenia zagnieżdżonych podmenu.</span><span class="sxs-lookup"><span data-stu-id="ed805-106">It is common for a <xref:System.Windows.Controls.MenuItem> to contain other <xref:System.Windows.Controls.MenuItem> objects to create nested submenus.</span></span>  
  
 <span data-ttu-id="ed805-107">A <xref:System.Windows.Controls.MenuItem> może mieć jeden z kilku funkcji:</span><span class="sxs-lookup"><span data-stu-id="ed805-107">A <xref:System.Windows.Controls.MenuItem> can have one of several functions:</span></span>  
  
-   <span data-ttu-id="ed805-108">Może ona zostać wybrana do wywołania polecenia.</span><span class="sxs-lookup"><span data-stu-id="ed805-108">It can be selected to invoke a command.</span></span>  
  
-   <span data-ttu-id="ed805-109">Może być separatorem innych elementów menu.</span><span class="sxs-lookup"><span data-stu-id="ed805-109">It can be a separator for other menu items.</span></span>  
  
-   <span data-ttu-id="ed805-110">Może to być nagłówka podmenu.</span><span class="sxs-lookup"><span data-stu-id="ed805-110">It can be a header for a submenu.</span></span>  
  
-   <span data-ttu-id="ed805-111">Można zaznaczać lub usuwać zaznaczenia.</span><span class="sxs-lookup"><span data-stu-id="ed805-111">It can be checked or unchecked.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ed805-112">Domyślnie <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> z <xref:System.Windows.Controls.MenuItem> ma ustawioną wartość <xref:System.Windows.HorizontalAlignment.Stretch?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ed805-112">By default, the <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> of a <xref:System.Windows.Controls.MenuItem> is set to <xref:System.Windows.HorizontalAlignment.Stretch?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ed805-113">Domyślne położenie <xref:System.Windows.Controls.StackPanel> jest <xref:System.Windows.HorizontalAlignment.Center?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ed805-113">The default horizontal position of a <xref:System.Windows.Controls.StackPanel> is <xref:System.Windows.HorizontalAlignment.Center?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ed805-114">Jeśli ustawisz <xref:System.Windows.FrameworkElement.Width%2A> właściwość <xref:System.Windows.Controls.MenuItem> za pośrednictwem <xref:System.Windows.Controls.StackPanel>, panel stosu domyślne są stosowane i skupia się elementu.</span><span class="sxs-lookup"><span data-stu-id="ed805-114">If you set the <xref:System.Windows.FrameworkElement.Width%2A> property of a <xref:System.Windows.Controls.MenuItem> through a <xref:System.Windows.Controls.StackPanel>, the stack panel's default is applied and the item is centered.</span></span>  
  
 <span data-ttu-id="ed805-115"><xref:System.Windows.Controls.MenuItem> Dojść <xref:System.Windows.UIElement.MouseDown> zdarzeń, więc Jeśli dołączysz obsługi zdarzeń do <xref:System.Windows.UIElement.MouseDown>, nigdy nie zostanie wywołana z obsługi.</span><span class="sxs-lookup"><span data-stu-id="ed805-115">The <xref:System.Windows.Controls.MenuItem> handles the <xref:System.Windows.UIElement.MouseDown> event, so if you attach an event handler to <xref:System.Windows.UIElement.MouseDown>, your handler will never be called.</span></span>  <span data-ttu-id="ed805-116">Aby dodać własne obsługi, subskrybować <xref:System.Windows.UIElement.PreviewMouseDown> zdarzenia lub subskrybować <xref:System.Windows.UIElement.MouseDown> przez wywołanie metody <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> z `handledEventsToo` ustawioną `true`.</span><span class="sxs-lookup"><span data-stu-id="ed805-116">To add your own handler, subscribe to the <xref:System.Windows.UIElement.PreviewMouseDown> event or subscribe to <xref:System.Windows.UIElement.MouseDown> by calling <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
## <a name="customizing-the-menuitem-control"></a><span data-ttu-id="ed805-117">Dostosowywanie formantu MenuItem</span><span class="sxs-lookup"><span data-stu-id="ed805-117">Customizing the MenuItem Control</span></span>  
 <span data-ttu-id="ed805-118">Aby zastosować te same ustawienia właściwości z wieloma <xref:System.Windows.Controls.MenuItem> formantów, użyj <xref:System.Windows.FrameworkElement.Style%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="ed805-118">To apply the same property settings to multiple <xref:System.Windows.Controls.MenuItem> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="ed805-119">Można zmodyfikować domyślne <xref:System.Windows.Controls.ControlTemplate> umożliwiają unikatowego wyglądu formantu.</span><span class="sxs-lookup"><span data-stu-id="ed805-119">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="ed805-120">Aby uzyskać więcej informacji o tworzeniu <xref:System.Windows.Controls.ControlTemplate>, zobacz [Dostosowywanie wyglądu formant tworząc ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="ed805-120">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="ed805-121">Aby wyświetlić części i Stany, które są specyficzne dla <xref:System.Windows.Controls.MenuItem>, zobacz [style Menu i szablony](~/docs/framework/wpf/controls/menu-styles-and-templates.md).</span><span class="sxs-lookup"><span data-stu-id="ed805-121">To see the parts and states that are specific to the <xref:System.Windows.Controls.MenuItem>, see [Menu Styles and Templates](~/docs/framework/wpf/controls/menu-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="ed805-122">Właściwości zależności dla tego formantu może być ustawiona w stylu domyślnym formantu.</span><span class="sxs-lookup"><span data-stu-id="ed805-122">Dependency properties for this control might be set by the control’s default style.</span></span>  <span data-ttu-id="ed805-123">Jeśli właściwość jest ustawiona w stylu domyślnym, gdy formant jest wyświetlany w aplikacji właściwość może zmienić ze swojej wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="ed805-123">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="ed805-124">Domyślny styl jest określana, przez które kompozycji pulpitu jest używana, gdy aplikacja jest uruchomiona.</span><span class="sxs-lookup"><span data-stu-id="ed805-124">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="ed805-125">Aby uzyskać więcej informacji, zobacz [domyślnej kompozycji WPF](http://go.microsoft.com/fwlink/?LinkID=158252).</span><span class="sxs-lookup"><span data-stu-id="ed805-125">For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ed805-126">Ustawienie właściwości visual będzie miał wpływ tylko jeśli ta właściwość jest obecny w obu <xref:System.Windows.Controls.MenuItem> formant na szablon domyślny i ustawić za pomocą.</span><span class="sxs-lookup"><span data-stu-id="ed805-126">Setting a visual property will only have an effect if that property is both present in <xref:System.Windows.Controls.MenuItem> control's default template and is set by using a .</span></span> <span data-ttu-id="ed805-127">Lista właściwości visual można znaleźć w sekcji "Zmiana Visual struktury kontroli" [Dostosowywanie wyglądu formant tworząc ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="ed805-127">You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed805-128">Poniższy przykład tworzy <xref:System.Windows.Controls.Menu> do manipulowania tekstu w <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="ed805-128">The following example creates a <xref:System.Windows.Controls.Menu> to manipulate text in a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="ed805-129"><xref:System.Windows.Controls.Menu> Zawiera <xref:System.Windows.Controls.MenuItem> obiekty używające <xref:System.Windows.Controls.MenuItem.Command%2A>, <xref:System.Windows.Controls.MenuItem.IsCheckable%2A>, i <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> właściwości i <xref:System.Windows.Controls.MenuItem.Checked>, <xref:System.Windows.Controls.MenuItem.Unchecked>, i <xref:System.Windows.Controls.MenuItem.Click> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ed805-129">The <xref:System.Windows.Controls.Menu> contains <xref:System.Windows.Controls.MenuItem> objects that use the <xref:System.Windows.Controls.MenuItem.Command%2A>, <xref:System.Windows.Controls.MenuItem.IsCheckable%2A>, and <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> properties and the <xref:System.Windows.Controls.MenuItem.Checked>, <xref:System.Windows.Controls.MenuItem.Unchecked>, and <xref:System.Windows.Controls.MenuItem.Click> events.</span></span>  
  
 [!code-xaml[MenuItemCommandsAndEvents#1](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml#1)]  
  
 [!code-csharp[MenuItemCommandsAndEvents#2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml.cs#2)]
 [!code-vb[MenuItemCommandsAndEvents#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItemCommandsAndEvents/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.Menu" />
    <altmember cref="T:System.Windows.Controls.ContextMenu" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ed805-130">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Controls.MenuItem" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-130">Initializes a new instance of the <see cref="T:System.Windows.Controls.MenuItem" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Checked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Checked" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.MenuItem.Checked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Checked As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Checked;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-131">Występuje, gdy zaznaczono element menu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-131">Occurs when a menu item is checked.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_Checked"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ed805-132">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ed805-132">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ed805-133">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ed805-133">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.CheckedEvent>|  
|<span data-ttu-id="ed805-134">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ed805-134">Routing strategy</span></span>|<span data-ttu-id="ed805-135">Bubbling</span><span class="sxs-lookup"><span data-stu-id="ed805-135">Bubbling</span></span>|  
|<span data-ttu-id="ed805-136">Delegate</span><span class="sxs-lookup"><span data-stu-id="ed805-136">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="ed805-137">W poniższym przykładzie pokazano Obsługa <xref:System.Windows.Controls.MenuItem.Checked> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ed805-137">The following example demonstrates handling the <xref:System.Windows.Controls.MenuItem.Checked> event.</span></span>  
  
 [!code-xaml[MenuItemCommandsAndEvents#3](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml#3)]  
  
 [!code-csharp[MenuItemCommandsAndEvents#4](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml.cs#4)]
 [!code-vb[MenuItemCommandsAndEvents#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItemCommandsAndEvents/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent CheckedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent CheckedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.CheckedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CheckedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ CheckedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-138">Identyfikuje <see cref="E:System.Windows.Controls.MenuItem.Checked" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-138">Identifies the <see cref="E:System.Windows.Controls.MenuItem.Checked" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.MenuItem.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Click;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-139">Występuje, gdy <see cref="T:System.Windows.Controls.MenuItem" /> zostanie kliknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-139">Occurs when a <see cref="T:System.Windows.Controls.MenuItem" /> is clicked.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed805-140"><xref:System.Windows.Controls.MenuItem.Click> Zdarzenie nie występuje w przypadku <xref:System.Windows.Controls.MenuItem> ma podmenu.</span><span class="sxs-lookup"><span data-stu-id="ed805-140">The <xref:System.Windows.Controls.MenuItem.Click> event does not occur if the <xref:System.Windows.Controls.MenuItem> has a submenu.</span></span>  
  
<a name="routedEventInfo_Click"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ed805-141">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ed805-141">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ed805-142">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ed805-142">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.ClickEvent>|  
|<span data-ttu-id="ed805-143">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ed805-143">Routing strategy</span></span>|<span data-ttu-id="ed805-144">Bubbling</span><span class="sxs-lookup"><span data-stu-id="ed805-144">Bubbling</span></span>|  
|<span data-ttu-id="ed805-145">Delegate</span><span class="sxs-lookup"><span data-stu-id="ed805-145">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="ed805-146">Poniższy przykład tworzy <xref:System.Windows.Controls.Menu> do manipulowania tekstu w <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="ed805-146">The following example creates a <xref:System.Windows.Controls.Menu> to manipulate text in a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="ed805-147"><xref:System.Windows.Controls.Menu> Zawiera <xref:System.Windows.Controls.MenuItem> obiekty używające <xref:System.Windows.Controls.MenuItem.Command%2A>, <xref:System.Windows.Controls.MenuItem.IsCheckable%2A>, i <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> właściwości i <xref:System.Windows.Controls.MenuItem.Checked>, <xref:System.Windows.Controls.MenuItem.Unchecked>, i <xref:System.Windows.Controls.MenuItem.Click> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ed805-147">The <xref:System.Windows.Controls.Menu> contains <xref:System.Windows.Controls.MenuItem> objects that use the <xref:System.Windows.Controls.MenuItem.Command%2A>, <xref:System.Windows.Controls.MenuItem.IsCheckable%2A>, and <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> properties and the <xref:System.Windows.Controls.MenuItem.Checked>, <xref:System.Windows.Controls.MenuItem.Unchecked>, and <xref:System.Windows.Controls.MenuItem.Click> events.</span></span>  
  
 [!code-xaml[MenuItemCommandsAndEvents#1](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml#1)]  
  
 [!code-csharp[MenuItemCommandsAndEvents#2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml.cs#2)]
 [!code-vb[MenuItemCommandsAndEvents#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItemCommandsAndEvents/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClickEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ClickEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ClickEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.ClickEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClickEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ClickEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-148">Identyfikuje <see cref="E:System.Windows.Controls.MenuItem.Click" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-148">Identifies the <see cref="E:System.Windows.Controls.MenuItem.Click" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed805-149">To zdarzenie odnosi się po lewej stronie kliknięcie przycisku.</span><span class="sxs-lookup"><span data-stu-id="ed805-149">This event corresponds to a left mouse button click.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.Command" />
      <MemberSignature Language="VB.NET" Value="Public Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); void set(System::Windows::Input::ICommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-150">Pobiera lub ustawia polecenie skojarzone z elementem menu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-150">Gets or sets the command associated with the menu item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed805-151">Polecenie skojarzone z <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-151">The command associated with the <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          </span>
          <span data-ttu-id="ed805-152">Wartość domyślna to <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-152">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed805-153">Ta właściwość jest używana do skojarzenia z określonego polecenia <xref:System.Windows.Controls.MenuItem> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="ed805-153">This property is used to associate a command with a particular <xref:System.Windows.Controls.MenuItem> instance.</span></span> <span data-ttu-id="ed805-154">W poniższym przykładzie **kopiowania** z <xref:System.Windows.Controls.MenuItem> i automatycznie dostarcza tekstu wejściowego gestu **klawisze Ctrl + C**.</span><span class="sxs-lookup"><span data-stu-id="ed805-154">The following example associates the **Copy** command with a <xref:System.Windows.Controls.MenuItem> and automatically supplies the input gesture text **Ctrl+C**.</span></span> <span data-ttu-id="ed805-155">Przykład Nieustawione <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> właściwości, ale <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> dla <xref:System.Windows.Controls.MenuItem> jest "Kopiuj" w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="ed805-155">The example does not set the <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> property, but the <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> for the <xref:System.Windows.Controls.MenuItem> is "Copy" at run time.</span></span>  <span data-ttu-id="ed805-156">Możesz określić inny nagłówek dla <xref:System.Windows.Controls.MenuItem> jeśli ma to być inna.</span><span class="sxs-lookup"><span data-stu-id="ed805-156">You can specify another header for the <xref:System.Windows.Controls.MenuItem> if you want it to be different.</span></span> <span data-ttu-id="ed805-157">Aby uzyskać informacje na temat wiązania odpowiedniego polecenia, zobacz [dodać polecenia do MenuItem](http://msdn.microsoft.com/library/013d68a0-5373-4a68-bd91-5de574307370).</span><span class="sxs-lookup"><span data-stu-id="ed805-157">For information on how to bind to the desired command, see [Add a Command to a MenuItem](http://msdn.microsoft.com/library/013d68a0-5373-4a68-bd91-5de574307370).</span></span>  
  
 [!code-xaml[MenuItems_snip#MenuItemCommand](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml#menuitemcommand)]  
  
 <span data-ttu-id="ed805-158">Polecenie jest wywoływane, gdy <xref:System.Windows.Controls.MenuItem> zostanie kliknięty — tuż po <xref:System.Windows.Controls.MenuItem.Click> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ed805-158">A command is raised when a <xref:System.Windows.Controls.MenuItem> is clicked—just after the <xref:System.Windows.Controls.MenuItem.Click> event.</span></span> <span data-ttu-id="ed805-159">Polecenie jest zgłaszane w elemencie zgodnie z następujących zadań:</span><span class="sxs-lookup"><span data-stu-id="ed805-159">The command is raised on the element according to the following priorities:</span></span>  
  
1.  <span data-ttu-id="ed805-160">Jeśli <xref:System.Windows.Controls.MenuItem.CommandTarget%2A> jest ustawiona na <xref:System.Windows.Controls.MenuItem>, że element jest używany.</span><span class="sxs-lookup"><span data-stu-id="ed805-160">If <xref:System.Windows.Controls.MenuItem.CommandTarget%2A> is set on the <xref:System.Windows.Controls.MenuItem>, that element is used.</span></span>  
  
2.  <span data-ttu-id="ed805-161"><xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A> z <xref:System.Windows.Controls.ContextMenu> zawierający <xref:System.Windows.Controls.MenuItem>.</span><span class="sxs-lookup"><span data-stu-id="ed805-161">The <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A> of a <xref:System.Windows.Controls.ContextMenu> that contains the <xref:System.Windows.Controls.MenuItem>.</span></span>  
  
3.  <span data-ttu-id="ed805-162">Element docelowy fokus okna głównego, który zawiera <xref:System.Windows.Controls.Menu>.</span><span class="sxs-lookup"><span data-stu-id="ed805-162">The focus target of the main window that contains a <xref:System.Windows.Controls.Menu>.</span></span>  
  
4.  <span data-ttu-id="ed805-163"><xref:System.Windows.Controls.MenuItem> Który został kliknięty.</span><span class="sxs-lookup"><span data-stu-id="ed805-163">The <xref:System.Windows.Controls.MenuItem> that was clicked.</span></span>  
  
<a name="dependencyPropertyInfo_Command"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ed805-164">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="ed805-164">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ed805-165">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ed805-165">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.CommandProperty>|  
|<span data-ttu-id="ed805-166">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="ed805-166">Metadata properties set to `true`</span></span>|<span data-ttu-id="ed805-167">Brak</span><span class="sxs-lookup"><span data-stu-id="ed805-167">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ed805-168">Następujące przykłady przedstawiają sposób użycia właściwości polecenia do skojarzenia z elementami menu poleceń.</span><span class="sxs-lookup"><span data-stu-id="ed805-168">The following examples show how to use the command property to associate commands with menu items.</span></span>  
  
 [!code-xaml[MenuEvent#8](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuEvent/CSharp/Pane1.xaml#8)]  
  
 [!code-csharp[MenuEvent#9](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuEvent/CSharp/Pane1.xaml.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandParameter">
      <MemberSignature Language="C#" Value="public object CommandParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.CommandParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandParameter { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-169">Pobiera lub Ustawia parametr do przekazania do <see cref="P:System.Windows.Controls.MenuItem.Command" /> właściwość <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-169">Gets or sets the parameter to pass to the <see cref="P:System.Windows.Controls.MenuItem.Command" /> property of a <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed805-170">Parametr do przekazania do <see cref="P:System.Windows.Controls.MenuItem.Command" /> właściwość <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-170">The parameter to pass to the <see cref="P:System.Windows.Controls.MenuItem.Command" /> property of a <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          </span>
          <span data-ttu-id="ed805-171">Wartość domyślna to <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-171">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_CommandParameter"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ed805-172">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="ed805-172">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ed805-173">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ed805-173">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.CommandParameterProperty>|  
|<span data-ttu-id="ed805-174">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="ed805-174">Metadata properties set to `true`</span></span>|<span data-ttu-id="ed805-175">Brak</span><span class="sxs-lookup"><span data-stu-id="ed805-175">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandParameterProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandParameterProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandParameterProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.CommandParameterProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandParameterProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandParameterProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-176">Identyfikuje <see cref="P:System.Windows.Controls.MenuItem.CommandParameter" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-176">Identifies the <see cref="P:System.Windows.Controls.MenuItem.CommandParameter" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.CommandProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-177">Identyfikuje <see cref="P:System.Windows.Controls.MenuItem.Command" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-177">Identifies the <see cref="P:System.Windows.Controls.MenuItem.Command" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTarget">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement CommandTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement CommandTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.CommandTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTarget As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ CommandTarget { System::Windows::IInputElement ^ get(); void set(System::Windows::IInputElement ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-178">Pobiera lub ustawia element docelowy, dla którego zostanie wywołane określone polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-178">Gets or sets the target element on which to raise the specified command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed805-179">Element, na którym ma być wywołane określone polecenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-179">The element on which to raise the specified command.</span>
          </span>
          <span data-ttu-id="ed805-180">Wartość domyślna to <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-180">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed805-181"><xref:System.Windows.Controls.MenuItem.CommandTarget%2A> Właściwość określa, gdzie występuje polecenie elementu.</span><span class="sxs-lookup"><span data-stu-id="ed805-181">The <xref:System.Windows.Controls.MenuItem.CommandTarget%2A> property specifies the element where the command occurs.</span></span> <span data-ttu-id="ed805-182">Jeśli <xref:System.Windows.Controls.MenuItem.CommandTarget%2A> nie jest ustawiona, element, który ma fokus klawiatury odbierze polecenie.</span><span class="sxs-lookup"><span data-stu-id="ed805-182">If <xref:System.Windows.Controls.MenuItem.CommandTarget%2A> is not set, the element that has keyboard focus will receive the command.</span></span>  
  
<a name="dependencyPropertyInfo_CommandTarget"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ed805-183">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="ed805-183">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ed805-184">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ed805-184">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.CommandTargetProperty>|  
|<span data-ttu-id="ed805-185">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="ed805-185">Metadata properties set to `true`</span></span>|<span data-ttu-id="ed805-186">Brak</span><span class="sxs-lookup"><span data-stu-id="ed805-186">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandTargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandTargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.CommandTargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandTargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandTargetProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-187">Identyfikuje <see cref="P:System.Windows.Controls.MenuItem.CommandTarget" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-187">Identifies the <see cref="P:System.Windows.Controls.MenuItem.CommandTarget" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.DependencyObject GetContainerForItemOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.DependencyObject GetContainerForItemOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.GetContainerForItemOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetContainerForItemOverride () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::DependencyObject ^ GetContainerForItemOverride();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ed805-188">Tworzy lub identyfikuje element używany do wyświetlania określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-188">Creates or identifies the element used to display a specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed805-189">Element używany do wyświetlania określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-189">The element used to display a specified item.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlesScrolling">
      <MemberSignature Language="C#" Value="protected internal override bool HandlesScrolling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HandlesScrolling" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.HandlesScrolling" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property HandlesScrolling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HandlesScrolling { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-190">Pobiera czy kontrolka obsługuje przewijania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-190">Gets whether the control supports scrolling.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed805-191">
            <see langword="true" /> we wszystkich przypadkach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-191">
              <see langword="true" /> in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed805-192">Jeśli formant ma <xref:System.Windows.Controls.ScrollViewer> w jego styl i ma niestandardowy klawiatury przewijanie zachowanie, <xref:System.Windows.Controls.ListBox.HandlesScrolling%2A> powinien zwrócić `true`.</span><span class="sxs-lookup"><span data-stu-id="ed805-192">If the control has a <xref:System.Windows.Controls.ScrollViewer> in its style and has a custom keyboard scrolling behavior, <xref:System.Windows.Controls.ListBox.HandlesScrolling%2A> should return `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Icon">
      <MemberSignature Language="C#" Value="public object Icon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Icon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.Icon" />
      <MemberSignature Language="VB.NET" Value="Public Property Icon As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Icon { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-193">Pobiera lub ustawia ikonę, która jest wyświetlana w <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-193">Gets or sets the icon that appears in a <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed805-194">Ikona wyświetlana w <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-194">The icon that appears in a <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          </span>
          <span data-ttu-id="ed805-195">Wartość domyślna to <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-195">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed805-196">Wiele <xref:System.Windows.Controls.Menu> formanty mają więcej niż tylko tekst <xref:System.Windows.Controls.MenuItem> elementów.</span><span class="sxs-lookup"><span data-stu-id="ed805-196">Many <xref:System.Windows.Controls.Menu> controls have more than just text in the <xref:System.Windows.Controls.MenuItem> elements.</span></span> <span data-ttu-id="ed805-197">Często brak ikony, znaczniki wyboru akceleratorów i strzałki, aby wskazać podmenu.</span><span class="sxs-lookup"><span data-stu-id="ed805-197">Often there are icons, check marks, accelerators, and arrows to indicate submenus.</span></span>  
  
<a name="dependencyPropertyInfo_Icon"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ed805-198">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="ed805-198">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ed805-199">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ed805-199">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.IconProperty>|  
|<span data-ttu-id="ed805-200">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="ed805-200">Metadata properties set to `true`</span></span>|<span data-ttu-id="ed805-201">Brak</span><span class="sxs-lookup"><span data-stu-id="ed805-201">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ed805-202">Poniższy przykład tworzy element menu za pomocą ikony.</span><span class="sxs-lookup"><span data-stu-id="ed805-202">The following example creates a menu item with an icon.</span></span>  
  
 [!code-xaml[MenuItems_snip#MenuItemIcon](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml#menuitemicon)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IconProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IconProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IconProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.IconProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IconProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IconProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-203">Identyfikuje <see cref="P:System.Windows.Controls.MenuItem.Icon" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-203">Identifies the <see cref="P:System.Windows.Controls.MenuItem.Icon" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputGestureText">
      <MemberSignature Language="C#" Value="public string InputGestureText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InputGestureText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.InputGestureText" />
      <MemberSignature Language="VB.NET" Value="Public Property InputGestureText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InputGestureText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-204">Ustawia tekst opisujący wejściowych gestu, który wywoła polecenie związana z określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-204">Sets the text describing an input gesture that will call the command tied to the specified item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed805-205">Tekst opisujący gestu wejściowych, takich jak **klawisze Ctrl + C** dla **kopiowania** polecenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-205">The text that describes the input gesture, such as **Ctrl+C** for the **Copy** command.</span>
          </span>
          <span data-ttu-id="ed805-206">Wartością domyślną jest ciąg pusty ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-206">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed805-207">Ta właściwość nie wiąże gestu wejściowych z elementem menu; po prostu dodaje tekst elementu menu.</span><span class="sxs-lookup"><span data-stu-id="ed805-207">This property does not associate the input gesture with the menu item; it simply adds text to the menu item.</span></span> <span data-ttu-id="ed805-208">Aplikacja musi obsługiwać danych wejściowych użytkownika do wykonania akcji.</span><span class="sxs-lookup"><span data-stu-id="ed805-208">The application must handle the user's input to carry out the action.</span></span>  <span data-ttu-id="ed805-209">Aby uzyskać informacje dotyczące do skojarzenia z elementem menu polecenia, zobacz <xref:System.Windows.Controls.MenuItem.Command%2A>.</span><span class="sxs-lookup"><span data-stu-id="ed805-209">For information on how to associate a command with a menu item, see <xref:System.Windows.Controls.MenuItem.Command%2A>.</span></span>  
  
<a name="dependencyPropertyInfo_InputGestureText"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ed805-210">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="ed805-210">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ed805-211">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ed805-211">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.InputGestureTextProperty>|  
|<span data-ttu-id="ed805-212">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="ed805-212">Metadata properties set to `true`</span></span>|<span data-ttu-id="ed805-213">Brak</span><span class="sxs-lookup"><span data-stu-id="ed805-213">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ed805-214">W poniższych przykładach pokazano, jak używać <xref:System.Windows.Controls.MenuItem.InputGestureText%2A> właściwość do przypisania tekst skróty klawiaturowe do elementów menu.</span><span class="sxs-lookup"><span data-stu-id="ed805-214">The following examples show how to use the <xref:System.Windows.Controls.MenuItem.InputGestureText%2A> property to assign keyboard shortcuts text to menu items.</span></span>  
  
 [!code-xaml[MenuEvent#6](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuEvent/CSharp/Pane1.xaml#6)]  
  
 [!code-csharp[MenuEvent#7](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuEvent/CSharp/Pane1.xaml.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputGestureTextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty InputGestureTextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty InputGestureTextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.InputGestureTextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InputGestureTextProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ InputGestureTextProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-215">Identyfikuje <see cref="P:System.Windows.Controls.MenuItem.InputGestureText" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-215">Identifies the <see cref="P:System.Windows.Controls.MenuItem.InputGestureText" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCheckable">
      <MemberSignature Language="C#" Value="public bool IsCheckable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCheckable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.IsCheckable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsCheckable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCheckable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-216">Pobiera wartość wskazującą, czy <see cref="T:System.Windows.Controls.MenuItem" /> można sprawdzić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-216">Gets a value that indicates whether a <see cref="T:System.Windows.Controls.MenuItem" /> can be checked.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed805-217">
            <see langword="true" /> Jeżeli element menu może być sprawdzone; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-217">
              <see langword="true" /> if the menu item can be checked; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ed805-218">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-218">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsCheckable"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ed805-219">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="ed805-219">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ed805-220">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ed805-220">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.IsCheckableProperty>|  
|<span data-ttu-id="ed805-221">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="ed805-221">Metadata properties set to `true`</span></span>|<span data-ttu-id="ed805-222">Brak</span><span class="sxs-lookup"><span data-stu-id="ed805-222">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ed805-223">Poniższy przykład przedstawia sposób wprowadzania <xref:System.Windows.Controls.MenuItem> formantów, które są zaznaczone, gdy użytkownik kliknie je.</span><span class="sxs-lookup"><span data-stu-id="ed805-223">The following example shows how to make <xref:System.Windows.Controls.MenuItem> controls that are checked when a user clicks them.</span></span>  
  
 [!code-xaml[MenuEvent#11](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuEvent/CSharp/Pane1.xaml#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCheckableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsCheckableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsCheckableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.IsCheckableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsCheckableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsCheckableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-224">Identyfikuje <see cref="P:System.Windows.Controls.MenuItem.IsCheckable" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-224">Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsCheckable" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsChecked">
      <MemberSignature Language="C#" Value="public bool IsChecked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsChecked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.IsChecked" />
      <MemberSignature Language="VB.NET" Value="Public Property IsChecked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsChecked { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-225">Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Windows.Controls.MenuItem" /> jest zaznaczony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-225">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.MenuItem" /> is checked.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed805-226">
            <see langword="true" /> Jeśli <see cref="T:System.Windows.Controls.MenuItem" /> jest zaznaczone, a w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-226">
              <see langword="true" /> if a <see cref="T:System.Windows.Controls.MenuItem" /> is checked; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ed805-227">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-227">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsChecked"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ed805-228">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="ed805-228">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ed805-229">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ed805-229">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.IsCheckedProperty>|  
|<span data-ttu-id="ed805-230">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="ed805-230">Metadata properties set to `true`</span></span>|<span data-ttu-id="ed805-231"><xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A></span><span class="sxs-lookup"><span data-stu-id="ed805-231"><xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ed805-232">W poniższym przykładzie przedstawiono sposób <xref:System.Windows.Controls.MenuItem.IsChecked%2A> właściwości może służyć do zaznacz pole wyboru przed elementu menu.</span><span class="sxs-lookup"><span data-stu-id="ed805-232">The following example shows how the <xref:System.Windows.Controls.MenuItem.IsChecked%2A> property can be used to place a check mark in front of a menu item.</span></span>  
  
 [!code-xaml[MenuStylesSnippet#6](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuStylesSnippet/CS/pane1.xaml#6)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCheckedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsCheckedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsCheckedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.IsCheckedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsCheckedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsCheckedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-233">Identyfikuje <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-233">Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected override bool IsEnabledCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.IsEnabledCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property IsEnabledCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsEnabledCore { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-234">Pobiera wartość wskazującą, czy <see cref="P:System.Windows.ContentElement.IsEnabled" /> jest właściwość <see langword="true" /> dla bieżącego elementu menu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-234">Gets a value that indicates whether the <see cref="P:System.Windows.ContentElement.IsEnabled" /> property is <see langword="true" /> for the current menu item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed805-235">
            <see langword="true" /> Jeśli <see cref="T:System.Windows.Controls.MenuItem" /> może być wybrana; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-235">
              <see langword="true" /> if the <see cref="T:System.Windows.Controls.MenuItem" /> can be selected; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHighlighted">
      <MemberSignature Language="C#" Value="public bool IsHighlighted { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHighlighted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.IsHighlighted" />
      <MemberSignature Language="VB.NET" Value="Public Property IsHighlighted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:  property bool IsHighlighted {  public:&#xA;bool get(); protected:&#xA; void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-236">Pobiera wartość wskazującą, czy <see cref="T:System.Windows.Controls.MenuItem" /> zostanie wyróżniona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-236">Gets a value that indicates whether a <see cref="T:System.Windows.Controls.MenuItem" /> is highlighted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed805-237">
            <see langword="true" /> Jeśli <see cref="T:System.Windows.Controls.MenuItem" /> jest zaznaczony, a w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-237">
              <see langword="true" /> if a <see cref="T:System.Windows.Controls.MenuItem" /> is highlighted; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ed805-238">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-238">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed805-239">Począwszy od programu .NET Framework w wersji 3.0 z dodatkiem Service Pack 1, <xref:System.Windows.Controls.MenuItem.IsHighlighted%2A> właściwość ma chronione metody ustawiającej.</span><span class="sxs-lookup"><span data-stu-id="ed805-239">Starting with the .NET Framework version 3.0 Service Pack 1, the <xref:System.Windows.Controls.MenuItem.IsHighlighted%2A> property has a protected setter.</span></span> <span data-ttu-id="ed805-240">Aby używać tej funkcji, aplikacja powinna wskazywać .NET Framework w wersji 3.5.</span><span class="sxs-lookup"><span data-stu-id="ed805-240">To use this functionality, your application should target the .NET Framework version 3.5.</span></span>  <span data-ttu-id="ed805-241">Aby uzyskać więcej informacji, zobacz [wersje programu .NET Framework i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="ed805-241">For more information, see [.NET Framework Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsHighlighted"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ed805-242">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="ed805-242">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ed805-243">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ed805-243">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.IsHighlightedProperty>|  
|<span data-ttu-id="ed805-244">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="ed805-244">Metadata properties set to `true`</span></span>|<span data-ttu-id="ed805-245">Brak</span><span class="sxs-lookup"><span data-stu-id="ed805-245">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ed805-246">Poniższy przykład przedstawia sposób określania, czy element menu zostanie wyróżniona.</span><span class="sxs-lookup"><span data-stu-id="ed805-246">The following example shows how to determine whether a menu item is highlighted.</span></span>  
  
 [!code-csharp[MenuItems_snip#MenuItemIsHighlighted](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml.cs#menuitemishighlighted)]
 [!code-vb[MenuItems_snip#MenuItemIsHighlighted](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItems_snip/visualbasic/pane1.xaml.vb#menuitemishighlighted)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHighlightedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsHighlightedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsHighlightedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.IsHighlightedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsHighlightedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsHighlightedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-247">Identyfikuje <see cref="P:System.Windows.Controls.MenuItem.IsHighlighted" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-247">Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsHighlighted" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemItsOwnContainerOverride">
      <MemberSignature Language="C#" Value="protected override bool IsItemItsOwnContainerOverride (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsItemItsOwnContainerOverride(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.IsItemItsOwnContainerOverride(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsItemItsOwnContainerOverride (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsItemItsOwnContainerOverride(System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="ed805-248">Określony element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-248">Specified item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed805-249">Określa, czy określony element jest (lub kwalifikuje się być) własną <c>ItemContainer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-249">Determines if the specified item is (or is eligible to be) its own <c>ItemContainer</c>.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed805-250">
            <see langword="true" /> Jeśli element znajduje się jego własnej <c>ItemContainer</c>; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-250">
              <see langword="true" /> if the item is its own <c>ItemContainer</c>; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPressed">
      <MemberSignature Language="C#" Value="public bool IsPressed { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPressed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.IsPressed" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPressed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:  property bool IsPressed {  public:&#xA;bool get(); protected:&#xA; void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-251">Pobiera wartość wskazującą, czy <see cref="T:System.Windows.Controls.MenuItem" /> zostanie naciśnięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-251">Gets a value that indicates whether a <see cref="T:System.Windows.Controls.MenuItem" /> is pressed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed805-252">
            <see langword="true" /> Jeśli <see cref="T:System.Windows.Controls.MenuItem" /> jest wciśnięty; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-252">
              <see langword="true" /> if a <see cref="T:System.Windows.Controls.MenuItem" /> is pressed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ed805-253">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-253">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed805-254">Począwszy od programu .NET Framework w wersji 3.0 z dodatkiem Service Pack 1, <xref:System.Windows.Controls.MenuItem.IsPressed%2A> właściwość ma chronione metody ustawiającej.</span><span class="sxs-lookup"><span data-stu-id="ed805-254">Starting with the .NET Framework version 3.0 Service Pack 1, the <xref:System.Windows.Controls.MenuItem.IsPressed%2A> property has a protected setter.</span></span> <span data-ttu-id="ed805-255">Aby używać tej funkcji, aplikacja powinna wskazywać .NET Framework w wersji 3.5.</span><span class="sxs-lookup"><span data-stu-id="ed805-255">To use this functionality, your application should target the .NET Framework version 3.5.</span></span>  <span data-ttu-id="ed805-256">Aby uzyskać więcej informacji, zobacz [wersje programu .NET Framework i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="ed805-256">For more information, see [.NET Framework Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsPressed"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ed805-257">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="ed805-257">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ed805-258">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ed805-258">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.IsPressedProperty>|  
|<span data-ttu-id="ed805-259">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="ed805-259">Metadata properties set to `true`</span></span>|<span data-ttu-id="ed805-260">Brak</span><span class="sxs-lookup"><span data-stu-id="ed805-260">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ed805-261">Poniższy przykład przedstawia użycie <xref:System.Windows.Controls.MenuItem.IsPressed%2A> właściwości stylu elementu menu.</span><span class="sxs-lookup"><span data-stu-id="ed805-261">The following example shows how to use the <xref:System.Windows.Controls.MenuItem.IsPressed%2A> property in a menu item style.</span></span> <span data-ttu-id="ed805-262">Gdy element menu zostanie naciśnięty, styl jego pierwszego planu, rozmiaru tekstu i Zmień styl tekstu.</span><span class="sxs-lookup"><span data-stu-id="ed805-262">When the menu item is pressed, the style of its foreground, text size, and text style change.</span></span>  
  
 [!code-xaml[MenuItemsStyle_snip#MenuItemsIsPressed](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemsStyle_snip/CSharp/MyApp.xaml#menuitemsispressed)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPressedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsPressedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsPressedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.IsPressedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsPressedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsPressedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-263">Identyfikuje <see cref="P:System.Windows.Controls.MenuItem.IsPressed" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-263">Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsPressed" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubmenuOpen">
      <MemberSignature Language="C#" Value="public bool IsSubmenuOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSubmenuOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSubmenuOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSubmenuOpen { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-264">Pobiera lub ustawia wartość wskazującą, czy podmenu <see cref="T:System.Windows.Controls.MenuItem" /> jest otwarty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-264">Gets or sets a value that indicates whether the submenu of the <see cref="T:System.Windows.Controls.MenuItem" /> is open.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed805-265">
            <see langword="true" /> Jeśli podmenu <see cref="T:System.Windows.Controls.MenuItem" /> otwarte, a w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-265">
              <see langword="true" /> if the submenu of the <see cref="T:System.Windows.Controls.MenuItem" /> is open; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ed805-266">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-266">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed805-267">Gdy <xref:System.Windows.Controls.MenuItem.IsSubmenuOpen%2A> ustawiono `true`, ustawiono przechwytywanie myszy <xref:System.Windows.Controls.MenuItem> i jego poddrzewa.</span><span class="sxs-lookup"><span data-stu-id="ed805-267">When <xref:System.Windows.Controls.MenuItem.IsSubmenuOpen%2A> is set to `true`, mouse capture is set to the <xref:System.Windows.Controls.MenuItem> and its subtree.</span></span>  
  
<a name="dependencyPropertyInfo_IsSubmenuOpen"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ed805-268">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="ed805-268">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ed805-269">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ed805-269">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.IsSubmenuOpenProperty>|  
|<span data-ttu-id="ed805-270">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="ed805-270">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="ed805-271">Poniższy przykład przedstawia sposób otwierania podmenu <xref:System.Windows.Controls.MenuItem>.</span><span class="sxs-lookup"><span data-stu-id="ed805-271">The following example shows how to open a submenu of a <xref:System.Windows.Controls.MenuItem>.</span></span>  <span data-ttu-id="ed805-272">W tym przykładzie <xref:System.Windows.Controls.MenuItem> o nazwie `fileMenu` zawiera <xref:System.Windows.Controls.MenuItem> o nazwie `recentFiles` ma podmenu.</span><span class="sxs-lookup"><span data-stu-id="ed805-272">In this example, the <xref:System.Windows.Controls.MenuItem> called `fileMenu` contains a <xref:System.Windows.Controls.MenuItem> called `recentFiles` that has a submenu.</span></span> <span data-ttu-id="ed805-273">Gdy `fileMenu` jest otwarty, <xref:System.Windows.Controls.MenuItem.SubmenuOpened> zdarzenia i `FileMenu_Opened` obsługi zdarzeń otwiera podmenu `recentFiles`.</span><span class="sxs-lookup"><span data-stu-id="ed805-273">When `fileMenu` is opened, the <xref:System.Windows.Controls.MenuItem.SubmenuOpened> event is raised and the `FileMenu_Opened` event handler opens the submenu of `recentFiles`.</span></span>  
  
 [!code-xaml[MenuItems_snip#IsSubMenuOpenMenu](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml#issubmenuopenmenu)]  
  
 [!code-csharp[MenuItems_snip#IsSubMenuOpen](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml.cs#issubmenuopen)]
 [!code-vb[MenuItems_snip#IsSubMenuOpen](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItems_snip/visualbasic/pane1.xaml.vb#issubmenuopen)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubmenuOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsSubmenuOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsSubmenuOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.IsSubmenuOpenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSubmenuOpenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsSubmenuOpenProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-274">Identyfikuje <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-274">Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSuspendingPopupAnimation">
      <MemberSignature Language="C#" Value="public bool IsSuspendingPopupAnimation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSuspendingPopupAnimation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSuspendingPopupAnimation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSuspendingPopupAnimation { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-275">Pobiera informację, czy menu wstrzymuje animacji na jego <see cref="T:System.Windows.Controls.Primitives.Popup" /> formantu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-275">Gets whether a menu suspends animations on its <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed805-276">
            <see langword="true" /> Jeśli menu należy wstrzymać animacji na jego podręcznego; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-276">
              <see langword="true" /> if the menu should suspend animations on its popup; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ed805-277">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-277">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsSuspendingPopupAnimation"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ed805-278">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="ed805-278">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ed805-279">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ed805-279">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimationProperty>|  
|<span data-ttu-id="ed805-280">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="ed805-280">Metadata properties set to `true`</span></span>|<span data-ttu-id="ed805-281">Brak</span><span class="sxs-lookup"><span data-stu-id="ed805-281">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSuspendingPopupAnimationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsSuspendingPopupAnimationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsSuspendingPopupAnimationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSuspendingPopupAnimationProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsSuspendingPopupAnimationProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-282">Identyfikuje <see cref="P:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-282">Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ItemContainerTemplateSelector ItemContainerTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ItemContainerTemplateSelector ItemContainerTemplateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.ItemContainerTemplateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemContainerTemplateSelector As ItemContainerTemplateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ItemContainerTemplateSelector ^ ItemContainerTemplateSelector { System::Windows::Controls::ItemContainerTemplateSelector ^ get(); void set(System::Windows::Controls::ItemContainerTemplateSelector ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ItemContainerTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-283">Pobiera lub ustawia niestandardowej logiki do wybierania szablon używany do wyświetlania każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-283">Gets or sets the custom logic for choosing a template used to display each item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed805-284">Niestandardowy obiekt, który zawiera logikę i zwraca element kontenera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-284">A custom object that provides logic and returns an item container.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed805-285">Użyj <xref:System.Windows.Controls.ItemContainerTemplateSelector> wybierz kontenery innego elementu, jeśli elementów w kolekcji są tego samego typu i musisz podać niestandardowej logiki do Wybierz kontener elementu.</span><span class="sxs-lookup"><span data-stu-id="ed805-285">Use an <xref:System.Windows.Controls.ItemContainerTemplateSelector> to choose different item containers if the items in your collection are the same type and you need to provide custom logic to choose the item container.</span></span>  
  
<a name="dependencyPropertyInfo_ItemContainerTemplateSelector"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ed805-286">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="ed805-286">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ed805-287">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ed805-287">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.ItemContainerTemplateSelectorProperty>|  
|<span data-ttu-id="ed805-288">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="ed805-288">Metadata properties set to `true`</span></span>|<span data-ttu-id="ed805-289">Brak</span><span class="sxs-lookup"><span data-stu-id="ed805-289">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerTemplateSelectorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemContainerTemplateSelectorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemContainerTemplateSelectorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.ItemContainerTemplateSelectorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ItemContainerTemplateSelectorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ItemContainerTemplateSelectorProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-290">Identyfikuje <see cref="P:System.Windows.Controls.MenuItem.ItemContainerTemplateSelector" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-290">Identifies the <see cref="P:System.Windows.Controls.MenuItem.ItemContainerTemplateSelector" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAccessKey">
      <MemberSignature Language="C#" Value="protected override void OnAccessKey (System.Windows.Input.AccessKeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAccessKey(class System.Windows.Input.AccessKeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnAccessKey (e As AccessKeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnAccessKey(System::Windows::Input::AccessKeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.AccessKeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ed805-291">Dane zdarzenia <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-291">The event data for the <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed805-292">Odpowiada podczas <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> dla tego formantu jest wywoływany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-292">Responds when the <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> for this control is invoked.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ed805-293">Wywołuje się po wygenerowaniu drzewa szablonu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-293">Called when the template's tree is generated.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChecked">
      <MemberSignature Language="C#" Value="protected virtual void OnChecked (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChecked(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnChecked(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnChecked (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnChecked(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ed805-294">Dane zdarzenia <see cref="E:System.Windows.Controls.MenuItem.Checked" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-294">The event data for the <see cref="E:System.Windows.Controls.MenuItem.Checked" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed805-295">Wywoływane, gdy <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> staje się właściwość <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-295">Called when the <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> property becomes <see langword="true" />.</span>
          </span>
          <span data-ttu-id="ed805-296">Ta metoda zgłasza <see cref="E:System.Windows.Controls.MenuItem.Checked" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-296">This method raises the <see cref="E:System.Windows.Controls.MenuItem.Checked" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed805-297">Kontrolka wywołuje <xref:System.Windows.Controls.MenuItem.Checked> zdarzenia przez wywołanie metody <xref:System.Windows.UIElement.RaiseEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ed805-297">The control raises the <xref:System.Windows.Controls.MenuItem.Checked> event by calling <xref:System.Windows.UIElement.RaiseEvent%2A>.</span></span> <span data-ttu-id="ed805-298">Aby uzyskać więcej informacji, zobacz [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ed805-298">For more information, see [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ed805-299">W przypadku przesłaniania <see cref="M:System.Windows.Controls.MenuItem.OnChecked(System.Windows.RoutedEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Controls.MenuItem.OnChecked(System.Windows.RoutedEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ed805-299">When overriding <see cref="M:System.Windows.Controls.MenuItem.OnChecked(System.Windows.RoutedEventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Controls.MenuItem.OnChecked(System.Windows.RoutedEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnClick" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ed805-300">Wywoływane, gdy <see cref="T:System.Windows.Controls.MenuItem" /> zostanie kliknięty i zgłasza <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-300">Called when a <see cref="T:System.Windows.Controls.MenuItem" /> is clicked and raises a <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed805-301">Jeśli dziedziczą z <xref:System.Windows.Controls.MenuItem>, należy wywołać klasy podstawowej, aby uzyskać następujące zachowanie.</span><span class="sxs-lookup"><span data-stu-id="ed805-301">If you inherit from <xref:System.Windows.Controls.MenuItem>, be sure to call the base class to get the following behavior.</span></span>  
  
-   <span data-ttu-id="ed805-302">Przełączanie z <xref:System.Windows.Controls.MenuItem.IsChecked%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="ed805-302">Toggling of the <xref:System.Windows.Controls.MenuItem.IsChecked%2A> property.</span></span>  
  
-   <span data-ttu-id="ed805-303">Skoncentruj się ustawiany elementu menu.</span><span class="sxs-lookup"><span data-stu-id="ed805-303">Focus being set to the menu item.</span></span>  
  
-   <span data-ttu-id="ed805-304">Automatyzacja wywołać zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="ed805-304">Automation invoke event.</span></span>  
  
-   <span data-ttu-id="ed805-305"><xref:System.Windows.Controls.MenuItem.Click> zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="ed805-305"><xref:System.Windows.Controls.MenuItem.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ed805-306">Zawiera odpowiednie <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> implementacji dla tego formantu, jako część [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastruktury automatyzacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-306">Provides an appropriate <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> implementation for this control, as part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] automation infrastructure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed805-307">A <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> dla tego <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-307">A <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> for this <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ed805-308">Dane zdarzenia <see cref="E:System.Windows.UIElement.GotFocus" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-308">The event data for the <see cref="E:System.Windows.UIElement.GotFocus" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed805-309">Informuje, że klawiatura ma fokus w tym elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-309">Announces that the keyboard is focused on this element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInitialized">
      <MemberSignature Language="C#" Value="protected override void OnInitialized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInitialized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnInitialized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInitialized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInitialized(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ed805-310">Dane zdarzenia <see cref="E:System.Windows.FrameworkElement.Initialized" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-310">The event data for the <see cref="E:System.Windows.FrameworkElement.Initialized" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed805-311">Wywoływane, gdy <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> właściwość jest ustawiona na <see langword="true" /> i zgłasza <see cref="E:System.Windows.FrameworkElement.Initialized" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-311">Called when the <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> property is set to <see langword="true" /> and raises an <see cref="E:System.Windows.FrameworkElement.Initialized" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ed805-312">Dane zdarzenia <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-312">The event data for the <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed805-313">Wywoływane, gdy fokus jest już w lub w <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-313">Called when the focus is no longer on or within a <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemsChanged">
      <MemberSignature Language="C#" Value="protected override void OnItemsChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnItemsChanged(class System.Collections.Specialized.NotifyCollectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnItemsChanged (e As NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnItemsChanged(System::Collections::Specialized::NotifyCollectionChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ed805-314">Dane zdarzenia <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-314">The event data for the <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed805-315">Wywoływane, gdy <see cref="P:System.Windows.Controls.ItemsControl.Items" /> zmiany właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-315">Called when the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ed805-316">Dane zdarzenia <see cref="E:System.Windows.UIElement.KeyDown" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-316">The event data for the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed805-317">Odpowiada <see cref="E:System.Windows.UIElement.KeyDown" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-317">Responds to the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected override void OnMouseEnter (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseEnter(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseEnter(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ed805-318">Dane zdarzenia <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-318">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed805-319">Wywoływana, gdy mysz przejdzie <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-319">Called whenever the mouse enters a <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ed805-320">Dane zdarzenia <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-320">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed805-321">Wywoływana, gdy mysz opuści <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-321">Called whenever the mouse leaves a <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ed805-322">Dane zdarzenia <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-322">The event data for the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed805-323">Wywoływane po naciśnięciu lewego przycisku myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-323">Called when the left mouse button is pressed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ed805-324">Dane zdarzenia <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-324">The event data for the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed805-325">Wywołuje się po zwolnieniu lewego przycisku myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-325">Called when the left mouse button is released.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ed805-326">Dane zdarzenia <see cref="E:System.Windows.Input.Mouse.MouseMove" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-326">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseMove" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed805-327">Wywoływane, gdy wskaźnik myszy jest przesuwany nad elementu menu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-327">Called when the mouse is moved over a menu item.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ed805-328">Dane zdarzenia <see cref="E:System.Windows.UIElement.MouseRightButtonDown" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-328">The event data for the <see cref="E:System.Windows.UIElement.MouseRightButtonDown" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed805-329">Wywoływane po naciśnięciu prawego przycisku myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-329">Called when the right mouse button is pressed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ed805-330">Dane zdarzenia <see cref="E:System.Windows.UIElement.MouseRightButtonUp" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-330">The event data for the <see cref="E:System.Windows.UIElement.MouseRightButtonUp" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed805-331">Wywołuje się po zwolnieniu prawego przycisku myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-331">Called when the right mouse button is released.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSubmenuClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnSubmenuClosed (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSubmenuClosed(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnSubmenuClosed(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSubmenuClosed (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSubmenuClosed(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ed805-332">Dane zdarzenia <see cref="E:System.Windows.Controls.MenuItem.SubmenuClosed" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-332">The event data for the <see cref="E:System.Windows.Controls.MenuItem.SubmenuClosed" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed805-333">Wywoływane, gdy podmenu <see cref="T:System.Windows.Controls.MenuItem" /> jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-333">Called when the submenu of a <see cref="T:System.Windows.Controls.MenuItem" /> is closed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ed805-334">Ten przykład przedstawia sposób użycia <xref:System.Windows.Controls.MenuItem.OnSubmenuClosed%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="ed805-334">This example shows how to use the <xref:System.Windows.Controls.MenuItem.OnSubmenuClosed%2A> method.</span></span>  
  
 [!code-csharp[MenuItems_snip#SubmenuEventClosed2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml.cs#submenueventclosed2)]
 [!code-vb[MenuItems_snip#SubmenuEventClosed2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItems_snip/visualbasic/pane1.xaml.vb#submenueventclosed2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSubmenuOpened">
      <MemberSignature Language="C#" Value="protected virtual void OnSubmenuOpened (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSubmenuOpened(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnSubmenuOpened(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSubmenuOpened (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSubmenuOpened(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ed805-335">Dane zdarzenia <see cref="E:System.Windows.Controls.MenuItem.SubmenuOpened" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-335">The event data for the <see cref="E:System.Windows.Controls.MenuItem.SubmenuOpened" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed805-336">Wywoływane, gdy podmenu <see cref="T:System.Windows.Controls.MenuItem" /> jest otwarty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-336">Called when the submenu of a <see cref="T:System.Windows.Controls.MenuItem" /> is opened.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ed805-337">Ten przykład przedstawia sposób użycia <xref:System.Windows.Controls.MenuItem.OnSubmenuOpened%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="ed805-337">This example shows how to use the <xref:System.Windows.Controls.MenuItem.OnSubmenuOpened%2A> method.</span></span>  
  
 [!code-csharp[MenuItems_snip#SubmenuEventOpened2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml.cs#submenueventopened2)]
 [!code-vb[MenuItems_snip#SubmenuEventOpened2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItems_snip/visualbasic/pane1.xaml.vb#submenueventopened2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnchecked">
      <MemberSignature Language="C#" Value="protected virtual void OnUnchecked (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUnchecked(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnUnchecked(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUnchecked (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUnchecked(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ed805-338">Dane zdarzenia <see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-338">The event data for the <see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed805-339">Wywoływane, gdy <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> staje się właściwość <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-339">Called when the <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> property becomes <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ed805-340">Ta metoda zgłasza <see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-340">This method raises the <see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed805-341">Kontrolka wywołuje <xref:System.Windows.Controls.MenuItem.Unchecked> zdarzenia przez wywołanie metody <xref:System.Windows.UIElement.RaiseEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="ed805-341">The control raises the <xref:System.Windows.Controls.MenuItem.Unchecked> event by calling <xref:System.Windows.UIElement.RaiseEvent%2A>.</span></span> <span data-ttu-id="ed805-342">Aby uzyskać więcej informacji, zobacz [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ed805-342">For more information, see [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ed805-343">W przypadku przesłaniania <see cref="M:System.Windows.Controls.MenuItem.OnUnchecked(System.Windows.RoutedEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Controls.MenuItem.OnUnchecked(System.Windows.RoutedEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ed805-343">When overriding <see cref="M:System.Windows.Controls.MenuItem.OnUnchecked(System.Windows.RoutedEventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Controls.MenuItem.OnUnchecked(System.Windows.RoutedEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent">
          <span data-ttu-id="ed805-344">Stara wartość elementu nadrzędnego elementu wizualnego, lub wartość null, jeśli element wizualny nie ma elementu nadrzędnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-344">Old value of the parent of the visual, or null if the visual did not have a parent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed805-345">Wywoływane, gdy element nadrzędny elementu wizualnego <see cref="T:System.Windows.Controls.MenuItem" /> zmiany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-345">Called when the parent of the visual <see cref="T:System.Windows.Controls.MenuItem" /> changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="ed805-346">Element używany do wyświetlania określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-346">Element used to display the specified item.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="ed805-347">Określony element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-347">Specified item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed805-348">Przygotowuje określony element, aby wyświetlić określony element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-348">Prepares the specified element to display the specified item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed805-349">Przygotowywanie elementu może obejmować stosowanie stylów, ustawienia powiązania i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="ed805-349">Preparing the element may involve applying styles, setting bindings, and so on.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Role">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.MenuItemRole Role { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.MenuItemRole Role" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.Role" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Role As MenuItemRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::MenuItemRole Role { System::Windows::Controls::MenuItemRole get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.MenuItemRole</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-350">Pobiera wartość wskazującą, rola <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-350">Gets a value that indicates the role of a <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed805-351">Jeden z <see cref="T:System.Windows.Controls.MenuItemRole" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-351">One of the <see cref="T:System.Windows.Controls.MenuItemRole" /> values.</span>
          </span>
          <span data-ttu-id="ed805-352">Wartość domyślna to <see cref="F:System.Windows.Controls.MenuItemRole.TopLevelItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-352">The default is <see cref="F:System.Windows.Controls.MenuItemRole.TopLevelItem" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed805-353">Wartość <xref:System.Windows.Controls.MenuItem.Role%2A> zależy od relacji z <xref:System.Windows.Controls.Menu> i innych <xref:System.Windows.Controls.MenuItem> obiektów.</span><span class="sxs-lookup"><span data-stu-id="ed805-353">The value of <xref:System.Windows.Controls.MenuItem.Role%2A> depends on the relationship to the <xref:System.Windows.Controls.Menu> and other <xref:System.Windows.Controls.MenuItem> objects.</span></span>  
  
<a name="dependencyPropertyInfo_Role"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ed805-354">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="ed805-354">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ed805-355">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ed805-355">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.RoleProperty>|  
|<span data-ttu-id="ed805-356">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="ed805-356">Metadata properties set to `true`</span></span>|<span data-ttu-id="ed805-357">Brak</span><span class="sxs-lookup"><span data-stu-id="ed805-357">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RoleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RoleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.RoleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RoleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RoleProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-358">Identyfikuje <see cref="P:System.Windows.Controls.MenuItem.Role" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-358">Identifies the <see cref="P:System.Windows.Controls.MenuItem.Role" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeparatorStyleKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey SeparatorStyleKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey SeparatorStyleKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.SeparatorStyleKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SeparatorStyleKey As ResourceKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::ResourceKey ^ SeparatorStyleKey { System::Windows::ResourceKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-359">Pobiera klucz zasobu dla styl stosowany do <see cref="T:System.Windows.Controls.MenuItem" /> podczas <see cref="T:System.Windows.Controls.MenuItem" /> jest <see cref="T:System.Windows.Controls.Separator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-359">Gets the resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a <see cref="T:System.Windows.Controls.Separator" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed805-360">Klucz zasobu dla styl stosowany do <see cref="T:System.Windows.Controls.MenuItem" /> podczas <see cref="T:System.Windows.Controls.MenuItem" /> jest <see cref="T:System.Windows.Controls.Separator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-360">The resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a <see cref="T:System.Windows.Controls.Separator" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed805-361">Ta właściwość umożliwia zmienianie stylu <xref:System.Windows.Controls.Separator> w menu.</span><span class="sxs-lookup"><span data-stu-id="ed805-361">Use this property to change the style of a <xref:System.Windows.Controls.Separator> in a menu.</span></span>  
  
<a name="xamlAttributeUsage_SeparatorStyleKey"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="ed805-362">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="ed805-362">XAML Attribute Usage</span></span>  
 <span data-ttu-id="ed805-363"><*object* *property*={ **MenuItem.SeparatorStyleKey**}`"`/></span><span class="sxs-lookup"><span data-stu-id="ed805-363"><*object* *property*={ **MenuItem.SeparatorStyleKey**}`"`/></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed805-364">Poniższy przykład przedstawia użycie tej właściwości stylu <xref:System.Windows.Controls.Separator> w <xref:System.Windows.Controls.Menu>.</span><span class="sxs-lookup"><span data-stu-id="ed805-364">The following example shows how to use this property to style a <xref:System.Windows.Controls.Separator> in a <xref:System.Windows.Controls.Menu>.</span></span>  
  
 [!code-xaml[MenuStylesSnippet#4](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuStylesSnippet/CS/app.xaml#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldApplyItemContainerStyle">
      <MemberSignature Language="C#" Value="protected override bool ShouldApplyItemContainerStyle (System.Windows.DependencyObject container, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ShouldApplyItemContainerStyle(class System.Windows.DependencyObject container, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.ShouldApplyItemContainerStyle(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ShouldApplyItemContainerStyle (container As DependencyObject, item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ShouldApplyItemContainerStyle(System::Windows::DependencyObject ^ container, System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="container">
          <span data-ttu-id="ed805-365">Kontener, do którego zostanie zastosowana styl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-365">Container to which the style will be applied.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="ed805-366">Element, do którego należy kontenera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-366">Item to which the container belongs.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed805-367">Używany do określenia, czy ma być stosowana do kontenera elementu style.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-367">Used to determine whether to apply a style to the item container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed805-368">
            <see langword="true" /> Jeśli <see cref="T:System.Windows.Controls.MenuItem" /> nie jest <see cref="T:System.Windows.Controls.Separator" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-368">
              <see langword="true" /> if the <see cref="T:System.Windows.Controls.MenuItem" /> is not a <see cref="T:System.Windows.Controls.Separator" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StaysOpenOnClick">
      <MemberSignature Language="C#" Value="public bool StaysOpenOnClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StaysOpenOnClick" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.StaysOpenOnClick" />
      <MemberSignature Language="VB.NET" Value="Public Property StaysOpenOnClick As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StaysOpenOnClick { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-369">Pobiera lub ustawia wartość określającą, czy podmenu, w której ta <see cref="T:System.Windows.Controls.MenuItem" /> znajduje się nie powinna zamykać po kliknięciu tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-369">Gets or sets a value that indicates that the submenu in which this <see cref="T:System.Windows.Controls.MenuItem" /> is located should not close when this item is clicked.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed805-370">
            <see langword="true" /> Jeśli podmenu, w której ta <see cref="T:System.Windows.Controls.MenuItem" /> znajduje się nie powinna zamykać, gdy ten element jest klikniętej; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-370">
              <see langword="true" /> if the submenu in which this <see cref="T:System.Windows.Controls.MenuItem" /> is located should not close when this item is clicked; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ed805-371">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-371">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_StaysOpenOnClick"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ed805-372">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="ed805-372">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ed805-373">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ed805-373">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.StaysOpenOnClickProperty>|  
|<span data-ttu-id="ed805-374">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="ed805-374">Metadata properties set to `true`</span></span>|<span data-ttu-id="ed805-375">Brak</span><span class="sxs-lookup"><span data-stu-id="ed805-375">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ed805-376">W poniższym przykładzie użyto <xref:System.Windows.Controls.MenuItem.StaysOpenOnClick%2A> właściwość, aby utworzyć element w podmenu, którego nie zamknąć, gdy element zostanie kliknięty.</span><span class="sxs-lookup"><span data-stu-id="ed805-376">The following example uses the <xref:System.Windows.Controls.MenuItem.StaysOpenOnClick%2A> property to create an item in a submenu that does not close when the item is clicked.</span></span>  
  
 [!code-xaml[MenuItems_snip#SubmenuStaysOpen](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml#submenustaysopen)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaysOpenOnClickProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StaysOpenOnClickProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StaysOpenOnClickProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.StaysOpenOnClickProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StaysOpenOnClickProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StaysOpenOnClickProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-377">Identyfikuje <see cref="P:System.Windows.Controls.MenuItem.StaysOpenOnClick" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-377">Identifies the <see cref="P:System.Windows.Controls.MenuItem.StaysOpenOnClick" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmenuClosed">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler SubmenuClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler SubmenuClosed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.MenuItem.SubmenuClosed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SubmenuClosed As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ SubmenuClosed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-378">Występuje, gdy stan <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> zmiany właściwości <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-378">Occurs when the state of the <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> property changes to <see langword="false" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_SubmenuClosed"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ed805-379">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ed805-379">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ed805-380">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ed805-380">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.SubmenuClosedEvent>|  
|<span data-ttu-id="ed805-381">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ed805-381">Routing strategy</span></span>|<span data-ttu-id="ed805-382">Bubbling</span><span class="sxs-lookup"><span data-stu-id="ed805-382">Bubbling</span></span>|  
|<span data-ttu-id="ed805-383">Delegate</span><span class="sxs-lookup"><span data-stu-id="ed805-383">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="ed805-384">W poniższych przykładach pokazano, obsługi i wywoływania <xref:System.Windows.Controls.MenuItem.SubmenuClosed> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ed805-384">The following examples demonstrate calling and handling the <xref:System.Windows.Controls.MenuItem.SubmenuClosed> event.</span></span>  
  
 [!code-xaml[MenuItems_snip#SubmenuEvents1](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml#submenuevents1)]  
  
 [!code-csharp[MenuItems_snip#SubmenuEventClosed2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml.cs#submenueventclosed2)]
 [!code-vb[MenuItems_snip#SubmenuEventClosed2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItems_snip/visualbasic/pane1.xaml.vb#submenueventclosed2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmenuClosedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SubmenuClosedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SubmenuClosedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.SubmenuClosedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SubmenuClosedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SubmenuClosedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-385">Identyfikuje <see cref="E:System.Windows.Controls.MenuItem.SubmenuClosed" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-385">Identifies the <see cref="E:System.Windows.Controls.MenuItem.SubmenuClosed" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmenuHeaderTemplateKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey SubmenuHeaderTemplateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey SubmenuHeaderTemplateKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.SubmenuHeaderTemplateKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SubmenuHeaderTemplateKey As ResourceKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::ResourceKey ^ SubmenuHeaderTemplateKey { System::Windows::ResourceKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-386">Pobiera klucz zasobu dla styl stosowany do <see cref="T:System.Windows.Controls.MenuItem" /> podczas <see cref="T:System.Windows.Controls.MenuItem" /> jest nagłówkiem podmenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-386">Gets the resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a header of a submenu.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed805-387">Klucz zasobu dla styl stosowany do <see cref="T:System.Windows.Controls.MenuItem" /> podczas <see cref="T:System.Windows.Controls.MenuItem" /> jest nagłówkiem podmenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-387">The resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a header of a submenu.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed805-388">Ta właściwość umożliwia zmienianie stylu <xref:System.Windows.Controls.MenuItem> których <xref:System.Windows.Controls.MenuItem.Role%2A> właściwość jest ustawiona na <xref:System.Windows.Controls.MenuItemRole.SubmenuHeader?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ed805-388">Use this property to change the style of a <xref:System.Windows.Controls.MenuItem> whose <xref:System.Windows.Controls.MenuItem.Role%2A> property is set to <xref:System.Windows.Controls.MenuItemRole.SubmenuHeader?displayProperty=nameWithType>.</span></span>  
  
<a name="xamlAttributeUsage_SubmenuHeaderTemplateKey"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="ed805-389">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="ed805-389">XAML Attribute Usage</span></span>  
 <span data-ttu-id="ed805-390"><*object* *property*={ **MenuItem.SubmenuHeaderTemplateKey**}`"`/></span><span class="sxs-lookup"><span data-stu-id="ed805-390"><*object* *property*={ **MenuItem.SubmenuHeaderTemplateKey**}`"`/></span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmenuItemTemplateKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey SubmenuItemTemplateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey SubmenuItemTemplateKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.SubmenuItemTemplateKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SubmenuItemTemplateKey As ResourceKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::ResourceKey ^ SubmenuItemTemplateKey { System::Windows::ResourceKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-391">Pobiera klucz zasobu dla styl stosowany do <see cref="T:System.Windows.Controls.MenuItem" /> podczas <see cref="T:System.Windows.Controls.MenuItem" /> jest podmenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-391">Gets the resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a submenu.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed805-392">Klucz zasobu dla styl stosowany do <see cref="T:System.Windows.Controls.MenuItem" /> podczas <see cref="T:System.Windows.Controls.MenuItem" /> jest podmenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-392">The resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a submenu.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed805-393">Ta właściwość umożliwia zmienianie stylu <xref:System.Windows.Controls.MenuItem> których <xref:System.Windows.Controls.MenuItem.Role%2A> właściwość jest ustawiona na <xref:System.Windows.Controls.MenuItemRole.SubmenuItem?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ed805-393">Use this property to change the style of a <xref:System.Windows.Controls.MenuItem> whose <xref:System.Windows.Controls.MenuItem.Role%2A> property is set to <xref:System.Windows.Controls.MenuItemRole.SubmenuItem?displayProperty=nameWithType>.</span></span>  
  
<a name="xamlAttributeUsage_SubmenuItemTemplateKey"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="ed805-394">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="ed805-394">XAML Attribute Usage</span></span>  
 <span data-ttu-id="ed805-395"><*object* *property*={ **MenuItem.SubmenuItemTemplateKey**}`"`/></span><span class="sxs-lookup"><span data-stu-id="ed805-395"><*object* *property*={ **MenuItem.SubmenuItemTemplateKey**}`"`/></span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmenuOpened">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler SubmenuOpened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler SubmenuOpened" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.MenuItem.SubmenuOpened" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SubmenuOpened As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ SubmenuOpened;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-396">Występuje, gdy stan <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> zmiany właściwości <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-396">Occurs when the state of the <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> property changes to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_SubmenuOpened"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ed805-397">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ed805-397">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ed805-398">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ed805-398">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.SubmenuOpenedEvent>|  
|<span data-ttu-id="ed805-399">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ed805-399">Routing strategy</span></span>|<span data-ttu-id="ed805-400">Bubbling</span><span class="sxs-lookup"><span data-stu-id="ed805-400">Bubbling</span></span>|  
|<span data-ttu-id="ed805-401">Delegate</span><span class="sxs-lookup"><span data-stu-id="ed805-401">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="ed805-402">W poniższych przykładach pokazano, obsługi i wywoływania <xref:System.Windows.Controls.MenuItem.SubmenuOpened> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ed805-402">The following examples demonstrate calling and handling the <xref:System.Windows.Controls.MenuItem.SubmenuOpened> event.</span></span>  
  
 [!code-xaml[MenuItems_snip#SubmenuEvents1](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml#submenuevents1)]  
  
 [!code-csharp[MenuItems_snip#SubmenuEventOpened2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml.cs#submenueventopened2)]
 [!code-vb[MenuItems_snip#SubmenuEventOpened2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItems_snip/visualbasic/pane1.xaml.vb#submenueventopened2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmenuOpenedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SubmenuOpenedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SubmenuOpenedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.SubmenuOpenedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SubmenuOpenedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SubmenuOpenedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-403">Identyfikuje <see cref="E:System.Windows.Controls.MenuItem.SubmenuOpened" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-403">Identifies the <see cref="E:System.Windows.Controls.MenuItem.SubmenuOpened" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TopLevelHeaderTemplateKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey TopLevelHeaderTemplateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey TopLevelHeaderTemplateKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.TopLevelHeaderTemplateKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TopLevelHeaderTemplateKey As ResourceKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::ResourceKey ^ TopLevelHeaderTemplateKey { System::Windows::ResourceKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-404">Pobiera klucz zasobu dla styl stosowany do <see cref="T:System.Windows.Controls.MenuItem" /> podczas <see cref="T:System.Windows.Controls.MenuItem" /> jest nagłówkiem menu najwyższego poziomu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-404">Gets the resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a header of a top-level menu.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed805-405">Klucz zasobu dla styl stosowany do <see cref="T:System.Windows.Controls.MenuItem" /> podczas <see cref="T:System.Windows.Controls.MenuItem" /> jest nagłówkiem menu najwyższego poziomu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-405">The resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a header of a top-level menu.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed805-406">Ta właściwość umożliwia zmienianie stylu <xref:System.Windows.Controls.MenuItem> których <xref:System.Windows.Controls.MenuItem.Role%2A> właściwość jest ustawiona na <xref:System.Windows.Controls.MenuItemRole.TopLevelHeader?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ed805-406">Use this property to change the style of a <xref:System.Windows.Controls.MenuItem> whose <xref:System.Windows.Controls.MenuItem.Role%2A> property is set to <xref:System.Windows.Controls.MenuItemRole.TopLevelHeader?displayProperty=nameWithType>.</span></span>  
  
<a name="xamlAttributeUsage_TopLevelHeaderTemplateKey"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="ed805-407">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="ed805-407">XAML Attribute Usage</span></span>  
 <span data-ttu-id="ed805-408"><*obiekt* *właściwości*= { **MenuItem.TopLevelHeaderTemplateKey**}`"`/></span><span class="sxs-lookup"><span data-stu-id="ed805-408"><*object* *property*={ **MenuItem.TopLevelHeaderTemplateKey**}`"`/></span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TopLevelItemTemplateKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey TopLevelItemTemplateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey TopLevelItemTemplateKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.TopLevelItemTemplateKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TopLevelItemTemplateKey As ResourceKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::ResourceKey ^ TopLevelItemTemplateKey { System::Windows::ResourceKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-409">Pobiera klucz zasobu dla styl stosowany do <see cref="T:System.Windows.Controls.MenuItem" /> gdy jest typem najwyższego poziomu <see cref="T:System.Windows.Controls.MenuItem" /> które wywołują polecenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-409">Gets the resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when it is a top-level <see cref="T:System.Windows.Controls.MenuItem" /> that can invoke commands.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed805-410">Klucz zasobu dla styl stosowany do <see cref="T:System.Windows.Controls.MenuItem" /> gdy jest typem najwyższego poziomu <see cref="T:System.Windows.Controls.MenuItem" /> które wywołują polecenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-410">The resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when it is a top-level <see cref="T:System.Windows.Controls.MenuItem" /> that can invoke commands.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed805-411">Ta właściwość umożliwia zmienianie stylu <xref:System.Windows.Controls.MenuItem> których <xref:System.Windows.Controls.MenuItem.Role%2A> właściwość jest ustawiona na <xref:System.Windows.Controls.MenuItemRole.TopLevelItem?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ed805-411">Use this property to change the style of a <xref:System.Windows.Controls.MenuItem> whose <xref:System.Windows.Controls.MenuItem.Role%2A> property is set to <xref:System.Windows.Controls.MenuItemRole.TopLevelItem?displayProperty=nameWithType>.</span></span>  
  
<a name="xamlAttributeUsage_TopLevelItemTemplateKey"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="ed805-412">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="ed805-412">XAML Attribute Usage</span></span>  
 <span data-ttu-id="ed805-413"><*obiekt* *właściwości*= { **MenuItem.TopLevelItemTemplateKey**}`"`/></span><span class="sxs-lookup"><span data-stu-id="ed805-413"><*object* *property*={ **MenuItem.TopLevelItemTemplateKey**}`"`/></span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unchecked">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Unchecked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Unchecked" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.MenuItem.Unchecked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Unchecked As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Unchecked;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-414">Występuje, gdy <see cref="T:System.Windows.Controls.MenuItem" /> nie jest zaznaczone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-414">Occurs when a <see cref="T:System.Windows.Controls.MenuItem" /> is unchecked.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_Unchecked"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="ed805-415">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="ed805-415">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ed805-416">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ed805-416">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.UncheckedEvent>|  
|<span data-ttu-id="ed805-417">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="ed805-417">Routing strategy</span></span>|<span data-ttu-id="ed805-418">Bubbling</span><span class="sxs-lookup"><span data-stu-id="ed805-418">Bubbling</span></span>|  
|<span data-ttu-id="ed805-419">Delegate</span><span class="sxs-lookup"><span data-stu-id="ed805-419">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="ed805-420">W poniższym przykładzie pokazano Obsługa <xref:System.Windows.Controls.MenuItem.Unchecked> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ed805-420">The following example demonstrates handling the <xref:System.Windows.Controls.MenuItem.Unchecked> event.</span></span>  
  
 [!code-xaml[MenuItemCommandsAndEvents#3](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml#3)]  
  
 [!code-csharp[MenuItemCommandsAndEvents#4](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml.cs#4)]
 [!code-vb[MenuItemCommandsAndEvents#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItemCommandsAndEvents/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UncheckedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent UncheckedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent UncheckedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.UncheckedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UncheckedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ UncheckedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-421">Identyfikuje <see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> kierowanego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-421">Identifies the <see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesItemContainerTemplate">
      <MemberSignature Language="C#" Value="public bool UsesItemContainerTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesItemContainerTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.UsesItemContainerTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property UsesItemContainerTemplate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsesItemContainerTemplate { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-422">Pobiera lub ustawia wartość wskazującą, czy menu wybiera kontenery innego elementu, w zależności od typu elementu w kolekcji źródłowej lub niektóre inne heurystycznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-422">Gets or sets a value that indicates whether the menu selects different item containers, depending on the type of the item in the underlying collection or some other heuristic.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed805-423">
            <see langword="true" /> menu wybiera kontenery innego elementu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-423">
              <see langword="true" /> the menu selects different item containers; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ed805-424">Domyślnie zarejestrowanych <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-424">The registered default is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ed805-425">Aby uzyskać więcej informacji o to, co może mieć wpływ wartości, zobacz [pierwszeństwo wartość właściwości zależności](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-425">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed805-426">Ta właściwość jest przydatna, jeśli chcesz utworzyć menu przez powiązanie do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="ed805-426">This property is useful if you want to create a menu by binding to a collection.</span></span>  <span data-ttu-id="ed805-427">Kontener elementu jest element interfejsu użytkownika, który wyświetla obiektu w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="ed805-427">The item container is the UI element that displays the object in a collection.</span></span> <span data-ttu-id="ed805-428">Jeśli chcesz powiązać do kolekcji można utworzyć menu, które zawiera <xref:System.Windows.Controls.MenuItem> obiektów i <xref:System.Windows.Controls.Separator> obiektów, ustaw <xref:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate%2A> właściwości na wartość PRAWDA, a następnie utworzyć <xref:System.Windows.Controls.ItemContainerTemplate> dla każdego typu obiektu w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="ed805-428">If you want to bind to a collection to create a menu that contains <xref:System.Windows.Controls.MenuItem> objects and <xref:System.Windows.Controls.Separator> objects, set the <xref:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate%2A> property to true and create an <xref:System.Windows.Controls.ItemContainerTemplate> for each type of object in your collection.</span></span>  <span data-ttu-id="ed805-429">Każdy <xref:System.Windows.Controls.ItemContainerTemplate> musi zawierać element <xref:System.Windows.Controls.MenuItem> lub <xref:System.Windows.Controls.Separator>.</span><span class="sxs-lookup"><span data-stu-id="ed805-429">Each <xref:System.Windows.Controls.ItemContainerTemplate> must contain either a <xref:System.Windows.Controls.MenuItem> or a <xref:System.Windows.Controls.Separator>.</span></span>  
  
<a name="dependencyPropertyInfo_UsesItemContainerTemplate"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ed805-430">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="ed805-430">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ed805-431">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ed805-431">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.UsesItemContainerTemplateProperty>|  
|<span data-ttu-id="ed805-432">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="ed805-432">Metadata properties set to `true`</span></span>|<span data-ttu-id="ed805-433">Brak</span><span class="sxs-lookup"><span data-stu-id="ed805-433">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesItemContainerTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty UsesItemContainerTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty UsesItemContainerTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.UsesItemContainerTemplateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UsesItemContainerTemplateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ UsesItemContainerTemplateProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed805-434">Identyfikuje <see cref="P:System.Windows.Controls.MenuItem.UsesItemContainerTemplate" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed805-434">Identifies the <see cref="P:System.Windows.Controls.MenuItem.UsesItemContainerTemplate" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>