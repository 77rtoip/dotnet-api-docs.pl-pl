<Type Name="ExceptionValidationRule" FullName="System.Windows.Controls.ExceptionValidationRule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fa701ced69d4e6b87cbb1f8c4d3356d214de4a6e" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69215883" /></Metadata><TypeSignature Language="C#" Value="public sealed class ExceptionValidationRule : System.Windows.Controls.ValidationRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExceptionValidationRule extends System.Windows.Controls.ValidationRule" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ExceptionValidationRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExceptionValidationRule&#xA;Inherits ValidationRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExceptionValidationRule sealed : System::Windows::Controls::ValidationRule" />
  <TypeSignature Language="F#" Value="type ExceptionValidationRule = class&#xA;    inherit ValidationRule" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ValidationRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje regułę, która sprawdza wyjątki, które są zgłaszane podczas aktualizacji właściwości źródła powiązania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Model powiązania <xref:System.Windows.Data.Binding.ValidationRules%2A> <xref:System.Windows.Data.Binding> danych umożliwia skojarzenie z obiektem. [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Controls.ExceptionValidationRule> Klasa jest wbudowaną regułą, która sprawdza wyjątki, które są zgłaszane podczas aktualizacji właściwości źródła powiązania. Możesz podać logikę niestandardową, aby określić, jak aparat powiązania obsługuje te wyjątki <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>przy użyciu. Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>.  
  
 Alternatywna składnia służąca do <xref:System.Windows.Controls.ExceptionValidationRule> ustawienia jawnie polega na <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> ustawieniu właściwości `true` <xref:System.Windows.Data.Binding> na obiekt lub <xref:System.Windows.Data.MultiBinding> .  
  
 Można utworzyć regułę niestandardową, tworząc klasę, która pochodzi od <xref:System.Windows.Controls.ValidationRule>. Aby uzyskać więcej informacji i szczegółowe omówienie walidacji danych, zobacz temat [powiązanie danych — omówienie](~/docs/framework/wpf/data/data-binding-overview.md).  
  
   
  
## Examples  
 <xref:System.Windows.Data.Binding.ValidationRules%2A> Właściwość przyjmuje<xref:System.Windows.Controls.ValidationRule> kolekcję obiektów. Poniższy przykład używa <xref:System.Windows.Controls.TextBox.Text%2A?displayProperty=nameWithType> jako właściwości target powiązania i `StartPrice` (Integer) jako właściwość źródła powiązania. Gdy użytkownik wprowadzi wartość, której nie można przekonwertować na liczbę całkowitą, zostanie zgłoszony wyjątek, co spowoduje <xref:System.Windows.Controls.ExceptionValidationRule> unieważnienie wartości docelowej.  
  
 [!code-xaml[DataBindingLab#DefaultValidation](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/AddProductWindow.xaml#defaultvalidation)]  
  
 Domyślnie, gdy występuje błąd walidacji, <xref:System.Windows.Controls.TextBox> pojawia się z czerwonym obramowaniem. Opcjonalnie można napisać niestandardowy <xref:System.Windows.Controls.Validation.ErrorTemplate%2A> , aby określić, w jaki sposób użytkownik ma zostać powiadomiony o błędzie walidacji.  
  
 Aby uzyskać więcej informacji na temat sprawdzania poprawności danych, zobacz temat [powiązanie danych — omówienie](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 Aby zapoznać się z kompletnym przykładem, zobacz [Demonstracja powiązania danych](https://go.microsoft.com/fwlink/?LinkID=163703).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.ValidationRule" />
    <altmember cref="T:System.Windows.Controls.DataErrorValidationRule" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExceptionValidationRule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ExceptionValidationRule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExceptionValidationRule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override System.Windows.Controls.ValidationResult Validate (object value, System.Globalization.CultureInfo cultureInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Windows.Controls.ValidationResult Validate(object value, class System.Globalization.CultureInfo cultureInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ExceptionValidationRule.Validate(System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Windows::Controls::ValidationResult ^ Validate(System::Object ^ value, System::Globalization::CultureInfo ^ cultureInfo);" />
      <MemberSignature Language="F#" Value="override this.Validate : obj * System.Globalization.CultureInfo -&gt; System.Windows.Controls.ValidationResult" Usage="exceptionValidationRule.Validate (value, cultureInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">Wartość (z celu powiązania) do sprawdzenia.</param>
        <param name="cultureInfo">Kultura, która ma być używana w tej regule.</param>
        <summary>Wykonuje sprawdzanie poprawności dla wartości.</summary>
        <returns>Element <see cref="T:System.Windows.Controls.ValidationResult" /> obiektu.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
  </Members>
</Type>
