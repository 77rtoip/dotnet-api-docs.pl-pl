<Type Name="TextChangedEventArgs" FullName="System.Windows.Controls.TextChangedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ccb4f406fd71c57756014f5eeb9d18e9951c03e7" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69212549" /></Metadata><TypeSignature Language="C#" Value="public class TextChangedEventArgs : System.Windows.RoutedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextChangedEventArgs extends System.Windows.RoutedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.TextChangedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class TextChangedEventArgs&#xA;Inherits RoutedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextChangedEventArgs : System::Windows::RoutedEventArgs" />
  <TypeSignature Language="F#" Value="type TextChangedEventArgs = class&#xA;    inherit RoutedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.RoutedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Dostarcza dane dla <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> zdarzenia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład wyświetla liczbę razy, gdy tekst <xref:System.Windows.Controls.TextBox> zostanie zmieniony. Poniżej znajduje się kod XAML dla przykładu.  
  
 [!code-xaml[TextBoxMiscSnippets_snip#DetectChangedTextExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/detectchangedtextexample.xaml#detectchangedtextexamplewholepage)]  
  
 Poniżej znajduje się kod dla przykładu.  
  
 [!code-csharp[TextBoxMiscSnippets_snip#DetectChangedTextCodeExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/detectchangedtextexample.xaml.cs#detectchangedtextcodeexamplewholepage)]
 [!code-vb[TextBoxMiscSnippets_snip#DetectChangedTextCodeExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/visualbasic/detectchangedtextexample.xaml.vb#detectchangedtextcodeexamplewholepage)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Controls.TextChangedEventArgs" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextChangedEventArgs (System.Windows.RoutedEvent id, System.Windows.Controls.UndoAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.RoutedEvent id, valuetype System.Windows.Controls.UndoAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextChangedEventArgs.#ctor(System.Windows.RoutedEvent,System.Windows.Controls.UndoAction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (id As RoutedEvent, action As UndoAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextChangedEventArgs(System::Windows::RoutedEvent ^ id, System::Windows::Controls::UndoAction action);" />
      <MemberSignature Language="F#" Value="new System.Windows.Controls.TextChangedEventArgs : System.Windows.RoutedEvent * System.Windows.Controls.UndoAction -&gt; System.Windows.Controls.TextChangedEventArgs" Usage="new System.Windows.Controls.TextChangedEventArgs (id, action)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.Windows.RoutedEvent" />
        <Parameter Name="action" Type="System.Windows.Controls.UndoAction" />
      </Parameters>
      <Docs>
        <param name="id">Zdarzenie [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)].</param>
        <param name="action"><see cref="P:System.Windows.Controls.TextChangedEventArgs.UndoAction" /> Spowodowane zmianą tekstu.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.Controls.TextChangedEventArgs" /> klasy, używając określonego identyfikatora zdarzenia i akcji Cofnij.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextChangedEventArgs (System.Windows.RoutedEvent id, System.Windows.Controls.UndoAction action, System.Collections.Generic.ICollection&lt;System.Windows.Controls.TextChange&gt; changes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.RoutedEvent id, valuetype System.Windows.Controls.UndoAction action, class System.Collections.Generic.ICollection`1&lt;class System.Windows.Controls.TextChange&gt; changes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextChangedEventArgs.#ctor(System.Windows.RoutedEvent,System.Windows.Controls.UndoAction,System.Collections.Generic.ICollection{System.Windows.Controls.TextChange})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (id As RoutedEvent, action As UndoAction, changes As ICollection(Of TextChange))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextChangedEventArgs(System::Windows::RoutedEvent ^ id, System::Windows::Controls::UndoAction action, System::Collections::Generic::ICollection&lt;System::Windows::Controls::TextChange ^&gt; ^ changes);" />
      <MemberSignature Language="F#" Value="new System.Windows.Controls.TextChangedEventArgs : System.Windows.RoutedEvent * System.Windows.Controls.UndoAction * System.Collections.Generic.ICollection&lt;System.Windows.Controls.TextChange&gt; -&gt; System.Windows.Controls.TextChangedEventArgs" Usage="new System.Windows.Controls.TextChangedEventArgs (id, action, changes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.Windows.RoutedEvent" />
        <Parameter Name="action" Type="System.Windows.Controls.UndoAction" />
        <Parameter Name="changes" Type="System.Collections.Generic.ICollection&lt;System.Windows.Controls.TextChange&gt;" />
      </Parameters>
      <Docs>
        <param name="id">Zdarzenie [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)].</param>
        <param name="action"><see cref="P:System.Windows.Controls.TextChangedEventArgs.UndoAction" /> Spowodowane zmianą tekstu.</param>
        <param name="changes">Zmiany, które wystąpiły w trakcie tego zdarzenia. Aby uzyskać więcej informacji, zobacz <see cref="P:System.Windows.Controls.TextChangedEventArgs.Changes" />.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.Controls.TextChangedEventArgs" /> klasy, używając określonego identyfikatora zdarzenia, akcji Cofnij i zmiany tekstu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.TextChangedEventArgs.%23ctor%2A>wprowadzono w .NET Framework w wersji 3,5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Changes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Windows.Controls.TextChange&gt; Changes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.Windows.Controls.TextChange&gt; Changes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextChangedEventArgs.Changes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Changes As ICollection(Of TextChange)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::Windows::Controls::TextChange ^&gt; ^ Changes { System::Collections::Generic::ICollection&lt;System::Windows::Controls::TextChange ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Changes : System.Collections.Generic.ICollection&lt;System.Windows.Controls.TextChange&gt;" Usage="System.Windows.Controls.TextChangedEventArgs.Changes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Windows.Controls.TextChange&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję obiektów, która zawiera informacje o zmianach, które wystąpiły.</summary>
        <value>Kolekcja obiektów, która zawiera informacje o zmianach, które wystąpiły.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Istnieje jeden <xref:System.Windows.Controls.TextChange> obiekt dla każdej kolejnej zmiany w kontrolce. W jednym wystąpieniu <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> zdarzenia może wystąpić kilka kolejnych zmian, gdy zmiana pociąga za sobą zmianę struktury dokumentu bazowego.  
  
 Załóżmy na <xref:System.Windows.Controls.RichTextBox> przykład, że zawiera ciąg `"This is some text."` , który <xref:System.Windows.Controls.RichTextBox.Document%2A?displayProperty=nameWithType> jest `<Paragraph><Run>This is some text.</Run></Paragraph>`strukturą elementu. Jeśli użytkownik pogrubi słowa `"is some"`, struktura podstawowych <xref:System.Windows.Documents.FlowDocument> zmian `<Paragraph><Run>This </Run><Run  FontWeight="Bold">is some</Run><Run> text.</Run></Paragraph>`. Istnieją w rzeczywistości cztery zmiany, które miały miejsce w wyniku działania użytkownika:  
  
1.  Symbol zostanie usunięty i dodany przed wyrazem `This`. `<Run>`  
  
2.  Symbole `</Run><Run>` są dodawane po wyrazie `This`.  
  
3.  Symbole `</Run><Run>` są dodawane po wyrazie `some`.  
  
4.  Symbol zostanie usunięty i dodany po wyrazie `Text`. `</Run>`  
  
 Ogólnie rzecz biorąc, następujące wartości będą zawsze prawdziwe:  
  
-   Zmiany, które wystąpiły, powodują, że dokument jest w prawidłowym stanie.  
  
-   Kolekcja jest uporządkowana kolejno, w odniesieniu do miejsca, w którym nastąpiła zmiana w formancie.  Na przykład <xref:System.Windows.Controls.TextChange> obiekt, który reprezentuje zmianę w pozycji 2, jest <xref:System.Windows.Controls.TextChange> przed obiektem, który reprezentuje zmianę w pozycji 10.  
  
-   Dwa <xref:System.Windows.Controls.TextChange> obiekty nie reprezentują nakładających się obszarów.  <xref:System.Windows.Controls.TextChange.Offset%2A> Wartość i <xref:System.Windows.Controls.TextChange> <xref:System.Windows.Controls.TextChange.Offset%2A> wartość jednego obiektu<xref:System.Windows.Controls.TextChange> jest zawsze mniejsza lub równa wartości następnego obiektu w kolekcji. <xref:System.Windows.Controls.TextChange.AddedLength%2A> <xref:System.Windows.Controls.TextChange.Offset%2A> Analogicznie, wartość i <xref:System.Windows.Controls.TextChange> <xref:System.Windows.Controls.TextChange.RemovedLength%2A> wartość jednego obiektu jest zawsze <xref:System.Windows.Controls.TextChange.Offset%2A> mniejsza lub równa wartości następnego <xref:System.Windows.Controls.TextChange> obiektu w kolekcji.  
  
-   Kolekcja odzwierciedla wszelkie zmiany, nawet jeśli nie ma żadnej zmiany w sieci. W poprzednim przykładzie żadna z pierwszych lub czwartych zmian nie powoduje zmiany w sieci, ponieważ każdy po prostu usunął i doda `<Run>` odpowiednio symbole i. `</Run>` Jednak symbole zostały faktycznie usunięte i dodane, więc są zawarte w kolekcji.  
  
 Jeśli zdarzenie występuje w wyniku zmiany właściwości, <xref:System.Windows.Controls.TextChangedEventArgs.Changes%2A> jest pustą kolekcją. <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged>  W poprzednim przykładzie, jeśli użytkownik pogrubi cały ciąg <xref:System.Windows.Documents.TextElement.FontWeight%2A> , właściwość <xref:System.Windows.Documents.Run> jest ustawiona na <xref:System.Windows.FontWeights.Bold%2A>, ale nic nie zostanie dodane lub usunięte z dokumentu, więc <xref:System.Windows.Controls.TextChangedEventArgs.Changes%2A> jest puste.  
  
 <xref:System.Windows.Controls.TextChangedEventArgs.Changes%2A>wprowadzono w .NET Framework w wersji 3,5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextChangedEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberSignature Language="F#" Value="override this.InvokeEventHandler : Delegate * obj -&gt; unit" Usage="textChangedEventArgs.InvokeEventHandler (genericHandler, genericTarget)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">Procedura obsługi do wywołania.</param>
        <param name="genericTarget">Bieżący obiekt wzdłuż trasy zdarzenia.</param>
        <summary>Wykonuje odpowiednie rzutowanie typu w celu wywołania delegata bezpiecznego <see cref="T:System.Windows.Controls.TextChangedEventHandler" /> typu <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> dla zdarzenia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UndoAction">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.UndoAction UndoAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.UndoAction UndoAction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextChangedEventArgs.UndoAction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UndoAction As UndoAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::UndoAction UndoAction { System::Windows::Controls::UndoAction get(); };" />
      <MemberSignature Language="F#" Value="member this.UndoAction : System.Windows.Controls.UndoAction" Usage="System.Windows.Controls.TextChangedEventArgs.UndoAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.UndoAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera informacje o tym, jak stos cofania jest przyczyną lub ma wpływ na tę zmianę tekstu</summary>
        <value><see cref="T:System.Windows.Controls.UndoAction" /> Odpowiednie dla tej zmiany tekstu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
