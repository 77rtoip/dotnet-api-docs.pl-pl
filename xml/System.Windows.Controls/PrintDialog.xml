<Type Name="PrintDialog" FullName="System.Windows.Controls.PrintDialog">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0fe1880905b340c6191da4f69df4f07964884dd4" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36565583" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PrintDialog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PrintDialog extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.PrintDialog" />
  <TypeSignature Language="VB.NET" Value="Public Class PrintDialog" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrintDialog" />
  <TypeSignature Language="F#" Value="type PrintDialog = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Wywołuje standardowe okno dialogowe drukowania Microsoft Windows, który konfiguruje <see cref="T:System.Printing.PrintTicket" /> i <see cref="T:System.Printing.PrintQueue" /> zgodnie z danych wejściowych użytkownika, a następnie drukuje dokument.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użytkownik może używać **drukowanie** okno dialogowe umożliwiające wybranie drukarki, jest skonfigurowana i wykonywać zadania drukowania.  
  
 Mówiąc ściślej, można użyć <xref:System.Windows.Controls.PrintDialog.PrintDocument%2A> metody bez konieczności otwierania okna dialogowego. W tym sensie formant może służyć jako niewidocznym składnik drukowania. Jednak ze względu na wydajność, byłoby lepiej użyć <xref:System.Printing.PrintQueue.AddJob%2A> metody lub jedną z wielu <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> i <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> metody <xref:System.Windows.Xps.XpsDocumentWriter>. Aby uzyskać więcej informacji na ten temat, zobacz [porady: programowane drukowanie pliki XPS](~/docs/framework/wpf/advanced/how-to-programmatically-print-xps-files.md).  
  
 Nie należy mylić tej klasy <xref:System.Windows.Controls.PrintDialog?displayProperty=nameWithType>, z <xref:System.Windows.Forms.PrintDialog?displayProperty=nameWithType>. Drugie jest używany z aplikacji formularzy systemu Windows. <xref:System.Windows.Controls.PrintDialog?displayProperty=nameWithType> jest używany z aplikacji Windows Presentation Foundation.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak utworzyć wystąpienie i wyświetlić prostą <xref:System.Windows.Controls.PrintDialog> przy użyciu [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] znaczników i kodu.  
  
 [!code-xaml[PrintDialog#2](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml#2)]  
  
 ...  
  
 [!code-csharp[PrintDialog#1](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml.cs#1)]
 [!code-vb[PrintDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintDialog/visualbasic/window1.xaml.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PrintDialog.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintDialog();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Controls.PrintDialog" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentPageEnabled">
      <MemberSignature Language="C#" Value="public bool CurrentPageEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CurrentPageEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.CurrentPageEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrentPageEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CurrentPageEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentPageEnabled : bool with get, set" Usage="System.Windows.Controls.PrintDialog.CurrentPageEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy włączono opcję, aby wydrukować bieżącą stronę.</summary>
        <value>
          <see langword="true" /> Jeśli włączono opcję, aby wydrukować bieżącą stronę; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPage">
      <MemberSignature Language="C#" Value="public uint MaxPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 MaxPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.MaxPage" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxPage As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt32 MaxPage { System::UInt32 get(); void set(System::UInt32 value); };" />
      <MemberSignature Language="F#" Value="member this.MaxPage : uint32 with get, set" Usage="System.Windows.Controls.PrintDialog.MaxPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia maksymalną liczbę stron, która jest dozwolona w zakresach strony.</summary>
        <value>A <see cref="T:System.UInt32" /> reprezentujący najwyższy numer strony, którą można użyć w zakresie strony w ** okno dialogowe drukowania **.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użytkownicy, którzy klikną **drukowanie** podczas **drukowanie** okno dialogowe ma ustawioną wartość wydrukować strony poza zakresem, który jest uporządkowany według <xref:System.Windows.Controls.PrintDialog.MaxPage%2A> i <xref:System.Windows.Controls.PrintDialog.MinPage%2A> wartości zostanie wyświetlony komunikat o błędzie, udzielanie porad je z maksymalne i minimalne numerów. Nic nie są drukowane.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Właściwość jest ustawiany na wartość mniej niż 1.</exception>
      </Docs>
    </Member>
    <Member MemberName="MinPage">
      <MemberSignature Language="C#" Value="public uint MinPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 MinPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.MinPage" />
      <MemberSignature Language="VB.NET" Value="Public Property MinPage As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt32 MinPage { System::UInt32 get(); void set(System::UInt32 value); };" />
      <MemberSignature Language="F#" Value="member this.MinPage : uint32 with get, set" Usage="System.Windows.Controls.PrintDialog.MinPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia najniższy numer strony, jaki jest dozwolony w zakresach strony.</summary>
        <value>A <see cref="T:System.UInt32" /> reprezentujący najniższy numer strony, którą można użyć w zakresie strony w ** okno dialogowe drukowania **.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użytkownicy, którzy klikną **drukowanie** podczas **drukowanie** okno dialogowe ma ustawioną wartość wydrukować strony poza zakresem, który jest uporządkowany według <xref:System.Windows.Controls.PrintDialog.MaxPage%2A> i <xref:System.Windows.Controls.PrintDialog.MinPage%2A> wartości zostanie wyświetlony komunikat o błędzie, udzielanie porad je z maksymalne i minimalne numerów. Nic nie są drukowane.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Właściwość jest ustawiany na wartość mniej niż 1.</exception>
      </Docs>
    </Member>
    <Member MemberName="PageRange">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.PageRange PageRange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.PageRange PageRange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.PageRange" />
      <MemberSignature Language="VB.NET" Value="Public Property PageRange As PageRange" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::PageRange PageRange { System::Windows::Controls::PageRange get(); void set(System::Windows::Controls::PageRange value); };" />
      <MemberSignature Language="F#" Value="member this.PageRange : System.Windows.Controls.PageRange with get, set" Usage="System.Windows.Controls.PrintDialog.PageRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.PageRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zakres stron do drukowania, kiedy <see cref="P:System.Windows.Controls.PrintDialog.PageRangeSelection" /> ma ustawioną wartość <see cref="F:System.Windows.Controls.PageRangeSelection.UserPages" />.</summary>
        <value>A <see cref="T:System.Windows.Controls.PageRange" /> reprezentujący zakresu stron, które są drukowane.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="T:System.Windows.Controls.PageRange" /> Obiekt używany do ustawienia właściwości ma początek zakresu albo końca zakresu ustawioną wartość, która jest mniejsza niż 1.</exception>
      </Docs>
    </Member>
    <Member MemberName="PageRangeSelection">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.PageRangeSelection PageRangeSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.PageRangeSelection PageRangeSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.PageRangeSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property PageRangeSelection As PageRangeSelection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::PageRangeSelection PageRangeSelection { System::Windows::Controls::PageRangeSelection get(); void set(System::Windows::Controls::PageRangeSelection value); };" />
      <MemberSignature Language="F#" Value="member this.PageRangeSelection : System.Windows.Controls.PageRangeSelection with get, set" Usage="System.Windows.Controls.PrintDialog.PageRangeSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.PageRangeSelection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Controls.PageRangeSelection" /> dla tego wystąpienia <see cref="T:System.Windows.Controls.PrintDialog" />.</summary>
        <value>
          <see cref="T:System.Windows.Controls.PageRangeSelection" /> Wartość, która reprezentuje typ zakresu stron do drukowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład przedstawia sposób ustawiania <xref:System.Windows.Controls.PrintDialog.PageRangeSelection%2A> właściwości przy użyciu [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] znaczników i kodu.  
  
 [!code-xaml[PrintDialog#2](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml#2)]  
  
 ...  
  
 [!code-csharp[PrintDialog#1](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml.cs#1)]
 [!code-vb[PrintDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintDialog/visualbasic/window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintableAreaHeight">
      <MemberSignature Language="C#" Value="public double PrintableAreaHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PrintableAreaHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.PrintableAreaHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrintableAreaHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PrintableAreaHeight { double get(); };" />
      <MemberSignature Language="F#" Value="member this.PrintableAreaHeight : double" Usage="System.Windows.Controls.PrintDialog.PrintableAreaHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wysokość obszar drukowania strony.</summary>
        <value>A <see cref="T:System.Double" /> reprezentujący wysokość obszar drukowania strony.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład przedstawia sposób uzyskać wartość <xref:System.Windows.Controls.PrintDialog.PrintableAreaHeight%2A> właściwości przy użyciu [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] znaczników i kodu.  
  
 [!code-xaml[PrintDialog#4](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml#4)]  
  
 ...  
  
 [!code-csharp[PrintDialog#5](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml.cs#5)]
 [!code-vb[PrintDialog#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintDialog/visualbasic/window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintableAreaWidth">
      <MemberSignature Language="C#" Value="public double PrintableAreaWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PrintableAreaWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.PrintableAreaWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrintableAreaWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PrintableAreaWidth { double get(); };" />
      <MemberSignature Language="F#" Value="member this.PrintableAreaWidth : double" Usage="System.Windows.Controls.PrintDialog.PrintableAreaWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera szerokość obszar drukowania strony.</summary>
        <value>A <see cref="T:System.Double" /> reprezentujący szerokość obszar drukowania strony.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład przedstawia sposób uzyskać wartość <xref:System.Windows.Controls.PrintDialog.PrintableAreaWidth%2A> właściwości przy użyciu [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] znaczników i kodu.  
  
 [!code-xaml[PrintDialog#3](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml#3)]  
  
 ...  
  
 [!code-csharp[PrintDialog#6](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml.cs#6)]
 [!code-vb[PrintDialog#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintDialog/visualbasic/window1.xaml.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintDocument">
      <MemberSignature Language="C#" Value="public void PrintDocument (System.Windows.Documents.DocumentPaginator documentPaginator, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrintDocument(class System.Windows.Documents.DocumentPaginator documentPaginator, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PrintDialog.PrintDocument(System.Windows.Documents.DocumentPaginator,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrintDocument(System::Windows::Documents::DocumentPaginator ^ documentPaginator, System::String ^ description);" />
      <MemberSignature Language="F#" Value="member this.PrintDocument : System.Windows.Documents.DocumentPaginator * string -&gt; unit" Usage="printDialog.PrintDocument (documentPaginator, description)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">
          <see cref="T:System.Windows.Documents.DocumentPaginator" /> Obiektu do drukowania.</param>
        <param name="description">Opis zadania, które ma być drukowana. Ten tekst jest wyświetlany w [! INCLUDE[TLA#tla_ui](~/includes/tlasharptla-UI-MD.MD)] drukarki.</param>
        <summary>Drukuje <see cref="T:System.Windows.Documents.DocumentPaginator" /> do obiektu <see cref="T:System.Printing.PrintQueue" /> aktualnie wybranego.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="documentPaginator" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="PrintQueue">
      <MemberSignature Language="C#" Value="public System.Printing.PrintQueue PrintQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintQueue PrintQueue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.PrintQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintQueue As PrintQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Printing::PrintQueue ^ PrintQueue { System::Printing::PrintQueue ^ get(); void set(System::Printing::PrintQueue ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrintQueue : System.Printing.PrintQueue with get, set" Usage="System.Windows.Controls.PrintDialog.PrintQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Printing.PrintQueue" /> reprezentujący drukarki, która jest zaznaczona.</summary>
        <value>
          <see cref="T:System.Printing.PrintQueue" /> Wybranego użytkownika.</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">Aby uzyskać uprawnienia do drukowania. Wyliczenie skojarzone: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /></permission>
      </Docs>
    </Member>
    <Member MemberName="PrintTicket">
      <MemberSignature Language="C#" Value="public System.Printing.PrintTicket PrintTicket { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintTicket PrintTicket" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.PrintTicket" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintTicket As PrintTicket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Printing::PrintTicket ^ PrintTicket { System::Printing::PrintTicket ^ get(); void set(System::Printing::PrintTicket ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrintTicket : System.Printing.PrintTicket with get, set" Usage="System.Windows.Controls.PrintDialog.PrintTicket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintTicket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Printing.PrintTicket" /> używany przez <see cref="T:System.Windows.Controls.PrintDialog" /> po kliknięciu przez użytkownika ** drukowania ** dla bieżącego zadania drukowania.</summary>
        <value>A <see cref="T:System.Printing.PrintTicket" /> używany przy następnym ** przycisku Drukuj ** w oknie dialogowym zostanie kliknięty.  To ustawienie <see cref="P:System.Windows.Controls.PrintDialog.PrintTicket" /> właściwości nie sprawdza, czy lub zmodyfikować określonego <see cref="T:System.Printing.PrintTicket" /> dla konkretnej <see cref="T:System.Printing.PrintQueue" />.  Jeśli to konieczne, użyj <see cref="M:System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket)" /> metodę w celu utworzenia <see cref="T:System.Printing.PrintQueue" />-określonych <see cref="T:System.Printing.PrintTicket" /> która jest prawidłowa dla danego drukarki.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienie ani pobierania ta właściwość sprawdza poprawność <xref:System.Printing.PrintTicket>. Aby go zweryfikować użyj <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintVisual">
      <MemberSignature Language="C#" Value="public void PrintVisual (System.Windows.Media.Visual visual, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrintVisual(class System.Windows.Media.Visual visual, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PrintDialog.PrintVisual(System.Windows.Media.Visual,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrintVisual(System::Windows::Media::Visual ^ visual, System::String ^ description);" />
      <MemberSignature Language="F#" Value="member this.PrintVisual : System.Windows.Media.Visual * string -&gt; unit" Usage="printDialog.PrintVisual (visual, description)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="visual">
          <see cref="T:System.Windows.Media.Visual" /> Do drukowania.</param>
        <param name="description">Opis zadania, które ma być drukowana. Ten tekst jest wyświetlany w [! INCLUDE[TLA#tla_ui](~/includes/tlasharptla-UI-MD.MD)] drukarki.</param>
        <summary>Drukuje visual obiektu (z systemem innym niż tekst), który jest pochodną <see cref="T:System.Windows.Media.Visual" /> klasy do <see cref="T:System.Printing.PrintQueue" /> aktualnie wybranego.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="visual" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectedPagesEnabled">
      <MemberSignature Language="C#" Value="public bool SelectedPagesEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SelectedPagesEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.SelectedPagesEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedPagesEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SelectedPagesEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedPagesEnabled : bool with get, set" Usage="System.Windows.Controls.PrintDialog.SelectedPagesEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy jest włączona opcja drukowania wybranej strony.</summary>
        <value>
          <see langword="true" /> Jeśli jest włączona opcja drukowania na wybranych stronach; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; ShowDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;bool&gt; ShowDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PrintDialog.ShowDialog" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDialog () As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;bool&gt; ShowDialog();" />
      <MemberSignature Language="F#" Value="member this.ShowDialog : unit -&gt; Nullable&lt;bool&gt;" Usage="printDialog.ShowDialog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wywołuje <see cref="T:System.Windows.Controls.PrintDialog" /> jako modalne okno dialogowe.</summary>
        <returns>
          <see langword="true" /> gdy użytkownik kliknie ** drukowania **; <see langword="false" /> gdy użytkownik kliknie ** Anuluj **; lub <see langword="null" /> Jeśli użytkownik zamyka okno dialogowe bez kliknięcie ** drukowania ** lub ** Anuluj **.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład przedstawia użycie <xref:System.Windows.Controls.PrintDialog.ShowDialog%2A> w kodzie.  
  
 [!code-csharp[PrintDialog#1](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml.cs#1)]
 [!code-vb[PrintDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintDialog/visualbasic/window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserPageRangeEnabled">
      <MemberSignature Language="C#" Value="public bool UserPageRangeEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UserPageRangeEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.UserPageRangeEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property UserPageRangeEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UserPageRangeEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UserPageRangeEnabled : bool with get, set" Usage="System.Windows.Controls.PrintDialog.UserPageRangeEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy użytkownicy ** okno dialogowe drukowania ** ma możliwość określenia zakresów stron do drukowania.</summary>
        <value>
          <see langword="true" /> Jeśli ta opcja jest dostępna; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład przedstawia sposób ustawiania <xref:System.Windows.Controls.PrintDialog.UserPageRangeEnabled%2A> właściwości przy użyciu [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] znaczników i kodu.  
  
 [!code-xaml[PrintDialog#2](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml#2)]  
  
 ...  
  
 [!code-csharp[PrintDialog#1](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml.cs#1)]
 [!code-vb[PrintDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintDialog/visualbasic/window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>