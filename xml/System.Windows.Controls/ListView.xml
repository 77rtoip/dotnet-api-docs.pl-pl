<Type Name="ListView" FullName="System.Windows.Controls.ListView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="258b12f7a6ec51d2ce1702cef3e0b1444284a583" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36366134" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListView : System.Windows.Controls.ListBox" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ListView extends System.Windows.Controls.ListBox" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ListView" />
  <TypeSignature Language="VB.NET" Value="Public Class ListView&#xA;Inherits ListBox" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListView : System::Windows::Controls::ListBox" />
  <TypeSignature Language="F#" Value="type ListView = class&#xA;    inherit ListBox" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ListBox</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.StyleTypedProperty(Property="ItemContainerStyle", StyleTargetType=typeof(System.Windows.Controls.ListViewItem))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje kontrolkę wyświetlającą listę elementów danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.ListView> jest <xref:System.Windows.Controls.ItemsControl>, co oznacza, że może zawierać kolekcję obiektów dowolnego typu (np. ciąg, image lub panelu). Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Controls.ItemsControl> klasy.  
  
 Prezentacja elementów danych w <xref:System.Windows.Controls.ListView> jest definiowana za pomocą jego trybu widoku, który jest określony przez <xref:System.Windows.Controls.ListView.View%2A> właściwości. [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] udostępnia <xref:System.Windows.Controls.GridView> trybu wyświetlania, która dzieli na partycje <xref:System.Windows.Controls.ListView> zawartości elementu danych do kolumn. Właściwości i metod w <xref:System.Windows.Controls.GridView> i jego klasy pokrewne styl i określ zawartość kolumn.  
  
 Na poniższej ilustracji pokazano <xref:System.Windows.Controls.ListView> z <xref:System.Windows.Controls.GridView> widoku.  
  
 ![Element ListView z danych wyjściowych w widoku GridView](~/add/media/listviewgridview.JPG "ListView, przy czym dane wyjściowe w widoku GridView")  
  
 Istnieje również możliwość definiowania niestandardowych widoków, tworząc klasę, która jest pochodną <xref:System.Windows.Controls.ViewBase>. Aby uzyskać więcej informacji, zobacz [jak: utworzyć niestandardowy tryb wyświetlania na elemencie ListView](~/docs/framework/wpf/controls/how-to-create-a-custom-view-mode-for-a-listview.md).  
  
 W przypadku definiowania niestandardowego <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> dla <xref:System.Windows.Controls.ListView> kontroli, a także zdefiniować <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A>, należy uwzględnić <xref:System.Windows.Controls.ContentPresenter> w <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A>. <xref:System.Windows.Controls.ContentPresenter> Jest wymagany dla <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> działała prawidłowo.  
  
 Aby uniknąć problemów wyrównania w <xref:System.Windows.Controls.GridView> trybu wyświetlania, nie dodawać zawartości ani nie ustawiaj właściwości, które mają wpływ na szerokość elementu w <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> z <xref:System.Windows.Controls.ListView>. Aby zapobiec problemom wyrównania, użyj właściwości i szablony, które są zdefiniowane dla <xref:System.Windows.Controls.GridView> trybu wyświetlania. W tym właściwości i szablony, które są zdefiniowane dla klasy, które są używane w <xref:System.Windows.Controls.GridView> wyświetlić tryb, takich jak <xref:System.Windows.Controls.GridViewColumn> i <xref:System.Windows.Controls.GridViewColumnHeader>.  
  
 Dwa <xref:System.Windows.Controls.ListView> kontrolki nie mogą współużytkować tego samego widoku. Aby określić widoku, który może służyć więcej niż jeden raz, użyj szablonów lub style. Przykład <xref:System.Windows.Controls.GridView> i inne niestandardowe widoki, które są zdefiniowane jako zasoby wielokrotnego użytku, zobacz [element ListView z wielu widoków próbki](http://go.microsoft.com/fwlink/?LinkID=160013).  
  
 Nie używaj <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> i <xref:System.Windows.Controls.Control.VerticalContentAlignment%2A> właściwości <xref:System.Windows.Controls.ListView> zawartości, który jest wyświetlany za pomocą <xref:System.Windows.Controls.GridView>. Aby określić wyrównanie zawartości w kolumnie <xref:System.Windows.Controls.GridView>, zdefiniuj <xref:System.Windows.Controls.GridViewColumn.CellTemplate%2A>.  
  
 Wyświetlanie dużą liczbę elementów może spowodować problemy z wydajnością.  Zobacz [optymalizacji wydajności: formanty](~/docs/framework/wpf/advanced/optimizing-performance-controls.md) Aby uzyskać więcej informacji.  
  
## <a name="customizing-the-listview-control"></a>Dostosowywanie formantu ListView  
 Aby zastosować te same ustawienia właściwości z wieloma <xref:System.Windows.Controls.ListView> formantów, użyj <xref:System.Windows.FrameworkElement.Style%2A> właściwości. Można zmodyfikować domyślne <xref:System.Windows.Controls.ControlTemplate> umożliwiają unikatowego wyglądu formantu. Aby uzyskać więcej informacji o tworzeniu <xref:System.Windows.Controls.ControlTemplate>, zobacz [Dostosowywanie wyglądu formant tworząc ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  Aby wyświetlić części i Stany, które są specyficzne dla <xref:System.Windows.Controls.ListView>, zobacz [style ListView i szablony](~/docs/framework/wpf/controls/listview-styles-and-templates.md).  
  
 Właściwości zależności dla tego formantu może być ustawiona w stylu domyślnym formantu.  Jeśli właściwość jest ustawiona w stylu domyślnym, gdy formant jest wyświetlany w aplikacji właściwość może zmienić ze swojej wartości domyślnej. Domyślny styl jest określana, przez które kompozycji pulpitu jest używana, gdy aplikacja jest uruchomiona.  Aby uzyskać więcej informacji, zobacz [domyślnej kompozycji WPF](http://go.microsoft.com/fwlink/?LinkID=158252).  
  
> [!NOTE]
>  Ustawienie właściwości visual będzie miał wpływ tylko jeśli ta właściwość jest obecny w obu <xref:System.Windows.Controls.ListView> formant na szablon domyślny i ustawić za pomocą. Lista właściwości visual można znaleźć w sekcji "Zmiana Visual struktury kontroli" [Dostosowywanie wyglądu formant tworząc ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób tworzenia <xref:System.Windows.Controls.ListView> formant, który implementuje <xref:System.Windows.Controls.GridView> jako jego <xref:System.Windows.Controls.ListView.View%2A>. Na ilustracji w sekcji uwag jest pobierana z tego przykładu.  
  
 [!code-xaml[ListViewCode#ListViewEmployee](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewCode/CSharp/Window1.xaml#listviewemployee)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.ListViewItem" />
    <altmember cref="T:System.Windows.Controls.GridView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Controls.ListView" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void ClearContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListView.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ClearContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ClearContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.ClearContainerForItemOverride : System.Windows.DependencyObject * obj -&gt; unit" Usage="listView.ClearContainerForItemOverride (element, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">
          <see cref="T:System.Windows.Controls.ListViewItem" /> Kontenera, aby wyczyścić.</param>
        <param name="item">Obiekt który <see cref="T:System.Windows.Controls.ListViewItem" /> zawiera.</param>
        <summary>Usuwa wszystkie szablony, style i powiązania dla obiektu, który jest wyświetlany jako <see cref="T:System.Windows.Controls.ListViewItem" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.DependencyObject GetContainerForItemOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.DependencyObject GetContainerForItemOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListView.GetContainerForItemOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetContainerForItemOverride () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::DependencyObject ^ GetContainerForItemOverride();" />
      <MemberSignature Language="F#" Value="override this.GetContainerForItemOverride : unit -&gt; System.Windows.DependencyObject" Usage="listView.GetContainerForItemOverride " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy i zwraca nowy <see cref="T:System.Windows.Controls.ListViewItem" /> kontenera.</summary>
        <returns>Nowy <see cref="T:System.Windows.Controls.ListViewItem" /> formantu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemItsOwnContainerOverride">
      <MemberSignature Language="C#" Value="protected override bool IsItemItsOwnContainerOverride (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsItemItsOwnContainerOverride(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListView.IsItemItsOwnContainerOverride(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsItemItsOwnContainerOverride (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsItemItsOwnContainerOverride(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.IsItemItsOwnContainerOverride : obj -&gt; bool" Usage="listView.IsItemItsOwnContainerOverride item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">Obiekt do obliczenia.</param>
        <summary>Określa, czy obiekt jest <see cref="T:System.Windows.Controls.ListViewItem" />.</summary>
        <returns>
          <see langword="true" /> Jeśli <paramref name="item" /> jest <see cref="T:System.Windows.Controls.ListViewItem" />; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListView.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="listView.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Definiuje <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> dla <see cref="T:System.Windows.Controls.ListView" /> formantu.</summary>
        <returns>Zwraca <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /> obiekt do <see cref="T:System.Windows.Controls.ListView" /> formantu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemsChanged">
      <MemberSignature Language="C#" Value="protected override void OnItemsChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnItemsChanged(class System.Collections.Specialized.NotifyCollectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListView.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnItemsChanged (e As NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnItemsChanged(System::Collections::Specialized::NotifyCollectionChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnItemsChanged : System.Collections.Specialized.NotifyCollectionChangedEventArgs -&gt; unit" Usage="listView.OnItemsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Argumenty zdarzeń.</param>
        <summary>Odpowiada <see cref="M:System.Windows.Controls.ItemsControl.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana, gdy zmiany w kolekcji elementów <xref:System.Windows.Controls.ListView> formantu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListView.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.PrepareContainerForItemOverride : System.Windows.DependencyObject * obj -&gt; unit" Usage="listView.PrepareContainerForItemOverride (element, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt, który jest <see cref="T:System.Windows.Controls.ListViewItem" /> lub którego można przekonwertować na jeden.</param>
        <param name="item">Służy do tworzenia obiektu <see cref="T:System.Windows.Controls.ListViewItem" />.</param>
        <summary>Ustawia styl, szablonów i powiązania <see cref="T:System.Windows.Controls.ListViewItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda przygotowuje <xref:System.Windows.Controls.ListViewItem> formantu do wyświetlenia zgodnie z określonym <xref:System.Windows.Controls.ListView.View%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ViewBase View { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ViewBase View" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ListView.View" />
      <MemberSignature Language="VB.NET" Value="Public Property View As ViewBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ViewBase ^ View { System::Windows::Controls::ViewBase ^ get(); void set(System::Windows::Controls::ViewBase ^ value); };" />
      <MemberSignature Language="F#" Value="member this.View : System.Windows.Controls.ViewBase with get, set" Usage="System.Windows.Controls.ListView.View" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ViewBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt, który definiuje sposób stylem i organizowane w danych <see cref="T:System.Windows.Controls.ListView" /> formantu.</summary>
        <value>A <see cref="T:System.Windows.Controls.ViewBase" /> obiekt, który określa sposób wyświetlania informacji w <see cref="T:System.Windows.Controls.ListView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Środowisko .NET Framework obejmuje tryb można skonfigurować widok o nazwie <xref:System.Windows.Controls.GridView>. Można również utworzyć widok niestandardowy dziedziczący po <xref:System.Windows.Controls.ViewBase>. Aby uzyskać więcej informacji, zobacz [jak: utworzyć niestandardowy tryb wyświetlania na elemencie ListView](~/docs/framework/wpf/controls/how-to-create-a-custom-view-mode-for-a-listview.md).  
  
<a name="dependencyPropertyInfo_View"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.Controls.ListView.ViewProperty>|  
|Wartość właściwości metadanych `true`|Brak|  
  
> [!NOTE]
>  Typ metadanych właściwości dla tej właściwości jest <xref:System.Windows.PropertyMetadata>, a nie <xref:System.Windows.FrameworkPropertyMetadata>.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób określić <xref:System.Windows.Controls.GridView> obiekt jako <xref:System.Windows.Controls.ListView.View%2A> dla <xref:System.Windows.Controls.ListView> formantu.  
  
 [!code-csharp[ListViewCode#ListViewView](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewCode/CSharp/Window1.xaml.cs#listviewview)]
 [!code-vb[ListViewCode#ListViewView](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListViewCode/visualbasic/window1.xaml.vb#listviewview)]
 [!code-xaml[ListViewCode#ListViewView](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewCode/CSharp/Window1.xaml#listviewview)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ViewBase" />
        <altmember cref="T:System.Windows.Controls.GridView" />
      </Docs>
    </Member>
    <Member MemberName="ViewProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ViewProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ViewProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ListView.ViewProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ViewProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ViewProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ViewProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ListView.ViewProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Controls.ListView.View" /> właściwości zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>