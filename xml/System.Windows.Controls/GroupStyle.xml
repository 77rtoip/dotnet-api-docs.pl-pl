<Type Name="GroupStyle" FullName="System.Windows.Controls.GroupStyle">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5632ce8acd9e2b3f133f542b27d5a1e11582fa18" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30697415" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class GroupStyle : System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi GroupStyle extends System.Object implements class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.GroupStyle" />
  <TypeSignature Language="VB.NET" Value="Public Class GroupStyle&#xA;Implements INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class GroupStyle : System::ComponentModel::INotifyPropertyChanged" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiuje sposób grupy, aby wyglądały na każdym poziomie.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższych przykładach pokazano <xref:System.Windows.Controls.ItemsControl> który jest powiązany <xref:System.Windows.Data.XmlDataProvider> i zawartości związane z kodem, który zawiera logikę do dodawania i usuwania grupowania. Gdy pole wyboru jest zaznaczone, zawartość <xref:System.Windows.Controls.ItemsControl> są grupowane według `Type` atrybutu.  
  
 Każda grupa jest typu <xref:System.Windows.Data.CollectionViewGroup>. <xref:System.Windows.Controls.GroupStyle> <xref:System.Windows.Controls.GroupStyle.HeaderTemplate%2A> Jest określony, aby był on wyświetlany jako <xref:System.Windows.Controls.TextBlock> wyświetlający <xref:System.Windows.Data.CollectionViewGroup.Name%2A> każdej grupie. W takim przypadku <xref:System.Windows.Data.CollectionViewGroup.Name%2A> jest `Work` lub `Home`.  
  
 [!code-xaml[GroupingSample#XAML](~/samples/snippets/csharp/VS_Snippets_Wpf/GroupingSample/CSharp/Window1.xaml#xaml)]  
  
 [!code-csharp[GroupingSample#Code](~/samples/snippets/csharp/VS_Snippets_Wpf/GroupingSample/CSharp/Window1.xaml.cs#code)]
 [!code-vb[GroupingSample#Code](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GroupingSample/visualbasic/window1.xaml.vb#code)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.Controls.ItemsControl.GroupStyle" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GroupStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.GroupStyle.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GroupStyle();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Controls.GroupStyle" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternationCount">
      <MemberSignature Language="C#" Value="public int AlternationCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AlternationCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.AlternationCount" />
      <MemberSignature Language="VB.NET" Value="Public Property AlternationCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AlternationCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę zmiennych <see cref="T:System.Windows.Controls.GroupItem" /> obiektów.</summary>
        <value>Liczba zmiennych <see cref="T:System.Windows.Controls.GroupItem" /> obiektów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.GroupStyle.AlternationCount%2A> Właściwości i <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> dołączona właściwość umożliwiają określenie wyglądu dla dwóch lub więcej zmiennych <xref:System.Windows.Controls.GroupItem> obiektów. Na przykład można określić różne kolory tła dla każdej innej <xref:System.Windows.Controls.GroupItem> w <xref:System.Windows.Controls.ItemsControl>.  <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> Jest przypisany do każdego <xref:System.Windows.Controls.GroupItem> w <xref:System.Windows.Controls.ItemsControl>.  <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> rozpoczyna się od 0, zwiększa się, dopóki nie zostanie <xref:System.Windows.Controls.GroupStyle.AlternationCount%2A> minus 1, a następnie ponowne uruchomienie w lokalizacji 0. Na przykład jeśli <xref:System.Windows.Controls.GroupStyle.AlternationCount%2A> 3 i istnieje siedem <xref:System.Windows.Controls.GroupItem> obiekty w <xref:System.Windows.Controls.ItemsControl>, w poniższej tabeli wymieniono <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> dla każdego elementu.  
  
|Pozycja <xref:System.Windows.Controls.GroupItem> w <xref:System.Windows.Controls.ItemsControl>|<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>|  
|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|1|0|  
|2|1|  
|3|2|  
|4|0|  
|5|1|  
|6|2|  
|7|0|  
  
 Istnieje kilka metod, można użyć, aby określić inny wygląd do naprzemiennych <xref:System.Windows.Controls.GroupItem> obiektów. Na przykład powiązania właściwości w <xref:System.Windows.Controls.GroupStyle.HeaderTemplate%2A> lub <xref:System.Windows.Controls.GroupStyle.ContainerStyle%2A> z <xref:System.Windows.Controls.GroupStyle> do <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>. Następnie można użyć <xref:System.Windows.Controls.AlternationConverter> Aby określić wartość, która ma zostać zastosowany do <xref:System.Windows.Controls.GroupItem> mający określony <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> wartość. Umożliwia także wyzwalaczy można zmienić wartości właściwości w zależności od wartości jego <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Windows.Controls.ListBox> który jest powiązany <xref:System.Windows.Data.CollectionViewSource> który grup elementów w kolekcji. Przykład przełącza tła nagłówka każdej <xref:System.Windows.Controls.GroupItem> między dwa kolory, wykonując następujące czynności:  
  
-   Ustawia <xref:System.Windows.Controls.GroupStyle.AlternationCount%2A> 2.  
  
-   Tworzy <xref:System.Windows.Controls.AlternationConverter> zwracającą <xref:System.Windows.Media.SolidColorBrush>w zależności od wartości <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>.  
  
-   Wiąże <xref:System.Windows.Controls.TextBlock.Background%2A> z <xref:System.Windows.Controls.TextBlock> w <xref:System.Windows.Controls.GroupStyle.HeaderTemplate%2A> do <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> właściwości oraz udostępnia <xref:System.Windows.Controls.AlternationConverter>. Należy pamiętać, że <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A> dołączona właściwość jest ustawiona na <xref:System.Windows.Controls.GroupItem>i tego wiązania używa <xref:System.Windows.Data.RelativeSourceMode.FindAncestor> można pobrać jej wartość.  
  
 Przykład również przełącza tła elementów w <xref:System.Windows.Controls.ListBox> między trzy kolory przez ustawienie <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> na <xref:System.Windows.Controls.ListBox> i powiązanie <xref:System.Windows.Controls.Control.Background%2A> każdego <xref:System.Windows.Controls.ListBox> do <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>. W takim przypadku tła przełącza między trzech kolorów.  
  
 <xref:System.Windows.Data.CollectionViewSource> Czy grupy elementów nie jest wyświetlany.  Informacje na temat sposobu element grupy, zobacz [porady: sortowanie i grupy danych przy użyciu widoku w języku XAML](~/docs/framework/wpf/data/how-to-sort-and-group-data-using-a-view-in-xaml.md).  
  
 [!code-xaml[AlternationIndexSnippets#3](~/samples/snippets/csharp/VS_Snippets_Wpf/AlternationIndexSnippets/CS/Window1.xaml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style ContainerStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style ContainerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.ContainerStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ContainerStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ ContainerStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia styl stosowany do <see cref="T:System.Windows.Controls.GroupItem" /> wygenerowany dla każdego elementu.</summary>
        <value>Styl stosowany do <see cref="T:System.Windows.Controls.GroupItem" /> wygenerowany dla każdego elementu. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest rzadko przypadek w przypadku, gdy tworzenie <xref:System.Windows.Style> wbudowany w składni elementu właściwości zamiast tworzenia styl jako zasób, jest uzasadnione metodologii alternatywnych.  
  
<a name="xamlAttributeUsage_ContainerStyle"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object ContainerStyle="{ResourceExtension StyleResourceKey}"/>  
```  
  
<a name="xamlValues_ColumnHeaderContainerStyle"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *ResourceExtension*  
 Jedną z następujących: `StaticResource`, lub `DynamicResource`. Zobacz [zasobów XAML](~/docs/framework/wpf/advanced/xaml-resources.md).  
  
 *StyleResourceKey*  
 Klucz identyfikujący styl żądanej. Klucz odnosi się do istniejącego zasobu w <xref:System.Windows.ResourceDictionary>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.GroupStyle.ContainerStyleSelector" />
      </Docs>
    </Member>
    <Member MemberName="ContainerStyleSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.StyleSelector ContainerStyleSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.StyleSelector ContainerStyleSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.ContainerStyleSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property ContainerStyleSelector As StyleSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::StyleSelector ^ ContainerStyleSelector { System::Windows::Controls::StyleSelector ^ get(); void set(System::Windows::Controls::StyleSelector ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.StyleSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Włącza moduł zapisujący aplikacji umożliwia zaznaczenie niestandardowe logikę styl dotyczą wszystkich wygenerowanych <see cref="T:System.Windows.Controls.GroupItem" />.</summary>
        <value>Obiekt, który jest pochodną <see cref="T:System.Windows.Controls.StyleSelector" />. Wartość domyślna to <see langword="null" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Controls.DataTemplateSelector" />
        <altmember cref="P:System.Windows.Controls.GroupStyle.ContainerStyle" />
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Windows.Controls.GroupStyle Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Controls.GroupStyle Default" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As GroupStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Controls::GroupStyle ^ Default { System::Windows::Controls::GroupStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.GroupStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera domyślny styl grupy.</summary>
        <value>Domyślny styl grupy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Default"></a>   
## <a name="xaml-property-element-usage"></a>Użycie elementu właściwości języka XAML  
  
```  
<object>  
  <object.property>  
    <x:Static Member="GroupStyle.Default" …/>  
  </object.property>  
</object>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultGroupPanel">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Controls.ItemsPanelTemplate DefaultGroupPanel;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Controls.ItemsPanelTemplate DefaultGroupPanel" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.GroupStyle.DefaultGroupPanel" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultGroupPanel As ItemsPanelTemplate " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Controls::ItemsPanelTemplate ^ DefaultGroupPanel;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ItemsPanelTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa domyślny <see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> tworzącą panelu używany do układu elementów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy wymagane jest domyślnie panelu jest panel, która jest dostarczana.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderStringFormat">
      <MemberSignature Language="C#" Value="public string HeaderStringFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderStringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.HeaderStringFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderStringFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HeaderStringFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg złożonego, który określa sposób formatowania nagłówka, jeśli jest wyświetlany jako ciąg.</summary>
        <value>Złożone ciąg, który określa sposób formatowania nagłówka, jeśli jest wyświetlany jako ciąg.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.GroupStyle.HeaderStringFormat%2A> można wstępnie zdefiniowane, złożonych lub niestandardowy ciąg formatu. Aby uzyskać więcej informacji na temat formaty ciągu, zobacz [typy formatowania](~/docs/standard/base-types/formatting-types.md). Jeśli ustawisz <xref:System.Windows.Controls.GroupStyle.HeaderTemplate%2A> lub <xref:System.Windows.Controls.GroupStyle.HeaderTemplateSelector%2A> właściwość <xref:System.Windows.Controls.GroupStyle>, <xref:System.Windows.Controls.GroupStyle.HeaderStringFormat%2A> właściwość jest ignorowana.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Windows.Controls.ListBox> który grupy przez zakres cen kolekcję elementów.  Konwerter, `GroupByPrice`, zwraca wartość powyżej ceny każdego elementu. Na przykład w przypadku pozycji od 0 do 100, konwerter zwraca 100. W przykładzie użyto <xref:System.Windows.Controls.GroupStyle.HeaderStringFormat%2A> utworzyć ciąg, który zawiera górny limit dla każdego zakresu cenę. Na przykład w Stanach Zjednoczonych elementów znajdujących się w obszarze 100 kwoty są grupowane pozycji informacją "Elementy w obszarze 100".  
  
 [!code-xaml[ContentStringSnippets#GroupStyleHeaderStringFormat](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentStringSnippets/CSharp/Window1.xaml#groupstyleheaderstringformat)]  
  
 W poniższym przykładzie przedstawiono `GroupByPrice` klasy, `PurchaseItem` klasy i kolekcji, która <xref:System.Windows.Controls.ListBox> jest powiązany.  
  
 [!code-csharp[ContentStringSnippets#GroupStyleData](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentStringSnippets/CSharp/Window1.xaml.cs#groupstyledata)]
 [!code-vb[ContentStringSnippets#GroupStyleData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentStringSnippets/visualbasic/window1.xaml.vb#groupstyledata)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.HeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ HeaderTemplate { System::Windows::DataTemplate ^ get(); void set(System::Windows::DataTemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szablon, który służy do wyświetlania nagłówka grupy.</summary>
        <value>A <see cref="T:System.Windows.DataTemplate" /> obiekt, który służy do wyświetlania nagłówka grupy. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższych przykładach pokazano <xref:System.Windows.Controls.ItemsControl> który jest powiązany <xref:System.Windows.Data.XmlDataProvider> i zawartości związane z kodem, który zawiera logikę do dodawania i usuwania grupowania. Gdy pole wyboru jest zaznaczone, zawartość <xref:System.Windows.Controls.ItemsControl> są grupowane według `Type` atrybutu.  
  
 Każda grupa jest typu <xref:System.Windows.Data.CollectionViewGroup>. <xref:System.Windows.Controls.GroupStyle> <xref:System.Windows.Controls.GroupStyle.HeaderTemplate%2A> Jest określony, aby był on wyświetlany jako <xref:System.Windows.Controls.TextBlock> wyświetlający <xref:System.Windows.Data.CollectionViewGroup.Name%2A> każdej grupie. W takim przypadku <xref:System.Windows.Data.CollectionViewGroup.Name%2A> jest `Work` lub `Home`.  
  
 [!code-xaml[GroupingSample#XAML](~/samples/snippets/csharp/VS_Snippets_Wpf/GroupingSample/CSharp/Window1.xaml#xaml)]  
  
 [!code-csharp[GroupingSample#Code](~/samples/snippets/csharp/VS_Snippets_Wpf/GroupingSample/CSharp/Window1.xaml.cs#code)]
 [!code-vb[GroupingSample#Code](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GroupingSample/visualbasic/window1.xaml.vb#code)]  
  
 Poniższy przykład przedstawia użycie <xref:System.Windows.Controls.GroupStyle.HeaderTemplate%2A> właściwości:  
  
 [!code-xaml[DataBindingLab#GroupStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml#groupstyle)]  
  
 Poniżej znajduje się definicja `groupingHeaderTemplate` <xref:System.Windows.DataTemplate>:  
  
 [!code-xaml[DataBindingLab#HeaderTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml#headertemplate)]  
  
 Pełny przykład, zobacz [pokaz powiązania danych](http://go.microsoft.com/fwlink/?LinkID=163703).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.GroupStyle.HeaderTemplateSelector" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataTemplateSelector HeaderTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.DataTemplateSelector HeaderTemplateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.HeaderTemplateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderTemplateSelector As DataTemplateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::DataTemplateSelector ^ HeaderTemplateSelector { System::Windows::Controls::DataTemplateSelector ^ get(); void set(System::Windows::Controls::DataTemplateSelector ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Włącza moduł zapisujący aplikacji do zapewnienia logiki niestandardowy wybór szablonu, który służy do wyświetlania nagłówka grupy.</summary>
        <value>Obiekt, który jest pochodną <see cref="T:System.Windows.Controls.DataTemplateSelector" />. Wartość domyślna to <see langword="null" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.GroupStyle.HeaderTemplate" />
      </Docs>
    </Member>
    <Member MemberName="HidesIfEmpty">
      <MemberSignature Language="C#" Value="public bool HidesIfEmpty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HidesIfEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.HidesIfEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Property HidesIfEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HidesIfEmpty { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy elementy odpowiadające puste grupy powinna być wyświetlana.</summary>
        <value>
          <see langword="true" /> Aby nie wyświetlać puste grupy; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (System.ComponentModel.PropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(class System.ComponentModel.PropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.GroupStyle.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanged (e As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanged(System::ComponentModel::PropertyChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Argumenty zdarzeń są zgłaszane.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Controls.GroupStyle.PropertyChanged" /> zdarzenia na podstawie podanych argumentów.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Panel">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ItemsPanelTemplate Panel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ItemsPanelTemplate Panel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.Panel" />
      <MemberSignature Language="VB.NET" Value="Public Property Panel As ItemsPanelTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ItemsPanelTemplate ^ Panel { System::Windows::Controls::ItemsPanelTemplate ^ get(); void set(System::Windows::Controls::ItemsPanelTemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ItemsPanelTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szablon, który tworzy panelu używany do układu elementów.</summary>
        <value>
          <see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> Obiekt, który tworzy panelu używany do układu elementów.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.GroupStyle.PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Event PropertyChanged As PropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual event System::ComponentModel::PropertyChangedEventHandler ^ PropertyChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wartość właściwości zostanie zmieniona.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
      </Docs>
    </Member>
  </Members>
</Type>