<Type Name="DatePickerDateValidationErrorEventArgs" FullName="System.Windows.Controls.DatePickerDateValidationErrorEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b3682cbf1a285e17698dcb625b086c4e6bcba183" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36566639" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DatePickerDateValidationErrorEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DatePickerDateValidationErrorEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.DatePickerDateValidationErrorEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DatePickerDateValidationErrorEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DatePickerDateValidationErrorEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DatePickerDateValidationErrorEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia dane dla <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> zdarzeń.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.DatePicker.DateValidationError?displayProperty=nameWithType> Zdarzenie po <xref:System.Windows.Controls.DatePicker.Text%2A?displayProperty=nameWithType> ma ustawioną wartość nie może być interpretowane jako data lub gdy nie można wybrać datę. Można subskrybować tego zdarzenia i określić, czy wyjątek zgłoszony przez ustawienie <xref:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.ThrowException%2A> właściwości. Jeśli <xref:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.ThrowException%2A?displayProperty=nameWithType> jest `true`, jest zgłaszane w jednej z następującymi wyjątkami:  
  
|Typ wyjątku|Warunek|  
|--------------------|---------------|  
|<xref:System.FormatException>|Wprowadzony tekst nie może być analizowana na prawidłową datę i wyjątek nie został on wstrzymany.|  
|<xref:System.ArgumentOutOfRangeException>|Analizuje wprowadzania tekstu na datę, która nie jest możliwy.|  
  
 Jeśli <xref:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.ThrowException%2A?displayProperty=nameWithType> jest `false`, aplikacja kontynuuje wykonywanie w zwykły sposób.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Windows.Controls.DatePicker> czy daty są wyświetlane w sierpniu 2009 i określa, że każda sobota i niedziela nie jest możliwy. <xref:System.Windows.Controls.DatePicker> Dojść <xref:System.Windows.Controls.DatePicker.DateValidationError> zdarzeń. Jeśli użytkownik wprowadzi datę, która nie jest możliwy, przykładzie wyświetla komunikat. Jeśli użytkownik wprowadzi tekst, który nie jest prawidłową datą, jest zwracany wyjątek.  
  
 [!code-csharp[DatePickerSnippets#2](~/samples/snippets/csharp/VS_Snippets_Wpf/datepickersnippets/csharp/window1.xaml.cs#2)]
 [!code-vb[DatePickerSnippets#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datepickersnippets/visualbasic/window1.xaml.vb#2)]
 [!code-xaml[DatePickerSnippets#2](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#2)]  
  
 [!code-csharp[DatePickerSnippets#3](~/samples/snippets/csharp/VS_Snippets_Wpf/datepickersnippets/csharp/window1.xaml.cs#3)]
 [!code-vb[DatePickerSnippets#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datepickersnippets/visualbasic/window1.xaml.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DatePickerDateValidationErrorEventArgs (Exception exception, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.#ctor(System.Exception,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DatePickerDateValidationErrorEventArgs(Exception ^ exception, System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Windows.Controls.DatePickerDateValidationErrorEventArgs : Exception * string -&gt; System.Windows.Controls.DatePickerDateValidationErrorEventArgs" Usage="new System.Windows.Controls.DatePickerDateValidationErrorEventArgs (exception, text)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="exception">Początkowa wyjątku z <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> zdarzeń.</param>
        <param name="text">Tekst, który spowodował <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> zdarzeń.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Controls.DatePickerDateValidationErrorEventArgs" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Windows.Controls.DatePickerDateValidationErrorEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera początkowy wyjątku skojarzonego z <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> zdarzeń.</summary>
        <value>Wyjątek skojarzone z niepowodzenia weryfikacji.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Text : string" Usage="System.Windows.Controls.DatePickerDateValidationErrorEventArgs.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst, który spowodował <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> zdarzeń.</summary>
        <value>Tekst, który spowodował niepowodzenie weryfikacji.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThrowException">
      <MemberSignature Language="C#" Value="public bool ThrowException { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThrowException" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.ThrowException" />
      <MemberSignature Language="VB.NET" Value="Public Property ThrowException As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ThrowException { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ThrowException : bool with get, set" Usage="System.Windows.Controls.DatePickerDateValidationErrorEventArgs.ThrowException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.Exception" /> powinien zostać zgłoszony.</summary>
        <value>
          <see langword="true" /> Jeśli wyjątek powinien zostać zgłoszony; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>