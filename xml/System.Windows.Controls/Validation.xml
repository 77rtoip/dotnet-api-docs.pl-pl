<Type Name="Validation" FullName="System.Windows.Controls.Validation">
  <Metadata><Meta Name="ms.openlocfilehash" Value="16fb75c18e5c77b69c1f4522cdb2d2045851a344" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69211912" /></Metadata><TypeSignature Language="C#" Value="public static class Validation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Validation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Validation" />
  <TypeSignature Language="VB.NET" Value="Public Class Validation" />
  <TypeSignature Language="C++ CLI" Value="public ref class Validation abstract sealed" />
  <TypeSignature Language="F#" Value="type Validation = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zapewnia metody i dołączone właściwości, które obsługują sprawdzanie poprawności danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać szczegółowe omówienie procesu weryfikacji, zobacz "Sprawdzanie poprawności danych" w temacie [powiązanie danych — omówienie](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.Data.Binding.ValidationRules" />
    <altmember cref="P:System.Windows.Data.MultiBinding.ValidationRules" />
  </Docs>
  <Members>
    <Member MemberName="AddErrorHandler">
      <MemberSignature Language="C#" Value="public static void AddErrorHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Controls.ValidationErrorEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddErrorHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Controls.ValidationErrorEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Validation.AddErrorHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Controls.ValidationErrorEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddErrorHandler (element As DependencyObject, handler As EventHandler(Of ValidationErrorEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddErrorHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Controls::ValidationErrorEventArgs ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddErrorHandler : System.Windows.DependencyObject * EventHandler&lt;System.Windows.Controls.ValidationErrorEventArgs&gt; -&gt; unit" Usage="System.Windows.Controls.Validation.AddErrorHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Controls.ValidationErrorEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt <see cref="T:System.Windows.UIElement" /> lub <see cref="T:System.Windows.ContentElement" /> do dodania <paramref name="handler" /> .</param>
        <param name="handler">Procedura obsługi do dodania.</param>
        <summary>Dodaje procedurę obsługi zdarzeń dla <see cref="E:System.Windows.Controls.Validation.Error" /> dołączonego zdarzenia do określonego obiektu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearInvalid">
      <MemberSignature Language="C#" Value="public static void ClearInvalid (System.Windows.Data.BindingExpressionBase bindingExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearInvalid(class System.Windows.Data.BindingExpressionBase bindingExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Validation.ClearInvalid(System.Windows.Data.BindingExpressionBase)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearInvalid (bindingExpression As BindingExpressionBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearInvalid(System::Windows::Data::BindingExpressionBase ^ bindingExpression);" />
      <MemberSignature Language="F#" Value="static member ClearInvalid : System.Windows.Data.BindingExpressionBase -&gt; unit" Usage="System.Windows.Controls.Validation.ClearInvalid bindingExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingExpression" Type="System.Windows.Data.BindingExpressionBase" />
      </Parameters>
      <Docs>
        <param name="bindingExpression">Obiekt, który ma zostać włączony.</param>
        <summary>Usuwa wszystkie <see cref="T:System.Windows.Controls.ValidationError" /> obiekty z określonego <see cref="T:System.Windows.Data.BindingExpressionBase" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt mógł być nieprawidłowy <xref:System.Windows.Controls.Validation.MarkInvalid%2A> z wywołania lub wcześniej nie powiodła się walidacja. `bindingExpression` Obiekt jest prawidłowy po wywołaniu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Jeśli <paramref name="bindingExpression" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="see AddErrorHandler, and RemoveErrorHandler" />
      <MemberSignature Language="ILAsm" Value="see AddErrorHandler, and RemoveErrorHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Validation.Error" />
      <MemberSignature Language="VB.NET" Value="see AddErrorHandler, and RemoveErrorHandler" />
      <MemberSignature Language="F#" Value="see AddErrorHandler, and RemoveErrorHandler" Usage="see AddErrorHandler, and RemoveErrorHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Występuje, gdy element powiązany zostanie uruchomiony w wyniku błędu walidacji, ale tylko dla powiązań <see cref="P:System.Windows.Data.Binding.NotifyOnValidationError" /> z wartością ustawioną na. <see langword="true" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Model powiązania <xref:System.Windows.Data.Binding.ValidationRules%2A> <xref:System.Windows.Data.Binding> danych umożliwia skojarzenie z obiektem. [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Walidacja występuje podczas przesyłania wartości źródłowej elementu docelowego do powiązania przed wywołaniem konwertera. Poniżej opisano proces weryfikacji:  
  
1.  Gdy wartość jest transferowana z właściwości target do właściwości source, aparat powiązań danych najpierw usuwa wszystkie <xref:System.Windows.Controls.ValidationError> , które mogły zostać dodane <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> do dołączonej właściwości powiązanego elementu. Następnie sprawdza, czy istnieją jakieś <xref:System.Windows.Controls.ValidationRule>niestandardowe s zdefiniowane dla tego <xref:System.Windows.Data.Binding>, w takim przypadku wywołuje <xref:System.Windows.Controls.ValidationRule.Validate%2A> metodę na każdym z <xref:System.Windows.Controls.ValidationRule>s do momentu, gdy jeden z nich zostanie uruchomiony w wystąpieniu błędu lub do momentu, aż wszystkie z nich zakończą się powodzeniem.  
  
2.  Gdy istnieje reguła niestandardowa, która nie zostanie przekazana, aparat powiązań tworzy <xref:System.Windows.Controls.ValidationError> obiekt i dodaje go <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> do kolekcji powiązanego elementu. Gdy <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> nie jest pusty <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType> , dołączona właściwość elementu jest ustawiona na `true`. Ponadto, jeśli <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A> Właściwość <xref:System.Windows.Data.Binding> jest ustawiona na `true`, aparat powiązań wywołuje <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> dołączone zdarzenie w elemencie.  
  
3.  Jeśli wszystkie reguły przechodzą, aparat powiązania następnie wywołuje konwerter, jeśli taki istnieje.  
  
4.  Jeśli konwerter przejdzie do, aparat powiązania wywołuje metodę ustawiającą właściwości source.  
  
5.  Jeśli powiązanie <xref:System.Windows.Controls.ExceptionValidationRule> jest skojarzone z nim, a wyjątek jest zgłaszany w kroku 4, aparat powiązań sprawdza, czy istnieje <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>. Możesz użyć <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> wywołania zwrotnego, aby zapewnić niestandardową procedurę obsługi wyjątków. Jeśli element nie <xref:System.Windows.Data.Binding> <xref:System.Windows.Controls.ValidationError> <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> jest określony w, aparat powiązań tworzy wyjątek z wyjątkiem i dodaje go do kolekcji powiązanego elementu. <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>  
  
 Należy również zauważyć, że prawidłowy transfer wartości w obu kierunkach (element docelowy do źródła lub źródło-cel) czyści <xref:System.Windows.Controls.Validation>.<xref:System.Windows.Controls.Validation.Errors%2A> dołączona właściwość.  
  
 Aby uzyskać więcej informacji, zobacz "Sprawdzanie poprawności danych" w temacie [powiązanie danych — omówienie](~/docs/framework/wpf/data/data-binding-overview.md).  
  
<a name="routedEventInfo_Error"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.Controls.Validation.ErrorEvent>|  
|Strategia routingu|Propagacja|  
|Delegate|<xref:System.EventHandler%601>, ograniczone przez<xref:System.Windows.Controls.ValidationErrorEventArgs>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ErrorEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ErrorEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Validation.ErrorEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ErrorEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ErrorEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ErrorEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.Validation.ErrorEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="E:System.Windows.Controls.Validation.Error" /> Identyfikuje dołączone zdarzenie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="see GetErrors" />
      <MemberSignature Language="ILAsm" Value="see GetErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Validation.Errors" />
      <MemberSignature Language="VB.NET" Value="see GetErrors" />
      <MemberSignature Language="F#" Value="see GetErrors" Usage="see GetErrors" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera kolekcję wszystkich aktywnych <see cref="T:System.Windows.Controls.ValidationError" /> obiektów z elementu powiązanego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks  
 Aplikacja nie może modyfikować zawartości tej kolekcji. Zapoznaj się z sekcją przykładową, aby zapoznać się z przykładem użycia tej dołączonej właściwości.  
  
 Model powiązania danych WPF umożliwia skojarzenie <xref:System.Windows.Data.Binding.ValidationRules%2A> <xref:System.Windows.Data.Binding> z obiektem. Walidacja występuje podczas przesyłania wartości źródłowej elementu docelowego do powiązania przed wywołaniem konwertera. Poniżej opisano proces weryfikacji:  
  
1.  Gdy wartość jest transferowana z właściwości target do właściwości source, aparat powiązań danych najpierw usuwa wszystkie <xref:System.Windows.Controls.ValidationError> , które mogły zostać dodane <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> do dołączonej właściwości powiązanego elementu. Następnie sprawdza, czy istnieją jakieś <xref:System.Windows.Controls.ValidationRule>niestandardowe s zdefiniowane dla tego <xref:System.Windows.Data.Binding>, w takim przypadku wywołuje <xref:System.Windows.Controls.ValidationRule.Validate%2A> metodę na każdym z <xref:System.Windows.Controls.ValidationRule>s do momentu, gdy jeden z nich zostanie uruchomiony w wystąpieniu błędu lub do momentu, aż wszystkie z nich zakończą się powodzeniem.  
  
2.  Gdy istnieje reguła niestandardowa, która nie zostanie przekazana, aparat powiązań tworzy <xref:System.Windows.Controls.ValidationError> obiekt i dodaje go <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> do kolekcji powiązanego elementu. Gdy <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> nie jest pusty <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName> , dołączona właściwość elementu jest ustawiona na `true`. Ponadto, jeśli <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A> Właściwość <xref:System.Windows.Data.Binding> jest ustawiona na `true`, aparat powiązań wywołuje <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> dołączone zdarzenie w elemencie.  
  
3.  Jeśli wszystkie reguły przechodzą, aparat powiązania następnie wywołuje konwerter, jeśli taki istnieje.  
  
4.  Jeśli konwerter przejdzie do, aparat powiązania wywołuje metodę ustawiającą właściwości source.  
  
5.  Jeśli powiązanie <xref:System.Windows.Controls.ExceptionValidationRule> jest skojarzone z nim, a wyjątek jest zgłaszany w kroku 4, aparat powiązań sprawdza, czy istnieje <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>. Możesz użyć <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> wywołania zwrotnego, aby zapewnić niestandardową procedurę obsługi wyjątków. Jeśli element nie <xref:System.Windows.Data.Binding> <xref:System.Windows.Controls.ValidationError> <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> jest określony w, aparat powiązań tworzy wyjątek z wyjątkiem i dodaje go do kolekcji powiązanego elementu. <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>  
  
 Należy również zauważyć, że prawidłowy transfer wartości w obu kierunkach (element docelowy do źródła lub źródło-cel) czyści <xref:System.Windows.Controls.Validation>.<xref:System.Windows.Controls.Validation.Errors%2A> dołączona właściwość.  
  
 Aby uzyskać informacje o zachowaniu tej właściwości w <xref:System.Windows.Data.MultiBinding> scenariuszach, zobacz <xref:System.Windows.Data.MultiBindingExpression.ValidationError%2A>.  
  
 Aby uzyskać więcej informacji, zobacz "Sprawdzanie poprawności danych" w temacie [powiązanie danych — omówienie](~/docs/framework/wpf/data/data-binding-overview.md).  
  
<a name="xamlTextUsage_Errors"></a>   
## <a name="xaml-text-usage"></a>Użycie tekstu w języku XAML  
 Zobacz uwagi. Sama <xref:System.Windows.Controls.Validation.Errors%2A> kolekcja nie jest przez użytkownika settable, ale można jej użyć w definicji szablonu kontrolki w języku XAML.  
  
<a name="dependencyPropertyInfo_Errors"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.Controls.Validation.ErrorsProperty>|  
|Właściwości metadanych ustawione na`true`|<xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ErrorsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ErrorsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Validation.ErrorsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ErrorsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ErrorsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ErrorsProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Validation.ErrorsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Validation.Errors" /> Identyfikuje załączoną właściwość.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorTemplate">
      <MemberSignature Language="C#" Value="see GetErrorTemplate, and SetErrorTemplate" />
      <MemberSignature Language="ILAsm" Value="see GetErrorTemplate, and SetErrorTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Validation.ErrorTemplate" />
      <MemberSignature Language="VB.NET" Value="see GetErrorTemplate, and SetErrorTemplate" />
      <MemberSignature Language="F#" Value="see GetErrorTemplate, and SetErrorTemplate" Usage="see GetErrorTemplate, and SetErrorTemplate" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Controls.ControlTemplate" /> używany do generowania opinii o błędach walidacji w warstwie modułu definiowania układu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Model powiązania <xref:System.Windows.Data.Binding.ValidationRules%2A> <xref:System.Windows.Data.Binding> danych umożliwia skojarzenie z obiektem. [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Jeśli użytkownik wprowadzi nieprawidłową wartość, może być konieczne podanie pewnych informacji zwrotnych dotyczących błędu w aplikacji [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]. Jednym ze sposobów zapewnienia takiej opinii jest ustawienie <xref:System.Windows.Controls.Validation>.<xref:System.Windows.Controls.Validation.ErrorTemplate%2A> dołączono do niestandardowej <xref:System.Windows.Controls.ControlTemplate>właściwości.  
  
 Aby zapoznać się ze szczegółową omówieniem walidacji, zobacz sekcję walidacja danych w temacie [Informacje o powiązaniu danych](~/docs/framework/wpf/data/data-binding-overview.md).  
  
<a name="dependencyPropertyInfo_ErrorTemplate"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.Controls.Validation.ErrorTemplateProperty>|  
|Właściwości metadanych ustawione na`true`|<xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.AdornedElementPlaceholder" />
      </Docs>
    </Member>
    <Member MemberName="ErrorTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ErrorTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ErrorTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Validation.ErrorTemplateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ErrorTemplateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ErrorTemplateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ErrorTemplateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Validation.ErrorTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Validation.ErrorTemplate" /> Identyfikuje załączoną właściwość.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetErrors">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyObservableCollection&lt;System.Windows.Controls.ValidationError&gt; GetErrors (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyObservableCollection`1&lt;class System.Windows.Controls.ValidationError&gt; GetErrors(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Validation.GetErrors(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetErrors (element As DependencyObject) As ReadOnlyObservableCollection(Of ValidationError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyObservableCollection&lt;System::Windows::Controls::ValidationError ^&gt; ^ GetErrors(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetErrors : System.Windows.DependencyObject -&gt; System.Collections.ObjectModel.ReadOnlyObservableCollection&lt;System.Windows.Controls.ValidationError&gt;" Usage="System.Windows.Controls.Validation.GetErrors element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyObservableCollection&lt;System.Windows.Controls.ValidationError&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt <see cref="T:System.Windows.UIElement" /> lub<see cref="T:System.Windows.ContentElement" /> , z którego ma zostać odczytana wartość.</param>
        <summary>Pobiera wartość <see cref="P:System.Windows.Controls.Validation.Errors" /> dołączonej właściwości określonego elementu.</summary>
        <returns><see cref="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1" /> Obiektu .<see cref="T:System.Windows.Controls.ValidationError" /></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Jeśli <paramref name="element" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetErrorTemplate">
      <MemberSignature Language="C#" Value="public static System.Windows.Controls.ControlTemplate GetErrorTemplate (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Controls.ControlTemplate GetErrorTemplate(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Validation.GetErrorTemplate(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetErrorTemplate (element As DependencyObject) As ControlTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Controls::ControlTemplate ^ GetErrorTemplate(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetErrorTemplate : System.Windows.DependencyObject -&gt; System.Windows.Controls.ControlTemplate" Usage="System.Windows.Controls.Validation.GetErrorTemplate element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ControlTemplate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt <see cref="T:System.Windows.UIElement" /> lub<see cref="T:System.Windows.ContentElement" /> , z którego ma zostać odczytana wartość.</param>
        <summary>Pobiera wartość <see cref="P:System.Windows.Controls.Validation.ErrorTemplate" /> dołączonej właściwości określonego elementu.</summary>
        <returns><see cref="T:System.Windows.Controls.ControlTemplate" /> Używane do generowania opinii o błędach walidacji w warstwie modułu definiowania układu.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Jeśli <paramref name="element" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHasError">
      <MemberSignature Language="C#" Value="public static bool GetHasError (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetHasError(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHasError (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetHasError(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetHasError : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Controls.Validation.GetHasError element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt <see cref="T:System.Windows.UIElement" /> lub<see cref="T:System.Windows.ContentElement" /> , z którego ma zostać odczytana wartość.</param>
        <summary>Pobiera wartość <see cref="P:System.Windows.Controls.Validation.HasError" /> dołączonej właściwości określonego elementu.</summary>
        <returns>Wartość <see cref="P:System.Windows.Controls.Validation.HasError" /> dołączonej właściwości określonego elementu.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Jeśli <paramref name="element" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValidationAdornerSite">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetValidationAdornerSite (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetValidationAdornerSite(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Validation.GetValidationAdornerSite(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetValidationAdornerSite (element As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetValidationAdornerSite(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetValidationAdornerSite : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="System.Windows.Controls.Validation.GetValidationAdornerSite element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Element, z którego ma zostać uzyskana wartość <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" />.</param>
        <summary>Pobiera wartość <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" /> dołączonej właściwości dla określonego elementu.</summary>
        <returns>Wartość <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValidationAdornerSiteFor">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetValidationAdornerSiteFor (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetValidationAdornerSiteFor(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Validation.GetValidationAdornerSiteFor(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetValidationAdornerSiteFor (element As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetValidationAdornerSiteFor(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetValidationAdornerSiteFor : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="System.Windows.Controls.Validation.GetValidationAdornerSiteFor element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Element, z którego ma zostać uzyskana wartość <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" />.</param>
        <summary>Pobiera wartość <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" /> dołączonej właściwości dla określonego elementu.</summary>
        <returns>Wartość <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasError">
      <MemberSignature Language="C#" Value="see GetHasError" />
      <MemberSignature Language="ILAsm" Value="see GetHasError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Validation.HasError" />
      <MemberSignature Language="VB.NET" Value="see GetHasError" />
      <MemberSignature Language="F#" Value="see GetHasError" Usage="see GetHasError" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy dowolne powiązanie dla elementu docelowego powiązania ma <see cref="T:System.Windows.Controls.ValidationError" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[
 
## Remarks  
 Aby uzyskać informacje o zachowaniu tej właściwości w <xref:System.Windows.Data.MultiBinding> scenariuszach, zobacz <xref:System.Windows.Data.MultiBindingExpression.HasError%2A>.  
  
 Aby zapoznać się ze szczegółową omówieniem walidacji, zobacz sekcję walidacja danych w temacie [Informacje o powiązaniu danych](~/docs/framework/wpf/data/data-binding-overview.md).  
  
<a name="dependencyPropertyInfo_HasError"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.Controls.Validation.HasErrorProperty>|  
|Właściwości metadanych ustawione na`true`|<xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.ValidationRules" />
        <altmember cref="P:System.Windows.Data.MultiBinding.ValidationRules" />
      </Docs>
    </Member>
    <Member MemberName="HasErrorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HasErrorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HasErrorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Validation.HasErrorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HasErrorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HasErrorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HasErrorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Validation.HasErrorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Validation.HasError" /> Identyfikuje załączoną właściwość.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkInvalid">
      <MemberSignature Language="C#" Value="public static void MarkInvalid (System.Windows.Data.BindingExpressionBase bindingExpression, System.Windows.Controls.ValidationError validationError);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MarkInvalid(class System.Windows.Data.BindingExpressionBase bindingExpression, class System.Windows.Controls.ValidationError validationError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Validation.MarkInvalid(System.Windows.Data.BindingExpressionBase,System.Windows.Controls.ValidationError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MarkInvalid(System::Windows::Data::BindingExpressionBase ^ bindingExpression, System::Windows::Controls::ValidationError ^ validationError);" />
      <MemberSignature Language="F#" Value="static member MarkInvalid : System.Windows.Data.BindingExpressionBase * System.Windows.Controls.ValidationError -&gt; unit" Usage="System.Windows.Controls.Validation.MarkInvalid (bindingExpression, validationError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingExpression" Type="System.Windows.Data.BindingExpressionBase" />
        <Parameter Name="validationError" Type="System.Windows.Controls.ValidationError" />
      </Parameters>
      <Docs>
        <param name="bindingExpression"><see cref="T:System.Windows.Data.BindingExpression" /> Obiekt, który ma zostać oznaczony jako nieprawidłowy.</param>
        <param name="validationError">Obiekt <see cref="T:System.Windows.Controls.ValidationError" /> , który ma być używany.</param>
        <summary>Oznacza określony <see cref="T:System.Windows.Data.BindingExpression" /> obiekt jako nieprawidłowy przy użyciu określonego <see cref="T:System.Windows.Controls.ValidationError" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt pozostaje nieprawidłowy do momentu <xref:System.Windows.Controls.Validation.ClearInvalid%2A> wywołania lub inny transfer do źródła powiązania zostanie pomyślnie zweryfikowany. <xref:System.Windows.Data.BindingExpression>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Jeśli <paramref name="validationError" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveErrorHandler">
      <MemberSignature Language="C#" Value="public static void RemoveErrorHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Controls.ValidationErrorEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveErrorHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Controls.ValidationErrorEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Validation.RemoveErrorHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Controls.ValidationErrorEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveErrorHandler (element As DependencyObject, handler As EventHandler(Of ValidationErrorEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveErrorHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Controls::ValidationErrorEventArgs ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveErrorHandler : System.Windows.DependencyObject * EventHandler&lt;System.Windows.Controls.ValidationErrorEventArgs&gt; -&gt; unit" Usage="System.Windows.Controls.Validation.RemoveErrorHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Controls.ValidationErrorEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt <see cref="T:System.Windows.UIElement" /> lub <see cref="T:System.Windows.ContentElement" /> , z którego <paramref name="handler" /> ma zostać usunięty.</param>
        <param name="handler">Procedura obsługi do usunięcia.</param>
        <summary>Dodaje procedurę obsługi zdarzeń dla <see cref="E:System.Windows.Controls.Validation.Error" /> dołączonego zdarzenia z określonego obiektu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetErrorTemplate">
      <MemberSignature Language="C#" Value="public static void SetErrorTemplate (System.Windows.DependencyObject element, System.Windows.Controls.ControlTemplate value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetErrorTemplate(class System.Windows.DependencyObject element, class System.Windows.Controls.ControlTemplate value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Validation.SetErrorTemplate(System.Windows.DependencyObject,System.Windows.Controls.ControlTemplate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetErrorTemplate (element As DependencyObject, value As ControlTemplate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetErrorTemplate(System::Windows::DependencyObject ^ element, System::Windows::Controls::ControlTemplate ^ value);" />
      <MemberSignature Language="F#" Value="static member SetErrorTemplate : System.Windows.DependencyObject * System.Windows.Controls.ControlTemplate -&gt; unit" Usage="System.Windows.Controls.Validation.SetErrorTemplate (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.Controls.ControlTemplate" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt <see cref="T:System.Windows.UIElement" /> lub <see cref="T:System.Windows.ContentElement" /> , który ma <paramref name="value" /> zostać ustawiony.</param>
        <param name="value"><see cref="T:System.Windows.Controls.ControlTemplate" /> Do użycia w celu wygenerowania opinii o błędach walidacji w warstwie modułu definiowania układu.</param>
        <summary>Ustawia wartość <see cref="P:System.Windows.Controls.Validation.ErrorTemplate" /> dołączonej właściwości do określonego elementu.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Jeśli <paramref name="element" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetValidationAdornerSite">
      <MemberSignature Language="C#" Value="public static void SetValidationAdornerSite (System.Windows.DependencyObject element, System.Windows.DependencyObject value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetValidationAdornerSite(class System.Windows.DependencyObject element, class System.Windows.DependencyObject value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Validation.SetValidationAdornerSite(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetValidationAdornerSite (element As DependencyObject, value As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetValidationAdornerSite(System::Windows::DependencyObject ^ element, System::Windows::DependencyObject ^ value);" />
      <MemberSignature Language="F#" Value="static member SetValidationAdornerSite : System.Windows.DependencyObject * System.Windows.DependencyObject -&gt; unit" Usage="System.Windows.Controls.Validation.SetValidationAdornerSite (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Element, dla którego ma zostać ustawiony <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" />.</param>
        <param name="value"><see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" /> Określonego elementu.</param>
        <summary><see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" /> Ustawia przyłączoną właściwość na określoną wartość określonego elementu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValidationAdornerSiteFor">
      <MemberSignature Language="C#" Value="public static void SetValidationAdornerSiteFor (System.Windows.DependencyObject element, System.Windows.DependencyObject value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetValidationAdornerSiteFor(class System.Windows.DependencyObject element, class System.Windows.DependencyObject value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Validation.SetValidationAdornerSiteFor(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetValidationAdornerSiteFor (element As DependencyObject, value As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetValidationAdornerSiteFor(System::Windows::DependencyObject ^ element, System::Windows::DependencyObject ^ value);" />
      <MemberSignature Language="F#" Value="static member SetValidationAdornerSiteFor : System.Windows.DependencyObject * System.Windows.DependencyObject -&gt; unit" Usage="System.Windows.Controls.Validation.SetValidationAdornerSiteFor (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Element, dla którego ma zostać ustawiony <see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" />.</param>
        <param name="value"><see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" /> Określonego elementu.</param>
        <summary><see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" /> Ustawia przyłączoną właściwość na określoną wartość określonego elementu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationAdornerSite">
      <MemberSignature Language="C#" Value="see GetValidationAdornerSite, and SetValidationAdornerSite" />
      <MemberSignature Language="ILAsm" Value="see GetValidationAdornerSite, and SetValidationAdornerSite" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Validation.ValidationAdornerSite" />
      <MemberSignature Language="VB.NET" Value="see GetValidationAdornerSite, and SetValidationAdornerSite" />
      <MemberSignature Language="F#" Value="see GetValidationAdornerSite, and SetValidationAdornerSite" Usage="see GetValidationAdornerSite, and SetValidationAdornerSite" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera lub ustawia element, który pojawia się, aby wskazać, że wystąpił błąd walidacji w elemencie związanym, w którym ta właściwość jest ustawiona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwości <xref:System.Windows.Controls.Validation.ValidationAdornerSite%2A?displayProperty=nameWithType> i<xref:System.Windows.Controls.Validation.ValidationAdornerSiteFor%2A?displayProperty=nameWithType> dołączone do nich odwołują się nawzajem i można ustawić jedno z nich.  Załóżmy na przykład, że <xref:System.Windows.Controls.Label> wyświetla błędy walidacji występujące w powiązaniu <xref:System.Windows.Controls.TextBox>danych.  Aby ustalić tę relację, można wykonać jedną z następujących czynności:  
  
-   Ustaw <xref:System.Windows.Controls.Validation.ValidationAdornerSite%2A?displayProperty=nameWithType> dlaelementu<xref:System.Windows.Controls.Label>na. <xref:System.Windows.Controls.TextBox>  
  
-   Ustaw <xref:System.Windows.Controls.Validation.ValidationAdornerSiteFor%2A?displayProperty=nameWithType> dlaelementu<xref:System.Windows.Controls.TextBox>na. <xref:System.Windows.Controls.Label>  
  
-   Po ustawieniu jednej z właściwości druga właściwość jest ustawiana na element, dla którego ustawiono załączoną Właściwość; bez względu na to, które z poprzednich opcji zostały wybrane <xref:System.Windows.Controls.Validation.ValidationAdornerSite%2A?displayProperty=nameWithType> , <xref:System.Windows.Controls.TextBox> dla elementu jest <xref:System.Windows.Controls.Label> i <xref:System.Windows.Controls.Validation.ValidationAdornerSiteFor%2A> <xref:System.Windows.Controls.Label> jest <xref:System.Windows.Controls.TextBox>to.  
  
<a name="dependencyPropertyInfo_ValidationAdornerSite"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.Controls.Validation.ValidationAdornerSiteProperty>|  
|Właściwości metadanych ustawione na`true`|Brak|  
  
   
  
## Examples  
 Poniższy przykład używa <xref:System.Windows.Controls.Label> jako lokacji modułu <xref:System.Windows.Controls.ItemsControl>definiowania układu dla błędów walidacji występujących w elementach w. Przykład ustawia <xref:System.Windows.Controls.Validation.ValidationAdornerSite%2A?displayProperty=nameWithType> dla każdego kontenera elementów <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> w etykiecie.  W przykładzie zastosowano <xref:System.Windows.Controls.Validation.ValidationAdornerSiteFor%2A?displayProperty=nameWithType> właściwość w celu pobrania kontenera elementów, który zawiera błąd i wiąże <xref:System.Windows.Controls.ContentControl.Content%2A> <xref:System.Windows.Controls.Label> się z do pierwszego <xref:System.Windows.Controls.ValidationError> raportowanego.  
  
 [!code-xml[BindingGroupSnippets#ItemBindingGroup](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml#itembindinggroup)]  
[!code-xml[BindingGroupSnippets#ValidationAdornerSiteFor](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml#validationadornersitefor)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationAdornerSiteFor">
      <MemberSignature Language="C#" Value="see GetValidationAdornerSiteFor, and SetValidationAdornerSiteFor" />
      <MemberSignature Language="ILAsm" Value="see GetValidationAdornerSiteFor, and SetValidationAdornerSiteFor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" />
      <MemberSignature Language="VB.NET" Value="see GetValidationAdornerSiteFor, and SetValidationAdornerSiteFor" />
      <MemberSignature Language="F#" Value="see GetValidationAdornerSiteFor, and SetValidationAdornerSiteFor" Usage="see GetValidationAdornerSiteFor, and SetValidationAdornerSiteFor" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera lub ustawia element, dla którego ten element pojawi się, aby wskazać, że wystąpił błąd.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwości <xref:System.Windows.Controls.Validation.ValidationAdornerSite%2A?displayProperty=nameWithType> i<xref:System.Windows.Controls.Validation.ValidationAdornerSiteFor%2A?displayProperty=nameWithType> dołączone do nich odwołują się nawzajem i można ustawić jedno z nich.  Załóżmy na przykład, że <xref:System.Windows.Controls.Label> wyświetla błędy walidacji występujące w powiązaniu <xref:System.Windows.Controls.TextBox>danych.  Aby ustalić tę relację, można wykonać jedną z następujących czynności:  
  
-   Ustaw <xref:System.Windows.Controls.Validation.ValidationAdornerSite%2A?displayProperty=nameWithType> dlaelementu<xref:System.Windows.Controls.Label>na. <xref:System.Windows.Controls.TextBox>  
  
-   Ustaw <xref:System.Windows.Controls.Validation.ValidationAdornerSiteFor%2A?displayProperty=nameWithType> dlaelementu<xref:System.Windows.Controls.TextBox>na. <xref:System.Windows.Controls.Label>  
  
 Po ustawieniu jednej z właściwości druga właściwość jest ustawiana na element, dla którego ustawiono załączoną Właściwość; bez względu na to, które z poprzednich opcji zostały wybrane <xref:System.Windows.Controls.Validation.ValidationAdornerSite%2A?displayProperty=nameWithType> , <xref:System.Windows.Controls.TextBox> dla elementu jest <xref:System.Windows.Controls.Label> i <xref:System.Windows.Controls.Validation.ValidationAdornerSiteFor%2A> <xref:System.Windows.Controls.Label> jest <xref:System.Windows.Controls.TextBox>to.  
  
<a name="dependencyPropertyInfo_ValidationAdornerSiteFor"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.Controls.Validation.ValidationAdornerSiteForProperty>|  
|Właściwości metadanych ustawione na`true`|Brak|  
  
   
  
## Examples  
 Poniższy przykład używa <xref:System.Windows.Controls.Label> jako lokacji modułu <xref:System.Windows.Controls.ItemsControl>definiowania układu dla błędów walidacji występujących w elementach w. Przykład ustawia <xref:System.Windows.Controls.Validation.ValidationAdornerSite%2A?displayProperty=nameWithType> dla każdego kontenera elementów <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> w etykiecie.  W przykładzie zastosowano <xref:System.Windows.Controls.Validation.ValidationAdornerSiteFor%2A?displayProperty=nameWithType> właściwość w celu pobrania kontenera elementów, który zawiera błąd i wiąże <xref:System.Windows.Controls.ContentControl.Content%2A> <xref:System.Windows.Controls.Label> się z do pierwszego <xref:System.Windows.Controls.ValidationError> raportowanego.  
  
 [!code-xml[BindingGroupSnippets#ItemBindingGroup](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml#itembindinggroup)]  
[!code-xml[BindingGroupSnippets#ValidationAdornerSiteFor](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml#validationadornersitefor)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationAdornerSiteForProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ValidationAdornerSiteForProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ValidationAdornerSiteForProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Validation.ValidationAdornerSiteForProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ValidationAdornerSiteForProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ValidationAdornerSiteForProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ValidationAdornerSiteForProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Validation.ValidationAdornerSiteForProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Validation.ValidationAdornerSiteFor" /> Identyfikuje załączoną właściwość.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationAdornerSiteProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ValidationAdornerSiteProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ValidationAdornerSiteProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Validation.ValidationAdornerSiteProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ValidationAdornerSiteProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ValidationAdornerSiteProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ValidationAdornerSiteProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Validation.ValidationAdornerSiteProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Validation.ValidationAdornerSite" /> Identyfikuje załączoną właściwość.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
