<Type Name="Calendar" FullName="System.Windows.Controls.Calendar">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e02ec66d289565c1262bd3b5531aa6b79e75a25e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30697742" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Calendar : System.Windows.Controls.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Calendar extends System.Windows.Controls.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Calendar" />
  <TypeSignature Language="VB.NET" Value="Public Class Calendar&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class Calendar : System::Windows::Controls::Control" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_Root", Type=typeof(System.Windows.Controls.Panel))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_CalendarItem", Type=typeof(System.Windows.Controls.Primitives.CalendarItem))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje kontrolkę umożliwiającą użytkownikowi wybranie daty przy użyciu wyświetlanego kalendarza wizualnego.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.Controls.Calendar> formantu można używać samodzielnie lub w ramach listy rozwijanej <xref:System.Windows.Controls.DatePicker> formantu. Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Controls.DatePicker>.  
  
> [!NOTE]
>  <xref:System.Windows.Controls.Calendar> Obsługuje tylko kalendarza gregoriańskiego.  
  
 Poniższa tabela zawiera informacje o zadaniach, które są zwykle skojarzone z <xref:System.Windows.Controls.Calendar>.  
  
|Zadanie|Implementacja|  
|----------|--------------------|  
|Ma <xref:System.Windows.Controls.Calendar> wyświetlanie miesiąca, cały rok lub dekadę.|Ustaw <xref:System.Windows.Controls.Calendar.DisplayMode%2A> właściwości miesiąc, rok lub dekadę.|  
|Określ, czy użytkownik może wybrać datę, zakres dat lub wiele zakresów dat.|Użyj <xref:System.Windows.Controls.Calendar.SelectionMode%2A>.|  
|Określ daty nie można wybrać.|Użyj <xref:System.Windows.Controls.Calendar.BlackoutDates%2A> właściwości.|  
|Określ zakres dat który <xref:System.Windows.Controls.Calendar> Wyświetla.|Użyj <xref:System.Windows.Controls.Calendar.DisplayDateStart%2A> i <xref:System.Windows.Controls.Calendar.DisplayDateEnd%2A> właściwości.|  
|Określ, czy zostanie wyróżniona bieżącą datę.|Użyj <xref:System.Windows.Controls.Calendar.IsTodayHighlighted%2A> właściwości. Domyślnie <xref:System.Windows.Controls.Calendar.IsTodayHighlighted%2A> jest `true`.|  
|Zmień rozmiar <xref:System.Windows.Controls.Calendar>.|Użyj <xref:System.Windows.Controls.Viewbox> lub ustaw <xref:System.Windows.FrameworkElement.LayoutTransform%2A> właściwości <xref:System.Windows.Media.ScaleTransform>.  Należy pamiętać, że jeśli ustawisz <xref:System.Windows.FrameworkElement.Width%2A> i <xref:System.Windows.FrameworkElement.Height%2A> właściwości <xref:System.Windows.Controls.Calendar>, rzeczywista kalendarza nie zmienia jego rozmiar.|  
  
 <xref:System.Windows.Controls.Calendar> Kontrola zapewnia podstawowe nawigacji za pomocą myszy lub klawiatury. Poniższa tabela zawiera podsumowanie nawigacji klawiatury.  
  
|Kombinacja klawiszy|<xref:System.Windows.Controls.Calendar.DisplayMode%2A>|Akcja|  
|---------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------|------------|  
|STRZAŁKA|<xref:System.Windows.Controls.CalendarMode.Month>|Zmiany <xref:System.Windows.Controls.Calendar.SelectedDate%2A> właściwości Jeśli <xref:System.Windows.Controls.Calendar.SelectionMode%2A> nie ustawiono właściwości <xref:System.Windows.Controls.CalendarSelectionMode.None>.|  
|STRZAŁKA|<xref:System.Windows.Controls.CalendarMode.Year>|Zmiany w miesiącu <xref:System.Windows.Controls.Calendar.DisplayDate%2A> właściwości.  Należy pamiętać, że <xref:System.Windows.Controls.Calendar.SelectedDate%2A> nie ulega zmianie.|  
|STRZAŁKA|<xref:System.Windows.Controls.CalendarMode.Decade>|Zmienia roku <xref:System.Windows.Controls.Calendar.DisplayDate%2A>.  Należy pamiętać, że <xref:System.Windows.Controls.Calendar.SelectedDate%2A> nie ulega zmianie.|  
|SHIFT+ARROW|<xref:System.Windows.Controls.CalendarMode.Month>|Jeśli <xref:System.Windows.Controls.Calendar.SelectionMode%2A> nie jest ustawiony na <xref:System.Windows.Controls.CalendarSelectionMode.SingleDate> lub <xref:System.Windows.Controls.CalendarSelectionMode.None>, rozszerza zakresu dat zaznaczonego.|  
|STRONA GŁÓWNA|<xref:System.Windows.Controls.CalendarMode.Month>|Zmiany <xref:System.Windows.Controls.Calendar.SelectedDate%2A> pierwszy dzień miesiąca.|  
|STRONA GŁÓWNA|<xref:System.Windows.Controls.CalendarMode.Year>|Zmiany w miesiącu <xref:System.Windows.Controls.Calendar.DisplayDate%2A> na pierwszy miesiąc w roku. <xref:System.Windows.Controls.Calendar.SelectedDate%2A> Nie ulega zmianie.|  
|STRONA GŁÓWNA|<xref:System.Windows.Controls.CalendarMode.Decade>|Zmienia roku <xref:System.Windows.Controls.Calendar.DisplayDate%2A> do pierwszego roku dekadę. <xref:System.Windows.Controls.Calendar.SelectedDate%2A> Nie ulega zmianie.|  
|END|<xref:System.Windows.Controls.CalendarMode.Month>|Zmiany <xref:System.Windows.Controls.Calendar.SelectedDate%2A> do ostatniego dnia miesiąca.|  
|END|<xref:System.Windows.Controls.CalendarMode.Year>|Zmiany w miesiącu <xref:System.Windows.Controls.Calendar.DisplayDate%2A> ostatni miesiąc roku. <xref:System.Windows.Controls.Calendar.SelectedDate%2A> Nie ulega zmianie.|  
|END|<xref:System.Windows.Controls.CalendarMode.Decade>|Zmienia roku <xref:System.Windows.Controls.Calendar.DisplayDate%2A> do ostatniego roku dekadę. <xref:System.Windows.Controls.Calendar.SelectedDate%2A> Nie ulega zmianie.|  
|CTRL + STRZAŁKA W GÓRĘ|wszystkie|Przełącza do następnego większych <xref:System.Windows.Controls.Calendar.DisplayMode%2A>. Jeśli <xref:System.Windows.Controls.Calendar.DisplayMode%2A> jest już <xref:System.Windows.Controls.CalendarMode.Decade>, żadna akcja.|  
|CTRL + STRZAŁKA W DÓŁ|wszystkie|Przełącza do następnego mniejsze <xref:System.Windows.Controls.Calendar.DisplayMode%2A>. Jeśli <xref:System.Windows.Controls.Calendar.DisplayMode%2A> jest już <xref:System.Windows.Controls.CalendarMode.Month>, żadna akcja.|  
|SPACJA lub ENTER|<xref:System.Windows.Controls.CalendarMode.Year> lub <xref:System.Windows.Controls.CalendarMode.Decade>|Przełączniki <xref:System.Windows.Controls.Calendar.DisplayMode%2A> do <xref:System.Windows.Controls.CalendarMode.Month> lub <xref:System.Windows.Controls.CalendarMode.Year> reprezentowany przez element z fokusem.|  
  
## <a name="customizing-the-calendar-control"></a>Dostosowywanie formant kalendarza  
 Aby zastosować te same ustawienia właściwości z wieloma <xref:System.Windows.Controls.Calendar> formantów, użyj <xref:System.Windows.FrameworkElement.Style%2A> właściwości. Można zmodyfikować domyślne <xref:System.Windows.Controls.ControlTemplate> umożliwiają unikatowego wyglądu formantu. Aby uzyskać więcej informacji o tworzeniu <xref:System.Windows.Controls.ControlTemplate>, zobacz [Dostosowywanie wyglądu formant tworząc ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  Aby wyświetlić części i Stany, które są specyficzne dla <xref:System.Windows.Controls.Calendar>, zobacz [Style kalendarza i szablony](~/docs/framework/wpf/controls/calendar-styles-and-templates.md).  
  
 Właściwości zależności dla tego formantu może być ustawiona w stylu domyślnym formantu.  Jeśli właściwość jest ustawiona w stylu domyślnym, gdy formant jest wyświetlany w aplikacji właściwość może zmienić ze swojej wartości domyślnej. Domyślny styl jest określana, przez które kompozycji pulpitu jest używana, gdy aplikacja jest uruchomiona.  Aby uzyskać więcej informacji, zobacz [domyślnej kompozycji WPF](http://go.microsoft.com/fwlink/?LinkID=158252).  
  
> [!NOTE]
>  Ustawienie właściwości visual będzie miał wpływ tylko jeśli ta właściwość jest obecny w obu <xref:System.Windows.Controls.Calendar> formant na szablon domyślny i ustawić za pomocą. Lista właściwości visual można znaleźć w sekcji "Zmiana Visual struktury kontroli" [Dostosowywanie wyglądu formant tworząc ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
<a name="xamlObjectElementUsage_Calendar"></a>   
## <a name="xaml-object-element-usage"></a>Użycie elementu obiektu języka XAML  
  
```  
<Calendar .../>  
```  
  
   
  
## Examples  
 Na poniższej ilustracji przedstawiono dwie <xref:System.Windows.Controls.Calendar> określa jeden z opcji i dat niedostępności i jeden bez.  
  
 ![Formanty kalendarza](~/add/media/ndp-calendarcontrols.png "formantach kalendarza")  
Formanty kalendarza  
  
 Następujący kod i języka XAML tworzy stronę z dwoma <xref:System.Windows.Controls.Calendar> formantów, które jest podobny do ilustracji powyżej.  
  
 [!code-csharp[CalendarSnippets#1](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#1)]
 [!code-vb[CalendarSnippets#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#1)]
 [!code-xaml[CalendarSnippets#1](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.DatePicker" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Calendar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Calendar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Controls.Calendar" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlackoutDates">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.CalendarBlackoutDatesCollection BlackoutDates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.CalendarBlackoutDatesCollection BlackoutDates" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.BlackoutDates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BlackoutDates As CalendarBlackoutDatesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::CalendarBlackoutDatesCollection ^ BlackoutDates { System::Windows::Controls::CalendarBlackoutDatesCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.CalendarBlackoutDatesCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję dat, które są oznaczone jako bez możliwości zaznaczania.</summary>
        <value>Kolekcja dat nie może być zaznaczony. Wartość domyślna to pustej kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W tej kolekcji daty pojawi się szarych i krzyżowej limit w kalendarzu.  
  
 Aby wprowadzić wszystkich poprzednio dat nie możliwy, można użyć <xref:System.Windows.Controls.CalendarBlackoutDatesCollection.AddDatesInPast%2A> metoda kolekcji zwracane przez tę właściwość.  
  
<a name="xamlPropertyElementUsage_BlackoutDates"></a>   
## <a name="xaml-property-element-usage"></a>Użycie elementu właściwości języka XAML  
  
```  
<object>  
  <object.BlackoutDates>  
    oneOrMoreCalendarDateRanges  
  </object.BlackoutDates>  
</object>  
```  
  
<a name="xamlValues_BlackoutDates"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *oneOrMoreCalendarDateRanges*  
 Co najmniej jeden element obiektu typu <xref:System.Windows.Controls.CalendarDateRange>.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Windows.Controls.Calendar> mający niektórych dat nie może być zaznaczony.  
  
 [!code-csharp[CalendarSnippets#3](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#3)]
 [!code-vb[CalendarSnippets#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#3)]
 [!code-xaml[CalendarSnippets#3](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#3)]  
  
 Powyższy przykład generuje dane wyjściowe, która jest podobna do poniższej ilustracji.  
  
 ![Kalendarz z zastosowaniem dat nie może być zaznaczony. ] (~/add/media/ndp-calendarblackout.png "Kalendarza z zastosowaniem dat nie może być zaznaczony.")  
Kalendarz z dat nie może być zaznaczony.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarButtonStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style CalendarButtonStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style CalendarButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.CalendarButtonStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property CalendarButtonStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ CalendarButtonStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Style" /> skojarzone z formantu wewnętrzny <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> obiektu.</summary>
        <value>Bieżący styl <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_CalendarButtonStyle"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object CalendarButtonStyle="{resourceExtension styleResourceKey"/>  
  
```  
  
<a name="xamlValues_CalendarButtonStyle"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *resourceExtension*  
 Jedną z następujących: `StaticResource` lub `DynamicResource`. Aby uzyskać więcej informacji, zobacz [zasobów XAML](~/docs/framework/wpf/advanced/xaml-resources.md).  
  
 *styleResourceKey*  
 Klucz identyfikujący żądanych zasobów. Klucz odnosi się do istniejącego zasobu w <xref:System.Windows.ResourceDictionary>.  
  
<a name="dependencyPropertyInfo_CalendarButtonStyle"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.Controls.Calendar.CalendarButtonStyleProperty>|  
|Wartość właściwości metadanych **true**|Brak|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarButtonStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CalendarButtonStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CalendarButtonStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.CalendarButtonStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CalendarButtonStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CalendarButtonStyleProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Controls.Calendar.CalendarButtonStyle" /> właściwości zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarDayButtonStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style CalendarDayButtonStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style CalendarDayButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.CalendarDayButtonStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property CalendarDayButtonStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ CalendarDayButtonStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Style" /> skojarzone z formantu wewnętrzny <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" /> obiektu.</summary>
        <value>Bieżący styl <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_CalendarDayButtonStyle"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object CalendarDayButtonStyle="{resourceExtension styleResourceKey}"/>  
  
```  
  
<a name="xamlValues_CalendarDayButtonStyle"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *resourceExtension*  
 Jedną z następujących: `StaticResource` lub `DynamicResource`. Aby uzyskać więcej informacji, zobacz [zasobów XAML](~/docs/framework/wpf/advanced/xaml-resources.md).  
  
 *styleResourceKey*  
 Klucz identyfikujący żądanych zasobów. Klucz odnosi się do istniejącego zasobu w <xref:System.Windows.ResourceDictionary>.  
  
<a name="dependencyPropertyInfo_CalendarDayButtonStyle"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.Controls.Calendar.CalendarDayButtonStyleProperty>|  
|Wartość właściwości metadanych **true**|Brak|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarDayButtonStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CalendarDayButtonStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CalendarDayButtonStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.CalendarDayButtonStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CalendarDayButtonStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CalendarDayButtonStyleProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Controls.Calendar.CalendarDayButtonStyle" /> właściwości zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarItemStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style CalendarItemStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style CalendarItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.CalendarItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property CalendarItemStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ CalendarItemStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Style" /> skojarzone z formantu wewnętrzny <see cref="T:System.Windows.Controls.Primitives.CalendarItem" /> obiektu.</summary>
        <value>Bieżący styl <see cref="T:System.Windows.Controls.Primitives.CalendarItem" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_CalendarItemStyle"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object CalendarItemStyle="{resourceExtension styleResourceKey}"/>  
  
```  
  
<a name="xamlValues_CalendarItemStyle"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *resourceExtension*  
 Jedną z następujących: `StaticResource` lub `DynamicResource`. Aby uzyskać więcej informacji, zobacz [zasobów XAML](~/docs/framework/wpf/advanced/xaml-resources.md).  
  
 *styleResourceKey*  
 Klucz identyfikujący żądanych zasobów. Klucz odnosi się do istniejącego zasobu w <xref:System.Windows.ResourceDictionary>.  
  
<a name="dependencyPropertyInfo_CalendarItemStyle"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.Controls.Calendar.CalendarItemStyleProperty>|  
|Wartość właściwości metadanych **true**|Brak|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarItemStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CalendarItemStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CalendarItemStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.CalendarItemStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CalendarItemStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CalendarItemStyleProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Controls.Calendar.CalendarItemStyle" /> właściwości zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDate">
      <MemberSignature Language="C#" Value="public DateTime DisplayDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DisplayDate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.DisplayDate" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime DisplayDate { DateTime get(); void set(DateTime value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia datę do wyświetlenia.</summary>
        <value>Data do wyświetlenia. Wartość domyślna to <see cref="P:System.DateTime.Today" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Calendar.DisplayDate%2A> i <xref:System.Windows.Controls.Calendar.DisplayMode%2A> właściwości określ kalendarz wyświetla i co ma fokus w kalendarzu.  Użytkownik może zmienić <xref:System.Windows.Controls.Calendar.SelectedDate%2A> tylko wtedy, gdy <xref:System.Windows.Controls.Calendar.DisplayMode%2A> ma ustawioną wartość miesiąca, ale użytkownik może zmienić <xref:System.Windows.Controls.Calendar.DisplayDate%2A> gdy kalendarza jest w trybie roku i dekadę.  W poniższej tabeli opisano, jak zmiany trybu <xref:System.Windows.Controls.Calendar.DisplayDate%2A>.  
  
|DisplayMode|Akcja|  
|-----------------|------------|  
|Miesiąc|<xref:System.Windows.Controls.Calendar.DisplayDate%2A> zmiany, gdy użytkownik przechodzi do innej miesiąca.|  
|Rok|Miesiąc <xref:System.Windows.Controls.Calendar.DisplayDate%2A> zostanie zmieniona, gdy użytkownik kliknie lub przechodzi do innej miesiąca.|  
|Dekada|Rok <xref:System.Windows.Controls.Calendar.DisplayDate%2A> zostanie zmieniona, gdy użytkownik kliknie lub przechodzi do innego roku.|  
  
 <xref:System.Windows.Controls.Calendar.DisplayDate%2A> jest ignorowana, jeśli jego wartość jest spoza zakresu dat, które jest określone przez <xref:System.Windows.Controls.Calendar.DisplayDateStart%2A> i <xref:System.Windows.Controls.Calendar.DisplayDateEnd%2A> właściwości.  
  
<a name="dependencyPropertyInfo_DisplayDate"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.Controls.Calendar.DisplayDateProperty>|  
|Wartość właściwości metadanych **true**|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
<a name="xamlAttributeUsage_DisplayDate"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<Calendar DisplayDate="dateTimeString"/>  
```  
  
<a name="xamlValues_DisplayDate"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *dateTimeString*  
 Datę, która znajduje się w jednym z formatów wymienione w [składni języka XAML DateTime](~/docs/framework/wpf/advanced/datetime-xaml-syntax.md) tematu.  
  
   
  
## Examples  
 Poniższy kod konfiguruje <xref:System.Windows.Controls.Calendar> z określonego zakresu dat wyświetlanej i ustawia Data aktualnie wybrane i wyświetlane.  
  
 [!code-csharp[CalendarSnippets#2](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#2)]
 [!code-vb[CalendarSnippets#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#2)]
 [!code-xaml[CalendarSnippets#2](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.CalendarDateChangedEventArgs&gt; DisplayDateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.CalendarDateChangedEventArgs&gt; DisplayDateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Calendar.DisplayDateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event DisplayDateChanged As EventHandler(Of CalendarDateChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Controls::CalendarDateChangedEventArgs ^&gt; ^ DisplayDateChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.CalendarDateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="P:System.Windows.Controls.Calendar.DisplayDate" /> właściwości zostanie zmieniona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie występuje po <xref:System.Windows.Controls.Calendar.DisplayDate%2A> przypisano jego nowej wartości.  
  
<a name="xamlAttributeUsage_DisplayDateChanged"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<Calendar DisplayDateChanged="eventhandler"/>  
```  
  
   
  
## Examples  
 Następujące aktualizacje programu obsługi zdarzeń <xref:System.Windows.Controls.TextBox> z informacjami z <xref:System.Windows.Controls.Calendar.DisplayDateChanged> zdarzeń. Ten przykład jest częścią większego przykładu dostępne w <xref:System.Windows.Controls.Calendar> omówienie.  
  
 [!code-xaml[CalendarSnippets#6](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDateEnd">
      <MemberSignature Language="C#" Value="public Nullable&lt;DateTime&gt; DisplayDateEnd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; DisplayDateEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.DisplayDateEnd" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDateEnd As Nullable(Of DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;DateTime&gt; DisplayDateEnd { Nullable&lt;DateTime&gt; get(); void set(Nullable&lt;DateTime&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia datę ostatniej w zakres dat, który jest dostępny w kalendarzu.</summary>
        <value>Ostatni dzień, które są dostępne w kalendarzu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można ograniczyć zakres <xref:System.Windows.Controls.Calendar> przez ustawienie <xref:System.Windows.Controls.Calendar.DisplayDateStart%2A> i <xref:System.Windows.Controls.Calendar.DisplayDateEnd%2A> właściwości.  Użytkownik nie przewiń do lub wybierz daty poza tym zakresem.  Jeśli ustawisz <xref:System.Windows.Controls.Calendar.SelectedDate%2A> właściwości dzień po <xref:System.Windows.Controls.Calendar.DisplayDateEnd%2A>, <xref:System.Windows.Controls.Calendar.DisplayDateEnd%2A> ma ustawioną taką samą wartość jak <xref:System.Windows.Controls.Calendar.SelectedDate%2A>.  
  
<a name="dependencyPropertyInfo_DisplayDateEnd"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.Controls.Calendar.DisplayDateEndProperty>|  
|Wartość właściwości metadanych **true**|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
<a name="xamlAttributeUsage_DisplayDateEnd"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<Calendar DisplayDateEnd="dateTimeString"/>  
```  
  
<a name="xamlValues_DisplayDateEnd"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *dateTimeString*  
 Datę, która znajduje się w jednym z formatów wymienione w [składni języka XAML DateTime](~/docs/framework/wpf/advanced/datetime-xaml-syntax.md) tematu.  
  
   
  
## Examples  
 Poniższy kod konfiguruje <xref:System.Windows.Controls.Calendar> z określonego zakresu dat wyświetlanej i ustawia Data aktualnie wybrane i wyświetlane.  
  
 [!code-csharp[CalendarSnippets#2](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#2)]
 [!code-vb[CalendarSnippets#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#2)]
 [!code-xaml[CalendarSnippets#2](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" />
      </Docs>
    </Member>
    <Member MemberName="DisplayDateEndProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DisplayDateEndProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DisplayDateEndProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.DisplayDateEndProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DisplayDateEndProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DisplayDateEndProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Controls.Calendar.DisplayDateEnd" /> właściwości zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DisplayDateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DisplayDateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.DisplayDateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DisplayDateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DisplayDateProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Controls.Calendar.DisplayDate" /> właściwości zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDateStart">
      <MemberSignature Language="C#" Value="public Nullable&lt;DateTime&gt; DisplayDateStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; DisplayDateStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.DisplayDateStart" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDateStart As Nullable(Of DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;DateTime&gt; DisplayDateStart { Nullable&lt;DateTime&gt; get(); void set(Nullable&lt;DateTime&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia pierwszą datę, która jest dostępna w kalendarzu.</summary>
        <value>Pierwszą datę, która jest dostępna w kalendarzu. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można ograniczyć zakres kalendarza przez ustawienie <xref:System.Windows.Controls.Calendar.DisplayDateStart%2A> i <xref:System.Windows.Controls.Calendar.DisplayDateEnd%2A> właściwości.  Użytkownik nie przewiń do lub wybierz daty poza tym zakresem.  Jeśli ustawisz <xref:System.Windows.Controls.Calendar.SelectedDate%2A> właściwości dzień przed <xref:System.Windows.Controls.Calendar.DisplayDateStart%2A>, <xref:System.Windows.Controls.Calendar.DisplayDateStart%2A> ma ustawioną taką samą wartość jak <xref:System.Windows.Controls.Calendar.SelectedDate%2A>.  
  
<a name="dependencyPropertyInfo_DisplayDateStart"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.Controls.Calendar.DisplayDateStartProperty>|  
|Wartość właściwości metadanych **true**|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
<a name="xamlAttributeUsage_DisplayDateStart"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<Calendar DisplayDateStart="dateTimeString"/>  
```  
  
<a name="xamlValues_DisplayDateStart"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *dateTimeString*  
 Datę, która znajduje się w jednym z formatów wymienione w [składni języka XAML DateTime](~/docs/framework/wpf/advanced/datetime-xaml-syntax.md) tematu.  
  
   
  
## Examples  
 Poniższy kod konfiguruje <xref:System.Windows.Controls.Calendar> z określonego zakresu dat wyświetlanej i ustawia Data aktualnie wybrane i wyświetlane.  
  
 [!code-csharp[CalendarSnippets#2](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#2)]
 [!code-vb[CalendarSnippets#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#2)]
 [!code-xaml[CalendarSnippets#2](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" />
      </Docs>
    </Member>
    <Member MemberName="DisplayDateStartProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DisplayDateStartProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DisplayDateStartProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.DisplayDateStartProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DisplayDateStartProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DisplayDateStartProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Controls.Calendar.DisplayDateStart" /> właściwości zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayMode">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.CalendarMode DisplayMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.CalendarMode DisplayMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.DisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayMode As CalendarMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::CalendarMode DisplayMode { System::Windows::Controls::CalendarMode get(); void set(System::Windows::Controls::CalendarMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.CalendarMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy miesiąc, rok lub dekadę ma być wyświetlana kalendarza.</summary>
        <value>Wartość, która wskazuje, jaki czas <see cref="T:System.Windows.Controls.Calendar" /> powinien być wyświetlany.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kalendarz można wyświetlić, miesiąc, rok lub dekadę. W poniższej tabeli przedstawiono, jak użytkownik przechodzi do każdego trybu.  
  
|DisplayMode|Akcja|  
|-----------------|------------|  
|Miesiąc|Aby przejść do trybu roku, kliknij nagłówek miesiąca.|  
|Rok|Aby przejść do trybu dekadę, kliknij nagłówek roku. Aby przejść do trybu miesiąca, kliknij jeden z wyświetlonej miesięcy.|  
|Dekada|Aby przejść do trybu roku, kliknij jeden z wyświetlanych lata.|  
  
<a name="dependencyPropertyInfo_DisplayMode"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.Controls.Calendar.DisplayModeProperty>|  
|Wartość właściwości metadanych **true**|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
   
  
## Examples  
 Poniższy przykład tworzy kalendarza, który wyświetla miesięcy w roku i uchwytów <xref:System.Windows.Controls.Calendar.DisplayModeChanged> zdarzeń, aby po kliknięciu przez użytkownika na miesiąc lub rok, Kalendarz nie zmienia jej <xref:System.Windows.Controls.Calendar.DisplayMode%2A>.  
  
 [!code-csharp[CalendarSnippets#4](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#4)]
 [!code-vb[CalendarSnippets#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#4)]
 [!code-xaml[CalendarSnippets#4](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#4)]  
  
 [!code-csharp[CalendarSnippets#5](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#5)]
 [!code-vb[CalendarSnippets#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.CalendarModeChangedEventArgs&gt; DisplayModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.CalendarModeChangedEventArgs&gt; DisplayModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Calendar.DisplayModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event DisplayModeChanged As EventHandler(Of CalendarModeChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Controls::CalendarModeChangedEventArgs ^&gt; ^ DisplayModeChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.CalendarModeChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="P:System.Windows.Controls.Calendar.DisplayMode" /> właściwości zostanie zmieniona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_DisplayModeChanged"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<Calendar DisplayModeChanged="eventhandler"/>  
```  
  
   
  
## Examples  
 Poniższy przykład tworzy kalendarza, który wyświetla miesięcy w roku i uchwytów <xref:System.Windows.Controls.Calendar.DisplayModeChanged> zdarzeń, aby po kliknięciu przez użytkownika na miesiąc lub rok, Kalendarz nie zmienia jej <xref:System.Windows.Controls.Calendar.DisplayMode%2A>.  
  
 [!code-csharp[CalendarSnippets#4](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#4)]
 [!code-vb[CalendarSnippets#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#4)]
 [!code-xaml[CalendarSnippets#4](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#4)]  
  
 [!code-csharp[CalendarSnippets#5](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#5)]
 [!code-vb[CalendarSnippets#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DisplayModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DisplayModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.DisplayModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DisplayModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DisplayModeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Controls.Calendar.DisplayMode" /> właściwości zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstDayOfWeek">
      <MemberSignature Language="C#" Value="public DayOfWeek FirstDayOfWeek { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DayOfWeek FirstDayOfWeek" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.FirstDayOfWeek" />
      <MemberSignature Language="VB.NET" Value="Public Property FirstDayOfWeek As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DayOfWeek FirstDayOfWeek { DayOfWeek get(); void set(DayOfWeek value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia dzień, który jest uznawany za początek tygodnia.</summary>
        <value>A <see cref="T:System.DayOfWeek" /> reprezentujący początek tygodnia. Wartość domyślna to <see cref="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" /> która zależy od bieżącej kultury.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_FirstDayOfWeek"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.Controls.Calendar.FirstDayOfWeekProperty>|  
|Wartość właściwości metadanych **true**|Brak|  
  
<a name="xamlAttributeUsage_FirstDayOfWeek"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
 \<Kalendarza **FirstDayOfWeek**= "<xref:System.DayOfWeek>" / >  
  
   
  
## Examples  
 W poniższym przykładzie <xref:System.Windows.Controls.Calendar.FirstDayOfWeek%2A> właściwości <xref:System.DayOfWeek.Monday>.  
  
 [!code-xaml[CalendarSnippets#8](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstDayOfWeekProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FirstDayOfWeekProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FirstDayOfWeekProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.FirstDayOfWeekProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FirstDayOfWeekProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FirstDayOfWeekProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Controls.Calendar.FirstDayOfWeek" /> właściwości zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTodayHighlighted">
      <MemberSignature Language="C#" Value="public bool IsTodayHighlighted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTodayHighlighted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.IsTodayHighlighted" />
      <MemberSignature Language="VB.NET" Value="Public Property IsTodayHighlighted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTodayHighlighted { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy zostanie wyróżniona bieżącą datę.</summary>
        <value>
          <see langword="true" /> Jeśli bieżąca data jest wyróżniony; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsTodayHighlighted"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.Controls.Calendar.IsTodayHighlightedProperty>|  
|Wartość właściwości metadanych **true**|Brak|  
  
<a name="xamlAttributeUsage_IsTodayHighlighted"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<Calendar IsTodayHighlighted="bool"/>  
```  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Windows.Controls.Calendar> gdzie nie zostanie wyróżniona bieżącą datę.  
  
 [!code-csharp[CalendarSnippets#3](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#3)]
 [!code-vb[CalendarSnippets#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#3)]
 [!code-xaml[CalendarSnippets#3](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTodayHighlightedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsTodayHighlightedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsTodayHighlightedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.IsTodayHighlightedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTodayHighlightedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsTodayHighlightedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Controls.Calendar.IsTodayHighlighted" /> właściwości zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy drzewa wizualnego dla <see cref="T:System.Windows.Controls.Calendar" /> kontroli, gdy nowy szablon jest stosowany.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana przy każdym kodu aplikacji lub proces wewnętrzny, takie jak ponowne tworzenie układu przebiegu, wywołuje <xref:System.Windows.FrameworkElement.ApplyTemplate%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" /> do użycia przez [!INCLUDE[silverlight](~/includes/silverlight-md.md)] infrastruktury automatyzacji.</summary>
        <returns>A <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" /> dla <see cref="T:System.Windows.Controls.Calendar" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda tworzy nowy <xref:System.Windows.Automation.Peers.CalendarAutomationPeer> wystąpienia, jeśli nie został utworzony dla wystąpienia formantu; w przeciwnym razie zwraca <xref:System.Windows.Automation.Peers.CalendarAutomationPeer> wcześniej utworzony.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDisplayDateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDisplayDateChanged (System.Windows.Controls.CalendarDateChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDisplayDateChanged(class System.Windows.Controls.CalendarDateChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.OnDisplayDateChanged(System.Windows.Controls.CalendarDateChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDisplayDateChanged (e As CalendarDateChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDisplayDateChanged(System::Windows::Controls::CalendarDateChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.CalendarDateChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Controls.Calendar.DisplayDateChanged" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Controls.Calendar.OnDisplayDateChanged(System.Windows.Controls.CalendarDateChangedEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Controls.Calendar.OnDisplayDateChanged(System.Windows.Controls.CalendarDateChangedEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDisplayModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDisplayModeChanged (System.Windows.Controls.CalendarModeChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDisplayModeChanged(class System.Windows.Controls.CalendarModeChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.OnDisplayModeChanged(System.Windows.Controls.CalendarModeChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDisplayModeChanged (e As CalendarModeChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDisplayModeChanged(System::Windows::Controls::CalendarModeChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.CalendarModeChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Controls.Calendar.DisplayModeChanged" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Controls.Calendar.OnDisplayModeChanged(System.Windows.Controls.CalendarModeChangedEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Controls.Calendar.OnDisplayModeChanged(System.Windows.Controls.CalendarModeChangedEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dane zdarzenia.</param>
        <summary>Udostępnia klasę obsługi <see cref="E:System.Windows.UIElement.KeyDown" /> kierowanego zdarzenia, który występuje, gdy użytkownik naciśnie klawisza, gdy formant ma fokus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Calendar> zastępuje <xref:System.Windows.Controls.Calendar.OnKeyDown%2A> metody do obsługi nawigacji klawiatury.  Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Controls.Calendar> klasy. Ta implementacja oznacza <xref:System.Windows.UIElement.KeyDown> zdarzeń jako obsługiwany dzięki ustawieniu <xref:System.Windows.RoutedEventArgs.Handled%2A> właściwości danych zdarzenia `true` po naciśnięciu klawisza, takich jak klawisz strzałki, wykonuje akcję nawigacji.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Jeśli można zastąpić <see cref="M:System.Windows.Controls.Calendar.OnKeyDown(System.Windows.Input.KeyEventArgs)" />, zawsze wywoływać implementację podstawową Twojej <see cref="M:System.Windows.Controls.Calendar.OnKeyDown(System.Windows.Input.KeyEventArgs)" /> implementacji. Nie można wywoływać implementację podstawową zapobiega obsługi zdarzeń z obsługą klasy, która może zmienić zachowania w czasie wykonywania końcowej klasy klas podstawowych. W zależności od wymagań, można wywoływać implementację podstawową przed lub po Twoje specjalnej obsługi.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dane zdarzenia.</param>
        <summary>Udostępnia klasę obsługi <see cref="E:System.Windows.UIElement.KeyUp" /> kierowanego zdarzenia, który występuje, gdy użytkownik zwolni klawisz, gdy formant ma fokus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Calendar> zastępuje <xref:System.Windows.Controls.Calendar.OnKeyDown%2A> metody do obsługi nawigacji klawiatury.  Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Controls.Calendar> klasy. Ta implementacja nie zmienia stanu obsługiwany ( <xref:System.Windows.RoutedEventArgs.Handled%2A> właściwości) z <xref:System.Windows.UIElement.KeyUp> danych zdarzenia.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Jeśli można zastąpić <see cref="M:System.Windows.Controls.Calendar.OnKeyUp(System.Windows.Input.KeyEventArgs)" />, zawsze wywoływać implementację podstawową Twojej <see cref="M:System.Windows.Controls.Calendar.OnKeyUp(System.Windows.Input.KeyEventArgs)" /> implementacji. Nie można wywoływać implementację podstawową zapobiega obsługi zdarzeń z obsługą klasy, która może zmienić zachowania w czasie wykonywania końcowej klasy klas podstawowych. W zależności od wymagań, można wywoływać implementację podstawową przed lub po Twoje specjalnej obsługi.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedDatesChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedDatesChanged (System.Windows.Controls.SelectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedDatesChanged(class System.Windows.Controls.SelectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.OnSelectedDatesChanged(System.Windows.Controls.SelectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedDatesChanged (e As SelectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedDatesChanged(System::Windows::Controls::SelectionChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.SelectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Controls.Calendar.SelectedDatesChanged" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrolka wywołuje <xref:System.Windows.Controls.Calendar.SelectedDatesChanged> zdarzenia przez wywołanie metody <xref:System.Windows.UIElement.RaiseEvent%2A>. Aby uzyskać więcej informacji, zobacz [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Controls.Calendar.OnSelectedDatesChanged(System.Windows.Controls.SelectionChangedEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Controls.Calendar.OnSelectedDatesChanged(System.Windows.Controls.SelectionChangedEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectionModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.OnSelectionModeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionModeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionModeChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Windows.Controls.Calendar.SelectionModeChanged" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Windows.Controls.Calendar.OnSelectionModeChanged(System.EventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Windows.Controls.Calendar.OnSelectionModeChanged(System.EventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SelectedDate">
      <MemberSignature Language="C#" Value="public Nullable&lt;DateTime&gt; SelectedDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; SelectedDate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.SelectedDate" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedDate As Nullable(Of DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;DateTime&gt; SelectedDate { Nullable&lt;DateTime&gt; get(); void set(Nullable&lt;DateTime&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia aktualnie zaznaczona data.</summary>
        <value>Data, w obecnie wybrany. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_SelectedDate"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.Controls.Calendar.SelectedDateProperty>|  
|Wartość właściwości metadanych **true**|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
 Tej właściwości należy użyć podczas <xref:System.Windows.Controls.Calendar.SelectionMode%2A> ma ustawioną wartość <xref:System.Windows.Controls.CalendarSelectionMode.SingleDate>. W innych trybów, ta właściwość będzie zawsze pierwszą datę w <xref:System.Windows.Controls.Calendar.SelectedDates%2A>.  
  
<a name="xamlAttributeUsage_SelectedDate"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<Calendar SelectedDate="dateTimeString"/>  
```  
  
<a name="xamlValues_SelectedDate"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *dateTimeString*  
 Datę, która znajduje się w jednym z formatów wymienione w [składni języka XAML DateTime](~/docs/framework/wpf/advanced/datetime-xaml-syntax.md) tematu.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Windows.Controls.Calendar> z określonego zakresu dat wyświetlanej i ustawia Data aktualnie wybrane i wyświetlane.  
  
 [!code-csharp[CalendarSnippets#2](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#2)]
 [!code-vb[CalendarSnippets#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#2)]
 [!code-xaml[CalendarSnippets#2](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określona data jest poza zakresem określonym przez <see cref="P:System.Windows.Controls.Calendar.DisplayDateStart" /> i <see cref="P:System.Windows.Controls.Calendar.DisplayDateEnd" />  
  
 —lub—  
  
 Określona data jest w <see cref="P:System.Windows.Controls.Calendar.BlackoutDates" /> kolekcji.</exception>
        <exception cref="T:System.InvalidOperationException">Jeśli ustawiona jest wartość innych niż <see langword="null" /> podczas <see cref="P:System.Windows.Controls.Calendar.SelectionMode" /> ma ustawioną wartość <see cref="F:System.Windows.Controls.CalendarSelectionMode.None" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectedDateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectedDateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectedDateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.SelectedDateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectedDateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectedDateProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Controls.Calendar.SelectedDate" /> właściwości zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedDates">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.SelectedDatesCollection SelectedDates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.SelectedDatesCollection SelectedDates" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.SelectedDates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedDates As SelectedDatesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::SelectedDatesCollection ^ SelectedDates { System::Windows::Controls::SelectedDatesCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.SelectedDatesCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję wybranej daty.</summary>
        <value>A <see cref="T:System.Windows.Controls.SelectedDatesCollection" /> obiekt, który zawiera aktualnie wybranej daty. Wartością domyślną jest pusta kolekcja.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Daty można dodać do kolekcji pojedynczo lub w zakresie przy użyciu <xref:System.Windows.Controls.SelectedDatesCollection.AddRange%2A> metody. W zależności od wartości <xref:System.Windows.Controls.Calendar.SelectionMode%2A> właściwości, dodając datę lub zakres do kolekcji może spowodować jej do wyczyszczenia. W poniższej tabeli wymieniono jak <xref:System.Windows.Controls.CalendarSelectionMode> wpływa na <xref:System.Windows.Controls.Calendar.SelectedDates%2A> właściwości.  
  
|CalendarSelectionMode|Opis|  
|---------------------------|-----------------|  
|<xref:System.Windows.Controls.CalendarSelectionMode.None>|Żadne opcje nie są dozwolone. <xref:System.Windows.Controls.Calendar.SelectedDate%2A> Nie można ustawić wartości nie można dodać do <xref:System.Windows.Controls.Calendar.SelectedDates%2A>.|  
|<xref:System.Windows.Controls.CalendarSelectionMode.SingleDate>|Można wybrać tylko jeden daty, przez ustawienie <xref:System.Windows.Controls.Calendar.SelectedDate%2A> lub pierwsza wartość <xref:System.Windows.Controls.Calendar.SelectedDates%2A>. <xref:System.Windows.Controls.SelectedDatesCollection.AddRange%2A> Nie można użyć.|  
|<xref:System.Windows.Controls.CalendarSelectionMode.SingleRange>|Zakres dat można wybrać. Ustawienie <xref:System.Windows.Controls.Calendar.SelectedDate%2A>, dodając datę indywidualnie do <xref:System.Windows.Controls.Calendar.SelectedDates%2A>, lub za pomocą <xref:System.Windows.Controls.SelectedDatesCollection.AddRange%2A> usunie wszystkie poprzednie wartości z <xref:System.Windows.Controls.Calendar.SelectedDates%2A>.|  
|<xref:System.Windows.Controls.CalendarSelectionMode.MultipleRange>|Można wybrać wiele zakresów nieciągłych daty. Dodawanie indywidualnie do daty <xref:System.Windows.Controls.Calendar.SelectedDates%2A> lub przy użyciu <xref:System.Windows.Controls.SelectedDatesCollection.AddRange%2A> nie usunie <xref:System.Windows.Controls.Calendar.SelectedDates%2A>. Ustawienie <xref:System.Windows.Controls.Calendar.SelectedDate%2A> nadal spowoduje wyczyszczenie <xref:System.Windows.Controls.Calendar.SelectedDates%2A>, ale następnie można dodać dodatkowe dane lub zakresów. Dodawanie zakresu, który zawiera niektóre daty, które zostały już wybrane lub pokrywa się z innym wyniki zakresu w Unii zakresy i nie powoduje, że wystąpił wyjątek.|  
  
<a name="xamlPropertyElementUsage_SelectedDates"></a>   
## <a name="xaml-property-element-usage"></a>Użycie elementu właściwości języka XAML  
  
```  
<object>  
  <object.SelectedDates>  
    oneOrMoreDateTimeObjects  
  </object.SelectedDates>  
</object>  
  
```  
  
<a name="xamlValues_SelectedDates"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *oneOrMoreDateTimeObjects*  
 Co najmniej jeden <xref:System.DateTime> obiekt elementów.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Windows.Controls.Calendar> zawierającej wiele zakresów dat zaznaczony.  
  
 [!code-csharp[CalendarSnippets#3](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#3)]
 [!code-vb[CalendarSnippets#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#3)]
 [!code-xaml[CalendarSnippets#3](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedDatesChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.SelectionChangedEventArgs&gt; SelectedDatesChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.SelectionChangedEventArgs&gt; SelectedDatesChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Calendar.SelectedDatesChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedDatesChanged As EventHandler(Of SelectionChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Controls::SelectionChangedEventArgs ^&gt; ^ SelectedDatesChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.SelectionChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy kolekcja zwrócony przez <see cref="P:System.Windows.Controls.Calendar.SelectedDates" /> właściwości zostanie zmieniona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_SelectedDatesChanged"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<Calendar SelectedDatesChanged="eventhandler"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedDatesChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SelectedDatesChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SelectedDatesChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.SelectedDatesChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectedDatesChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SelectedDatesChangedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.Controls.Calendar.SelectedDatesChanged" /> kierowanego zdarzenia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionMode">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.CalendarSelectionMode SelectionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.CalendarSelectionMode SelectionMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.SelectionMode" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionMode As CalendarSelectionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::CalendarSelectionMode SelectionMode { System::Windows::Controls::CalendarSelectionMode get(); void set(System::Windows::Controls::CalendarSelectionMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.CalendarSelectionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, jakie opcje są dozwolone.</summary>
        <value>Wartość, która wskazuje bieżący tryb zaznaczania. Wartość domyślna to <see cref="F:System.Windows.Controls.CalendarSelectionMode.SingleDate" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_SelectionMode"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.Controls.Calendar.SelectionModeProperty>|  
|Wartość właściwości metadanych **true**|Brak|  
  
 Ta właściwość określa, czy <xref:System.Windows.Controls.Calendar> nie zaznaczenia, wybór pojedyncza data lub zaznaczenie wielu daty. Tryb zaznaczania zostanie określony z <xref:System.Windows.Controls.CalendarSelectionMode> wyliczenia.  
  
 Gdy ta właściwość zostanie zmieniona, wszystkich zaznaczonych dat zostaną wyczyszczone.  
  
<a name="xamlAttributeUsage_SelectionMode"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
 \<Kalendarza **SelectionMode**= "<xref:System.Windows.Controls.CalendarSelectionMode>" / >  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Windows.Controls.Calendar> zawierającej wiele zakresów dat zaznaczony.  
  
 [!code-csharp[CalendarSnippets#3](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#3)]
 [!code-vb[CalendarSnippets#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#3)]
 [!code-xaml[CalendarSnippets#3](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;EventArgs&gt; SelectionModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.EventArgs&gt; SelectionModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Calendar.SelectionModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event SelectionModeChanged As EventHandler(Of EventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;EventArgs ^&gt; ^ SelectionModeChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.EventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="P:System.Windows.Controls.Calendar.SelectionMode" /> zmiany.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.SelectionModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionModeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Controls.Calendar.SelectionMode" /> właściwości zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Udostępnia reprezentację tekstu w wybranej daty.</summary>
        <returns>Tekstowa reprezentacja wybranej daty lub ciąg pusty Jeśli <see cref="P:System.Windows.Controls.Calendar.SelectedDate" /> jest <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>