<Type Name="ValidationError" FullName="System.Windows.Controls.ValidationError">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4767e8431a1a62dbe6f99f56d527d5c5db3c5cda" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39806629" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ValidationError" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ValidationError extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ValidationError" />
  <TypeSignature Language="VB.NET" Value="Public Class ValidationError" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValidationError" />
  <TypeSignature Language="F#" Value="type ValidationError = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje błąd sprawdzania poprawności, który jest tworzony przez powiązanie aparatu, kiedy <see cref="T:System.Windows.Controls.ValidationRule" /> zgłasza błąd sprawdzania poprawności, lub za pomocą <see cref="M:System.Windows.Controls.Validation.MarkInvalid(System.Windows.Data.BindingExpressionBase,System.Windows.Controls.ValidationError)" /> metoda jawnie.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Modelu powiązania danych pozwala kojarzyć reguły sprawdzania poprawności z Twojej <xref:System.Windows.Data.Binding> obiektu. Sprawdzanie poprawności jest wykonywane podczas transferu docelowego do źródła wartości przed wywołaniem konwertera. Poniżej opisano proces sprawdzania poprawności.  
  
1.  Wartość jest przesyłane z właściwością target właściwości źródła, aparat powiązania danych najpierw usuwa dowolne <xref:System.Windows.Controls.ValidationError> , być może zostały dodane do <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> dołączona właściwość elementu powiązania. Następnie sprawdza, czy wszystkie niestandardowe reguły sprawdzania poprawności są zdefiniowane w tym <xref:System.Windows.Data.Binding>, w którym to przypadku wywoływanych przez nią <xref:System.Windows.Controls.ValidationRule.Validate%2A> metody na każdym <xref:System.Windows.Controls.ValidationRule> przekazać do jednego z nich ulegnie awarii lub do chwili ich wszystkich.  
  
2.  Po utworzeniu reguły niestandardowej, które nie zostały spełnione, aparat powiązania tworzy <xref:System.Windows.Controls.ValidationError> obiektu i dodaje go do <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> kolekcji elementu powiązania. Gdy <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> nie jest pusta, <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType> dołączonych właściwości elementu ustawiono `true`. Ponadto jeśli <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A> właściwość <xref:System.Windows.Data.Binding> jest ustawiona na `true`, wywołuje aparat powiązania, a następnie <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> dołączone zdarzenie w elemencie.  
  
3.  Jeśli wszystkie reguły zakończy się pomyślnie, aparat powiązania wywołuje konwertera, jeśli taka istnieje.  
  
4.  Jeśli konwerter zakończy się pomyślnie, aparat powiązanie wywołań metody ustawiającej właściwość source.  
  
5.  Jeśli ma powiązanie <xref:System.Windows.Controls.ExceptionValidationRule> skojarzonych z nim i podczas wykonywania kroku 3 lub 4 jest zgłaszany wyjątek, aparat powiązania sprawdza, czy <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>. Możesz użyć <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> wywołanie zwrotne w celu zapewnienia obsługi niestandardowej obsługi wyjątków. Jeśli <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> nie jest określona w <xref:System.Windows.Data.Binding>, aparat powiązania tworzy <xref:System.Windows.Controls.ValidationError> z wyjątkiem i dodaje go do <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> kolekcji elementu powiązania.  
  
 Transfer prawidłową wartość, w dowolnym kierunku (obiekt docelowy źródło lub źródła do docelowego) spowoduje wyczyszczenie <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> dołączona właściwość.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano wyzwalacz stylu, który tworzy <xref:System.Windows.Controls.ToolTip> raporty komunikat o błędzie weryfikacji. <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> Dołączoną właściwość zwraca kolekcję <xref:System.Windows.Controls.ValidationError> obiektów na elementu powiązania.  
  
 [!code-xaml[DataBindingLab#14](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#14)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.DataErrorValidationRule" />
    <altmember cref="T:System.Windows.Controls.ValidationRule" />
    <altmember cref="M:System.Windows.Controls.Validation.MarkInvalid(System.Windows.Data.BindingExpressionBase,System.Windows.Controls.ValidationError)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Controls.ValidationError" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValidationError (System.Windows.Controls.ValidationRule ruleInError, object bindingInError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Controls.ValidationRule ruleInError, object bindingInError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ruleInError As ValidationRule, bindingInError As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValidationError(System::Windows::Controls::ValidationRule ^ ruleInError, System::Object ^ bindingInError);" />
      <MemberSignature Language="F#" Value="new System.Windows.Controls.ValidationError : System.Windows.Controls.ValidationRule * obj -&gt; System.Windows.Controls.ValidationError" Usage="new System.Windows.Controls.ValidationError (ruleInError, bindingInError)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="ruleInError" Type="System.Windows.Controls.ValidationRule" />
        <Parameter Name="bindingInError" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ruleInError">Reguła, która wykryto błąd sprawdzania poprawności.</param>
        <param name="bindingInError">
          <see cref="T:System.Windows.Data.BindingExpression" /> Lub <see cref="T:System.Windows.Data.MultiBindingExpression" /> obiektu z powodu błędu sprawdzania poprawności.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Controls.ValidationError" /> klasy przy użyciu określonych parametrów.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValidationError (System.Windows.Controls.ValidationRule ruleInError, object bindingInError, object errorContent, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Controls.ValidationRule ruleInError, object bindingInError, object errorContent, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValidationError(System::Windows::Controls::ValidationRule ^ ruleInError, System::Object ^ bindingInError, System::Object ^ errorContent, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Windows.Controls.ValidationError : System.Windows.Controls.ValidationRule * obj * obj * Exception -&gt; System.Windows.Controls.ValidationError" Usage="new System.Windows.Controls.ValidationError (ruleInError, bindingInError, errorContent, exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ruleInError" Type="System.Windows.Controls.ValidationRule" />
        <Parameter Name="bindingInError" Type="System.Object" />
        <Parameter Name="errorContent" Type="System.Object" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="ruleInError">Reguła, która wykryto błąd sprawdzania poprawności.</param>
        <param name="bindingInError">
          <see cref="T:System.Windows.Data.BindingExpression" /> Lub <see cref="T:System.Windows.Data.MultiBindingExpression" /> obiektu z powodu błędu sprawdzania poprawności.</param>
        <param name="errorContent">Informacje o tym błędzie.</param>
        <param name="exception">Wyjątek, który spowodował niepowodzenie weryfikacji. Ten parametr jest opcjonalny i może być równa <see langword="null" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Controls.ValidationError" /> klasy przy użyciu określonych parametrów.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingInError">
      <MemberSignature Language="C#" Value="public object BindingInError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object BindingInError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationError.BindingInError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingInError As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ BindingInError { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingInError : obj" Usage="System.Windows.Controls.ValidationError.BindingInError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Windows.Data.BindingExpression" /> lub <see cref="T:System.Windows.Data.MultiBindingExpression" /> obiektu to <see cref="T:System.Windows.Controls.ValidationError" />. Obiekt jest jawnie oznaczona nieprawidłowy lub zawiera regułę sprawdzania poprawności nie powiodło się.</summary>
        <value>
          <see cref="T:System.Windows.Data.BindingExpression" /> Lub <see cref="T:System.Windows.Data.MultiBindingExpression" /> obiektu to <see cref="T:System.Windows.Controls.ValidationError" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorContent">
      <MemberSignature Language="C#" Value="public object ErrorContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ErrorContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationError.ErrorContent" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorContent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ErrorContent { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ErrorContent : obj with get, set" Usage="System.Windows.Controls.ValidationError.ErrorContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt, który zawiera dodatkowy kontekst, w tym <see cref="T:System.Windows.Controls.ValidationError" />, takie jak ciąg opisujący błąd.</summary>
        <value>Obiekt, który zawiera dodatkowy kontekst, w tym <see cref="T:System.Windows.Controls.ValidationError" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_ErrorContent"></a>   
## <a name="xaml-text-usage"></a>Użycie tekstu w języku XAML  
 W sekcji przykład przykładem.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano wyzwalacz stylu, który tworzy <xref:System.Windows.Controls.ToolTip> raporty komunikat o błędzie weryfikacji. <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> Dołączoną właściwość zwraca kolekcję <xref:System.Windows.Controls.ValidationError> obiektów na elementu powiązania.  
  
 [!code-xaml[DataBindingLab#14](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationError.Exception" />
      <MemberSignature Language="VB.NET" Value="Public Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); void set(Exception ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception with get, set" Usage="System.Windows.Controls.ValidationError.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Exception" /> obiektów, które było przyczyną tego <see cref="T:System.Windows.Controls.ValidationError" />, jeśli ten błąd jest wynikiem wyjątek.</summary>
        <value>
          <see cref="T:System.Exception" /> Obiektu, jeśli ten błąd jest wynikiem wyjątek.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RuleInError">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ValidationRule RuleInError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ValidationRule RuleInError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationError.RuleInError" />
      <MemberSignature Language="VB.NET" Value="Public Property RuleInError As ValidationRule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ValidationRule ^ RuleInError { System::Windows::Controls::ValidationRule ^ get(); void set(System::Windows::Controls::ValidationRule ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RuleInError : System.Windows.Controls.ValidationRule with get, set" Usage="System.Windows.Controls.ValidationError.RuleInError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationRule</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Controls.ValidationRule" /> obiektów, które było przyczyną tego <see cref="T:System.Windows.Controls.ValidationError" />, jeśli ten błąd jest wynikiem reguły sprawdzania poprawności.</summary>
        <value>
          <see cref="T:System.Windows.Controls.ValidationRule" /> Obiektu, jeśli ten błąd jest wynikiem reguły sprawdzania poprawności.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>