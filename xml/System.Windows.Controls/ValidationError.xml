<Type Name="ValidationError" FullName="System.Windows.Controls.ValidationError">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="10190f52dac807890af4f359bfa4b90943f21e77" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30699707" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ValidationError" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ValidationError extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ValidationError" />
  <TypeSignature Language="VB.NET" Value="Public Class ValidationError" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValidationError" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje błąd sprawdzania poprawności, który jest tworzony przez powiązanie aparat kiedy <see cref="T:System.Windows.Controls.ValidationRule" /> zgłasza błąd sprawdzania poprawności, lub za pomocą <see cref="M:System.Windows.Controls.Validation.MarkInvalid(System.Windows.Data.BindingExpressionBase,System.Windows.Controls.ValidationError)" /> metoda jawnie.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Modelu powiązania danych umożliwia kojarzenie reguł sprawdzania poprawności z Twojej <xref:System.Windows.Data.Binding> obiektu. Sprawdzanie poprawności jest wykonywane podczas transferu wartości docelowej do źródłowej przed wywołaniem konwerter. Poniżej opisano proces sprawdzania poprawności.  
  
1.  Jeśli wartość jest przenoszona z właściwością target właściwości source, aparat wiązania danych najpierw usuwa wszelkie <xref:System.Windows.Controls.ValidationError> które mogły zostać dodane do <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> dołączona właściwość elementu powiązania. Następnie sprawdza, czy wszystkie niestandardowe reguły walidacji są zdefiniowane w tym <xref:System.Windows.Data.Binding>, w tym przypadku wywołuje <xref:System.Windows.Controls.ValidationRule.Validate%2A> metody na każdym <xref:System.Windows.Controls.ValidationRule> przekazywane do jednego z nich kończy się niepowodzeniem lub do czasu ich wszystkich.  
  
2.  Po utworzeniu reguły niestandardowej, które nie zostały spełnione, tworzy aparat wiązania <xref:System.Windows.Controls.ValidationError> obiektu i dodaje go do <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> kolekcji elementu powiązania. Gdy <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> nie jest pusta, <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType> dołączona właściwość elementu ma wartość `true`. Ponadto jeśli <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A> właściwość <xref:System.Windows.Data.Binding> ma ustawioną wartość `true`, a następnie wywołuje aparat wiązania <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> dołączony zdarzeń dla elementu.  
  
3.  Jeśli Przekaż wszystkie reguły, aparat wiązania wywołuje konwerter, jeśli taka istnieje.  
  
4.  Jeśli konwerter zakończy się pomyślnie, aparat wiązania wywołuje metodę ustawiającą właściwość source.  
  
5.  Jeśli ma powiązanie <xref:System.Windows.Controls.ExceptionValidationRule> skojarzonych z nim i podczas wykonywania kroku 3 lub 4 jest zgłaszany wyjątek, aparat wiązania sprawdza, czy jest <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>. Można użyć <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> wywołania zwrotnego w celu zapewnienia obsługi niestandardowych do obsługi wyjątków. Jeśli <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> nie jest określona w <xref:System.Windows.Data.Binding>, tworzy aparat wiązania <xref:System.Windows.Controls.ValidationError> z wyjątkiem i dodaje go do <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> kolekcji elementu powiązania.  
  
 Przeniesienie prawidłową wartość w obu kierunkach (docelowy źródło lub źródłowego do docelowego) spowoduje wyczyszczenie <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> dołączona właściwość.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono wyzwalacz styl, który tworzy <xref:System.Windows.Controls.ToolTip> aby raporty komunikat o błędzie weryfikacji. <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> Dołączona właściwość zwraca kolekcję <xref:System.Windows.Controls.ValidationError> obiektów w elemencie powiązania.  
  
 [!code-xaml[DataBindingLab#14](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#14)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.DataErrorValidationRule" />
    <altmember cref="T:System.Windows.Controls.ValidationRule" />
    <altmember cref="M:System.Windows.Controls.Validation.MarkInvalid(System.Windows.Data.BindingExpressionBase,System.Windows.Controls.ValidationError)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Controls.ValidationError" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValidationError (System.Windows.Controls.ValidationRule ruleInError, object bindingInError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Controls.ValidationRule ruleInError, object bindingInError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ruleInError As ValidationRule, bindingInError As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValidationError(System::Windows::Controls::ValidationRule ^ ruleInError, System::Object ^ bindingInError);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ruleInError" Type="System.Windows.Controls.ValidationRule" />
        <Parameter Name="bindingInError" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ruleInError">Reguła, która wykryto błąd sprawdzania poprawności.</param>
        <param name="bindingInError">
          <see cref="T:System.Windows.Data.BindingExpression" /> Lub <see cref="T:System.Windows.Data.MultiBindingExpression" /> obiektu z powodu błędu sprawdzania poprawności.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Controls.ValidationError" /> klasy z określonymi parametrami.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValidationError (System.Windows.Controls.ValidationRule ruleInError, object bindingInError, object errorContent, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Controls.ValidationRule ruleInError, object bindingInError, object errorContent, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValidationError(System::Windows::Controls::ValidationRule ^ ruleInError, System::Object ^ bindingInError, System::Object ^ errorContent, Exception ^ exception);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ruleInError" Type="System.Windows.Controls.ValidationRule" />
        <Parameter Name="bindingInError" Type="System.Object" />
        <Parameter Name="errorContent" Type="System.Object" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="ruleInError">Reguła, która wykryto błąd sprawdzania poprawności.</param>
        <param name="bindingInError">
          <see cref="T:System.Windows.Data.BindingExpression" /> Lub <see cref="T:System.Windows.Data.MultiBindingExpression" /> obiektu z powodu błędu sprawdzania poprawności.</param>
        <param name="errorContent">Informacje o tym błędzie.</param>
        <param name="exception">Wyjątek, który spowodował niepowodzenie weryfikacji. Ten parametr jest opcjonalny i może być ustawiony na <see langword="null" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Controls.ValidationError" /> klasy z określonymi parametrami.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingInError">
      <MemberSignature Language="C#" Value="public object BindingInError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object BindingInError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationError.BindingInError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingInError As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ BindingInError { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Windows.Data.BindingExpression" /> lub <see cref="T:System.Windows.Data.MultiBindingExpression" /> obiektu to <see cref="T:System.Windows.Controls.ValidationError" />. Obiekt jest oznaczony jako nieprawidłowy jawnie lub ma reguły walidacji nie powiodło się.</summary>
        <value>
          <see cref="T:System.Windows.Data.BindingExpression" /> Lub <see cref="T:System.Windows.Data.MultiBindingExpression" /> obiektu to <see cref="T:System.Windows.Controls.ValidationError" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorContent">
      <MemberSignature Language="C#" Value="public object ErrorContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ErrorContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationError.ErrorContent" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorContent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ErrorContent { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt, który zawiera dodatkowy kontekst dla tego <see cref="T:System.Windows.Controls.ValidationError" />, takie jak ciąg opisujący błąd.</summary>
        <value>Obiekt, który zawiera dodatkowy kontekst dla tego <see cref="T:System.Windows.Controls.ValidationError" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_ErrorContent"></a>   
## <a name="xaml-text-usage"></a>Użycie tekstu w języku XAML  
 Zobacz sekcję przykład przykład.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono wyzwalacz styl, który tworzy <xref:System.Windows.Controls.ToolTip> aby raporty komunikat o błędzie weryfikacji. <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> Dołączona właściwość zwraca kolekcję <xref:System.Windows.Controls.ValidationError> obiektów w elemencie powiązania.  
  
 [!code-xaml[DataBindingLab#14](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationError.Exception" />
      <MemberSignature Language="VB.NET" Value="Public Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); void set(Exception ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Exception" /> obiektu, która była przyczyną tego <see cref="T:System.Windows.Controls.ValidationError" />, jeśli ten błąd jest wynikiem Wystąpił wyjątek.</summary>
        <value>
          <see cref="T:System.Exception" /> Obiektu, jeśli ten błąd jest wynikiem Wystąpił wyjątek.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RuleInError">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ValidationRule RuleInError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ValidationRule RuleInError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationError.RuleInError" />
      <MemberSignature Language="VB.NET" Value="Public Property RuleInError As ValidationRule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ValidationRule ^ RuleInError { System::Windows::Controls::ValidationRule ^ get(); void set(System::Windows::Controls::ValidationRule ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationRule</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Controls.ValidationRule" /> obiektu, która była przyczyną tego <see cref="T:System.Windows.Controls.ValidationError" />, jeśli ten błąd jest wynikiem reguły sprawdzania poprawności.</summary>
        <value>
          <see cref="T:System.Windows.Controls.ValidationRule" /> Obiektu, jeśli ten błąd jest wynikiem reguły sprawdzania poprawności.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>