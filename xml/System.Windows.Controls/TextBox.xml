<Type Name="TextBox" FullName="System.Windows.Controls.TextBox">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c617a652571ffdb92d8b329eedeb9e5a0132a55a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69212463" /></Metadata><TypeSignature Language="C#" Value="public class TextBox : System.Windows.Controls.Primitives.TextBoxBase, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi TextBox extends System.Windows.Controls.Primitives.TextBoxBase implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.TextBox" />
  <TypeSignature Language="VB.NET" Value="Public Class TextBox&#xA;Inherits TextBoxBase&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextBox : System::Windows::Controls::Primitives::TextBoxBase, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type TextBox = class&#xA;    inherit TextBoxBase&#xA;    interface IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.TextBoxBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Text)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Text")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3fba1-101">Reprezentuje kontrolkę, która może służyć do wyświetlania lub edycji niesformatowanego tekstu.</span><span class="sxs-lookup"><span data-stu-id="3fba1-101">Represents a control that can be used to display or edit unformatted text.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fba1-102">Kontrolka może zawierać tylko niesformatowany tekst w swojej <xref:System.Windows.Controls.TextBox.Text%2A> właściwości. <xref:System.Windows.Controls.TextBox></span><span class="sxs-lookup"><span data-stu-id="3fba1-102">A <xref:System.Windows.Controls.TextBox> control can contain only unformatted text in its <xref:System.Windows.Controls.TextBox.Text%2A> property.</span></span> <span data-ttu-id="3fba1-103">Na poniższej ilustracji przedstawiono przykład <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="3fba1-103">The following graphic shows an example of a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 <span data-ttu-id="3fba1-104">![Zrzut ekranu] przedstawiający ekran (~/add/media/ss-ctl-textbox.gif "Zrzut ekranu") przedstawiający ekran</span><span class="sxs-lookup"><span data-stu-id="3fba1-104">![TextBox screen shot](~/add/media/ss-ctl-textbox.gif "TextBox screen shot")</span></span>  
<span data-ttu-id="3fba1-105">Przykład pola tekstowego</span><span class="sxs-lookup"><span data-stu-id="3fba1-105">Example of a TextBox</span></span>  
  
 <span data-ttu-id="3fba1-106"><xref:System.Windows.Controls.TextBox>to złożona kontrolka składająca się z kilku składników hermetyzowanych.</span><span class="sxs-lookup"><span data-stu-id="3fba1-106"><xref:System.Windows.Controls.TextBox> is a composite control that is composed of several encapsulated components.</span></span> <span data-ttu-id="3fba1-107">W związku z tym niektóre zdarzenia nie są bąbelkowe do zawartej kontrolki, ponieważ są one obsługiwane przez hermetyzowane elementy podrzędne.</span><span class="sxs-lookup"><span data-stu-id="3fba1-107">Consequently, some events do not bubble up to the containing control because they are handled by encapsulated child elements.</span></span> <span data-ttu-id="3fba1-108">W związku z tym deweloperzy aplikacji powinni nasłuchiwać wersji tunelowania zdarzenia (oznaczonego prefiksem "wersja zapoznawcza").</span><span class="sxs-lookup"><span data-stu-id="3fba1-108">Because of this, application developers should listen for the tunneling version of an event (denoted by the prefix "Preview").</span></span>  
  
 <span data-ttu-id="3fba1-109"><xref:System.Windows.Controls.TextBox>obsługuje tylko tekst tylko do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="3fba1-109"><xref:System.Windows.Controls.TextBox> supports unformatted text only.</span></span> <span data-ttu-id="3fba1-110">W przypadku aplikacji, które wymagają obsługi bogatszej zawartości, <xref:System.Windows.Controls.RichTextBox>Zobacz.</span><span class="sxs-lookup"><span data-stu-id="3fba1-110">For applications that require support for richer content, see <xref:System.Windows.Controls.RichTextBox>.</span></span> <span data-ttu-id="3fba1-111">W przypadku aplikacji, które muszą akceptować hasła lub inne poufne dane <xref:System.Windows.Controls.PasswordBox>wejściowe, zobacz.</span><span class="sxs-lookup"><span data-stu-id="3fba1-111">For applications that need to accept passwords or other sensitive input, see <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
 <span data-ttu-id="3fba1-112">Wyrównanie tekstu w poziomie i w <xref:System.Windows.Controls.TextBox> pionie <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> przy użyciu właściwości i <xref:System.Windows.Controls.Control.VerticalContentAlignment%2A> .</span><span class="sxs-lookup"><span data-stu-id="3fba1-112">Horizontally and vertically aligning text within a <xref:System.Windows.Controls.TextBox> is done with the <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> and <xref:System.Windows.Controls.Control.VerticalContentAlignment%2A> properties.</span></span> <span data-ttu-id="3fba1-113">Wyrównywanie <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> w układzie strony odbywa się przy użyciu właściwości i. <xref:System.Windows.Controls.TextBox></span><span class="sxs-lookup"><span data-stu-id="3fba1-113">Aligning the <xref:System.Windows.Controls.TextBox> within the layout of the page is done with the <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> and <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> properties.</span></span>  
  
 <span data-ttu-id="3fba1-114">Najlepszym sposobem <xref:System.Windows.Controls.TextBox> ukrycia obramowania wokół elementu jest <xref:System.Windows.Controls.Control.BorderThickness%2A> ustawienie właściwości <xref:System.Windows.Controls.TextBox> na `0`.</span><span class="sxs-lookup"><span data-stu-id="3fba1-114">The best way to hide the border around a <xref:System.Windows.Controls.TextBox> is to set the <xref:System.Windows.Controls.Control.BorderThickness%2A> property of the <xref:System.Windows.Controls.TextBox> to `0`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3fba1-115"><xref:System.Windows.Controls.TextBox>ma wbudowaną obsługę propagacji <xref:System.Windows.UIElement.MouseUp> i <xref:System.Windows.UIElement.MouseDown> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="3fba1-115"><xref:System.Windows.Controls.TextBox> has built-in handling for the bubbling  <xref:System.Windows.UIElement.MouseUp> and <xref:System.Windows.UIElement.MouseDown> events.</span></span> <span data-ttu-id="3fba1-116">W związku z tym niestandardowe programy obsługi zdarzeń, które <xref:System.Windows.UIElement.MouseUp> nasłuchują lub <xref:System.Windows.UIElement.MouseDown> zdarzenia <xref:System.Windows.Controls.TextBox> z elementu nie zostaną wywołane.</span><span class="sxs-lookup"><span data-stu-id="3fba1-116">Consequently, custom event handlers that listen for <xref:System.Windows.UIElement.MouseUp> or <xref:System.Windows.UIElement.MouseDown> events from a <xref:System.Windows.Controls.TextBox> will not be called.</span></span> <span data-ttu-id="3fba1-117">Jeśli musisz odpowiedzieć na te zdarzenia, wysłuchaj tunelowanie <xref:System.Windows.UIElement.PreviewMouseUp> i <xref:System.Windows.UIElement.PreviewMouseDown> zdarzenia zamiast tego, lub Zarejestruj procedury obsługi przy użyciu <xref:System.Windows.EventSetter.HandledEventsToo%2A> argumentu (ta ostatnia opcja jest dostępna tylko za pomocą kodu).</span><span class="sxs-lookup"><span data-stu-id="3fba1-117">If you need to respond to these events, listen for the tunneling <xref:System.Windows.UIElement.PreviewMouseUp> and <xref:System.Windows.UIElement.PreviewMouseDown> events instead, or register the handlers with the <xref:System.Windows.EventSetter.HandledEventsToo%2A> argument (this latter option is only available through code).</span></span> <span data-ttu-id="3fba1-118">Nie oznaczaj obsłużonego zdarzenia, chyba że celowo chcesz wyłączyć <xref:System.Windows.Controls.TextBox> natywną obsługę tych zdarzeń i należy pamiętać, że ma to istotne skutki dla [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]kontrolki.</span><span class="sxs-lookup"><span data-stu-id="3fba1-118">Do not mark the event handled unless you deliberately want to disable <xref:System.Windows.Controls.TextBox> native handling of these events, and be aware that this has notable effects on the control's [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span>  
  
 <span data-ttu-id="3fba1-119">Paski przewijania nie są domyślnie widoczne dla <xref:System.Windows.Controls.TextBox> elementu.</span><span class="sxs-lookup"><span data-stu-id="3fba1-119">Scrollbars are not visible on a <xref:System.Windows.Controls.TextBox> by default.</span></span> <span data-ttu-id="3fba1-120">Aby wyświetlić paski <xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility%2A> przewijania, ustaw właściwości i <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility%2A> na <xref:System.Windows.Controls.ScrollBarVisibility.Visible> lub <xref:System.Windows.Controls.ScrollBarVisibility.Auto>.</span><span class="sxs-lookup"><span data-stu-id="3fba1-120">To make scrollbars visible, set the <xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility%2A> and <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility%2A> properties to <xref:System.Windows.Controls.ScrollBarVisibility.Visible> or <xref:System.Windows.Controls.ScrollBarVisibility.Auto>.</span></span>  
  
 <span data-ttu-id="3fba1-121">Zazwyczaj zdarzenie powinno być używane do wykrywania za każdym razem, gdy tekst <xref:System.Windows.Controls.TextBox> jest <xref:System.Windows.Controls.RichTextBox> lub zmienia <xref:System.Windows.UIElement.KeyDown> się w zależności od tego, czy jest to oczekiwane. <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged></span><span class="sxs-lookup"><span data-stu-id="3fba1-121">Usually the <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> event should be used to detect whenever the text in a <xref:System.Windows.Controls.TextBox> or <xref:System.Windows.Controls.RichTextBox> changes rather then <xref:System.Windows.UIElement.KeyDown> as you might expect.</span></span> <span data-ttu-id="3fba1-122">Zobacz [How to: Wykryj, kiedy tekst w polu tekstowym](~/docs/framework/wpf/controls/how-to-detect-when-text-in-a-textbox-has-changed.md) został zmieniony na przykład.</span><span class="sxs-lookup"><span data-stu-id="3fba1-122">See [How to: Detect When Text in a TextBox Has Changed](~/docs/framework/wpf/controls/how-to-detect-when-text-in-a-textbox-has-changed.md) for an example.</span></span>  
  
## <a name="customizing-the-textbox-control"></a><span data-ttu-id="3fba1-123">Dostosowywanie kontrolki TextBox</span><span class="sxs-lookup"><span data-stu-id="3fba1-123">Customizing the TextBox Control</span></span>  
 <span data-ttu-id="3fba1-124">Aby zastosować te same ustawienia właściwości do wielu <xref:System.Windows.Controls.TextBox> formantów, <xref:System.Windows.FrameworkElement.Style%2A> Użyj właściwości.</span><span class="sxs-lookup"><span data-stu-id="3fba1-124">To apply the same property settings to multiple <xref:System.Windows.Controls.TextBox> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="3fba1-125">Można zmienić wartość domyślną <xref:System.Windows.Controls.ControlTemplate> , aby dać formantowi unikatowy wygląd.</span><span class="sxs-lookup"><span data-stu-id="3fba1-125">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="3fba1-126">Aby uzyskać więcej informacji na temat <xref:System.Windows.Controls.ControlTemplate>tworzenia, zobacz [Dostosowywanie wyglądu istniejącej kontrolki przez utworzenie ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="3fba1-126">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="3fba1-127">Aby zobaczyć części i Stany <xref:System.Windows.Controls.TextBox>, które są specyficzne dla, zobacz [Style i szablony TextBox](~/docs/framework/wpf/controls/textbox-styles-and-templates.md).</span><span class="sxs-lookup"><span data-stu-id="3fba1-127">To see the parts and states that are specific to the <xref:System.Windows.Controls.TextBox>, see [TextBox Styles and Templates](~/docs/framework/wpf/controls/textbox-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="3fba1-128">Właściwości zależności dla tego formantu można ustawić przy użyciu domyślnego stylu kontrolki.</span><span class="sxs-lookup"><span data-stu-id="3fba1-128">Dependency properties for this control might be set by the control's default style.</span></span>  <span data-ttu-id="3fba1-129">Jeśli właściwość jest ustawiana za pomocą stylu domyślnego, właściwość może ulec zmianie z wartości domyślnej, gdy kontrolka pojawi się w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="3fba1-129">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="3fba1-130">Domyślny styl jest określany na podstawie tego, który Motyw pulpitu jest używany, gdy aplikacja jest uruchomiona.</span><span class="sxs-lookup"><span data-stu-id="3fba1-130">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="3fba1-131">Aby uzyskać więcej informacji, zobacz [domyślne motywy WPF](https://go.microsoft.com/fwlink/?LinkID=158252).</span><span class="sxs-lookup"><span data-stu-id="3fba1-131">For more information, see [Default WPF Themes](https://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
[!INCLUDE[setting-a-visual-property](~/includes/visual-property-note.md)]  
  
## Examples  
 <span data-ttu-id="3fba1-132">Ten przykład pokazuje, jak używać właściwości Text do ustawiania początkowej zawartości tekstowej kontrolki TextBox.</span><span class="sxs-lookup"><span data-stu-id="3fba1-132">This example shows how to use the Text property to set the initial text contents of a TextBox control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3fba1-133">Chociaż wersja Extensible Application Markup Language (XAML) przykład może używać \<tagów TextBox. Text > wokół tekstu zawartości TextBox przycisku, nie jest to konieczne, ponieważ pole tekstowe stosuje atrybut ContentPropertyAttribute atrybut do właściwości text.</span><span class="sxs-lookup"><span data-stu-id="3fba1-133">Although the Extensible Application Markup Language (XAML) version of the example could use the \<TextBox.Text> tags around the text of each button's TextBox content, it is not necessary because the TextBox applies the ContentPropertyAttribute attribute to the Text property.</span></span>  
  
```xaml  
<TextBox Name="tbSettingText">  
  Initial text contents of the TextBox.  
</TextBox>  
```  
  
```csharp  
tbSettingText.Text = "Initial text contents of the TextBox.";  
```  
  
```vb  
tbSettingText.Text = "Initial text contents of the TextBox."  
```  
  
 <span data-ttu-id="3fba1-134">Dodatkowe przykłady można znaleźć w wersji 4,0 tego dokumentu: [TextBox — Klasa](https://msdn.microsoft.com/library/ms617604\(v=vs.100\).aspx).</span><span class="sxs-lookup"><span data-stu-id="3fba1-134">For additional examples, see the 4.0 version of this document: [TextBox Class](https://msdn.microsoft.com/library/ms617604\(v=vs.100\).aspx).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.PasswordBox" />
    <altmember cref="T:System.Windows.Controls.RichTextBox" />
    <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/aa969815(v=vs.100).aspx"><span data-ttu-id="3fba1-135">TextBox — Przegląd</span><span class="sxs-lookup"><span data-stu-id="3fba1-135">TextBox Overview</span></span></related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160053"><span data-ttu-id="3fba1-136">Przykład galerii formantów WPF</span><span class="sxs-lookup"><span data-stu-id="3fba1-136">WPF Controls Gallery Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3fba1-137">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Controls.TextBox" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="3fba1-137">Initializes a new instance of the <see cref="T:System.Windows.Controls.TextBox" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaretIndex">
      <MemberSignature Language="C#" Value="public int CaretIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CaretIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.CaretIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property CaretIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CaretIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CaretIndex : int with get, set" Usage="System.Windows.Controls.TextBox.CaretIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fba1-138">Pobiera lub ustawia indeks położenia wstawiania karetki.</span><span class="sxs-lookup"><span data-stu-id="3fba1-138">Gets or sets the insertion position index of the caret.</span></span></summary>
        <value><span data-ttu-id="3fba1-139">Indeks pozycji wstawiania liczony od zera kursora.</span><span class="sxs-lookup"><span data-stu-id="3fba1-139">The zero-based insertion position index of the caret.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fba1-140">Pobieranie tej właściwości zwraca indeks bieżącego położenia wstawiania karetki (zobacz <xref:System.Windows.Documents.TextPointer> , aby uzyskać informacje na temat terminologii, takiej jak "pozycja wstawiania").</span><span class="sxs-lookup"><span data-stu-id="3fba1-140">Getting this property returns the current insertion position index of the caret (see <xref:System.Windows.Documents.TextPointer> for information on terminology like "insertion position").</span></span> <span data-ttu-id="3fba1-141">Ustawienie tej właściwości przenosi karetkę do określonej pozycji wstawienia.</span><span class="sxs-lookup"><span data-stu-id="3fba1-141">Setting this property moves the caret to the specified insertion position.</span></span>  
  
 <span data-ttu-id="3fba1-142">Pozycja wstawiania jest między znakami lub tagami elementów.</span><span class="sxs-lookup"><span data-stu-id="3fba1-142">An insertion position is between either characters or element tags.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Documents.TextPointer" />
      </Docs>
    </Member>
    <Member MemberName="CharacterCasing">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.CharacterCasing CharacterCasing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.CharacterCasing CharacterCasing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.CharacterCasing" />
      <MemberSignature Language="VB.NET" Value="Public Property CharacterCasing As CharacterCasing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::CharacterCasing CharacterCasing { System::Windows::Controls::CharacterCasing get(); void set(System::Windows::Controls::CharacterCasing value); };" />
      <MemberSignature Language="F#" Value="member this.CharacterCasing : System.Windows.Controls.CharacterCasing with get, set" Usage="System.Windows.Controls.TextBox.CharacterCasing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.CharacterCasing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fba1-143">Pobiera lub ustawia sposób, w jaki znaki są rozróżniane ręcznie w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="3fba1-143">Gets or sets how characters are cased when they are manually entered into the text box.</span></span></summary>
        <value><span data-ttu-id="3fba1-144">Jedna z <see cref="T:System.Windows.Controls.CharacterCasing" /> wartości, która określa, jak ręcznie wprowadzić znaki, jest uwzględniana wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="3fba1-144">One of the <see cref="T:System.Windows.Controls.CharacterCasing" /> values that specifies how manually entered characters are cased.</span></span> <span data-ttu-id="3fba1-145">Wartość domyślna to <see cref="F:System.Windows.Controls.CharacterCasing.Normal" />.</span><span class="sxs-lookup"><span data-stu-id="3fba1-145">The default is <see cref="F:System.Windows.Controls.CharacterCasing.Normal" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fba1-146">Ta właściwość nie ma wpływu na znaki, które są dodawane programowo.</span><span class="sxs-lookup"><span data-stu-id="3fba1-146">This property does not affect characters that are added programmatically.</span></span>  
  
<a name="dependencyPropertyInfo_CharacterCasing"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3fba1-147">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="3fba1-147">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3fba1-148">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="3fba1-148">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.CharacterCasingProperty>|  
|<span data-ttu-id="3fba1-149">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="3fba1-149">Metadata properties set to `true`</span></span>|<span data-ttu-id="3fba1-150">Brak</span><span class="sxs-lookup"><span data-stu-id="3fba1-150">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3fba1-151">Poniższy przykład pokazuje, jak używać właściwości, <xref:System.Windows.Controls.TextBox.CharacterCasing%2A> aby przekonwertować wszystkie ręcznie wprowadzone znaki na wielkie litery w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="3fba1-151">The following example shows how to use the <xref:System.Windows.Controls.TextBox.CharacterCasing%2A> property to convert all manually entered characters to uppercase in a text box.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#CharacterCasingExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/charactercasingexample.xaml#charactercasingexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#CharacterCasingCodeExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/CharacterCasingExample.cs#charactercasingcodeexamplewholepage)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#CharacterCasingCodeExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/charactercasingexample.vb#charactercasingcodeexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterCasingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CharacterCasingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CharacterCasingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.CharacterCasingProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CharacterCasingProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CharacterCasingProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CharacterCasingProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.CharacterCasingProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fba1-152">Identyfikuje właściwość <see cref="P:System.Windows.Controls.TextBox.CharacterCasing" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="3fba1-152">Identifies the <see cref="P:System.Windows.Controls.TextBox.CharacterCasing" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="textBox.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3fba1-153">Czyści całą zawartość z pola tekstowego.</span><span class="sxs-lookup"><span data-stu-id="3fba1-153">Clears all the content from the text box.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.Text" />
      </Docs>
    </Member>
    <Member MemberName="GetCharacterIndexFromLineIndex">
      <MemberSignature Language="C#" Value="public int GetCharacterIndexFromLineIndex (int lineIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCharacterIndexFromLineIndex(int32 lineIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCharacterIndexFromLineIndex (lineIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCharacterIndexFromLineIndex(int lineIndex);" />
      <MemberSignature Language="F#" Value="member this.GetCharacterIndexFromLineIndex : int -&gt; int" Usage="textBox.GetCharacterIndexFromLineIndex lineIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineIndex"><span data-ttu-id="3fba1-154">Liczony od zera indeks wiersza, dla którego ma zostać pobrany początkowy indeks znaków.</span><span class="sxs-lookup"><span data-stu-id="3fba1-154">The zero-based index of the line to retrieve the initial character index for.</span></span></param>
        <summary><span data-ttu-id="3fba1-155">Zwraca indeks znaku (liczony od zera) dla pierwszego znaku w określonym wierszu.</span><span class="sxs-lookup"><span data-stu-id="3fba1-155">Returns the zero-based character index for the first character in the specified line.</span></span></summary>
        <returns><span data-ttu-id="3fba1-156">Indeks (liczony od zera) pierwszego znaku w określonym wierszu.</span><span class="sxs-lookup"><span data-stu-id="3fba1-156">The zero-based index for the first character in the specified line.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.LineCount" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetCharacterIndexFromPoint">
      <MemberSignature Language="C#" Value="public int GetCharacterIndexFromPoint (System.Windows.Point point, bool snapToText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCharacterIndexFromPoint(valuetype System.Windows.Point point, bool snapToText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCharacterIndexFromPoint(System::Windows::Point point, bool snapToText);" />
      <MemberSignature Language="F#" Value="member this.GetCharacterIndexFromPoint : System.Windows.Point * bool -&gt; int" Usage="textBox.GetCharacterIndexFromPoint (point, snapToText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="snapToText" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="3fba1-157">Punkt w <see cref="T:System.Windows.Controls.TextBox" /> obszarze współrzędnych, dla którego ma zostać zwrócony indeks.</span><span class="sxs-lookup"><span data-stu-id="3fba1-157">A point in <see cref="T:System.Windows.Controls.TextBox" /> coordinate-space for which to return an index.</span></span></param>
        <param name="snapToText"><span data-ttu-id="3fba1-158"><see langword="true" />Aby zwrócić najbliższy indeks, jeśli nie ma żadnego znaku w określonym punkcie; <see langword="false" /> aby zwrócić wartość-1, jeśli nie ma żadnego znaku w określonym punkcie.</span><span class="sxs-lookup"><span data-stu-id="3fba1-158"><see langword="true" /> to return the nearest index if there is no character at the specified point; <see langword="false" /> to return -1 if there is no character at the specified point.</span></span></param>
        <summary><span data-ttu-id="3fba1-159">Zwraca indeks (liczony od zera) znaku, który znajduje się najbliżej określonego punktu.</span><span class="sxs-lookup"><span data-stu-id="3fba1-159">Returns the zero-based index of the character that is closest to the specified point.</span></span></summary>
        <returns><span data-ttu-id="3fba1-160">Indeks znaku znajdującego się najbliżej określonego punktu lub-1, jeśli nie można odnaleźć prawidłowego indeksu.</span><span class="sxs-lookup"><span data-stu-id="3fba1-160">The index of the character that is closest to the specified point, or -1 if no valid index can be found.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstVisibleLineIndex">
      <MemberSignature Language="C#" Value="public int GetFirstVisibleLineIndex ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstVisibleLineIndex() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstVisibleLineIndex () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFirstVisibleLineIndex();" />
      <MemberSignature Language="F#" Value="member this.GetFirstVisibleLineIndex : unit -&gt; int" Usage="textBox.GetFirstVisibleLineIndex " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3fba1-161">Zwraca indeks wiersza dla pierwszego wiersza, który jest obecnie widoczny w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="3fba1-161">Returns the line index for the first line that is currently visible in the text box.</span></span></summary>
        <returns><span data-ttu-id="3fba1-162">Indeks (liczony od zera) pierwszego widocznego wiersza w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="3fba1-162">The zero-based index for the first visible line in the text box.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetLastVisibleLineIndex">
      <MemberSignature Language="C#" Value="public int GetLastVisibleLineIndex ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLastVisibleLineIndex() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastVisibleLineIndex () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLastVisibleLineIndex();" />
      <MemberSignature Language="F#" Value="member this.GetLastVisibleLineIndex : unit -&gt; int" Usage="textBox.GetLastVisibleLineIndex " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3fba1-163">Zwraca indeks wiersza dla ostatniego wiersza, który jest obecnie widoczny w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="3fba1-163">Returns the line index for the last line that is currently visible in the text box.</span></span></summary>
        <returns><span data-ttu-id="3fba1-164">Indeks (liczony od zera) dla ostatniego widocznego wiersza w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="3fba1-164">The zero-based index for the last visible line in the text box.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetLineIndexFromCharacterIndex">
      <MemberSignature Language="C#" Value="public int GetLineIndexFromCharacterIndex (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLineIndexFromCharacterIndex(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineIndexFromCharacterIndex (charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLineIndexFromCharacterIndex(int charIndex);" />
      <MemberSignature Language="F#" Value="member this.GetLineIndexFromCharacterIndex : int -&gt; int" Usage="textBox.GetLineIndexFromCharacterIndex charIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="3fba1-165">Indeks znaku (liczony od zera), dla którego ma zostać pobrany skojarzony indeks wiersza.</span><span class="sxs-lookup"><span data-stu-id="3fba1-165">The zero-based character index for which to retrieve the associated line index.</span></span></param>
        <summary><span data-ttu-id="3fba1-166">Zwraca indeks wiersza (liczony od zera) dla wiersza, który zawiera określony indeks znaków.</span><span class="sxs-lookup"><span data-stu-id="3fba1-166">Returns the zero-based line index for the line that contains the specified character index.</span></span></summary>
        <returns><span data-ttu-id="3fba1-167">Indeks (liczony od zera) dla wiersza, który zawiera określony indeks znaków.</span><span class="sxs-lookup"><span data-stu-id="3fba1-167">The zero-based index for the line that contains the specified character index.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetLineLength">
      <MemberSignature Language="C#" Value="public int GetLineLength (int lineIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLineLength(int32 lineIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetLineLength(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineLength (lineIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLineLength(int lineIndex);" />
      <MemberSignature Language="F#" Value="member this.GetLineLength : int -&gt; int" Usage="textBox.GetLineLength lineIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineIndex"><span data-ttu-id="3fba1-168">Indeks liniowy liczony od zera, dla którego ma zostać zwrócona liczba znaków.</span><span class="sxs-lookup"><span data-stu-id="3fba1-168">The zero-based line index for which to return a character count.</span></span></param>
        <summary><span data-ttu-id="3fba1-169">Zwraca liczbę znaków w określonym wierszu.</span><span class="sxs-lookup"><span data-stu-id="3fba1-169">Returns the number of characters in the specified line.</span></span></summary>
        <returns><span data-ttu-id="3fba1-170">Liczba znaków w określonym wierszu.</span><span class="sxs-lookup"><span data-stu-id="3fba1-170">The number of characters in the specified line.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.LineCount" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetLineText">
      <MemberSignature Language="C#" Value="public string GetLineText (int lineIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetLineText(int32 lineIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetLineText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineText (lineIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetLineText(int lineIndex);" />
      <MemberSignature Language="F#" Value="member this.GetLineText : int -&gt; string" Usage="textBox.GetLineText lineIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineIndex"><span data-ttu-id="3fba1-171">Indeks liniowy liczony od zera, dla którego ma zostać pobrany aktualnie wyświetlany tekst.</span><span class="sxs-lookup"><span data-stu-id="3fba1-171">The zero-based line index for which to retrieve the currently displayed text.</span></span></param>
        <summary><span data-ttu-id="3fba1-172">Zwraca tekst, który jest aktualnie wyświetlany w określonym wierszu.</span><span class="sxs-lookup"><span data-stu-id="3fba1-172">Returns the text that is currently displayed on the specified line.</span></span></summary>
        <returns><span data-ttu-id="3fba1-173">Ciąg zawierający kopię tekstu aktualnie widoczną w określonym wierszu.</span><span class="sxs-lookup"><span data-stu-id="3fba1-173">A string containing a copy of the text currently visible on the specified line.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.LineCount" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetNextSpellingErrorCharacterIndex">
      <MemberSignature Language="C#" Value="public int GetNextSpellingErrorCharacterIndex (int charIndex, System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetNextSpellingErrorCharacterIndex(int32 charIndex, valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetNextSpellingErrorCharacterIndex(System.Int32,System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextSpellingErrorCharacterIndex (charIndex As Integer, direction As LogicalDirection) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetNextSpellingErrorCharacterIndex(int charIndex, System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetNextSpellingErrorCharacterIndex : int * System.Windows.Documents.LogicalDirection -&gt; int" Usage="textBox.GetNextSpellingErrorCharacterIndex (charIndex, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="3fba1-174">Indeks znaku (liczony od zera) wskazujący położenie, z którego ma zostać wyszukany następny błąd pisowni.</span><span class="sxs-lookup"><span data-stu-id="3fba1-174">The zero-based character index indicating a position from which to search for the next spelling error.</span></span></param>
        <param name="direction"><span data-ttu-id="3fba1-175">Jedna z <see cref="T:System.Windows.Documents.LogicalDirection" /> wartości określa kierunek wyszukiwania następnego błędu pisowni, zaczynając od określonego <paramref name="charIndex" />.</span><span class="sxs-lookup"><span data-stu-id="3fba1-175">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the direction in which to search for the next spelling error, starting at the specified <paramref name="charIndex" />.</span></span></param>
        <summary><span data-ttu-id="3fba1-176">Zwraca początkowy indeks znaku dla następnego błędu pisowni w zawartości pola tekstowego.</span><span class="sxs-lookup"><span data-stu-id="3fba1-176">Returns the beginning character index for the next spelling error in the contents of the text box.</span></span></summary>
        <returns><span data-ttu-id="3fba1-177">Indeks znaku początku następnego błędu pisowni w zawartości pola tekstowego lub-1, jeśli nie istnieje następny błąd pisowni.</span><span class="sxs-lookup"><span data-stu-id="3fba1-177">The character index for the beginning of the next spelling error in the contents of the text box, or -1 if no next spelling error exists.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingError(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingErrorLength(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingErrorStart(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetRectFromCharacterIndex">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3fba1-178">Zwraca prostokąt dla krawędzi znaku w określonym indeksie.</span><span class="sxs-lookup"><span data-stu-id="3fba1-178">Returns the rectangle for an edge of the character at the specified index.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetRectFromCharacterIndex">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetRectFromCharacterIndex (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetRectFromCharacterIndex(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRectFromCharacterIndex (charIndex As Integer) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetRectFromCharacterIndex(int charIndex);" />
      <MemberSignature Language="F#" Value="member this.GetRectFromCharacterIndex : int -&gt; System.Windows.Rect" Usage="textBox.GetRectFromCharacterIndex charIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="3fba1-179">Indeks znaku (liczony od zera) znaku, dla którego ma zostać pobrany prostokąt.</span><span class="sxs-lookup"><span data-stu-id="3fba1-179">The zero-based character index of the character for which to retrieve the rectangle.</span></span></param>
        <summary><span data-ttu-id="3fba1-180">Zwraca prostokąt dla wiodącej krawędzi znaku w określonym indeksie.</span><span class="sxs-lookup"><span data-stu-id="3fba1-180">Returns the rectangle for the leading edge of the character at the specified index.</span></span></summary>
        <returns><span data-ttu-id="3fba1-181">Prostokąt dla wiodącej krawędzi znaku w określonym indeksie znaków lub <see cref="P:System.Windows.Rect.Empty" /> nie można określić powiązanego prostokąta.</span><span class="sxs-lookup"><span data-stu-id="3fba1-181">A rectangle for the leading edge of the character at the specified character index, or <see cref="P:System.Windows.Rect.Empty" /> if a bounding rectangle cannot be determined.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fba1-182">Ponieważ ta metoda zwraca prostokąt, który reprezentuje krawędź znaku, Szerokość prostokąta wynosi 0.</span><span class="sxs-lookup"><span data-stu-id="3fba1-182">Because this method returns a rectangle that represents an edge of the character, the width of the rectangle is 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRectFromCharacterIndex">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetRectFromCharacterIndex (int charIndex, bool trailingEdge);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetRectFromCharacterIndex(int32 charIndex, bool trailingEdge) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRectFromCharacterIndex (charIndex As Integer, trailingEdge As Boolean) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetRectFromCharacterIndex(int charIndex, bool trailingEdge);" />
      <MemberSignature Language="F#" Value="member this.GetRectFromCharacterIndex : int * bool -&gt; System.Windows.Rect" Usage="textBox.GetRectFromCharacterIndex (charIndex, trailingEdge)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="trailingEdge" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="3fba1-183">Indeks znaku (liczony od zera) znaku, dla którego ma zostać pobrany prostokąt.</span><span class="sxs-lookup"><span data-stu-id="3fba1-183">The zero-based character index of the character for which to retrieve the rectangle.</span></span></param>
        <param name="trailingEdge"><span data-ttu-id="3fba1-184"><see langword="true" />Aby uzyskać końcową krawędź znaku; <see langword="false" /> , aby uzyskać wiodącą krawędź znaku.</span><span class="sxs-lookup"><span data-stu-id="3fba1-184"><see langword="true" /> to get the trailing edge of the character; <see langword="false" /> to get the leading edge of the character.</span></span></param>
        <summary><span data-ttu-id="3fba1-185">Zwraca prostokąt dla krawędzi wiodącej lub końcowej znaku w określonym indeksie.</span><span class="sxs-lookup"><span data-stu-id="3fba1-185">Returns the rectangle for the leading or trailing edge of the character at the specified index.</span></span></summary>
        <returns><span data-ttu-id="3fba1-186">Prostokąt dla krawędzi znaku w określonym indeksie znaków lub <see cref="P:System.Windows.Rect.Empty" /> nie można określić powiązanego prostokąta.</span><span class="sxs-lookup"><span data-stu-id="3fba1-186">A rectangle for an edge of the character at the specified character index, or <see cref="P:System.Windows.Rect.Empty" /> if a bounding rectangle cannot be determined.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fba1-187">Ponieważ ta metoda zwraca prostokąt, który reprezentuje krawędź znaku, Szerokość prostokąta wynosi 0.</span><span class="sxs-lookup"><span data-stu-id="3fba1-187">Because this method returns a rectangle that represents an edge of the character, the width of the rectangle is 0.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3fba1-188"><paramref name="charIndex" />jest ujemna lub jest większa niż długość zawartości.</span><span class="sxs-lookup"><span data-stu-id="3fba1-188"><paramref name="charIndex" /> is negative or is greater than the length of the content.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSpellingError">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.SpellingError GetSpellingError (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Controls.SpellingError GetSpellingError(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetSpellingError(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpellingError (charIndex As Integer) As SpellingError" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Controls::SpellingError ^ GetSpellingError(int charIndex);" />
      <MemberSignature Language="F#" Value="member this.GetSpellingError : int -&gt; System.Windows.Controls.SpellingError" Usage="textBox.GetSpellingError charIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.SpellingError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="3fba1-189">Indeks znaku (liczony od zera) pozycji w zawartości, który ma być badany pod kątem błędu pisowni.</span><span class="sxs-lookup"><span data-stu-id="3fba1-189">The zero-based character index of a position in content to examine for a spelling error.</span></span></param>
        <summary><span data-ttu-id="3fba1-190"><see cref="T:System.Windows.Controls.SpellingError" /> Zwraca obiekt skojarzony z dowolnym błędem pisowni w określonym indeksie znaku.</span><span class="sxs-lookup"><span data-stu-id="3fba1-190">Returns a <see cref="T:System.Windows.Controls.SpellingError" /> object associated with any spelling error at the specified character index.</span></span></summary>
        <returns><span data-ttu-id="3fba1-191">Obiekt zawierający szczegóły błędu pisowni znaleziony w znaku wskazywanym przez <paramref name="charIndex" />lub <see langword="null" /> , jeśli nie istnieje błąd pisowni w określonym znaku. <see cref="T:System.Windows.Controls.SpellingError" /></span><span class="sxs-lookup"><span data-stu-id="3fba1-191">A <see cref="T:System.Windows.Controls.SpellingError" /> object containing the details of the spelling error found at the character indicated by <paramref name="charIndex" />, or <see langword="null" /> if no spelling error exists at the specified character.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetNextSpellingErrorCharacterIndex(System.Int32,System.Windows.Documents.LogicalDirection)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingErrorLength(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingErrorStart(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetSpellingErrorLength">
      <MemberSignature Language="C#" Value="public int GetSpellingErrorLength (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetSpellingErrorLength(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetSpellingErrorLength(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpellingErrorLength (charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetSpellingErrorLength(int charIndex);" />
      <MemberSignature Language="F#" Value="member this.GetSpellingErrorLength : int -&gt; int" Usage="textBox.GetSpellingErrorLength charIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="3fba1-192">Indeks znaku (liczony od zera) pozycji w zawartości, który ma być badany pod kątem błędu pisowni.</span><span class="sxs-lookup"><span data-stu-id="3fba1-192">The zero-based character index of a position in content to examine for a spelling error.</span></span></param>
        <summary><span data-ttu-id="3fba1-193">Zwraca długość dowolnego błędu pisowni, który zawiera określony znak.</span><span class="sxs-lookup"><span data-stu-id="3fba1-193">Returns the length of any spelling error that includes the specified character.</span></span></summary>
        <returns><span data-ttu-id="3fba1-194">Długość każdego błędu pisowni zawierającego znak określony przez charIndex lub 0, jeśli określony znak nie jest częścią błędu pisowni.</span><span class="sxs-lookup"><span data-stu-id="3fba1-194">The length of any spelling error that includes the character specified by charIndex, or 0 if the specified character is not part of a spelling error.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSpellingErrorStart">
      <MemberSignature Language="C#" Value="public int GetSpellingErrorStart (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetSpellingErrorStart(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetSpellingErrorStart(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpellingErrorStart (charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetSpellingErrorStart(int charIndex);" />
      <MemberSignature Language="F#" Value="member this.GetSpellingErrorStart : int -&gt; int" Usage="textBox.GetSpellingErrorStart charIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="3fba1-195">Indeks znaku (liczony od zera) pozycji w zawartości, który ma być badany pod kątem błędu pisowni.</span><span class="sxs-lookup"><span data-stu-id="3fba1-195">The zero-based character index of a position in content to examine for a spelling error.</span></span></param>
        <summary><span data-ttu-id="3fba1-196">Zwraca początkowy indeks znaku dla dowolnego błędu pisowni, który zawiera określony znak.</span><span class="sxs-lookup"><span data-stu-id="3fba1-196">Returns the beginning character index for any spelling error that includes the specified character.</span></span></summary>
        <returns><span data-ttu-id="3fba1-197">Początkowy indeks znaku dla dowolnego błędu pisowni, który zawiera znak określony przez <paramref name="charIndex" />, lub-1, jeśli określony znak nie jest częścią błędu pisowni.</span><span class="sxs-lookup"><span data-stu-id="3fba1-197">The beginning character index for any spelling error that includes the character specified by <paramref name="charIndex" />, or -1 if the specified character is not part of a spelling error.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineCount">
      <MemberSignature Language="C#" Value="public int LineCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.LineCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LineCount : int" Usage="System.Windows.Controls.TextBox.LineCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fba1-198">Pobiera łączną liczbę wierszy w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="3fba1-198">Gets the total number of lines in the text box.</span></span></summary>
        <value><span data-ttu-id="3fba1-199">Całkowita liczba wierszy w polu tekstowym lub-1, jeśli informacje o układzie są niedostępne.</span><span class="sxs-lookup"><span data-stu-id="3fba1-199">The total number of lines in the text box, or -1 if layout information is not available.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fba1-200">Jeśli Zawijanie tekstu jest włączone, zmiana szerokości pola tekstowego może zmienić tę wartość.</span><span class="sxs-lookup"><span data-stu-id="3fba1-200">If text wrapping is enabled, changing the width of the text box may change this value.</span></span>  
  
 <span data-ttu-id="3fba1-201">Zwracana wartość to całkowita liczba wierszy w polu tekstowym, bez względu na to, ile jest obecnie widocznych.</span><span class="sxs-lookup"><span data-stu-id="3fba1-201">The value returned is the total number of lines in the text box, regardless of how many are currently visible.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.TextWrapping" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineLength(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineText(System.Int32)" />
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLines" />
        <altmember cref="P:System.Windows.Controls.TextBox.MinLines" />
        <altmember cref="M:System.Windows.Controls.TextBox.ScrollToLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalChildren : System.Collections.IEnumerator" Usage="System.Windows.Controls.TextBox.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fba1-202">Pobiera moduł wyliczający dla logicznych elementów <see cref="T:System.Windows.Controls.TextBox" />podrzędnych obiektu.</span><span class="sxs-lookup"><span data-stu-id="3fba1-202">Gets an enumerator for the logical child elements of the <see cref="T:System.Windows.Controls.TextBox" />.</span></span></summary>
        <value><span data-ttu-id="3fba1-203">Moduł wyliczający dla logicznych elementów <see cref="T:System.Windows.Controls.TextBox" />podrzędnych obiektu.</span><span class="sxs-lookup"><span data-stu-id="3fba1-203">An enumerator for the logical child elements of the <see cref="T:System.Windows.Controls.TextBox" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fba1-204">Właściwość zwraca moduł wyliczający dla kolekcji <xref:System.String> zawierającej <xref:System.Windows.Controls.TextBox.Text%2A> , która jest równa właściwości. <xref:System.Windows.Controls.TextBox.LogicalChildren%2A></span><span class="sxs-lookup"><span data-stu-id="3fba1-204">The <xref:System.Windows.Controls.TextBox.LogicalChildren%2A> property returns an enumerator for a collection that contains a <xref:System.String> that is equal to the <xref:System.Windows.Controls.TextBox.Text%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLength : int with get, set" Usage="System.Windows.Controls.TextBox.MaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Modifiability=System.Windows.Modifiability.Unmodifiable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fba1-205">Pobiera lub ustawia maksymalną liczbę znaków, które można wprowadzić ręcznie w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="3fba1-205">Gets or sets the maximum number of characters that can be manually entered into the text box.</span></span></summary>
        <value><span data-ttu-id="3fba1-206">Maksymalna liczba znaków, które można wprowadzić ręcznie w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="3fba1-206">The maximum number of characters that can be manually entered into the text box.</span></span> <span data-ttu-id="3fba1-207">Wartość domyślna to 0, co oznacza brak limitu.</span><span class="sxs-lookup"><span data-stu-id="3fba1-207">The default is 0, which indicates no limit.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fba1-208">Można użyć tej właściwości, aby ograniczyć długość tekstu wprowadzonego w kontrolce dla wartości, takich jak kody pocztowe i numery telefonów.</span><span class="sxs-lookup"><span data-stu-id="3fba1-208">You can use this property to restrict the length of text entered in the control for values such as postal codes and telephone numbers.</span></span> <span data-ttu-id="3fba1-209">Można także użyć tej właściwości, aby ograniczyć długość tekstu wprowadzanego, gdy dane mają być przechowywane w bazie danych, dzięki czemu tekst wprowadzony do formantu nie przekracza maksymalnej długości odpowiedniego pola w bazie danych.</span><span class="sxs-lookup"><span data-stu-id="3fba1-209">You can also use this property to restrict the length of text entered when the data is to be stored in a database so that the text entered into the control does not exceed the maximum length of the corresponding field in the database.</span></span>  
  
 <span data-ttu-id="3fba1-210">Ta właściwość nie ma wpływu na znaki, które są dodawane programowo.</span><span class="sxs-lookup"><span data-stu-id="3fba1-210">This property does not affect characters that are added programmatically.</span></span>  
  
 <span data-ttu-id="3fba1-211">Gdy ta właściwość ma wartość 0, Maksymalna długość tekstu, którą można wprowadzić w kontrolce, jest ograniczona tylko przez dostępną pamięć.</span><span class="sxs-lookup"><span data-stu-id="3fba1-211">When this property is set to 0, the maximum length of the text that can be entered in the control is limited only by available memory.</span></span>  
  
<a name="dependencyPropertyInfo_MaxLength"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3fba1-212">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="3fba1-212">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3fba1-213">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="3fba1-213">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.MaxLengthProperty>|  
|<span data-ttu-id="3fba1-214">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="3fba1-214">Metadata properties set to `true`</span></span>|<span data-ttu-id="3fba1-215">Brak</span><span class="sxs-lookup"><span data-stu-id="3fba1-215">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3fba1-216">Poniższy przykład pokazuje, jak utworzyć a <xref:System.Windows.Controls.TextBox> <xref:System.Windows.Controls.TextBox.MaxLength%2A> o 500 znaków.</span><span class="sxs-lookup"><span data-stu-id="3fba1-216">The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBox.MaxLength%2A> of 500 characters.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/textboxexample.xaml#textboxexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/TextBoxExample.cs#textboxcodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/textboxexample.vb#textboxcodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLines" />
      </Docs>
    </Member>
    <Member MemberName="MaxLengthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MaxLengthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MaxLengthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.MaxLengthProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxLengthProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MaxLengthProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxLengthProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.MaxLengthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fba1-217">Identyfikuje właściwość <see cref="P:System.Windows.Controls.TextBox.MaxLength" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="3fba1-217">Identifies the <see cref="P:System.Windows.Controls.TextBox.MaxLength" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLines">
      <MemberSignature Language="C#" Value="public int MaxLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.MaxLines" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLines As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLines { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLines : int with get, set" Usage="System.Windows.Controls.TextBox.MaxLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(2147483647)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fba1-218">Pobiera lub ustawia maksymalną liczbę widocznych wierszy.</span><span class="sxs-lookup"><span data-stu-id="3fba1-218">Gets or sets the maximum number of visible lines.</span></span></summary>
        <value><span data-ttu-id="3fba1-219">Maksymalna liczba widocznych wierszy.</span><span class="sxs-lookup"><span data-stu-id="3fba1-219">The maximum number of visible lines.</span></span> <span data-ttu-id="3fba1-220">Wartość domyślna to <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="3fba1-220">The default is <see cref="F:System.Int32.MaxValue" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fba1-221">Pobieranie tej właściwości zwraca bieżącą wartość <xref:System.Windows.Controls.TextBox.MaxLines%2A>.</span><span class="sxs-lookup"><span data-stu-id="3fba1-221">Getting this property returns the current value of <xref:System.Windows.Controls.TextBox.MaxLines%2A>.</span></span> <span data-ttu-id="3fba1-222">Ustawienie tej właściwości powoduje zmianę rozmiaru pola tekstowego, jeśli liczba widocznych wierszy przekracza limit określony przez <xref:System.Windows.Controls.TextBox.MaxLines%2A>.</span><span class="sxs-lookup"><span data-stu-id="3fba1-222">Setting this property causes the text box to resize if the number of visible lines exceeds the limit specified by <xref:System.Windows.Controls.TextBox.MaxLines%2A>.</span></span>  
  
 <span data-ttu-id="3fba1-223">Ta właściwość ma zastosowanie tylko do widocznych wierszy i nie ogranicza rzeczywistej liczby wierszy.</span><span class="sxs-lookup"><span data-stu-id="3fba1-223">This property applies only to visible lines, and does not constrain the actual number of lines.</span></span> <span data-ttu-id="3fba1-224">W zależności od konfiguracji pole tekstowe może zawierać dodatkowe niewidoczne linie, które są dostępne przez przewijanie.</span><span class="sxs-lookup"><span data-stu-id="3fba1-224">Depending on its configuration, a text box may contain additional non-visible lines that are accessible by scrolling.</span></span>  
  
 <span data-ttu-id="3fba1-225">Jeśli właściwość jest jawnie ustawiona <xref:System.Windows.Controls.TextBox>na, <xref:System.Windows.Controls.TextBox.MaxLines%2A> wartości właściwości i <xref:System.Windows.Controls.TextBox.MinLines%2A> są ignorowane. <xref:System.Windows.FrameworkElement.Height%2A></span><span class="sxs-lookup"><span data-stu-id="3fba1-225">If the <xref:System.Windows.FrameworkElement.Height%2A> property is explicitly set on a <xref:System.Windows.Controls.TextBox>, the <xref:System.Windows.Controls.TextBox.MaxLines%2A> and <xref:System.Windows.Controls.TextBox.MinLines%2A> property values are ignored.</span></span>  
  
<a name="dependencyPropertyInfo_MaxLines"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3fba1-226">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="3fba1-226">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3fba1-227">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="3fba1-227">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.MaxLinesProperty>|  
|<span data-ttu-id="3fba1-228">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="3fba1-228">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="3fba1-229">Poniższy przykład pokazuje, jak utworzyć a <xref:System.Windows.Controls.TextBox> <xref:System.Windows.Controls.TextBox.MaxLines%2A> o wartości 5.</span><span class="sxs-lookup"><span data-stu-id="3fba1-229">The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBox.MaxLines%2A> value of 5.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/textboxexample.xaml#textboxexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/TextBoxExample.cs#textboxcodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/textboxexample.vb#textboxcodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="3fba1-230"><see cref="P:System.Windows.Controls.TextBox.MaxLines" />jest mniejsze niż <see cref="P:System.Windows.Controls.TextBox.MinLines" />.</span><span class="sxs-lookup"><span data-stu-id="3fba1-230"><see cref="P:System.Windows.Controls.TextBox.MaxLines" /> is less than <see cref="P:System.Windows.Controls.TextBox.MinLines" />.</span></span></exception>
        <altmember cref="P:System.Windows.Controls.TextBox.MinLines" />
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLength" />
      </Docs>
    </Member>
    <Member MemberName="MaxLinesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MaxLinesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MaxLinesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.MaxLinesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxLinesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MaxLinesProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxLinesProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.MaxLinesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fba1-231">Identyfikuje właściwość <see cref="P:System.Windows.Controls.TextBox.MaxLines" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="3fba1-231">Identifies the <see cref="P:System.Windows.Controls.TextBox.MaxLines" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (constraint As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size constraint);" />
      <MemberSignature Language="F#" Value="override this.MeasureOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="textBox.MeasureOverride constraint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="constraint"><span data-ttu-id="3fba1-232"><see cref="T:System.Windows.Size" /> Struktura, która określa ograniczenia rozmiaru pola tekstowego.</span><span class="sxs-lookup"><span data-stu-id="3fba1-232">A <see cref="T:System.Windows.Size" /> structure that specifies the constraints on the size of the text box.</span></span></param>
        <summary><span data-ttu-id="3fba1-233">Zmienia rozmiar pola tekstowego na jego zawartość.</span><span class="sxs-lookup"><span data-stu-id="3fba1-233">Sizes the text box to its content.</span></span></summary>
        <returns><span data-ttu-id="3fba1-234"><see cref="T:System.Windows.Size" /> Struktura wskazująca nowy rozmiar pola tekstowego.</span><span class="sxs-lookup"><span data-stu-id="3fba1-234">A <see cref="T:System.Windows.Size" /> structure indicating the new size of the text box.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fba1-235">Zastąp tę metodę, aby zaimplementować niestandardowe zachowanie dotyczące zmiany rozmiarów.</span><span class="sxs-lookup"><span data-stu-id="3fba1-235">Override this method to implement custom sizing behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinLines">
      <MemberSignature Language="C#" Value="public int MinLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.MinLines" />
      <MemberSignature Language="VB.NET" Value="Public Property MinLines As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinLines { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinLines : int with get, set" Usage="System.Windows.Controls.TextBox.MinLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fba1-236">Pobiera lub ustawia minimalną liczbę widocznych linii.</span><span class="sxs-lookup"><span data-stu-id="3fba1-236">Gets or sets the minimum number of visible lines.</span></span></summary>
        <value><span data-ttu-id="3fba1-237">Minimalna liczba widocznych wierszy.</span><span class="sxs-lookup"><span data-stu-id="3fba1-237">The minimum number of visible lines.</span></span> <span data-ttu-id="3fba1-238">Domyślnym ustawieniem jest 1.</span><span class="sxs-lookup"><span data-stu-id="3fba1-238">The default is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fba1-239">Pobieranie tej właściwości zwraca bieżącą wartość <xref:System.Windows.Controls.TextBox.MinLines%2A>.</span><span class="sxs-lookup"><span data-stu-id="3fba1-239">Getting this property returns the current value of <xref:System.Windows.Controls.TextBox.MinLines%2A>.</span></span> <span data-ttu-id="3fba1-240">Ustawienie tej właściwości powoduje zmianę rozmiaru pola tekstowego, jeśli liczba widocznych wierszy jest mniejsza niż wartość określona przez <xref:System.Windows.Controls.TextBox.MinLines%2A>.</span><span class="sxs-lookup"><span data-stu-id="3fba1-240">Setting this property causes the text box to resize if the number of visible lines is less than value specified by <xref:System.Windows.Controls.TextBox.MinLines%2A>.</span></span>  
  
 <span data-ttu-id="3fba1-241">Jeśli właściwość jest jawnie ustawiona <xref:System.Windows.Controls.TextBox>na, <xref:System.Windows.Controls.TextBox.MaxLines%2A> wartości właściwości i <xref:System.Windows.Controls.TextBox.MinLines%2A> są ignorowane. <xref:System.Windows.FrameworkElement.Height%2A></span><span class="sxs-lookup"><span data-stu-id="3fba1-241">If the <xref:System.Windows.FrameworkElement.Height%2A> property is explicitly set on a <xref:System.Windows.Controls.TextBox>, the <xref:System.Windows.Controls.TextBox.MaxLines%2A> and <xref:System.Windows.Controls.TextBox.MinLines%2A> property values are ignored.</span></span>  
  
<a name="dependencyPropertyInfo_MinLines"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3fba1-242">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="3fba1-242">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3fba1-243">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="3fba1-243">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.MinLinesProperty>|  
|<span data-ttu-id="3fba1-244">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="3fba1-244">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="3fba1-245">Poniższy przykład pokazuje, jak utworzyć a <xref:System.Windows.Controls.TextBox> <xref:System.Windows.Controls.TextBox.MinLines%2A> o wartości 1.</span><span class="sxs-lookup"><span data-stu-id="3fba1-245">The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBox.MinLines%2A> value of 1.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/textboxexample.xaml#textboxexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/TextBoxExample.cs#textboxcodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/textboxexample.vb#textboxcodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="3fba1-246"><see cref="P:System.Windows.Controls.TextBox.MinLines" />jest większa niż <see cref="P:System.Windows.Controls.TextBox.MaxLines" />.</span><span class="sxs-lookup"><span data-stu-id="3fba1-246"><see cref="P:System.Windows.Controls.TextBox.MinLines" /> is greater than <see cref="P:System.Windows.Controls.TextBox.MaxLines" />.</span></span></exception>
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLines" />
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLength" />
      </Docs>
    </Member>
    <Member MemberName="MinLinesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MinLinesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MinLinesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.MinLinesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinLinesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MinLinesProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinLinesProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.MinLinesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fba1-247">Identyfikuje właściwość <see cref="P:System.Windows.Controls.TextBox.MinLines" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="3fba1-247">Identifies the <see cref="P:System.Windows.Controls.TextBox.MinLines" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="textBox.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3fba1-248">Tworzy i zwraca <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> obiekt dla pola tekstowego.</span><span class="sxs-lookup"><span data-stu-id="3fba1-248">Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for the text box.</span></span></summary>
        <returns><span data-ttu-id="3fba1-249"><see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> Obiekt dla pola tekstowego.</span><span class="sxs-lookup"><span data-stu-id="3fba1-249">An <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for the text box.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fba1-250">Ta metoda przesłania <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3fba1-250">This method overrides <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPropertyChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPropertyChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPropertyChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnPropertyChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="textBox.OnPropertyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3fba1-251">Argumenty skojarzonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="3fba1-251">Arguments for the associated event.</span></span></param>
        <summary><span data-ttu-id="3fba1-252">Wywoływana, gdy co najmniej jedna z właściwości zależności, która istnieje w elemencie ma zmienione wartości.</span><span class="sxs-lookup"><span data-stu-id="3fba1-252">Called when one or more of the dependency properties that exist on the element have had their effective values changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fba1-253">Ta metoda przesłania <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3fba1-253">This method overrides <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyPropertyChangedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToLine">
      <MemberSignature Language="C#" Value="public void ScrollToLine (int lineIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToLine(int32 lineIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.ScrollToLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToLine (lineIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToLine(int lineIndex);" />
      <MemberSignature Language="F#" Value="member this.ScrollToLine : int -&gt; unit" Usage="textBox.ScrollToLine lineIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineIndex"><span data-ttu-id="3fba1-254">Indeks wiersza (liczony od zera) wiersza, który ma zostać przewinięty do widoku.</span><span class="sxs-lookup"><span data-stu-id="3fba1-254">The zero-based line index of the line to scroll into view.</span></span></param>
        <summary><span data-ttu-id="3fba1-255">Przewija wiersz o określonym indeksie wiersza do widoku.</span><span class="sxs-lookup"><span data-stu-id="3fba1-255">Scrolls the line at the specified line index into view.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fba1-256">Ta metoda powoduje przewijanie pola tekstowego o minimalną ilość niezbędną do przełączenia określonego wiersza do pełnego widoku.</span><span class="sxs-lookup"><span data-stu-id="3fba1-256">This method causes the text box to scroll by the minimum amount necessary to bring the specified line into full view.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
        <altmember cref="P:System.Windows.Controls.TextBox.LineCount" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (start As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(int start, int length);" />
      <MemberSignature Language="F#" Value="member this.Select : int * int -&gt; unit" Usage="textBox.Select (start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="3fba1-257">Indeks znaku (liczony od zera) pierwszego znaku w zaznaczeniu.</span><span class="sxs-lookup"><span data-stu-id="3fba1-257">The zero-based character index of the first character in the selection.</span></span></param>
        <param name="length"><span data-ttu-id="3fba1-258">Długość zaznaczenia, w znakach.</span><span class="sxs-lookup"><span data-stu-id="3fba1-258">The length of the selection, in characters.</span></span></param>
        <summary><span data-ttu-id="3fba1-259">Wybiera zakres tekstu w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="3fba1-259">Selects a range of text in the text box.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3fba1-260"><paramref name="start" />lub <paramref name="length" /> jest ujemna.</span><span class="sxs-lookup"><span data-stu-id="3fba1-260"><paramref name="start" /> or <paramref name="length" /> is negative.</span></span></exception>
        <altmember cref="P:System.Windows.Controls.TextBox.SelectedText" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionLength" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectedText">
      <MemberSignature Language="C#" Value="public string SelectedText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.SelectedText" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedText : string with get, set" Usage="System.Windows.Controls.TextBox.SelectedText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fba1-261">Pobiera lub ustawia zawartość bieżącego zaznaczenia w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="3fba1-261">Gets or sets the content of the current selection in the text box.</span></span></summary>
        <value><span data-ttu-id="3fba1-262">Aktualnie zaznaczony tekst w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="3fba1-262">The currently selected text in the text box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fba1-263">Pobranie tej właściwości zwraca kopię ciągu aktualnie zaznaczonego tekstu.</span><span class="sxs-lookup"><span data-stu-id="3fba1-263">Getting this property returns a string copy of the currently selected text.</span></span> <span data-ttu-id="3fba1-264">Ustawienie tej właściwości zastępuje bieżące zaznaczenie określonym ciągiem.</span><span class="sxs-lookup"><span data-stu-id="3fba1-264">Setting this property replaces the current selection with the specified string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionLength" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectionLength">
      <MemberSignature Language="C#" Value="public int SelectionLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.SelectionLength" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionLength : int with get, set" Usage="System.Windows.Controls.TextBox.SelectionLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fba1-265">Pobiera lub ustawia wartość wskazującą liczbę znaków w bieżącym zaznaczeniu w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="3fba1-265">Gets or sets a value indicating the number of characters in the current selection in the text box.</span></span></summary>
        <value><span data-ttu-id="3fba1-266">Liczba znaków w bieżącym zaznaczeniu w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="3fba1-266">The number of characters in the current selection in the text box.</span></span> <span data-ttu-id="3fba1-267">Wartość domyślna to 0.</span><span class="sxs-lookup"><span data-stu-id="3fba1-267">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fba1-268">Pobieranie tej właściwości zwraca liczbę znaków w bieżącym zaznaczeniu.</span><span class="sxs-lookup"><span data-stu-id="3fba1-268">Getting this property returns the number of characters in the current selection.</span></span> <span data-ttu-id="3fba1-269">Ustawienie tej właściwości dostosowuje długość bieżącego zaznaczenia do określonej wartości, pozostawiając początkowy wybór.</span><span class="sxs-lookup"><span data-stu-id="3fba1-269">Setting this property adjusts the length of the current selection to the specified value, keeping the beginning of the selection fixed.</span></span>  
  
 <span data-ttu-id="3fba1-270">Ogólnie rzecz biorąc, gdy określona długość zaznaczenia powoduje, że zaznaczenie zakończy się w nieprawidłowej pozycji (na przykład między znakiem powrotu karetki i znaku nowego wiersza, lub wewnątrz tagu), Długość zaznaczenia automatycznie dostosowuje się tak, że wynikowy wybór zostanie rozpoczęty i kończą się prawidłowymi pozycjami.</span><span class="sxs-lookup"><span data-stu-id="3fba1-270">In general, when the specified selection length causes the selection to end in an invalid position (for example, between a carriage return and a new-line character, or inside a tag), the selection length automatically adjusts so that the resulting selection starts and ends in valid positions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3fba1-271"><see cref="P:System.Windows.Controls.TextBox.SelectionLength" />jest ustawiona na wartość ujemną.</span><span class="sxs-lookup"><span data-stu-id="3fba1-271"><see cref="P:System.Windows.Controls.TextBox.SelectionLength" /> is set to a negative value.</span></span></exception>
        <altmember cref="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectedText" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectionStart">
      <MemberSignature Language="C#" Value="public int SelectionStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.SelectionStart" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionStart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionStart { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionStart : int with get, set" Usage="System.Windows.Controls.TextBox.SelectionStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fba1-272">Pobiera lub ustawia indeks znaków początku bieżącego zaznaczenia.</span><span class="sxs-lookup"><span data-stu-id="3fba1-272">Gets or sets a character index for the beginning of the current selection.</span></span></summary>
        <value><span data-ttu-id="3fba1-273">Indeks znaku dla początku bieżącego zaznaczenia.</span><span class="sxs-lookup"><span data-stu-id="3fba1-273">The character index for the beginning of the current selection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fba1-274">W przypadkach, w których określona długość zaznaczenia spowodowałaby zakończenie zaznaczenia między znakiem powrotu karetki i nową linią, Długość zaznaczenia zostanie automatycznie zwiększona o 1, aby wynikowy wybór obejmował cały znacznik końca wiersza.</span><span class="sxs-lookup"><span data-stu-id="3fba1-274">In cases where the specified selection length would cause the selection to end between a carriage return and a new-line character, the selection length is automatically increased by 1 so that the resulting selection spans the entire end-of-line marker.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3fba1-275"><see cref="P:System.Windows.Controls.TextBox.SelectionStart" />jest ustawiona na wartość ujemną.</span><span class="sxs-lookup"><span data-stu-id="3fba1-275"><see cref="P:System.Windows.Controls.TextBox.SelectionStart" /> is set to a negative value.</span></span></exception>
        <altmember cref="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectedText" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionLength" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeText">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeText (System.Windows.Markup.XamlDesignerSerializationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeText(class System.Windows.Markup.XamlDesignerSerializationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.ShouldSerializeText(System.Windows.Markup.XamlDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeText (manager As XamlDesignerSerializationManager) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeText(System::Windows::Markup::XamlDesignerSerializationManager ^ manager);" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeText : System.Windows.Markup.XamlDesignerSerializationManager -&gt; bool" Usage="textBox.ShouldSerializeText manager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.Windows.Markup.XamlDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="3fba1-276">Obiekt Menedżera usługi serializacji dla tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="3fba1-276">A serialization service manager object for this object.</span></span></param>
        <summary><span data-ttu-id="3fba1-277">Zwraca wartość wskazującą, czy efektywna wartość <see cref="P:System.Windows.Controls.TextBox.Text" /> właściwości powinna być serializowana podczas serializacji <see cref="T:System.Windows.Controls.TextBox" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3fba1-277">Returns a value that indicates whether the effective value of the <see cref="P:System.Windows.Controls.TextBox.Text" /> property should be serialized during serialization of the <see cref="T:System.Windows.Controls.TextBox" /> object.</span></span></summary>
        <returns><span data-ttu-id="3fba1-278"><see langword="true" />Jeśli właściwość powinna być serializowana; <see langword="false" />w przeciwnym razie. <see cref="P:System.Windows.Controls.TextBox.Text" /></span><span class="sxs-lookup"><span data-stu-id="3fba1-278"><see langword="true" /> if the <see cref="P:System.Windows.Controls.TextBox.Text" /> property should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="3fba1-279"><paramref name="manager" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3fba1-279"><paramref name="manager" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3fba1-280">Obiekt, który ma zostać dodany jako element podrzędny.</span><span class="sxs-lookup"><span data-stu-id="3fba1-280">An object to add as a child.</span></span></param>
        <summary><span data-ttu-id="3fba1-281">Zgłasza wyjątek we wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="3fba1-281">Throws an exception in all cases.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fba1-282"><xref:System.Windows.Controls.TextBox>akceptuje tylko tekst za pomocą <xref:System.Windows.Markup.IAddChild> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="3fba1-282"><xref:System.Windows.Controls.TextBox> accepts only text through the <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3fba1-283"><paramref name="value" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3fba1-283"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3fba1-284">We wszystkich innych przypadkach.</span><span class="sxs-lookup"><span data-stu-id="3fba1-284">In all other cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="3fba1-285">Ciąg, który ma zostać dodany do obiektu.</span><span class="sxs-lookup"><span data-stu-id="3fba1-285">A string to add to the object.</span></span></param>
        <summary><span data-ttu-id="3fba1-286">Dodaje zawartość tekstową węzła do obiektu.</span><span class="sxs-lookup"><span data-stu-id="3fba1-286">Adds the text content of a node to the object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fba1-287">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="3fba1-287">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3fba1-288">Może być używana tylko wtedy, <xref:System.Windows.Controls.TextBox> gdy wystąpienie jest rzutowane <xref:System.Windows.Markup.IAddChild> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="3fba1-288">It can be used only when the <xref:System.Windows.Controls.TextBox> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Controls.TextBox.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Text)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fba1-289">Pobiera lub ustawia zawartość tekstową pola tekstowego.</span><span class="sxs-lookup"><span data-stu-id="3fba1-289">Gets or sets the text contents of the text box.</span></span></summary>
        <value><span data-ttu-id="3fba1-290">Ciąg zawierający zawartość tekstową pola tekstowego.</span><span class="sxs-lookup"><span data-stu-id="3fba1-290">A string containing the text contents of the text box.</span></span> <span data-ttu-id="3fba1-291">Wartością domyślną jest ciąg pusty ("").</span><span class="sxs-lookup"><span data-stu-id="3fba1-291">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fba1-292">Pobranie tej właściwości zwraca kopię ciągu zawartości pola tekstowego.</span><span class="sxs-lookup"><span data-stu-id="3fba1-292">Getting this property returns a string copy of the contents of the text box.</span></span> <span data-ttu-id="3fba1-293">Ustawienie tej właściwości zastępuje zawartość pola tekstowego określonym ciągiem.</span><span class="sxs-lookup"><span data-stu-id="3fba1-293">Setting this property replaces the contents of the text box with the specified string.</span></span>  
  
 <span data-ttu-id="3fba1-294">Ta właściwość nie obsługuje animacji.</span><span class="sxs-lookup"><span data-stu-id="3fba1-294">This property does not support animation.</span></span>  
  
 <span data-ttu-id="3fba1-295">W przypadku użycia w scenariuszach powiązania danych ta właściwość używa domyślnego zachowania <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus?displayProperty=nameWithType>aktualizacji.</span><span class="sxs-lookup"><span data-stu-id="3fba1-295">When used in data-binding scenarios, this property uses the default update behavior of <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus?displayProperty=nameWithType>.</span></span>  
  
<a name="xamlPropertyElementUsage_Text"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="3fba1-296">Użycie elementu właściwości języka XAML</span><span class="sxs-lookup"><span data-stu-id="3fba1-296">XAML Property Element Usage</span></span>  
  
```  
<object>  
  String  
</object>  
```  
  
<a name="dependencyPropertyInfo_Text"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3fba1-297">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="3fba1-297">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3fba1-298">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="3fba1-298">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.TextProperty>|  
|<span data-ttu-id="3fba1-299">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="3fba1-299">Metadata properties set to `true`</span></span>|<span data-ttu-id="3fba1-300"><xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A></span><span class="sxs-lookup"><span data-stu-id="3fba1-300"><xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A></span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.CharacterCasing" />
        <altmember cref="P:System.Windows.Controls.TextBox.TextAlignment" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.TextAlignment TextAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextAlignment TextAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.TextAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlignment As TextAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextAlignment TextAlignment { System::Windows::TextAlignment get(); void set(System::Windows::TextAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.TextAlignment : System.Windows.TextAlignment with get, set" Usage="System.Windows.Controls.TextBox.TextAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fba1-301">Pobiera lub Ustawia wyrównanie w poziomie zawartości pola tekstowego.</span><span class="sxs-lookup"><span data-stu-id="3fba1-301">Gets or sets the horizontal alignment of the contents of the text box.</span></span></summary>
        <value><span data-ttu-id="3fba1-302">Jedna z <see cref="T:System.Windows.TextAlignment" /> wartości, która określa wyrównanie zawartości pola tekstowego w poziomie.</span><span class="sxs-lookup"><span data-stu-id="3fba1-302">One of the <see cref="T:System.Windows.TextAlignment" /> values that specifies the horizontal alignment of the contents of the text box.</span></span> <span data-ttu-id="3fba1-303">Wartość domyślna to <see cref="F:System.Windows.TextAlignment.Left" />.</span><span class="sxs-lookup"><span data-stu-id="3fba1-303">The default is <see cref="F:System.Windows.TextAlignment.Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fba1-304">Pobieranie tej właściwości zwraca bieżące wyrównanie.</span><span class="sxs-lookup"><span data-stu-id="3fba1-304">Getting this property returns the current alignment.</span></span> <span data-ttu-id="3fba1-305">Ustawienie tej właściwości dostosowuje zawartość pola tekstowego w celu odzwierciedlenia określonego wyrównania.</span><span class="sxs-lookup"><span data-stu-id="3fba1-305">Setting this property adjusts the contents of the text box to reflect the specified alignment.</span></span>  
  
 <span data-ttu-id="3fba1-306">Ta właściwość ma wyższy priorytet niż <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> właściwość.</span><span class="sxs-lookup"><span data-stu-id="3fba1-306">This property has a higher precedence than the <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> property.</span></span>  
  
<a name="dependencyPropertyInfo_TextAlignment"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3fba1-307">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="3fba1-307">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3fba1-308">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="3fba1-308">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.TextAlignmentProperty>|  
|<span data-ttu-id="3fba1-309">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="3fba1-309">Metadata properties set to `true`</span></span>|<span data-ttu-id="3fba1-310"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span><span class="sxs-lookup"><span data-stu-id="3fba1-310"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3fba1-311">Poniższy przykład pokazuje, jak utworzyć <xref:System.Windows.Controls.TextBox> <xref:System.Windows.Controls.TextBox.TextAlignment%2A> za pomocą <xref:System.Windows.TextAlignment.Center?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3fba1-311">The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBox.TextAlignment%2A> of <xref:System.Windows.TextAlignment.Center?displayProperty=nameWithType>.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/textboxexample.xaml#textboxexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/TextBoxExample.cs#textboxcodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/textboxexample.vb#textboxcodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.Text" />
        <altmember cref="P:System.Windows.Controls.TextBox.CharacterCasing" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignmentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextAlignmentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextAlignmentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.TextAlignmentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextAlignmentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextAlignmentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextAlignmentProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.TextAlignmentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fba1-312">Identyfikuje właściwość <see cref="P:System.Windows.Controls.TextBox.TextAlignment" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="3fba1-312">Identifies the <see cref="P:System.Windows.Controls.TextBox.TextAlignment" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextDecorations">
      <MemberSignature Language="C#" Value="public System.Windows.TextDecorationCollection TextDecorations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.TextDecorationCollection TextDecorations" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.TextDecorations" />
      <MemberSignature Language="VB.NET" Value="Public Property TextDecorations As TextDecorationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextDecorationCollection ^ TextDecorations { System::Windows::TextDecorationCollection ^ get(); void set(System::Windows::TextDecorationCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TextDecorations : System.Windows.TextDecorationCollection with get, set" Usage="System.Windows.Controls.TextBox.TextDecorations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextDecorationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fba1-313">Pobiera dekoracje tekstu do zastosowania do pola tekstowego.</span><span class="sxs-lookup"><span data-stu-id="3fba1-313">Gets the text decorations to apply to the text box.</span></span></summary>
        <value><span data-ttu-id="3fba1-314"><see cref="T:System.Windows.TextDecorationCollection" /> Kolekcja zawierająca dekoracje tekstu do zastosowania do pola tekstowego.</span><span class="sxs-lookup"><span data-stu-id="3fba1-314">A <see cref="T:System.Windows.TextDecorationCollection" /> collection that contains text decorations to apply to the text box.</span></span> <span data-ttu-id="3fba1-315">Wartość domyślna to <see langword="null" /> (nie zastosowano dekoracji tekstu).</span><span class="sxs-lookup"><span data-stu-id="3fba1-315">The default is <see langword="null" /> (no text decorations applied).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fba1-316"><xref:System.Windows.TextDecoration> Obiekt jest wizualną wizualizacją, którą można dodać do tekstu.</span><span class="sxs-lookup"><span data-stu-id="3fba1-316">A <xref:System.Windows.TextDecoration> object is a visual ornamentation you can add to text.</span></span> <span data-ttu-id="3fba1-317">Istnieją cztery typy dekoracji tekstu: podkreolenie, linie bazowe, przekreślenie i nadkreślenie.</span><span class="sxs-lookup"><span data-stu-id="3fba1-317">There are four types of text decorations: underline, baseline, strikethrough, and overline.</span></span> <span data-ttu-id="3fba1-318">Aby uzyskać więcej informacji na temat dekoracji tekstu [, zobacz How to: Utwórz dekorację](~/docs/framework/wpf/advanced/how-to-create-a-text-decoration.md)tekstu.</span><span class="sxs-lookup"><span data-stu-id="3fba1-318">For more information about text decorations, see [How to: Create a Text Decoration](~/docs/framework/wpf/advanced/how-to-create-a-text-decoration.md).</span></span>  
  
<a name="dependencyPropertyInfo_TextDecorations"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3fba1-319">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="3fba1-319">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3fba1-320">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="3fba1-320">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.TextDecorationsProperty>|  
|<span data-ttu-id="3fba1-321">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="3fba1-321">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="3fba1-322">Poniższy przykład pokazuje, jak ustawić <xref:System.Windows.Documents.Inline.TextDecorations%2A> atrybut, używając <xref:System.Windows.Documents.Run> jako przykładowego elementu.</span><span class="sxs-lookup"><span data-stu-id="3fba1-322">The following example shows how to set the <xref:System.Windows.Documents.Inline.TextDecorations%2A> attribute, using <xref:System.Windows.Documents.Run> as the example element.</span></span>  
  
 [!code-xaml[InlineSnippets#_Inline_TextDecXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/InlineSnippets/CSharp/Window1.xaml#_inline_textdecxaml)]  
  
 <span data-ttu-id="3fba1-323">Na poniższej ilustracji przedstawiono sposób renderowania tego przykładu.</span><span class="sxs-lookup"><span data-stu-id="3fba1-323">The following figure shows how this example renders.</span></span>  
  
 <span data-ttu-id="3fba1-324">![Zrzut ekranu Tekst z domyślnym efektem](~/add/media/inline-textdec-strike.png "przekreślenia: Tekst z domyślnym efektem przekreślenia")</span><span class="sxs-lookup"><span data-stu-id="3fba1-324">![Screenshot: Text with default strikethrough effect](~/add/media/inline-textdec-strike.png "Screenshot: Text with default strikethrough effect")</span></span>  
  
 <span data-ttu-id="3fba1-325">Poniższe ilustracje pokazują, jak <xref:System.Windows.TextDecorations.OverLine%2A>są <xref:System.Windows.TextDecorations.Baseline%2A>renderowane, <xref:System.Windows.TextDecorations.Underline%2A> i i dekoracje.</span><span class="sxs-lookup"><span data-stu-id="3fba1-325">The following figures show how the <xref:System.Windows.TextDecorations.OverLine%2A>, <xref:System.Windows.TextDecorations.Baseline%2A>, and <xref:System.Windows.TextDecorations.Underline%2A> decorations render, respectively.</span></span>  
  
 <span data-ttu-id="3fba1-326">![Zrzut ekranu Zrzut ekranu TextDecorator]:(~/add/media/inline-textdec-over.png " TextDecorator nadkreślenia")</span><span class="sxs-lookup"><span data-stu-id="3fba1-326">![Screenshot: Overline TextDecorator](~/add/media/inline-textdec-over.png "Screenshot: Overline TextDecorator")</span></span>  
  
 <span data-ttu-id="3fba1-327">![Zrzut ekranu Domyślny efekt linii bazowej na]zrzucie ekranu tekstu(~/add/media/inline-textdec-base.png ": Domyślny efekt linii bazowej dla tekstu")</span><span class="sxs-lookup"><span data-stu-id="3fba1-327">![Screenshot: Default baseline effect on text](~/add/media/inline-textdec-base.png "Screenshot: Default baseline effect on text")</span></span>  
  
 <span data-ttu-id="3fba1-328">![Zrzut ekranu Tekst z domyślnym efektem](~/add/media/inline-textdec-under.png "podkreślenia: Tekst z domyślnym efektem podkreślenia")</span><span class="sxs-lookup"><span data-stu-id="3fba1-328">![Screenshot: Text with default underline effect](~/add/media/inline-textdec-under.png "Screenshot: Text with default underline effect")</span></span>  
  
 <span data-ttu-id="3fba1-329">Poniższy przykład pokazuje, <xref:System.Windows.Documents.Inline.TextDecorations%2A> jak ustawić właściwości programowo.</span><span class="sxs-lookup"><span data-stu-id="3fba1-329">The following example shows how to set the <xref:System.Windows.Documents.Inline.TextDecorations%2A> property programmatically.</span></span>  
  
 [!code-csharp[InlineSnippets#_Inline_TextDec](~/samples/snippets/csharp/VS_Snippets_Wpf/InlineSnippets/CSharp/Window1.xaml.cs#_inline_textdec)]
 [!code-vb[InlineSnippets#_Inline_TextDec](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InlineSnippets/visualbasic/window1.xaml.vb#_inline_textdec)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextDecorationsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextDecorationsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextDecorationsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.TextDecorationsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextDecorationsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextDecorationsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextDecorationsProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.TextDecorationsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fba1-330">Identyfikuje właściwość <see cref="P:System.Windows.Controls.TextBox.TextDecorations" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="3fba1-330">Identifies the <see cref="P:System.Windows.Controls.TextBox.TextDecorations" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fba1-331">Identyfikator <xref:System.Windows.Controls.TextBox.TextDecorations%2A> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="3fba1-331">The identifier for the <xref:System.Windows.Controls.TextBox.TextDecorations%2A> dependency property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.TextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.TextProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fba1-332">Identyfikuje właściwość <see cref="P:System.Windows.Controls.TextBox.Text" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="3fba1-332">Identifies the <see cref="P:System.Windows.Controls.TextBox.Text" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextWrapping">
      <MemberSignature Language="C#" Value="public System.Windows.TextWrapping TextWrapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextWrapping TextWrapping" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.TextWrapping" />
      <MemberSignature Language="VB.NET" Value="Public Property TextWrapping As TextWrapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextWrapping TextWrapping { System::Windows::TextWrapping get(); void set(System::Windows::TextWrapping value); };" />
      <MemberSignature Language="F#" Value="member this.TextWrapping : System.Windows.TextWrapping with get, set" Usage="System.Windows.Controls.TextBox.TextWrapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextWrapping</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fba1-333">Pobiera lub ustawia sposób zawijania tekstu w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="3fba1-333">Gets or sets how the text box should wrap text.</span></span></summary>
        <value><span data-ttu-id="3fba1-334">Jedna z <see cref="T:System.Windows.TextWrapping" /> wartości, która wskazuje na sposób zawijania tekstu w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="3fba1-334">One of the <see cref="T:System.Windows.TextWrapping" /> values that indicates how the text box should wrap text.</span></span> <span data-ttu-id="3fba1-335">Wartość domyślna to <see cref="F:System.Windows.TextWrapping.NoWrap" />.</span><span class="sxs-lookup"><span data-stu-id="3fba1-335">The default is <see cref="F:System.Windows.TextWrapping.NoWrap" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fba1-336">Ustawienie dla <xref:System.Windows.Controls.TextBox.TextWrapping%2A> <xref:System.Windows.Controls.TextBox> atrybutu wartości <xref:System.Windows.Controls.TextBox> powoduje, że wprowadzony tekst ma być zawijany do nowego wiersza po osiągnięciu krawędzi kontrolki, automatyczne powiększanie wysokości kontrolki w celu uwzględnienia miejsca dla nowego wiersza, w razie potrzeby. <xref:System.Windows.TextWrapping.Wrap></span><span class="sxs-lookup"><span data-stu-id="3fba1-336">Setting the <xref:System.Windows.Controls.TextBox.TextWrapping%2A> attribute to <xref:System.Windows.TextWrapping.Wrap> causes entered text to wrap to a new line when the edge of the <xref:System.Windows.Controls.TextBox> control is reached, automatically expanding the height of the <xref:System.Windows.Controls.TextBox> control to include room for a new line, if necessary.</span></span>  
  
<a name="dependencyPropertyInfo_TextWrapping"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3fba1-337">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="3fba1-337">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3fba1-338">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="3fba1-338">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.TextWrappingProperty>|  
|<span data-ttu-id="3fba1-339">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="3fba1-339">Metadata properties set to `true`</span></span>|<span data-ttu-id="3fba1-340"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A></span><span class="sxs-lookup"><span data-stu-id="3fba1-340"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3fba1-341">W poniższym przykładzie pokazano, jak ustawić wartość tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="3fba1-341">The following example demonstrates how to set the value of this property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase12](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase12)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextWrappingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextWrappingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextWrappingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.TextWrappingProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextWrappingProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextWrappingProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextWrappingProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.TextWrappingProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fba1-342">Identyfikuje właściwość <see cref="P:System.Windows.Controls.TextBox.TextWrapping" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="3fba1-342">Identifies the <see cref="P:System.Windows.Controls.TextBox.TextWrapping" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fba1-343">Identyfikator <xref:System.Windows.Controls.TextBox.TextWrapping%2A> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="3fba1-343">The identifier for the <xref:System.Windows.Controls.TextBox.TextWrapping%2A> dependency property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Typography">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.Typography Typography { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.Typography Typography" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.Typography" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Typography As Typography" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::Typography ^ Typography { System::Windows::Documents::Typography ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Typography : System.Windows.Documents.Typography" Usage="System.Windows.Controls.TextBox.Typography" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Typography</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fba1-344">Pobiera aktualnie obowiązujące Wariacje typograficzne dla zawartości tekstowej pola tekstowego.</span><span class="sxs-lookup"><span data-stu-id="3fba1-344">Gets the currently effective typography variations for the text contents of the text box.</span></span></summary>
        <value><span data-ttu-id="3fba1-345"><see cref="T:System.Windows.Documents.Typography" /> Obiekt, który określa aktualnie obowiązujące wahania typografii.</span><span class="sxs-lookup"><span data-stu-id="3fba1-345">A <see cref="T:System.Windows.Documents.Typography" /> object that specifies the currently effective typography variations.</span></span> <span data-ttu-id="3fba1-346">Aby uzyskać listę domyślnych wartości typografii, zobacz <see cref="T:System.Windows.Documents.Typography" />.</span><span class="sxs-lookup"><span data-stu-id="3fba1-346">For a list of default typography values, see <see cref="T:System.Windows.Documents.Typography" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fba1-347">Właściwość ma zastosowanie tylko do [!INCLUDE[TLA#tla_opentype](~/includes/tlasharptla-opentype-md.md)] czcionek. <xref:System.Windows.Documents.FlowDocument.Typography%2A></span><span class="sxs-lookup"><span data-stu-id="3fba1-347">The <xref:System.Windows.Documents.FlowDocument.Typography%2A> property is applicable only to [!INCLUDE[TLA#tla_opentype](~/includes/tlasharptla-opentype-md.md)] fonts.</span></span> <span data-ttu-id="3fba1-348">Wariant typografii nie ma wpływu na czcionki, które nie obsługują tego wariantu.</span><span class="sxs-lookup"><span data-stu-id="3fba1-348">A typography variant has no effect on fonts that do not support the variant.</span></span> <span data-ttu-id="3fba1-349">Aby uzyskać więcej informacji na temat tego tematu, zobacz [Typografia w WPF](~/docs/framework/wpf/advanced/typography-in-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="3fba1-349">For more information about this topic, see [Typography in WPF](~/docs/framework/wpf/advanced/typography-in-wpf.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3fba1-350">Poniższy przykład pokazuje, jak ustawić <xref:System.Windows.Documents.TextElement.Typography%2A> atrybut, używając <xref:System.Windows.Documents.Paragraph> jako przykładowego elementu.</span><span class="sxs-lookup"><span data-stu-id="3fba1-350">The following example shows how to set the <xref:System.Windows.Documents.TextElement.Typography%2A> attribute, using <xref:System.Windows.Documents.Paragraph> as the example element.</span></span>  
  
 [!code-xaml[TextElementSnippets#_TextElement_TypogXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/TextElementSnippets/CSharp/Window1.xaml#_textelement_typogxaml)]  
  
 <span data-ttu-id="3fba1-351">Na poniższej ilustracji przedstawiono sposób renderowania tego przykładu.</span><span class="sxs-lookup"><span data-stu-id="3fba1-351">The following figure shows how this example renders.</span></span>  
  
 <span data-ttu-id="3fba1-352">![Zrzut ekranu Tekst ze zmienionym](~/add/media/textelement-typog.png "zrzutem ekranu: Tekst z zmienioną typografią")</span><span class="sxs-lookup"><span data-stu-id="3fba1-352">![Screenshot: Text with altered typography](~/add/media/textelement-typog.png "Screenshot: Text with altered typography")</span></span>  
  
 <span data-ttu-id="3fba1-353">Z drugiej strony na poniższej ilustracji pokazano, jak podobny przykład z domyślnymi właściwościami typograficznych.</span><span class="sxs-lookup"><span data-stu-id="3fba1-353">In contrast, the following figure shows how a similar example with default typographic properties renders.</span></span>  
  
 <span data-ttu-id="3fba1-354">![Zrzut ekranu Tekst ze zmienionym](~/add/media/textelement-typog-default.png "zrzutem ekranu: Tekst z zmienioną typografią")</span><span class="sxs-lookup"><span data-stu-id="3fba1-354">![Screenshot: Text with altered typography](~/add/media/textelement-typog-default.png "Screenshot: Text with altered typography")</span></span>  
  
 <span data-ttu-id="3fba1-355">Poniższy przykład pokazuje, <xref:System.Windows.Controls.TextBox.Typography%2A> jak ustawić właściwości programowo.</span><span class="sxs-lookup"><span data-stu-id="3fba1-355">The following example shows how to set the <xref:System.Windows.Controls.TextBox.Typography%2A> property programmatically.</span></span>  
  
 [!code-csharp[TextElementSnippets#_TextElement_Typog](~/samples/snippets/csharp/VS_Snippets_Wpf/TextElementSnippets/CSharp/Window1.xaml.cs#_textelement_typog)]
 [!code-vb[TextElementSnippets#_TextElement_Typog](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextElementSnippets/visualbasic/window1.xaml.vb#_textelement_typog)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
