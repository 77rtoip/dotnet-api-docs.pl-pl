<Type Name="TextBox" FullName="System.Windows.Controls.TextBox">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="961c169ec3b6a9f966aeec699d100a7d5baf2fa7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TextBox : System.Windows.Controls.Primitives.TextBoxBase, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi TextBox extends System.Windows.Controls.Primitives.TextBoxBase implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.TextBox" />
  <TypeSignature Language="VB.NET" Value="Public Class TextBox&#xA;Inherits TextBoxBase&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextBox : System::Windows::Controls::Primitives::TextBoxBase, System::Windows::Markup::IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.TextBoxBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Text)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Text")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4901b-101">Reprezentuje kontrolkę, która służy do wyświetlania lub edycji niesformatowanego tekstu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4901b-101">Represents a control that can be used to display or edit unformatted text.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4901b-102">A <xref:System.Windows.Controls.TextBox> formant może zawierać tylko niesformatowanego tekstu w jego <xref:System.Windows.Controls.TextBox.Text%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="4901b-102">A <xref:System.Windows.Controls.TextBox> control can contain only unformatted text in its <xref:System.Windows.Controls.TextBox.Text%2A> property.</span></span> <span data-ttu-id="4901b-103">Na poniższym rysunku przedstawiono przykład <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="4901b-103">The following graphic shows an example of a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 <span data-ttu-id="4901b-104">![Zrzut ekranu przedstawiający pole tekstowe](~/add/media/ss-ctl-textbox.gif "zrzut ekranu przedstawiający pole tekstowe")</span><span class="sxs-lookup"><span data-stu-id="4901b-104">![TextBox screen shot](~/add/media/ss-ctl-textbox.gif "TextBox screen shot")</span></span>  
<span data-ttu-id="4901b-105">Przykład pola tekstowego</span><span class="sxs-lookup"><span data-stu-id="4901b-105">Example of a TextBox</span></span>  
  
 <span data-ttu-id="4901b-106"><xref:System.Windows.Controls.TextBox> jest złożone formant, który składa się z kilku składników hermetyzowany.</span><span class="sxs-lookup"><span data-stu-id="4901b-106"><xref:System.Windows.Controls.TextBox> is a composite control that is composed of several encapsulated components.</span></span> <span data-ttu-id="4901b-107">W rezultacie niektóre zdarzenia nie bąbelkowy do formantu zawierającego, ponieważ są one obsługiwane przez elementy podrzędne hermetyzowany.</span><span class="sxs-lookup"><span data-stu-id="4901b-107">Consequently, some events do not bubble up to the containing control because they are handled by encapsulated child elements.</span></span> <span data-ttu-id="4901b-108">W związku z tym deweloperzy aplikacji powinna nasłuchiwać tunelowania wersji zdarzenia (oznaczone według prefiksu "W wersji zapoznawczej").</span><span class="sxs-lookup"><span data-stu-id="4901b-108">Because of this, application developers should listen for the tunneling version of an event (denoted by the prefix "Preview").</span></span>  
  
 <span data-ttu-id="4901b-109"><xref:System.Windows.Controls.TextBox> obsługuje tylko niesformatowanego tekstu.</span><span class="sxs-lookup"><span data-stu-id="4901b-109"><xref:System.Windows.Controls.TextBox> supports unformatted text only.</span></span> <span data-ttu-id="4901b-110">Dla aplikacji, które wymagają obsługi więcej elementów, zobacz <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="4901b-110">For applications that require support for richer content, see <xref:System.Windows.Controls.RichTextBox>.</span></span> <span data-ttu-id="4901b-111">Dla aplikacji, które musisz zaakceptować haseł i innych poufnych danych wejściowych, zobacz <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="4901b-111">For applications that need to accept passwords or other sensitive input, see <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
 <span data-ttu-id="4901b-112">Poziomie i w pionie wyrównanie tekstu w <xref:System.Windows.Controls.TextBox> wykonuje się za pomocą <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> i <xref:System.Windows.Controls.Control.VerticalContentAlignment%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="4901b-112">Horizontally and vertically aligning text within a <xref:System.Windows.Controls.TextBox> is done with the <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> and <xref:System.Windows.Controls.Control.VerticalContentAlignment%2A> properties.</span></span> <span data-ttu-id="4901b-113">Wyrównywanie <xref:System.Windows.Controls.TextBox> w układ strony wykonuje się za pomocą <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> i <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="4901b-113">Aligning the <xref:System.Windows.Controls.TextBox> within the layout of the page is done with the <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> and <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> properties.</span></span>  
  
 <span data-ttu-id="4901b-114">Najlepszy sposób, aby ukryć obramowania wokół <xref:System.Windows.Controls.TextBox> jest skonfigurowanie <xref:System.Windows.Controls.Control.BorderThickness%2A> właściwość <xref:System.Windows.Controls.TextBox> do `0`.</span><span class="sxs-lookup"><span data-stu-id="4901b-114">The best way to hide the border around a <xref:System.Windows.Controls.TextBox> is to set the <xref:System.Windows.Controls.Control.BorderThickness%2A> property of the <xref:System.Windows.Controls.TextBox> to `0`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4901b-115"><xref:System.Windows.Controls.TextBox> zawiera wbudowane obsługę propagacji <xref:System.Windows.UIElement.MouseUp> i <xref:System.Windows.UIElement.MouseDown> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="4901b-115"><xref:System.Windows.Controls.TextBox> has built-in handling for the bubbling  <xref:System.Windows.UIElement.MouseUp> and <xref:System.Windows.UIElement.MouseDown> events.</span></span> <span data-ttu-id="4901b-116">W rezultacie procedury obsługi zdarzeń niestandardowych która nasłuchuje <xref:System.Windows.UIElement.MouseUp> lub <xref:System.Windows.UIElement.MouseDown> zdarzenia z <xref:System.Windows.Controls.TextBox> nie zostanie wywołana.</span><span class="sxs-lookup"><span data-stu-id="4901b-116">Consequently, custom event handlers that listen for <xref:System.Windows.UIElement.MouseUp> or <xref:System.Windows.UIElement.MouseDown> events from a <xref:System.Windows.Controls.TextBox> will not be called.</span></span> <span data-ttu-id="4901b-117">Jeśli musisz odpowiadać na te zdarzenia, nasłuchiwania tunelowania <xref:System.Windows.UIElement.PreviewMouseUp> i <xref:System.Windows.UIElement.PreviewMouseDown> zdarzenia zamiast tego lub zarejestruj programów obsługi z <xref:System.Windows.EventSetter.HandledEventsToo%2A> argumentu (tym ostatnim opcja jest dostępna tylko przy użyciu kodu).</span><span class="sxs-lookup"><span data-stu-id="4901b-117">If you need to respond to these events, listen for the tunneling <xref:System.Windows.UIElement.PreviewMouseUp> and <xref:System.Windows.UIElement.PreviewMouseDown> events instead, or register the handlers with the <xref:System.Windows.EventSetter.HandledEventsToo%2A> argument (this latter option is only available through code).</span></span> <span data-ttu-id="4901b-118">Nie oznaczaj zdarzeń obsługi, chyba że chcesz wyłączyć celowo <xref:System.Windows.Controls.TextBox> natywnej obsługi tych zdarzeń i należy pamiętać, że to ma znaczący wpływ na formantu [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="4901b-118">Do not mark the event handled unless you deliberately want to disable <xref:System.Windows.Controls.TextBox> native handling of these events, and be aware that this has notable effects on the control's [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span>  
  
 <span data-ttu-id="4901b-119">Paski przewijania nie są widoczne na <xref:System.Windows.Controls.TextBox> domyślnie.</span><span class="sxs-lookup"><span data-stu-id="4901b-119">Scrollbars are not visible on a <xref:System.Windows.Controls.TextBox> by default.</span></span> <span data-ttu-id="4901b-120">Aby wyświetlić pasków przewijania, należy ustawić <xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility%2A> i <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility%2A> właściwości <xref:System.Windows.Controls.ScrollBarVisibility.Visible> lub <xref:System.Windows.Controls.ScrollBarVisibility.Auto>.</span><span class="sxs-lookup"><span data-stu-id="4901b-120">To make scrollbars visible, set the <xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility%2A> and <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility%2A> properties to <xref:System.Windows.Controls.ScrollBarVisibility.Visible> or <xref:System.Windows.Controls.ScrollBarVisibility.Auto>.</span></span>  
  
 <span data-ttu-id="4901b-121">Zazwyczaj <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> zdarzenia mają być używane do wykrywania po każdej zmianie tekstu w <xref:System.Windows.Controls.TextBox> lub <xref:System.Windows.Controls.RichTextBox> zmienia zamiast <xref:System.Windows.UIElement.KeyDown> zgodnie z oczekiwaniami może.</span><span class="sxs-lookup"><span data-stu-id="4901b-121">Usually the <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> event should be used to detect whenever the text in a <xref:System.Windows.Controls.TextBox> or <xref:System.Windows.Controls.RichTextBox> changes rather then <xref:System.Windows.UIElement.KeyDown> as you might expect.</span></span> <span data-ttu-id="4901b-122">Zobacz [porady: wykrywanie podczas tekst w pole tekstowe został zmieniony](~/docs/framework/wpf/controls/how-to-detect-when-text-in-a-textbox-has-changed.md) przykład.</span><span class="sxs-lookup"><span data-stu-id="4901b-122">See [How to: Detect When Text in a TextBox Has Changed](~/docs/framework/wpf/controls/how-to-detect-when-text-in-a-textbox-has-changed.md) for an example.</span></span>  
  
## <a name="customizing-the-textbox-control"></a><span data-ttu-id="4901b-123">Dostosowywanie formantu TextBox</span><span class="sxs-lookup"><span data-stu-id="4901b-123">Customizing the TextBox Control</span></span>  
 <span data-ttu-id="4901b-124">Aby zastosować te same ustawienia właściwości z wieloma <xref:System.Windows.Controls.TextBox> formantów, użyj <xref:System.Windows.FrameworkElement.Style%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="4901b-124">To apply the same property settings to multiple <xref:System.Windows.Controls.TextBox> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="4901b-125">Można zmodyfikować domyślne <xref:System.Windows.Controls.ControlTemplate> umożliwiają unikatowego wyglądu formantu.</span><span class="sxs-lookup"><span data-stu-id="4901b-125">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="4901b-126">Aby uzyskać więcej informacji o tworzeniu <xref:System.Windows.Controls.ControlTemplate>, zobacz [Dostosowywanie wyglądu formant tworząc ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="4901b-126">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="4901b-127">Aby wyświetlić części i Stany, które są specyficzne dla <xref:System.Windows.Controls.TextBox>, zobacz [style pole tekstowe i szablony](~/docs/framework/wpf/controls/textbox-styles-and-templates.md).</span><span class="sxs-lookup"><span data-stu-id="4901b-127">To see the parts and states that are specific to the <xref:System.Windows.Controls.TextBox>, see [TextBox Styles and Templates](~/docs/framework/wpf/controls/textbox-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="4901b-128">Właściwości zależności dla tego formantu może być ustawiona w stylu domyślnym formantu.</span><span class="sxs-lookup"><span data-stu-id="4901b-128">Dependency properties for this control might be set by the control’s default style.</span></span>  <span data-ttu-id="4901b-129">Jeśli właściwość jest ustawiona w stylu domyślnym, gdy formant jest wyświetlany w aplikacji właściwość może zmienić ze swojej wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="4901b-129">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="4901b-130">Domyślny styl jest określana, przez które kompozycji pulpitu jest używana, gdy aplikacja jest uruchomiona.</span><span class="sxs-lookup"><span data-stu-id="4901b-130">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="4901b-131">Aby uzyskać więcej informacji, zobacz [domyślnej kompozycji WPF](http://go.microsoft.com/fwlink/?LinkID=158252).</span><span class="sxs-lookup"><span data-stu-id="4901b-131">For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4901b-132">Ustawienie właściwości visual będzie miał wpływ tylko jeśli ta właściwość jest obecny w obu <xref:System.Windows.Controls.TextBox> formant na szablon domyślny i ustawić za pomocą.</span><span class="sxs-lookup"><span data-stu-id="4901b-132">Setting a visual property will only have an effect if that property is both present in <xref:System.Windows.Controls.TextBox> control's default template and is set by using a .</span></span> <span data-ttu-id="4901b-133">Lista właściwości visual można znaleźć w sekcji "Zmiana Visual struktury kontroli" [Dostosowywanie wyglądu formant tworząc ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="4901b-133">You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4901b-134">Ten przykład przedstawia sposób użycia właściwości Text można ustawić zawartości początkowy tekst formantu TextBox.</span><span class="sxs-lookup"><span data-stu-id="4901b-134">This example shows how to use the Text property to set the initial text contents of a TextBox control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4901b-135">Mimo że można użyć wersji Extensible Application Markup Language (XAML) przykładu \<TextBox.Text > tagi wokół tekstu zawartości pola tekstowego każdego przycisku, nie jest konieczne, ponieważ pole tekstowe stosuje atrybut ContentPropertyAttribute atrybut z właściwością Text.</span><span class="sxs-lookup"><span data-stu-id="4901b-135">Although the Extensible Application Markup Language (XAML) version of the example could use the \<TextBox.Text> tags around the text of each button's TextBox content, it is not necessary because the TextBox applies the ContentPropertyAttribute attribute to the Text property.</span></span>  
  
```xaml  
<TextBox Name="tbSettingText">  
  Initial text contents of the TextBox.  
</TextBox>  
```  
  
```csharp  
tbSettingText.Text = "Initial text contents of the TextBox.";  
```  
  
```vb  
tbSettingText.Text = "Initial text contents of the TextBox."  
```  
  
 <span data-ttu-id="4901b-136">Dodatkowe przykłady można znaleźć w wersji 4.0 tego dokumentu: [pole tekstowe klasy](https://msdn.microsoft.com/library/ms617604\(v=vs.100\).aspx).</span><span class="sxs-lookup"><span data-stu-id="4901b-136">For additional examples, see the 4.0 version of this document: [TextBox Class](https://msdn.microsoft.com/library/ms617604\(v=vs.100\).aspx).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.PasswordBox" />
    <altmember cref="T:System.Windows.Controls.RichTextBox" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4901b-137">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Controls.TextBox" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-137">Initializes a new instance of the <see cref="T:System.Windows.Controls.TextBox" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaretIndex">
      <MemberSignature Language="C#" Value="public int CaretIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CaretIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.CaretIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property CaretIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CaretIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4901b-138">Pobiera lub ustawia indeks wstawiania pozycji karetki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-138">Gets or sets the insertion position index of the caret.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4901b-139">Pozycja wstawiania liczony od zera indeks karetki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-139">The zero-based insertion position index of the caret.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4901b-140">Pobieranie ta właściwość zwraca bieżącego indeksu pozycja wstawiania karetki (zobacz <xref:System.Windows.Documents.TextPointer> informacji w terminologii, takich jak "wstawiania").</span><span class="sxs-lookup"><span data-stu-id="4901b-140">Getting this property returns the current insertion position index of the caret (see <xref:System.Windows.Documents.TextPointer> for information on terminology like "insertion position").</span></span> <span data-ttu-id="4901b-141">Ustawienie tej właściwości przenosi karetkę do określonego wstawiania.</span><span class="sxs-lookup"><span data-stu-id="4901b-141">Setting this property moves the caret to the specified insertion position.</span></span>  
  
 <span data-ttu-id="4901b-142">Pozycja wstawiania jest między znakami lub tagi elementów.</span><span class="sxs-lookup"><span data-stu-id="4901b-142">An insertion position is between either characters or element tags.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Documents.TextPointer" />
      </Docs>
    </Member>
    <Member MemberName="CharacterCasing">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.CharacterCasing CharacterCasing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.CharacterCasing CharacterCasing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.CharacterCasing" />
      <MemberSignature Language="VB.NET" Value="Public Property CharacterCasing As CharacterCasing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::CharacterCasing CharacterCasing { System::Windows::Controls::CharacterCasing get(); void set(System::Windows::Controls::CharacterCasing value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.CharacterCasing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4901b-143">Pobiera lub ustawia jak znaki są z uwzględnieniem wielkości liter podczas są wpisywane ręcznie do pola tekstowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-143">Gets or sets how characters are cased when they are manually entered into the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4901b-144">Jeden z <see cref="T:System.Windows.Controls.CharacterCasing" /> wartości, które określa, jak ręcznie wprowadzone znaki są z uwzględnieniem wielkości liter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-144">One of the <see cref="T:System.Windows.Controls.CharacterCasing" /> values that specifies how manually entered characters are cased.</span>
          </span>
          <span data-ttu-id="4901b-145">Wartość domyślna to <see cref="F:System.Windows.Controls.CharacterCasing.Normal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-145">The default is <see cref="F:System.Windows.Controls.CharacterCasing.Normal" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4901b-146">Ta właściwość nie ma wpływu na znaki, które są dodawane programowo.</span><span class="sxs-lookup"><span data-stu-id="4901b-146">This property does not affect characters that are added programmatically.</span></span>  
  
<a name="dependencyPropertyInfo_CharacterCasing"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="4901b-147">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="4901b-147">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="4901b-148">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="4901b-148">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.CharacterCasingProperty>|  
|<span data-ttu-id="4901b-149">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="4901b-149">Metadata properties set to `true`</span></span>|<span data-ttu-id="4901b-150">Brak</span><span class="sxs-lookup"><span data-stu-id="4901b-150">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="4901b-151">Poniższy przykład przedstawia użycie <xref:System.Windows.Controls.TextBox.CharacterCasing%2A> właściwości można przekonwertować wszystkie wprowadzone ręcznie znaki na wielkie litery w polu tekstowym.</span><span class="sxs-lookup"><span data-stu-id="4901b-151">The following example shows how to use the <xref:System.Windows.Controls.TextBox.CharacterCasing%2A> property to convert all manually entered characters to uppercase in a text box.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#CharacterCasingExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/charactercasingexample.xaml#charactercasingexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#CharacterCasingCodeExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/CharacterCasingExample.cs#charactercasingcodeexamplewholepage)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#CharacterCasingCodeExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/charactercasingexample.vb#charactercasingcodeexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterCasingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CharacterCasingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CharacterCasingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.CharacterCasingProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CharacterCasingProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CharacterCasingProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4901b-152">Identyfikuje <see cref="P:System.Windows.Controls.TextBox.CharacterCasing" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-152">Identifies the <see cref="P:System.Windows.Controls.TextBox.CharacterCasing" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4901b-153">Czyści całą zawartość w polu tekstowym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-153">Clears all the content from the text box.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.Text" />
      </Docs>
    </Member>
    <Member MemberName="GetCharacterIndexFromLineIndex">
      <MemberSignature Language="C#" Value="public int GetCharacterIndexFromLineIndex (int lineIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCharacterIndexFromLineIndex(int32 lineIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCharacterIndexFromLineIndex (lineIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCharacterIndexFromLineIndex(int lineIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineIndex">
          <span data-ttu-id="4901b-154">Liczony od zera indeks wiersza do pobrania indeks początkowy znaku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-154">The zero-based index of the line to retrieve the initial character index for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4901b-155">Zwraca znak liczony od zera indeks pierwszego znaku w określonej linii.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-155">Returns the zero-based character index for the first character in the specified line.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4901b-156">Liczony od zera indeks pierwszego znaku w określonej linii.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-156">The zero-based index for the first character in the specified line.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.LineCount" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetCharacterIndexFromPoint">
      <MemberSignature Language="C#" Value="public int GetCharacterIndexFromPoint (System.Windows.Point point, bool snapToText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCharacterIndexFromPoint(valuetype System.Windows.Point point, bool snapToText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCharacterIndexFromPoint(System::Windows::Point point, bool snapToText);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="snapToText" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="4901b-157">Punkt w <see cref="T:System.Windows.Controls.TextBox" /> przestrzeni współrzędnych której indeksu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-157">A point in <see cref="T:System.Windows.Controls.TextBox" /> coordinate-space for which to return an index.</span>
          </span>
        </param>
        <param name="snapToText">
          <span data-ttu-id="4901b-158">
            <see langword="true" /> Aby Zwróć indeks najbliższej, jeśli w określonym punkcie; nie ma bez znaku <see langword="false" /> do Zwróć -1, jeśli w określonym punkcie nie ma bez znaku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-158">
              <see langword="true" /> to return the nearest index if there is no character at the specified point; <see langword="false" /> to return –1 if there is no character at the specified point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4901b-159">Zwraca liczony od zera indeks znaku, który jest najbardziej zbliżony do określonego punktu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-159">Returns the zero-based index of the character that is closest to the specified point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4901b-160">Indeks znaku, który jest określony punkt lub -1, jeśli nie prawidłowy indeks nie zostanie odnaleziony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-160">The index of the character that is closest to the specified point, or –1 if no valid index can be found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstVisibleLineIndex">
      <MemberSignature Language="C#" Value="public int GetFirstVisibleLineIndex ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstVisibleLineIndex() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstVisibleLineIndex () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFirstVisibleLineIndex();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4901b-161">Zwraca indeks wiersza dla pierwszego wiersza, który jest aktualnie wyświetlana w polu tekstowym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-161">Returns the line index for the first line that is currently visible in the text box.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4901b-162">Liczony od zera indeks pierwszego wiersza widoczny w polu tekstowym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-162">The zero-based index for the first visible line in the text box.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetLastVisibleLineIndex">
      <MemberSignature Language="C#" Value="public int GetLastVisibleLineIndex ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLastVisibleLineIndex() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastVisibleLineIndex () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLastVisibleLineIndex();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4901b-163">Zwraca indeks wiersza ostatni wiersz, który jest aktualnie wyświetlana w polu tekstowym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-163">Returns the line index for the last line that is currently visible in the text box.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4901b-164">Liczony od zera indeks ostatniego wiersza widoczny w polu tekstowym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-164">The zero-based index for the last visible line in the text box.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetLineIndexFromCharacterIndex">
      <MemberSignature Language="C#" Value="public int GetLineIndexFromCharacterIndex (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLineIndexFromCharacterIndex(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineIndexFromCharacterIndex (charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLineIndexFromCharacterIndex(int charIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex">
          <span data-ttu-id="4901b-165">Indeks znaków liczony od zera dla którego można pobrać indeksu skojarzonego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-165">The zero-based character index for which to retrieve the associated line index.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4901b-166">Zwraca indeks wiersza liczony od zera dla wiersza, który zawiera indeks określony znak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-166">Returns the zero-based line index for the line that contains the specified character index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4901b-167">Liczony od zera indeks dla wiersza, który zawiera indeks określony znak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-167">The zero-based index for the line that contains the specified character index.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetLineLength">
      <MemberSignature Language="C#" Value="public int GetLineLength (int lineIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLineLength(int32 lineIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetLineLength(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineLength (lineIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLineLength(int lineIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineIndex">
          <span data-ttu-id="4901b-168">Indeks wiersza liczony od zera, dla którego ma zostać zwrócona liczba znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-168">The zero-based line index for which to return a character count.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4901b-169">Zwraca liczbę znaków w określonej linii.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-169">Returns the number of characters in the specified line.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4901b-170">Liczba znaków w określonej linii.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-170">The number of characters in the specified line.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.LineCount" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetLineText">
      <MemberSignature Language="C#" Value="public string GetLineText (int lineIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetLineText(int32 lineIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetLineText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineText (lineIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetLineText(int lineIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineIndex">
          <span data-ttu-id="4901b-171">Indeks wiersza liczony od zera do których chcesz pobrać aktualnie wyświetlanego tekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-171">The zero-based line index for which to retrieve the currently displayed text.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4901b-172">Zwraca tekst, który jest aktualnie wyświetlany w określonej linii.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-172">Returns the text that is currently displayed on the specified line.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4901b-173">Ciąg zawierający kopię widoczne na określony wiersz tekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-173">A string containing a copy of the text currently visible on the specified line.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.LineCount" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetNextSpellingErrorCharacterIndex">
      <MemberSignature Language="C#" Value="public int GetNextSpellingErrorCharacterIndex (int charIndex, System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetNextSpellingErrorCharacterIndex(int32 charIndex, valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetNextSpellingErrorCharacterIndex(System.Int32,System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextSpellingErrorCharacterIndex (charIndex As Integer, direction As LogicalDirection) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetNextSpellingErrorCharacterIndex(int charIndex, System::Windows::Documents::LogicalDirection direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="charIndex">
          <span data-ttu-id="4901b-174">Indeks znaków liczony od zera, wskazującą położenie, z którego można wyszukać następny błąd pisowni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-174">The zero-based character index indicating a position from which to search for the next spelling error.</span>
          </span>
        </param>
        <param name="direction">
          <span data-ttu-id="4901b-175">Jeden z <see cref="T:System.Windows.Documents.LogicalDirection" /> wartości, które określa kierunek, w których będą poszukiwane następny błąd pisowni, rozpoczynając od określonego <c>charIndex</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-175">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the direction in which to search for the next spelling error, starting at the specified <c>charIndex</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4901b-176">Zwraca początek indeks znaków dla następnego błąd pisowni w treści pola tekstowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-176">Returns the beginning character index for the next spelling error in the contents of the text box.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4901b-177">Istnieje indeks znaków dla początku następny błąd pisowni w zawartości pola tekstowego lub -1, jeśli nie obok błąd pisowni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-177">The character index for the beginning of the next spelling error in the contents of the text box, or –1 if no next spelling error exists.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingError(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingErrorLength(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingErrorStart(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetRectFromCharacterIndex">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4901b-178">Zwraca prostokąt Edge znak pod określonym indeksem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-178">Returns the rectangle for an edge of the character at the specified index.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetRectFromCharacterIndex">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetRectFromCharacterIndex (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetRectFromCharacterIndex(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRectFromCharacterIndex (charIndex As Integer) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetRectFromCharacterIndex(int charIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex">
          <span data-ttu-id="4901b-179">Znak liczony od zera indeks znak, dla którego można pobrać prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-179">The zero-based character index of the character for which to retrieve the rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4901b-180">Zwraca prostokąt dla granicy wiodących znaków w określonym indeksie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-180">Returns the rectangle for the leading edge of the character at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4901b-181">Prostokąt dla granicy wiodące znak na pozycji indeksu określony znak lub <see cref="P:System.Windows.Rect.Empty" /> Jeśli prostokąt ograniczający nie może być określony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-181">A rectangle for the leading edge of the character at the specified character index, or <see cref="P:System.Windows.Rect.Empty" /> if a bounding rectangle cannot be determined.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4901b-182">Ponieważ ta metoda zwraca prostokąt reprezentujący krawędź znak, szerokość prostokąta to 0.</span><span class="sxs-lookup"><span data-stu-id="4901b-182">Because this method returns a rectangle that represents an edge of the character, the width of the rectangle is 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRectFromCharacterIndex">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetRectFromCharacterIndex (int charIndex, bool trailingEdge);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetRectFromCharacterIndex(int32 charIndex, bool trailingEdge) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRectFromCharacterIndex (charIndex As Integer, trailingEdge As Boolean) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetRectFromCharacterIndex(int charIndex, bool trailingEdge);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="trailingEdge" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="charIndex">
          <span data-ttu-id="4901b-183">Znak liczony od zera indeks znak, dla którego można pobrać prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-183">The zero-based character index of the character for which to retrieve the rectangle.</span>
          </span>
        </param>
        <param name="trailingEdge">
          <span data-ttu-id="4901b-184">
            <see langword="true" /> Aby uzyskać krawędzi końcowych znaków; <see langword="false" /> można pobrać krawędzi wiodących znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-184">
              <see langword="true" /> to get the trailing edge of the character; <see langword="false" /> to get the leading edge of the character.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4901b-185">Zwraca prostokąt dla wiodących lub końcowych krawędzi znak pod określonym indeksem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-185">Returns the rectangle for the leading or trailing edge of the character at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4901b-186">Prostokąt Edge znak na pozycji indeksu określony znak lub <see cref="P:System.Windows.Rect.Empty" /> Jeśli prostokąt ograniczający nie może być określony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-186">A rectangle for an edge of the character at the specified character index, or <see cref="P:System.Windows.Rect.Empty" /> if a bounding rectangle cannot be determined.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4901b-187">Ponieważ ta metoda zwraca prostokąt reprezentujący krawędź znak, szerokość prostokąta to 0.</span><span class="sxs-lookup"><span data-stu-id="4901b-187">Because this method returns a rectangle that represents an edge of the character, the width of the rectangle is 0.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4901b-188">
            <paramref name="charIndex" /> jest ujemna lub większa niż długość zawartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-188">
              <paramref name="charIndex" /> is negative or is greater than the length of the content.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSpellingError">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.SpellingError GetSpellingError (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Controls.SpellingError GetSpellingError(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetSpellingError(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpellingError (charIndex As Integer) As SpellingError" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Controls::SpellingError ^ GetSpellingError(int charIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.SpellingError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex">
          <span data-ttu-id="4901b-189">Indeks znaków liczony od zera pozycja w zawartości do poszukiwania błąd pisowni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-189">The zero-based character index of a position in content to examine for a spelling error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4901b-190">Zwraca <see cref="T:System.Windows.Controls.SpellingError" /> obiekt skojarzony z dowolnym błąd pisowni w indeksie określony znak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-190">Returns a <see cref="T:System.Windows.Controls.SpellingError" /> object associated with any spelling error at the specified character index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4901b-191">A <see cref="T:System.Windows.Controls.SpellingError" /> obiekt zawierający szczegóły znaleziono znak wskazuje błąd pisowni <paramref name="charIndex" />, lub <see langword="null" /> Jeśli błąd pisowni, nie wystąpił na określony znak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-191">A <see cref="T:System.Windows.Controls.SpellingError" /> object containing the details of the spelling error found at the character indicated by <paramref name="charIndex" />, or <see langword="null" /> if no spelling error exists at the specified character.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetNextSpellingErrorCharacterIndex(System.Int32,System.Windows.Documents.LogicalDirection)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingErrorLength(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingErrorStart(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetSpellingErrorLength">
      <MemberSignature Language="C#" Value="public int GetSpellingErrorLength (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetSpellingErrorLength(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetSpellingErrorLength(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpellingErrorLength (charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetSpellingErrorLength(int charIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex">
          <span data-ttu-id="4901b-192">Indeks znaków liczony od zera pozycja w zawartości do poszukiwania błąd pisowni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-192">The zero-based character index of a position in content to examine for a spelling error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4901b-193">Zwraca długość żadnych błąd pisowni, który zawiera określony znak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-193">Returns the length of any spelling error that includes the specified character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4901b-194">Długość żadnych błąd pisowni, która zawiera znak określony przez charIndex lub 0, jeśli określony znak nie jest częścią błąd pisowni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-194">The length of any spelling error that includes the character specified by charIndex, or 0 if the specified character is not part of a spelling error.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSpellingErrorStart">
      <MemberSignature Language="C#" Value="public int GetSpellingErrorStart (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetSpellingErrorStart(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetSpellingErrorStart(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpellingErrorStart (charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetSpellingErrorStart(int charIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex">
          <span data-ttu-id="4901b-195">Indeks znaków liczony od zera pozycja w zawartości do poszukiwania błąd pisowni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-195">The zero-based character index of a position in content to examine for a spelling error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4901b-196">Zwraca początek indeks znaków dla dowolnego błąd pisowni, która zawiera określony znak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-196">Returns the beginning character index for any spelling error that includes the specified character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4901b-197">Początkowy indeks znaków dla dowolnego błąd pisowni, która zawiera znak określony przez <paramref name="charIndex" />, lub -1, jeśli określony znak nie jest częścią błąd pisowni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-197">The beginning character index for any spelling error that includes the character specified by <paramref name="charIndex" />, or –1 if the specified character is not part of a spelling error.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineCount">
      <MemberSignature Language="C#" Value="public int LineCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.LineCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4901b-198">Pobiera całkowitą liczbę wierszy w polu tekstowym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-198">Gets the total number of lines in the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4901b-199">Całkowita liczba wierszy w polu tekstowym lub -1, jeśli nie ma informacji o układzie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-199">The total number of lines in the text box, or –1 if layout information is not available.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4901b-200">Jeśli włączono zawijania tekstu, zmiana szerokość pola tekstowego może zmienić tę wartość.</span><span class="sxs-lookup"><span data-stu-id="4901b-200">If text wrapping is enabled, changing the width of the text box may change this value.</span></span>  
  
 <span data-ttu-id="4901b-201">Wartość zwracana jest to całkowita liczba wierszy w polu tekstowym, niezależnie od tego, ile są widoczne.</span><span class="sxs-lookup"><span data-stu-id="4901b-201">The value returned is the total number of lines in the text box, regardless of how many are currently visible.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.TextWrapping" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineLength(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineText(System.Int32)" />
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLines" />
        <altmember cref="P:System.Windows.Controls.TextBox.MinLines" />
        <altmember cref="M:System.Windows.Controls.TextBox.ScrollToLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4901b-202">Pobiera moduł wyliczający dla logicznym podrzędnym elementy <see cref="T:System.Windows.Controls.TextBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-202">Gets an enumerator for the logical child elements of the <see cref="T:System.Windows.Controls.TextBox" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4901b-203">Moduł wyliczający dla elementu podrzędnego logicznej <see cref="T:System.Windows.Controls.TextBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-203">An enumerator for the logical child elements of the <see cref="T:System.Windows.Controls.TextBox" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4901b-204"><xref:System.Windows.Controls.TextBox.LogicalChildren%2A> Właściwość zwraca moduł wyliczający dla kolekcji zawierającej <xref:System.String> jest równa <xref:System.Windows.Controls.TextBox.Text%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="4901b-204">The <xref:System.Windows.Controls.TextBox.LogicalChildren%2A> property returns an enumerator for a collection that contains a <xref:System.String> that is equal to the <xref:System.Windows.Controls.TextBox.Text%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Modifiability=System.Windows.Modifiability.Unmodifiable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4901b-205">Pobiera lub ustawia maksymalną liczbę znaków, które mogą być ręcznie wprowadzone w polu tekstowym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-205">Gets or sets the maximum number of characters that can be manually entered into the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4901b-206">Maksymalna liczba znaków, które mogą być ręcznie wprowadzone w polu tekstowym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-206">The maximum number of characters that can be manually entered into the text box.</span>
          </span>
          <span data-ttu-id="4901b-207">Wartość domyślna to 0, co oznacza brak limitu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-207">The default is 0, which indicates no limit.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4901b-208">Ta właściwość służy do ograniczenia długości w tekście wprowadzanym w formancie dla wartości, takie jak kodów pocztowych i numerów telefonów.</span><span class="sxs-lookup"><span data-stu-id="4901b-208">You can use this property to restrict the length of text entered in the control for values such as postal codes and telephone numbers.</span></span> <span data-ttu-id="4901b-209">Ta właściwość umożliwia również ograniczyć długość tekstu wprowadzana, gdy dane są przechowywane w bazie danych, tak, aby tekst w formancie nie przekracza maksymalną długość odpowiednich pól w bazie danych.</span><span class="sxs-lookup"><span data-stu-id="4901b-209">You can also use this property to restrict the length of text entered when the data is to be stored in a database so that the text entered into the control does not exceed the maximum length of the corresponding field in the database.</span></span>  
  
 <span data-ttu-id="4901b-210">Ta właściwość nie ma wpływu na znaki, które są dodawane programowo.</span><span class="sxs-lookup"><span data-stu-id="4901b-210">This property does not affect characters that are added programmatically.</span></span>  
  
 <span data-ttu-id="4901b-211">Gdy ta właściwość jest ustawiona na 0, maksymalna długość tekstu, które można wpisać w formancie jest ograniczona tylko przez ilość dostępnej pamięci.</span><span class="sxs-lookup"><span data-stu-id="4901b-211">When this property is set to 0, the maximum length of the text that can be entered in the control is limited only by available memory.</span></span>  
  
<a name="dependencyPropertyInfo_MaxLength"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="4901b-212">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="4901b-212">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="4901b-213">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="4901b-213">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.MaxLengthProperty>|  
|<span data-ttu-id="4901b-214">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="4901b-214">Metadata properties set to `true`</span></span>|<span data-ttu-id="4901b-215">Brak</span><span class="sxs-lookup"><span data-stu-id="4901b-215">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="4901b-216">Poniższy przykład przedstawia sposób tworzenia <xref:System.Windows.Controls.TextBox> z <xref:System.Windows.Controls.TextBox.MaxLength%2A> 500 znaków.</span><span class="sxs-lookup"><span data-stu-id="4901b-216">The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBox.MaxLength%2A> of 500 characters.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/textboxexample.xaml#textboxexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/TextBoxExample.cs#textboxcodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/textboxexample.vb#textboxcodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLines" />
      </Docs>
    </Member>
    <Member MemberName="MaxLengthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MaxLengthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MaxLengthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.MaxLengthProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxLengthProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MaxLengthProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4901b-217">Identyfikuje <see cref="P:System.Windows.Controls.TextBox.MaxLength" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-217">Identifies the <see cref="P:System.Windows.Controls.TextBox.MaxLength" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLines">
      <MemberSignature Language="C#" Value="public int MaxLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.MaxLines" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLines As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLines { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(2147483647)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4901b-218">Pobiera lub ustawia maksymalną liczbę widocznych linii.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-218">Gets or sets the maximum number of visible lines.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4901b-219">Maksymalna liczba widocznych linii.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-219">The maximum number of visible lines.</span>
          </span>
          <span data-ttu-id="4901b-220">Wartość domyślna to <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-220">The default is <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4901b-221">Pobieranie ta właściwość zwraca bieżącą wartość <xref:System.Windows.Controls.TextBox.MaxLines%2A>.</span><span class="sxs-lookup"><span data-stu-id="4901b-221">Getting this property returns the current value of <xref:System.Windows.Controls.TextBox.MaxLines%2A>.</span></span> <span data-ttu-id="4901b-222">Ustawienie tej właściwości powoduje, że pole tekstowe, aby zmienić rozmiar Jeśli liczbę widocznych linii przekracza limit określony przez <xref:System.Windows.Controls.TextBox.MaxLines%2A>.</span><span class="sxs-lookup"><span data-stu-id="4901b-222">Setting this property causes the text box to resize if the number of visible lines exceeds the limit specified by <xref:System.Windows.Controls.TextBox.MaxLines%2A>.</span></span>  
  
 <span data-ttu-id="4901b-223">Ta właściwość ma zastosowanie tylko do widocznych linii i ograniczają rzeczywistą liczbę wierszy.</span><span class="sxs-lookup"><span data-stu-id="4901b-223">This property applies only to visible lines, and does not constrain the actual number of lines.</span></span> <span data-ttu-id="4901b-224">W zależności od konfiguracji pola tekstowego może zawierać dodatkowe wiersze niewidoczne, które są dostępne za pomocą przewijania.</span><span class="sxs-lookup"><span data-stu-id="4901b-224">Depending on its configuration, a text box may contain additional non-visible lines that are accessible by scrolling.</span></span>  
  
 <span data-ttu-id="4901b-225">Jeśli <xref:System.Windows.FrameworkElement.Height%2A> właściwość jest jawnie ustawiona na <xref:System.Windows.Controls.TextBox>, <xref:System.Windows.Controls.TextBox.MaxLines%2A> i <xref:System.Windows.Controls.TextBox.MinLines%2A> wartości właściwości są ignorowane.</span><span class="sxs-lookup"><span data-stu-id="4901b-225">If the <xref:System.Windows.FrameworkElement.Height%2A> property is explicitly set on a <xref:System.Windows.Controls.TextBox>, the <xref:System.Windows.Controls.TextBox.MaxLines%2A> and <xref:System.Windows.Controls.TextBox.MinLines%2A> property values are ignored.</span></span>  
  
<a name="dependencyPropertyInfo_MaxLines"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="4901b-226">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="4901b-226">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="4901b-227">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="4901b-227">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.MaxLinesProperty>|  
|<span data-ttu-id="4901b-228">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="4901b-228">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="4901b-229">Poniższy przykład przedstawia sposób tworzenia <xref:System.Windows.Controls.TextBox> z <xref:System.Windows.Controls.TextBox.MaxLines%2A> wartość 5.</span><span class="sxs-lookup"><span data-stu-id="4901b-229">The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBox.MaxLines%2A> value of 5.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/textboxexample.xaml#textboxexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/TextBoxExample.cs#textboxcodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/textboxexample.vb#textboxcodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="4901b-230">
            <see cref="P:System.Windows.Controls.TextBox.MaxLines" /> jest mniejsza niż <see cref="P:System.Windows.Controls.TextBox.MinLines" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-230">
              <see cref="P:System.Windows.Controls.TextBox.MaxLines" /> is less than <see cref="P:System.Windows.Controls.TextBox.MinLines" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Controls.TextBox.MinLines" />
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLength" />
      </Docs>
    </Member>
    <Member MemberName="MaxLinesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MaxLinesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MaxLinesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.MaxLinesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxLinesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MaxLinesProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4901b-231">Identyfikuje <see cref="P:System.Windows.Controls.TextBox.MaxLines" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-231">Identifies the <see cref="P:System.Windows.Controls.TextBox.MaxLines" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (constraint As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size constraint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="constraint">
          <span data-ttu-id="4901b-232">A <see cref="T:System.Windows.Size" /> strukturę, która określa ograniczenia dotyczące rozmiaru pola tekstowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-232">A <see cref="T:System.Windows.Size" /> structure that specifies the constraints on the size of the text box.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4901b-233">Ustawia rozmiar pola tekstowego do jego zawartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-233">Sizes the text box to its content.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4901b-234">A <see cref="T:System.Windows.Size" /> struktury wskazującą nowy rozmiar pola tekstowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-234">A <see cref="T:System.Windows.Size" /> structure indicating the new size of the text box.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4901b-235">Zastępuje tę metodę do zaimplementowania zachowanie niestandardowe ustawienia.</span><span class="sxs-lookup"><span data-stu-id="4901b-235">Override this method to implement custom sizing behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinLines">
      <MemberSignature Language="C#" Value="public int MinLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.MinLines" />
      <MemberSignature Language="VB.NET" Value="Public Property MinLines As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinLines { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4901b-236">Pobiera lub Ustawia minimalną liczbę widocznych linii.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-236">Gets or sets the minimum number of visible lines.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4901b-237">Minimalną liczbę widocznych linii.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-237">The minimum number of visible lines.</span>
          </span>
          <span data-ttu-id="4901b-238">Domyślnym ustawieniem jest 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-238">The default is 1.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4901b-239">Pobieranie ta właściwość zwraca bieżącą wartość <xref:System.Windows.Controls.TextBox.MinLines%2A>.</span><span class="sxs-lookup"><span data-stu-id="4901b-239">Getting this property returns the current value of <xref:System.Windows.Controls.TextBox.MinLines%2A>.</span></span> <span data-ttu-id="4901b-240">Ustawienie tej właściwości powoduje, że pole tekstowe, aby zmienić rozmiar Jeśli liczbę widocznych linii jest mniejsza niż wartość określoną przez <xref:System.Windows.Controls.TextBox.MinLines%2A>.</span><span class="sxs-lookup"><span data-stu-id="4901b-240">Setting this property causes the text box to resize if the number of visible lines is less than value specified by <xref:System.Windows.Controls.TextBox.MinLines%2A>.</span></span>  
  
 <span data-ttu-id="4901b-241">Jeśli <xref:System.Windows.FrameworkElement.Height%2A> właściwość jest jawnie ustawiona na <xref:System.Windows.Controls.TextBox>, <xref:System.Windows.Controls.TextBox.MaxLines%2A> i <xref:System.Windows.Controls.TextBox.MinLines%2A> wartości właściwości są ignorowane.</span><span class="sxs-lookup"><span data-stu-id="4901b-241">If the <xref:System.Windows.FrameworkElement.Height%2A> property is explicitly set on a <xref:System.Windows.Controls.TextBox>, the <xref:System.Windows.Controls.TextBox.MaxLines%2A> and <xref:System.Windows.Controls.TextBox.MinLines%2A> property values are ignored.</span></span>  
  
<a name="dependencyPropertyInfo_MinLines"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="4901b-242">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="4901b-242">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="4901b-243">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="4901b-243">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.MinLinesProperty>|  
|<span data-ttu-id="4901b-244">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="4901b-244">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="4901b-245">Poniższy przykład przedstawia sposób tworzenia <xref:System.Windows.Controls.TextBox> z <xref:System.Windows.Controls.TextBox.MinLines%2A> wartość 1.</span><span class="sxs-lookup"><span data-stu-id="4901b-245">The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBox.MinLines%2A> value of 1.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/textboxexample.xaml#textboxexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/TextBoxExample.cs#textboxcodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/textboxexample.vb#textboxcodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="4901b-246">
            <see cref="P:System.Windows.Controls.TextBox.MinLines" /> jest większa niż <see cref="P:System.Windows.Controls.TextBox.MaxLines" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-246">
              <see cref="P:System.Windows.Controls.TextBox.MinLines" /> is greater than <see cref="P:System.Windows.Controls.TextBox.MaxLines" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLines" />
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLength" />
      </Docs>
    </Member>
    <Member MemberName="MinLinesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MinLinesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MinLinesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.MinLinesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinLinesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MinLinesProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4901b-247">Identyfikuje <see cref="P:System.Windows.Controls.TextBox.MinLines" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-247">Identifies the <see cref="P:System.Windows.Controls.TextBox.MinLines" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4901b-248">Tworzy i zwraca <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> obiektu dla pola tekstowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-248">Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for the text box.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4901b-249">
            <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> Obiektu dla pola tekstowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-249">An <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for the text box.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4901b-250">Ta metoda zastępuje <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4901b-250">This method overrides <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPropertyChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPropertyChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPropertyChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4901b-251">Argumenty dla skojarzonego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-251">Arguments for the associated event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4901b-252">Wywoływane, gdy przynajmniej jednej z właściwości zależności, które istnieją w elemencie miały ich wprowadzenia wartości zmienione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-252">Called when one or more of the dependency properties that exist on the element have had their effective values changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4901b-253">Ta metoda zastępuje <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4901b-253">This method overrides <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyPropertyChangedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToLine">
      <MemberSignature Language="C#" Value="public void ScrollToLine (int lineIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToLine(int32 lineIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.ScrollToLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToLine (lineIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToLine(int lineIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineIndex">
          <span data-ttu-id="4901b-254">Wiersza liczony od zera indeks wiersza do przewijania w widoku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-254">The zero-based line index of the line to scroll into view.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4901b-255">Przewija wiersz w indeksie określonego wiersza w widoku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-255">Scrolls the line at the specified line index into view.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4901b-256">Ta metoda powoduje, że pole tekstowe, aby przewijać przez absolutnie niezbędne do zapewnienia pełnego przeglądu określonego wiersza.</span><span class="sxs-lookup"><span data-stu-id="4901b-256">This method causes the text box to scroll by the minimum amount necessary to bring the specified line into full view.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
        <altmember cref="P:System.Windows.Controls.TextBox.LineCount" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (start As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(int start, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">
          <span data-ttu-id="4901b-257">Znak liczony od zera indeks pierwszego znaku w zaznaczeniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-257">The zero-based character index of the first character in the selection.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="4901b-258">Długość zaznaczenia, w znakach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-258">The length of the selection, in characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4901b-259">Wybiera zakres tekstu w polu tekstowym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-259">Selects a range of text in the text box.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4901b-260">
            <paramref name="start" /> lub <paramref name="length" /> jest ujemna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-260">
              <paramref name="start" /> or <paramref name="length" /> is negative.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Controls.TextBox.SelectedText" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionLength" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectedText">
      <MemberSignature Language="C#" Value="public string SelectedText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.SelectedText" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4901b-261">Pobiera lub ustawia zawartość bieżące zaznaczenie w polu tekstowym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-261">Gets or sets the content of the current selection in the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4901b-262">Aktualnie zaznaczonego tekstu w polu tekstowym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-262">The currently selected text in the text box.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4901b-263">Pobieranie ta właściwość zwraca ciąg kopię aktualnie zaznaczonego tekstu.</span><span class="sxs-lookup"><span data-stu-id="4901b-263">Getting this property returns a string copy of the currently selected text.</span></span> <span data-ttu-id="4901b-264">Ustawienie tej właściwości Zamienia bieżące zaznaczenie określonego ciągu.</span><span class="sxs-lookup"><span data-stu-id="4901b-264">Setting this property replaces the current selection with the specified string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionLength" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectionLength">
      <MemberSignature Language="C#" Value="public int SelectionLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.SelectionLength" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4901b-265">Pobiera lub ustawia wartość wskazującą liczbę znaków w bieżącym zaznaczeniu w polu tekstowym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-265">Gets or sets a value indicating the number of characters in the current selection in the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4901b-266">Liczba znaków w bieżącym zaznaczeniu w polu tekstowym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-266">The number of characters in the current selection in the text box.</span>
          </span>
          <span data-ttu-id="4901b-267">Wartość domyślna to 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-267">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4901b-268">Pobieranie ta właściwość zwraca liczbę znaków w bieżącym zaznaczeniu.</span><span class="sxs-lookup"><span data-stu-id="4901b-268">Getting this property returns the number of characters in the current selection.</span></span> <span data-ttu-id="4901b-269">Ustawienie tej właściwości można dostosować długość bieżącego zaznaczenia z podaną wartością utrzymywanie początku zaznaczenia stałej.</span><span class="sxs-lookup"><span data-stu-id="4901b-269">Setting this property adjusts the length of the current selection to the specified value, keeping the beginning of the selection fixed.</span></span>  
  
 <span data-ttu-id="4901b-270">Ogólnie rzecz biorąc, gdy długość określonego zaznaczenia powoduje, że wybór do końca w nieprawidłowej pozycji (na przykład między powrotu karetki i znak nowego wiersza lub wewnątrz tagu), długość zaznaczenia, automatycznie dostosowuje tak, aby wynikowych zaznaczenie zaczyna się od i zakończenia prawidłowe pozycji.</span><span class="sxs-lookup"><span data-stu-id="4901b-270">In general, when the specified selection length causes the selection to end in an invalid position (for example, between a carriage return and a new-line character, or inside a tag), the selection length automatically adjusts so that the resulting selection starts and ends in valid positions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4901b-271">
            <see cref="P:System.Windows.Controls.TextBox.SelectionLength" /> ma ustawioną wartość ujemną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-271">
              <see cref="P:System.Windows.Controls.TextBox.SelectionLength" /> is set to a negative value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectedText" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectionStart">
      <MemberSignature Language="C#" Value="public int SelectionStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.SelectionStart" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionStart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionStart { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4901b-272">Pobiera lub ustawia indeks znaków dla początku bieżącego zaznaczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-272">Gets or sets a character index for the beginning of the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4901b-273">Indeks znaków dla początku bieżącego zaznaczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-273">The character index for the beginning of the current selection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4901b-274">W przypadkach, gdy długość określonego zaznaczenia spowoduje zaznaczenie, aby zakończyć między powrotu karetki i znak nowego wiersza długość wyboru automatycznie zwiększa się o 1, aby wynikowych zaznaczenie obejmuje całą znacznika końca wiersza.</span><span class="sxs-lookup"><span data-stu-id="4901b-274">In cases where the specified selection length would cause the selection to end between a carriage return and a new-line character, the selection length is automatically increased by 1 so that the resulting selection spans the entire end-of-line marker.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4901b-275">
            <see cref="P:System.Windows.Controls.TextBox.SelectionStart" /> ma ustawioną wartość ujemną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-275">
              <see cref="P:System.Windows.Controls.TextBox.SelectionStart" /> is set to a negative value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectedText" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionLength" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeText">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeText (System.Windows.Markup.XamlDesignerSerializationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeText(class System.Windows.Markup.XamlDesignerSerializationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.ShouldSerializeText(System.Windows.Markup.XamlDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeText (manager As XamlDesignerSerializationManager) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeText(System::Windows::Markup::XamlDesignerSerializationManager ^ manager);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.Windows.Markup.XamlDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="4901b-276">Obiekt Menedżera usługi serializacji dla tego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-276">A serialization service manager object for this object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4901b-277">Zwraca wartość wskazującą, czy wartość <see cref="P:System.Windows.Controls.TextBox.Text" /> właściwości powinny być serializowane podczas serializacji <see cref="T:System.Windows.Controls.TextBox" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-277">Returns a value that indicates whether the effective value of the <see cref="P:System.Windows.Controls.TextBox.Text" /> property should be serialized during serialization of the <see cref="T:System.Windows.Controls.TextBox" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4901b-278">
            <see langword="true" /> Jeśli <see cref="P:System.Windows.Controls.TextBox.Text" /> właściwość powinna być serializowane; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-278">
              <see langword="true" /> if the <see cref="P:System.Windows.Controls.TextBox.Text" /> property should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="4901b-279">
            <paramref name="manager" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-279">
              <paramref name="manager" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4901b-280">Obiekt do dodania jako element podrzędny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-280">An object to add as a child.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4901b-281">Zgłasza wyjątek we wszystkich przypadkach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-281">Throws an exception in all cases.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4901b-282"><xref:System.Windows.Controls.TextBox> akceptuje tylko tekst za pomocą <xref:System.Windows.Markup.IAddChild> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="4901b-282"><xref:System.Windows.Controls.TextBox> accepts only text through the <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4901b-283">
            <paramref name="value" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-283">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4901b-284">we wszystkich innych przypadkach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-284">In all other cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="4901b-285">Ciąg do dodania do obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-285">A string to add to the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4901b-286">Dodaje tekst węzła do obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-286">Adds the text content of a node to the object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4901b-287">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="4901b-287">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4901b-288">Można go używać tylko wtedy, gdy <xref:System.Windows.Controls.TextBox> wystąpienia jest rzutowane na <xref:System.Windows.Markup.IAddChild> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="4901b-288">It can be used only when the <xref:System.Windows.Controls.TextBox> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Text)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4901b-289">Pobiera lub ustawia zawartość tekstową pola tekstowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-289">Gets or sets the text contents of the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4901b-290">Ciąg zawierający zawartość tekstową pola tekstowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-290">A string containing the text contents of the text box.</span>
          </span>
          <span data-ttu-id="4901b-291">Wartością domyślną jest ciąg pusty ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-291">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4901b-292">Pobieranie ta właściwość zwraca ciąg kopię zawartości pola tekstowego.</span><span class="sxs-lookup"><span data-stu-id="4901b-292">Getting this property returns a string copy of the contents of the text box.</span></span> <span data-ttu-id="4901b-293">Ustawienie tej właściwości zastępuje zawartość pola tekstowego z określonego ciągu.</span><span class="sxs-lookup"><span data-stu-id="4901b-293">Setting this property replaces the contents of the text box with the specified string.</span></span>  
  
 <span data-ttu-id="4901b-294">Ta właściwość nie obsługuje animacji.</span><span class="sxs-lookup"><span data-stu-id="4901b-294">This property does not support animation.</span></span>  
  
 <span data-ttu-id="4901b-295">Gdy jest używany w scenariuszach wiązania danych, ta właściwość używa domyślnego zachowania aktualizacji <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4901b-295">When used in data-binding scenarios, this property uses the default update behavior of <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus?displayProperty=nameWithType>.</span></span>  
  
<a name="xamlPropertyElementUsage_Text"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="4901b-296">Użycie elementu właściwości języka XAML</span><span class="sxs-lookup"><span data-stu-id="4901b-296">XAML Property Element Usage</span></span>  
  
```  
<object>  
  String  
</object>  
```  
  
<a name="dependencyPropertyInfo_Text"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="4901b-297">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="4901b-297">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="4901b-298">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="4901b-298">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.TextProperty>|  
|<span data-ttu-id="4901b-299">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="4901b-299">Metadata properties set to `true`</span></span>|<span data-ttu-id="4901b-300"><xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A></span><span class="sxs-lookup"><span data-stu-id="4901b-300"><xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A></span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.CharacterCasing" />
        <altmember cref="P:System.Windows.Controls.TextBox.TextAlignment" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.TextAlignment TextAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextAlignment TextAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.TextAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlignment As TextAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextAlignment TextAlignment { System::Windows::TextAlignment get(); void set(System::Windows::TextAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4901b-301">Pobiera lub Ustawia wyrównanie poziome zawartości pola tekstowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-301">Gets or sets the horizontal alignment of the contents of the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4901b-302">Jeden z <see cref="T:System.Windows.TextAlignment" /> wartości, które określa wyrównanie poziome zawartości pola tekstowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-302">One of the <see cref="T:System.Windows.TextAlignment" /> values that specifies the horizontal alignment of the contents of the text box.</span>
          </span>
          <span data-ttu-id="4901b-303">Wartość domyślna to <see cref="F:System.Windows.TextAlignment.Left" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-303">The default is <see cref="F:System.Windows.TextAlignment.Left" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4901b-304">Pobieranie ta właściwość zwraca bieżącego wyrównania.</span><span class="sxs-lookup"><span data-stu-id="4901b-304">Getting this property returns the current alignment.</span></span> <span data-ttu-id="4901b-305">Ustawienie tej właściwości można dostosować zawartość pola tekstowego, aby odzwierciedlić określone wyrównanie.</span><span class="sxs-lookup"><span data-stu-id="4901b-305">Setting this property adjusts the contents of the text box to reflect the specified alignment.</span></span>  
  
 <span data-ttu-id="4901b-306">Ta właściwość ma wyższy priorytet niż <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="4901b-306">This property has a higher precedence than the <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> property.</span></span>  
  
<a name="dependencyPropertyInfo_TextAlignment"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="4901b-307">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="4901b-307">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="4901b-308">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="4901b-308">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.TextAlignmentProperty>|  
|<span data-ttu-id="4901b-309">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="4901b-309">Metadata properties set to `true`</span></span>|<span data-ttu-id="4901b-310"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span><span class="sxs-lookup"><span data-stu-id="4901b-310"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="4901b-311">Poniższy przykład przedstawia sposób tworzenia <xref:System.Windows.Controls.TextBox> z <xref:System.Windows.Controls.TextBox.TextAlignment%2A> z <xref:System.Windows.TextAlignment.Center?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4901b-311">The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBox.TextAlignment%2A> of <xref:System.Windows.TextAlignment.Center?displayProperty=nameWithType>.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/textboxexample.xaml#textboxexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/TextBoxExample.cs#textboxcodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/textboxexample.vb#textboxcodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.Text" />
        <altmember cref="P:System.Windows.Controls.TextBox.CharacterCasing" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignmentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextAlignmentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextAlignmentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.TextAlignmentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextAlignmentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextAlignmentProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4901b-312">Identyfikuje <see cref="P:System.Windows.Controls.TextBox.TextAlignment" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-312">Identifies the <see cref="P:System.Windows.Controls.TextBox.TextAlignment" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextDecorations">
      <MemberSignature Language="C#" Value="public System.Windows.TextDecorationCollection TextDecorations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.TextDecorationCollection TextDecorations" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.TextDecorations" />
      <MemberSignature Language="VB.NET" Value="Public Property TextDecorations As TextDecorationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextDecorationCollection ^ TextDecorations { System::Windows::TextDecorationCollection ^ get(); void set(System::Windows::TextDecorationCollection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextDecorationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4901b-313">Pobiera dekoracji tekstu do zastosowania do pola tekstowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-313">Gets the text decorations to apply to the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4901b-314">A <see cref="T:System.Windows.TextDecorationCollection" /> kolekcji zawierającej dekoracji tekstu do zastosowania do pola tekstowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-314">A <see cref="T:System.Windows.TextDecorationCollection" /> collection that contains text decorations to apply to the text box.</span>
          </span>
          <span data-ttu-id="4901b-315">Wartość domyślna to <see langword="null" /> (nie tekstu dekoracje stosowane).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-315">The default is <see langword="null" /> (no text decorations applied).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4901b-316">A <xref:System.Windows.TextDecoration> obiekt jest visual ornamentacji, można dodać do tekstu.</span><span class="sxs-lookup"><span data-stu-id="4901b-316">A <xref:System.Windows.TextDecoration> object is a visual ornamentation you can add to text.</span></span> <span data-ttu-id="4901b-317">Istnieją cztery typy dekoracji tekstu: podkreślenia, linii bazowej, przekreślenia i nadkreślenia.</span><span class="sxs-lookup"><span data-stu-id="4901b-317">There are four types of text decorations: underline, baseline, strikethrough, and overline.</span></span> <span data-ttu-id="4901b-318">Aby uzyskać więcej informacji na temat dekoracji tekstu, zobacz [porady: tworzenie dekoracji tekstu](~/docs/framework/wpf/advanced/how-to-create-a-text-decoration.md).</span><span class="sxs-lookup"><span data-stu-id="4901b-318">For more information about text decorations, see [How to: Create a Text Decoration](~/docs/framework/wpf/advanced/how-to-create-a-text-decoration.md).</span></span>  
  
<a name="dependencyPropertyInfo_TextDecorations"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="4901b-319">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="4901b-319">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="4901b-320">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="4901b-320">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.TextDecorationsProperty>|  
|<span data-ttu-id="4901b-321">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="4901b-321">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="4901b-322">Poniższy przykład przedstawia sposób ustawiania <xref:System.Windows.Documents.Inline.TextDecorations%2A> atrybutu przy użyciu <xref:System.Windows.Documents.Run> jako element przykład.</span><span class="sxs-lookup"><span data-stu-id="4901b-322">The following example shows how to set the <xref:System.Windows.Documents.Inline.TextDecorations%2A> attribute, using <xref:System.Windows.Documents.Run> as the example element.</span></span>  
  
 [!code-xaml[InlineSnippets#_Inline_TextDecXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/InlineSnippets/CSharp/Window1.xaml#_inline_textdecxaml)]  
  
 <span data-ttu-id="4901b-323">Na poniższej ilustracji przedstawiono sposób renderowania w tym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="4901b-323">The following figure shows how this example renders.</span></span>  
  
 <span data-ttu-id="4901b-324">![Zrzut ekranu: Tekst z efektem przekreślenia domyślne](~/add/media/inline-textdec-strike.png "zrzut ekranu: tekst z efektem przekreślenia domyślne")</span><span class="sxs-lookup"><span data-stu-id="4901b-324">![Screenshot: Text with default strikethrough effect](~/add/media/inline-textdec-strike.png "Screenshot: Text with default strikethrough effect")</span></span>  
  
 <span data-ttu-id="4901b-325">Pokaż danych liczbowych następujące jak <xref:System.Windows.TextDecorations.OverLine%2A>, <xref:System.Windows.TextDecorations.Baseline%2A>, i <xref:System.Windows.TextDecorations.Underline%2A> odpowiednio dekoracje renderowania.</span><span class="sxs-lookup"><span data-stu-id="4901b-325">The following figures show how the <xref:System.Windows.TextDecorations.OverLine%2A>, <xref:System.Windows.TextDecorations.Baseline%2A>, and <xref:System.Windows.TextDecorations.Underline%2A> decorations render, respectively.</span></span>  
  
 <span data-ttu-id="4901b-326">![Zrzut ekranu: Nadkreślenie TextDecorator](~/add/media/inline-textdec-over.png "zrzut ekranu: nadkreślenie TextDecorator")</span><span class="sxs-lookup"><span data-stu-id="4901b-326">![Screenshot: Overline TextDecorator](~/add/media/inline-textdec-over.png "Screenshot: Overline TextDecorator")</span></span>  
  
 <span data-ttu-id="4901b-327">![Zrzut ekranu: Domyślna efekt linii bazowej w tekście](~/add/media/inline-textdec-base.png "zrzut ekranu: domyślna efekt linii bazowej w tekście")</span><span class="sxs-lookup"><span data-stu-id="4901b-327">![Screenshot: Default baseline effect on text](~/add/media/inline-textdec-base.png "Screenshot: Default baseline effect on text")</span></span>  
  
 <span data-ttu-id="4901b-328">![Zrzut ekranu: Tekst z domyślnym efektem podkreślenia](~/add/media/inline-textdec-under.png "zrzut ekranu: tekst z domyślnym efektem podkreślenia")</span><span class="sxs-lookup"><span data-stu-id="4901b-328">![Screenshot: Text with default underline effect](~/add/media/inline-textdec-under.png "Screenshot: Text with default underline effect")</span></span>  
  
 <span data-ttu-id="4901b-329">Poniższy przykład przedstawia sposób ustawiania <xref:System.Windows.Documents.Inline.TextDecorations%2A> właściwości programowo.</span><span class="sxs-lookup"><span data-stu-id="4901b-329">The following example shows how to set the <xref:System.Windows.Documents.Inline.TextDecorations%2A> property programmatically.</span></span>  
  
 [!code-csharp[InlineSnippets#_Inline_TextDec](~/samples/snippets/csharp/VS_Snippets_Wpf/InlineSnippets/CSharp/Window1.xaml.cs#_inline_textdec)]
 [!code-vb[InlineSnippets#_Inline_TextDec](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InlineSnippets/visualbasic/window1.xaml.vb#_inline_textdec)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextDecorationsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextDecorationsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextDecorationsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.TextDecorationsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextDecorationsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextDecorationsProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4901b-330">Identyfikuje <see cref="P:System.Windows.Controls.TextBox.TextDecorations" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-330">Identifies the <see cref="P:System.Windows.Controls.TextBox.TextDecorations" /> dependency property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4901b-331">Identyfikator <xref:System.Windows.Controls.TextBox.TextDecorations%2A> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="4901b-331">The identifier for the <xref:System.Windows.Controls.TextBox.TextDecorations%2A> dependency property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.TextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4901b-332">Identyfikuje <see cref="P:System.Windows.Controls.TextBox.Text" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-332">Identifies the <see cref="P:System.Windows.Controls.TextBox.Text" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextWrapping">
      <MemberSignature Language="C#" Value="public System.Windows.TextWrapping TextWrapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextWrapping TextWrapping" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.TextWrapping" />
      <MemberSignature Language="VB.NET" Value="Public Property TextWrapping As TextWrapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextWrapping TextWrapping { System::Windows::TextWrapping get(); void set(System::Windows::TextWrapping value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextWrapping</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4901b-333">Pobiera lub ustawia sposób zawijania tekstu w polu tekstowym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-333">Gets or sets how the text box should wrap text.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4901b-334">Jeden z <see cref="T:System.Windows.TextWrapping" /> wartości, które wskazuje sposób zawijania tekstu w polu tekstowym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-334">One of the <see cref="T:System.Windows.TextWrapping" /> values that indicates how the text box should wrap text.</span>
          </span>
          <span data-ttu-id="4901b-335">Wartość domyślna to <see cref="F:System.Windows.TextWrapping.NoWrap" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-335">The default is <see cref="F:System.Windows.TextWrapping.NoWrap" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4901b-336">Ustawienie <xref:System.Windows.Controls.TextBox.TextWrapping%2A> atrybutu <xref:System.Windows.TextWrapping.Wrap> powoduje, że wprowadzony tekst, który ma być zawijany do nowego wiersza w przypadku krawędzi <xref:System.Windows.Controls.TextBox> osiągnięciu kontroli automatyczne rozszerzanie wysokość <xref:System.Windows.Controls.TextBox> formantu, aby w razie potrzeby Dołącz miejsca, aby utworzyć nowy wiersz.</span><span class="sxs-lookup"><span data-stu-id="4901b-336">Setting the <xref:System.Windows.Controls.TextBox.TextWrapping%2A> attribute to <xref:System.Windows.TextWrapping.Wrap> causes entered text to wrap to a new line when the edge of the <xref:System.Windows.Controls.TextBox> control is reached, automatically expanding the height of the <xref:System.Windows.Controls.TextBox> control to include room for a new line, if necessary.</span></span>  
  
<a name="dependencyPropertyInfo_TextWrapping"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="4901b-337">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="4901b-337">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="4901b-338">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="4901b-338">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.TextWrappingProperty>|  
|<span data-ttu-id="4901b-339">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="4901b-339">Metadata properties set to `true`</span></span>|<span data-ttu-id="4901b-340"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A></span><span class="sxs-lookup"><span data-stu-id="4901b-340"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="4901b-341">W poniższym przykładzie pokazano, jak ustawić wartość tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="4901b-341">The following example demonstrates how to set the value of this property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase12](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase12)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextWrappingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextWrappingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextWrappingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.TextWrappingProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextWrappingProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextWrappingProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4901b-342">Identyfikuje <see cref="P:System.Windows.Controls.TextBox.TextWrapping" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-342">Identifies the <see cref="P:System.Windows.Controls.TextBox.TextWrapping" /> dependency property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4901b-343">Identyfikator <xref:System.Windows.Controls.TextBox.TextWrapping%2A> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="4901b-343">The identifier for the <xref:System.Windows.Controls.TextBox.TextWrapping%2A> dependency property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Typography">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.Typography Typography { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.Typography Typography" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.Typography" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Typography As Typography" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::Typography ^ Typography { System::Windows::Documents::Typography ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Typography</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4901b-344">Pobiera obecnie skuteczne typografii odmiany zawartość tekstową pola tekstowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-344">Gets the currently effective typography variations for the text contents of the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4901b-345">A <see cref="T:System.Windows.Documents.Typography" /> obiekt, który określa typografii obecnie wprowadzenia zmian.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-345">A <see cref="T:System.Windows.Documents.Typography" /> object that specifies the currently effective typography variations.</span>
          </span>
          <span data-ttu-id="4901b-346">Listę wartości domyślne typografii, zobacz <see cref="T:System.Windows.Documents.Typography" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4901b-346">For a list of default typography values, see <see cref="T:System.Windows.Documents.Typography" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4901b-347"><xref:System.Windows.Documents.FlowDocument.Typography%2A> Właściwość ma zastosowanie tylko do [!INCLUDE[TLA#tla_opentype](~/includes/tlasharptla-opentype-md.md)] czcionki.</span><span class="sxs-lookup"><span data-stu-id="4901b-347">The <xref:System.Windows.Documents.FlowDocument.Typography%2A> property is applicable only to [!INCLUDE[TLA#tla_opentype](~/includes/tlasharptla-opentype-md.md)] fonts.</span></span> <span data-ttu-id="4901b-348">Wariant typografii nie ma wpływu na czcionek, które nie obsługują variant.</span><span class="sxs-lookup"><span data-stu-id="4901b-348">A typography variant has no effect on fonts that do not support the variant.</span></span> <span data-ttu-id="4901b-349">Aby uzyskać więcej informacji na ten temat, zobacz [typografii na platformie WPF](~/docs/framework/wpf/advanced/typography-in-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="4901b-349">For more information about this topic, see [Typography in WPF](~/docs/framework/wpf/advanced/typography-in-wpf.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4901b-350">Poniższy przykład przedstawia sposób ustawiania <xref:System.Windows.Documents.TextElement.Typography%2A> atrybutu przy użyciu <xref:System.Windows.Documents.Paragraph> jako element przykład.</span><span class="sxs-lookup"><span data-stu-id="4901b-350">The following example shows how to set the <xref:System.Windows.Documents.TextElement.Typography%2A> attribute, using <xref:System.Windows.Documents.Paragraph> as the example element.</span></span>  
  
 [!code-xaml[TextElementSnippets#_TextElement_TypogXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/TextElementSnippets/CSharp/Window1.xaml#_textelement_typogxaml)]  
  
 <span data-ttu-id="4901b-351">Na poniższej ilustracji przedstawiono sposób renderowania w tym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="4901b-351">The following figure shows how this example renders.</span></span>  
  
 <span data-ttu-id="4901b-352">![Zrzut ekranu: Tekst z zmieniony typografii](~/add/media/textelement-typog.png "zrzut ekranu: tekst z typografii zmieniony")</span><span class="sxs-lookup"><span data-stu-id="4901b-352">![Screenshot: Text with altered typography](~/add/media/textelement-typog.png "Screenshot: Text with altered typography")</span></span>  
  
 <span data-ttu-id="4901b-353">Z kolei na poniższej ilustracji przedstawiono, jak renderuje podobny przykład związane z typografią właściwości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="4901b-353">In contrast, the following figure shows how a similar example with default typographic properties renders.</span></span>  
  
 <span data-ttu-id="4901b-354">![Zrzut ekranu: Tekst z zmieniony typografii](~/add/media/textelement-typog-default.png "zrzut ekranu: tekst z typografii zmieniony")</span><span class="sxs-lookup"><span data-stu-id="4901b-354">![Screenshot: Text with altered typography](~/add/media/textelement-typog-default.png "Screenshot: Text with altered typography")</span></span>  
  
 <span data-ttu-id="4901b-355">Poniższy przykład przedstawia sposób ustawiania <xref:System.Windows.Controls.TextBox.Typography%2A> właściwości programowo.</span><span class="sxs-lookup"><span data-stu-id="4901b-355">The following example shows how to set the <xref:System.Windows.Controls.TextBox.Typography%2A> property programmatically.</span></span>  
  
 [!code-csharp[TextElementSnippets#_TextElement_Typog](~/samples/snippets/csharp/VS_Snippets_Wpf/TextElementSnippets/CSharp/Window1.xaml.cs#_textelement_typog)]
 [!code-vb[TextElementSnippets#_TextElement_Typog](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextElementSnippets/visualbasic/window1.xaml.vb#_textelement_typog)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>