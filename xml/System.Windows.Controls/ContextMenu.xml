<Type Name="ContextMenu" FullName="System.Windows.Controls.ContextMenu">
  <Metadata><Meta Name="ms.openlocfilehash" Value="59b268bf4509c35bd27bb80910866692e00917fb" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69217406" /></Metadata><TypeSignature Language="C#" Value="public class ContextMenu : System.Windows.Controls.Primitives.MenuBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ContextMenu extends System.Windows.Controls.Primitives.MenuBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ContextMenu" />
  <TypeSignature Language="VB.NET" Value="Public Class ContextMenu&#xA;Inherits MenuBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContextMenu : System::Windows::Controls::Primitives::MenuBase" />
  <TypeSignature Language="F#" Value="type ContextMenu = class&#xA;    inherit MenuBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.MenuBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Opened")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a02b5-101">Reprezentuje menu podręczne, które umożliwia formantowi uwidocznienie funkcji, która jest specyficzna dla kontekstu kontrolki.</span><span class="sxs-lookup"><span data-stu-id="a02b5-101">Represents a pop-up menu that enables a control to expose functionality that is specific to the context of the control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b5-102"><xref:System.Windows.Controls.ContextMenu><xref:System.Windows.Controls.ItemsControl>jest, co oznacza, że może zawierać kolekcję obiektów dowolnego typu (na przykład ciąg, obraz lub panel).</span><span class="sxs-lookup"><span data-stu-id="a02b5-102"><xref:System.Windows.Controls.ContextMenu> is an <xref:System.Windows.Controls.ItemsControl>, which means it can contain a collection of objects of any type (such as string, image, or panel).</span></span> <span data-ttu-id="a02b5-103">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Controls.ItemsControl> Klasa.</span><span class="sxs-lookup"><span data-stu-id="a02b5-103">For more information, see the <xref:System.Windows.Controls.ItemsControl> class.</span></span>  
  
 <span data-ttu-id="a02b5-104">Właściwości <xref:System.Windows.Controls.ContextMenu> klasy są używane do definiowania pozycji i zachowania <xref:System.Windows.Controls.ContextMenu>.</span><span class="sxs-lookup"><span data-stu-id="a02b5-104">The properties of the <xref:System.Windows.Controls.ContextMenu> class are used to define the position and behavior of the <xref:System.Windows.Controls.ContextMenu>.</span></span>  
  
 <span data-ttu-id="a02b5-105"><xref:System.Windows.FrameworkElement> Lub może<xref:System.Windows.FrameworkContentElement> mieć .<xref:System.Windows.Controls.ContextMenu></span><span class="sxs-lookup"><span data-stu-id="a02b5-105">A <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> can have a <xref:System.Windows.Controls.ContextMenu>.</span></span>  <span data-ttu-id="a02b5-106">Jeśli przypiszesz <xref:System.Windows.Controls.ContextMenu> <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> do właściwości lub <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> , <xref:System.Windows.Controls.ContextMenuService> Klasa obsługuje operacje menu kontekstowego w odpowiedzi na interakcję użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a02b5-106">If you assign a <xref:System.Windows.Controls.ContextMenu> to the <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> property, the <xref:System.Windows.Controls.ContextMenuService> class handles context menu operations in response to user interaction.</span></span> <span data-ttu-id="a02b5-107">Część pracy <xref:System.Windows.Controls.ContextMenuService> jest otwierana, <xref:System.Windows.Controls.ContextMenu> gdy użytkownik kliknie prawym przyciskiem myszy nad formantem.</span><span class="sxs-lookup"><span data-stu-id="a02b5-107">Part of the work the <xref:System.Windows.Controls.ContextMenuService> does is opening the <xref:System.Windows.Controls.ContextMenu> when the user clicks the right mouse button over the control.</span></span>  
  
 <span data-ttu-id="a02b5-108">Następujące właściwości są zdefiniowane przez <xref:System.Windows.Controls.ContextMenu> klasy i. <xref:System.Windows.Controls.ContextMenuService></span><span class="sxs-lookup"><span data-stu-id="a02b5-108">The following properties are defined by the <xref:System.Windows.Controls.ContextMenu> and <xref:System.Windows.Controls.ContextMenuService> classes.</span></span>  <span data-ttu-id="a02b5-109">Jeśli którakolwiek z tych właściwości jest ustawiona zarówno <xref:System.Windows.Controls.ContextMenu> w <xref:System.Windows.Controls.ContextMenuService>, jak i, wartość właściwości z <xref:System.Windows.Controls.ContextMenuService> jest używana.</span><span class="sxs-lookup"><span data-stu-id="a02b5-109">If any of these properties are set on both <xref:System.Windows.Controls.ContextMenu> and the <xref:System.Windows.Controls.ContextMenuService>, the property value from the <xref:System.Windows.Controls.ContextMenuService> is used.</span></span>  
  
-   <xref:System.Windows.Controls.ContextMenu.Placement%2A>  
  
-   <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>  
  
-   <xref:System.Windows.Controls.ContextMenu.PlacementTargetProperty>  
  
-   <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>  
  
-   <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty>  
  
-   <xref:System.Windows.Controls.ContextMenu.HasDropShadow%2A>  
  
 <span data-ttu-id="a02b5-110">Element <xref:System.Windows.Controls.ContextMenu> jest automatycznie umieszczany <xref:System.Windows.Controls.Primitives.Popup> wewnątrz kontrolki.</span><span class="sxs-lookup"><span data-stu-id="a02b5-110">A <xref:System.Windows.Controls.ContextMenu> is automatically placed inside a <xref:System.Windows.Controls.Primitives.Popup> control.</span></span> <span data-ttu-id="a02b5-111">Tego zachowania nie można zmienić.</span><span class="sxs-lookup"><span data-stu-id="a02b5-111">This behavior cannot be changed.</span></span>  
  
## <a name="customizing-the-contextmenu-control"></a><span data-ttu-id="a02b5-112">Dostosowywanie kontrolki dostosowywania</span><span class="sxs-lookup"><span data-stu-id="a02b5-112">Customizing the ContextMenu Control</span></span>  
 <span data-ttu-id="a02b5-113">Aby zastosować te same ustawienia właściwości do wielu <xref:System.Windows.Controls.ContextMenu> formantów, <xref:System.Windows.FrameworkElement.Style%2A> Użyj właściwości.</span><span class="sxs-lookup"><span data-stu-id="a02b5-113">To apply the same property settings to multiple <xref:System.Windows.Controls.ContextMenu> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="a02b5-114">Można zmienić wartość domyślną <xref:System.Windows.Controls.ControlTemplate> , aby dać formantowi unikatowy wygląd.</span><span class="sxs-lookup"><span data-stu-id="a02b5-114">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="a02b5-115">Aby uzyskać więcej informacji na temat <xref:System.Windows.Controls.ControlTemplate>tworzenia, zobacz [Dostosowywanie wyglądu istniejącej kontrolki przez utworzenie ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="a02b5-115">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="a02b5-116">Aby zobaczyć części i Stany, które są specyficzne dla programu <xref:System.Windows.Controls.ContextMenu>, zobacz [Style i szablony](~/docs/framework/wpf/controls/contextmenu-styles-and-templates.md).</span><span class="sxs-lookup"><span data-stu-id="a02b5-116">To see the parts and states that are specific to the <xref:System.Windows.Controls.ContextMenu>, see [ContextMenu Styles and Templates](~/docs/framework/wpf/controls/contextmenu-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="a02b5-117">Właściwości zależności dla tego formantu można ustawić przy użyciu domyślnego stylu kontrolki.</span><span class="sxs-lookup"><span data-stu-id="a02b5-117">Dependency properties for this control might be set by the control's default style.</span></span>  <span data-ttu-id="a02b5-118">Jeśli właściwość jest ustawiana za pomocą stylu domyślnego, właściwość może ulec zmianie z wartości domyślnej, gdy kontrolka pojawi się w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="a02b5-118">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="a02b5-119">Domyślny styl jest określany na podstawie tego, który Motyw pulpitu jest używany, gdy aplikacja jest uruchomiona.</span><span class="sxs-lookup"><span data-stu-id="a02b5-119">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="a02b5-120">Aby uzyskać więcej informacji, zobacz [domyślne motywy WPF](https://go.microsoft.com/fwlink/?LinkID=158252).</span><span class="sxs-lookup"><span data-stu-id="a02b5-120">For more information, see [Default WPF Themes](https://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
[!INCLUDE[setting-a-visual-property](~/includes/visual-property-note.md)]  
  
## Examples  
 <span data-ttu-id="a02b5-121">Poniższy przykład tworzy obiekt <xref:System.Windows.Controls.ContextMenu> , który manipuluje tekstem. <xref:System.Windows.Controls.TextBox></span><span class="sxs-lookup"><span data-stu-id="a02b5-121">The following example creates a <xref:System.Windows.Controls.ContextMenu> that manipulates the text of a <xref:System.Windows.Controls.TextBox>.</span></span>  <span data-ttu-id="a02b5-122">W przykładzie pokazano, jak subskrybować i obsługiwać zdarzenia <xref:System.Windows.Controls.MenuItem> obiektów <xref:System.Windows.Controls.ContextMenu>w obiekcie.</span><span class="sxs-lookup"><span data-stu-id="a02b5-122">The example demonstrates how to subscribe to and handle the events of <xref:System.Windows.Controls.MenuItem> objects in a <xref:System.Windows.Controls.ContextMenu>.</span></span>  
  
 [!code-xaml[ContextMenu#Events](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#events)]  
  
 [!code-csharp[MenuItemCommandsAndEvents#2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml.cs#2)]
 [!code-vb[MenuItemCommandsAndEvents#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItemCommandsAndEvents/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.ContextMenuService" />
    <altmember cref="T:System.Windows.Controls.MenuItem" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextMenu();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a02b5-123">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Controls.ContextMenu" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="a02b5-123">Initializes a new instance of the <see cref="T:System.Windows.Controls.ContextMenu" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Closed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Closed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.ContextMenu.Closed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closed As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Closed;" />
      <MemberSignature Language="F#" Value="member this.Closed : System.Windows.RoutedEventHandler " Usage="member this.Closed : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a02b5-124">Występuje po <see cref="T:System.Windows.Controls.ContextMenu" /> zamknięciu określonego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a02b5-124">Occurs when a particular instance of a <see cref="T:System.Windows.Controls.ContextMenu" /> closes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_Closed"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a02b5-125">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a02b5-125">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a02b5-126">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a02b5-126">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.ClosedEvent>|  
|<span data-ttu-id="a02b5-127">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a02b5-127">Routing strategy</span></span>|<span data-ttu-id="a02b5-128">Propagacja</span><span class="sxs-lookup"><span data-stu-id="a02b5-128">Bubbling</span></span>|  
|<span data-ttu-id="a02b5-129">Delegate</span><span class="sxs-lookup"><span data-stu-id="a02b5-129">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="a02b5-130">Poniższy przykład pokazuje, <xref:System.Windows.Controls.ContextMenu> jak używać zdarzeń: <xref:System.Windows.Controls.ContextMenu.Opened> i <xref:System.Windows.Controls.ContextMenu.Closed>.</span><span class="sxs-lookup"><span data-stu-id="a02b5-130">The following example shows how use the <xref:System.Windows.Controls.ContextMenu> events: <xref:System.Windows.Controls.ContextMenu.Opened> and <xref:System.Windows.Controls.ContextMenu.Closed>.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuevents)]  
  
 [!code-csharp[ContextMenu#ContextMenuEventHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml.cs#contextmenueventhandlers)]
 [!code-vb[ContextMenu#ContextMenuEventHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContextMenu/VisualBasic/Pane1.xaml.vb#contextmenueventhandlers)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="ClosedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ClosedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ClosedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.ClosedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClosedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ClosedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClosedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.ContextMenu.ClosedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a02b5-131">Identyfikuje zdarzenie <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a02b5-131">Identifies the <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomPopupPlacementCallback">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Primitives.CustomPopupPlacementCallback CustomPopupPlacementCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.Primitives.CustomPopupPlacementCallback CustomPopupPlacementCallback" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomPopupPlacementCallback As CustomPopupPlacementCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Primitives::CustomPopupPlacementCallback ^ CustomPopupPlacementCallback { System::Windows::Controls::Primitives::CustomPopupPlacementCallback ^ get(); void set(System::Windows::Controls::Primitives::CustomPopupPlacementCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomPopupPlacementCallback : System.Windows.Controls.Primitives.CustomPopupPlacementCallback with get, set" Usage="System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.CustomPopupPlacementCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a02b5-132">Pobiera lub ustawia wywołanie zwrotne wskazujące, <see cref="T:System.Windows.Controls.ContextMenu" /> gdzie powinna zostać umieszczona na ekranie.</span><span class="sxs-lookup"><span data-stu-id="a02b5-132">Gets or sets a callback that indicates where a <see cref="T:System.Windows.Controls.ContextMenu" /> should be placed on the screen.</span></span></summary>
        <value><span data-ttu-id="a02b5-133">Wywołanie zwrotne określające lokalizację <see cref="T:System.Windows.Controls.ContextMenu" />.</span><span class="sxs-lookup"><span data-stu-id="a02b5-133">A callback that specifies the location of the <see cref="T:System.Windows.Controls.ContextMenu" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b5-134">Właściwość musi być ustawiona na <xref:System.Windows.Controls.Primitives.PlacementMode.Custom> dla delegata wywołania zwrotnego, który ma być używany. <xref:System.Windows.Controls.ContextMenu.Placement%2A></span><span class="sxs-lookup"><span data-stu-id="a02b5-134">The <xref:System.Windows.Controls.ContextMenu.Placement%2A> property must be set to <xref:System.Windows.Controls.Primitives.PlacementMode.Custom> for the callback delegate to be used.</span></span>  
  
 <span data-ttu-id="a02b5-135">Delegat zwraca tablicę możliwych punktów, które są zdefiniowane w odniesieniu <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>do. <xref:System.Windows.Controls.Primitives.CustomPopupPlacementCallback></span><span class="sxs-lookup"><span data-stu-id="a02b5-135">The <xref:System.Windows.Controls.Primitives.CustomPopupPlacementCallback> delegate returns an array of possible points that are defined with respect to the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>.</span></span> <span data-ttu-id="a02b5-136">Gdy menu kontekstowe jest wyświetlane, zostanie wybrany punkt, który maksymalizuje ilość <xref:System.Windows.Controls.ToolTip> widocznego okna.</span><span class="sxs-lookup"><span data-stu-id="a02b5-136">When the context menu is displayed, a point is chosen that maximizes the amount of the <xref:System.Windows.Controls.ToolTip> window that is visible.</span></span>  
  
 <span data-ttu-id="a02b5-137">Zachowanie jest takie samo, jak w przypadku okna podręcznego.</span><span class="sxs-lookup"><span data-stu-id="a02b5-137">The behavior is the same as it is for the popup.</span></span>  <span data-ttu-id="a02b5-138">Aby uzyskać więcej informacji, zobacz [jak: Określ niestandardową pozycję](~/docs/framework/wpf/controls/how-to-specify-a-custom-popup-position.md) okienka podręcznego i [przykład umieszczania](https://go.microsoft.com/fwlink/?LinkID=160032)podręcznego.</span><span class="sxs-lookup"><span data-stu-id="a02b5-138">For more information, see [How to: Specify a Custom Popup Position](~/docs/framework/wpf/controls/how-to-specify-a-custom-popup-position.md) and [Popup Placement Sample](https://go.microsoft.com/fwlink/?LinkID=160032).</span></span>  
  
<a name="dependencyPropertyInfo_CustomPopupPlacementCallback"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a02b5-139">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="a02b5-139">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a02b5-140">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a02b5-140">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty>|  
|<span data-ttu-id="a02b5-141">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="a02b5-141">Metadata properties set to `true`</span></span>|<span data-ttu-id="a02b5-142">Brak</span><span class="sxs-lookup"><span data-stu-id="a02b5-142">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomPopupPlacementCallbackProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CustomPopupPlacementCallbackProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CustomPopupPlacementCallbackProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CustomPopupPlacementCallbackProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CustomPopupPlacementCallbackProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CustomPopupPlacementCallbackProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a02b5-143">Identyfikuje właściwość <see cref="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="a02b5-143">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlesScrolling">
      <MemberSignature Language="C#" Value="protected internal override bool HandlesScrolling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HandlesScrolling" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.HandlesScrolling" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property HandlesScrolling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HandlesScrolling { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HandlesScrolling : bool" Usage="System.Windows.Controls.ContextMenu.HandlesScrolling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a02b5-144">Pobiera wartość wskazującą, czy kontrolka obsługuje przewijanie.</span><span class="sxs-lookup"><span data-stu-id="a02b5-144">Gets a value that indicates whether the control supports scrolling.</span></span></summary>
        <value><span data-ttu-id="a02b5-145">Zawsze <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="a02b5-145">Always <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b5-146">Jeśli kontrolka ma <xref:System.Windows.Controls.ScrollViewer> w jej stylu i ma zachowanie niestandardowego przewijania klawiatury, <xref:System.Windows.Controls.ListBox.HandlesScrolling%2A> należy zwrócić `true`.</span><span class="sxs-lookup"><span data-stu-id="a02b5-146">If the control has a <xref:System.Windows.Controls.ScrollViewer> in its style and has a custom keyboard scrolling behavior, <xref:System.Windows.Controls.ListBox.HandlesScrolling%2A> should return `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDropShadow">
      <MemberSignature Language="C#" Value="public bool HasDropShadow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasDropShadow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.HasDropShadow" />
      <MemberSignature Language="VB.NET" Value="Public Property HasDropShadow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasDropShadow { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HasDropShadow : bool with get, set" Usage="System.Windows.Controls.ContextMenu.HasDropShadow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a02b5-147">Pobiera lub ustawia wartość wskazującą, czy menu kontekstowe jest wyświetlane z porzuconym cieniem.</span><span class="sxs-lookup"><span data-stu-id="a02b5-147">Gets or sets a value that indicates whether the context menu appears with a dropped shadow.</span></span></summary>
        <value><span data-ttu-id="a02b5-148"><see langword="true" />Jeśli menu kontekstowe pojawia się z porzuconym cieńem; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="a02b5-148"><see langword="true" /> if the context menu appears with a dropped shadow; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a02b5-149">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a02b5-149">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b5-150">Po otwarciu wartość jest ustawiana na <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType>wartość. <xref:System.Windows.Controls.ContextMenu></span><span class="sxs-lookup"><span data-stu-id="a02b5-150">When the <xref:System.Windows.Controls.ContextMenu> opens, the value is set to the value of <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a02b5-151">Ustawienie tej właściwości na `true` nie ma wpływu, <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType> Jeśli właściwość jest `false`.</span><span class="sxs-lookup"><span data-stu-id="a02b5-151">Setting this property to `true` has no effect if the <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType> property is `false`.</span></span>  
  
<a name="dependencyPropertyInfo_"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a02b5-152">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="a02b5-152">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a02b5-153">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a02b5-153">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.HasDropShadowProperty>|  
|<span data-ttu-id="a02b5-154">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="a02b5-154">Metadata properties set to `true`</span></span>|<span data-ttu-id="a02b5-155">Brak</span><span class="sxs-lookup"><span data-stu-id="a02b5-155">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a02b5-156">Poniższy przykład pokazuje, <xref:System.Windows.Controls.ContextMenu.HasDropShadow%2A> jak używać właściwości.</span><span class="sxs-lookup"><span data-stu-id="a02b5-156">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.HasDropShadow%2A> property.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuProps](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuprops)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="HasDropShadowProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HasDropShadowProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HasDropShadowProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.HasDropShadowProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HasDropShadowProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HasDropShadowProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HasDropShadowProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.HasDropShadowProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a02b5-157">Identyfikuje właściwość <see cref="P:System.Windows.Controls.ContextMenu.HasDropShadow" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="a02b5-157">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.HasDropShadow" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalOffset">
      <MemberSignature Language="C#" Value="public double HorizontalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 HorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.HorizontalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double HorizontalOffset { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalOffset : double with get, set" Usage="System.Windows.Controls.ContextMenu.HorizontalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a02b5-158">Pobierz lub Ustaw odległość między pochodzeniem docelowym a punktem wyrównania okienka podręcznego.</span><span class="sxs-lookup"><span data-stu-id="a02b5-158">Get or sets the horizontal distance between the target origin and the popup alignment point.</span></span></summary>
        <value><span data-ttu-id="a02b5-159">Odległość między pochodzeniem docelowym a punktem wyrównania okienka podręcznego.</span><span class="sxs-lookup"><span data-stu-id="a02b5-159">The horizontal distance between the target origin and the popup alignment point.</span></span> <span data-ttu-id="a02b5-160">Aby uzyskać informacje na temat docelowego punktu wyrównania i wyskakującego okienka, zobacz [podręczne zachowanie umieszczania](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span><span class="sxs-lookup"><span data-stu-id="a02b5-160">For information about the target origin and popup alignment point, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span> <span data-ttu-id="a02b5-161">Wartość domyślna to 0.</span><span class="sxs-lookup"><span data-stu-id="a02b5-161">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b5-162">Można ustawić położenie a <xref:System.Windows.Controls.ContextMenu> przez <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>ustawienie właściwości, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, i <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> .</span><span class="sxs-lookup"><span data-stu-id="a02b5-162">You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.</span></span>  <span data-ttu-id="a02b5-163">Te właściwości zachowują się tak samo, jak w <xref:System.Windows.Controls.Primitives.Popup>przypadku.</span><span class="sxs-lookup"><span data-stu-id="a02b5-163">These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="a02b5-164">Aby uzyskać więcej informacji, zobacz [zachowanie podczas umieszczania okienka](~/docs/framework/wpf/controls/popup-placement-behavior.md)podręcznego.</span><span class="sxs-lookup"><span data-stu-id="a02b5-164">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="dependencyPropertyInfo_HorizontalOffset"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a02b5-165">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="a02b5-165">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a02b5-166">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a02b5-166">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.HorizontalOffsetProperty>|  
|<span data-ttu-id="a02b5-167">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="a02b5-167">Metadata properties set to `true`</span></span>|<span data-ttu-id="a02b5-168">Brak</span><span class="sxs-lookup"><span data-stu-id="a02b5-168">None</span></span>|  
  
<a name="xamlAttributeUsage_HorizontalOffset"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="a02b5-169">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="a02b5-169">XAML Attribute Usage</span></span>  
  
```  
<object HorizontalOffset="double"/>  
- or -  
<object HorizontalOffset ="qualifiedDouble"/>  
```  
  
<a name="xamlValues_HorizontalOffset"></a>   
## <a name="xaml-values"></a><span data-ttu-id="a02b5-170">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="a02b5-170">XAML Values</span></span>  
 <span data-ttu-id="a02b5-171">*double*</span><span class="sxs-lookup"><span data-stu-id="a02b5-171">*double*</span></span>  
 <xref:System.Double>  
  
 <span data-ttu-id="a02b5-172">Reprezentacja wartości w <xref:System.Double> postaci ciągu.</span><span class="sxs-lookup"><span data-stu-id="a02b5-172">String representation of a <xref:System.Double> value.</span></span> <span data-ttu-id="a02b5-173">Jest to interpretowane jako [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] pomiar.</span><span class="sxs-lookup"><span data-stu-id="a02b5-173">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="a02b5-174">Ciągi nie muszą jawnie zawierać punktów dziesiętnych.</span><span class="sxs-lookup"><span data-stu-id="a02b5-174">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="a02b5-175">Na przykład akceptowalna `1` jest wartość.</span><span class="sxs-lookup"><span data-stu-id="a02b5-175">For instance a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="a02b5-176">Stosuje się <xref:System.Double> te same ograniczenia zakresu, jak wspomniano w sekcji wartość właściwości.</span><span class="sxs-lookup"><span data-stu-id="a02b5-176">The same <xref:System.Double> range restrictions as mentioned in the Property Value section apply.</span></span>  
  
 <span data-ttu-id="a02b5-177">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="a02b5-177">*qualifiedDouble*</span></span>  
 <span data-ttu-id="a02b5-178">Wartość *Podwójna* , jak opisano powyżej, po której następuje jeden z następujących ciągów deklaracji jednostkowej `in`: `cm` `px`, `pt`,,.</span><span class="sxs-lookup"><span data-stu-id="a02b5-178">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="a02b5-179">`px`(wartość domyślna) to[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="a02b5-179">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="a02b5-180">`in` is inches; 1in==96px</span><span class="sxs-lookup"><span data-stu-id="a02b5-180">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="a02b5-181">`cm`jest centymetry; 1cm = = (96/2.54) px</span><span class="sxs-lookup"><span data-stu-id="a02b5-181">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="a02b5-182">`pt`to punkty; 1 pkt = = (96/72) px</span><span class="sxs-lookup"><span data-stu-id="a02b5-182">`pt` is points; 1pt==(96/72) px</span></span>  
  
 <span data-ttu-id="a02b5-183">**Uwaga** W wielu przypadkach może być ustawiona wartość autodouble, ale <xref:System.Windows.Controls.ContextMenu> nie będzie wyświetlana, jeśli przesunięcia są ustawione na wartość Auto.</span><span class="sxs-lookup"><span data-stu-id="a02b5-183">**Note** In many cases a double may be set to Auto but a <xref:System.Windows.Controls.ContextMenu> will not appear if the offsets are set to Auto.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a02b5-184">Poniższy przykład pokazuje, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A> jak używać właściwości, aby <xref:System.Windows.Controls.ContextMenu> spowodować otwarcie w określonej lokalizacji w odniesieniu do jego elementu nadrzędnego przycisku.</span><span class="sxs-lookup"><span data-stu-id="a02b5-184">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A> property to cause a <xref:System.Windows.Controls.ContextMenu> to open at a specified location in relation to its button parent.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuProps](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuprops)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalOffsetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HorizontalOffsetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HorizontalOffsetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.HorizontalOffsetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HorizontalOffsetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HorizontalOffsetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HorizontalOffsetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.HorizontalOffsetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a02b5-185">Identyfikuje właściwość <see cref="P:System.Windows.Controls.ContextMenu.HorizontalOffset" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="a02b5-185">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.HorizontalOffset" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOpen">
      <MemberSignature Language="C#" Value="public bool IsOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.IsOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property IsOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOpen { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsOpen : bool with get, set" Usage="System.Windows.Controls.ContextMenu.IsOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a02b5-186">Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Windows.Controls.ContextMenu" /> jest ona widoczna.</span><span class="sxs-lookup"><span data-stu-id="a02b5-186">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ContextMenu" /> is visible.</span></span></summary>
        <value><span data-ttu-id="a02b5-187"><see langword="true" />Jeśli jest widoczny; w przeciwnym razie <see langword="false" />. <see cref="T:System.Windows.Controls.ContextMenu" /></span><span class="sxs-lookup"><span data-stu-id="a02b5-187"><see langword="true" /> if the <see cref="T:System.Windows.Controls.ContextMenu" /> is visible; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a02b5-188">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a02b5-188">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b5-189">Gdy <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> jest ustawiona na `true`, <xref:System.Windows.Controls.ContextMenu> przechwytywanie myszy jest ustawione na i jego poddrzewo.</span><span class="sxs-lookup"><span data-stu-id="a02b5-189">When <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> is set to `true`, mouse capture is set to the <xref:System.Windows.Controls.ContextMenu> and its subtree.</span></span>  
  
<a name="dependencyPropertyInfo_IsOpen"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a02b5-190">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="a02b5-190">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a02b5-191">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a02b5-191">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.IsOpenProperty>|  
|<span data-ttu-id="a02b5-192">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="a02b5-192">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="a02b5-193">Ten przykład pokazuje, jak sprawdzić, <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> czy właściwość jest ustawiona na. `true`</span><span class="sxs-lookup"><span data-stu-id="a02b5-193">This example shows how to check to determine whether the <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> property is set to `true`.</span></span>  
  
 [!code-csharp[ContextMenu#ContextMenuIsOpen](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml.cs#contextmenuisopen)]
 [!code-vb[ContextMenu#ContextMenuIsOpen](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContextMenu/VisualBasic/Pane1.xaml.vb#contextmenuisopen)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="IsOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.IsOpenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsOpenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsOpenProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsOpenProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.IsOpenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a02b5-194">Identyfikuje właściwość <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="a02b5-194">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnClosed (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosed(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnClosed(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosed (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosed(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClosed : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnClosed : System.Windows.RoutedEventArgs -&gt; unit" Usage="contextMenu.OnClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a02b5-195">Dane zdarzenia dla <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a02b5-195">The event data for the <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> event.</span></span></param>
        <summary><span data-ttu-id="a02b5-196">Wywoływana, <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> gdy wystąpi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="a02b5-196">Called when the <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> event occurs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="contextMenu.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a02b5-197">Tworzy i zwraca <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> obiekt dla tego <see cref="T:System.Windows.Controls.ContextMenu" />obiektu.</span><span class="sxs-lookup"><span data-stu-id="a02b5-197">Creates and returns a <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> object for this <see cref="T:System.Windows.Controls.ContextMenu" />.</span></span></summary>
        <returns><span data-ttu-id="a02b5-198">Obiekt dla tego <see cref="T:System.Windows.Controls.ContextMenu" />elementu. <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /></span><span class="sxs-lookup"><span data-stu-id="a02b5-198">A <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> object for this <see cref="T:System.Windows.Controls.ContextMenu" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contextMenu.OnIsKeyboardFocusWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a02b5-199">Dane zdarzenia dla <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a02b5-199">The event data for the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> event.</span></span></param>
        <summary><span data-ttu-id="a02b5-200">Raportuje, <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> że właściwość została zmieniona.</span><span class="sxs-lookup"><span data-stu-id="a02b5-200">Reports that the <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> property changed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contextMenu.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a02b5-201">Dane zdarzenia dla <see cref="E:System.Windows.UIElement.KeyDown" /> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a02b5-201">The event data for the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</span></span></param>
        <summary><span data-ttu-id="a02b5-202">Wywołuje się, <see cref="E:System.Windows.ContentElement.KeyDown" /> gdy zdarzenie jest zgłaszane przez obiekt <see cref="T:System.Windows.Controls.ContextMenu" />wewnątrz.</span><span class="sxs-lookup"><span data-stu-id="a02b5-202">Called when a <see cref="E:System.Windows.ContentElement.KeyDown" /> event is raised by an object inside the <see cref="T:System.Windows.Controls.ContextMenu" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contextMenu.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a02b5-203">Dane zdarzenia dla <see cref="E:System.Windows.UIElement.KeyUp" /> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a02b5-203">The event data for the <see cref="E:System.Windows.UIElement.KeyUp" /> event.</span></span></param>
        <summary><span data-ttu-id="a02b5-204">Reaguje na <see cref="E:System.Windows.ContentElement.KeyUp" /> zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="a02b5-204">Responds to the <see cref="E:System.Windows.ContentElement.KeyUp" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOpened">
      <MemberSignature Language="C#" Value="protected virtual void OnOpened (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnOpened(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnOpened(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnOpened (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnOpened(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnOpened : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnOpened : System.Windows.RoutedEventArgs -&gt; unit" Usage="contextMenu.OnOpened e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a02b5-205">Dane zdarzenia dla <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="a02b5-205">The event data for the <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> event.</span></span></param>
        <summary><span data-ttu-id="a02b5-206">Wywoływana, <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> gdy wystąpi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="a02b5-206">Called when the <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> event occurs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberSignature Language="F#" Value="override this.OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit" Usage="contextMenu.OnVisualParentChanged oldParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent"><span data-ttu-id="a02b5-207">Obiekt, do którego poprzednio dołączono menu kontekstowe.</span><span class="sxs-lookup"><span data-stu-id="a02b5-207">The object that the context menu was previously attached to.</span></span></param>
        <summary><span data-ttu-id="a02b5-208">Wywołuje się, gdy zmieni się element wizualny menu kontekstowego.</span><span class="sxs-lookup"><span data-stu-id="a02b5-208">Called when a context menu's visual parent changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Opened">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Opened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Opened" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.ContextMenu.Opened" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Opened As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Opened;" />
      <MemberSignature Language="F#" Value="member this.Opened : System.Windows.RoutedEventHandler " Usage="member this.Opened : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a02b5-209">Występuje po otwarciu konkretnego wystąpienia menu kontekstowego.</span><span class="sxs-lookup"><span data-stu-id="a02b5-209">Occurs when a particular instance of a context menu opens.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_Opened"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a02b5-210">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="a02b5-210">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a02b5-211">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a02b5-211">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.OpenedEvent>|  
|<span data-ttu-id="a02b5-212">Strategia routingu</span><span class="sxs-lookup"><span data-stu-id="a02b5-212">Routing strategy</span></span>|<span data-ttu-id="a02b5-213">Propagacja</span><span class="sxs-lookup"><span data-stu-id="a02b5-213">Bubbling</span></span>|  
|<span data-ttu-id="a02b5-214">Delegate</span><span class="sxs-lookup"><span data-stu-id="a02b5-214">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="a02b5-215">Poniższy przykład pokazuje, <xref:System.Windows.Controls.ContextMenu> jak używać zdarzeń: <xref:System.Windows.Controls.ContextMenu.Opened> i <xref:System.Windows.Controls.ContextMenu.Closed>.</span><span class="sxs-lookup"><span data-stu-id="a02b5-215">The following example shows how use the <xref:System.Windows.Controls.ContextMenu> events: <xref:System.Windows.Controls.ContextMenu.Opened> and <xref:System.Windows.Controls.ContextMenu.Closed>.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuevents)]  
  
 [!code-csharp[ContextMenu#ContextMenuEventHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml.cs#contextmenueventhandlers)]
 [!code-vb[ContextMenu#ContextMenuEventHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContextMenu/VisualBasic/Pane1.xaml.vb#contextmenueventhandlers)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="OpenedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent OpenedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent OpenedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.OpenedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OpenedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ OpenedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable OpenedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.ContextMenu.OpenedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a02b5-216">Identyfikuje zdarzenie <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> kierowane.</span><span class="sxs-lookup"><span data-stu-id="a02b5-216">Identifies the <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Placement">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Primitives.PlacementMode Placement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Primitives.PlacementMode Placement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.Placement" />
      <MemberSignature Language="VB.NET" Value="Public Property Placement As PlacementMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Primitives::PlacementMode Placement { System::Windows::Controls::Primitives::PlacementMode get(); void set(System::Windows::Controls::Primitives::PlacementMode value); };" />
      <MemberSignature Language="F#" Value="member this.Placement : System.Windows.Controls.Primitives.PlacementMode with get, set" Usage="System.Windows.Controls.ContextMenu.Placement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.PlacementMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a02b5-217">Pobiera lub ustawia <see cref="P:System.Windows.Controls.ContextMenu.Placement" /> Właściwość <see cref="T:System.Windows.Controls.ContextMenu" />.</span><span class="sxs-lookup"><span data-stu-id="a02b5-217">Gets or sets the <see cref="P:System.Windows.Controls.ContextMenu.Placement" /> property of a <see cref="T:System.Windows.Controls.ContextMenu" />.</span></span></summary>
        <value><span data-ttu-id="a02b5-218">Jedno z <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> wyliczeń.</span><span class="sxs-lookup"><span data-stu-id="a02b5-218">One of the <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> enumeration.</span></span> <span data-ttu-id="a02b5-219">Wartość domyślna to <see cref="F:System.Windows.Controls.Primitives.PlacementMode.MousePoint" />.</span><span class="sxs-lookup"><span data-stu-id="a02b5-219">The default is <see cref="F:System.Windows.Controls.Primitives.PlacementMode.MousePoint" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b5-220"><xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> <xref:System.Windows.Controls.ContextMenuService> Gdy jest przypisany do właściwości lub, zmienia tę wartość tej właściwości po <xref:System.Windows.Controls.ContextMenu> otwarciu. <xref:System.Windows.Controls.ContextMenu></span><span class="sxs-lookup"><span data-stu-id="a02b5-220">When the <xref:System.Windows.Controls.ContextMenu> is assigned to the <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> property, the <xref:System.Windows.Controls.ContextMenuService> changes this value of this property when the <xref:System.Windows.Controls.ContextMenu> opens.</span></span> <span data-ttu-id="a02b5-221">Jeśli użytkownik otworzy okno <xref:System.Windows.Controls.ContextMenu> przy użyciu myszy, <xref:System.Windows.Controls.ContextMenu.Placement%2A> jest ustawione na <xref:System.Windows.Controls.Primitives.PlacementMode.MousePoint>.</span><span class="sxs-lookup"><span data-stu-id="a02b5-221">If the user opens the <xref:System.Windows.Controls.ContextMenu> by using the mouse, <xref:System.Windows.Controls.ContextMenu.Placement%2A> is set to <xref:System.Windows.Controls.Primitives.PlacementMode.MousePoint>.</span></span>  <span data-ttu-id="a02b5-222">Jeśli użytkownik otworzy <xref:System.Windows.Controls.ContextMenu> program przy użyciu klawiatury, <xref:System.Windows.Controls.ContextMenu.Placement%2A> jest ustawiona na <xref:System.Windows.Controls.Primitives.PlacementMode.Center>.</span><span class="sxs-lookup"><span data-stu-id="a02b5-222">If the user opens the <xref:System.Windows.Controls.ContextMenu> by using the keyboard, <xref:System.Windows.Controls.ContextMenu.Placement%2A> is set to <xref:System.Windows.Controls.Primitives.PlacementMode.Center>.</span></span>  <span data-ttu-id="a02b5-223">Jeśli chcesz zmienić <xref:System.Windows.Controls.ContextMenu>pozycję, <xref:System.Windows.Controls.ContextMenuService.Placement%2A?displayProperty=nameWithType> ustaw właściwość na <xref:System.Windows.FrameworkElement> lub <xref:System.Windows.FrameworkContentElement>.</span><span class="sxs-lookup"><span data-stu-id="a02b5-223">If you want to change the position of the <xref:System.Windows.Controls.ContextMenu>, set the <xref:System.Windows.Controls.ContextMenuService.Placement%2A?displayProperty=nameWithType> property on the <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span>  
  
 <span data-ttu-id="a02b5-224">Można ustawić położenie a <xref:System.Windows.Controls.ContextMenu> przez <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>ustawienie właściwości, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, i <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> .</span><span class="sxs-lookup"><span data-stu-id="a02b5-224">You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.</span></span>  <span data-ttu-id="a02b5-225">Te właściwości zachowują się tak samo, jak w <xref:System.Windows.Controls.Primitives.Popup>przypadku.</span><span class="sxs-lookup"><span data-stu-id="a02b5-225">These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="a02b5-226">Aby uzyskać więcej informacji, zobacz [zachowanie podczas umieszczania okienka](~/docs/framework/wpf/controls/popup-placement-behavior.md)podręcznego.</span><span class="sxs-lookup"><span data-stu-id="a02b5-226">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="dependencyPropertyInfo_Placement"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a02b5-227">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="a02b5-227">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a02b5-228">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a02b5-228">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.PlacementProperty>|  
|<span data-ttu-id="a02b5-229">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="a02b5-229">Metadata properties set to `true`</span></span>|<span data-ttu-id="a02b5-230">Brak</span><span class="sxs-lookup"><span data-stu-id="a02b5-230">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a02b5-231">Poniższy przykład pokazuje, <xref:System.Windows.Controls.ContextMenu.Placement%2A> jak używać właściwości i trybu umieszczania, aby określić <xref:System.Windows.Controls.ContextMenu> miejsce umieszczenia.</span><span class="sxs-lookup"><span data-stu-id="a02b5-231">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.Placement%2A> property and a placement mode to specify where the <xref:System.Windows.Controls.ContextMenu> is placed.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuPlacement](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuplacement)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="PlacementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PlacementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PlacementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.PlacementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PlacementProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PlacementProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PlacementProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.PlacementProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a02b5-232">Identyfikuje właściwość <see cref="P:System.Windows.Controls.ContextMenu.Placement" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="a02b5-232">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.Placement" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlacementRectangle">
      <MemberSignature Language="C#" Value="public System.Windows.Rect PlacementRectangle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Rect PlacementRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.PlacementRectangle" />
      <MemberSignature Language="VB.NET" Value="Public Property PlacementRectangle As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Rect PlacementRectangle { System::Windows::Rect get(); void set(System::Windows::Rect value); };" />
      <MemberSignature Language="F#" Value="member this.PlacementRectangle : System.Windows.Rect with get, set" Usage="System.Windows.Controls.ContextMenu.PlacementRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a02b5-233">Pobiera lub ustawia obszar, względem którego jest ustawione menu kontekstowe, gdy zostanie ono otwarte.</span><span class="sxs-lookup"><span data-stu-id="a02b5-233">Gets or sets the area relative to which the context menu is positioned when it opens.</span></span></summary>
        <value><span data-ttu-id="a02b5-234">Obszar definiujący prostokąt, który jest używany do pozycjonowania menu kontekstowego.</span><span class="sxs-lookup"><span data-stu-id="a02b5-234">The area that defines the rectangle that is used to position the context menu.</span></span> <span data-ttu-id="a02b5-235">Wartość domyślna to <see cref="P:System.Windows.Rect.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="a02b5-235">The default is <see cref="P:System.Windows.Rect.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b5-236">Można ustawić położenie a <xref:System.Windows.Controls.ContextMenu> przez <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>ustawienie właściwości, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, i <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> .</span><span class="sxs-lookup"><span data-stu-id="a02b5-236">You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.</span></span>  <span data-ttu-id="a02b5-237">Te właściwości zachowują się tak samo, jak w <xref:System.Windows.Controls.Primitives.Popup>przypadku.</span><span class="sxs-lookup"><span data-stu-id="a02b5-237">These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="a02b5-238">Aby uzyskać więcej informacji, zobacz [zachowanie podczas umieszczania okienka](~/docs/framework/wpf/controls/popup-placement-behavior.md)podręcznego.</span><span class="sxs-lookup"><span data-stu-id="a02b5-238">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="dependencyPropertyInfo_PlacementRectangle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a02b5-239">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="a02b5-239">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a02b5-240">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a02b5-240">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.PlacementRectangleProperty>|  
|<span data-ttu-id="a02b5-241">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="a02b5-241">Metadata properties set to `true`</span></span>|<span data-ttu-id="a02b5-242">Brak</span><span class="sxs-lookup"><span data-stu-id="a02b5-242">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a02b5-243">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A> właściwości i określić <xref:System.Windows.Controls.ContextMenu> miejsce umieszczenia.</span><span class="sxs-lookup"><span data-stu-id="a02b5-243">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A> property and specify where the <xref:System.Windows.Controls.ContextMenu> is placed.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuPlacement](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuplacement)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="PlacementRectangleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PlacementRectangleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PlacementRectangleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.PlacementRectangleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PlacementRectangleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PlacementRectangleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PlacementRectangleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.PlacementRectangleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a02b5-244">Identyfikuje właściwość <see cref="P:System.Windows.Controls.ContextMenu.PlacementRectangle" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="a02b5-244">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.PlacementRectangle" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlacementTarget">
      <MemberSignature Language="C#" Value="public System.Windows.UIElement PlacementTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.UIElement PlacementTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.PlacementTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property PlacementTarget As UIElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::UIElement ^ PlacementTarget { System::Windows::UIElement ^ get(); void set(System::Windows::UIElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PlacementTarget : System.Windows.UIElement with get, set" Usage="System.Windows.Controls.ContextMenu.PlacementTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a02b5-245">Pobiera lub ustawia <see cref="T:System.Windows.UIElement" /> element względny, w <see cref="T:System.Windows.Controls.ContextMenu" /> którym jest ustawiony w momencie jego otwierania.</span><span class="sxs-lookup"><span data-stu-id="a02b5-245">Gets or sets the <see cref="T:System.Windows.UIElement" /> relative to which the <see cref="T:System.Windows.Controls.ContextMenu" /> is positioned when it opens.</span></span></summary>
        <value><span data-ttu-id="a02b5-246">Element względny, w którym <see cref="T:System.Windows.Controls.ContextMenu" /> jest umieszczony w momencie otwarcia.</span><span class="sxs-lookup"><span data-stu-id="a02b5-246">The element relative to which the <see cref="T:System.Windows.Controls.ContextMenu" /> is positioned when it opens.</span></span> <span data-ttu-id="a02b5-247">Wartość domyślna to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a02b5-247">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b5-248"><xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> <xref:System.Windows.FrameworkElement> <xref:System.Windows.FrameworkContentElement> Gdy jest przypisany <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> do właściwości lub, <xref:System.Windows.Controls.ContextMenuService> zmienia tęwartośćtejwłaściwościnawłaścicielalubpootwarciu.<xref:System.Windows.Controls.ContextMenu> <xref:System.Windows.Controls.ContextMenu></span><span class="sxs-lookup"><span data-stu-id="a02b5-248">When the <xref:System.Windows.Controls.ContextMenu> is assigned to the <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> property, the <xref:System.Windows.Controls.ContextMenuService> changes this value of this property to the owning <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> when the <xref:System.Windows.Controls.ContextMenu> opens.</span></span> <span data-ttu-id="a02b5-249">Aby użyć innego <xref:System.Windows.UIElement>, <xref:System.Windows.Controls.ContextMenuService.PlacementTarget%2A?displayProperty=nameWithType> ustaw właściwość.</span><span class="sxs-lookup"><span data-stu-id="a02b5-249">To use a different <xref:System.Windows.UIElement>, set the <xref:System.Windows.Controls.ContextMenuService.PlacementTarget%2A?displayProperty=nameWithType> property.</span></span>  
  
<a name="dependencyPropertyInfo_PlacementTarget"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a02b5-250">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="a02b5-250">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a02b5-251">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a02b5-251">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.PlacementTargetProperty>|  
|<span data-ttu-id="a02b5-252">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="a02b5-252">Metadata properties set to `true`</span></span>|<span data-ttu-id="a02b5-253">Brak</span><span class="sxs-lookup"><span data-stu-id="a02b5-253">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a02b5-254">Obiekt docelowy <xref:System.Windows.Controls.ContextMenu> elementu jest jego elementem nadrzędnym.</span><span class="sxs-lookup"><span data-stu-id="a02b5-254">The target of a <xref:System.Windows.Controls.ContextMenu> is its parent.</span></span> <span data-ttu-id="a02b5-255">W poniższych przykładach pokazano, jak użyć <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A> właściwości, aby znaleźć element nadrzędny obiektu <xref:System.Windows.Controls.ContextMenu>.</span><span class="sxs-lookup"><span data-stu-id="a02b5-255">The following examples show how to use the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A> property to find the parent of a <xref:System.Windows.Controls.ContextMenu>.</span></span>  
  
 [!code-csharp[TabControlwithContextMenu#3](~/samples/snippets/csharp/VS_Snippets_Wpf/TabControlwithContextMenu/CSharp/Pane1.xaml.cs#3)]
 [!code-vb[TabControlwithContextMenu#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TabControlwithContextMenu/visualbasic/pane1.xaml.vb#3)]  
  
 [!code-csharp[TabControlContextMenu_snip#FromItemContainer](~/samples/snippets/csharp/VS_Snippets_Wpf/TabControlContextMenu_snip/CSharp/Pane1.xaml.cs#fromitemcontainer)]
 [!code-vb[TabControlContextMenu_snip#FromItemContainer](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TabControlContextMenu_snip/visualbasic/pane1.xaml.vb#fromitemcontainer)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="PlacementTargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PlacementTargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PlacementTargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.PlacementTargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PlacementTargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PlacementTargetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PlacementTargetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.PlacementTargetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a02b5-256">Identyfikuje właściwość <see cref="P:System.Windows.Controls.ContextMenu.PlacementTarget" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="a02b5-256">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.PlacementTarget" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.PrepareContainerForItemOverride : System.Windows.DependencyObject * obj -&gt; unit" Usage="contextMenu.PrepareContainerForItemOverride (element, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a02b5-257">Element używany do wyświetlania określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="a02b5-257">Element used to display the specified item.</span></span></param>
        <param name="item"><span data-ttu-id="a02b5-258">Określony element.</span><span class="sxs-lookup"><span data-stu-id="a02b5-258">Specified item.</span></span></param>
        <summary><span data-ttu-id="a02b5-259">Przygotowuje określony element do wyświetlenia określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="a02b5-259">Prepares the specified element to display the specified item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b5-260">Przygotowanie elementu może wymagać zastosowania stylów, Ustawienia powiązań i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="a02b5-260">Preparing the element may involve applying styles, setting bindings, and so on.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaysOpen">
      <MemberSignature Language="C#" Value="public bool StaysOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StaysOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.StaysOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property StaysOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StaysOpen { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StaysOpen : bool with get, set" Usage="System.Windows.Controls.ContextMenu.StaysOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a02b5-261">Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Windows.Controls.ContextMenu" /> powinny być zamykane automatycznie.</span><span class="sxs-lookup"><span data-stu-id="a02b5-261">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ContextMenu" /> should close automatically.</span></span></summary>
        <value><span data-ttu-id="a02b5-262"><see langword="true" />Jeśli menu powinno pozostać otwarte do momentu <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /> zmiany właściwości na <see langword="false" />; w przeciwnym <see langword="false" />razie,.</span><span class="sxs-lookup"><span data-stu-id="a02b5-262"><see langword="true" /> if the menu should stay open until the <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /> property changes to <see langword="false" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a02b5-263">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a02b5-263">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_StaysOpen"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a02b5-264">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="a02b5-264">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a02b5-265">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a02b5-265">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.StaysOpenProperty>|  
|<span data-ttu-id="a02b5-266">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="a02b5-266">Metadata properties set to `true`</span></span>|<span data-ttu-id="a02b5-267">Brak</span><span class="sxs-lookup"><span data-stu-id="a02b5-267">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a02b5-268">Poniższy przykład używa <xref:System.Windows.Controls.ContextMenu.StaysOpen%2A> właściwości, aby utworzyć menu kontekstowe, które pozostanie otwarte do momentu wystąpienia zdarzenia, które <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> zmienia właściwość `false`na.</span><span class="sxs-lookup"><span data-stu-id="a02b5-268">The following example uses the <xref:System.Windows.Controls.ContextMenu.StaysOpen%2A> property to make a context menu that will stay open until an event occurs that changes the <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> property to `false`.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuevents)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="StaysOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StaysOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StaysOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.StaysOpenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StaysOpenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StaysOpenProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable StaysOpenProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.StaysOpenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a02b5-269">Identyfikuje właściwość <see cref="P:System.Windows.Controls.ContextMenu.StaysOpen" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="a02b5-269">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.StaysOpen" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalOffset">
      <MemberSignature Language="C#" Value="public double VerticalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 VerticalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.VerticalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double VerticalOffset { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.VerticalOffset : double with get, set" Usage="System.Windows.Controls.ContextMenu.VerticalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a02b5-270">Pobiera lub ustawia pionową odległość między pochodzeniem docelowym a punktem wyrównania okienka podręcznego.</span><span class="sxs-lookup"><span data-stu-id="a02b5-270">Get or sets the vertical distance between the target origin and the popup alignment point.</span></span></summary>
        <value><span data-ttu-id="a02b5-271">Odległość w pionie między pochodzeniem docelowym a punktem wyrównania okienka podręcznego.</span><span class="sxs-lookup"><span data-stu-id="a02b5-271">The vertical distance between the target origin and the popup alignment point.</span></span> <span data-ttu-id="a02b5-272">Aby uzyskać informacje na temat docelowego punktu wyrównania i wyskakującego okienka, zobacz [podręczne zachowanie umieszczania](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span><span class="sxs-lookup"><span data-stu-id="a02b5-272">For information about the target origin and popup alignment point, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span> <span data-ttu-id="a02b5-273">Wartość domyślna to 0.</span><span class="sxs-lookup"><span data-stu-id="a02b5-273">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b5-274">Można ustawić położenie a <xref:System.Windows.Controls.ContextMenu> przez <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>ustawienie właściwości, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, i <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> .</span><span class="sxs-lookup"><span data-stu-id="a02b5-274">You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.</span></span>  <span data-ttu-id="a02b5-275">Te właściwości zachowują się tak samo, jak w <xref:System.Windows.Controls.Primitives.Popup>przypadku.</span><span class="sxs-lookup"><span data-stu-id="a02b5-275">These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="a02b5-276">Aby uzyskać więcej informacji, zobacz [zachowanie podczas umieszczania okienka](~/docs/framework/wpf/controls/popup-placement-behavior.md)podręcznego.</span><span class="sxs-lookup"><span data-stu-id="a02b5-276">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="dependencyPropertyInfo_VerticalOffset"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a02b5-277">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="a02b5-277">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a02b5-278">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="a02b5-278">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty>|  
|<span data-ttu-id="a02b5-279">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="a02b5-279">Metadata properties set to `true`</span></span>|<span data-ttu-id="a02b5-280">Brak</span><span class="sxs-lookup"><span data-stu-id="a02b5-280">None</span></span>|  
  
<a name="xamlAttributeUsage_VerticalOffset"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="a02b5-281">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="a02b5-281">XAML Attribute Usage</span></span>  
  
```  
<object VerticalOffset="double"/>  
- or -  
<object VerticalOffset ="qualifiedDouble"/>  
```  
  
<a name="xamlValues_VerticalOffset"></a>   
## <a name="xaml-values"></a><span data-ttu-id="a02b5-282">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="a02b5-282">XAML Values</span></span>  
 <span data-ttu-id="a02b5-283">*double*</span><span class="sxs-lookup"><span data-stu-id="a02b5-283">*double*</span></span>  
 <xref:System.Double>  
  
 <span data-ttu-id="a02b5-284">Reprezentacja wartości w <xref:System.Double> postaci ciągu.</span><span class="sxs-lookup"><span data-stu-id="a02b5-284">String representation of a <xref:System.Double> value.</span></span> <span data-ttu-id="a02b5-285">Jest to interpretowane jako [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] pomiar.</span><span class="sxs-lookup"><span data-stu-id="a02b5-285">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="a02b5-286">Ciągi nie muszą jawnie zawierać punktów dziesiętnych.</span><span class="sxs-lookup"><span data-stu-id="a02b5-286">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="a02b5-287">Na przykład wartość `1` jest akceptowalna.</span><span class="sxs-lookup"><span data-stu-id="a02b5-287">For instance, a value of `1` is acceptable.</span></span> <span data-ttu-id="a02b5-288">Stosuje się <xref:System.Double> te same ograniczenia zakresu, jak wspomniano w sekcji wartość właściwości.</span><span class="sxs-lookup"><span data-stu-id="a02b5-288">The same <xref:System.Double> range restrictions as mentioned in the Property Value section apply.</span></span>  
  
 <span data-ttu-id="a02b5-289">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="a02b5-289">*qualifiedDouble*</span></span>  
 <span data-ttu-id="a02b5-290">Wartość *Podwójna* , jak opisano powyżej, po której następuje jeden z następujących ciągów deklaracji jednostkowej `in`: `cm` `px`, `pt`,,.</span><span class="sxs-lookup"><span data-stu-id="a02b5-290">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="a02b5-291">`px`(wartość domyślna) to[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="a02b5-291">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="a02b5-292">`in` is inches; 1in==96px</span><span class="sxs-lookup"><span data-stu-id="a02b5-292">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="a02b5-293">`cm`jest centymetry; 1cm = = (96/2.54) px</span><span class="sxs-lookup"><span data-stu-id="a02b5-293">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="a02b5-294">`pt`to punkty; 1 pkt = = (96/72) px</span><span class="sxs-lookup"><span data-stu-id="a02b5-294">`pt` is points; 1pt==(96/72) px</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a02b5-295">W wielu przypadkach może być ustawiona wartość autodouble, ale <xref:System.Windows.Controls.ContextMenu> nie jest wyświetlana, jeśli przesunięcia są ustawione na wartość Auto.</span><span class="sxs-lookup"><span data-stu-id="a02b5-295">In many cases a double may be set to Auto, but a <xref:System.Windows.Controls.ContextMenu> does not appear if the offsets are set to Auto.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a02b5-296">Poniższy przykład pokazuje, <xref:System.Windows.Controls.ContextMenu.VerticalOffset%2A> jak używać właściwości, aby <xref:System.Windows.Controls.ContextMenu> spowodować otwarcie w określonej lokalizacji w odniesieniu do jego elementu nadrzędnego przycisku.</span><span class="sxs-lookup"><span data-stu-id="a02b5-296">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.VerticalOffset%2A> property to cause a <xref:System.Windows.Controls.ContextMenu> to open at a specified location in relation to its button parent.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuProps](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuprops)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="VerticalOffsetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VerticalOffsetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VerticalOffsetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.VerticalOffsetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VerticalOffsetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VerticalOffsetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VerticalOffsetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.VerticalOffsetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a02b5-297">Identyfikuje właściwość <see cref="P:System.Windows.Controls.ContextMenu.VerticalOffset" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="a02b5-297">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.VerticalOffset" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
