<Type Name="ContextMenu" FullName="System.Windows.Controls.ContextMenu">
  <Metadata><Meta Name="ms.openlocfilehash" Value="860a77a0486738113b96dc38a386c7b58998f165" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53233136" /></Metadata><TypeSignature Language="C#" Value="public class ContextMenu : System.Windows.Controls.Primitives.MenuBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ContextMenu extends System.Windows.Controls.Primitives.MenuBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ContextMenu" />
  <TypeSignature Language="VB.NET" Value="Public Class ContextMenu&#xA;Inherits MenuBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContextMenu : System::Windows::Controls::Primitives::MenuBase" />
  <TypeSignature Language="F#" Value="type ContextMenu = class&#xA;    inherit MenuBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.MenuBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("Opened")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e6baa-101">Reprezentuje menu podręcznego, który umożliwia kontrolce ujawnienie funkcji, które są specyficzne dla kontekstu kontrolki.</span><span class="sxs-lookup"><span data-stu-id="e6baa-101">Represents a pop-up menu that enables a control to expose functionality that is specific to the context of the control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6baa-102"><xref:System.Windows.Controls.ContextMenu> jest <xref:System.Windows.Controls.ItemsControl>, co oznacza, że może zawierać zbiór obiektów dowolnego typu (na przykład ciąg, obrazu lub panelu).</span><span class="sxs-lookup"><span data-stu-id="e6baa-102"><xref:System.Windows.Controls.ContextMenu> is an <xref:System.Windows.Controls.ItemsControl>, which means it can contain a collection of objects of any type (such as string, image, or panel).</span></span> <span data-ttu-id="e6baa-103">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Controls.ItemsControl> klasy.</span><span class="sxs-lookup"><span data-stu-id="e6baa-103">For more information, see the <xref:System.Windows.Controls.ItemsControl> class.</span></span>  
  
 <span data-ttu-id="e6baa-104">Właściwości <xref:System.Windows.Controls.ContextMenu> klasy są używane do definiowania pozycji i zachowanie <xref:System.Windows.Controls.ContextMenu>.</span><span class="sxs-lookup"><span data-stu-id="e6baa-104">The properties of the <xref:System.Windows.Controls.ContextMenu> class are used to define the position and behavior of the <xref:System.Windows.Controls.ContextMenu>.</span></span>  
  
 <span data-ttu-id="e6baa-105">A <xref:System.Windows.FrameworkElement> lub <xref:System.Windows.FrameworkContentElement> może mieć <xref:System.Windows.Controls.ContextMenu>.</span><span class="sxs-lookup"><span data-stu-id="e6baa-105">A <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> can have a <xref:System.Windows.Controls.ContextMenu>.</span></span>  <span data-ttu-id="e6baa-106">Jeśli przypiszesz <xref:System.Windows.Controls.ContextMenu> do <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> lub <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> właściwości <xref:System.Windows.Controls.ContextMenuService> klasy obsługuje operacje menu kontekstowego w odpowiedzi na interakcję z użytkownikiem.</span><span class="sxs-lookup"><span data-stu-id="e6baa-106">If you assign a <xref:System.Windows.Controls.ContextMenu> to the <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> property, the <xref:System.Windows.Controls.ContextMenuService> class handles context menu operations in response to user interaction.</span></span> <span data-ttu-id="e6baa-107">Część pracy <xref:System.Windows.Controls.ContextMenuService> jest otwiera <xref:System.Windows.Controls.ContextMenu> po użytkownik kliknie prawym przyciskiem myszy nad formantem.</span><span class="sxs-lookup"><span data-stu-id="e6baa-107">Part of the work the <xref:System.Windows.Controls.ContextMenuService> does is opening the <xref:System.Windows.Controls.ContextMenu> when the user clicks the right mouse button over the control.</span></span>  
  
 <span data-ttu-id="e6baa-108">Następujące właściwości są definiowane przez <xref:System.Windows.Controls.ContextMenu> i <xref:System.Windows.Controls.ContextMenuService> klasy.</span><span class="sxs-lookup"><span data-stu-id="e6baa-108">The following properties are defined by the <xref:System.Windows.Controls.ContextMenu> and <xref:System.Windows.Controls.ContextMenuService> classes.</span></span>  <span data-ttu-id="e6baa-109">Jeśli dowolne z tych właściwości są ustawione na obu <xref:System.Windows.Controls.ContextMenu> i <xref:System.Windows.Controls.ContextMenuService>, wartość właściwości <xref:System.Windows.Controls.ContextMenuService> jest używany.</span><span class="sxs-lookup"><span data-stu-id="e6baa-109">If any of these properties are set on both <xref:System.Windows.Controls.ContextMenu> and the <xref:System.Windows.Controls.ContextMenuService>, the property value from the <xref:System.Windows.Controls.ContextMenuService> is used.</span></span>  
  
-   <xref:System.Windows.Controls.ContextMenu.Placement%2A>  
  
-   <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>  
  
-   <xref:System.Windows.Controls.ContextMenu.PlacementTargetProperty>  
  
-   <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>  
  
-   <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty>  
  
-   <xref:System.Windows.Controls.ContextMenu.HasDropShadow%2A>  
  
 <span data-ttu-id="e6baa-110">A <xref:System.Windows.Controls.ContextMenu> automatycznie jest umieszczony wewnątrz <xref:System.Windows.Controls.Primitives.Popup> kontroli.</span><span class="sxs-lookup"><span data-stu-id="e6baa-110">A <xref:System.Windows.Controls.ContextMenu> is automatically placed inside a <xref:System.Windows.Controls.Primitives.Popup> control.</span></span> <span data-ttu-id="e6baa-111">Nie można zmienić to zachowanie.</span><span class="sxs-lookup"><span data-stu-id="e6baa-111">This behavior cannot be changed.</span></span>  
  
## <a name="customizing-the-contextmenu-control"></a><span data-ttu-id="e6baa-112">Dostosowywanie formantu ContextMenu</span><span class="sxs-lookup"><span data-stu-id="e6baa-112">Customizing the ContextMenu Control</span></span>  
 <span data-ttu-id="e6baa-113">Aby zastosować te same ustawienia właściwości z wieloma <xref:System.Windows.Controls.ContextMenu> kontrolki, używać <xref:System.Windows.FrameworkElement.Style%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="e6baa-113">To apply the same property settings to multiple <xref:System.Windows.Controls.ContextMenu> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="e6baa-114">Można zmodyfikować domyślne <xref:System.Windows.Controls.ControlTemplate> zapewnienie unikatowego wyglądu kontrolki.</span><span class="sxs-lookup"><span data-stu-id="e6baa-114">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="e6baa-115">Aby uzyskać więcej informacji o tworzeniu <xref:System.Windows.Controls.ControlTemplate>, zobacz [Dostosowywanie wyglądu istniejącego formantu przez stworzenie ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="e6baa-115">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="e6baa-116">Aby zobaczyć elementy i Stany, które są specyficzne dla <xref:System.Windows.Controls.ContextMenu>, zobacz [ContextMenu — style i szablony](~/docs/framework/wpf/controls/contextmenu-styles-and-templates.md).</span><span class="sxs-lookup"><span data-stu-id="e6baa-116">To see the parts and states that are specific to the <xref:System.Windows.Controls.ContextMenu>, see [ContextMenu Styles and Templates](~/docs/framework/wpf/controls/contextmenu-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="e6baa-117">Właściwości zależności dla tego formantu może być ustawione przez domyślnego stylu.</span><span class="sxs-lookup"><span data-stu-id="e6baa-117">Dependency properties for this control might be set by the control's default style.</span></span>  <span data-ttu-id="e6baa-118">Jeśli właściwość jest ustawiana przez domyślnego stylu, zmienić właściwość z jego wartość domyślną gdy formant ma być wyświetlany w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="e6baa-118">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="e6baa-119">Domyślny styl jest określona, przez który motyw pulpitu jest używany podczas działania aplikacji.</span><span class="sxs-lookup"><span data-stu-id="e6baa-119">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="e6baa-120">Aby uzyskać więcej informacji, zobacz [domyślne motywy WPF](https://go.microsoft.com/fwlink/?LinkID=158252).</span><span class="sxs-lookup"><span data-stu-id="e6baa-120">For more information, see [Default WPF Themes](https://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e6baa-121">Ustawienie wartości właściwości wizualnej będzie miał wpływ tylko jeśli ta właściwość jest obecny w <xref:System.Windows.Controls.ContextMenu> kontrolki użytkownika domyślnego szablonu i ustawić za pomocą.</span><span class="sxs-lookup"><span data-stu-id="e6baa-121">Setting a visual property will only have an effect if that property is both present in <xref:System.Windows.Controls.ContextMenu> control's default template and is set by using a .</span></span> <span data-ttu-id="e6baa-122">Lista właściwości visual można znaleźć w sekcji "Zmiana Visual struktury z Control" [Dostosowywanie wyglądu istniejącego formantu przez stworzenie ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="e6baa-122">You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6baa-123">Poniższy przykład tworzy <xref:System.Windows.Controls.ContextMenu> które zmienia tekst <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="e6baa-123">The following example creates a <xref:System.Windows.Controls.ContextMenu> that manipulates the text of a <xref:System.Windows.Controls.TextBox>.</span></span>  <span data-ttu-id="e6baa-124">W przykładzie pokazano, jak subskrybować i obsługi zdarzeń <xref:System.Windows.Controls.MenuItem> obiekty w <xref:System.Windows.Controls.ContextMenu>.</span><span class="sxs-lookup"><span data-stu-id="e6baa-124">The example demonstrates how to subscribe to and handle the events of <xref:System.Windows.Controls.MenuItem> objects in a <xref:System.Windows.Controls.ContextMenu>.</span></span>  
  
 [!code-xaml[ContextMenu#Events](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#events)]  
  
 [!code-csharp[MenuItemCommandsAndEvents#2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml.cs#2)]
 [!code-vb[MenuItemCommandsAndEvents#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItemCommandsAndEvents/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.ContextMenuService" />
    <altmember cref="T:System.Windows.Controls.MenuItem" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextMenu();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e6baa-125">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Controls.ContextMenu" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="e6baa-125">Initializes a new instance of the <see cref="T:System.Windows.Controls.ContextMenu" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Closed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Closed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.ContextMenu.Closed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closed As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Closed;" />
      <MemberSignature Language="F#" Value="member this.Closed : System.Windows.RoutedEventHandler " Usage="member this.Closed : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6baa-126">Występuje, gdy konkretnego wystąpienia <see cref="T:System.Windows.Controls.ContextMenu" /> zostanie zamknięty.</span><span class="sxs-lookup"><span data-stu-id="e6baa-126">Occurs when a particular instance of a <see cref="T:System.Windows.Controls.ContextMenu" /> closes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_Closed"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="e6baa-127">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="e6baa-127">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e6baa-128">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="e6baa-128">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.ClosedEvent>|  
|<span data-ttu-id="e6baa-129">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="e6baa-129">Routing strategy</span></span>|<span data-ttu-id="e6baa-130">Propagacja</span><span class="sxs-lookup"><span data-stu-id="e6baa-130">Bubbling</span></span>|  
|<span data-ttu-id="e6baa-131">Delegate</span><span class="sxs-lookup"><span data-stu-id="e6baa-131">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="e6baa-132">Poniższy przykład pokazuje jak używać <xref:System.Windows.Controls.ContextMenu> zdarzenia: <xref:System.Windows.Controls.ContextMenu.Opened> i <xref:System.Windows.Controls.ContextMenu.Closed>.</span><span class="sxs-lookup"><span data-stu-id="e6baa-132">The following example shows how use the <xref:System.Windows.Controls.ContextMenu> events: <xref:System.Windows.Controls.ContextMenu.Opened> and <xref:System.Windows.Controls.ContextMenu.Closed>.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuevents)]  
  
 [!code-csharp[ContextMenu#ContextMenuEventHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml.cs#contextmenueventhandlers)]
 [!code-vb[ContextMenu#ContextMenuEventHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContextMenu/VisualBasic/Pane1.xaml.vb#contextmenueventhandlers)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="ClosedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ClosedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ClosedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.ClosedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClosedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ClosedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClosedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.ContextMenu.ClosedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6baa-133">Identyfikuje <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="e6baa-133">Identifies the <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomPopupPlacementCallback">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Primitives.CustomPopupPlacementCallback CustomPopupPlacementCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.Primitives.CustomPopupPlacementCallback CustomPopupPlacementCallback" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomPopupPlacementCallback As CustomPopupPlacementCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Primitives::CustomPopupPlacementCallback ^ CustomPopupPlacementCallback { System::Windows::Controls::Primitives::CustomPopupPlacementCallback ^ get(); void set(System::Windows::Controls::Primitives::CustomPopupPlacementCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomPopupPlacementCallback : System.Windows.Controls.Primitives.CustomPopupPlacementCallback with get, set" Usage="System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.CustomPopupPlacementCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6baa-134">Pobiera lub ustawia wywołanie zwrotne wskazujące, gdzie <see cref="T:System.Windows.Controls.ContextMenu" /> powinny zostać umieszczone na ekranie.</span><span class="sxs-lookup"><span data-stu-id="e6baa-134">Gets or sets a callback that indicates where a <see cref="T:System.Windows.Controls.ContextMenu" /> should be placed on the screen.</span></span></summary>
        <value><span data-ttu-id="e6baa-135">Wywołanie zwrotne, które określa lokalizację <see cref="T:System.Windows.Controls.ContextMenu" />.</span><span class="sxs-lookup"><span data-stu-id="e6baa-135">A callback that specifies the location of the <see cref="T:System.Windows.Controls.ContextMenu" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6baa-136"><xref:System.Windows.Controls.ContextMenu.Placement%2A> Właściwość musi być równa <xref:System.Windows.Controls.Primitives.PlacementMode.Custom> dla delegata wywołania zwrotnego, która ma być używany.</span><span class="sxs-lookup"><span data-stu-id="e6baa-136">The <xref:System.Windows.Controls.ContextMenu.Placement%2A> property must be set to <xref:System.Windows.Controls.Primitives.PlacementMode.Custom> for the callback delegate to be used.</span></span>  
  
 <span data-ttu-id="e6baa-137"><xref:System.Windows.Controls.Primitives.CustomPopupPlacementCallback> Delegata zwraca informacje o możliwych punktów, które są zdefiniowane w odniesieniu do <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>.</span><span class="sxs-lookup"><span data-stu-id="e6baa-137">The <xref:System.Windows.Controls.Primitives.CustomPopupPlacementCallback> delegate returns an array of possible points that are defined with respect to the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>.</span></span> <span data-ttu-id="e6baa-138">Po wyświetleniu menu kontekstowe punktu wybrano, który maksymalizuje stopień <xref:System.Windows.Controls.ToolTip> okna, który jest widoczny.</span><span class="sxs-lookup"><span data-stu-id="e6baa-138">When the context menu is displayed, a point is chosen that maximizes the amount of the <xref:System.Windows.Controls.ToolTip> window that is visible.</span></span>  
  
 <span data-ttu-id="e6baa-139">Zachowanie jest taka sama, jak w przypadku menu podręcznego.</span><span class="sxs-lookup"><span data-stu-id="e6baa-139">The behavior is the same as it is for the popup.</span></span>  <span data-ttu-id="e6baa-140">Aby uzyskać więcej informacji, zobacz [jak: Określ niestandardowe położenie okna podręcznego](~/docs/framework/wpf/controls/how-to-specify-a-custom-popup-position.md) i [przykładowe położenia okna podręcznego](https://go.microsoft.com/fwlink/?LinkID=160032).</span><span class="sxs-lookup"><span data-stu-id="e6baa-140">For more information, see [How to: Specify a Custom Popup Position](~/docs/framework/wpf/controls/how-to-specify-a-custom-popup-position.md) and [Popup Placement Sample](https://go.microsoft.com/fwlink/?LinkID=160032).</span></span>  
  
<a name="dependencyPropertyInfo_CustomPopupPlacementCallback"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="e6baa-141">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="e6baa-141">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e6baa-142">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="e6baa-142">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty>|  
|<span data-ttu-id="e6baa-143">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="e6baa-143">Metadata properties set to `true`</span></span>|<span data-ttu-id="e6baa-144">Brak</span><span class="sxs-lookup"><span data-stu-id="e6baa-144">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomPopupPlacementCallbackProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CustomPopupPlacementCallbackProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CustomPopupPlacementCallbackProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CustomPopupPlacementCallbackProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CustomPopupPlacementCallbackProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CustomPopupPlacementCallbackProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6baa-145">Identyfikuje <see cref="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="e6baa-145">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlesScrolling">
      <MemberSignature Language="C#" Value="protected internal override bool HandlesScrolling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HandlesScrolling" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.HandlesScrolling" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property HandlesScrolling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HandlesScrolling { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HandlesScrolling : bool" Usage="System.Windows.Controls.ContextMenu.HandlesScrolling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6baa-146">Pobiera wartość wskazującą, czy kontrolka obsługuje przewijania.</span><span class="sxs-lookup"><span data-stu-id="e6baa-146">Gets a value that indicates whether the control supports scrolling.</span></span></summary>
        <value><span data-ttu-id="e6baa-147">Zawsze <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="e6baa-147">Always <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6baa-148">Jeśli kontrolka ma <xref:System.Windows.Controls.ScrollViewer> w jego styl i ma klawiatury niestandardowej przewijanie zachowanie <xref:System.Windows.Controls.ListBox.HandlesScrolling%2A> powinna zwrócić `true`.</span><span class="sxs-lookup"><span data-stu-id="e6baa-148">If the control has a <xref:System.Windows.Controls.ScrollViewer> in its style and has a custom keyboard scrolling behavior, <xref:System.Windows.Controls.ListBox.HandlesScrolling%2A> should return `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDropShadow">
      <MemberSignature Language="C#" Value="public bool HasDropShadow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasDropShadow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.HasDropShadow" />
      <MemberSignature Language="VB.NET" Value="Public Property HasDropShadow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasDropShadow { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HasDropShadow : bool with get, set" Usage="System.Windows.Controls.ContextMenu.HasDropShadow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6baa-149">Pobiera lub ustawia wartość wskazującą, czy menu kontekstowe pojawia się przy użyciu porzuconych w tle.</span><span class="sxs-lookup"><span data-stu-id="e6baa-149">Gets or sets a value that indicates whether the context menu appears with a dropped shadow.</span></span></summary>
        <value><span data-ttu-id="e6baa-150"><see langword="true" /> Jeśli zostanie wyświetlone menu kontekstowe z cieniem porzuconych; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e6baa-150"><see langword="true" /> if the context menu appears with a dropped shadow; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e6baa-151">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e6baa-151">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6baa-152">Gdy <xref:System.Windows.Controls.ContextMenu> zostanie otwarta, wartość jest równa wartości <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e6baa-152">When the <xref:System.Windows.Controls.ContextMenu> opens, the value is set to the value of <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e6baa-153">Ustawienie tej właściwości na `true` nie ma wpływu Jeśli <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType> właściwość `false`.</span><span class="sxs-lookup"><span data-stu-id="e6baa-153">Setting this property to `true` has no effect if the <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType> property is `false`.</span></span>  
  
<a name="dependencyPropertyInfo_"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="e6baa-154">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="e6baa-154">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e6baa-155">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="e6baa-155">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.HasDropShadowProperty>|  
|<span data-ttu-id="e6baa-156">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="e6baa-156">Metadata properties set to `true`</span></span>|<span data-ttu-id="e6baa-157">Brak</span><span class="sxs-lookup"><span data-stu-id="e6baa-157">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e6baa-158">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Controls.ContextMenu.HasDropShadow%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="e6baa-158">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.HasDropShadow%2A> property.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuProps](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuprops)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="HasDropShadowProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HasDropShadowProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HasDropShadowProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.HasDropShadowProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HasDropShadowProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HasDropShadowProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HasDropShadowProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.HasDropShadowProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6baa-159">Identyfikuje <see cref="P:System.Windows.Controls.ContextMenu.HasDropShadow" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="e6baa-159">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.HasDropShadow" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalOffset">
      <MemberSignature Language="C#" Value="public double HorizontalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 HorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.HorizontalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double HorizontalOffset { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalOffset : double with get, set" Usage="System.Windows.Controls.ContextMenu.HorizontalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6baa-160">Pobiera lub ustawia poziomy odległość między target punkt początkowy i wyrównanie okno podręczne punktu.</span><span class="sxs-lookup"><span data-stu-id="e6baa-160">Get or sets the horizontal distance between the target origin and the popup alignment point.</span></span></summary>
        <value><span data-ttu-id="e6baa-161">Odległość w poziomie między target punkt początkowy i punkt wyrównania okna podręcznego.</span><span class="sxs-lookup"><span data-stu-id="e6baa-161">The horizontal distance between the target origin and the popup alignment point.</span></span> <span data-ttu-id="e6baa-162">Aby uzyskać informacji na temat docelowy punkt wyrównania pochodzenia i okno podręczne, zobacz [zachowanie położenia okna podręcznego](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span><span class="sxs-lookup"><span data-stu-id="e6baa-162">For information about the target origin and popup alignment point, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span> <span data-ttu-id="e6baa-163">Wartość domyślna to 0.</span><span class="sxs-lookup"><span data-stu-id="e6baa-163">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6baa-164">Można umieścić <xref:System.Windows.Controls.ContextMenu> , ustawiając <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, i <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> właściwości.</span><span class="sxs-lookup"><span data-stu-id="e6baa-164">You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.</span></span>  <span data-ttu-id="e6baa-165">Te właściwości działa tak samo jak w przypadku <xref:System.Windows.Controls.Primitives.Popup>.</span><span class="sxs-lookup"><span data-stu-id="e6baa-165">These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="e6baa-166">Aby uzyskać więcej informacji, zobacz [zachowanie położenia okna podręcznego](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span><span class="sxs-lookup"><span data-stu-id="e6baa-166">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="dependencyPropertyInfo_HorizontalOffset"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="e6baa-167">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="e6baa-167">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e6baa-168">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="e6baa-168">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.HorizontalOffsetProperty>|  
|<span data-ttu-id="e6baa-169">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="e6baa-169">Metadata properties set to `true`</span></span>|<span data-ttu-id="e6baa-170">Brak</span><span class="sxs-lookup"><span data-stu-id="e6baa-170">None</span></span>|  
  
<a name="xamlAttributeUsage_HorizontalOffset"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="e6baa-171">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="e6baa-171">XAML Attribute Usage</span></span>  
  
```  
<object HorizontalOffset="double"/>  
- or -  
<object HorizontalOffset ="qualifiedDouble"/>  
```  
  
<a name="xamlValues_HorizontalOffset"></a>   
## <a name="xaml-values"></a><span data-ttu-id="e6baa-172">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="e6baa-172">XAML Values</span></span>  
 <span data-ttu-id="e6baa-173">*double*</span><span class="sxs-lookup"><span data-stu-id="e6baa-173">*double*</span></span>  
 <xref:System.Double>  
  
 <span data-ttu-id="e6baa-174">Ciąg reprezentujący <xref:System.Double> wartość.</span><span class="sxs-lookup"><span data-stu-id="e6baa-174">String representation of a <xref:System.Double> value.</span></span> <span data-ttu-id="e6baa-175">To jest interpretowane jako [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] miary.</span><span class="sxs-lookup"><span data-stu-id="e6baa-175">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="e6baa-176">Ciągi nie musi jawnie zawierać separatorów dziesiętnych.</span><span class="sxs-lookup"><span data-stu-id="e6baa-176">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="e6baa-177">Na przykład wartość `1` jest dopuszczalna.</span><span class="sxs-lookup"><span data-stu-id="e6baa-177">For instance a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="e6baa-178">Taki sam <xref:System.Double> obowiązują ograniczenia zakresu, zgodnie z opisem w sekcji wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="e6baa-178">The same <xref:System.Double> range restrictions as mentioned in the Property Value section apply.</span></span>  
  
 <span data-ttu-id="e6baa-179">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="e6baa-179">*qualifiedDouble*</span></span>  
 <span data-ttu-id="e6baa-180">A *double* wartość zgodnie z opisem powyżej, a następnie za pomocą jednej z następujących ciągów jednostki w deklaracji: `px`, `in`, `cm`, `pt`.</span><span class="sxs-lookup"><span data-stu-id="e6baa-180">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="e6baa-181">`px` (domyślnie) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="e6baa-181">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="e6baa-182">`in` is inches; 1in==96px</span><span class="sxs-lookup"><span data-stu-id="e6baa-182">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="e6baa-183">`cm` centymetrów; 1cm==(96/2.54) piks.</span><span class="sxs-lookup"><span data-stu-id="e6baa-183">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="e6baa-184">`pt` jest punktów. 1pt==(96/72) piks.</span><span class="sxs-lookup"><span data-stu-id="e6baa-184">`pt` is points; 1pt==(96/72) px</span></span>  
  
 <span data-ttu-id="e6baa-185">**Uwaga** w wielu przypadkach wartość o podwójnej precyzji, może być ustawiona na automatyczne, ale <xref:System.Windows.Controls.ContextMenu> nie są wyświetlane, gdy przesunięcia są ustawione na Auto.</span><span class="sxs-lookup"><span data-stu-id="e6baa-185">**Note** In many cases a double may be set to Auto but a <xref:System.Windows.Controls.ContextMenu> will not appear if the offsets are set to Auto.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6baa-186">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A> właściwość, aby spowodować, że <xref:System.Windows.Controls.ContextMenu> można otworzyć w określonej lokalizacji w odniesieniu do jego elementu nadrzędnego przycisku.</span><span class="sxs-lookup"><span data-stu-id="e6baa-186">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A> property to cause a <xref:System.Windows.Controls.ContextMenu> to open at a specified location in relation to its button parent.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuProps](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuprops)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalOffsetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HorizontalOffsetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HorizontalOffsetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.HorizontalOffsetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HorizontalOffsetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HorizontalOffsetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HorizontalOffsetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.HorizontalOffsetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6baa-187">Identyfikuje <see cref="P:System.Windows.Controls.ContextMenu.HorizontalOffset" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="e6baa-187">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.HorizontalOffset" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOpen">
      <MemberSignature Language="C#" Value="public bool IsOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.IsOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property IsOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOpen { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsOpen : bool with get, set" Usage="System.Windows.Controls.ContextMenu.IsOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6baa-188">Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Windows.Controls.ContextMenu" /> jest widoczna.</span><span class="sxs-lookup"><span data-stu-id="e6baa-188">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ContextMenu" /> is visible.</span></span></summary>
        <value><span data-ttu-id="e6baa-189"><see langword="true" /> Jeśli <see cref="T:System.Windows.Controls.ContextMenu" /> jest widoczny; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e6baa-189"><see langword="true" /> if the <see cref="T:System.Windows.Controls.ContextMenu" /> is visible; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e6baa-190">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e6baa-190">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6baa-191">Gdy <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> ustawiono `true`, przechwytywanie myszy jest ustawiona na <xref:System.Windows.Controls.ContextMenu> i jego poddrzewa.</span><span class="sxs-lookup"><span data-stu-id="e6baa-191">When <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> is set to `true`, mouse capture is set to the <xref:System.Windows.Controls.ContextMenu> and its subtree.</span></span>  
  
<a name="dependencyPropertyInfo_IsOpen"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="e6baa-192">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="e6baa-192">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e6baa-193">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="e6baa-193">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.IsOpenProperty>|  
|<span data-ttu-id="e6baa-194">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="e6baa-194">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="e6baa-195">W tym przykładzie pokazano, jak sprawdzić, czy <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> właściwość jest ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="e6baa-195">This example shows how to check to determine whether the <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> property is set to `true`.</span></span>  
  
 [!code-csharp[ContextMenu#ContextMenuIsOpen](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml.cs#contextmenuisopen)]
 [!code-vb[ContextMenu#ContextMenuIsOpen](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContextMenu/VisualBasic/Pane1.xaml.vb#contextmenuisopen)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="IsOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.IsOpenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsOpenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsOpenProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsOpenProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.IsOpenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6baa-196">Identyfikuje <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="e6baa-196">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnClosed (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosed(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnClosed(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosed (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosed(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClosed : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnClosed : System.Windows.RoutedEventArgs -&gt; unit" Usage="contextMenu.OnClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="e6baa-197">Dane zdarzeń dla <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="e6baa-197">The event data for the <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> event.</span></span></param>
        <summary><span data-ttu-id="e6baa-198">Wywoływane, gdy <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> wystąpi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="e6baa-198">Called when the <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> event occurs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="contextMenu.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e6baa-199">Tworzy i zwraca <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> obiektu dla tej <see cref="T:System.Windows.Controls.ContextMenu" />.</span><span class="sxs-lookup"><span data-stu-id="e6baa-199">Creates and returns a <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> object for this <see cref="T:System.Windows.Controls.ContextMenu" />.</span></span></summary>
        <returns><span data-ttu-id="e6baa-200">A <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> obiektu dla tej <see cref="T:System.Windows.Controls.ContextMenu" />.</span><span class="sxs-lookup"><span data-stu-id="e6baa-200">A <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> object for this <see cref="T:System.Windows.Controls.ContextMenu" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contextMenu.OnIsKeyboardFocusWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="e6baa-201">Dane zdarzeń dla <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="e6baa-201">The event data for the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> event.</span></span></param>
        <summary><span data-ttu-id="e6baa-202">Informuje, że <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> zmiany właściwości.</span><span class="sxs-lookup"><span data-stu-id="e6baa-202">Reports that the <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> property changed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contextMenu.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="e6baa-203">Dane zdarzeń dla <see cref="E:System.Windows.UIElement.KeyDown" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="e6baa-203">The event data for the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</span></span></param>
        <summary><span data-ttu-id="e6baa-204">Wywoływane, gdy <see cref="E:System.Windows.ContentElement.KeyDown" /> zdarzenie jest zgłaszane w obiekcie wewnątrz właściwości <see cref="T:System.Windows.Controls.ContextMenu" />.</span><span class="sxs-lookup"><span data-stu-id="e6baa-204">Called when a <see cref="E:System.Windows.ContentElement.KeyDown" /> event is raised by an object inside the <see cref="T:System.Windows.Controls.ContextMenu" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contextMenu.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="e6baa-205">Dane zdarzeń dla <see cref="E:System.Windows.UIElement.KeyUp" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="e6baa-205">The event data for the <see cref="E:System.Windows.UIElement.KeyUp" /> event.</span></span></param>
        <summary><span data-ttu-id="e6baa-206">Odpowiada <see cref="E:System.Windows.ContentElement.KeyUp" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="e6baa-206">Responds to the <see cref="E:System.Windows.ContentElement.KeyUp" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOpened">
      <MemberSignature Language="C#" Value="protected virtual void OnOpened (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnOpened(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnOpened(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnOpened (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnOpened(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnOpened : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnOpened : System.Windows.RoutedEventArgs -&gt; unit" Usage="contextMenu.OnOpened e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="e6baa-207">Dane zdarzeń dla <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="e6baa-207">The event data for the <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> event.</span></span></param>
        <summary><span data-ttu-id="e6baa-208">Wywoływane, gdy <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> wystąpi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="e6baa-208">Called when the <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> event occurs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberSignature Language="F#" Value="override this.OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit" Usage="contextMenu.OnVisualParentChanged oldParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent"><span data-ttu-id="e6baa-209">Obiekt, który menu kontekstowe wcześniej został dołączony do.</span><span class="sxs-lookup"><span data-stu-id="e6baa-209">The object that the context menu was previously attached to.</span></span></param>
        <summary><span data-ttu-id="e6baa-210">Wywołuje się, gdy zmieni się menu kontekstowe nadrzędnego visual.</span><span class="sxs-lookup"><span data-stu-id="e6baa-210">Called when a context menu's visual parent changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Opened">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Opened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Opened" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.ContextMenu.Opened" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Opened As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Opened;" />
      <MemberSignature Language="F#" Value="member this.Opened : System.Windows.RoutedEventHandler " Usage="member this.Opened : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6baa-211">Występuje po otwarciu konkretnego wystąpienia menu kontekstowego.</span><span class="sxs-lookup"><span data-stu-id="e6baa-211">Occurs when a particular instance of a context menu opens.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_Opened"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="e6baa-212">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="e6baa-212">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e6baa-213">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="e6baa-213">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.OpenedEvent>|  
|<span data-ttu-id="e6baa-214">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="e6baa-214">Routing strategy</span></span>|<span data-ttu-id="e6baa-215">Propagacja</span><span class="sxs-lookup"><span data-stu-id="e6baa-215">Bubbling</span></span>|  
|<span data-ttu-id="e6baa-216">Delegate</span><span class="sxs-lookup"><span data-stu-id="e6baa-216">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="e6baa-217">Poniższy przykład pokazuje jak używać <xref:System.Windows.Controls.ContextMenu> zdarzenia: <xref:System.Windows.Controls.ContextMenu.Opened> i <xref:System.Windows.Controls.ContextMenu.Closed>.</span><span class="sxs-lookup"><span data-stu-id="e6baa-217">The following example shows how use the <xref:System.Windows.Controls.ContextMenu> events: <xref:System.Windows.Controls.ContextMenu.Opened> and <xref:System.Windows.Controls.ContextMenu.Closed>.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuevents)]  
  
 [!code-csharp[ContextMenu#ContextMenuEventHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml.cs#contextmenueventhandlers)]
 [!code-vb[ContextMenu#ContextMenuEventHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContextMenu/VisualBasic/Pane1.xaml.vb#contextmenueventhandlers)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="OpenedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent OpenedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent OpenedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.OpenedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OpenedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ OpenedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable OpenedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.ContextMenu.OpenedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6baa-218">Identyfikuje <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="e6baa-218">Identifies the <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Placement">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Primitives.PlacementMode Placement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Primitives.PlacementMode Placement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.Placement" />
      <MemberSignature Language="VB.NET" Value="Public Property Placement As PlacementMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Primitives::PlacementMode Placement { System::Windows::Controls::Primitives::PlacementMode get(); void set(System::Windows::Controls::Primitives::PlacementMode value); };" />
      <MemberSignature Language="F#" Value="member this.Placement : System.Windows.Controls.Primitives.PlacementMode with get, set" Usage="System.Windows.Controls.ContextMenu.Placement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.PlacementMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6baa-219">Pobiera lub ustawia <see cref="P:System.Windows.Controls.ContextMenu.Placement" /> właściwość <see cref="T:System.Windows.Controls.ContextMenu" />.</span><span class="sxs-lookup"><span data-stu-id="e6baa-219">Gets or sets the <see cref="P:System.Windows.Controls.ContextMenu.Placement" /> property of a <see cref="T:System.Windows.Controls.ContextMenu" />.</span></span></summary>
        <value><span data-ttu-id="e6baa-220">Jedną z <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e6baa-220">One of the <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> enumeration.</span></span> <span data-ttu-id="e6baa-221">Wartość domyślna to <see cref="F:System.Windows.Controls.Primitives.PlacementMode.MousePoint" />.</span><span class="sxs-lookup"><span data-stu-id="e6baa-221">The default is <see cref="F:System.Windows.Controls.Primitives.PlacementMode.MousePoint" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6baa-222">Gdy <xref:System.Windows.Controls.ContextMenu> jest przypisany do <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> lub <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> właściwości <xref:System.Windows.Controls.ContextMenuService> zmiany tej wartości tej właściwości podczas <xref:System.Windows.Controls.ContextMenu> zostanie otwarty.</span><span class="sxs-lookup"><span data-stu-id="e6baa-222">When the <xref:System.Windows.Controls.ContextMenu> is assigned to the <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> property, the <xref:System.Windows.Controls.ContextMenuService> changes this value of this property when the <xref:System.Windows.Controls.ContextMenu> opens.</span></span> <span data-ttu-id="e6baa-223">Jeśli użytkownik otwiera <xref:System.Windows.Controls.ContextMenu> za pomocą myszy <xref:System.Windows.Controls.ContextMenu.Placement%2A> ustawiono <xref:System.Windows.Controls.Primitives.PlacementMode.MousePoint>.</span><span class="sxs-lookup"><span data-stu-id="e6baa-223">If the user opens the <xref:System.Windows.Controls.ContextMenu> by using the mouse, <xref:System.Windows.Controls.ContextMenu.Placement%2A> is set to <xref:System.Windows.Controls.Primitives.PlacementMode.MousePoint>.</span></span>  <span data-ttu-id="e6baa-224">Jeśli użytkownik otwiera <xref:System.Windows.Controls.ContextMenu> za pomocą klawiatury, <xref:System.Windows.Controls.ContextMenu.Placement%2A> ustawiono <xref:System.Windows.Controls.Primitives.PlacementMode.Center>.</span><span class="sxs-lookup"><span data-stu-id="e6baa-224">If the user opens the <xref:System.Windows.Controls.ContextMenu> by using the keyboard, <xref:System.Windows.Controls.ContextMenu.Placement%2A> is set to <xref:System.Windows.Controls.Primitives.PlacementMode.Center>.</span></span>  <span data-ttu-id="e6baa-225">Jeśli chcesz zmienić położenie <xref:System.Windows.Controls.ContextMenu>ustaw <xref:System.Windows.Controls.ContextMenuService.Placement%2A?displayProperty=nameWithType> właściwość <xref:System.Windows.FrameworkElement> lub <xref:System.Windows.FrameworkContentElement>.</span><span class="sxs-lookup"><span data-stu-id="e6baa-225">If you want to change the position of the <xref:System.Windows.Controls.ContextMenu>, set the <xref:System.Windows.Controls.ContextMenuService.Placement%2A?displayProperty=nameWithType> property on the <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span>  
  
 <span data-ttu-id="e6baa-226">Można umieścić <xref:System.Windows.Controls.ContextMenu> , ustawiając <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, i <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> właściwości.</span><span class="sxs-lookup"><span data-stu-id="e6baa-226">You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.</span></span>  <span data-ttu-id="e6baa-227">Te właściwości działa tak samo jak w przypadku <xref:System.Windows.Controls.Primitives.Popup>.</span><span class="sxs-lookup"><span data-stu-id="e6baa-227">These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="e6baa-228">Aby uzyskać więcej informacji, zobacz [zachowanie położenia okna podręcznego](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span><span class="sxs-lookup"><span data-stu-id="e6baa-228">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="dependencyPropertyInfo_Placement"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="e6baa-229">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="e6baa-229">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e6baa-230">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="e6baa-230">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.PlacementProperty>|  
|<span data-ttu-id="e6baa-231">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="e6baa-231">Metadata properties set to `true`</span></span>|<span data-ttu-id="e6baa-232">Brak</span><span class="sxs-lookup"><span data-stu-id="e6baa-232">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e6baa-233">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Controls.ContextMenu.Placement%2A> właściwość i tryb umieszczania, aby określić, gdzie <xref:System.Windows.Controls.ContextMenu> znajduje.</span><span class="sxs-lookup"><span data-stu-id="e6baa-233">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.Placement%2A> property and a placement mode to specify where the <xref:System.Windows.Controls.ContextMenu> is placed.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuPlacement](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuplacement)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="PlacementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PlacementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PlacementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.PlacementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PlacementProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PlacementProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PlacementProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.PlacementProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6baa-234">Identyfikuje <see cref="P:System.Windows.Controls.ContextMenu.Placement" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="e6baa-234">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.Placement" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlacementRectangle">
      <MemberSignature Language="C#" Value="public System.Windows.Rect PlacementRectangle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Rect PlacementRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.PlacementRectangle" />
      <MemberSignature Language="VB.NET" Value="Public Property PlacementRectangle As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Rect PlacementRectangle { System::Windows::Rect get(); void set(System::Windows::Rect value); };" />
      <MemberSignature Language="F#" Value="member this.PlacementRectangle : System.Windows.Rect with get, set" Usage="System.Windows.Controls.ContextMenu.PlacementRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6baa-235">Pobiera lub ustawia obszar, względem którego menu kontekstowe jest pozycjonowany w momencie otwierania.</span><span class="sxs-lookup"><span data-stu-id="e6baa-235">Gets or sets the area relative to which the context menu is positioned when it opens.</span></span></summary>
        <value><span data-ttu-id="e6baa-236">Obszar, który definiuje prostokąt, który jest używany do pozycji menu kontekstowego.</span><span class="sxs-lookup"><span data-stu-id="e6baa-236">The area that defines the rectangle that is used to position the context menu.</span></span> <span data-ttu-id="e6baa-237">Wartość domyślna to <see cref="P:System.Windows.Rect.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="e6baa-237">The default is <see cref="P:System.Windows.Rect.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6baa-238">Można umieścić <xref:System.Windows.Controls.ContextMenu> , ustawiając <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, i <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> właściwości.</span><span class="sxs-lookup"><span data-stu-id="e6baa-238">You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.</span></span>  <span data-ttu-id="e6baa-239">Te właściwości działa tak samo jak w przypadku <xref:System.Windows.Controls.Primitives.Popup>.</span><span class="sxs-lookup"><span data-stu-id="e6baa-239">These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="e6baa-240">Aby uzyskać więcej informacji, zobacz [zachowanie położenia okna podręcznego](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span><span class="sxs-lookup"><span data-stu-id="e6baa-240">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="dependencyPropertyInfo_PlacementRectangle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="e6baa-241">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="e6baa-241">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e6baa-242">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="e6baa-242">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.PlacementRectangleProperty>|  
|<span data-ttu-id="e6baa-243">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="e6baa-243">Metadata properties set to `true`</span></span>|<span data-ttu-id="e6baa-244">Brak</span><span class="sxs-lookup"><span data-stu-id="e6baa-244">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e6baa-245">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A> właściwości i określ, gdzie <xref:System.Windows.Controls.ContextMenu> znajduje.</span><span class="sxs-lookup"><span data-stu-id="e6baa-245">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A> property and specify where the <xref:System.Windows.Controls.ContextMenu> is placed.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuPlacement](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuplacement)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="PlacementRectangleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PlacementRectangleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PlacementRectangleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.PlacementRectangleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PlacementRectangleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PlacementRectangleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PlacementRectangleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.PlacementRectangleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6baa-246">Identyfikuje <see cref="P:System.Windows.Controls.ContextMenu.PlacementRectangle" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="e6baa-246">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.PlacementRectangle" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlacementTarget">
      <MemberSignature Language="C#" Value="public System.Windows.UIElement PlacementTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.UIElement PlacementTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.PlacementTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property PlacementTarget As UIElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::UIElement ^ PlacementTarget { System::Windows::UIElement ^ get(); void set(System::Windows::UIElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PlacementTarget : System.Windows.UIElement with get, set" Usage="System.Windows.Controls.ContextMenu.PlacementTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6baa-247">Pobiera lub ustawia <see cref="T:System.Windows.UIElement" /> względem którego <see cref="T:System.Windows.Controls.ContextMenu" /> jest pozycjonowany w momencie otwierania.</span><span class="sxs-lookup"><span data-stu-id="e6baa-247">Gets or sets the <see cref="T:System.Windows.UIElement" /> relative to which the <see cref="T:System.Windows.Controls.ContextMenu" /> is positioned when it opens.</span></span></summary>
        <value><span data-ttu-id="e6baa-248">Element, względem którego <see cref="T:System.Windows.Controls.ContextMenu" /> jest pozycjonowany w momencie otwierania.</span><span class="sxs-lookup"><span data-stu-id="e6baa-248">The element relative to which the <see cref="T:System.Windows.Controls.ContextMenu" /> is positioned when it opens.</span></span> <span data-ttu-id="e6baa-249">Wartość domyślna to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e6baa-249">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6baa-250">Gdy <xref:System.Windows.Controls.ContextMenu> jest przypisany do <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> lub <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> właściwości <xref:System.Windows.Controls.ContextMenuService> zmiany tej wartości tej właściwości będącej właścicielem <xref:System.Windows.FrameworkElement> lub <xref:System.Windows.FrameworkContentElement> podczas <xref:System.Windows.Controls.ContextMenu> zostanie otwarty.</span><span class="sxs-lookup"><span data-stu-id="e6baa-250">When the <xref:System.Windows.Controls.ContextMenu> is assigned to the <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> property, the <xref:System.Windows.Controls.ContextMenuService> changes this value of this property to the owning <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> when the <xref:System.Windows.Controls.ContextMenu> opens.</span></span> <span data-ttu-id="e6baa-251">Aby użyć innego <xref:System.Windows.UIElement>ustaw <xref:System.Windows.Controls.ContextMenuService.PlacementTarget%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="e6baa-251">To use a different <xref:System.Windows.UIElement>, set the <xref:System.Windows.Controls.ContextMenuService.PlacementTarget%2A?displayProperty=nameWithType> property.</span></span>  
  
<a name="dependencyPropertyInfo_PlacementTarget"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="e6baa-252">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="e6baa-252">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e6baa-253">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="e6baa-253">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.PlacementTargetProperty>|  
|<span data-ttu-id="e6baa-254">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="e6baa-254">Metadata properties set to `true`</span></span>|<span data-ttu-id="e6baa-255">Brak</span><span class="sxs-lookup"><span data-stu-id="e6baa-255">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e6baa-256">Celem <xref:System.Windows.Controls.ContextMenu> jest względem niego nadrzędna.</span><span class="sxs-lookup"><span data-stu-id="e6baa-256">The target of a <xref:System.Windows.Controls.ContextMenu> is its parent.</span></span> <span data-ttu-id="e6baa-257">W poniższych przykładach pokazano sposób użycia <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A> właściwości, aby znaleźć element nadrzędny <xref:System.Windows.Controls.ContextMenu>.</span><span class="sxs-lookup"><span data-stu-id="e6baa-257">The following examples show how to use the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A> property to find the parent of a <xref:System.Windows.Controls.ContextMenu>.</span></span>  
  
 [!code-csharp[TabControlwithContextMenu#3](~/samples/snippets/csharp/VS_Snippets_Wpf/TabControlwithContextMenu/CSharp/Pane1.xaml.cs#3)]
 [!code-vb[TabControlwithContextMenu#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TabControlwithContextMenu/visualbasic/pane1.xaml.vb#3)]  
  
 [!code-csharp[TabControlContextMenu_snip#FromItemContainer](~/samples/snippets/csharp/VS_Snippets_Wpf/TabControlContextMenu_snip/CSharp/Pane1.xaml.cs#fromitemcontainer)]
 [!code-vb[TabControlContextMenu_snip#FromItemContainer](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TabControlContextMenu_snip/visualbasic/pane1.xaml.vb#fromitemcontainer)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="PlacementTargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PlacementTargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PlacementTargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.PlacementTargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PlacementTargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PlacementTargetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PlacementTargetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.PlacementTargetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6baa-258">Identyfikuje <see cref="P:System.Windows.Controls.ContextMenu.PlacementTarget" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="e6baa-258">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.PlacementTarget" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.PrepareContainerForItemOverride : System.Windows.DependencyObject * obj -&gt; unit" Usage="contextMenu.PrepareContainerForItemOverride (element, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="e6baa-259">Element służący do wyświetlania określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="e6baa-259">Element used to display the specified item.</span></span></param>
        <param name="item"><span data-ttu-id="e6baa-260">Określony element.</span><span class="sxs-lookup"><span data-stu-id="e6baa-260">Specified item.</span></span></param>
        <summary><span data-ttu-id="e6baa-261">Przygotowuje określony element, aby wyświetlić określony element.</span><span class="sxs-lookup"><span data-stu-id="e6baa-261">Prepares the specified element to display the specified item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6baa-262">Trwa przygotowywanie elementu może obejmować stosowanie stylów, ustawienia powiązania i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="e6baa-262">Preparing the element may involve applying styles, setting bindings, and so on.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaysOpen">
      <MemberSignature Language="C#" Value="public bool StaysOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StaysOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.StaysOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property StaysOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StaysOpen { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StaysOpen : bool with get, set" Usage="System.Windows.Controls.ContextMenu.StaysOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6baa-263">Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Windows.Controls.ContextMenu" /> powinien zostać automatycznie zamknięty.</span><span class="sxs-lookup"><span data-stu-id="e6baa-263">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ContextMenu" /> should close automatically.</span></span></summary>
        <value><span data-ttu-id="e6baa-264"><see langword="true" /> Jeśli menu powinno pozostać otwarte do momentu <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /> zmiany właściwości <see langword="false" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e6baa-264"><see langword="true" /> if the menu should stay open until the <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /> property changes to <see langword="false" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e6baa-265">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e6baa-265">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_StaysOpen"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="e6baa-266">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="e6baa-266">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e6baa-267">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="e6baa-267">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.StaysOpenProperty>|  
|<span data-ttu-id="e6baa-268">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="e6baa-268">Metadata properties set to `true`</span></span>|<span data-ttu-id="e6baa-269">Brak</span><span class="sxs-lookup"><span data-stu-id="e6baa-269">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e6baa-270">W poniższym przykładzie użyto <xref:System.Windows.Controls.ContextMenu.StaysOpen%2A> właściwości, aby menu kontekstowe, pozostanie otwarte, dopóki nie wystąpi zdarzenie zmieniające <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> właściwość `false`.</span><span class="sxs-lookup"><span data-stu-id="e6baa-270">The following example uses the <xref:System.Windows.Controls.ContextMenu.StaysOpen%2A> property to make a context menu that will stay open until an event occurs that changes the <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> property to `false`.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuevents)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="StaysOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StaysOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StaysOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.StaysOpenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StaysOpenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StaysOpenProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable StaysOpenProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.StaysOpenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6baa-271">Identyfikuje <see cref="P:System.Windows.Controls.ContextMenu.StaysOpen" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="e6baa-271">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.StaysOpen" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalOffset">
      <MemberSignature Language="C#" Value="public double VerticalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 VerticalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.VerticalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double VerticalOffset { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.VerticalOffset : double with get, set" Usage="System.Windows.Controls.ContextMenu.VerticalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6baa-272">Pobiera lub ustawia pionową odległość między target punkt początkowy i wyrównanie okno podręczne punktu.</span><span class="sxs-lookup"><span data-stu-id="e6baa-272">Get or sets the vertical distance between the target origin and the popup alignment point.</span></span></summary>
        <value><span data-ttu-id="e6baa-273">Pionową odległość między target punkt początkowy i punkt wyrównania okna podręcznego.</span><span class="sxs-lookup"><span data-stu-id="e6baa-273">The vertical distance between the target origin and the popup alignment point.</span></span> <span data-ttu-id="e6baa-274">Aby uzyskać informacji na temat docelowy punkt wyrównania pochodzenia i okno podręczne, zobacz [zachowanie położenia okna podręcznego](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span><span class="sxs-lookup"><span data-stu-id="e6baa-274">For information about the target origin and popup alignment point, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span> <span data-ttu-id="e6baa-275">Wartość domyślna to 0.</span><span class="sxs-lookup"><span data-stu-id="e6baa-275">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6baa-276">Można umieścić <xref:System.Windows.Controls.ContextMenu> , ustawiając <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, i <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> właściwości.</span><span class="sxs-lookup"><span data-stu-id="e6baa-276">You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.</span></span>  <span data-ttu-id="e6baa-277">Te właściwości działa tak samo jak w przypadku <xref:System.Windows.Controls.Primitives.Popup>.</span><span class="sxs-lookup"><span data-stu-id="e6baa-277">These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="e6baa-278">Aby uzyskać więcej informacji, zobacz [zachowanie położenia okna podręcznego](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span><span class="sxs-lookup"><span data-stu-id="e6baa-278">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="dependencyPropertyInfo_VerticalOffset"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="e6baa-279">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="e6baa-279">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e6baa-280">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="e6baa-280">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty>|  
|<span data-ttu-id="e6baa-281">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="e6baa-281">Metadata properties set to `true`</span></span>|<span data-ttu-id="e6baa-282">Brak</span><span class="sxs-lookup"><span data-stu-id="e6baa-282">None</span></span>|  
  
<a name="xamlAttributeUsage_VerticalOffset"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="e6baa-283">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="e6baa-283">XAML Attribute Usage</span></span>  
  
```  
<object VerticalOffset="double"/>  
- or -  
<object VerticalOffset ="qualifiedDouble"/>  
```  
  
<a name="xamlValues_VerticalOffset"></a>   
## <a name="xaml-values"></a><span data-ttu-id="e6baa-284">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="e6baa-284">XAML Values</span></span>  
 <span data-ttu-id="e6baa-285">*double*</span><span class="sxs-lookup"><span data-stu-id="e6baa-285">*double*</span></span>  
 <xref:System.Double>  
  
 <span data-ttu-id="e6baa-286">Ciąg reprezentujący <xref:System.Double> wartość.</span><span class="sxs-lookup"><span data-stu-id="e6baa-286">String representation of a <xref:System.Double> value.</span></span> <span data-ttu-id="e6baa-287">To jest interpretowane jako [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] miary.</span><span class="sxs-lookup"><span data-stu-id="e6baa-287">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="e6baa-288">Ciągi nie musi jawnie zawierać separatorów dziesiętnych.</span><span class="sxs-lookup"><span data-stu-id="e6baa-288">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="e6baa-289">Na przykład wartość `1` jest dopuszczalna.</span><span class="sxs-lookup"><span data-stu-id="e6baa-289">For instance, a value of `1` is acceptable.</span></span> <span data-ttu-id="e6baa-290">Taki sam <xref:System.Double> obowiązują ograniczenia zakresu, zgodnie z opisem w sekcji wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="e6baa-290">The same <xref:System.Double> range restrictions as mentioned in the Property Value section apply.</span></span>  
  
 <span data-ttu-id="e6baa-291">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="e6baa-291">*qualifiedDouble*</span></span>  
 <span data-ttu-id="e6baa-292">A *double* wartość zgodnie z opisem powyżej, a następnie za pomocą jednej z następujących ciągów jednostki w deklaracji: `px`, `in`, `cm`, `pt`.</span><span class="sxs-lookup"><span data-stu-id="e6baa-292">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="e6baa-293">`px` (domyślnie) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="e6baa-293">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="e6baa-294">`in` is inches; 1in==96px</span><span class="sxs-lookup"><span data-stu-id="e6baa-294">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="e6baa-295">`cm` centymetrów; 1cm==(96/2.54) piks.</span><span class="sxs-lookup"><span data-stu-id="e6baa-295">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="e6baa-296">`pt` jest punktów. 1pt==(96/72) piks.</span><span class="sxs-lookup"><span data-stu-id="e6baa-296">`pt` is points; 1pt==(96/72) px</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e6baa-297">W wielu przypadkach wartość o podwójnej precyzji, może być ustawiony na Auto ale <xref:System.Windows.Controls.ContextMenu> nie jest wyświetlana, jeśli przesunięcia są ustawione na Auto.</span><span class="sxs-lookup"><span data-stu-id="e6baa-297">In many cases a double may be set to Auto, but a <xref:System.Windows.Controls.ContextMenu> does not appear if the offsets are set to Auto.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6baa-298">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Controls.ContextMenu.VerticalOffset%2A> właściwość, aby spowodować, że <xref:System.Windows.Controls.ContextMenu> można otworzyć w określonej lokalizacji w odniesieniu do jego elementu nadrzędnego przycisku.</span><span class="sxs-lookup"><span data-stu-id="e6baa-298">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.VerticalOffset%2A> property to cause a <xref:System.Windows.Controls.ContextMenu> to open at a specified location in relation to its button parent.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuProps](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuprops)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="VerticalOffsetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VerticalOffsetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VerticalOffsetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.VerticalOffsetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VerticalOffsetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VerticalOffsetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VerticalOffsetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.VerticalOffsetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6baa-299">Identyfikuje <see cref="P:System.Windows.Controls.ContextMenu.VerticalOffset" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="e6baa-299">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.VerticalOffset" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>