<Type Name="StackPanel" FullName="System.Windows.Controls.StackPanel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4afcec06d3a9fcfb8f6dab9719f742dbc380de25" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StackPanel : System.Windows.Controls.Panel, System.Windows.Controls.Primitives.IScrollInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi StackPanel extends System.Windows.Controls.Panel implements class System.Windows.Controls.Primitives.IScrollInfo" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.StackPanel" />
  <TypeSignature Language="VB.NET" Value="Public Class StackPanel&#xA;Inherits Panel&#xA;Implements IScrollInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class StackPanel : System::Windows::Controls::Panel, System::Windows::Controls::Primitives::IScrollInfo" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Panel</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Controls.Primitives.IScrollInfo</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="ece77-101">Rozmieszcza elementy potomne w jednym wierszu, które mogą być rozmieszczane poziomo czy pionowo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ece77-101">Arranges child elements into a single line that can be oriented horizontally or vertically.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ece77-102">A <xref:System.Windows.Controls.StackPanel> zawiera kolekcję <xref:System.Windows.UIElement> obiektów, które znajdują się w <xref:System.Windows.Controls.Panel.Children%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="ece77-102">A <xref:System.Windows.Controls.StackPanel> contains a collection of <xref:System.Windows.UIElement> objects, which are in the <xref:System.Windows.Controls.Panel.Children%2A> property.</span></span>  
  
 <span data-ttu-id="ece77-103">Wartość domyślna to stretch zarówno <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> i <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> zawartości, który jest zawarty w <xref:System.Windows.Controls.StackPanel>.</span><span class="sxs-lookup"><span data-stu-id="ece77-103">The default value is stretch for both <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> and <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> of content that is contained in a <xref:System.Windows.Controls.StackPanel>.</span></span>  
  
 <span data-ttu-id="ece77-104">Domyślnie elementy panelu nie uzyskuje fokus.</span><span class="sxs-lookup"><span data-stu-id="ece77-104">Panel elements do not receive focus by default.</span></span> <span data-ttu-id="ece77-105">Aby przymuszenia elementu panel do fokusu, ustaw <xref:System.Windows.UIElement.Focusable%2A> właściwości `true`.</span><span class="sxs-lookup"><span data-stu-id="ece77-105">To compel a panel element to receive focus, set the <xref:System.Windows.UIElement.Focusable%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="ece77-106"><xref:System.Windows.Controls.StackPanel> implementuje <xref:System.Windows.Controls.Primitives.IScrollInfo> interfejs do obsługi logicznej przewijania.</span><span class="sxs-lookup"><span data-stu-id="ece77-106"><xref:System.Windows.Controls.StackPanel> implements the <xref:System.Windows.Controls.Primitives.IScrollInfo> interface to support logical scrolling.</span></span> <span data-ttu-id="ece77-107">Przewijanie logiczna jest używana do przewiń do następnego elementu w drzewie logicznym.</span><span class="sxs-lookup"><span data-stu-id="ece77-107">Logical scrolling is used to scroll to the next element in the logical tree.</span></span> <span data-ttu-id="ece77-108">Dzięki temu nie trzeba przewijanie fizycznego, który przewija zawartości przez zdefiniowanych przyrostu fizycznych w określonym kierunku.</span><span class="sxs-lookup"><span data-stu-id="ece77-108">This is in contrast to physical scrolling, which scrolls content by a defined physical increment in a given direction.</span></span> <span data-ttu-id="ece77-109">Jeśli potrzebujesz fizycznych przewijanie zamiast przewijanie logiczne, zawijać hosta <xref:System.Windows.Controls.StackPanel> element <xref:System.Windows.Controls.ScrollViewer> i ustaw jej <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> właściwości `false`.</span><span class="sxs-lookup"><span data-stu-id="ece77-109">If you require physical scrolling instead of logical scrolling, wrap the host <xref:System.Windows.Controls.StackPanel> element in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackPanel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackPanel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ece77-110">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Controls.StackPanel" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-110">Initializes a new instance of the <see cref="T:System.Windows.Controls.StackPanel" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size ArrangeOverride (System.Windows.Size arrangeSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size ArrangeOverride(valuetype System.Windows.Size arrangeSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.ArrangeOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ArrangeOverride (arrangeSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size ArrangeOverride(System::Windows::Size arrangeSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrangeSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="arrangeSize">
          <span data-ttu-id="ece77-111">
            <see cref="T:System.Windows.Size" /> Czy ułożyć jego elementy podrzędne mają korzystać z tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-111">The <see cref="T:System.Windows.Size" /> that this element should use to arrange its child elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ece77-112">Rozmieszcza zawartość <see cref="T:System.Windows.Controls.StackPanel" /> elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-112">Arranges the content of a <see cref="T:System.Windows.Controls.StackPanel" /> element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ece77-113">
            <see cref="T:System.Windows.Size" /> Reprezentujący rozmiar uszeregowanych <see cref="T:System.Windows.Controls.StackPanel" /> elementu i jego elementów podrzędnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-113">The <see cref="T:System.Windows.Size" /> that represents the arranged size of this <see cref="T:System.Windows.Controls.StackPanel" /> element and its child elements.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.StackPanel.MeasureOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="CanHorizontallyScroll">
      <MemberSignature Language="C#" Value="public bool CanHorizontallyScroll { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanHorizontallyScroll" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.CanHorizontallyScroll" />
      <MemberSignature Language="VB.NET" Value="Public Property CanHorizontallyScroll As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanHorizontallyScroll { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.CanHorizontallyScroll</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ece77-114">Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Windows.Controls.StackPanel" /> można przewijać w płaszczyźnie poziomej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-114">Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.StackPanel" /> can scroll in the horizontal dimension.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ece77-115">
            <see langword="true" /> Jeśli zawartość można przewijać w płaszczyźnie poziomej; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-115">
              <see langword="true" /> if content can scroll in the horizontal dimension; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ece77-116">Ta właściwość nie jest przeznaczony do użycia w kodzie.</span><span class="sxs-lookup"><span data-stu-id="ece77-116">This property is not intended to be used in your code.</span></span> <span data-ttu-id="ece77-117">Jest udostępniany publicznie do zrealizowania kontrakt interfejsu (<xref:System.Windows.Controls.Primitives.IScrollInfo>).</span><span class="sxs-lookup"><span data-stu-id="ece77-117">It is exposed publicly to fulfill an interface contract (<xref:System.Windows.Controls.Primitives.IScrollInfo>).</span></span> <span data-ttu-id="ece77-118">Ustawienie tej właściwości nie ma znaczenia.</span><span class="sxs-lookup"><span data-stu-id="ece77-118">Setting this property has no effect.</span></span>  
  
 <span data-ttu-id="ece77-119">Zawijaj Jeśli potrzebujesz fizycznych przewijanie zamiast przewijanie logiczne, <xref:System.Windows.Controls.StackPanel> w <xref:System.Windows.Controls.ScrollViewer> i ustawić jej <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> właściwości `false`.</span><span class="sxs-lookup"><span data-stu-id="ece77-119">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Primitives.IScrollInfo" />
      </Docs>
    </Member>
    <Member MemberName="CanVerticallyScroll">
      <MemberSignature Language="C#" Value="public bool CanVerticallyScroll { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanVerticallyScroll" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.CanVerticallyScroll" />
      <MemberSignature Language="VB.NET" Value="Public Property CanVerticallyScroll As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanVerticallyScroll { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.CanVerticallyScroll</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ece77-120">Pobiera lub ustawia wartość wskazującą, czy zawartość można przewijać w płaszczyźnie pionowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-120">Gets or sets a value that indicates whether content can scroll in the vertical dimension.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ece77-121">
            <see langword="true" /> Jeśli zawartość można przewijać w płaszczyźnie pionowej; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-121">
              <see langword="true" /> if content can scroll in the vertical dimension; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ece77-122">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-122">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ece77-123">Ta właściwość nie jest przeznaczony do użycia w kodzie.</span><span class="sxs-lookup"><span data-stu-id="ece77-123">This property is not intended for use in your code.</span></span> <span data-ttu-id="ece77-124">Jest udostępniany publicznie do zrealizowania kontrakt interfejsu (<xref:System.Windows.Controls.Primitives.IScrollInfo>).</span><span class="sxs-lookup"><span data-stu-id="ece77-124">It is exposed publicly to fulfill an interface contract (<xref:System.Windows.Controls.Primitives.IScrollInfo>).</span></span> <span data-ttu-id="ece77-125">Ustawienie tej właściwości nie ma znaczenia.</span><span class="sxs-lookup"><span data-stu-id="ece77-125">Setting this property has no effect.</span></span>  
  
 <span data-ttu-id="ece77-126">Zawijaj Jeśli potrzebujesz fizycznych przewijanie zamiast przewijanie logiczne, <xref:System.Windows.Controls.StackPanel> w <xref:System.Windows.Controls.ScrollViewer> i ustawić jej <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> właściwości `false`.</span><span class="sxs-lookup"><span data-stu-id="ece77-126">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Primitives.IScrollInfo" />
      </Docs>
    </Member>
    <Member MemberName="ExtentHeight">
      <MemberSignature Language="C#" Value="public double ExtentHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ExtentHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.ExtentHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtentHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ExtentHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.ExtentHeight</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ece77-127">Pobiera wartość, która zawiera pionowy rozmiar zakresu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-127">Gets a value that contains the vertical size of the extent.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ece77-128">
            <see cref="T:System.Double" /> Reprezentujący pionowy rozmiar zakresu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-128">The <see cref="T:System.Double" /> that represents the vertical size of the extent.</span>
          </span>
          <span data-ttu-id="ece77-129">Wartość domyślna to 0,0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-129">The default value is 0.0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ece77-130">Zwrócona wartość jest opisany w pikselach niezależnych od urządzenia.</span><span class="sxs-lookup"><span data-stu-id="ece77-130">The returned value is described in Device Independent Pixels.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtentWidth">
      <MemberSignature Language="C#" Value="public double ExtentWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ExtentWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.ExtentWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtentWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ExtentWidth { double get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.ExtentWidth</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ece77-131">Pobiera wartość, która zawiera rozmiar poziome zakresu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-131">Gets a value that contains the horizontal size of the extent.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ece77-132">
            <see cref="T:System.Double" /> reprezentujący rozmiar poziome zakresu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-132">
              <see cref="T:System.Double" /> that represents the horizontal size of the extent.</span>
          </span>
          <span data-ttu-id="ece77-133">Wartość domyślna to 0,0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-133">The default value is 0.0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ece77-134">Zwrócona wartość jest opisany w pikselach niezależnych od urządzenia.</span><span class="sxs-lookup"><span data-stu-id="ece77-134">The returned value is described in Device Independent Pixels.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasLogicalOrientation">
      <MemberSignature Language="C#" Value="protected internal override bool HasLogicalOrientation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLogicalOrientation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.HasLogicalOrientation" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property HasLogicalOrientation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HasLogicalOrientation { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ece77-135">Pobiera wartość wskazującą, czy ten <see cref="T:System.Windows.Controls.StackPanel" /> ma orientację pionowych lub poziomych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-135">Gets a value that indicates if this <see cref="T:System.Windows.Controls.StackPanel" /> has vertical or horizontal orientation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ece77-136">Ta właściwość zawsze zwraca <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-136">This property always returns <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ece77-137">Ta właściwość zawsze zwraca `true` ponieważ <xref:System.Windows.Controls.StackPanel> musi mieć orientacji pionowej lub poziomej.</span><span class="sxs-lookup"><span data-stu-id="ece77-137">This property always returns `true` because a <xref:System.Windows.Controls.StackPanel> must have either vertical or horizontal orientation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalOffset">
      <MemberSignature Language="C#" Value="public double HorizontalOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 HorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.HorizontalOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HorizontalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double HorizontalOffset { double get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.HorizontalOffset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ece77-138">Pobiera wartość, która zawiera przesunięcie zawartości przewijane w poziomie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-138">Gets a value that contains the horizontal offset of the scrolled content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ece77-139">
            <see cref="T:System.Double" /> Reprezentujący przesunięcie zawartości przewijane w poziomie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-139">The <see cref="T:System.Double" /> that represents the horizontal offset of the scrolled content.</span>
          </span>
          <span data-ttu-id="ece77-140">Wartość domyślna to 0,0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-140">The default value is 0.0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ece77-141">Zwrócona wartość jest opisany w pikselach niezależnych od urządzenia.</span><span class="sxs-lookup"><span data-stu-id="ece77-141">The returned value is described in Device Independent Pixels.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineDown">
      <MemberSignature Language="C#" Value="public void LineDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LineDown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.LineDown" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineDown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LineDown();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.LineDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ece77-142">Przewija zawartości w dół przez jedną jednostkę logiczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-142">Scrolls content downward by one logical unit.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ece77-143">Zawijaj Jeśli potrzebujesz fizycznych przewijanie zamiast przewijanie logiczne, <xref:System.Windows.Controls.StackPanel> w <xref:System.Windows.Controls.ScrollViewer> i ustawić jej <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> właściwości `false`.</span><span class="sxs-lookup"><span data-stu-id="ece77-143">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineLeft">
      <MemberSignature Language="C#" Value="public void LineLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LineLeft() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.LineLeft" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineLeft ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LineLeft();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.LineLeft</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ece77-144">Przewija zawartości przez jedną jednostkę logiczną z lewej strony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-144">Scrolls content by one logical unit to the left.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ece77-145">Zawijaj Jeśli potrzebujesz fizycznych przewijanie zamiast przewijanie logiczne, <xref:System.Windows.Controls.StackPanel> w <xref:System.Windows.Controls.ScrollViewer> i ustawić jej <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> właściwości `false`.</span><span class="sxs-lookup"><span data-stu-id="ece77-145">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineRight">
      <MemberSignature Language="C#" Value="public void LineRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LineRight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.LineRight" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineRight ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LineRight();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.LineRight</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ece77-146">Przewija zawartości przez jedną jednostkę logiczną z prawej strony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-146">Scrolls content by one logical unit to the right.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ece77-147">Zawijaj Jeśli potrzebujesz fizycznych przewijanie zamiast przewijanie logiczne, <xref:System.Windows.Controls.StackPanel> w <xref:System.Windows.Controls.ScrollViewer> i ustawić jej <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> właściwości `false`.</span><span class="sxs-lookup"><span data-stu-id="ece77-147">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineUp">
      <MemberSignature Language="C#" Value="public void LineUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LineUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.LineUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LineUp();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.LineUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ece77-148">Przewija zawartości przez jedną jednostkę logiczną w górę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-148">Scrolls content by one logical unit upward.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ece77-149">Zawijaj Jeśli potrzebujesz fizycznych przewijanie zamiast przewijanie logiczne, <xref:System.Windows.Controls.StackPanel> w <xref:System.Windows.Controls.ScrollViewer> i ustawić jej <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> właściwości `false`.</span><span class="sxs-lookup"><span data-stu-id="ece77-149">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalOrientation">
      <MemberSignature Language="C#" Value="protected internal override System.Windows.Controls.Orientation LogicalOrientation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Orientation LogicalOrientation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.LogicalOrientation" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalOrientation As Orientation" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Windows::Controls::Orientation LogicalOrientation { System::Windows::Controls::Orientation get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Orientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ece77-150">Pobiera wartość, która reprezentuje <see cref="T:System.Windows.Controls.Orientation" /> z <see cref="T:System.Windows.Controls.StackPanel" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-150">Gets a value that represents the <see cref="T:System.Windows.Controls.Orientation" /> of the <see cref="T:System.Windows.Controls.StackPanel" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ece77-151">
            <see cref="T:System.Windows.Controls.Orientation" /> Wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-151">An <see cref="T:System.Windows.Controls.Orientation" /> value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Controls.Orientation" />
      </Docs>
    </Member>
    <Member MemberName="MakeVisible">
      <MemberSignature Language="C#" Value="public System.Windows.Rect MakeVisible (System.Windows.Media.Visual visual, System.Windows.Rect rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Rect MakeVisible(class System.Windows.Media.Visual visual, valuetype System.Windows.Rect rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Rect MakeVisible(System::Windows::Media::Visual ^ visual, System::Windows::Rect rectangle);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="rectangle" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="visual">
          <span data-ttu-id="ece77-152">
            <see cref="T:System.Windows.Media.Visual" /> Staje się widoczna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-152">The <see cref="T:System.Windows.Media.Visual" /> that becomes visible.</span>
          </span>
        </param>
        <param name="rectangle">
          <span data-ttu-id="ece77-153">
            <see cref="T:System.Windows.Rect" /> Czy reprezentuje koordynować spację wewnątrz obiektu visual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-153">The <see cref="T:System.Windows.Rect" /> that represents coordinate space within a visual.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ece77-154">Przewija do określonych współrzędnych i sprawia, że część <see cref="T:System.Windows.Media.Visual" /> widoczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-154">Scrolls to the specified coordinates and makes that part of a <see cref="T:System.Windows.Media.Visual" /> visible.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ece77-155">A <see cref="T:System.Windows.Rect" /> w układzie współrzędnych, stają się widoczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-155">A <see cref="T:System.Windows.Rect" /> in the coordinate space that is made visible.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (constraint As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size constraint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="constraint">
          <span data-ttu-id="ece77-156">Górny limit <see cref="T:System.Windows.Size" /> który nie powinien zostać przekroczona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-156">An upper limit <see cref="T:System.Windows.Size" /> that should not be exceeded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ece77-157">Mierzy elementy podrzędne <see cref="T:System.Windows.Controls.StackPanel" /> w oczekiwaniu sobie podczas <see cref="M:System.Windows.Controls.StackPanel.ArrangeOverride(System.Windows.Size)" /> przekazać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-157">Measures the child elements of a <see cref="T:System.Windows.Controls.StackPanel" /> in anticipation of arranging them during the <see cref="M:System.Windows.Controls.StackPanel.ArrangeOverride(System.Windows.Size)" /> pass.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ece77-158">
            <see cref="T:System.Windows.Size" /> Reprezentujący wymagany rozmiar elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-158">The <see cref="T:System.Windows.Size" /> that represents the desired size of the element.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.StackPanel.ArrangeOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="MouseWheelDown">
      <MemberSignature Language="C#" Value="public void MouseWheelDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MouseWheelDown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.MouseWheelDown" />
      <MemberSignature Language="VB.NET" Value="Public Sub MouseWheelDown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MouseWheelDown();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ece77-159">Przewija logicznie dół zawartości w odpowiedzi na kliknięcie przycisku kółka myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-159">Scrolls content logically downward in response to a click of the mouse wheel button.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ece77-160">Zawijaj Jeśli potrzebujesz fizycznych przewijanie zamiast przewijanie logiczne, <xref:System.Windows.Controls.StackPanel> w <xref:System.Windows.Controls.ScrollViewer> i ustawić jej <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> właściwości `false`.</span><span class="sxs-lookup"><span data-stu-id="ece77-160">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelLeft">
      <MemberSignature Language="C#" Value="public void MouseWheelLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MouseWheelLeft() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.MouseWheelLeft" />
      <MemberSignature Language="VB.NET" Value="Public Sub MouseWheelLeft ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MouseWheelLeft();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelLeft</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ece77-161">Przewija zawartość logicznie do lewej w odpowiedzi na kliknięcie przycisku kółka myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-161">Scrolls content logically to the left in response to a click of the mouse wheel button.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ece77-162">Zawijaj Jeśli potrzebujesz fizycznych przewijanie zamiast przewijanie logiczne, <xref:System.Windows.Controls.StackPanel> w <xref:System.Windows.Controls.ScrollViewer> i ustawić jej <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> właściwości `false`.</span><span class="sxs-lookup"><span data-stu-id="ece77-162">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelRight">
      <MemberSignature Language="C#" Value="public void MouseWheelRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MouseWheelRight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.MouseWheelRight" />
      <MemberSignature Language="VB.NET" Value="Public Sub MouseWheelRight ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MouseWheelRight();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelRight</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ece77-163">Przewija zawartość logicznie do prawej w odpowiedzi na kliknięcie przycisku kółka myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-163">Scrolls content logically to the right in response to a click of the mouse wheel button.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ece77-164">Zawijaj Jeśli potrzebujesz fizycznych przewijanie zamiast przewijanie logiczne, <xref:System.Windows.Controls.StackPanel> w <xref:System.Windows.Controls.ScrollViewer> i ustawić jej <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> właściwości `false`.</span><span class="sxs-lookup"><span data-stu-id="ece77-164">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelUp">
      <MemberSignature Language="C#" Value="public void MouseWheelUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MouseWheelUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.MouseWheelUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub MouseWheelUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MouseWheelUp();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ece77-165">Przewija zawartość logicznie w górę w odpowiedzi na kliknięcie przycisku kółka myszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-165">Scrolls content logically upward in response to a click of the mouse wheel button.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ece77-166">Zawijaj Jeśli potrzebujesz fizycznych przewijanie zamiast przewijanie logiczne, <xref:System.Windows.Controls.StackPanel> w <xref:System.Windows.Controls.ScrollViewer> i ustawić jej <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> właściwości `false`.</span><span class="sxs-lookup"><span data-stu-id="ece77-166">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Orientation Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Orientation Orientation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As Orientation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Orientation Orientation { System::Windows::Controls::Orientation get(); void set(System::Windows::Controls::Orientation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Orientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ece77-167">Pobiera lub ustawia wartość wskazującą, za pomocą którego elementy potomne są ułożone wymiaru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-167">Gets or sets a value that indicates the dimension by which child elements are stacked.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ece77-168">
            <see cref="T:System.Windows.Controls.Orientation" /> z zawartość elementu podrzędnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-168">The <see cref="T:System.Windows.Controls.Orientation" /> of child content.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Orientation"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="ece77-169">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="ece77-169">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="ece77-170">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="ece77-170">Identifier field</span></span>|<xref:System.Windows.Controls.StackPanel.OrientationProperty>|  
|<span data-ttu-id="ece77-171">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="ece77-171">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="ece77-172">Poniższy przykład przedstawia użycie <xref:System.Windows.Controls.StackPanel.Orientation%2A> właściwości w celu określenia sposobu elementów w obrębie <xref:System.Windows.Controls.StackPanel> stos (jedną na górze innych lub obok siebie).</span><span class="sxs-lookup"><span data-stu-id="ece77-172">The following example shows how to use the <xref:System.Windows.Controls.StackPanel.Orientation%2A> property to specify how elements within a <xref:System.Windows.Controls.StackPanel> are stacked (one on top of the other or side by side).</span></span>  
  
 [!code-xaml[StackPanel_snip#StackPanelOrientationExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StackPanel_snip/CS/OrientationExample.xaml#stackpanelorientationexamplewholepage)]   
  
 <span data-ttu-id="ece77-173">Poniższy zrzut ekranu pokazuje, jak renderuje w tym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="ece77-173">The screenshot below shows how this example renders.</span></span>  
  
 <span data-ttu-id="ece77-174">![Orientacja Panel stosu](~/add/media/layout-stackpanelorientationexample.gif "orientacji Panel stosu")</span><span class="sxs-lookup"><span data-stu-id="ece77-174">![StackPanel orientation](~/add/media/layout-stackpanelorientationexample.gif "StackPanel orientation")</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OrientationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OrientationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OrientationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.StackPanel.OrientationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OrientationProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OrientationProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ece77-175">Identyfikuje <see cref="P:System.Windows.Controls.StackPanel.Orientation" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-175">Identifies the <see cref="P:System.Windows.Controls.StackPanel.Orientation" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.StackPanel.Orientation" />
      </Docs>
    </Member>
    <Member MemberName="PageDown">
      <MemberSignature Language="C#" Value="public void PageDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PageDown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.PageDown" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageDown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PageDown();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.PageDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ece77-176">Przewija zawartość logicznie dół o jedną stronę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-176">Scrolls content logically downward by one page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ece77-177">Zawijaj Jeśli potrzebujesz fizycznych przewijanie zamiast przewijanie logiczne, <xref:System.Windows.Controls.StackPanel> w <xref:System.Windows.Controls.ScrollViewer> i ustawić jej <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> właściwości `false`.</span><span class="sxs-lookup"><span data-stu-id="ece77-177">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageLeft">
      <MemberSignature Language="C#" Value="public void PageLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PageLeft() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.PageLeft" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageLeft ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PageLeft();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.PageLeft</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ece77-178">Przewija zawartość logicznie w lewo o jedną stronę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-178">Scrolls content logically to the left by one page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ece77-179">Zawijaj Jeśli potrzebujesz fizycznych przewijanie zamiast przewijanie logiczne, <xref:System.Windows.Controls.StackPanel> w <xref:System.Windows.Controls.ScrollViewer> i ustawić jej <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> właściwości `false`.</span><span class="sxs-lookup"><span data-stu-id="ece77-179">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageRight">
      <MemberSignature Language="C#" Value="public void PageRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PageRight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.PageRight" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageRight ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PageRight();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.PageRight</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ece77-180">Przewija zawartość logicznie do prawej o jedną stronę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-180">Scrolls content logically to the right by one page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ece77-181">Zawijaj Jeśli potrzebujesz fizycznych przewijanie zamiast przewijanie logiczne, <xref:System.Windows.Controls.StackPanel> w <xref:System.Windows.Controls.ScrollViewer> i ustawić jej <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> właściwości `false`.</span><span class="sxs-lookup"><span data-stu-id="ece77-181">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageUp">
      <MemberSignature Language="C#" Value="public void PageUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PageUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.PageUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PageUp();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.PageUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ece77-182">Przewija zawartość logicznie w górę o jedną stronę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-182">Scrolls content logically upward by one page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ece77-183">Zawijaj Jeśli potrzebujesz fizycznych przewijanie zamiast przewijanie logiczne, <xref:System.Windows.Controls.StackPanel> w <xref:System.Windows.Controls.ScrollViewer> i ustawić jej <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> właściwości `false`.</span><span class="sxs-lookup"><span data-stu-id="ece77-183">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollOwner">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollViewer ScrollOwner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ScrollViewer ScrollOwner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.ScrollOwner" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollOwner As ScrollViewer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollViewer ^ ScrollOwner { System::Windows::Controls::ScrollViewer ^ get(); void set(System::Windows::Controls::ScrollViewer ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.ScrollOwner</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollViewer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ece77-184">Pobiera lub ustawia wartość, która identyfikuje kontener, który kontroluje zachowanie przewijania, w tym <see cref="T:System.Windows.Controls.StackPanel" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-184">Gets or sets a value that identifies the container that controls scrolling behavior in this <see cref="T:System.Windows.Controls.StackPanel" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ece77-185">
            <see cref="T:System.Windows.Controls.ScrollViewer" /> , Który jest właścicielem przewijania dla tego <see cref="T:System.Windows.Controls.StackPanel" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-185">The <see cref="T:System.Windows.Controls.ScrollViewer" /> that owns scrolling for this <see cref="T:System.Windows.Controls.StackPanel" />.</span>
          </span>
          <span data-ttu-id="ece77-186">Ta właściwość nie ma wartości domyślnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-186">This property has no default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ece77-187">Jeśli <xref:System.Windows.Controls.ScrollViewer> formant jest <xref:System.Windows.Controls.StackPanel.ScrollOwner%2A>, fizycznych przewijanie jest możliwe.</span><span class="sxs-lookup"><span data-stu-id="ece77-187">If a <xref:System.Windows.Controls.ScrollViewer> control is the <xref:System.Windows.Controls.StackPanel.ScrollOwner%2A>, physical scrolling is enabled.</span></span> <span data-ttu-id="ece77-188">Jeśli <xref:System.Windows.Controls.StackPanel> jest <xref:System.Windows.Controls.StackPanel.ScrollOwner%2A>, przewijanie jest logiczną przez element podrzędny.</span><span class="sxs-lookup"><span data-stu-id="ece77-188">If a <xref:System.Windows.Controls.StackPanel> is the <xref:System.Windows.Controls.StackPanel.ScrollOwner%2A>, scrolling is logical by child element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHorizontalOffset">
      <MemberSignature Language="C#" Value="public void SetHorizontalOffset (double offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetHorizontalOffset(float64 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.SetHorizontalOffset(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetHorizontalOffset (offset As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetHorizontalOffset(double offset);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.SetHorizontalOffset(System.Double)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="ece77-189">Wartość <see cref="P:System.Windows.Controls.StackPanel.HorizontalOffset" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-189">The value of the <see cref="P:System.Windows.Controls.StackPanel.HorizontalOffset" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ece77-190">Ustawia wartość <see cref="P:System.Windows.Controls.StackPanel.HorizontalOffset" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-190">Sets the value of the <see cref="P:System.Windows.Controls.StackPanel.HorizontalOffset" /> property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVerticalOffset">
      <MemberSignature Language="C#" Value="public void SetVerticalOffset (double offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVerticalOffset(float64 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.SetVerticalOffset(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetVerticalOffset (offset As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetVerticalOffset(double offset);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.SetVerticalOffset(System.Double)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="ece77-191">Wartość <see cref="P:System.Windows.Controls.StackPanel.VerticalOffset" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-191">The value of the <see cref="P:System.Windows.Controls.StackPanel.VerticalOffset" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ece77-192">Ustawia wartość <see cref="P:System.Windows.Controls.StackPanel.VerticalOffset" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-192">Sets the value of the <see cref="P:System.Windows.Controls.StackPanel.VerticalOffset" /> property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalOffset">
      <MemberSignature Language="C#" Value="public double VerticalOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 VerticalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.VerticalOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VerticalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double VerticalOffset { double get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.VerticalOffset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ece77-193">Pobiera wartość, która zawiera przesunięcie w pionie przewijane zawartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-193">Gets a value that contains the vertical offset of the scrolled content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ece77-194">
            <see cref="T:System.Double" /> Reprezentujący przesunięcie w pionie przewijane zawartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-194">The <see cref="T:System.Double" /> that represents the vertical offset of the scrolled content.</span>
          </span>
          <span data-ttu-id="ece77-195">Wartość domyślna to 0,0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-195">The default value is 0.0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ece77-196">Zwrócona wartość jest opisany w pikselach niezależnych od urządzenia.</span><span class="sxs-lookup"><span data-stu-id="ece77-196">The returned value is described in Device Independent Pixels.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewportHeight">
      <MemberSignature Language="C#" Value="public double ViewportHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ViewportHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.ViewportHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewportHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ViewportHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.ViewportHeight</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ece77-197">Pobiera wartość, która zawiera pionowy rozmiar zawartości okienka ekranu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-197">Gets a value that contains the vertical size of the content's viewport.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ece77-198">
            <see cref="T:System.Double" /> Reprezentujący pionowy rozmiar zawartości okienka ekranu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-198">The <see cref="T:System.Double" /> that represents the vertical size of the content's viewport.</span>
          </span>
          <span data-ttu-id="ece77-199">Wartość domyślna to 0,0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-199">The default value is 0.0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ece77-200">Zwrócona wartość jest opisany w pikselach niezależnych od urządzenia.</span><span class="sxs-lookup"><span data-stu-id="ece77-200">The returned value is described in Device Independent Pixels.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewportWidth">
      <MemberSignature Language="C#" Value="public double ViewportWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ViewportWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.ViewportWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewportWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ViewportWidth { double get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.ViewportWidth</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ece77-201">Pobiera wartość, która zawiera poziomy rozmiar zawartości okienka ekranu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-201">Gets a value that contains the horizontal size of the content's viewport.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ece77-202">
            <see cref="T:System.Double" /> Reprezentujący pionowy rozmiar zawartości okienka ekranu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-202">The <see cref="T:System.Double" /> that represents the vertical size of the content's viewport.</span>
          </span>
          <span data-ttu-id="ece77-203">Wartość domyślna to 0,0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ece77-203">The default value is 0.0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ece77-204">Zwrócona wartość jest opisany w pikselach niezależnych od urządzenia.</span><span class="sxs-lookup"><span data-stu-id="ece77-204">The returned value is described in Device Independent Pixels.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>