<Type Name="RichTextBox" FullName="System.Windows.Controls.RichTextBox">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b531118d1fa3ac5b791457714c019a088e94d5bc" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69213333" /></Metadata><TypeSignature Language="C#" Value="public class RichTextBox : System.Windows.Controls.Primitives.TextBoxBase, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi RichTextBox extends System.Windows.Controls.Primitives.TextBoxBase implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.RichTextBox" />
  <TypeSignature Language="VB.NET" Value="Public Class RichTextBox&#xA;Inherits TextBoxBase&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class RichTextBox : System::Windows::Controls::Primitives::TextBoxBase, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type RichTextBox = class&#xA;    inherit TextBoxBase&#xA;    interface IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.TextBoxBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Inherit)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Document")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje kontrolkę zaawansowanej edycji, która <see cref="T:System.Windows.Documents.FlowDocument" /> działa na obiektach.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.FlowDocument>jest jedynym obsługiwanym elementem podrzędnym dla <xref:System.Windows.Controls.RichTextBox>elementu.  
  
> [!IMPORTANT]
>  <xref:System.Windows.Controls.RichTextBox>ma wbudowaną obsługę propagacji <xref:System.Windows.UIElement.MouseUp> i <xref:System.Windows.UIElement.MouseDown> zdarzeń.  W związku z tym niestandardowe programy obsługi zdarzeń, które `MouseUp` nasłuchują lub `MouseDown` zdarzenia <xref:System.Windows.Controls.RichTextBox> z elementu nigdy nie będą wywoływane.  Jeśli musisz odpowiedzieć na te zdarzenia, wysłuchaj tunelowanie <xref:System.Windows.UIElement.PreviewMouseUp> i <xref:System.Windows.UIElement.PreviewMouseDown> zdarzenia zamiast tego, lub Zarejestruj procedury obsługi przy użyciu <xref:System.Windows.EventSetter.HandledEventsToo%2A> argumentu (ta ostatnia opcja jest dostępna tylko za pomocą kodu). Nie oznaczaj obsłużonego zdarzenia, chyba że celowo chcesz wyłączyć <xref:System.Windows.Controls.RichTextBox> natywną obsługę tych zdarzeń i należy pamiętać, że ma to istotne skutki dla [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]kontrolki.  
  
 Program <xref:System.Windows.Controls.RichTextBox> obsługuje kopiowanie i wklejanie obrazów, ale niektóre scenariusze są obecnie nieobsługiwane i mogą nie funkcjonować prawidłowo.  Poniższa tabela zawiera podsumowanie tych scenariuszy i oczekiwanych wyników.  
  
|Źródło kopii obrazu|Wynik wklejania obrazu|  
|-----------------------|------------------------|  
|Źródło obrazu jest graficznym metaplikiem|Nie wklejono obrazu|  
|Źródło obrazu używa ścieżki względnej lub linku|Wklejony obraz jest zniekształcony lub pusty|  
|Link źródła obrazu nie kończy się na oczekiwanym formacie obrazu (. PNG,. JPG,. GIF|Wklejony obraz jest zniekształcony lub pusty|  
|Źródło obrazu skopiowane ze źle utworzonego tekstu (RTF)|Łącze do źródła obrazu zostało wklejone (zamiast obrazu)|  
  
 Wklejenie zawartości HTML do programu może <xref:System.Windows.Controls.RichTextBox> spowodować nieoczekiwane zachowanie, <xref:System.Windows.Controls.RichTextBox> ponieważ program używa formatu RTF zamiast bezpośrednio przy użyciu formatu HTML.  
  
 Tekst jest <xref:System.Windows.Controls.RichTextBox>zawsze zawijany w. Jeśli nie chcesz zawijać tekstu, ustaw <xref:System.Windows.Documents.FlowDocument.PageWidth%2A> wartość na wartość <xref:System.Windows.Documents.FlowDocument> większą <xref:System.Windows.Controls.RichTextBox>niż szerokość. Jednak po osiągnięciu szerokości strony tekst jest zawijany.  
  
 Wyrównanie zawartości w poziomie i w <xref:System.Windows.Controls.RichTextBox> pionie <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> przy użyciu właściwości i <xref:System.Windows.Controls.Control.VerticalContentAlignment%2A> . Wyrównywanie <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> w układzie strony odbywa się przy użyciu właściwości i. <xref:System.Windows.Controls.RichTextBox>  
  
 Paski przewijania nie są domyślnie widoczne dla <xref:System.Windows.Controls.RichTextBox> elementu. Aby pasek przewijania był widoczny, ustaw <xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility%2A> właściwość na <xref:System.Windows.Controls.ScrollBarVisibility.Visible> lub <xref:System.Windows.Controls.ScrollBarVisibility.Auto>.  
  
 Zwykle zdarzenie powinno być używane do wykrywania, kiedy tekst <xref:System.Windows.Controls.TextBox> w <xref:System.Windows.UIElement.KeyDown> lub <xref:System.Windows.Controls.RichTextBox> zmienia się, a nie w oczekiwany sposób. <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> Aby zapoznać się z przykładem, zobacz [How to: Wykryj, kiedy tekst w polu tekstowym](~/docs/framework/wpf/controls/how-to-detect-when-text-in-a-textbox-has-changed.md)został zmieniony.  
  
 <xref:System.Windows.Controls.RichTextBox>obsługuje różne polecenia klawiaturowe. Aby uzyskać listę poleceń klawiatury, zobacz <xref:System.Windows.Documents.EditingCommands>.  
  
 Właściwości zależności dla tego formantu można ustawić przy użyciu domyślnego stylu kontrolki.  Jeśli właściwość jest ustawiana za pomocą stylu domyślnego, właściwość może ulec zmianie z wartości domyślnej, gdy kontrolka pojawi się w aplikacji. Domyślny styl jest określany na podstawie tego, który Motyw pulpitu jest używany, gdy aplikacja jest uruchomiona.  Aby uzyskać więcej informacji, zobacz [domyślne motywy WPF](https://go.microsoft.com/fwlink/?LinkID=158252).  
  
   
  
## Examples  
 Poniższy przykład deklaruje <xref:System.Windows.Controls.RichTextBox> , że zawiera prostą <xref:System.Windows.Documents.FlowDocument>.  
  
 [!code-xaml[RichTextBoxSnippets#_RTB_XAML](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml#_rtb_xaml)]  
  
 [!code-csharp[RichTextBoxMiscSnippets_procedural_snip#RichTextBoxCodeOnlyExample](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxMiscSnippets_procedural_snip/CSharp/RichTextBoxExample.cs#richtextboxcodeonlyexample)]
 [!code-vb[RichTextBoxMiscSnippets_procedural_snip#RichTextBoxCodeOnlyExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxMiscSnippets_procedural_snip/visualbasic/richtextboxexample.vb#richtextboxcodeonlyexample)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Controls.RichTextBox" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RichTextBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.RichTextBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RichTextBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe, domyślne wystąpienie <see cref="T:System.Windows.Controls.RichTextBox" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor tworzy pustą <xref:System.Windows.Documents.FlowDocument> , która jest skojarzona z właściwością dokumentu.  W przypadku wartości pustej <xref:System.Windows.Documents.FlowDocument> zawiera pojedynczy <xref:System.Windows.Documents.Paragraph>element, który zawiera jedną <xref:System.Windows.Documents.Run> z nich, która nie zawiera żadnego tekstu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RichTextBox (System.Windows.Documents.FlowDocument document);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Documents.FlowDocument document) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.RichTextBox.#ctor(System.Windows.Documents.FlowDocument)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (document As FlowDocument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RichTextBox(System::Windows::Documents::FlowDocument ^ document);" />
      <MemberSignature Language="F#" Value="new System.Windows.Controls.RichTextBox : System.Windows.Documents.FlowDocument -&gt; System.Windows.Controls.RichTextBox" Usage="new System.Windows.Controls.RichTextBox document" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="document" Type="System.Windows.Documents.FlowDocument" />
      </Parameters>
      <Docs>
        <param name="document">Wartość <see cref="T:System.Windows.Documents.FlowDocument" /> do dodania jako początkowa zawartość nowego <see cref="T:System.Windows.Controls.RichTextBox" />elementu.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.Controls.RichTextBox" /> klasy, dodając określoną <see cref="T:System.Windows.Documents.FlowDocument" /> jako zawartość początkową.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład ilustruje użycie tego konstruktora.  
  
 [!code-csharp[RichTextBoxSnippets#_RTB_Constructor](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_rtb_constructor)]
 [!code-vb[RichTextBoxSnippets#_RTB_Constructor](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_rtb_constructor)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaretPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer CaretPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.TextPointer CaretPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.RichTextBox.CaretPosition" />
      <MemberSignature Language="VB.NET" Value="Public Property CaretPosition As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::TextPointer ^ CaretPosition { System::Windows::Documents::TextPointer ^ get(); void set(System::Windows::Documents::TextPointer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CaretPosition : System.Windows.Documents.TextPointer with get, set" Usage="System.Windows.Controls.RichTextBox.CaretPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia pozycję karetki wejściowej.</summary>
        <value><see cref="T:System.Windows.Documents.TextPointer" /> Obiekt określający położenie wejściowego karetki.  
  
Domyślnie karetka znajduje się w pierwszej pozycji wstawiania na początku zawartości hostowanej przez <see cref="T:System.Windows.Controls.RichTextBox" />. Zobacz <see cref="T:System.Windows.Documents.TextPointer" /> , aby uzyskać więcej informacji na temat terminologii dotyczącej pozycji tekstu, takiej jak "pozycja wstawiania".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład ilustruje sposób użycia tej właściwości.  
  
 [!code-csharp[RichTextBoxSnippets#_RTB_CaretPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_rtb_caretposition)]
 [!code-vb[RichTextBoxSnippets#_RTB_CaretPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_rtb_caretposition)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Podjęto próbę ustawienia tej właściwości na <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Podjęto próbę ustawienia tej właściwości <see cref="T:System.Windows.Documents.TextPointer" /> , która odwołuje się do pozycji poza bieżącym dokumentem.</exception>
        <altmember cref="T:System.Windows.Documents.TextPointer" />
      </Docs>
    </Member>
    <Member MemberName="Document">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.FlowDocument Document { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.FlowDocument Document" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.RichTextBox.Document" />
      <MemberSignature Language="VB.NET" Value="Public Property Document As FlowDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::FlowDocument ^ Document { System::Windows::Documents::FlowDocument ^ get(); void set(System::Windows::Documents::FlowDocument ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Document : System.Windows.Documents.FlowDocument with get, set" Usage="System.Windows.Controls.RichTextBox.Document" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.FlowDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Documents.FlowDocument" /> wartość reprezentującą zawartość <see cref="T:System.Windows.Controls.RichTextBox" />.</summary>
        <value>Obiekt, który reprezentuje zawartość <see cref="T:System.Windows.Controls.RichTextBox" />. <see cref="T:System.Windows.Documents.FlowDocument" />  
  
Domyślnie ta właściwość jest ustawiona na wartość pustą <see cref="T:System.Windows.Documents.FlowDocument" />.  W przypadku wartości pustej <see cref="T:System.Windows.Documents.FlowDocument" /> zawiera pojedynczy <see cref="T:System.Windows.Documents.Paragraph" />element, który zawiera jedną <see cref="T:System.Windows.Documents.Run" /> z nich, która nie zawiera żadnego tekstu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 FlowDocument może być hostowana tylko przez jeden <xref:System.Windows.Controls.RichTextBox>.  Określanie pojedynczej FlowDocument, ponieważ zawartość wielu <xref:System.Windows.Controls.RichTextBox> formantów nie jest obsługiwana.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia tej właściwości.  
  
 [!code-csharp[RichTextBoxSnippets#_RTB_Document](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_rtb_document)]
 [!code-vb[RichTextBoxSnippets#_RTB_Document](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_rtb_document)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Podjęto próbę ustawienia tej właściwości na <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Podjęto próbę ustawienia tej właściwości na <see cref="T:System.Windows.Documents.FlowDocument" /> wartość, która reprezentuje zawartość innej. <see cref="T:System.Windows.Controls.RichTextBox" /></exception>
        <exception cref="T:System.InvalidOperationException">Ta właściwość jest ustawiana podczas aktywowania bloku zmian.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNextSpellingErrorPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetNextSpellingErrorPosition (System.Windows.Documents.TextPointer position, System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetNextSpellingErrorPosition(class System.Windows.Documents.TextPointer position, valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.RichTextBox.GetNextSpellingErrorPosition(System.Windows.Documents.TextPointer,System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextSpellingErrorPosition (position As TextPointer, direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetNextSpellingErrorPosition(System::Windows::Documents::TextPointer ^ position, System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetNextSpellingErrorPosition : System.Windows.Documents.TextPointer * System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="richTextBox.GetNextSpellingErrorPosition (position, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Documents.TextPointer" />
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="position"><see cref="T:System.Windows.Documents.TextPointer" /> Wskazanie pozycji, z której ma zostać wyszukany następny błąd pisowni.</param>
        <param name="direction">A <see cref="T:System.Windows.Documents.LogicalDirection" /> , w której chcesz wyszukać następny błąd pisowni, zaczynając od określonej <c>pozycji</c>.</param>
        <summary>Zwraca wartość wskazującą następny błąd pisowni w zawartości <see cref="T:System.Windows.Controls.RichTextBox" />. <see cref="T:System.Windows.Documents.TextPointer" /></summary>
        <returns>Wskazuje następny błąd pisowni w zawartości <see cref="T:System.Windows.Controls.RichTextBox" />lub <see langword="null" /> Jeśli nie istnieje następny błąd pisowni. <see cref="T:System.Windows.Documents.TextPointer" /></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.RichTextBox.GetSpellingErrorRange(System.Windows.Documents.TextPointer)" />
        <altmember cref="M:System.Windows.Controls.RichTextBox.GetSpellingError(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="GetPositionFromPoint">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetPositionFromPoint (System.Windows.Point point, bool snapToText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetPositionFromPoint(valuetype System.Windows.Point point, bool snapToText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.RichTextBox.GetPositionFromPoint(System.Windows.Point,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetPositionFromPoint(System::Windows::Point point, bool snapToText);" />
      <MemberSignature Language="F#" Value="member this.GetPositionFromPoint : System.Windows.Point * bool -&gt; System.Windows.Documents.TextPointer" Usage="richTextBox.GetPositionFromPoint (point, snapToText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="snapToText" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point">Obiekt określający położenie, dla którego <see cref="T:System.Windows.Documents.TextPointer" /> ma zostać pobrane. <see cref="T:System.Windows.Point" /></param>
        <param name="snapToText">Jeśli <see langword="true" />, ta metoda zawsze <see cref="T:System.Windows.Documents.TextPointer" /> zwraca wartość określającą <see cref="T:System.Windows.Point" /> najbliższą pozycję wstawienia dla danego elementu, niezależnie od tego, czy podany <see cref="T:System.Windows.Point" /> element znajduje się wewnątrz pola ograniczenia znaku.  
  
Jeśli <see langword="false" />, ta metoda zwraca <see langword="null" /> wartość, jeśli <see cref="T:System.Windows.Point" /> określony nie należy do żadnego pola ograniczenia znaku.</param>
        <summary>Zwraca wskazujący <see cref="T:System.Windows.Documents.TextPointer" /> , że punkt wstawiania znajduje się najbliżej określonego położenia.</summary>
        <returns><paramref name="snapToText" /> <see langword="null" /> <see cref="T:System.Windows.Point" /> <see langword="false" /> Określenie najbliższej pozycji wstawiania dla podanego punktu, lub jeśli jest, a podane nie znajduje się w żadnym polu ograniczenia znaku. <see cref="T:System.Windows.Documents.TextPointer" /> Zwróć uwagę, <see cref="T:System.Windows.Documents.TextPointer" /> że zwracana jest zwykle pozycja między dwoma znakami. Użyj właściwości zwracanej <see cref="T:System.Windows.Documents.TextPointer" /> , aby określić, które <see cref="T:System.Windows.Documents.TextPointer" /> z dwóch znaków odpowiadają. <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.RichTextBox>używa standardowego układu współrzędnych, który znajduje się w lewym górnym rogu <xref:System.Windows.Controls.RichTextBox>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wywoływane, <see cref="T:System.Windows.Controls.RichTextBox" /> Jeśli informacje o układzie dla elementu nie są aktualne.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSpellingError">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.SpellingError GetSpellingError (System.Windows.Documents.TextPointer position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Controls.SpellingError GetSpellingError(class System.Windows.Documents.TextPointer position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.RichTextBox.GetSpellingError(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpellingError (position As TextPointer) As SpellingError" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Controls::SpellingError ^ GetSpellingError(System::Windows::Documents::TextPointer ^ position);" />
      <MemberSignature Language="F#" Value="member this.GetSpellingError : System.Windows.Documents.TextPointer -&gt; System.Windows.Controls.SpellingError" Usage="richTextBox.GetSpellingError position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.SpellingError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="position">A <see cref="T:System.Windows.Documents.TextPointer" /> , który określa położenie i logiczny kierunek, który jest rozpoznawany jako znak, który ma być badany pod kątem błędu pisowni. <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> Użyj właściwości<see cref="T:System.Windows.Documents.TextPointer" /> , aby określić kierunek znaku, który ma zostać sprawdzony.</param>
        <summary>Zwraca obiekt skojarzony z dowolnym błędem pisowni w określonym położeniu w zawartości <see cref="T:System.Windows.Controls.RichTextBox" />. <see cref="T:System.Windows.Controls.SpellingError" /></summary>
        <returns>Obiekt zawierający szczegóły błędu pisowni znaleziony w znaku wskazywanym przez <paramref name="position" />lub <see langword="null" /> , jeśli nie istnieje błąd pisowni w określonym znaku. <see cref="T:System.Windows.Controls.SpellingError" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podobnie jak `position` zwykle określa pozycję między dwoma znakami. <xref:System.Windows.Documents.TextPointer> <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> Użyj`position` właściwości, aby określić, który znak należy przeanalizować.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.RichTextBox.GetSpellingErrorRange(System.Windows.Documents.TextPointer)" />
        <altmember cref="M:System.Windows.Controls.RichTextBox.GetNextSpellingErrorPosition(System.Windows.Documents.TextPointer,System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <Member MemberName="GetSpellingErrorRange">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextRange GetSpellingErrorRange (System.Windows.Documents.TextPointer position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextRange GetSpellingErrorRange(class System.Windows.Documents.TextPointer position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.RichTextBox.GetSpellingErrorRange(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpellingErrorRange (position As TextPointer) As TextRange" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextRange ^ GetSpellingErrorRange(System::Windows::Documents::TextPointer ^ position);" />
      <MemberSignature Language="F#" Value="member this.GetSpellingErrorRange : System.Windows.Documents.TextPointer -&gt; System.Windows.Documents.TextRange" Usage="richTextBox.GetSpellingErrorRange position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextRange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="position">A <see cref="T:System.Windows.Documents.TextPointer" /> , który określa położenie i logiczny kierunek, który jest rozpoznawany jako znak, który ma być badany pod kątem błędu pisowni. <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> Użyj właściwości<see cref="T:System.Windows.Documents.TextPointer" /> , aby określić kierunek znaku, który ma zostać sprawdzony.</param>
        <summary>Zwraca obiekt obejmujący wszelkie błędne słowa w określonym położeniu w zawartości <see cref="T:System.Windows.Controls.RichTextBox" />. <see cref="T:System.Windows.Documents.TextRange" /></summary>
        <returns>Obiekt <see cref="T:System.Windows.Documents.TextRange" /> odnoszący się do błędnego wyrazu, który zawiera znak <paramref name="position" />określony przez <see langword="null" /> , lub jeśli w określonym znaku nie istnieje błąd pisowni.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podobnie jak `position` zwykle określa pozycję między dwoma znakami. <xref:System.Windows.Documents.TextPointer> <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> Użyj`position` właściwości, aby określić, który znak należy przeanalizować.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.RichTextBox.GetSpellingError(System.Windows.Documents.TextPointer)" />
        <altmember cref="M:System.Windows.Controls.RichTextBox.GetNextSpellingErrorPosition(System.Windows.Documents.TextPointer,System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <Member MemberName="IsDocumentEnabled">
      <MemberSignature Language="C#" Value="public bool IsDocumentEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDocumentEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.RichTextBox.IsDocumentEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDocumentEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDocumentEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDocumentEnabled : bool with get, set" Usage="System.Windows.Controls.RichTextBox.IsDocumentEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy użytkownik może korzystać z <see cref="T:System.Windows.UIElement" /> obiektów i <see cref="T:System.Windows.ContentElement" /> w obrębie <see cref="T:System.Windows.Controls.RichTextBox" />.</summary>
        <value><see langword="true" />Jeśli użytkownik <see cref="T:System.Windows.UIElement" /> może korzystać z obiektów i <see cref="T:System.Windows.ContentElement" /> w obrębie <see cref="T:System.Windows.Controls.RichTextBox" />; w przeciwnym razie <see langword="false" />,.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.RichTextBox.IsDocumentEnabled%2A>wprowadzono w .NET Framework w wersji 3,5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
   
  
## Examples  
 Poniższy <xref:System.Windows.Controls.CheckBox> przykład tworzy <xref:System.Windows.Controls.RichTextBox> i a ,który<xref:System.Windows.Documents.Hyperlink> zawiera a i. <xref:System.Windows.Controls.Button>  Właściwość jest powiązana z <xref:System.Windows.Controls.Primitives.ToggleButton.IsChecked%2A>właściwością. <xref:System.Windows.Controls.CheckBox> <xref:System.Windows.Controls.RichTextBox.IsDocumentEnabled%2A> <xref:System.Windows.Controls.RichTextBox>  Gdy użytkownik wybierze <xref:System.Windows.Controls.CheckBox>, użytkownik może korzystać <xref:System.Windows.Controls.Button> z i <xref:System.Windows.Documents.Hyperlink>. Gdy użytkownik wyczyści <xref:System.Windows.Controls.CheckBox> <xref:System.Windows.Controls.Button> , i <xref:System.Windows.Documents.Hyperlink> są wyłączone.  
  
 [!code-xaml[RTBIsDocumentEnabled#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RTBIsDocumentEnabled/VB/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDocumentEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsDocumentEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsDocumentEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.RichTextBox.IsDocumentEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsDocumentEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsDocumentEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsDocumentEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.RichTextBox.IsDocumentEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje właściwość <see cref="P:System.Windows.Controls.RichTextBox.IsDocumentEnabled" /> zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.RichTextBox.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalChildren : System.Collections.IEnumerator" Usage="System.Windows.Controls.RichTextBox.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera moduł wyliczający, który może wykonywać iterację logicznych <see langword="RichTextBox" />elementów podrzędnych.</summary>
        <value>Moduł wyliczający dla logicznych elementów podrzędnych.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.RichTextBox.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (constraint As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size constraint);" />
      <MemberSignature Language="F#" Value="override this.MeasureOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="richTextBox.MeasureOverride constraint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="constraint">Struktura określająca ograniczenia dotyczące rozmiaru <see cref="T:System.Windows.Controls.RichTextBox" />. <see cref="T:System.Windows.Size" /></param>
        <summary>Wywołuje się, <see cref="T:System.Windows.Controls.RichTextBox" />by zmienić miarę.</summary>
        <returns>Struktura wskazująca nowy rozmiar <see cref="T:System.Windows.Controls.RichTextBox" />. <see cref="T:System.Windows.Size" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda przesłania <xref:System.Windows.Controls.Control.MeasureOverride%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.RichTextBox.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="richTextBox.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy i zwraca <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> obiekt dla tego <see cref="T:System.Windows.Controls.RichTextBox" />obiektu.</summary>
        <returns>Obiekt dla tego <see cref="T:System.Windows.Controls.RichTextBox" />elementu. <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda przesłania <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDpiChanged">
      <MemberSignature Language="C#" Value="protected override void OnDpiChanged (System.Windows.DpiScale oldDpiScaleInfo, System.Windows.DpiScale newDpiScaleInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDpiChanged(valuetype System.Windows.DpiScale oldDpiScaleInfo, valuetype System.Windows.DpiScale newDpiScaleInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.RichTextBox.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDpiChanged (oldDpiScaleInfo As DpiScale, newDpiScaleInfo As DpiScale)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDpiChanged(System::Windows::DpiScale oldDpiScaleInfo, System::Windows::DpiScale newDpiScaleInfo);" />
      <MemberSignature Language="F#" Value="override this.OnDpiChanged : System.Windows.DpiScale * System.Windows.DpiScale -&gt; unit" Usage="richTextBox.OnDpiChanged (oldDpiScaleInfo, newDpiScaleInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldDpiScaleInfo" Type="System.Windows.DpiScale" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="newDpiScaleInfo" Type="System.Windows.DpiScale" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="oldDpiScaleInfo">Poprzednie ustawienie skalowania DPI.</param>
        <param name="newDpiScaleInfo">Nowe ustawienie skalowania DPI.</param>
        <summary>Wywołuje się, gdy zmienia się wartość DPI, w której jest renderowane pole tekstu sformatowanego.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Selection">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextSelection Selection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.TextSelection Selection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.RichTextBox.Selection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Selection As TextSelection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::TextSelection ^ Selection { System::Windows::Documents::TextSelection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Selection : System.Windows.Documents.TextSelection" Usage="System.Windows.Controls.RichTextBox.Selection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextSelection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt zawierający bieżące zaznaczenie <see cref="T:System.Windows.Controls.RichTextBox" />w. <see cref="T:System.Windows.Documents.TextSelection" /></summary>
        <value>Obiekt zawierający bieżące zaznaczenie <see cref="T:System.Windows.Controls.RichTextBox" />w. <see cref="T:System.Windows.Documents.TextSelection" />  
  
Zwracane <see cref="T:System.Windows.Documents.TextSelection" /> domyślnie <see cref="P:System.Windows.Documents.TextRange.IsEmpty" /> ma wartość<see langword="true" />właściwości. Puste <see cref="T:System.Windows.Documents.TextSelection" /> renderowanie jako karetka w obszarze tekstu bez zaznaczania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Windows.Documents.TextRange.Select%2A> , aby programowo wybrać zawartość.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób użycia tej właściwości.  
  
 [!code-csharp[RichTextBoxSnippets#_RTB_Selection](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_rtb_selection)]
 [!code-vb[RichTextBoxSnippets#_RTB_Selection](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_rtb_selection)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeDocument">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.RichTextBox.ShouldSerializeDocument" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeDocument () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeDocument();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeDocument : unit -&gt; bool" Usage="richTextBox.ShouldSerializeDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wartość wskazującą, czy obowiązująca wartość <see cref="P:System.Windows.Controls.RichTextBox.Document" /> właściwości powinna być serializowana podczas serializacji <see cref="T:System.Windows.Controls.RichTextBox" /> obiektu.</summary>
        <returns><see langword="true" />Jeśli właściwość powinna być serializowana; <see langword="false" />w przeciwnym razie. <see cref="P:System.Windows.Controls.RichTextBox.Document" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.RichTextBox.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Obiekt, który ma zostać dodany jako element podrzędny.</param>
        <summary>Ten typ lub element członkowski obsługuje [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastrukturę i nie jest przeznaczony do użycia bezpośrednio w kodzie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.RichTextBox.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Ciąg, który ma zostać dodany do obiektu.</param>
        <summary>Ten typ lub element członkowski obsługuje [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastrukturę i nie jest przeznaczony do użycia bezpośrednio w kodzie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
