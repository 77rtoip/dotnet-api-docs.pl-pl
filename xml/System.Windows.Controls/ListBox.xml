<Type Name="ListBox" FullName="System.Windows.Controls.ListBox">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2a7983f7d1706b5e52bb8b4e9aae2bcfb0c2bdce" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36366394" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListBox : System.Windows.Controls.Primitives.Selector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ListBox extends System.Windows.Controls.Primitives.Selector" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ListBox" />
  <TypeSignature Language="VB.NET" Value="Public Class ListBox&#xA;Inherits Selector" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListBox : System::Windows::Controls::Primitives::Selector" />
  <TypeSignature Language="F#" Value="type ListBox = class&#xA;    inherit Selector" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.Selector</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.ListBox)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.StyleTypedProperty(Property="ItemContainerStyle", StyleTargetType=typeof(System.Windows.Controls.ListBoxItem))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="46fba-101">Zawiera listę elementów możliwych do wyboru.</span>
      <span class="sxs-lookup">
        <span data-stu-id="46fba-101">Contains a list of selectable items.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46fba-102"><xref:System.Windows.Controls.ListBox> jest <xref:System.Windows.Controls.ItemsControl>, co oznacza, że może zawierać kolekcję obiektów dowolnego typu (np. ciąg, image lub panelu).</span><span class="sxs-lookup"><span data-stu-id="46fba-102"><xref:System.Windows.Controls.ListBox> is an <xref:System.Windows.Controls.ItemsControl>, which means it can contain a collection of objects of any type (such as string, image, or panel).</span></span> <span data-ttu-id="46fba-103">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Controls.ItemsControl> klasy.</span><span class="sxs-lookup"><span data-stu-id="46fba-103">For more information, see the <xref:System.Windows.Controls.ItemsControl> class.</span></span>  
  
 <span data-ttu-id="46fba-104">Więcej niż jeden element w <xref:System.Windows.Controls.ListBox> jest widoczny, w odróżnieniu od <xref:System.Windows.Controls.ComboBox>, która zawiera tylko wybrany element widoczny, chyba że <xref:System.Windows.Controls.ComboBox.IsDropDownOpen%2A> jest właściwość `true`.</span><span class="sxs-lookup"><span data-stu-id="46fba-104">More than one item in a <xref:System.Windows.Controls.ListBox> is visible, unlike the <xref:System.Windows.Controls.ComboBox>, which has only the selected item visible unless the <xref:System.Windows.Controls.ComboBox.IsDropDownOpen%2A> property is `true`.</span></span>  <span data-ttu-id="46fba-105"><xref:System.Windows.Controls.ListBox.SelectionMode%2A> Właściwość określa, czy więcej niż jeden element w <xref:System.Windows.Controls.ListBox> jest możliwy naraz.</span><span class="sxs-lookup"><span data-stu-id="46fba-105">The <xref:System.Windows.Controls.ListBox.SelectionMode%2A> property determines whether more than one item in the <xref:System.Windows.Controls.ListBox> is selectable at a time.</span></span>  
  
 <span data-ttu-id="46fba-106"><xref:System.Windows.Controls.ListBox.SelectionMode%2A> Właściwość określa, ile elementów przez użytkownika można wybrać w tym samym czasie.</span><span class="sxs-lookup"><span data-stu-id="46fba-106">The <xref:System.Windows.Controls.ListBox.SelectionMode%2A> property determines how many items a user can select at one time.</span></span> <span data-ttu-id="46fba-107">Można ustawić właściwości <xref:System.Windows.Controls.SelectionMode.Single> (ustawienie domyślne), <xref:System.Windows.Controls.SelectionMode.Multiple>, lub <xref:System.Windows.Controls.SelectionMode.Extended>.</span><span class="sxs-lookup"><span data-stu-id="46fba-107">You can set the property to <xref:System.Windows.Controls.SelectionMode.Single> (the default), <xref:System.Windows.Controls.SelectionMode.Multiple>, or <xref:System.Windows.Controls.SelectionMode.Extended>.</span></span> <span data-ttu-id="46fba-108">Poniższej tabeli opisano zachowanie tych wartości wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="46fba-108">The following table described the behavior of these enumeration values.</span></span>  
  
|<span data-ttu-id="46fba-109">Wartość</span><span class="sxs-lookup"><span data-stu-id="46fba-109">Value</span></span>|<span data-ttu-id="46fba-110">Opis</span><span class="sxs-lookup"><span data-stu-id="46fba-110">Description</span></span>|  
|-----------|-----------------|  
|<xref:System.Windows.Controls.SelectionMode.Single>|<span data-ttu-id="46fba-111">Użytkownik może wybrać tylko jeden element naraz.</span><span class="sxs-lookup"><span data-stu-id="46fba-111">The user can select only one item at a time.</span></span>|  
|<xref:System.Windows.Controls.SelectionMode.Multiple>|<span data-ttu-id="46fba-112">Użytkownik może wybrać wiele elementów bez przytrzymując naciśnięty klawisz modyfikujący.</span><span class="sxs-lookup"><span data-stu-id="46fba-112">The user can select multiple items without holding down a modifier key.</span></span>|  
|<xref:System.Windows.Controls.SelectionMode.Extended>|<span data-ttu-id="46fba-113">Użytkownik może wybrać wiele kolejnych elementów, trzymając naciśnięty klawisz SHIFT lub -kolejnych elementów przytrzymując klawisz CTRL i klikając elementy.</span><span class="sxs-lookup"><span data-stu-id="46fba-113">The user can select multiple consecutive items while holding down the SHIFT key or non-consecutive items by holding down the CTRL key and clicking the items.</span></span>|  
  
 <span data-ttu-id="46fba-114"><xref:System.Windows.Controls.ListBox> Formanty są często używane dla wiązania danych.</span><span class="sxs-lookup"><span data-stu-id="46fba-114"><xref:System.Windows.Controls.ListBox> controls are often used with data binding.</span></span>  <span data-ttu-id="46fba-115">Aby uzyskać więcej informacji, zobacz [omówienie powiązania danych](~/docs/framework/wpf/data/data-binding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="46fba-115">For more information, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 <span data-ttu-id="46fba-116">Wyświetlanie dużą liczbę elementów może spowodować problemy z wydajnością.</span><span class="sxs-lookup"><span data-stu-id="46fba-116">Displaying a large number of items may cause performance issues.</span></span>  <span data-ttu-id="46fba-117">Zobacz [optymalizacji wydajności: formanty](~/docs/framework/wpf/advanced/optimizing-performance-controls.md) Aby uzyskać więcej informacji.</span><span class="sxs-lookup"><span data-stu-id="46fba-117">See [Optimizing Performance: Controls](~/docs/framework/wpf/advanced/optimizing-performance-controls.md) for more information.</span></span>  
  
## <a name="customizing-the-listbox-control"></a><span data-ttu-id="46fba-118">Dostosowywanie formantu ListBox</span><span class="sxs-lookup"><span data-stu-id="46fba-118">Customizing the ListBox Control</span></span>  
 <span data-ttu-id="46fba-119">Aby zastosować te same ustawienia właściwości z wieloma <xref:System.Windows.Controls.ListBox> formantów, użyj <xref:System.Windows.FrameworkElement.Style%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="46fba-119">To apply the same property settings to multiple <xref:System.Windows.Controls.ListBox> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="46fba-120">Można zmodyfikować domyślne <xref:System.Windows.Controls.ControlTemplate> umożliwiają unikatowego wyglądu formantu.</span><span class="sxs-lookup"><span data-stu-id="46fba-120">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="46fba-121">Aby uzyskać więcej informacji o tworzeniu <xref:System.Windows.Controls.ControlTemplate>, zobacz [Dostosowywanie wyglądu formant tworząc ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="46fba-121">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="46fba-122">Aby wyświetlić części i Stany, które są specyficzne dla <xref:System.Windows.Controls.ListBox>, zobacz [style pola listy i szablony](~/docs/framework/wpf/controls/listbox-styles-and-templates.md).</span><span class="sxs-lookup"><span data-stu-id="46fba-122">To see the parts and states that are specific to the <xref:System.Windows.Controls.ListBox>, see [ListBox Styles and Templates](~/docs/framework/wpf/controls/listbox-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="46fba-123">Właściwości zależności dla tego formantu może być ustawiona w stylu domyślnym formantu.</span><span class="sxs-lookup"><span data-stu-id="46fba-123">Dependency properties for this control might be set by the control’s default style.</span></span>  <span data-ttu-id="46fba-124">Jeśli właściwość jest ustawiona w stylu domyślnym, gdy formant jest wyświetlany w aplikacji właściwość może zmienić ze swojej wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="46fba-124">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="46fba-125">Domyślny styl jest określana, przez które kompozycji pulpitu jest używana, gdy aplikacja jest uruchomiona.</span><span class="sxs-lookup"><span data-stu-id="46fba-125">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="46fba-126">Aby uzyskać więcej informacji, zobacz [domyślnej kompozycji WPF](http://go.microsoft.com/fwlink/?LinkID=158252).</span><span class="sxs-lookup"><span data-stu-id="46fba-126">For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="46fba-127">Ustawienie właściwości visual będzie miał wpływ tylko jeśli ta właściwość jest obecny w obu <xref:System.Windows.Controls.ListBox> formant na szablon domyślny i ustawić za pomocą.</span><span class="sxs-lookup"><span data-stu-id="46fba-127">Setting a visual property will only have an effect if that property is both present in <xref:System.Windows.Controls.ListBox> control's default template and is set by using a .</span></span> <span data-ttu-id="46fba-128">Lista właściwości visual można znaleźć w sekcji "Zmiana Visual struktury kontroli" [Dostosowywanie wyglądu formant tworząc ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="46fba-128">You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46fba-129">Poniższy przykład tworzy <xref:System.Windows.Controls.ListBox> i subskrybuje <xref:System.Windows.Controls.Primitives.Selector.SelectionChanged> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="46fba-129">The following example creates a <xref:System.Windows.Controls.ListBox> and subscribes to the <xref:System.Windows.Controls.Primitives.Selector.SelectionChanged> event.</span></span>  
  
 [!code-xaml[ListBoxEvent#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ListBoxEvent/CSharp/Pane1.xaml#1)]  
  
 [!code-csharp[ListBoxEvent#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ListBoxEvent/CSharp/Pane1.xaml.cs#2)]
 [!code-vb[ListBoxEvent#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListBoxEvent/VisualBasic/Pane1.xaml.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="46fba-130">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Controls.ListBox" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-130">Initializes a new instance of the <see cref="T:System.Windows.Controls.ListBox" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnchorItem">
      <MemberSignature Language="C#" Value="protected object AnchorItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AnchorItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ListBox.AnchorItem" />
      <MemberSignature Language="VB.NET" Value="Protected Property AnchorItem As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Object ^ AnchorItem { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AnchorItem : obj with get, set" Usage="System.Windows.Controls.ListBox.AnchorItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="46fba-131">Pobiera lub ustawia element, który jest początkowo zaznaczone, gdy <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> jest <see cref="F:System.Windows.Controls.SelectionMode.Extended" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-131">Gets or sets the item that is initially selected when <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> is <see cref="F:System.Windows.Controls.SelectionMode.Extended" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="46fba-132">Element jest początkowo zaznaczone, gdy <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> jest <see cref="F:System.Windows.Controls.SelectionMode.Extended" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-132">The item that is initially selected when <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> is <see cref="F:System.Windows.Controls.SelectionMode.Extended" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.DependencyObject GetContainerForItemOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.DependencyObject GetContainerForItemOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListBox.GetContainerForItemOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetContainerForItemOverride () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::DependencyObject ^ GetContainerForItemOverride();" />
      <MemberSignature Language="F#" Value="override this.GetContainerForItemOverride : unit -&gt; System.Windows.DependencyObject" Usage="listBox.GetContainerForItemOverride " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="46fba-133">Tworzy lub identyfikuje element używany do wyświetlania określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-133">Creates or identifies the element used to display a specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="46fba-134">Element używany do wyświetlania określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-134">The element used to display a specified item.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlesScrolling">
      <MemberSignature Language="C#" Value="protected internal override bool HandlesScrolling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HandlesScrolling" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ListBox.HandlesScrolling" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property HandlesScrolling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HandlesScrolling { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HandlesScrolling : bool" Usage="System.Windows.Controls.ListBox.HandlesScrolling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="46fba-135">Pobiera wartość wskazującą, czy <see cref="T:System.Windows.Controls.ListBox" /> obsługuje przewijania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-135">Gets a value that indicates whether the <see cref="T:System.Windows.Controls.ListBox" /> supports scrolling.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="46fba-136">
            <see langword="true" /> Jeśli <see cref="T:System.Windows.Controls.ListBox" /> obsługuje przewijania; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-136">
              <see langword="true" /> if the <see cref="T:System.Windows.Controls.ListBox" /> supports scrolling; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46fba-137">Jeśli formant ma <xref:System.Windows.Controls.ScrollViewer> w jego styl i ma niestandardowy klawiatury przewijanie zachowanie, <xref:System.Windows.Controls.ListBox.HandlesScrolling%2A> powinien zwrócić `true`.</span><span class="sxs-lookup"><span data-stu-id="46fba-137">If the control has a <xref:System.Windows.Controls.ScrollViewer> in its style and has a custom keyboard scrolling behavior, <xref:System.Windows.Controls.ListBox.HandlesScrolling%2A> should return `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemItsOwnContainerOverride">
      <MemberSignature Language="C#" Value="protected override bool IsItemItsOwnContainerOverride (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsItemItsOwnContainerOverride(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListBox.IsItemItsOwnContainerOverride(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsItemItsOwnContainerOverride (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsItemItsOwnContainerOverride(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.IsItemItsOwnContainerOverride : obj -&gt; bool" Usage="listBox.IsItemItsOwnContainerOverride item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="46fba-138">Określony element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-138">Specified item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46fba-139">Określa, czy określony element jest (lub kwalifikuje się być) własną <c>ItemContainer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-139">Determines if the specified item is (or is eligible to be) its own <c>ItemContainer</c>.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="46fba-140">
            <see langword="true" /> Jeśli element znajduje się jego własnej <see langword="ItemContainer" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-140">
              <see langword="true" /> if the item is its own <see langword="ItemContainer" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListBox.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="listBox.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="46fba-141">Zawiera odpowiednie <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer" /> implementacji dla tego formantu, jako część [! Infrastruktura automatyzacji include[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-MD.MD)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-141">Provides an appropriate <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer" /> implementation for this control, as part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] automation infrastructure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="46fba-142">Określonego typu <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-142">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsMouseCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsMouseCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListBox.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnIsMouseCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnIsMouseCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnIsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="listBox.OnIsMouseCapturedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="46fba-143">Udostępnia dane dla <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-143">Provides data for the <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46fba-144">Wywoływane, gdy <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> zmiany właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-144">Called when the <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListBox.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="listBox.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="46fba-145">Udostępnia dane dla <see cref="T:System.Windows.Input.KeyEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-145">Provides data for <see cref="T:System.Windows.Input.KeyEventArgs" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46fba-146">Odpowiada <see cref="E:System.Windows.UIElement.KeyDown" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-146">Responds to the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListBox.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="listBox.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="46fba-147">Udostępnia dane dla <see cref="T:System.Windows.Input.MouseEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-147">Provides data for <see cref="T:System.Windows.Input.MouseEventArgs" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46fba-148">Wywoływane, gdy <see cref="T:System.Windows.Controls.ListBox" /> raporty myszą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-148">Called when a <see cref="T:System.Windows.Controls.ListBox" /> reports a mouse move.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanged">
      <MemberSignature Language="C#" Value="protected override void OnSelectionChanged (System.Windows.Controls.SelectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSelectionChanged(class System.Windows.Controls.SelectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListBox.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSelectionChanged (e As SelectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSelectionChanged(System::Windows::Controls::SelectionChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnSelectionChanged : System.Windows.Controls.SelectionChangedEventArgs -&gt; unit" Usage="listBox.OnSelectionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.SelectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="46fba-149">Udostępnia dane dla <see cref="T:System.Windows.Controls.SelectionChangedEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-149">Provides data for <see cref="T:System.Windows.Controls.SelectionChangedEventArgs" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46fba-150">Odpowiada na zaznaczenie w polu listy zmienić podnosząc <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-150">Responds to a list box selection change by raising a <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListBox.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.PrepareContainerForItemOverride : System.Windows.DependencyObject * obj -&gt; unit" Usage="listBox.PrepareContainerForItemOverride (element, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="46fba-151">Element używany do wyświetlania określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-151">Element used to display the specified item.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="46fba-152">Określony element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-152">Specified item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46fba-153">Przygotowuje określony element, aby wyświetlić określony element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-153">Prepares the specified element to display the specified item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46fba-154">Przygotowywanie elementu może obejmować stosowanie stylów, ustawienia powiązania i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="46fba-154">Preparing the element may involve applying styles, setting bindings, and so on.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollIntoView">
      <MemberSignature Language="C#" Value="public void ScrollIntoView (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollIntoView(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListBox.ScrollIntoView(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollIntoView (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollIntoView(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="member this.ScrollIntoView : obj -&gt; unit" Usage="listBox.ScrollIntoView item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="46fba-155">Obiekt do przewijania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-155">Object to scroll.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46fba-156">Powoduje, że obiekt przewiń do widoku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-156">Causes the object to scroll into view.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46fba-157">Jeśli obiekt nie jest widoczny, jest wyrównywany u góry lub u dołu okienka ekranu.</span><span class="sxs-lookup"><span data-stu-id="46fba-157">If the object is not visible, it is aligned at the top or bottom of the viewport.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListBox.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectAll();" />
      <MemberSignature Language="F#" Value="member this.SelectAll : unit -&gt; unit" Usage="listBox.SelectAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="46fba-158">Wybiera wszystkie elementy w <see cref="T:System.Windows.Controls.ListBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-158">Selects all the items in a <see cref="T:System.Windows.Controls.ListBox" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="46fba-159">Poniższy przykład przedstawia użycie <xref:System.Windows.Controls.ListBox.SelectAll%2A> metody, aby wybrać i zaznacz wszystkie elementy w polu listy.</span><span class="sxs-lookup"><span data-stu-id="46fba-159">The following example shows how to use the <xref:System.Windows.Controls.ListBox.SelectAll%2A> method to select and highlight all the items in a list box.</span></span>  
  
 [!code-csharp[ListBox_snip#ListBoxSelectAll](~/samples/snippets/csharp/VS_Snippets_Wpf/ListBox_snip/CSharp/Window1.xaml.cs#listboxselectall)]
 [!code-vb[ListBox_snip#ListBoxSelectAll](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListBox_snip/visualbasic/window1.xaml.vb#listboxselectall)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="46fba-160">
            <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> Właściwość jest ustawiona na <see cref="F:System.Windows.Controls.SelectionMode.Single" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-160">The <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> property is set to <see cref="F:System.Windows.Controls.SelectionMode.Single" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SelectedItems">
      <MemberSignature Language="C#" Value="public System.Collections.IList SelectedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList SelectedItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ListBox.SelectedItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedItems As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ SelectedItems { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItems : System.Collections.IList" Usage="System.Windows.Controls.ListBox.SelectedItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="46fba-161">Pobiera obecnie zaznaczonych elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-161">Gets the currently selected items.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="46fba-162">Zwraca kolekcję aktualnie wybrane elementy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-162">Returns a collection of the currently selected items.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46fba-163">Ta właściwość ma być użyta, gdy <xref:System.Windows.Controls.ListBox.SelectionMode%2A> nie jest równa <xref:System.Windows.Controls.SelectionMode.Single>.</span><span class="sxs-lookup"><span data-stu-id="46fba-163">This property is meant to be used when <xref:System.Windows.Controls.ListBox.SelectionMode%2A> does not equal <xref:System.Windows.Controls.SelectionMode.Single>.</span></span> <span data-ttu-id="46fba-164">Jeśli trybem wyboru jest <xref:System.Windows.Controls.SelectionMode.Single> jest prawidłowe właściwości używania <xref:System.Windows.Controls.Primitives.Selector.SelectedItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="46fba-164">If the selection mode is <xref:System.Windows.Controls.SelectionMode.Single> the correct property to use is <xref:System.Windows.Controls.Primitives.Selector.SelectedItem%2A>.</span></span>  
  
<a name="dependencyPropertyInfo_SelectedItems"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="46fba-165">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="46fba-165">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="46fba-166">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="46fba-166">Identifier field</span></span>|<xref:System.Windows.Controls.ListBox.SelectedItemsProperty>|  
|<span data-ttu-id="46fba-167">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="46fba-167">Metadata properties set to `true`</span></span>|<span data-ttu-id="46fba-168">Brak</span><span class="sxs-lookup"><span data-stu-id="46fba-168">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="46fba-169">Poniższy przykład przedstawia użycie <xref:System.Windows.Controls.ListBox.SelectedItems%2A> właściwości w celu określenia, czy pole listy ma jakiekolwiek wybrane elementy.</span><span class="sxs-lookup"><span data-stu-id="46fba-169">The following example shows how to use the <xref:System.Windows.Controls.ListBox.SelectedItems%2A> property to determine whether a list box has any selected items.</span></span>  
  
 [!code-csharp[ListBox_snip#ListBoxSelectedItems](~/samples/snippets/csharp/VS_Snippets_Wpf/ListBox_snip/CSharp/Window1.xaml.cs#listboxselecteditems)]
 [!code-vb[ListBox_snip#ListBoxSelectedItems](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListBox_snip/visualbasic/window1.xaml.vb#listboxselecteditems)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="46fba-170">
            <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> Właściwość jest ustawiona na <see cref="F:System.Windows.Controls.SelectionMode.Single" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-170">The <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> property is set to <see cref="F:System.Windows.Controls.SelectionMode.Single" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SelectedItemsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectedItemsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectedItemsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ListBox.SelectedItemsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectedItemsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectedItemsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectedItemsProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ListBox.SelectedItemsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="46fba-171">Identyfikuje <see cref="P:System.Windows.Controls.ListBox.SelectedItems" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-171">Identifies the <see cref="P:System.Windows.Controls.ListBox.SelectedItems" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionMode">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.SelectionMode SelectionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.SelectionMode SelectionMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ListBox.SelectionMode" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionMode As SelectionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::SelectionMode SelectionMode { System::Windows::Controls::SelectionMode get(); void set(System::Windows::Controls::SelectionMode value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionMode : System.Windows.Controls.SelectionMode with get, set" Usage="System.Windows.Controls.ListBox.SelectionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.SelectionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="46fba-172">Pobiera lub ustawia zachowanie dotyczące wyboru dla <see cref="T:System.Windows.Controls.ListBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-172">Gets or sets the selection behavior for a <see cref="T:System.Windows.Controls.ListBox" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="46fba-173">Jeden z <see cref="T:System.Windows.Controls.SelectionMode" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-173">One of the <see cref="T:System.Windows.Controls.SelectionMode" /> values.</span>
          </span>
          <span data-ttu-id="46fba-174">Wartość domyślna to <see cref="F:System.Windows.Controls.SelectionMode.Single" /> zaznaczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-174">The default is <see cref="F:System.Windows.Controls.SelectionMode.Single" /> selection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_SelectionMode"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="46fba-175">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="46fba-175">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="46fba-176">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="46fba-176">Identifier field</span></span>|<xref:System.Windows.Controls.ListBox.SelectionModeProperty>|  
|<span data-ttu-id="46fba-177">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="46fba-177">Metadata properties set to `true`</span></span>|<span data-ttu-id="46fba-178">Brak</span><span class="sxs-lookup"><span data-stu-id="46fba-178">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="46fba-179">W poniższym przykładzie <xref:System.Windows.Controls.ListBox.SelectionMode%2A> właściwości <xref:System.Windows.Controls.SelectionMode.Multiple>.</span><span class="sxs-lookup"><span data-stu-id="46fba-179">The following example sets the <xref:System.Windows.Controls.ListBox.SelectionMode%2A> property to <xref:System.Windows.Controls.SelectionMode.Multiple>.</span></span>  
  
 [!code-xaml[ListBoxEvent#4](~/samples/snippets/csharp/VS_Snippets_Wpf/ListBoxEvent/CSharp/Pane1.xaml#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ListBox.SelectionModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionModeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectionModeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ListBox.SelectionModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="46fba-180">Identyfikuje <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-180">Identifies the <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSelectedItems">
      <MemberSignature Language="C#" Value="protected bool SetSelectedItems (System.Collections.IEnumerable selectedItems);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool SetSelectedItems(class System.Collections.IEnumerable selectedItems) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListBox.SetSelectedItems(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Protected Function SetSelectedItems (selectedItems As IEnumerable) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool SetSelectedItems(System::Collections::IEnumerable ^ selectedItems);" />
      <MemberSignature Language="F#" Value="member this.SetSelectedItems : System.Collections.IEnumerable -&gt; bool" Usage="listBox.SetSelectedItems selectedItems" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedItems" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="selectedItems">
          <span data-ttu-id="46fba-181">Kolekcja elementów, które mają być zaznaczone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-181">Collection of items to be selected.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46fba-182">Ustawia zbiór wybranych elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-182">Sets a collection of selected items.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="46fba-183">
            <see langword="true" /> Jeśli wszystkie elementy zostały zaznaczone; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-183">
              <see langword="true" /> if all items have been selected; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnselectAll">
      <MemberSignature Language="C#" Value="public void UnselectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnselectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListBox.UnselectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnselectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnselectAll();" />
      <MemberSignature Language="F#" Value="member this.UnselectAll : unit -&gt; unit" Usage="listBox.UnselectAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="46fba-184">Czyści wszystkie zaznaczenie w <see cref="T:System.Windows.Controls.ListBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46fba-184">Clears all the selection in a <see cref="T:System.Windows.Controls.ListBox" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="46fba-185">Poniższy przykład przedstawia użycie <xref:System.Windows.Controls.ListBox.UnselectAll%2A> metodę, aby anulować wszystkie elementy w polu listy.</span><span class="sxs-lookup"><span data-stu-id="46fba-185">The following example shows how to use the <xref:System.Windows.Controls.ListBox.UnselectAll%2A> method to unselect all the items in a list box.</span></span>  
  
 [!code-csharp[ListBox_snip#ListBoxUnselectAll](~/samples/snippets/csharp/VS_Snippets_Wpf/ListBox_snip/CSharp/Window1.xaml.cs#listboxunselectall)]
 [!code-vb[ListBox_snip#ListBoxUnselectAll](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListBox_snip/visualbasic/window1.xaml.vb#listboxunselectall)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>