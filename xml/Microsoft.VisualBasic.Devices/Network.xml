<Type Name="Network" FullName="Microsoft.VisualBasic.Devices.Network">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="80e90abf9e0a5561b68c6641c13c00a073ce7f50" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36659791" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Network" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Network extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.Network" />
  <TypeSignature Language="VB.NET" Value="Public Class Network" />
  <TypeSignature Language="C++ CLI" Value="public ref class Network" />
  <TypeSignature Language="F#" Value="type Network = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia właściwości, zdarzeń i metody interakcji z sieci, do której komputer jest połączony.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono przykłady dotyczące zadań `My.Computer.Network` obiektu.  
  
|Do|Zobacz|  
|-|-|  
|Przekaż plik|[Instrukcje: przekazywanie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
|Pobieranie pliku|[Instrukcje: pobieranie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
|Sprawdzanie stanu połączenia|[Instrukcje: sprawdzanie stanu połączenia](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-check-connection-status.md)|  
  
   
  
## Examples  
 W tym przykładzie powoduje przekazanie pliku `Order.txt` do http://www.cohowinery.com/uploads.  
  
 [!code-vb[VbVbalrMyNetwork#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Network ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Network();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.VisualBasic.Devices.Network" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera określonego pliku zdalnego i zapisuje go w określonej lokalizacji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Ścieżka pliku do pobrania, w tym pliku nazwy i hosta adresu.</param>
        <param name="destinationFileName">Nazwa pliku i ścieżka pobranego pliku.</param>
        <summary>Pobiera określonego pliku zdalnego i zapisuje go w określonej lokalizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli plik docelowy już istnieje, `DownloadFile` — metoda nie spowoduje zastąpienie istniejącego pliku. Można użyć jednej z innych przeciążeń <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> metodę, aby go zastąpić istniejące pliki, poinstruuj podania poświadczeń użytkownika lub określ wartość określonego limitu czasu.  
  
 `DownloadFile` dane wyjściowe śledzenia informacji po włączeniu śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [włączenie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  `DownloadFile` — Metoda nie wysyła opcjonalne nagłówki HTTP. Jeśli brakuje nagłówka agenta użytkownika opcjonalnego, niektóre serwery mogą zwracać 500 (wewnętrzny błąd serwera). Aby wysłać opcjonalne nagłówki, należy tworzyć żądania przy użyciu <xref:System.Net.WebClient> klasy.  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.DownloadFile` metody.  
  
|Do|Zobacz|  
|-|-|  
|Pobieranie pliku|[Instrukcje: pobieranie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje ją `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje ją `C:\Documents and Settings\All Users\Documents`, określając wartość limitu czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> kończy się znakiem ukośnika.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowiedział w domyślny limit czasu (w sekundach 100).</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostało odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Formanty prawa dostępu do zasobów Internetu HTTP. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Ścieżka pliku do pobrania, w tym pliku nazwy i hosta adresu.</param>
        <param name="destinationFileName">Nazwa pliku i ścieżka pobranego pliku.</param>
        <summary>Pobiera określonego pliku zdalnego i zapisuje go w określonej lokalizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli plik docelowy już istnieje, `DownloadFile` — metoda nie spowoduje zastąpienie istniejącego pliku. Można użyć jednej z innych przeciążeń <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> metodę, aby go zastąpić istniejące pliki, poinstruuj podania poświadczeń użytkownika lub określ wartość określonego limitu czasu. `DownloadFile` dane wyjściowe śledzenia informacji po włączeniu śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [włączenie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  `DownloadFile` — Metoda nie wysyła opcjonalne nagłówki HTTP. Jeśli brakuje nagłówka agenta użytkownika opcjonalnego, niektóre serwery mogą zwracać 500 (wewnętrzny błąd serwera). Aby wysłać opcjonalne nagłówki, należy tworzyć żądania przy użyciu <xref:System.Net.WebClient> klasy.  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.DownloadFile` metody.  
  
|Do|Zobacz|  
|-|-|  
|Pobieranie pliku|[Instrukcje: pobieranie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje ją `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje ją `C:\Documents and Settings\All Users\Documents`, określając wartość limitu czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> kończy się znakiem ukośnika.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowiedział w domyślny limit czasu (w sekundach 100).</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostało odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Formanty prawa dostępu do zasobów Internetu HTTP. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Ścieżka pliku do pobrania, w tym pliku nazwy i hosta adresu.</param>
        <param name="destinationFileName">Nazwa pliku i ścieżka pobranego pliku.</param>
        <param name="userName">Nazwa użytkownika do uwierzytelniania. Domyślna to ciąg pusty "".</param>
        <param name="password">Hasło do uwierzytelniania. Domyślna to ciąg pusty "".</param>
        <summary>Pobiera określonego pliku zdalnego i zapisuje go w określonej lokalizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli plik docelowy już istnieje, `DownloadFile` — metoda nie spowoduje zastąpienie istniejącego pliku. Można użyć jednej z innych przeciążeń <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> metody, aby zastąpić istniejące pliki lub określ wartość limitu czasu określonego.  
  
 `DownloadFile` dane wyjściowe śledzenia informacji po włączeniu śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [włączenie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  `DownloadFile` — Metoda nie wysyła opcjonalne nagłówki HTTP. Jeśli brakuje nagłówka agenta użytkownika opcjonalnego, niektóre serwery mogą zwracać 500 (wewnętrzny błąd serwera). Aby wysłać opcjonalne nagłówki, należy tworzyć żądania przy użyciu <xref:System.Net.WebClient> klasy.  
  
> [!NOTE]
>  Protokół FTP wysyła informacje, w tym hasła w postaci zwykłego tekstu i nie powinna być używana do przesyłania poufnych informacji.  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.DownloadFile` metody.  
  
|Do|Zobacz|  
|-|-|  
|Pobieranie pliku|[Instrukcje: pobieranie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje ją `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje ją `C:\Documents and Settings\All Users\Documents`, określając wartość limitu czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> kończy się znakiem ukośnika.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowiedział w domyślny limit czasu (w sekundach 100).</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostało odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Formanty prawa dostępu do zasobów Internetu HTTP. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Ścieżka pliku do pobrania, w tym pliku nazwy i hosta adresu.</param>
        <param name="destinationFileName">Nazwa pliku i ścieżka pobranego pliku.</param>
        <param name="userName">Nazwa użytkownika do uwierzytelniania. Domyślna to ciąg pusty "".</param>
        <param name="password">Hasło do uwierzytelniania. Domyślna to ciąg pusty "".</param>
        <summary>Pobiera określonego pliku zdalnego i zapisuje go w określonej lokalizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli plik docelowy już istnieje, `DownloadFile` — metoda nie spowoduje zastąpienie istniejącego pliku. Można użyć jednej z innych przeciążeń <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> metody, aby zastąpić istniejące pliki lub określ wartość limitu czasu określonego.  
  
 `DownloadFile` dane wyjściowe śledzenia informacji po włączeniu śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [włączenie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  `DownloadFile` — Metoda nie wysyła opcjonalne nagłówki HTTP. Jeśli brakuje nagłówka agenta użytkownika opcjonalnego, niektóre serwery mogą zwracać 500 (wewnętrzny błąd serwera). Aby wysłać opcjonalne nagłówki, należy tworzyć żądania przy użyciu <xref:System.Net.WebClient> klasy.  
  
> [!NOTE]
>  Protokół FTP wysyła informacje, w tym hasła w postaci zwykłego tekstu i nie powinna być używana do przesyłania poufnych informacji.  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.DownloadFile` metody.  
  
|Do|Zobacz|  
|-|-|  
|Pobieranie pliku|[Instrukcje: pobieranie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje ją `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje ją `C:\Documents and Settings\All Users\Documents`, określając wartość limitu czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> kończy się znakiem ukośnika.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowiedział w domyślny limit czasu (w sekundach 100).</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostało odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Formanty prawa dostępu do zasobów Internetu HTTP. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * System.Net.ICredentials * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, networkCredentials, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">
          <see langword="String" /> lub <see cref="T:System.Uri" />. Ścieżka pliku do pobrania, w tym pliku nazwy i hosta adresu.</param>
        <param name="destinationFileName">
          <see langword="String" />. Nazwa pliku i ścieżka pobranego pliku.</param>
        <param name="networkCredentials">
          <see cref="T:System.Net.ICredentials" />. Poświadczenia, które mają być dostarczone.</param>
        <param name="showUI">
          <see langword="True" /> Aby wyświetlić postęp operacji. w przeciwnym razie <see langword="False" />. Wartość domyślna to <see langword="False" />.</param>
        <param name="connectionTimeout">Interwał limitu czasu w milisekundach. Domyślna to 100 sekund.</param>
        <param name="overwrite">
          <see langword="True" /> Aby zastąpić istniejące pliki; w przeciwnym razie <see langword="False" />. Wartość domyślna to <see langword="False" />.</param>
        <summary>Pobiera określonego pliku zdalnego i zapisuje go w określonej lokalizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `showUI` ustawiono `True`, zostanie wyświetlone okno dialogowe pokazujący postęp operacji; okno dialogowe zawiera **anulować** przycisku, który może służyć do anulowania operacji. Okno dialogowe nie jest modalne i dlatego nie są blokowane w danych wejściowych użytkownika do innych okien w programie.  
  
 Jeśli serwer nie odpowie w ciągu określonego `connectionTimeout`, anulowanie operacji i jest zgłaszany wyjątek.  
  
 `DownloadFile` dane wyjściowe śledzenia informacji po włączeniu śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [włączenie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  `DownloadFile` — Metoda nie wysyła opcjonalne nagłówki HTTP. Jeśli brakuje nagłówka agenta użytkownika opcjonalnego, niektóre serwery mogą zwracać 500 (wewnętrzny błąd serwera). Aby wysłać opcjonalne nagłówki, należy tworzyć żądania przy użyciu <xref:System.Net.WebClient> klasy.  
  
> [!NOTE]
>  Protokół FTP wysyła informacje, w tym hasła w postaci zwykłego tekstu i nie powinna być używana do przesyłania poufnych informacji.  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.DownloadFile` metody.  
  
|Do|Zobacz|  
|-|-|  
|Pobieranie pliku|[Instrukcje: pobieranie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje ją `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje ją `C:\Documents and Settings\All Users\Documents`, określając wartość limitu czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> kończy się znakiem ukośnika.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> ustawiono <see langword="False" /> i plik docelowy już istnieje.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowie w ciągu określonego <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostało odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Określa uprawnienia związane z interfejsów użytkownika i Schowka. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Formanty prawa dostępu do zasobów Internetu HTTP. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">Ścieżka pliku do pobrania, w tym pliku nazwy i hosta adresu.</param>
        <param name="destinationFileName">Nazwa pliku i ścieżka pobranego pliku.</param>
        <param name="userName">Nazwa użytkownika do uwierzytelniania. Domyślna to ciąg pusty "".</param>
        <param name="password">Hasło do uwierzytelniania. Domyślna to ciąg pusty "".</param>
        <param name="showUI">
          <see langword="True" /> Aby wyświetlić postęp operacji. w przeciwnym razie <see langword="False" />. Wartość domyślna to <see langword="False" />.</param>
        <param name="connectionTimeout">
          <see cref="T:System.Int32" />. Interwał limitu czasu w milisekundach. Domyślna to 100 sekund.</param>
        <param name="overwrite">
          <see langword="True" /> Aby zastąpić istniejące pliki; w przeciwnym razie <see langword="False" />. Wartość domyślna to <see langword="False" />.</param>
        <summary>Pobiera określonego pliku zdalnego i zapisuje go w określonej lokalizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `showUI` ustawiono `True`, zostanie wyświetlone okno dialogowe pokazujący postęp operacji; okno dialogowe zawiera **anulować** przycisku, który może służyć do anulowania operacji. Okno dialogowe nie jest modalne i dlatego nie są blokowane w danych wejściowych użytkownika do innych okien w programie.  
  
 Jeśli serwer nie odpowie w ciągu określonego `connectionTimeout`, anulowanie operacji i jest zgłaszany wyjątek.  
  
 `DownloadFile` dane wyjściowe śledzenia informacji po włączeniu śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [włączenie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  `DownloadFile` — Metoda nie wysyła opcjonalne nagłówki HTTP. Jeśli brakuje nagłówka agenta użytkownika opcjonalnego, niektóre serwery mogą zwracać 500 (wewnętrzny błąd serwera). Aby wysłać opcjonalne nagłówki, należy tworzyć żądania przy użyciu <xref:System.Net.WebClient> klasy.  
  
> [!NOTE]
>  Protokół FTP wysyła informacje, w tym hasła w postaci zwykłego tekstu i nie powinna być używana do przesyłania poufnych informacji.  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.DownloadFile` metody.  
  
|Do|Zobacz|  
|-|-|  
|Pobieranie pliku|[Instrukcje: pobieranie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje ją `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje ją `C:\Documents and Settings\All Users\Documents`, określając wartość limitu czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> kończy się znakiem ukośnika.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> ustawiono <see langword="False" /> i plik docelowy już istnieje.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowie w ciągu określonego <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostało odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Określa uprawnienia związane z interfejsów użytkownika i Schowka. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Formanty prawa dostępu do zasobów Internetu HTTP. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * System.Net.ICredentials * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, networkCredentials, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="address">Ścieżka pliku do pobrania, w tym pliku nazwy i hosta adresu.</param>
        <param name="destinationFileName">Nazwa pliku i ścieżka pobranego pliku.</param>
        <param name="networkCredentials">Poświadczenia, które mają być dostarczone.</param>
        <param name="showUI">
          <see langword="True" /> Aby wyświetlić postęp operacji. w przeciwnym razie <see langword="False" />. Wartość domyślna to <see langword="False" />.</param>
        <param name="connectionTimeout">Interwał limitu czasu w milisekundach. Domyślna to 100 sekund.</param>
        <param name="overwrite">
          <see langword="True" /> Aby zastąpić istniejące pliki; w przeciwnym razie <see langword="False" />. Wartość domyślna to <see langword="False" />.</param>
        <param name="onUserCancel">Określa zachowanie, gdy użytkownik kliknie ** Anuluj ** lub ** nr ** w oknie dialogowym wyświetlany w <c>showUI</c> ustawioną <see langword="True" />. Wartość domyślna to <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Pobiera określonego pliku zdalnego i zapisuje go w określonej lokalizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `showUI` ustawiono `True`, zostanie wyświetlone okno dialogowe pokazujący postęp operacji; okno dialogowe zawiera **anulować** przycisku, który może służyć do anulowania operacji. Okno dialogowe nie jest modalne i dlatego nie są blokowane w danych wejściowych użytkownika do innych okien w programie.  
  
 Jeśli serwer nie odpowie w ciągu określonego `connectionTimeout`, anulowanie operacji i jest zgłaszany wyjątek.  
  
 `DownloadFile` dane wyjściowe śledzenia informacji po włączeniu śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [włączenie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  `DownloadFile` — Metoda nie wysyła opcjonalne nagłówki HTTP. Jeśli brakuje nagłówka agenta użytkownika opcjonalnego, niektóre serwery mogą zwracać 500 (wewnętrzny błąd serwera). Aby wysłać opcjonalne nagłówki, należy tworzyć żądania przy użyciu <xref:System.Net.WebClient> klasy.  
  
> [!NOTE]
>  Protokół FTP wysyła informacje, w tym hasła w postaci zwykłego tekstu i nie powinna być używana do przesyłania poufnych informacji.  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.DownloadFile` metody.  
  
|Do|Zobacz|  
|-|-|  
|Pobieranie pliku|[Instrukcje: pobieranie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje ją `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje ją `C:\Documents and Settings\All Users\Documents`, określając wartość limitu czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> kończy się znakiem ukośnika.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> ustawiono <see langword="False" /> i plik docelowy już istnieje.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowie w ciągu określonego <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostało odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Określa uprawnienia związane z interfejsów użytkownika i Schowka. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Formanty prawa dostępu do zasobów Internetu HTTP. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">Ścieżka pliku do pobrania, w tym pliku nazwy i hosta adresu.</param>
        <param name="destinationFileName">Nazwa pliku i ścieżka pobranego pliku.</param>
        <param name="userName">Nazwa użytkownika do uwierzytelniania. Domyślna to ciąg pusty "".</param>
        <param name="password">Hasło do uwierzytelniania. Domyślna to ciąg pusty "".</param>
        <param name="showUI">
          <see langword="True" /> Aby wyświetlić postęp operacji. w przeciwnym razie <see langword="False" />. Wartość domyślna to <see langword="False" />.</param>
        <param name="connectionTimeout">Interwał limitu czasu w milisekundach. Domyślna to 100 sekund.</param>
        <param name="overwrite">
          <see langword="True" /> Aby zastąpić istniejące pliki; w przeciwnym razie <see langword="False" />. Wartość domyślna to <see langword="False" />.</param>
        <summary>Pobiera określonego pliku zdalnego i zapisuje go w określonej lokalizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `showUI` ustawiono `True`, zostanie wyświetlone okno dialogowe pokazujący postęp operacji; okno dialogowe zawiera **anulować** przycisku, który może służyć do anulowania operacji. Okno dialogowe nie jest modalne i dlatego nie są blokowane w danych wejściowych użytkownika do innych okien w programie.  
  
 Jeśli serwer nie odpowie w ciągu określonego `connectionTimeout`, anulowanie operacji i jest zgłaszany wyjątek.  
  
 `DownloadFile` dane wyjściowe śledzenia informacji po włączeniu śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [włączenie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  `DownloadFile` — Metoda nie wysyła opcjonalne nagłówki HTTP. Jeśli brakuje nagłówka agenta użytkownika opcjonalnego, niektóre serwery mogą zwracać 500 (wewnętrzny błąd serwera). Aby wysłać opcjonalne nagłówki, należy tworzyć żądania przy użyciu <xref:System.Net.WebClient> klasy.  
  
> [!NOTE]
>  Protokół FTP wysyła informacje, w tym hasła w postaci zwykłego tekstu i nie powinna być używana do przesyłania poufnych informacji.  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.DownloadFile` metody.  
  
|Do|Zobacz|  
|-|-|  
|Pobieranie pliku|[Instrukcje: pobieranie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje ją `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje ją `C:\Documents and Settings\All Users\Documents`, określając wartość limitu czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> kończy się znakiem ukośnika.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> ustawiono <see langword="False" /> i plik docelowy już istnieje.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowie w ciągu określonego <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostało odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Określa uprawnienia związane z interfejsów użytkownika i Schowka. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Formanty prawa dostępu do zasobów Internetu HTTP. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="address">Ścieżka pliku do pobrania, w tym pliku nazwy i hosta adresu.</param>
        <param name="destinationFileName">Nazwa pliku i ścieżka pobranego pliku.</param>
        <param name="userName">Nazwa użytkownika do uwierzytelniania. Domyślna to ciąg pusty "".</param>
        <param name="password">Hasło do uwierzytelniania. Domyślna to ciąg pusty "".</param>
        <param name="showUI">
          <see langword="True" /> Aby wyświetlić postęp operacji. w przeciwnym razie <see langword="False" />. Wartość domyślna to <see langword="False" />.</param>
        <param name="connectionTimeout">Interwał limitu czasu w milisekundach. Domyślna to 100 sekund.</param>
        <param name="overwrite">
          <see langword="True" /> Aby zastąpić istniejące pliki; w przeciwnym razie <see langword="False" />. Wartość domyślna to <see langword="False" />.</param>
        <param name="onUserCancel">Określa zachowanie, gdy użytkownik kliknie ** Anuluj ** lub ** nr ** w oknie dialogowym wyświetlany w <c>ShowUI</c> ustawioną <see langword="True" />. Wartość domyślna to <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Pobiera określonego pliku zdalnego i zapisuje go w określonej lokalizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `showUI` ustawiono `True`, zostanie wyświetlone okno dialogowe pokazujący postęp operacji; okno dialogowe zawiera **anulować** przycisku, który może służyć do anulowania operacji. Okno dialogowe nie jest modalne i dlatego nie są blokowane w danych wejściowych użytkownika do innych okien w programie.  
  
 Jeśli serwer nie odpowie w ciągu określonego `connectionTimeout`, anulowanie operacji i jest zgłaszany wyjątek.  
  
 `DownloadFile` dane wyjściowe śledzenia informacji po włączeniu śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [włączenie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  `DownloadFile` — Metoda nie wysyła opcjonalne nagłówki HTTP. Jeśli brakuje nagłówka agenta użytkownika opcjonalnego, niektóre serwery mogą zwracać 500 (wewnętrzny błąd serwera). Aby wysłać opcjonalne nagłówki, należy tworzyć żądania przy użyciu <xref:System.Net.WebClient> klasy.  
  
> [!NOTE]
>  Protokół FTP wysyła informacje, w tym hasła w postaci zwykłego tekstu i nie powinna być używana do przesyłania poufnych informacji.  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.DownloadFile` metody.  
  
|Do|Zobacz|  
|-|-|  
|Pobieranie pliku|[Instrukcje: pobieranie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje ją `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje ją `C:\Documents and Settings\All Users\Documents`, określając wartość limitu czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> kończy się znakiem ukośnika.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> ustawiono <see langword="False" /> i plik docelowy już istnieje.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowie w ciągu określonego <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostało odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Określa uprawnienia związane z interfejsów użytkownika i Schowka. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Formanty prawa dostępu do zasobów Internetu HTTP. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="address">Ścieżka pliku do pobrania, w tym pliku nazwy i hosta adresu.</param>
        <param name="destinationFileName">Nazwa pliku i ścieżka pobranego pliku.</param>
        <param name="userName">Nazwa użytkownika do uwierzytelniania. Domyślna to ciąg pusty "".</param>
        <param name="password">Hasło do uwierzytelniania. Domyślna to ciąg pusty "".</param>
        <param name="showUI">
          <see langword="True" /> Aby wyświetlić postęp operacji. w przeciwnym razie <see langword="False" />. Wartość domyślna to <see langword="False" />.</param>
        <param name="connectionTimeout">Interwał limitu czasu w milisekundach. Domyślna to 100 sekund.</param>
        <param name="overwrite">
          <see langword="True" /> Aby zastąpić istniejące pliki; w przeciwnym razie <see langword="False" />. Wartość domyślna to <see langword="False" />.</param>
        <param name="onUserCancel">Określa zachowanie, gdy użytkownik kliknie ** Anuluj ** lub ** nr ** w oknie dialogowym wyświetlany w <c>ShowUI</c> ustawioną <see langword="True" />. Wartość domyślna to <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Pobiera określonego pliku zdalnego i zapisuje go w określonej lokalizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `showUI` ustawiono `True`, zostanie wyświetlone okno dialogowe pokazujący postęp operacji; okno dialogowe zawiera **anulować** przycisku, który może służyć do anulowania operacji. Okno dialogowe nie jest modalne i dlatego nie są blokowane w danych wejściowych użytkownika do innych okien w programie.  
  
 Jeśli serwer nie odpowie w ciągu określonego `connectionTimeout`, anulowanie operacji i jest zgłaszany wyjątek.  
  
 `DownloadFile` dane wyjściowe śledzenia informacji po włączeniu śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [włączenie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  `DownloadFile` — Metoda nie wysyła opcjonalne nagłówki HTTP. Jeśli brakuje nagłówka agenta użytkownika opcjonalnego, niektóre serwery mogą zwracać 500 (wewnętrzny błąd serwera). Aby wysłać opcjonalne nagłówki, należy tworzyć żądania przy użyciu <xref:System.Net.WebClient> klasy.  
  
> [!NOTE]
>  Protokół FTP wysyła informacje, w tym hasła w postaci zwykłego tekstu i nie powinna być używana do przesyłania poufnych informacji.  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.DownloadFile` metody.  
  
|Do|Zobacz|  
|-|-|  
|Pobieranie pliku|[Instrukcje: pobieranie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje ją `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje ją `C:\Documents and Settings\All Users\Documents`, określając wartość limitu czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> kończy się znakiem ukośnika.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> ustawiono <see langword="False" /> i plik docelowy już istnieje.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowie w ciągu określonego <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostało odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Określa uprawnienia związane z interfejsów użytkownika i Schowka. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Formanty prawa dostępu do zasobów Internetu HTTP. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="IsAvailable">
      <MemberSignature Language="C#" Value="public bool IsAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Network.IsAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAvailable : bool" Usage="Microsoft.VisualBasic.Devices.Network.IsAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje, czy komputer jest połączony z siecią.</summary>
        <value>
          <see langword="True" /> Jeśli komputer jest połączony z siecią; w przeciwnym razie <see langword="False" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `IsAvailable` zawsze zwraca `False` przy wywołaniach z `Click Once` aplikacji lub jeśli użytkownik nie ma <xref:System.Net.NetworkInformation.NetworkInformationPermission>.  
  
 W poniższej tabeli przedstawiono przykłady dotyczące zadań `My.Computer.Network.IsAvailable` właściwości.  
  
|Do|Zobacz|  
|-|-|  
|Sprawdź, czy komputer jest połączony z siecią|[Instrukcje: sprawdzanie stanu połączenia](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-check-connection-status.md)|  
  
   
  
## Examples  
 W tym przykładzie umożliwia sprawdzenie stanu właściwości i jego raporty.  
  
 [!code-vb[VbVbalrMyNetwork#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Formanty prawa dostępu do zasobów Internetu HTTP. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="NetworkAvailabilityChanged">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NetworkAvailabilityChanged As NetworkAvailableEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::Devices::NetworkAvailableEventHandler ^ NetworkAvailabilityChanged;" />
      <MemberSignature Language="F#" Value="member this.NetworkAvailabilityChanged : Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler " Usage="member this.NetworkAvailabilityChanged : Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy dostępność sieci.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uruchamia aplikację `NetworkAvailabilityChanged` zdarzeń każdej zmianie dostępność sieci. Można użyć <xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A> właściwość `e` parametr, aby uzyskać nowy stan połączenia sieciowego. Aby uzyskać bieżący stan połączenia sieciowego, należy użyć <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> właściwości.  
  
 W aplikacji formularzy systemu Windows to zdarzenie jest wywoływane w wątku głównego aplikacji z innymi zdarzeniami interfejsu użytkownika. Dzięki temu bezpośredni dostęp interfejsu użytkownika aplikacji do obsługi zdarzeń. Jednak jeśli aplikacja jest zajęta, obsługa inne zdarzenie interfejsu użytkownika, gdy to zdarzenie jest zgłaszane, to zdarzenie nie można przetworzyć obsługi zdarzeń zakończenie lub wywołuje <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A> metody.  
  
 Nie można użyć `Handles` instrukcji do obsługi `NetworkAvailabilityChanged` zdarzeń; należy użyć `AddHandler` instrukcji.  
  
 W aplikacjach formularzy systemu Windows `MyApplication` obiekt ujawnia `NetworkAvailabilityChanged` zdarzeń, która zapewnia te same funkcje co to zdarzenie, ale może obsłużyć za pomocą `Handles` instrukcji.  
  
> [!NOTE]
>  Wiele koncentratory sieciowe zapewniają połączenia sieciowego, nawet jeśli koncentrator jest odłączony od większej sieci. W rezultacie dla połączeń przewodowych, to zdarzenie oznacza zmianę w połączenia między komputerem a koncentratora.  
  
> [!NOTE]
>  `NetworkAvailabilityChanged` Zdarzenie nie jest wywoływane przez aplikacje, które działają w systemie Windows 95 lub Windows 98 lub aplikacji uruchamianych w systemie Windows 2000 z systemem innym niż administrator. Jeśli aplikacja może działać na tych platformach, użyj <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> właściwości.  
  
   
  
## Examples  
 W tym przykładzie użyto `My.Computer.Network.NetworkAvailabilityChanged` zdarzenie, aby zaktualizować formularza lub kontrolki interfejsu użytkownika.  
  
 Ten kod powinien znajdować się w formularz lub formant, który ma <xref:System.Windows.Forms.Label> o nazwie `Label1`.  
  
 [!code-vb[VbVbalrMyApplication#50](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Network" />
        <altmember cref="N:Microsoft.VisualBasic.Devices" />
        <altmember cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler" />
        <altmember cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Ping">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wysyła polecenie ping określonego serwera.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (hostNameOrAddress As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="member this.Ping : string -&gt; bool" Usage="network.Ping hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Adres URL, nazwę komputera lub numer IP serwera na polecenie ping.</param>
        <summary>Wysyła polecenie ping określonego serwera.</summary>
        <returns>
          <see langword="True" /> Jeśli operacja zakończyła się pomyślnie; w przeciwnym razie <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Ping` — Metoda nie jest operatorem awaryjnym metodą ustalania dostępności komputera zdalnego: port ping do komputera docelowego może zostać wyłączone lub żądanie ping mogą być blokowane przez zaporę lub router.  
  
 Przekazany adres do `Ping` metoda musi być rozpoznawalna DNS i nie może być poprzedzone "http://".  
  
   
  
## Examples  
 W tym przykładzie raporty, czy serwer może Pingowane przez określenie czy `Ping` metoda zwraca `True`.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 Zastąp `"198.01.01.01"` z adres IP, adres URL lub komputer nazwę serwera na polecenie ping.  
  
 W tym przykładzie raporty, czy serwer może Pingowane przez określenie czy `Ping` metoda zwróciła `True` i określa limit czasu 1000 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 Zastąp `"www.cohowinery.com"` z adres IP, adres URL lub komputer nazwę serwera na polecenie ping.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Żadne połączenie sieciowe nie jest dostępna.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Adres URL jest nieprawidłowy.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">W tym artykule opisano zestaw uprawnień zabezpieczeń zastosowane do kodu. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <permission cref="T:System.Net.WebPermission">Formanty prawa dostępu do zasobów Internetu HTTP. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.SocketPermission">Formanty prawa lub akceptowania połączeń na adres transportu. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Kontroluje dostęp do składnika licznika wydajności systemu Windows NT. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Kontroluje dostęp do sieci informacji i statystyki ruchu na komputerze lokalnym. Wyliczenie skojarzone: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />.</permission>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (address As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.Ping : Uri -&gt; bool" Usage="network.Ping address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI serwera na polecenie ping.</param>
        <summary>Wysyła polecenie ping określonego serwera.</summary>
        <returns>
          <see langword="True" /> Jeśli operacja zakończyła się pomyślnie; w przeciwnym razie <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Ping` — Metoda nie jest operatorem awaryjnym metodą ustalania dostępności komputera zdalnego: port ping do komputera docelowego może zostać wyłączone lub żądanie ping mogą być blokowane przez zaporę lub router.  
  
 Przekazany adres do `Ping` metoda musi być rozpoznawalna DNS i nie może być poprzedzone "http://".  
  
   
  
## Examples  
 W tym przykładzie raporty, czy serwer może Pingowane przez określenie czy `Ping` metoda zwraca `True`.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 Zastąp `"198.01.01.01"` z adres IP, adres URL lub komputer nazwę serwera na polecenie ping.  
  
 W tym przykładzie raporty, czy serwer może Pingowane przez określenie czy `Ping` metoda zwróciła `True` i określa limit czasu 1000 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 Zastąp `"www.cohowinery.com"` z adres IP, adres URL lub komputer nazwę serwera na polecenie ping.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Żadne połączenie sieciowe nie jest dostępna.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Adres URL jest nieprawidłowy.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">W tym artykule opisano zestaw uprawnień zabezpieczeń zastosowane do kodu. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <permission cref="T:System.Net.WebPermission">Formanty prawa dostępu do zasobów Internetu HTTP. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.SocketPermission">Formanty prawa lub akceptowania połączeń na adres transportu. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Kontroluje dostęp do składnika licznika wydajności systemu Windows NT. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Kontroluje dostęp do sieci informacji i statystyki ruchu na komputerze lokalnym. Wyliczenie skojarzone: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />.</permission>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (string hostNameOrAddress, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(string hostNameOrAddress, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (hostNameOrAddress As String, timeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(System::String ^ hostNameOrAddress, int timeout);" />
      <MemberSignature Language="F#" Value="member this.Ping : string * int -&gt; bool" Usage="network.Ping (hostNameOrAddress, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Adres URL, nazwę komputera lub numer IP serwera na polecenie ping.</param>
        <param name="timeout">Próg czasu w milisekundach do kontaktowania się z serwerem docelowym. Domyślna to 500.</param>
        <summary>Wysyła polecenie ping określonego serwera.</summary>
        <returns>
          <see langword="True" /> Jeśli operacja zakończyła się pomyślnie; w przeciwnym razie <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Ping` — Metoda nie jest operatorem awaryjnym metodą ustalania dostępności komputera zdalnego: port ping do komputera docelowego może zostać wyłączone lub żądanie ping mogą być blokowane przez zaporę lub router.  
  
 Przekazany adres do `Ping` metoda musi być rozpoznawalna DNS i nie może być poprzedzone "http://".  
  
   
  
## Examples  
 W tym przykładzie raporty, czy serwer może Pingowane przez określenie czy `Ping` metoda zwraca `True`.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 Zastąp `"198.01.01.01"` z adres IP, adres URL lub komputer nazwę serwera na polecenie ping.  
  
 W tym przykładzie raporty, czy serwer może Pingowane przez określenie czy `Ping` metoda zwróciła `True` i określa limit czasu 1000 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 Zastąp `"www.cohowinery.com"` z adres IP, adres URL lub komputer nazwę serwera na polecenie ping.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Żadne połączenie sieciowe nie jest dostępna.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Adres URL jest nieprawidłowy.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">W tym artykule opisano zestaw uprawnień zabezpieczeń zastosowane do kodu. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <permission cref="T:System.Net.WebPermission">Formanty prawa dostępu do zasobów Internetu HTTP. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.SocketPermission">Formanty prawa lub akceptowania połączeń na adres transportu. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Kontroluje dostęp do składnika licznika wydajności systemu Windows NT. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Kontroluje dostęp do sieci informacji i statystyki ruchu na komputerze lokalnym. Wyliczenie skojarzone: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />.</permission>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (Uri address, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(class System.Uri address, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (address As Uri, timeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(Uri ^ address, int timeout);" />
      <MemberSignature Language="F#" Value="member this.Ping : Uri * int -&gt; bool" Usage="network.Ping (address, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI serwera na polecenie ping.</param>
        <param name="timeout">Próg czasu w milisekundach do kontaktowania się z serwerem docelowym. Domyślna to 500.</param>
        <summary>Wysyła polecenie ping określonego serwera.</summary>
        <returns>
          <see langword="True" /> Jeśli operacja zakończyła się pomyślnie; w przeciwnym razie <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Ping` — Metoda nie jest operatorem awaryjnym metodą ustalania dostępności komputera zdalnego: port ping do komputera docelowego może zostać wyłączone lub żądanie ping mogą być blokowane przez zaporę lub router.  
  
 Przekazany adres do `Ping` metoda musi być rozpoznawalna DNS i nie może być poprzedzone "http://".  
  
   
  
## Examples  
 W tym przykładzie raporty, czy serwer może Pingowane przez określenie czy `Ping` metoda zwraca `True`.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 Zastąp `"198.01.01.01"` z adres IP, adres URL lub komputer nazwę serwera na polecenie ping.  
  
 W tym przykładzie raporty, czy serwer może Pingowane przez określenie czy `Ping` metoda zwróciła `True` i określa limit czasu 1000 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 Zastąp `"www.cohowinery.com"` z adres IP, adres URL lub komputer nazwę serwera na polecenie ping.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Żadne połączenie sieciowe nie jest dostępna.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Adres URL jest nieprawidłowy.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">W tym artykule opisano zestaw uprawnień zabezpieczeń zastosowane do kodu. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <permission cref="T:System.Net.WebPermission">Formanty prawa dostępu do zasobów Internetu HTTP. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.SocketPermission">Formanty prawa lub akceptowania połączeń na adres transportu. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Kontroluje dostęp do składnika licznika wydajności systemu Windows NT. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Kontroluje dostęp do sieci informacji i statystyki ruchu na komputerze lokalnym. Wyliczenie skojarzone: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />.</permission>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wysyła podany plik na adres określony host.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Ścieżka i nazwa pliku do przekazania.</param>
        <param name="address">Adres URL, adres IP lub identyfikator URI serwera docelowego.</param>
        <summary>Wysyła podany plik na adres określony host.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć jednej z innych przeciążeń <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> metodę, aby podać poświadczenia użytkownika lub określ wartość określonego limitu czasu.  
  
 `My.Computer.Network.UploadFile` dane wyjściowe śledzenia informacji po włączeniu śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [włączenie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.UploadFile` metody.  
  
|Do|Zobacz|  
|-|-|  
|Przekaż plik|[Instrukcje: przekazywanie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 W tym przykładzie powoduje przekazanie pliku `Order.txt` do `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 W tym przykładzie powoduje przekazanie pliku `Order.txt` do `http://www.cohowinery.com/uploads` bez podawania nazwy użytkownika ani hasła, będzie wyświetlany postęp przekazywania i ma limit czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Ścieżka pliku źródłowego jest nieprawidłowa.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> nie zawiera nazwy pliku.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowiedział w domyślny limit czasu (w sekundach 100).</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostało odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Formanty prawa dostępu do zasobów Internetu HTTP. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri -&gt; unit" Usage="network.UploadFile (sourceFileName, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Ścieżka i nazwa pliku do przekazania.</param>
        <param name="address">Adres URL, adres IP lub identyfikator URI serwera docelowego.</param>
        <summary>Wysyła podany plik na adres określony host.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć jednej z innych przeciążeń <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> metodę, aby podać poświadczenia użytkownika lub określ wartość określonego limitu czasu.  
  
 `My.Computer.Network.UploadFile` dane wyjściowe śledzenia informacji po włączeniu śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [włączenie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.UploadFile` metody.  
  
|Do|Zobacz|  
|-|-|  
|Przekaż plik|[Instrukcje: przekazywanie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 W tym przykładzie powoduje przekazanie pliku `Order.txt` do `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 W tym przykładzie powoduje przekazanie pliku `Order.txt` do `http://www.cohowinery.com/uploads` bez podawania nazwy użytkownika ani hasła, będzie wyświetlany postęp przekazywania i ma limit czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Ścieżka pliku źródłowego jest nieprawidłowa.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> nie zawiera nazwy pliku.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowiedział w domyślny limit czasu (w sekundach 100).</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostało odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Formanty prawa dostępu do zasobów Internetu HTTP. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Ścieżka i nazwa pliku do przekazania.</param>
        <param name="address">Adres URL, adres IP lub identyfikator URI serwera docelowego.</param>
        <param name="userName">Nazwa użytkownika do uwierzytelniania. Domyślnym jest pusty ciąg: <c>""</c>.</param>
        <param name="password">Hasło do uwierzytelniania. Domyślnym jest pusty ciąg: <c>""</c>.</param>
        <summary>Wysyła podany plik na adres określony host.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć jednej z innych przeciążeń <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> metodę, aby określić wartość określonego limitu czasu.  
  
 `My.Computer.Network.UploadFile` dane wyjściowe śledzenia informacji po włączeniu śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [włączenie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Protokół FTP wysyła informacje, w tym hasła w postaci zwykłego tekstu i nie powinna być używana do przesyłania poufnych informacji.  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.UploadFile` metody.  
  
|Do|Zobacz|  
|-|-|  
|Przekaż plik|[Instrukcje: przekazywanie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 W tym przykładzie powoduje przekazanie pliku `Order.txt` do `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 W tym przykładzie powoduje przekazanie pliku `Order.txt` do `http://www.cohowinery.com/uploads` bez podawania nazwy użytkownika ani hasła, będzie wyświetlany postęp przekazywania i ma limit czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> jest mniejsza lub równa zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> nie zawiera nazwy pliku.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowiedział w domyślny limit czasu (w sekundach 100).</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostało odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Formanty prawa dostępu do zasobów Internetu HTTP. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Ścieżka i nazwa pliku do przekazania.</param>
        <param name="address">Adres URL, adres IP lub identyfikator URI serwera docelowego.</param>
        <param name="userName">Nazwa użytkownika do uwierzytelniania. Domyślnym jest pusty ciąg: <c>""</c>.</param>
        <param name="password">Hasło do uwierzytelniania. Domyślnym jest pusty ciąg: <c>""</c>.</param>
        <summary>Wysyła podany plik na adres określony host.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć jednej z innych przeciążeń <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> metodę, aby określić wartość określonego limitu czasu.  
  
 `My.Computer.Network.UploadFile` dane wyjściowe śledzenia informacji po włączeniu śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [włączenie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Protokół FTP wysyła informacje, w tym hasła w postaci zwykłego tekstu i nie powinna być używana do przesyłania poufnych informacji.  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.UploadFile` metody.  
  
|Do|Zobacz|  
|-|-|  
|Przekaż plik|[Instrukcje: przekazywanie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 W tym przykładzie powoduje przekazanie pliku `Order.txt` do `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 W tym przykładzie powoduje przekazanie pliku `Order.txt` do `http://www.cohowinery.com/uploads` bez podawania nazwy użytkownika ani hasła, będzie wyświetlany postęp przekazywania i ma limit czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> jest mniejsza lub równa zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> nie zawiera nazwy pliku.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowiedział w domyślny limit czasu (w sekundach 100).</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostało odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Formanty prawa dostępu do zasobów Internetu HTTP. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * System.Net.ICredentials * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, networkCredentials, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Ścieżka i nazwa pliku do przekazania.</param>
        <param name="address">Adres URL, adres IP lub identyfikator URI serwera docelowego.</param>
        <param name="networkCredentials">Poświadczenia dla uwierzytelniania.</param>
        <param name="showUI">
          <see langword="True" /> Aby wyświetlić postęp operacji. w przeciwnym razie <see langword="False" />. Wartość domyślna to <see langword="False" />.</param>
        <param name="connectionTimeout">Interwał limitu czasu w milisekundach. Domyślna to 100 sekund.</param>
        <summary>Wysyła podany plik na adres określony host.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `showUI` ustawiono `True`, okno dialogowe będzie wyświetlany postęp operacji i zawiera **anulować** przycisku, który użytkownik może kliknąć, aby anulować operację. Ponieważ nie modalne okno dialogowe, nie blokuje danych wejściowych użytkownika do innych okien w programie.  
  
 Jeśli serwer nie odpowiada w interwale określonym we `connectionTimeout`, anulowanie operacji i jest zgłaszany wyjątek.  
  
 `My.Computer.Network.UploadFile` dane wyjściowe śledzenia informacji po włączeniu śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [włączenie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Protokół FTP wysyła informacje, w tym hasła w postaci zwykłego tekstu i nie powinna być używana do przesyłania poufnych informacji.  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.UploadFile` metody.  
  
|Do|Zobacz|  
|-|-|  
|Przekaż plik|[Instrukcje: przekazywanie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 W tym przykładzie powoduje przekazanie pliku `Order.txt` do `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 W tym przykładzie powoduje przekazanie pliku `Order.txt` do `http://www.cohowinery.com/uploads` bez podawania nazwy użytkownika ani hasła, będzie wyświetlany postęp przekazywania i ma limit czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> jest mniejsza lub równa zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> nie zawiera nazwy pliku.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowie w ciągu określonego <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostało odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Określa uprawnienia związane z interfejsów użytkownika i Schowka. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Formanty prawa dostępu do zasobów Internetu HTTP. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Ścieżka i nazwa pliku do przekazania.</param>
        <param name="address">Adres URL, adres IP lub identyfikator URI serwera docelowego.</param>
        <param name="userName">Nazwa użytkownika do uwierzytelniania. Domyślnym jest pusty ciąg: <c>""</c>.</param>
        <param name="password">Hasło do uwierzytelniania. Domyślnym jest pusty ciąg: <c>""</c>.</param>
        <param name="showUI">
          <see langword="True" /> Aby wyświetlić postęp operacji. w przeciwnym razie <see langword="False" />. Wartość domyślna to <see langword="False" />.</param>
        <param name="connectionTimeout">Interwał limitu czasu w milisekundach. Domyślna to 100 sekund.</param>
        <summary>Wysyła podany plik na adres określony host.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `showUI` ustawiono `True`, okno dialogowe będzie wyświetlany postęp operacji i zawiera **anulować** przycisku, który użytkownik może kliknąć, aby anulować operację. Ponieważ nie modalne okno dialogowe, nie blokuje danych wejściowych użytkownika do innych okien w programie.  
  
 Jeśli serwer nie odpowiada w interwale określonym we `connectionTimeout`, anulowanie operacji i jest zgłaszany wyjątek.  
  
 `My.Computer.Network.UploadFile` dane wyjściowe śledzenia informacji po włączeniu śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [włączenie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Protokół FTP wysyła informacje, w tym hasła w postaci zwykłego tekstu i nie powinna być używana do przesyłania poufnych informacji.  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.UploadFile` metody.  
  
|Do|Zobacz|  
|-|-|  
|Przekaż plik|[Instrukcje: przekazywanie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 W tym przykładzie powoduje przekazanie pliku `Order.txt` do `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 W tym przykładzie powoduje przekazanie pliku `Order.txt` do `http://www.cohowinery.com/uploads` bez podawania nazwy użytkownika ani hasła, będzie wyświetlany postęp przekazywania i ma limit czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> jest mniejsza lub równa zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> nie zawiera nazwy pliku.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowie w ciągu określonego <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostało odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Określa uprawnienia związane z interfejsów użytkownika i Schowka. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Formanty prawa dostępu do zasobów Internetu HTTP. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * System.Net.ICredentials * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, networkCredentials, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Ścieżka i nazwa pliku do przekazania.</param>
        <param name="address">Adres URL, adres IP lub identyfikator URI serwera docelowego.</param>
        <param name="networkCredentials">Poświadczenia dla uwierzytelniania.</param>
        <param name="showUI">
          <see langword="True" /> Aby wyświetlić postęp operacji. w przeciwnym razie <see langword="False" />. Wartość domyślna to <see langword="False" />.</param>
        <param name="connectionTimeout">Interwał limitu czasu w milisekundach. Domyślna to 100 sekund.</param>
        <param name="onUserCancel">Akcja wykonywana, gdy użytkownik kliknie ** Anuluj **. Wartość domyślna to <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Wysyła podany plik na adres określony host.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `showUI` ustawiono `True`, okno dialogowe będzie wyświetlany postęp operacji i zawiera **anulować** przycisku, który użytkownik może kliknąć, aby anulować operację. Ponieważ nie modalne okno dialogowe, nie blokuje danych wejściowych użytkownika do innych okien w programie.  
  
 Jeśli serwer nie odpowiada w interwale określonym we `connectionTimeout`, anulowanie operacji i jest zgłaszany wyjątek.  
  
 `My.Computer.Network.UploadFile` dane wyjściowe śledzenia informacji po włączeniu śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [włączenie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Protokół FTP wysyła informacje, w tym hasła w postaci zwykłego tekstu i nie powinna być używana do przesyłania poufnych informacji.  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.UploadFile` metody.  
  
|Do|Zobacz|  
|-|-|  
|Przekaż plik|[Instrukcje: przekazywanie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 W tym przykładzie powoduje przekazanie pliku `Order.txt` do `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 W tym przykładzie powoduje przekazanie pliku `Order.txt` do `http://www.cohowinery.com/uploads` bez podawania nazwy użytkownika ani hasła, będzie wyświetlany postęp przekazywania i ma limit czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> jest mniejsza lub równa zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> nie zawiera nazwy pliku.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowie w ciągu określonego <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostało odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Określa uprawnienia związane z interfejsów użytkownika i Schowka. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Formanty prawa dostępu do zasobów Internetu HTTP. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Ścieżka i nazwa pliku do przekazania.</param>
        <param name="address">Adres URL, adres IP lub identyfikator URI serwera docelowego.</param>
        <param name="userName">Nazwa użytkownika do uwierzytelniania. Domyślnym jest pusty ciąg: <c>""</c>.</param>
        <param name="password">Hasło do uwierzytelniania. Domyślnym jest pusty ciąg: <c>""</c>.</param>
        <param name="showUI">
          <see langword="True" /> Aby wyświetlić postęp operacji. w przeciwnym razie <see langword="False" />. Wartość domyślna to <see langword="False" />.</param>
        <param name="connectionTimeout">Interwał limitu czasu w milisekundach. Domyślna to 100 sekund.</param>
        <summary>Wysyła podany plik na adres określony host.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `showUI` ustawiono `True`, okno dialogowe będzie wyświetlany postęp operacji i zawiera **anulować** przycisku, który użytkownik może kliknąć, aby anulować operację. Ponieważ nie modalne okno dialogowe, nie blokuje danych wejściowych użytkownika do innych okien w programie.  
  
 Jeśli serwer nie odpowiada w interwale określonym we `connectionTimeout`, anulowanie operacji i jest zgłaszany wyjątek.  
  
 `My.Computer.Network.UploadFile` dane wyjściowe śledzenia informacji po włączeniu śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [włączenie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Protokół FTP wysyła informacje, w tym hasła w postaci zwykłego tekstu i nie powinna być używana do przesyłania poufnych informacji.  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.UploadFile` metody.  
  
|Do|Zobacz|  
|-|-|  
|Przekaż plik|[Instrukcje: przekazywanie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 W tym przykładzie powoduje przekazanie pliku `Order.txt` do `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 W tym przykładzie powoduje przekazanie pliku `Order.txt` do `http://www.cohowinery.com/uploads` bez podawania nazwy użytkownika ani hasła, będzie wyświetlany postęp przekazywania i ma limit czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> jest mniejsza lub równa zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> nie zawiera nazwy pliku.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowie w ciągu określonego <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostało odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Określa uprawnienia związane z interfejsów użytkownika i Schowka. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Formanty prawa dostępu do zasobów Internetu HTTP. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Ścieżka i nazwa pliku do przekazania.</param>
        <param name="address">Adres URL, adres IP lub identyfikator URI serwera docelowego.</param>
        <param name="userName">Nazwa użytkownika do uwierzytelniania. Domyślnym jest pusty ciąg: <c>""</c>.</param>
        <param name="password">Hasło do uwierzytelniania. Domyślnym jest pusty ciąg: <c>""</c>.</param>
        <param name="showUI">Określa, czy można wyświetlić postęp operacji. Wartość domyślna to <see langword="False" />.</param>
        <param name="connectionTimeout">Interwał limitu czasu w milisekundach. Domyślna to 100 sekund.</param>
        <param name="onUserCancel">Akcja wykonywana, gdy użytkownik kliknie ** Anuluj **. Wartość domyślna to <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Wysyła podany plik na adres określony host.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `showUI` ustawiono `True`, okno dialogowe będzie wyświetlany postęp operacji i zawiera **anulować** przycisku, który użytkownik może kliknąć, aby anulować operację. Ponieważ nie modalne okno dialogowe, nie blokuje danych wejściowych użytkownika do innych okien w programie.  
  
 Jeśli serwer nie odpowiada w interwale określonym we `connectionTimeout`, anulowanie operacji i jest zgłaszany wyjątek.  
  
 `My.Computer.Network.UploadFile` dane wyjściowe śledzenia informacji po włączeniu śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [włączenie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Protokół FTP wysyła informacje, w tym hasła w postaci zwykłego tekstu i nie powinna być używana do przesyłania poufnych informacji.  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.UploadFile` metody.  
  
|Do|Zobacz|  
|-|-|  
|Przekaż plik|[Instrukcje: przekazywanie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 W tym przykładzie powoduje przekazanie pliku `Order.txt` do `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 W tym przykładzie powoduje przekazanie pliku `Order.txt` do `http://www.cohowinery.com/uploads` bez podawania nazwy użytkownika ani hasła, będzie wyświetlany postęp przekazywania i ma limit czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> jest mniejsza lub równa zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> nie zawiera nazwy pliku.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowie w ciągu określonego <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostało odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Określa uprawnienia związane z interfejsów użytkownika i Schowka. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Formanty prawa dostępu do zasobów Internetu HTTP. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Ścieżka i nazwa pliku do przekazania.</param>
        <param name="address">Adres URL, adres IP lub identyfikator URI serwera docelowego.</param>
        <param name="userName">Nazwa użytkownika do uwierzytelniania. Domyślnym jest pusty ciąg: <c>""</c>.</param>
        <param name="password">Hasło do uwierzytelniania. Domyślnym jest pusty ciąg: <c>""</c>.</param>
        <param name="showUI">Określa, czy można wyświetlić postęp operacji. Wartość domyślna to <see langword="False" />.</param>
        <param name="connectionTimeout">Interwał limitu czasu w milisekundach. Domyślna to 100 sekund.</param>
        <param name="onUserCancel">Akcja wykonywana, gdy użytkownik kliknie ** Anuluj **. Wartość domyślna to <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Wysyła podany plik na adres określony host.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `showUI` ustawiono `True`, okno dialogowe będzie wyświetlany postęp operacji i zawiera **anulować** przycisku, który użytkownik może kliknąć, aby anulować operację. Ponieważ nie modalne okno dialogowe, nie blokuje danych wejściowych użytkownika do innych okien w programie.  
  
 Jeśli serwer nie odpowiada w interwale określonym we `connectionTimeout`, anulowanie operacji i jest zgłaszany wyjątek.  
  
 `My.Computer.Network.UploadFile` dane wyjściowe śledzenia informacji po włączeniu śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [włączenie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Protokół FTP wysyła informacje, w tym hasła w postaci zwykłego tekstu i nie powinna być używana do przesyłania poufnych informacji.  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.UploadFile` metody.  
  
|Do|Zobacz|  
|-|-|  
|Przekaż plik|[Instrukcje: przekazywanie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 W tym przykładzie powoduje przekazanie pliku `Order.txt` do `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 W tym przykładzie powoduje przekazanie pliku `Order.txt` do `http://www.cohowinery.com/uploads` bez podawania nazwy użytkownika ani hasła, będzie wyświetlany postęp przekazywania i ma limit czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> jest mniejsza lub równa zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> nie zawiera nazwy pliku.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowie w ciągu określonego <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostało odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Określa uprawnienia związane z interfejsów użytkownika i Schowka. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Formanty prawa dostępu do zasobów Internetu HTTP. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
  </Members>
</Type>