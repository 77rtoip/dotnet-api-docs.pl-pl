<Type Name="Network" FullName="Microsoft.VisualBasic.Devices.Network">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="04a6a2db7a56e73d311562333fd0c10c253cd321" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52244749" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Network" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Network extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.Network" />
  <TypeSignature Language="VB.NET" Value="Public Class Network" />
  <TypeSignature Language="C++ CLI" Value="public ref class Network" />
  <TypeSignature Language="F#" Value="type Network = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia właściwości, zdarzeń i metod do interakcji z sieci, do której komputer jest połączony.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono przykłady zadań z obiektem `My.Computer.Network`.  
  
|Zadanie|Zobacz|  
|-|-|  
|Przekaż plik|[Instrukcje: przekazywanie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
|Pobierz plik|[Instrukcje: pobieranie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
|Sprawdzanie stanu połączenia|[Instrukcje: sprawdzanie stanu połączenia](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-check-connection-status.md)|  
  
   
  
## Examples  
 Ten przykładowy przekazuje plik `Order.txt` do http://www.cohowinery.com/uploads.  
  
 [!code-vb[VbVbalrMyNetwork#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Network ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Network();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.VisualBasic.Devices.Network" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera określony plik zdalny i zapisuje je w określonej lokalizacji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Ścieżka pliku do pobrania w tym pliku nazwy i hosta adresu.</param>
        <param name="destinationFileName">Nazwa pliku i ścieżka pobranego pliku.</param>
        <summary>Pobiera określony plik zdalny i zapisuje je w określonej lokalizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli plik docelowy już istnieje, `DownloadFile` metody nie zastąpi istniejący plik. Możesz użyć jednego z innych przeciążeń <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> metodę, aby wydać polecenie, aby zastąpić istniejące pliki podania poświadczeń użytkownika lub określ wartość określonego limitu czasu.  
  
 `DownloadFile` dane wyjściowe śledzenia informacji po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Włączanie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  `DownloadFile` Metoda nie będzie przesyłał opcjonalne nagłówki HTTP. Niektóre serwery mogą zwracać 500 (wewnętrzny błąd serwera), jeśli brakuje nagłówka agenta użytkownika opcjonalne. Aby wysłać opcjonalne nagłówki, należy tworzyć żądania przy użyciu <xref:System.Net.WebClient> klasy.  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.DownloadFile` metody.  
  
|Zadanie|Zobacz|  
|-|-|  
|Pobierz plik|[Instrukcje: pobieranie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje go do `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje go do `C:\Documents and Settings\All Users\Documents`, określając wartość limitu czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> kończy się znakiem ukośnika.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowiedział w domyślny limit czasu (100 sekund).</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostanie odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Określa prawa dostępu do zasobów HTTP w Internecie. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Porady: pobieranie pliku w Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Porady: analizowanie ścieżek pliku w Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Ścieżka pliku do pobrania w tym pliku nazwy i hosta adresu.</param>
        <param name="destinationFileName">Nazwa pliku i ścieżka pobranego pliku.</param>
        <summary>Pobiera określony plik zdalny i zapisuje je w określonej lokalizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli plik docelowy już istnieje, `DownloadFile` metody nie zastąpi istniejący plik. Możesz użyć jednego z innych przeciążeń <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> metodę, aby wydać polecenie, aby zastąpić istniejące pliki podania poświadczeń użytkownika lub określ wartość określonego limitu czasu. `DownloadFile` dane wyjściowe śledzenia informacji po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Włączanie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  `DownloadFile` Metoda nie będzie przesyłał opcjonalne nagłówki HTTP. Niektóre serwery mogą zwracać 500 (wewnętrzny błąd serwera), jeśli brakuje nagłówka agenta użytkownika opcjonalne. Aby wysłać opcjonalne nagłówki, należy tworzyć żądania przy użyciu <xref:System.Net.WebClient> klasy.  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.DownloadFile` metody.  
  
|Zadanie|Zobacz|  
|-|-|  
|Pobierz plik|[Instrukcje: pobieranie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje go do `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje go do `C:\Documents and Settings\All Users\Documents`, określając wartość limitu czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> kończy się znakiem ukośnika.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowiedział w domyślny limit czasu (100 sekund).</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostanie odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Określa prawa dostępu do zasobów HTTP w Internecie. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Porady: pobieranie pliku w Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Porady: analizowanie ścieżek pliku w Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Ścieżka pliku do pobrania w tym pliku nazwy i hosta adresu.</param>
        <param name="destinationFileName">Nazwa pliku i ścieżka pobranego pliku.</param>
        <param name="userName">Nazwa użytkownika do uwierzytelnienia. Wartością domyślną jest ciąg pusty, "".</param>
        <param name="password">Hasło do uwierzytelniania. Wartością domyślną jest ciąg pusty, "".</param>
        <summary>Pobiera określony plik zdalny i zapisuje je w określonej lokalizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli plik docelowy już istnieje, `DownloadFile` metody nie zastąpi istniejący plik. Możesz użyć jednego z innych przeciążeń <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> metodę, aby wydać polecenie Nadpisz istniejące pliki lub określ wartość określonego limitu czasu.  
  
 `DownloadFile` dane wyjściowe śledzenia informacji po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Włączanie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  `DownloadFile` Metoda nie będzie przesyłał opcjonalne nagłówki HTTP. Niektóre serwery mogą zwracać 500 (wewnętrzny błąd serwera), jeśli brakuje nagłówka agenta użytkownika opcjonalne. Aby wysłać opcjonalne nagłówki, należy tworzyć żądania przy użyciu <xref:System.Net.WebClient> klasy.  
  
> [!NOTE]
>  Protokół FTP wysyła informacje, w tym hasła w postaci zwykłego tekstu i nie powinny być używane do przesyłania informacji poufnych.  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.DownloadFile` metody.  
  
|Zadanie|Zobacz|  
|-|-|  
|Pobierz plik|[Instrukcje: pobieranie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje go do `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje go do `C:\Documents and Settings\All Users\Documents`, określając wartość limitu czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> kończy się znakiem ukośnika.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowiedział w domyślny limit czasu (100 sekund).</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostanie odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Określa prawa dostępu do zasobów HTTP w Internecie. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Porady: pobieranie pliku w Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Porady: analizowanie ścieżek pliku w Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Ścieżka pliku do pobrania w tym pliku nazwy i hosta adresu.</param>
        <param name="destinationFileName">Nazwa pliku i ścieżka pobranego pliku.</param>
        <param name="userName">Nazwa użytkownika do uwierzytelnienia. Wartością domyślną jest ciąg pusty, "".</param>
        <param name="password">Hasło do uwierzytelniania. Wartością domyślną jest ciąg pusty, "".</param>
        <summary>Pobiera określony plik zdalny i zapisuje je w określonej lokalizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli plik docelowy już istnieje, `DownloadFile` metody nie zastąpi istniejący plik. Możesz użyć jednego z innych przeciążeń <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> metodę, aby wydać polecenie Nadpisz istniejące pliki lub określ wartość określonego limitu czasu.  
  
 `DownloadFile` dane wyjściowe śledzenia informacji po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Włączanie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  `DownloadFile` Metoda nie będzie przesyłał opcjonalne nagłówki HTTP. Niektóre serwery mogą zwracać 500 (wewnętrzny błąd serwera), jeśli brakuje nagłówka agenta użytkownika opcjonalne. Aby wysłać opcjonalne nagłówki, należy tworzyć żądania przy użyciu <xref:System.Net.WebClient> klasy.  
  
> [!NOTE]
>  Protokół FTP wysyła informacje, w tym hasła w postaci zwykłego tekstu i nie powinny być używane do przesyłania informacji poufnych.  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.DownloadFile` metody.  
  
|Zadanie|Zobacz|  
|-|-|  
|Pobierz plik|[Instrukcje: pobieranie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje go do `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje go do `C:\Documents and Settings\All Users\Documents`, określając wartość limitu czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> kończy się znakiem ukośnika.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowiedział w domyślny limit czasu (100 sekund).</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostanie odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Określa prawa dostępu do zasobów HTTP w Internecie. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Porady: pobieranie pliku w Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Porady: analizowanie ścieżek pliku w Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * System.Net.ICredentials * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, networkCredentials, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">
          <see langword="String" /> lub <see cref="T:System.Uri" />. Ścieżka pliku do pobrania w tym pliku nazwy i hosta adresu.</param>
        <param name="destinationFileName">
          <see langword="String" />. Nazwa pliku i ścieżka pobranego pliku.</param>
        <param name="networkCredentials">
          <see cref="T:System.Net.ICredentials" />. Poświadczenia, które mają zostać dostarczone.</param>
        <param name="showUI">
          <see langword="True" /> Aby wyświetlić postęp operacji. w przeciwnym razie <see langword="False" />. Wartość domyślna to <see langword="False" />.</param>
        <param name="connectionTimeout">Interwał limitu czasu w milisekundach. Domyślna to 100 sekund.</param>
        <param name="overwrite">
          <see langword="True" /> Aby zastąpić istniejące pliki; w przeciwnym razie <see langword="False" />. Wartość domyślna to <see langword="False" />.</param>
        <summary>Pobiera określony plik zdalny i zapisuje je w określonej lokalizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `showUI` ustawiono `True`, zostanie wyświetlone okno dialogowe postępu operacji; okno dialogowe zawiera **anulować** przycisku, który może służyć do anulowania operacji. Okno dialogowe nie jest modalne i dlatego nie blokuje dane wejściowe użytkownika do innych okien w programie.  
  
 Jeśli serwer nie odpowiada w ramach określonych `connectionTimeout`, operacja została anulowana i zgłaszany jest wyjątek.  
  
 `DownloadFile` dane wyjściowe śledzenia informacji po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Włączanie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  `DownloadFile` Metoda nie będzie przesyłał opcjonalne nagłówki HTTP. Niektóre serwery mogą zwracać 500 (wewnętrzny błąd serwera), jeśli brakuje nagłówka agenta użytkownika opcjonalne. Aby wysłać opcjonalne nagłówki, należy tworzyć żądania przy użyciu <xref:System.Net.WebClient> klasy.  
  
> [!NOTE]
>  Protokół FTP wysyła informacje, w tym hasła w postaci zwykłego tekstu i nie powinny być używane do przesyłania informacji poufnych.  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.DownloadFile` metody.  
  
|Zadanie|Zobacz|  
|-|-|  
|Pobierz plik|[Instrukcje: pobieranie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje go do `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje go do `C:\Documents and Settings\All Users\Documents`, określając wartość limitu czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> kończy się znakiem ukośnika.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> ustawiono <see langword="False" /> i plik docelowy już istnieje.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowiada w ramach określonych <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostanie odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Określa uprawnienia związane z interfejsów użytkownika i Schowka. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Określa prawa dostępu do zasobów HTTP w Internecie. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Porady: pobieranie pliku w Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Porady: analizowanie ścieżek pliku w Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">Ścieżka pliku do pobrania w tym pliku nazwy i hosta adresu.</param>
        <param name="destinationFileName">Nazwa pliku i ścieżka pobranego pliku.</param>
        <param name="userName">Nazwa użytkownika do uwierzytelnienia. Wartością domyślną jest ciąg pusty, "".</param>
        <param name="password">Hasło do uwierzytelniania. Wartością domyślną jest ciąg pusty, "".</param>
        <param name="showUI">
          <see langword="True" /> Aby wyświetlić postęp operacji. w przeciwnym razie <see langword="False" />. Wartość domyślna to <see langword="False" />.</param>
        <param name="connectionTimeout">
          <see cref="T:System.Int32" />. Interwał limitu czasu w milisekundach. Domyślna to 100 sekund.</param>
        <param name="overwrite">
          <see langword="True" /> Aby zastąpić istniejące pliki; w przeciwnym razie <see langword="False" />. Wartość domyślna to <see langword="False" />.</param>
        <summary>Pobiera określony plik zdalny i zapisuje je w określonej lokalizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `showUI` ustawiono `True`, zostanie wyświetlone okno dialogowe postępu operacji; okno dialogowe zawiera **anulować** przycisku, który może służyć do anulowania operacji. Okno dialogowe nie jest modalne i dlatego nie blokuje dane wejściowe użytkownika do innych okien w programie.  
  
 Jeśli serwer nie odpowiada w ramach określonych `connectionTimeout`, operacja została anulowana i zgłaszany jest wyjątek.  
  
 `DownloadFile` dane wyjściowe śledzenia informacji po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Włączanie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  `DownloadFile` Metoda nie będzie przesyłał opcjonalne nagłówki HTTP. Niektóre serwery mogą zwracać 500 (wewnętrzny błąd serwera), jeśli brakuje nagłówka agenta użytkownika opcjonalne. Aby wysłać opcjonalne nagłówki, należy tworzyć żądania przy użyciu <xref:System.Net.WebClient> klasy.  
  
> [!NOTE]
>  Protokół FTP wysyła informacje, w tym hasła w postaci zwykłego tekstu i nie powinny być używane do przesyłania informacji poufnych.  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.DownloadFile` metody.  
  
|Zadanie|Zobacz|  
|-|-|  
|Pobierz plik|[Instrukcje: pobieranie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje go do `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje go do `C:\Documents and Settings\All Users\Documents`, określając wartość limitu czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> kończy się znakiem ukośnika.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> ustawiono <see langword="False" /> i plik docelowy już istnieje.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowiada w ramach określonych <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostanie odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Określa uprawnienia związane z interfejsów użytkownika i Schowka. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Określa prawa dostępu do zasobów HTTP w Internecie. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Porady: pobieranie pliku w Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Porady: analizowanie ścieżek pliku w Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * System.Net.ICredentials * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, networkCredentials, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="address">Ścieżka pliku do pobrania w tym pliku nazwy i hosta adresu.</param>
        <param name="destinationFileName">Nazwa pliku i ścieżka pobranego pliku.</param>
        <param name="networkCredentials">Poświadczenia, które mają zostać dostarczone.</param>
        <param name="showUI">
          <see langword="True" /> Aby wyświetlić postęp operacji. w przeciwnym razie <see langword="False" />. Wartość domyślna to <see langword="False" />.</param>
        <param name="connectionTimeout">Interwał limitu czasu w milisekundach. Domyślna to 100 sekund.</param>
        <param name="overwrite">
          <see langword="True" /> Aby zastąpić istniejące pliki; w przeciwnym razie <see langword="False" />. Wartość domyślna to <see langword="False" />.</param>
        <param name="onUserCancel">Określa zachowanie, gdy użytkownik kliknie **anulować** lub **nie** wyświetlane w oknie dialogowym <paramref name="showUI" /> równa <see langword="True" />. Wartość domyślna to <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Pobiera określony plik zdalny i zapisuje je w określonej lokalizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `showUI` ustawiono `True`, zostanie wyświetlone okno dialogowe postępu operacji; okno dialogowe zawiera **anulować** przycisku, który może służyć do anulowania operacji. Okno dialogowe nie jest modalne i dlatego nie blokuje dane wejściowe użytkownika do innych okien w programie.  
  
 Jeśli serwer nie odpowiada w ramach określonych `connectionTimeout`, operacja została anulowana i zgłaszany jest wyjątek.  
  
 `DownloadFile` dane wyjściowe śledzenia informacji po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Włączanie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  `DownloadFile` Metoda nie będzie przesyłał opcjonalne nagłówki HTTP. Niektóre serwery mogą zwracać 500 (wewnętrzny błąd serwera), jeśli brakuje nagłówka agenta użytkownika opcjonalne. Aby wysłać opcjonalne nagłówki, należy tworzyć żądania przy użyciu <xref:System.Net.WebClient> klasy.  
  
> [!NOTE]
>  Protokół FTP wysyła informacje, w tym hasła w postaci zwykłego tekstu i nie powinny być używane do przesyłania informacji poufnych.  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.DownloadFile` metody.  
  
|Zadanie|Zobacz|  
|-|-|  
|Pobierz plik|[Instrukcje: pobieranie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje go do `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje go do `C:\Documents and Settings\All Users\Documents`, określając wartość limitu czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> kończy się znakiem ukośnika.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> ustawiono <see langword="False" /> i plik docelowy już istnieje.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowiada w ramach określonych <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostanie odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Określa uprawnienia związane z interfejsów użytkownika i Schowka. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Określa prawa dostępu do zasobów HTTP w Internecie. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Porady: pobieranie pliku w Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Porady: analizowanie ścieżek pliku w Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">Ścieżka pliku do pobrania w tym pliku nazwy i hosta adresu.</param>
        <param name="destinationFileName">Nazwa pliku i ścieżka pobranego pliku.</param>
        <param name="userName">Nazwa użytkownika do uwierzytelnienia. Wartością domyślną jest ciąg pusty, "".</param>
        <param name="password">Hasło do uwierzytelniania. Wartością domyślną jest ciąg pusty, "".</param>
        <param name="showUI">
          <see langword="True" /> Aby wyświetlić postęp operacji. w przeciwnym razie <see langword="False" />. Wartość domyślna to <see langword="False" />.</param>
        <param name="connectionTimeout">Interwał limitu czasu w milisekundach. Domyślna to 100 sekund.</param>
        <param name="overwrite">
          <see langword="True" /> Aby zastąpić istniejące pliki; w przeciwnym razie <see langword="False" />. Wartość domyślna to <see langword="False" />.</param>
        <summary>Pobiera określony plik zdalny i zapisuje je w określonej lokalizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `showUI` ustawiono `True`, zostanie wyświetlone okno dialogowe postępu operacji; okno dialogowe zawiera **anulować** przycisku, który może służyć do anulowania operacji. Okno dialogowe nie jest modalne i dlatego nie blokuje dane wejściowe użytkownika do innych okien w programie.  
  
 Jeśli serwer nie odpowiada w ramach określonych `connectionTimeout`, operacja została anulowana i zgłaszany jest wyjątek.  
  
 `DownloadFile` dane wyjściowe śledzenia informacji po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Włączanie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  `DownloadFile` Metoda nie będzie przesyłał opcjonalne nagłówki HTTP. Niektóre serwery mogą zwracać 500 (wewnętrzny błąd serwera), jeśli brakuje nagłówka agenta użytkownika opcjonalne. Aby wysłać opcjonalne nagłówki, należy tworzyć żądania przy użyciu <xref:System.Net.WebClient> klasy.  
  
> [!NOTE]
>  Protokół FTP wysyła informacje, w tym hasła w postaci zwykłego tekstu i nie powinny być używane do przesyłania informacji poufnych.  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.DownloadFile` metody.  
  
|Zadanie|Zobacz|  
|-|-|  
|Pobierz plik|[Instrukcje: pobieranie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje go do `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje go do `C:\Documents and Settings\All Users\Documents`, określając wartość limitu czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> kończy się znakiem ukośnika.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> ustawiono <see langword="False" /> i plik docelowy już istnieje.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowiada w ramach określonych <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostanie odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Określa uprawnienia związane z interfejsów użytkownika i Schowka. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Określa prawa dostępu do zasobów HTTP w Internecie. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Porady: pobieranie pliku w Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Porady: analizowanie ścieżek pliku w Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="address">Ścieżka pliku do pobrania w tym pliku nazwy i hosta adresu.</param>
        <param name="destinationFileName">Nazwa pliku i ścieżka pobranego pliku.</param>
        <param name="userName">Nazwa użytkownika do uwierzytelnienia. Wartością domyślną jest ciąg pusty, "".</param>
        <param name="password">Hasło do uwierzytelniania. Wartością domyślną jest ciąg pusty, "".</param>
        <param name="showUI">
          <see langword="True" /> Aby wyświetlić postęp operacji. w przeciwnym razie <see langword="False" />. Wartość domyślna to <see langword="False" />.</param>
        <param name="connectionTimeout">Interwał limitu czasu w milisekundach. Domyślna to 100 sekund.</param>
        <param name="overwrite">
          <see langword="True" /> Aby zastąpić istniejące pliki; w przeciwnym razie <see langword="False" />. Wartość domyślna to <see langword="False" />.</param>
        <param name="onUserCancel">Określa zachowanie, gdy użytkownik kliknie **anulować** lub **nie** wyświetlane w oknie dialogowym <c>ShowUI</c> równa <see langword="True" />. Wartość domyślna to <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Pobiera określony plik zdalny i zapisuje je w określonej lokalizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `showUI` ustawiono `True`, zostanie wyświetlone okno dialogowe postępu operacji; okno dialogowe zawiera **anulować** przycisku, który może służyć do anulowania operacji. Okno dialogowe nie jest modalne i dlatego nie blokuje dane wejściowe użytkownika do innych okien w programie.  
  
 Jeśli serwer nie odpowiada w ramach określonych `connectionTimeout`, operacja została anulowana i zgłaszany jest wyjątek.  
  
 `DownloadFile` dane wyjściowe śledzenia informacji po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Włączanie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  `DownloadFile` Metoda nie będzie przesyłał opcjonalne nagłówki HTTP. Niektóre serwery mogą zwracać 500 (wewnętrzny błąd serwera), jeśli brakuje nagłówka agenta użytkownika opcjonalne. Aby wysłać opcjonalne nagłówki, należy tworzyć żądania przy użyciu <xref:System.Net.WebClient> klasy.  
  
> [!NOTE]
>  Protokół FTP wysyła informacje, w tym hasła w postaci zwykłego tekstu i nie powinny być używane do przesyłania informacji poufnych.  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.DownloadFile` metody.  
  
|Zadanie|Zobacz|  
|-|-|  
|Pobierz plik|[Instrukcje: pobieranie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje go do `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje go do `C:\Documents and Settings\All Users\Documents`, określając wartość limitu czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> kończy się znakiem ukośnika.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> ustawiono <see langword="False" /> i plik docelowy już istnieje.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowiada w ramach określonych <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostanie odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Określa uprawnienia związane z interfejsów użytkownika i Schowka. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Określa prawa dostępu do zasobów HTTP w Internecie. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Porady: pobieranie pliku w Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Porady: analizowanie ścieżek pliku w Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="address">Ścieżka pliku do pobrania w tym pliku nazwy i hosta adresu.</param>
        <param name="destinationFileName">Nazwa pliku i ścieżka pobranego pliku.</param>
        <param name="userName">Nazwa użytkownika do uwierzytelnienia. Wartością domyślną jest ciąg pusty, "".</param>
        <param name="password">Hasło do uwierzytelniania. Wartością domyślną jest ciąg pusty, "".</param>
        <param name="showUI">
          <see langword="True" /> Aby wyświetlić postęp operacji. w przeciwnym razie <see langword="False" />. Wartość domyślna to <see langword="False" />.</param>
        <param name="connectionTimeout">Interwał limitu czasu w milisekundach. Domyślna to 100 sekund.</param>
        <param name="overwrite">
          <see langword="True" /> Aby zastąpić istniejące pliki; w przeciwnym razie <see langword="False" />. Wartość domyślna to <see langword="False" />.</param>
        <param name="onUserCancel">Określa zachowanie, gdy użytkownik kliknie **anulować** lub **nie** wyświetlane w oknie dialogowym <c>ShowUI</c> równa <see langword="True" />. Wartość domyślna to <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Pobiera określony plik zdalny i zapisuje je w określonej lokalizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `showUI` ustawiono `True`, zostanie wyświetlone okno dialogowe postępu operacji; okno dialogowe zawiera **anulować** przycisku, który może służyć do anulowania operacji. Okno dialogowe nie jest modalne i dlatego nie blokuje dane wejściowe użytkownika do innych okien w programie.  
  
 Jeśli serwer nie odpowiada w ramach określonych `connectionTimeout`, operacja została anulowana i zgłaszany jest wyjątek.  
  
 `DownloadFile` dane wyjściowe śledzenia informacji po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Włączanie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  `DownloadFile` Metoda nie będzie przesyłał opcjonalne nagłówki HTTP. Niektóre serwery mogą zwracać 500 (wewnętrzny błąd serwera), jeśli brakuje nagłówka agenta użytkownika opcjonalne. Aby wysłać opcjonalne nagłówki, należy tworzyć żądania przy użyciu <xref:System.Net.WebClient> klasy.  
  
> [!NOTE]
>  Protokół FTP wysyła informacje, w tym hasła w postaci zwykłego tekstu i nie powinny być używane do przesyłania informacji poufnych.  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.DownloadFile` metody.  
  
|Zadanie|Zobacz|  
|-|-|  
|Pobierz plik|[Instrukcje: pobieranie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje go do `C:\Documents and Settings\All Users\Documents`.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 W tym przykładzie pobiera plik `WineList.txt` z `http://www.cohowinery.com/downloads` i zapisuje go do `C:\Documents and Settings\All Users\Documents`, określając wartość limitu czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> kończy się znakiem ukośnika.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> ustawiono <see langword="False" /> i plik docelowy już istnieje.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowiada w ramach określonych <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostanie odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Określa uprawnienia związane z interfejsów użytkownika i Schowka. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Określa prawa dostępu do zasobów HTTP w Internecie. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Porady: pobieranie pliku w Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Porady: analizowanie ścieżek pliku w Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="IsAvailable">
      <MemberSignature Language="C#" Value="public bool IsAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Network.IsAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAvailable : bool" Usage="Microsoft.VisualBasic.Devices.Network.IsAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje, czy komputer jest połączony z siecią.</summary>
        <value>
          <see langword="True" /> Jeśli komputer jest podłączony do sieci. w przeciwnym razie <see langword="False" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `IsAvailable` zawsze zwraca `False` gdy wywoływana z `Click Once` aplikacji lub jeśli użytkownik nie ma <xref:System.Net.NetworkInformation.NetworkInformationPermission>.  
  
 W poniższej tabeli wymieniono przykłady zadań obejmujących `My.Computer.Network.IsAvailable` właściwości.  
  
|Zadanie|Zobacz|  
|-|-|  
|Sprawdź, czy komputer jest połączony z siecią|[Instrukcje: sprawdzanie stanu połączenia](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-check-connection-status.md)|  
  
   
  
## Examples  
 Ten przykład umożliwia sprawdzenie stanu właściwości i zgłasza go.  
  
 [!code-vb[VbVbalrMyNetwork#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Określa prawa dostępu do zasobów HTTP w Internecie. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="NetworkAvailabilityChanged">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NetworkAvailabilityChanged As NetworkAvailableEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::Devices::NetworkAvailableEventHandler ^ NetworkAvailabilityChanged;" />
      <MemberSignature Language="F#" Value="member this.NetworkAvailabilityChanged : Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler " Usage="member this.NetworkAvailabilityChanged : Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zmianie dostępności sieci.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacja wywołuje `NetworkAvailabilityChanged` zdarzenia za każdym razem, gdy zmieni się dostępności sieci. Możesz użyć <xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A> właściwość `e` parametru, aby pobrać nowy stan połączenia sieciowego. Aby uzyskać bieżący stan połączenia sieciowego, użyj <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> właściwości.  
  
 W aplikacji Windows Forms to zdarzenie jest wywoływane w wątku głównym aplikacji z innymi zdarzeniami interfejsu użytkownika. Dzięki temu program obsługi zdarzeń na bezpośredni dostęp interfejsu użytkownika aplikacji. Jednakże, jeśli aplikacja jest zajęta, obsługa inne zdarzenie interfejsu użytkownika, gdy to zdarzenie jest wywoływane, to zdarzenie nie można przetworzyć aż zakończy się lub wywołuje zdarzenie obsługi <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A> metody.  
  
 Nie można użyć `Handles` instrukcję, aby obsłużyć `NetworkAvailabilityChanged` zdarzenia; należy użyć `AddHandler` instrukcji.  
  
 W aplikacjach Windows Forms `MyApplication` obiektu ujawnia `NetworkAvailabilityChanged` zdarzeń, który zapewnia taką samą funkcjonalność jak to zdarzenie, ale może obsługiwać go za pomocą `Handles` instrukcji.  
  
> [!NOTE]
>  Wiele centrów sieci zapewniają połączenie sieciowe, nawet jeśli koncentrator jest odłączony od większej sieci. W związku z tym dla połączeń przewodowych to zdarzenie sygnalizuje zmianę w ramach połączenia między komputerem a koncentratorem.  
  
> [!NOTE]
>  `NetworkAvailabilityChanged` Zdarzeń nie jest inicjowane przez aplikacje, które działają w systemie Windows 95 i Windows 98 lub aplikacji uruchamianych w systemie operacyjnym Windows 2000 przez użytkowników niebędących administratorami. Jeśli Twoja aplikacja może działać na tych platformach, użyj <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> właściwości.  
  
   
  
## Examples  
 W tym przykładzie użyto `My.Computer.Network.NetworkAvailabilityChanged` zdarzenie, aby zaktualizować interfejs użytkownika formularza lub formantu.  
  
 Ten kod powinien znajdować się w formularza lub formantu, który ma <xref:System.Windows.Forms.Label> o nazwie `Label1`.  
  
 [!code-vb[VbVbalrMyApplication#50](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Network" />
        <altmember cref="N:Microsoft.VisualBasic.Devices" />
        <altmember cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler" />
        <altmember cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Ping">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Polecenia ping do określonego serwera.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (hostNameOrAddress As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="member this.Ping : string -&gt; bool" Usage="network.Ping hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Adres URL, nazwę komputera lub liczbę adresów IP serwera na polecenie ping.</param>
        <summary>Polecenia ping do określonego serwera.</summary>
        <returns>
          <see langword="True" /> Jeśli operacja się powiodła. w przeciwnym razie <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Ping` Metoda nie jest odporny na uszkodzenia metodą ustalania dostępności komputera zdalnego: port polecenia ping do komputera docelowego może zostać wyłączony lub żądanie ping może być blokowany przez zaporę lub router.  
  
 Adres jest przekazywany do `Ping` metoda musi być rozpoznawalna DNS i nie może być poprzedzony "http://".  
  
   
  
## Examples  
 W tym przykładzie raporty, czy serwer może za pomocą polecenia ping po określeniu czy `Ping` metoda zwraca `True`.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 Zastąp `"198.01.01.01"` nazwą IP adres, adres URL lub komputera serwera, aby wykonać polecenie ping.  
  
 W tym przykładzie raporty, czy serwer może za pomocą polecenia ping po określeniu czy `Ping` zwróconej metody `True` i określa interwał limitu czasu, 1000 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 Zastąp `"www.cohowinery.com"` nazwą IP adres, adres URL lub komputera serwera, aby wykonać polecenie ping.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Nie połączenia sieciowego jest dostępna.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Adres URL jest nieprawidłowy.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">W tym artykule opisano zestaw uprawnień zabezpieczeń stosowane do kodu. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <permission cref="T:System.Net.WebPermission">Określa prawa dostępu do zasobów HTTP w Internecie. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.SocketPermission">Formanty prawa lub akceptowania połączeń na adres transportu. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Służy do sterowania dostępem do składnika licznika wydajności systemu Windows NT. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Kontroluje dostęp do sieci, informacji i statystyki ruchu na komputerze lokalnym. Powiązane wyliczenie: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />.</permission>
        <altmember cref="T:System.Uri" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (address As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.Ping : Uri -&gt; bool" Usage="network.Ping address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI serwera, na polecenie ping.</param>
        <summary>Polecenia ping do określonego serwera.</summary>
        <returns>
          <see langword="True" /> Jeśli operacja się powiodła. w przeciwnym razie <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Ping` Metoda nie jest odporny na uszkodzenia metodą ustalania dostępności komputera zdalnego: port polecenia ping do komputera docelowego może zostać wyłączony lub żądanie ping może być blokowany przez zaporę lub router.  
  
 Adres jest przekazywany do `Ping` metoda musi być rozpoznawalna DNS i nie może być poprzedzony "http://".  
  
   
  
## Examples  
 W tym przykładzie raporty, czy serwer może za pomocą polecenia ping po określeniu czy `Ping` metoda zwraca `True`.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 Zastąp `"198.01.01.01"` nazwą IP adres, adres URL lub komputera serwera, aby wykonać polecenie ping.  
  
 W tym przykładzie raporty, czy serwer może za pomocą polecenia ping po określeniu czy `Ping` zwróconej metody `True` i określa interwał limitu czasu, 1000 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 Zastąp `"www.cohowinery.com"` nazwą IP adres, adres URL lub komputera serwera, aby wykonać polecenie ping.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Nie połączenia sieciowego jest dostępna.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Adres URL jest nieprawidłowy.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">W tym artykule opisano zestaw uprawnień zabezpieczeń stosowane do kodu. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <permission cref="T:System.Net.WebPermission">Określa prawa dostępu do zasobów HTTP w Internecie. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.SocketPermission">Formanty prawa lub akceptowania połączeń na adres transportu. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Służy do sterowania dostępem do składnika licznika wydajności systemu Windows NT. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Kontroluje dostęp do sieci, informacji i statystyki ruchu na komputerze lokalnym. Powiązane wyliczenie: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />.</permission>
        <altmember cref="T:System.Uri" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (string hostNameOrAddress, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(string hostNameOrAddress, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (hostNameOrAddress As String, timeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(System::String ^ hostNameOrAddress, int timeout);" />
      <MemberSignature Language="F#" Value="member this.Ping : string * int -&gt; bool" Usage="network.Ping (hostNameOrAddress, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Adres URL, nazwę komputera lub liczbę adresów IP serwera na polecenie ping.</param>
        <param name="timeout">Próg czasu w milisekundach dla skontaktować się z docelowym. Domyślna to 500.</param>
        <summary>Polecenia ping do określonego serwera.</summary>
        <returns>
          <see langword="True" /> Jeśli operacja się powiodła. w przeciwnym razie <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Ping` Metoda nie jest odporny na uszkodzenia metodą ustalania dostępności komputera zdalnego: port polecenia ping do komputera docelowego może zostać wyłączony lub żądanie ping może być blokowany przez zaporę lub router.  
  
 Adres jest przekazywany do `Ping` metoda musi być rozpoznawalna DNS i nie może być poprzedzony "http://".  
  
   
  
## Examples  
 W tym przykładzie raporty, czy serwer może za pomocą polecenia ping po określeniu czy `Ping` metoda zwraca `True`.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 Zastąp `"198.01.01.01"` nazwą IP adres, adres URL lub komputera serwera, aby wykonać polecenie ping.  
  
 W tym przykładzie raporty, czy serwer może za pomocą polecenia ping po określeniu czy `Ping` zwróconej metody `True` i określa interwał limitu czasu, 1000 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 Zastąp `"www.cohowinery.com"` nazwą IP adres, adres URL lub komputera serwera, aby wykonać polecenie ping.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Nie połączenia sieciowego jest dostępna.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Adres URL jest nieprawidłowy.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">W tym artykule opisano zestaw uprawnień zabezpieczeń stosowane do kodu. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <permission cref="T:System.Net.WebPermission">Określa prawa dostępu do zasobów HTTP w Internecie. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.SocketPermission">Formanty prawa lub akceptowania połączeń na adres transportu. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Służy do sterowania dostępem do składnika licznika wydajności systemu Windows NT. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Kontroluje dostęp do sieci, informacji i statystyki ruchu na komputerze lokalnym. Powiązane wyliczenie: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />.</permission>
        <altmember cref="T:System.Uri" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (Uri address, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(class System.Uri address, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (address As Uri, timeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(Uri ^ address, int timeout);" />
      <MemberSignature Language="F#" Value="member this.Ping : Uri * int -&gt; bool" Usage="network.Ping (address, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI serwera, na polecenie ping.</param>
        <param name="timeout">Próg czasu w milisekundach dla skontaktować się z docelowym. Domyślna to 500.</param>
        <summary>Polecenia ping do określonego serwera.</summary>
        <returns>
          <see langword="True" /> Jeśli operacja się powiodła. w przeciwnym razie <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Ping` Metoda nie jest odporny na uszkodzenia metodą ustalania dostępności komputera zdalnego: port polecenia ping do komputera docelowego może zostać wyłączony lub żądanie ping może być blokowany przez zaporę lub router.  
  
 Adres jest przekazywany do `Ping` metoda musi być rozpoznawalna DNS i nie może być poprzedzony "http://".  
  
   
  
## Examples  
 W tym przykładzie raporty, czy serwer może za pomocą polecenia ping po określeniu czy `Ping` metoda zwraca `True`.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 Zastąp `"198.01.01.01"` nazwą IP adres, adres URL lub komputera serwera, aby wykonać polecenie ping.  
  
 W tym przykładzie raporty, czy serwer może za pomocą polecenia ping po określeniu czy `Ping` zwróconej metody `True` i określa interwał limitu czasu, 1000 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 Zastąp `"www.cohowinery.com"` nazwą IP adres, adres URL lub komputera serwera, aby wykonać polecenie ping.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Nie połączenia sieciowego jest dostępna.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Adres URL jest nieprawidłowy.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">W tym artykule opisano zestaw uprawnień zabezpieczeń stosowane do kodu. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <permission cref="T:System.Net.WebPermission">Określa prawa dostępu do zasobów HTTP w Internecie. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.SocketPermission">Formanty prawa lub akceptowania połączeń na adres transportu. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Służy do sterowania dostępem do składnika licznika wydajności systemu Windows NT. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Kontroluje dostęp do sieci, informacji i statystyki ruchu na komputerze lokalnym. Powiązane wyliczenie: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />.</permission>
        <altmember cref="T:System.Uri" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wysyła podany plik adres określony host.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Ścieżka i nazwa pliku do przekazania.</param>
        <param name="address">Adres URL, adres IP lub identyfikator URI serwera docelowego.</param>
        <summary>Wysyła podany plik adres określony host.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć jednego z innych przeciążeń <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> metodę, aby podać poświadczenia użytkownika lub określić wartość limitu czasu określonego.  
  
 `My.Computer.Network.UploadFile` dane wyjściowe śledzenia informacji po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Włączanie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.UploadFile` metody.  
  
|Zadanie|Zobacz|  
|-|-|  
|Przekaż plik|[Instrukcje: przekazywanie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Ten przykładowy przekazuje plik `Order.txt` do `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Ten przykładowy przekazuje plik `Order.txt` do `http://www.cohowinery.com/uploads` bez podawania nazwy użytkownika ani hasła, której jest przedstawiony postęp przekazywania i ma interwał limitu czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Ścieżka pliku źródłowego nie jest prawidłowy.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> nie ma nazwę pliku.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowiedział w domyślny limit czasu (100 sekund).</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostanie odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Określa prawa dostępu do zasobów HTTP w Internecie. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Porady: pobieranie pliku w Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Porady: analizowanie ścieżek pliku w Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri -&gt; unit" Usage="network.UploadFile (sourceFileName, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Ścieżka i nazwa pliku do przekazania.</param>
        <param name="address">Adres URL, adres IP lub identyfikator URI serwera docelowego.</param>
        <summary>Wysyła podany plik adres określony host.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć jednego z innych przeciążeń <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> metodę, aby podać poświadczenia użytkownika lub określić wartość limitu czasu określonego.  
  
 `My.Computer.Network.UploadFile` dane wyjściowe śledzenia informacji po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Włączanie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.UploadFile` metody.  
  
|Zadanie|Zobacz|  
|-|-|  
|Przekaż plik|[Instrukcje: przekazywanie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Ten przykładowy przekazuje plik `Order.txt` do `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Ten przykładowy przekazuje plik `Order.txt` do `http://www.cohowinery.com/uploads` bez podawania nazwy użytkownika ani hasła, której jest przedstawiony postęp przekazywania i ma interwał limitu czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Ścieżka pliku źródłowego nie jest prawidłowy.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> nie ma nazwę pliku.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowiedział w domyślny limit czasu (100 sekund).</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostanie odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Określa prawa dostępu do zasobów HTTP w Internecie. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Porady: pobieranie pliku w Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Porady: analizowanie ścieżek pliku w Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Ścieżka i nazwa pliku do przekazania.</param>
        <param name="address">Adres URL, adres IP lub identyfikator URI serwera docelowego.</param>
        <param name="userName">Nazwa użytkownika do uwierzytelnienia. Wartością domyślną jest ciąg pusty: <c>""</c>.</param>
        <param name="password">Hasło do uwierzytelniania. Wartością domyślną jest ciąg pusty: <c>""</c>.</param>
        <summary>Wysyła podany plik adres określony host.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć jednego z innych przeciążeń <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> metodę, aby określić wartość określonego limitu czasu.  
  
 `My.Computer.Network.UploadFile` dane wyjściowe śledzenia informacji po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Włączanie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Protokół FTP wysyła informacje, w tym hasła w postaci zwykłego tekstu i nie powinny być używane do przesyłania informacji poufnych.  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.UploadFile` metody.  
  
|Zadanie|Zobacz|  
|-|-|  
|Przekaż plik|[Instrukcje: przekazywanie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Ten przykładowy przekazuje plik `Order.txt` do `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Ten przykładowy przekazuje plik `Order.txt` do `http://www.cohowinery.com/uploads` bez podawania nazwy użytkownika ani hasła, której jest przedstawiony postęp przekazywania i ma interwał limitu czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> jest mniejsza niż lub równy zeru.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> nie ma nazwę pliku.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowiedział w domyślny limit czasu (100 sekund).</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostanie odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Określa prawa dostępu do zasobów HTTP w Internecie. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Porady: pobieranie pliku w Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Porady: analizowanie ścieżek pliku w Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Ścieżka i nazwa pliku do przekazania.</param>
        <param name="address">Adres URL, adres IP lub identyfikator URI serwera docelowego.</param>
        <param name="userName">Nazwa użytkownika do uwierzytelnienia. Wartością domyślną jest ciąg pusty: <c>""</c>.</param>
        <param name="password">Hasło do uwierzytelniania. Wartością domyślną jest ciąg pusty: <c>""</c>.</param>
        <summary>Wysyła podany plik adres określony host.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć jednego z innych przeciążeń <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> metodę, aby określić wartość określonego limitu czasu.  
  
 `My.Computer.Network.UploadFile` dane wyjściowe śledzenia informacji po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Włączanie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Protokół FTP wysyła informacje, w tym hasła w postaci zwykłego tekstu i nie powinny być używane do przesyłania informacji poufnych.  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.UploadFile` metody.  
  
|Zadanie|Zobacz|  
|-|-|  
|Przekaż plik|[Instrukcje: przekazywanie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Ten przykładowy przekazuje plik `Order.txt` do `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Ten przykładowy przekazuje plik `Order.txt` do `http://www.cohowinery.com/uploads` bez podawania nazwy użytkownika ani hasła, której jest przedstawiony postęp przekazywania i ma interwał limitu czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> jest mniejsza niż lub równy zeru.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> nie ma nazwę pliku.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowiedział w domyślny limit czasu (100 sekund).</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostanie odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Określa prawa dostępu do zasobów HTTP w Internecie. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Porady: pobieranie pliku w Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Porady: analizowanie ścieżek pliku w Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * System.Net.ICredentials * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, networkCredentials, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Ścieżka i nazwa pliku do przekazania.</param>
        <param name="address">Adres URL, adres IP lub identyfikator URI serwera docelowego.</param>
        <param name="networkCredentials">Poświadczenia dla uwierzytelniania.</param>
        <param name="showUI">
          <see langword="True" /> Aby wyświetlić postęp operacji. w przeciwnym razie <see langword="False" />. Wartość domyślna to <see langword="False" />.</param>
        <param name="connectionTimeout">Interwał limitu czasu w milisekundach. Domyślna to 100 sekund.</param>
        <summary>Wysyła podany plik adres określony host.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `showUI` ustawiono `True`, okno dialogowe pokazuje postęp operacji i obejmuje **anulować** przycisku, który użytkownik może kliknąć, aby anulować operację. Ponieważ nie jest modalne okno dialogowe, nie blokuje dane wejściowe użytkownika do innych okien w programie.  
  
 Jeśli serwer nie odpowiedział w interwale określonym we `connectionTimeout`, operacja została anulowana i zgłaszany jest wyjątek.  
  
 `My.Computer.Network.UploadFile` dane wyjściowe śledzenia informacji po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Włączanie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Protokół FTP wysyła informacje, w tym hasła w postaci zwykłego tekstu i nie powinny być używane do przesyłania informacji poufnych.  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.UploadFile` metody.  
  
|Zadanie|Zobacz|  
|-|-|  
|Przekaż plik|[Instrukcje: przekazywanie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Ten przykładowy przekazuje plik `Order.txt` do `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Ten przykładowy przekazuje plik `Order.txt` do `http://www.cohowinery.com/uploads` bez podawania nazwy użytkownika ani hasła, której jest przedstawiony postęp przekazywania i ma interwał limitu czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> jest mniejsza niż lub równy zeru.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> nie ma nazwę pliku.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowiada w ramach określonych <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostanie odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Określa uprawnienia związane z interfejsów użytkownika i Schowka. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Określa prawa dostępu do zasobów HTTP w Internecie. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Porady: pobieranie pliku w Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Porady: analizowanie ścieżek pliku w Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Ścieżka i nazwa pliku do przekazania.</param>
        <param name="address">Adres URL, adres IP lub identyfikator URI serwera docelowego.</param>
        <param name="userName">Nazwa użytkownika do uwierzytelnienia. Wartością domyślną jest ciąg pusty: <c>""</c>.</param>
        <param name="password">Hasło do uwierzytelniania. Wartością domyślną jest ciąg pusty: <c>""</c>.</param>
        <param name="showUI">
          <see langword="True" /> Aby wyświetlić postęp operacji. w przeciwnym razie <see langword="False" />. Wartość domyślna to <see langword="False" />.</param>
        <param name="connectionTimeout">Interwał limitu czasu w milisekundach. Domyślna to 100 sekund.</param>
        <summary>Wysyła podany plik adres określony host.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `showUI` ustawiono `True`, okno dialogowe pokazuje postęp operacji i obejmuje **anulować** przycisku, który użytkownik może kliknąć, aby anulować operację. Ponieważ nie jest modalne okno dialogowe, nie blokuje dane wejściowe użytkownika do innych okien w programie.  
  
 Jeśli serwer nie odpowiedział w interwale określonym we `connectionTimeout`, operacja została anulowana i zgłaszany jest wyjątek.  
  
 `My.Computer.Network.UploadFile` dane wyjściowe śledzenia informacji po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Włączanie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Protokół FTP wysyła informacje, w tym hasła w postaci zwykłego tekstu i nie powinny być używane do przesyłania informacji poufnych.  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.UploadFile` metody.  
  
|Zadanie|Zobacz|  
|-|-|  
|Przekaż plik|[Instrukcje: przekazywanie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Ten przykładowy przekazuje plik `Order.txt` do `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Ten przykładowy przekazuje plik `Order.txt` do `http://www.cohowinery.com/uploads` bez podawania nazwy użytkownika ani hasła, której jest przedstawiony postęp przekazywania i ma interwał limitu czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> jest mniejsza niż lub równy zeru.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> nie ma nazwę pliku.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowiada w ramach określonych <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostanie odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Określa uprawnienia związane z interfejsów użytkownika i Schowka. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Określa prawa dostępu do zasobów HTTP w Internecie. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Porady: pobieranie pliku w Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Porady: analizowanie ścieżek pliku w Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * System.Net.ICredentials * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, networkCredentials, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Ścieżka i nazwa pliku do przekazania.</param>
        <param name="address">Adres URL, adres IP lub identyfikator URI serwera docelowego.</param>
        <param name="networkCredentials">Poświadczenia dla uwierzytelniania.</param>
        <param name="showUI">
          <see langword="True" /> Aby wyświetlić postęp operacji. w przeciwnym razie <see langword="False" />. Wartość domyślna to <see langword="False" />.</param>
        <param name="connectionTimeout">Interwał limitu czasu w milisekundach. Domyślna to 100 sekund.</param>
        <param name="onUserCancel">Akcja do wykonania, kiedy użytkownik kliknie **anulować**. Wartość domyślna to <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Wysyła podany plik adres określony host.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `showUI` ustawiono `True`, okno dialogowe pokazuje postęp operacji i obejmuje **anulować** przycisku, który użytkownik może kliknąć, aby anulować operację. Ponieważ nie jest modalne okno dialogowe, nie blokuje dane wejściowe użytkownika do innych okien w programie.  
  
 Jeśli serwer nie odpowiedział w interwale określonym we `connectionTimeout`, operacja została anulowana i zgłaszany jest wyjątek.  
  
 `My.Computer.Network.UploadFile` dane wyjściowe śledzenia informacji po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Włączanie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Protokół FTP wysyła informacje, w tym hasła w postaci zwykłego tekstu i nie powinny być używane do przesyłania informacji poufnych.  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.UploadFile` metody.  
  
|Zadanie|Zobacz|  
|-|-|  
|Przekaż plik|[Instrukcje: przekazywanie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Ten przykładowy przekazuje plik `Order.txt` do `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Ten przykładowy przekazuje plik `Order.txt` do `http://www.cohowinery.com/uploads` bez podawania nazwy użytkownika ani hasła, której jest przedstawiony postęp przekazywania i ma interwał limitu czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> jest mniejsza niż lub równy zeru.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> nie ma nazwę pliku.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowiada w ramach określonych <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostanie odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Określa uprawnienia związane z interfejsów użytkownika i Schowka. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Określa prawa dostępu do zasobów HTTP w Internecie. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Porady: pobieranie pliku w Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Porady: analizowanie ścieżek pliku w Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Ścieżka i nazwa pliku do przekazania.</param>
        <param name="address">Adres URL, adres IP lub identyfikator URI serwera docelowego.</param>
        <param name="userName">Nazwa użytkownika do uwierzytelnienia. Wartością domyślną jest ciąg pusty: <c>""</c>.</param>
        <param name="password">Hasło do uwierzytelniania. Wartością domyślną jest ciąg pusty: <c>""</c>.</param>
        <param name="showUI">
          <see langword="True" /> Aby wyświetlić postęp operacji. w przeciwnym razie <see langword="False" />. Wartość domyślna to <see langword="False" />.</param>
        <param name="connectionTimeout">Interwał limitu czasu w milisekundach. Domyślna to 100 sekund.</param>
        <summary>Wysyła podany plik adres określony host.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `showUI` ustawiono `True`, okno dialogowe pokazuje postęp operacji i obejmuje **anulować** przycisku, który użytkownik może kliknąć, aby anulować operację. Ponieważ nie jest modalne okno dialogowe, nie blokuje dane wejściowe użytkownika do innych okien w programie.  
  
 Jeśli serwer nie odpowiedział w interwale określonym we `connectionTimeout`, operacja została anulowana i zgłaszany jest wyjątek.  
  
 `My.Computer.Network.UploadFile` dane wyjściowe śledzenia informacji po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Włączanie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Protokół FTP wysyła informacje, w tym hasła w postaci zwykłego tekstu i nie powinny być używane do przesyłania informacji poufnych.  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.UploadFile` metody.  
  
|Zadanie|Zobacz|  
|-|-|  
|Przekaż plik|[Instrukcje: przekazywanie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Ten przykładowy przekazuje plik `Order.txt` do `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Ten przykładowy przekazuje plik `Order.txt` do `http://www.cohowinery.com/uploads` bez podawania nazwy użytkownika ani hasła, której jest przedstawiony postęp przekazywania i ma interwał limitu czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> jest mniejsza niż lub równy zeru.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> nie ma nazwę pliku.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowiada w ramach określonych <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostanie odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Określa uprawnienia związane z interfejsów użytkownika i Schowka. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Określa prawa dostępu do zasobów HTTP w Internecie. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Porady: pobieranie pliku w Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Porady: analizowanie ścieżek pliku w Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Ścieżka i nazwa pliku do przekazania.</param>
        <param name="address">Adres URL, adres IP lub identyfikator URI serwera docelowego.</param>
        <param name="userName">Nazwa użytkownika do uwierzytelnienia. Wartością domyślną jest ciąg pusty: <c>""</c>.</param>
        <param name="password">Hasło do uwierzytelniania. Wartością domyślną jest ciąg pusty: <c>""</c>.</param>
        <param name="showUI">Określa, czy wyświetlić postęp operacji. Wartość domyślna to <see langword="False" />.</param>
        <param name="connectionTimeout">Interwał limitu czasu w milisekundach. Domyślna to 100 sekund.</param>
        <param name="onUserCancel">Akcja do wykonania, kiedy użytkownik kliknie **anulować**. Wartość domyślna to <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Wysyła podany plik adres określony host.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `showUI` ustawiono `True`, okno dialogowe pokazuje postęp operacji i obejmuje **anulować** przycisku, który użytkownik może kliknąć, aby anulować operację. Ponieważ nie jest modalne okno dialogowe, nie blokuje dane wejściowe użytkownika do innych okien w programie.  
  
 Jeśli serwer nie odpowiedział w interwale określonym we `connectionTimeout`, operacja została anulowana i zgłaszany jest wyjątek.  
  
 `My.Computer.Network.UploadFile` dane wyjściowe śledzenia informacji po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Włączanie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Protokół FTP wysyła informacje, w tym hasła w postaci zwykłego tekstu i nie powinny być używane do przesyłania informacji poufnych.  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.UploadFile` metody.  
  
|Zadanie|Zobacz|  
|-|-|  
|Przekaż plik|[Instrukcje: przekazywanie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Ten przykładowy przekazuje plik `Order.txt` do `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Ten przykładowy przekazuje plik `Order.txt` do `http://www.cohowinery.com/uploads` bez podawania nazwy użytkownika ani hasła, której jest przedstawiony postęp przekazywania i ma interwał limitu czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> jest mniejsza niż lub równy zeru.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> nie ma nazwę pliku.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowiada w ramach określonych <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostanie odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Określa uprawnienia związane z interfejsów użytkownika i Schowka. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Określa prawa dostępu do zasobów HTTP w Internecie. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Porady: pobieranie pliku w Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Porady: analizowanie ścieżek pliku w Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Ścieżka i nazwa pliku do przekazania.</param>
        <param name="address">Adres URL, adres IP lub identyfikator URI serwera docelowego.</param>
        <param name="userName">Nazwa użytkownika do uwierzytelnienia. Wartością domyślną jest ciąg pusty: <c>""</c>.</param>
        <param name="password">Hasło do uwierzytelniania. Wartością domyślną jest ciąg pusty: <c>""</c>.</param>
        <param name="showUI">Określa, czy wyświetlić postęp operacji. Wartość domyślna to <see langword="False" />.</param>
        <param name="connectionTimeout">Interwał limitu czasu w milisekundach. Domyślna to 100 sekund.</param>
        <param name="onUserCancel">Akcja do wykonania, kiedy użytkownik kliknie **anulować**. Wartość domyślna to <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Wysyła podany plik adres określony host.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `showUI` ustawiono `True`, okno dialogowe pokazuje postęp operacji i obejmuje **anulować** przycisku, który użytkownik może kliknąć, aby anulować operację. Ponieważ nie jest modalne okno dialogowe, nie blokuje dane wejściowe użytkownika do innych okien w programie.  
  
 Jeśli serwer nie odpowiedział w interwale określonym we `connectionTimeout`, operacja została anulowana i zgłaszany jest wyjątek.  
  
 `My.Computer.Network.UploadFile` dane wyjściowe śledzenia informacji po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Włączanie śledzenia sieci](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Protokół FTP wysyła informacje, w tym hasła w postaci zwykłego tekstu i nie powinny być używane do przesyłania informacji poufnych.  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Computer.Network.UploadFile` metody.  
  
|Zadanie|Zobacz|  
|-|-|  
|Przekaż plik|[Instrukcje: przekazywanie pliku](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 Ten przykładowy przekazuje plik `Order.txt` do `http://www.cohowinery.com/uploads`.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 Ten przykładowy przekazuje plik `Order.txt` do `http://www.cohowinery.com/uploads` bez podawania nazwy użytkownika ani hasła, której jest przedstawiony postęp przekazywania i ma interwał limitu czasu 500 milisekund.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> jest mniejsza niż lub równy zeru.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> nie ma nazwę pliku.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień do wykonania operacji sieciowych.</exception>
        <exception cref="T:System.TimeoutException">Serwer nie odpowiada w ramach określonych <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">Żądanie zostanie odrzucone przez docelowego serwera sieci web.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Określa uprawnienia związane z interfejsów użytkownika i Schowka. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Określa prawa dostępu do zasobów HTTP w Internecie. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Porady: pobieranie pliku w Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Porady: analizowanie ścieżek pliku w Visual Basic</related>
      </Docs>
    </Member>
  </Members>
</Type>