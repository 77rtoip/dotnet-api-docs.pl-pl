<Type Name="Keyboard" FullName="Microsoft.VisualBasic.Devices.Keyboard">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3d474750caf426b41b8c6f4dbc0a831ba0c8d4d5" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69319119" /></Metadata><TypeSignature Language="C#" Value="public class Keyboard" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Keyboard extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.Keyboard" />
  <TypeSignature Language="VB.NET" Value="Public Class Keyboard" />
  <TypeSignature Language="C++ CLI" Value="public ref class Keyboard" />
  <TypeSignature Language="F#" Value="type Keyboard = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zapewnia właściwości do uzyskiwania dostępu do bieżącego stanu klawiatury, takie jak klucze są aktualnie naciśnięte i zapewnia metodę wysyłania naciśnięć klawiszy do aktywnego okna.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Computer.Keyboard` Obiekt udostępnia interfejs na klawiaturze komputera. Właściwości `My.Computer.Keyboard` dostarczają informacji o stanie kilku specjalnych kluczy. `My.Computer.Keyboard.SendKeys` Metoda umożliwia wysyłanie kluczy do aktywnego okna, tak jakby zostały wpisane na klawiaturze.  
  
## <a name="tasks"></a>Zadania  
 W poniższej tabeli przedstawiono przykład zadania związanego `My.Computer.Keyboard` z obiektem.  
  
|Zadanie|Zobacz|  
|-|-|  
|Wyślij naciśnięcia klawiszy do aplikacji|[Instrukcje: Uruchamianie aplikacji i wysyłanie naciśnięć klawiszy IT (Visual Basic)](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-start-an-application-and-send-it-keystrokes.md)|  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja systemu Windows|**Tak**|  
|Biblioteka klas|**Tak**|  
|Aplikacja konsoli|**Tak**|  
|Biblioteka formantów systemu Windows|**Tak**|  
|Biblioteka formantów sieci Web|Nie|  
|Usługa systemu Windows|**Tak**|  
|Witryna sieci Web|Nie|  
  
   
  
## Examples  
 Ten przykład używa właściwości `My.Computer.Keyboard.CtrlKeyDown` , aby określić, czy klawisz Ctrl komputera jest wciśnięty.  
  
 [!code-vb[VbVbalrMyComputer#36](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#36)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
    <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">Uzyskiwanie dostępu do klawiatury</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Keyboard ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Keyboard.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Keyboard();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.VisualBasic.Devices.Keyboard" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">Uzyskiwanie dostępu do klawiatury</related>
      </Docs>
    </Member>
    <Member MemberName="AltKeyDown">
      <MemberSignature Language="C#" Value="public bool AltKeyDown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AltKeyDown" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AltKeyDown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AltKeyDown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AltKeyDown : bool" Usage="Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy klawisz ALT nie działa.</summary>
        <value><see langword="True" />Jeśli klawisz ALT nie działa; w przeciwnym razie. <see langword="False" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość zawiera funkcje podobne <xref:System.Windows.Forms.Control.ModifierKeys%2A> do właściwości. `My.Computer.Keyboard.AltKeyDown`  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja systemu Windows|**Tak**|  
|Biblioteka klas|**Tak**|  
|Aplikacja konsoli|**Tak**|  
|Biblioteka formantów systemu Windows|**Tak**|  
|Biblioteka formantów sieci Web|Nie|  
|Usługa systemu Windows|**Tak**|  
|Witryna sieci Web|Nie|  
  
   
  
## Examples  
 Ten przykład używa właściwości `My.Computer.Keyboard.AltKeyDown` , aby określić, czy klawisz Alt komputera nie działa.  
  
 [!code-vb[VbVbalrMyComputer#23](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#23)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="P:System.Windows.Forms.Control.ModifierKeys" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">Uzyskiwanie dostępu do klawiatury</related>
      </Docs>
    </Member>
    <Member MemberName="CapsLock">
      <MemberSignature Language="C#" Value="public bool CapsLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CapsLock" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Keyboard.CapsLock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CapsLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CapsLock { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CapsLock : bool" Usage="Microsoft.VisualBasic.Devices.Keyboard.CapsLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy Caps Lock jest włączona.</summary>
        <value>Wartość: <see langword="True" /> Jeśli Caps Lock jest <see langword="False" />włączona; w przeciwnym razie. <see langword="Boolean" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwracany jest tylko stan Caps Lock.  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja systemu Windows|**Tak**|  
|Biblioteka klas|**Tak**|  
|Aplikacja konsoli|**Tak**|  
|Biblioteka formantów systemu Windows|**Tak**|  
|Biblioteka formantów sieci Web|Nie|  
|Usługa systemu Windows|**Tak**|  
|Witryna sieci Web|Nie|  
  
   
  
## Examples  
 Ten przykład używa właściwości `My.Computer.Keyboard.CapsLock` , aby określić, czy Caps Lock komputera jest włączona.  
  
 [!code-vb[VbVbalrMyComputer#50](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">Uzyskiwanie dostępu do klawiatury</related>
      </Docs>
    </Member>
    <Member MemberName="CtrlKeyDown">
      <MemberSignature Language="C#" Value="public bool CtrlKeyDown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CtrlKeyDown" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CtrlKeyDown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CtrlKeyDown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CtrlKeyDown : bool" Usage="Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy klawisz CTRL nie działa.</summary>
        <value><see langword="True" />Jeśli klawisz CTRL nie działa; w przeciwnym razie. <see langword="False" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość zawiera funkcje podobne <xref:System.Windows.Forms.Control.ModifierKeys%2A> do właściwości. `My.Computer.Keyboard.CtrlKeyDown`  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja systemu Windows|**Tak**|  
|Biblioteka klas|**Tak**|  
|Aplikacja konsoli|**Tak**|  
|Biblioteka formantów systemu Windows|**Tak**|  
|Biblioteka formantów sieci Web|Nie|  
|Usługa systemu Windows|**Tak**|  
|Witryna sieci Web|Nie|  
  
   
  
## Examples  
 Ten przykład używa właściwości `My.Computer.Keyboard.CtrlKeyDown` , aby określić, czy klawisz Ctrl komputera nie działa.  
  
 [!code-vb[VbVbalrMyComputer#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#34)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="P:System.Windows.Forms.Control.ModifierKeys" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">Uzyskiwanie dostępu do klawiatury</related>
      </Docs>
    </Member>
    <Member MemberName="NumLock">
      <MemberSignature Language="C#" Value="public bool NumLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NumLock" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Keyboard.NumLock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NumLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NumLock { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.NumLock : bool" Usage="Microsoft.VisualBasic.Devices.Keyboard.NumLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy klawisz NUM LOCK jest włączony.</summary>
        <value><see langword="True" />Jeśli jest włączona blokada NUM LOCK; w przeciwnym razie. <see langword="False" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwracany jest tylko stan klawisza NUM LOCK.  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja systemu Windows|**Tak**|  
|Biblioteka klas|**Tak**|  
|Aplikacja konsoli|**Tak**|  
|Biblioteka formantów systemu Windows|**Tak**|  
|Biblioteka formantów sieci Web|Nie|  
|Usługa systemu Windows|**Tak**|  
|Witryna sieci Web|Nie|  
  
   
  
## Examples  
 Ten przykład używa właściwości `My.Computer.Keyboard.NumLock` , aby określić, czy klawisz Num Lock komputera jest włączony.  
  
 [!code-vb[VbVbalrMyComputer#48](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#48)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">Uzyskiwanie dostępu do klawiatury</related>
      </Docs>
    </Member>
    <Member MemberName="ScrollLock">
      <MemberSignature Language="C#" Value="public bool ScrollLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScrollLock" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Keyboard.ScrollLock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ScrollLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScrollLock { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ScrollLock : bool" Usage="Microsoft.VisualBasic.Devices.Keyboard.ScrollLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="Boolean" /> Pobiera informację o tym, czy klawisz Scroll Lock jest włączony.</summary>
        <value><see langword="True" />Jeśli jest włączona blokada przewijania; w przeciwnym razie. <see langword="False" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwracany jest tylko stan klawisza SCROLL LOCK.  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja systemu Windows|**Tak**|  
|Biblioteka klas|**Tak**|  
|Aplikacja konsoli|**Tak**|  
|Biblioteka formantów systemu Windows|**Tak**|  
|Biblioteka formantów sieci Web|Nie|  
|Usługa systemu Windows|**Tak**|  
|Witryna sieci Web|Nie|  
  
   
  
## Examples  
 Ten przykład używa właściwości `My.Computer.Keyboard.ScrollLock` , aby określić, czy klawisza Scroll Lock komputera jest włączona.  
  
 [!code-vb[VbVbalrMyComputer#31](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#31)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">Uzyskiwanie dostępu do klawiatury</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendKeys">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wysyła jeden lub więcej naciśnięć klawiszy do aktywnego okna, tak jak w przypadku jego wpisania na klawiaturze.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendKeys">
      <MemberSignature Language="C#" Value="public void SendKeys (string keys);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SendKeys(string keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendKeys (keys As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendKeys(System::String ^ keys);" />
      <MemberSignature Language="F#" Value="member this.SendKeys : string -&gt; unit" Usage="keyboard.SendKeys keys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="keys">A <see langword="String" /> , który definiuje klucze do wysłania.</param>
        <summary>Wysyła jeden lub więcej naciśnięć klawiszy do aktywnego okna, tak jak w przypadku jego wpisania na klawiaturze.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda zapewnia funkcje podobne <xref:System.Windows.Forms.SendKeys.Send%2A> do metod i <xref:System.Windows.Forms.SendKeys.SendWait%2A>. `My.Computer.Keyboard.SendKeys`  
  
 `wait` Argument jest przydatny, jeśli druga aplikacja musi zostać zakończona, zanim będzie można kontynuować działanie aplikacji.  
  
> [!NOTE]
>  Ponieważ nie ma metody zarządzanej w celu aktywowania innej aplikacji, można użyć tej klasy w bieżącej aplikacji, ręcznie wybrać okno, do którego mają zostać wysłane klucze, lub użyć metod interfejsu API systemu Windows, `FindWindow` takich `SetForegroundWindow`jak i, aby wymusić skupienie się na inne aplikacje. Aby uzyskać więcej informacji, [zobacz Przewodnik: Wywoływanie interfejsów](~/docs/visual-basic/programming-guide/com-interop/walkthrough-calling-windows-apis.md)API systemu Windows.  
  
 `keys` Argument może określać dowolny pojedynczy klucz lub dowolny klucz połączony z klawiszem Alt, CTRL lub Shift (lub dowolną kombinacją tych kluczy). Każdy klucz jest reprezentowany przez jeden lub więcej znaków, `a` na przykład dla znaku "a" lub `{ENTER}` klawisza ENTER.  
  
 Aby połączyć klucz przy użyciu klawisza Shift, poprzedź kod `+` klucza znakiem (znak plus). Aby połączyć klucz z klawiszem Ctrl, poprzedź kod `^` klawisza znakiem (karetka). Aby połączyć klucz z klawiszem Alt, poprzedź kod `%` klucza znakiem (znak procent). Aby określić klucze powtarzane, użyj `{` *numeru*`}`klucza formularza. Należy umieścić spację między *kluczem* i *cyfrą*. Na przykład `{LEFT 42}` : "naciśnij klawisz Strzałka w lewo 42 razy"; `{h 10}` oznacza "naciśnij" h "10 razy".  
  
 Poniższa tabela zawiera listę kodów, których można użyć do określenia znaków, które nie są wyświetlane po naciśnięciu odpowiedniego klucza (na przykład ENTER lub TAB).  
  
|Key|Kod|  
|-|-|  
|BACKSPACE|{Backspace} lub {BS}|  
|PRZERWIJ|{BREAK}|  
|CAPS LOCK|{CAPSLOCK}|  
|WYCZYŚĆ|{CLEAR}|  
|DELETE|{DELETE} lub {DEL}|  
|STRZAŁKA W DÓŁ|{DOWN}|  
|END|{END}|  
|ENTER (klawiatura numeryczna)|WEJŚĆ|  
|ENTER|~|  
|ESC|{ESCAPE} lub {ESC}|  
|HELP|{HELP}|  
|MOWA|{HOME}|  
|STAWK|WSTAWIENIA|  
|STRZAŁKA W LEWO|{LEFT}|  
|NUM LOCK|{NUMLOCK}|  
|STRONA W DÓŁ|{PGDN}|  
|STRONA W GÓRĘ|{PGUP}|  
|RETURN|{RETURN}|  
|STRZAŁKA W PRAWO|KLIKNIJ|  
|SCROLL LOCK|{SCROLLLOCK}|  
|TAB|{TAB}|  
|STRZAŁKA W GÓRĘ|{UP}|  
|F1 przez F15|{F1} do {F15}|  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja systemu Windows|**Tak**|  
|Biblioteka klas|**Tak**|  
|Aplikacja konsoli|**Tak**|  
|Biblioteka formantów systemu Windows|**Tak**|  
|Biblioteka formantów sieci Web|Nie|  
|Usługa systemu Windows|**Tak**|  
|Witryna sieci Web|Nie|  
  
   
  
## Examples  
 W tym przykładzie zastosowano `My.Computer.Keyboard.SendKeys` metodę, aby wysyłać naciśnięcia klawiszy do aplikacji zewnętrznej, aplikację kalkulatora uruchomioną `Shell` przez funkcję.  
  
 [!code-vb[VbVbalrMyComputer#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#25)]  
  
 Wyjątek <xref:System.ArgumentException> jest zgłaszany, jeśli nie można odnaleźć aplikacji z żądanym identyfikatorem procesu.  
  
 Wywołanie `Shell` funkcji wymaga pełnego zaufania (<xref:System.Security.SecurityException> Klasa).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Istnieje sytuacja częściowego zaufania, w której użytkownik nie ma wystarczających uprawnień.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Powiązane wartość typu wyliczeniowego: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Kontroluje uprawnienia dotyczące interfejsów użytkownika i Schowka. Powiązane wartość typu wyliczeniowego: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="M:System.Windows.Forms.SendKeys.Send(System.String)" />
        <altmember cref="M:System.Windows.Forms.SendKeys.SendWait(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">Uzyskiwanie dostępu do klawiatury</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9280ca96-7a93-47a3-8d01-6d01be0657cb">Przewodnik: Wywoływanie interfejsów API systemu Windows</related>
      </Docs>
    </Member>
    <Member MemberName="SendKeys">
      <MemberSignature Language="C#" Value="public void SendKeys (string keys, bool wait);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SendKeys(string keys, bool wait) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendKeys (keys As String, wait As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendKeys(System::String ^ keys, bool wait);" />
      <MemberSignature Language="F#" Value="member this.SendKeys : string * bool -&gt; unit" Usage="keyboard.SendKeys (keys, wait)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="wait" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="keys">A <see langword="String" /> , który definiuje klucze do wysłania.</param>
        <param name="wait">Opcjonalna. A <see langword="Boolean" /> , który określa, czy poczekać na przetworzenie naciśnięć klawiszy przed kontynuowaniem działania aplikacji. <see langword="True" />Domyślnie.</param>
        <summary>Wysyła jeden lub więcej naciśnięć klawiszy do aktywnego okna, tak jak w przypadku jego wpisania na klawiaturze.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda zapewnia funkcje podobne <xref:System.Windows.Forms.SendKeys.Send%2A> do metod i <xref:System.Windows.Forms.SendKeys.SendWait%2A>. `My.Computer.Keyboard.SendKeys`  
  
 `wait` Argument jest przydatny, jeśli druga aplikacja musi zostać zakończona, zanim będzie można kontynuować działanie aplikacji.  
  
> [!NOTE]
>  Ponieważ nie ma metody zarządzanej w celu aktywowania innej aplikacji, można użyć tej klasy w bieżącej aplikacji, ręcznie wybrać okno, do którego mają zostać wysłane klucze, lub użyć metod interfejsu API systemu Windows, `FindWindow` takich `SetForegroundWindow`jak i, aby wymusić skupienie się na inne aplikacje. Aby uzyskać więcej informacji, [zobacz Przewodnik: Wywoływanie interfejsów](~/docs/visual-basic/programming-guide/com-interop/walkthrough-calling-windows-apis.md)API systemu Windows.  
  
 `keys` Argument może określać dowolny pojedynczy klucz lub dowolny klucz połączony z klawiszem Alt, CTRL lub Shift (lub dowolną kombinacją tych kluczy). Każdy klucz jest reprezentowany przez jeden lub więcej znaków, `a` na przykład dla znaku "a" lub `{ENTER}` klawisza ENTER.  
  
 Aby połączyć klucz przy użyciu klawisza Shift, poprzedź kod `+` klucza znakiem (znak plus). Aby połączyć klucz z klawiszem Ctrl, poprzedź kod `^` klawisza znakiem (karetka). Aby połączyć klucz z klawiszem Alt, poprzedź kod `%` klucza znakiem (znak procent). Aby określić klucze powtarzane, użyj `{` *numeru*`}`klucza formularza. Należy umieścić spację między *kluczem* i *cyfrą*. Na przykład `{LEFT 42}` : "naciśnij klawisz Strzałka w lewo 42 razy"; `{h 10}` oznacza "naciśnij" h "10 razy".  
  
 Poniższa tabela zawiera listę kodów, których można użyć do określenia znaków, które nie są wyświetlane po naciśnięciu odpowiedniego klucza (na przykład ENTER lub TAB).  
  
|Key|Kod|  
|-|-|  
|BACKSPACE|{Backspace} lub {BS}|  
|PRZERWIJ|{BREAK}|  
|CAPS LOCK|{CAPSLOCK}|  
|WYCZYŚĆ|{CLEAR}|  
|DELETE|{DELETE} lub {DEL}|  
|STRZAŁKA W DÓŁ|{DOWN}|  
|END|{END}|  
|ENTER (klawiatura numeryczna)|WEJŚĆ|  
|ENTER|~|  
|ESC|{ESCAPE} lub {ESC}|  
|HELP|{HELP}|  
|MOWA|{HOME}|  
|STAWK|WSTAWIENIA|  
|STRZAŁKA W LEWO|{LEFT}|  
|NUM LOCK|{NUMLOCK}|  
|STRONA W DÓŁ|{PGDN}|  
|STRONA W GÓRĘ|{PGUP}|  
|RETURN|{RETURN}|  
|STRZAŁKA W PRAWO|KLIKNIJ|  
|SCROLL LOCK|{SCROLLLOCK}|  
|TAB|{TAB}|  
|STRZAŁKA W GÓRĘ|{UP}|  
|F1 przez F15|{F1} do {F15}|  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja systemu Windows|**Tak**|  
|Biblioteka klas|**Tak**|  
|Aplikacja konsoli|**Tak**|  
|Biblioteka formantów systemu Windows|**Tak**|  
|Biblioteka formantów sieci Web|Nie|  
|Usługa systemu Windows|**Tak**|  
|Witryna sieci Web|Nie|  
  
   
  
## Examples  
 W tym przykładzie zastosowano `My.Computer.Keyboard.SendKeys` metodę, aby wysyłać naciśnięcia klawiszy do aplikacji zewnętrznej, aplikację kalkulatora uruchomioną `Shell` przez funkcję.  
  
 [!code-vb[VbVbalrMyComputer#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#25)]  
  
 Wyjątek <xref:System.ArgumentException> jest zgłaszany, jeśli nie można odnaleźć aplikacji z żądanym identyfikatorem procesu.  
  
 Wywołanie `Shell` funkcji wymaga pełnego zaufania (<xref:System.Security.SecurityException> Klasa).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Istnieje sytuacja częściowego zaufania, w której użytkownik nie ma wystarczających uprawnień.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Powiązane wartość typu wyliczeniowego: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Kontroluje uprawnienia dotyczące interfejsów użytkownika i Schowka. Powiązane wartość typu wyliczeniowego: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="M:System.Windows.Forms.SendKeys.Send(System.String)" />
        <altmember cref="M:System.Windows.Forms.SendKeys.SendWait(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">Uzyskiwanie dostępu do klawiatury</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9280ca96-7a93-47a3-8d01-6d01be0657cb">Przewodnik: Wywoływanie interfejsów API systemu Windows</related>
      </Docs>
    </Member>
    <Member MemberName="ShiftKeyDown">
      <MemberSignature Language="C#" Value="public bool ShiftKeyDown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShiftKeyDown" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShiftKeyDown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShiftKeyDown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShiftKeyDown : bool" Usage="Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy klawisz SHIFT nie działa.</summary>
        <value><see langword="True" />Jeśli klawisz SHIFT nie działa, w przeciwnym razie. <see langword="False" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość zawiera funkcje podobne <xref:System.Windows.Forms.Control.ModifierKeys%2A> do właściwości. `My.Computer.Keyboard.ShiftKeyDown`  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja systemu Windows|**Tak**|  
|Biblioteka klas|**Tak**|  
|Aplikacja konsoli|**Tak**|  
|Biblioteka formantów systemu Windows|**Tak**|  
|Biblioteka formantów sieci Web|Nie|  
|Usługa systemu Windows|**Tak**|  
|Witryna sieci Web|Nie|  
  
   
  
## Examples  
 Ten przykład używa właściwości `My.Computer.Keyboard.ShiftKeyDown` , aby określić, czy jeden z klawiszy Shift komputera nie działa.  
  
 [!code-vb[VbVbalrMyComputer#47](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#47)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="P:System.Windows.Forms.Control.ModifierKeys" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">Uzyskiwanie dostępu do klawiatury</related>
      </Docs>
    </Member>
  </Members>
</Type>
