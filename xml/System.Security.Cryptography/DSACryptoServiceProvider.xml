<Type Name="DSACryptoServiceProvider" FullName="System.Security.Cryptography.DSACryptoServiceProvider">
  <TypeSignature Language="C#" Value="public sealed class DSACryptoServiceProvider : System.Security.Cryptography.DSA, System.Security.Cryptography.ICspAsymmetricAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DSACryptoServiceProvider extends System.Security.Cryptography.DSA implements class System.Security.Cryptography.ICspAsymmetricAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.DSACryptoServiceProvider" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DSACryptoServiceProvider&#xA;Inherits DSA&#xA;Implements ICspAsymmetricAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class DSACryptoServiceProvider sealed : System::Security::Cryptography::DSA, System::Security::Cryptography::ICspAsymmetricAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.DSA</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Cryptography.ICspAsymmetricAlgorithm</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c8a5a-101">Definiuje obiektu do implementacji dostawcy usług kryptograficznych <see cref="T:System.Security.Cryptography.DSA" /> algorytmu.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-101">Defines a wrapper object to access the cryptographic service provider (CSP) implementation of the <see cref="T:System.Security.Cryptography.DSA" /> algorithm.</span></span> <span data-ttu-id="c8a5a-102">Klasa ta nie może być dziedziczona.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8a5a-103">Można użyć <xref:System.Security.Cryptography.DSACryptoServiceProvider> klasa do tworzenia podpisów cyfrowych i ochronę integralności danych.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-103">You can use the <xref:System.Security.Cryptography.DSACryptoServiceProvider> class to create digital signatures and protect the integrity of your data.</span></span>  
  
 <span data-ttu-id="c8a5a-104">Aby używać systemu klucza publicznego do cyfrowego podpisywania wiadomości, nadawca najpierw dotyczy funkcji skrótu wiadomości, aby utworzyć skrót wiadomości.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-104">To use a public-key system to digitally sign a message, the sender first applies a hash function to the message to create a message digest.</span></span> <span data-ttu-id="c8a5a-105">Nadawca szyfruje następnie skrót wiadomości z kluczem prywatnym nadawcy do tworzenia podpisu nadawcy.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-105">The sender then encrypts the message digest with the sender's private key to create the sender's personal signature.</span></span> <span data-ttu-id="c8a5a-106">Po otrzymaniu komunikatu i podpis, odbiornika odszyfrowuje podpis odzyskać skrót wiadomości za pomocą klucza publicznego nadawcy i tworzy skrót wiadomości przy użyciu tego samego algorytmu wyznaczania wartości skrótu używanego przez nadawcę.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-106">Upon receiving the message and signature, the receiver decrypts the signature using the sender's public key to recover the message digest and hashes the message using the same hash algorithm that the sender used.</span></span> <span data-ttu-id="c8a5a-107">Jeśli skrót wiadomości, że odbiorca oblicza dokładnie zgodny skrót wiadomości odebrane od nadawcy, odbiorcy można się upewnić, że wiadomość nie została zmieniona przesyłanych.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-107">If the message digest that the receiver computes exactly matches the message digest received from the sender, the receiver can be sure that the message was not altered while in transit.</span></span> <span data-ttu-id="c8a5a-108">Należy pamiętać, że podpis można sprawdzić dla wszystkich użytkowników, ponieważ klucz publiczny nadawcy jest typowe wiedzy.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-108">Note that a signature can be verified by anyone, because the sender's public key is common knowledge.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c8a5a-109">Nowsze asymetryczne algorytmy są dostępne.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-109">Newer asymmetric algorithms are available.</span></span> <span data-ttu-id="c8a5a-110">Należy rozważyć użycie <xref:System.Security.Cryptography.RSACryptoServiceProvider> klasy zamiast <xref:System.Security.Cryptography.DSACryptoServiceProvider> klasy.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-110">Consider using the <xref:System.Security.Cryptography.RSACryptoServiceProvider> class instead of the <xref:System.Security.Cryptography.DSACryptoServiceProvider> class.</span></span> <span data-ttu-id="c8a5a-111">Użyj <xref:System.Security.Cryptography.DSACryptoServiceProvider> tylko w celu zapewnienia zgodności z starszych aplikacji i danych.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-111">Use <xref:System.Security.Cryptography.DSACryptoServiceProvider> only for compatibility with legacy applications and data.</span></span>  
  
 <span data-ttu-id="c8a5a-112">Ten algorytm obsługuje długości kluczy z 512 bitów długości 1024 bitów w przyrostach 64-bitowy.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-112">This algorithm supports key lengths from 512 bits to 1024 bits in increments of 64 bits.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c8a5a-113">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-113">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DSACryptoServiceProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DSACryptoServiceProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c8a5a-114">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-114">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c8a5a-115">Aby uzyskać możliwość wywoływania niezarządzanego kodu.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-115">for the ability to call unmanaged code.</span></span> <span data-ttu-id="c8a5a-116">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c8a5a-116">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DSACryptoServiceProvider (int dwKeySize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwKeySize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwKeySize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DSACryptoServiceProvider(int dwKeySize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwKeySize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dwKeySize"><span data-ttu-id="c8a5a-117">Rozmiar klucza algorytmu asymetrycznego w bitach.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-117">The size of the key for the asymmetric algorithm in bits.</span></span></param>
        <summary><span data-ttu-id="c8a5a-118">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> klasy z określonym rozmiarem klucza.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-118">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> class with the specified key size.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c8a5a-119">Aby uzyskać możliwość wywoływania niezarządzanego kodu.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-119">for the ability to call unmanaged code.</span></span> <span data-ttu-id="c8a5a-120">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c8a5a-120">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DSACryptoServiceProvider (System.Security.Cryptography.CspParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.CspParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameters As CspParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DSACryptoServiceProvider(System::Security::Cryptography::CspParameters ^ parameters);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.CspParameters" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="c8a5a-121">Parametry dla dostawcy usług Kryptograficznych.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-121">The parameters for the CSP.</span></span></param>
        <summary><span data-ttu-id="c8a5a-122">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> klasy z określonymi parametrami dla dostawcy usług kryptograficznych (CSP).</span><span class="sxs-lookup"><span data-stu-id="c8a5a-122">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> class with the specified parameters for the cryptographic service provider (CSP).</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c8a5a-123">Aby uzyskać możliwość wywoływania niezarządzanego kodu.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-123">for the ability to call unmanaged code.</span></span> <span data-ttu-id="c8a5a-124">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c8a5a-124">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DSACryptoServiceProvider (int dwKeySize, System.Security.Cryptography.CspParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwKeySize, class System.Security.Cryptography.CspParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwKeySize As Integer, parameters As CspParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DSACryptoServiceProvider(int dwKeySize, System::Security::Cryptography::CspParameters ^ parameters);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwKeySize" Type="System.Int32" />
        <Parameter Name="parameters" Type="System.Security.Cryptography.CspParameters" />
      </Parameters>
      <Docs>
        <param name="dwKeySize"><span data-ttu-id="c8a5a-125">Rozmiar klucza dla algorytmu kryptograficznego w bitach.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-125">The size of the key for the cryptographic algorithm in bits.</span></span></param>
        <param name="parameters"><span data-ttu-id="c8a5a-126">Parametry dla dostawcy usług Kryptograficznych.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-126">The parameters for the CSP.</span></span></param>
        <summary><span data-ttu-id="c8a5a-127">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> z określonego rozmiaru klucza i parametry dla dostawcy usług kryptograficznych (CSP).</span><span class="sxs-lookup"><span data-stu-id="c8a5a-127">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> class with the specified key size and parameters for the cryptographic service provider (CSP).</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="c8a5a-128">Nie można uzyskać dostawcy usług Kryptograficznych.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-128">The CSP cannot be acquired.</span></span>  
  
 <span data-ttu-id="c8a5a-129">—lub—</span><span class="sxs-lookup"><span data-stu-id="c8a5a-129">-or-</span></span>  
  
 <span data-ttu-id="c8a5a-130">Nie można utworzyć klucza.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-130">The key cannot be created.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c8a5a-131"><paramref name="dwKeySize" /> jest poza zakresem.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-131"><paramref name="dwKeySize" /> is out of range.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c8a5a-132">Aby uzyskać możliwość wywoływania niezarządzanego kodu.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-132">for the ability to call unmanaged code.</span></span> <span data-ttu-id="c8a5a-133">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c8a5a-133">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateSignature">
      <MemberSignature Language="C#" Value="public override byte[] CreateSignature (byte[] rgbHash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] CreateSignature(unsigned int8[] rgbHash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.CreateSignature(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateSignature (rgbHash As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ CreateSignature(cli::array &lt;System::Byte&gt; ^ rgbHash);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbHash" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbHash"><span data-ttu-id="c8a5a-134">Dane były podpisane.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-134">The data to be signed.</span></span></param>
        <summary><span data-ttu-id="c8a5a-135">Tworzy <see cref="T:System.Security.Cryptography.DSA" /> podpisu dla określonych danych.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-135">Creates the <see cref="T:System.Security.Cryptography.DSA" /> signature for the specified data.</span></span></summary>
        <returns><span data-ttu-id="c8a5a-136">Podpis cyfrowy dla określonych danych.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-136">The digital signature for the specified data.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CspKeyContainerInfo">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CspKeyContainerInfo CspKeyContainerInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CspKeyContainerInfo CspKeyContainerInfo" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CspKeyContainerInfo As CspKeyContainerInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CspKeyContainerInfo ^ CspKeyContainerInfo { System::Security::Cryptography::CspKeyContainerInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICspAsymmetricAlgorithm.CspKeyContainerInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CspKeyContainerInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8a5a-137">Pobiera <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> obiektu, który opisuje dodatkowe informacje na temat klucza kryptograficznego.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-137">Gets a <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> object that describes additional information about a cryptographic key pair.</span></span></summary>
        <value><span data-ttu-id="c8a5a-138">A <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> obiektu, który opisuje dodatkowe informacje na temat klucza kryptograficznego.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-138">A <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> object that describes additional information about a cryptographic key pair.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8a5a-139">Użyj <xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> właściwości można pobrać dodatkowe informacje na temat klucza kryptograficznego.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-139">Use the <xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> property to retrieve additional information about a cryptographic key pair.</span></span>  <span data-ttu-id="c8a5a-140">Zwrócona <xref:System.Security.Cryptography.CspKeyContainerInfo> obiektu opisuje czy można wyeksportować klucza i określa nazwę kontenera klucza, informacji o dostawcy i inne informacje.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-140">The returned <xref:System.Security.Cryptography.CspKeyContainerInfo> object describes whether the key is exportable, and specifies the key container name, information about the provider, and other information.</span></span>  
  
 <span data-ttu-id="c8a5a-141">W przypadkach, gdy losowy klucz jest generowany kontener kluczy nie zostaną utworzone do czasu wywołania metody, która używa klucza.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-141">In cases where a random key is generated, a key container will not be created until you call a method that uses the key.</span></span>  <span data-ttu-id="c8a5a-142">Niektóre właściwości <xref:System.Security.Cryptography.CspKeyContainerInfo> obiektu zwróconego przez <xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> zgłosi właściwość <xref:System.Security.Cryptography.CryptographicException> , gdy kontener kluczy nie została utworzona.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-142">Some properties of the <xref:System.Security.Cryptography.CspKeyContainerInfo> object returned by the <xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> property will throw a <xref:System.Security.Cryptography.CryptographicException> if a key container has not been created.</span></span>  <span data-ttu-id="c8a5a-143">Aby upewnić się, że utworzono kontener klucza, wywołanie metody takie jak <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignData%2A>, <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignHash%2A>, <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData%2A>, <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash%2A>i tak dalej przed wywołaniem <xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-143">To make sure that a key container has been created, call a method such as <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignData%2A>, <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignHash%2A>, <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData%2A>, <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash%2A>, and so on, before you call the <xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportCspBlob">
      <MemberSignature Language="C#" Value="public byte[] ExportCspBlob (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] ExportCspBlob(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.ExportCspBlob(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportCspBlob (includePrivateParameters As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ ExportCspBlob(bool includePrivateParameters);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICspAsymmetricAlgorithm.ExportCspBlob(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters">
          <span data-ttu-id="c8a5a-144"><see langword="true" /> Aby uwzględnić klucz prywatny; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-144"><see langword="true" /> to include the private key; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c8a5a-145">Eksportuje obiektu blob zawierającego informacje o kluczu skojarzone z <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-145">Exports a blob containing the key information associated with a <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> object.</span></span></summary>
        <returns><span data-ttu-id="c8a5a-146">Tablica bajtów zawierająca informacje o kluczu skojarzone z <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-146">A byte array containing the key information associated with a <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8a5a-147"><xref:System.Security.Cryptography.DSACryptoServiceProvider.ExportCspBlob%2A> Metoda zwraca obiekt blob zawierający informacje o kluczu, który jest zgodny z niezarządzanego Microsoft kryptograficznego interfejsu API (CAPI).</span><span class="sxs-lookup"><span data-stu-id="c8a5a-147">The <xref:System.Security.Cryptography.DSACryptoServiceProvider.ExportCspBlob%2A> method returns a blob containing key information that is compatible with the unmanaged Microsoft Cryptographic API (CAPI).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection"><span data-ttu-id="c8a5a-148">uprawnienia dostępu do kontenera kluczy podczas eksportowania klucza prywatnego.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-148">for permission to access a key container when exporting a private key.</span></span> <span data-ttu-id="c8a5a-149">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-149">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="c8a5a-150">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Export" /></span><span class="sxs-lookup"><span data-stu-id="c8a5a-150">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Export" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ExportParameters">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.DSAParameters ExportParameters (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Security.Cryptography.DSAParameters ExportParameters(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.ExportParameters(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExportParameters (includePrivateParameters As Boolean) As DSAParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::DSAParameters ExportParameters(bool includePrivateParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.DSAParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters">
          <span data-ttu-id="c8a5a-151"><see langword="true" /> Aby uwzględnić parametry prywatny; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-151"><see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c8a5a-152">Eksporty <see cref="T:System.Security.Cryptography.DSAParameters" />.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-152">Exports the <see cref="T:System.Security.Cryptography.DSAParameters" />.</span></span></summary>
        <returns><span data-ttu-id="c8a5a-153">Parametry <see cref="T:System.Security.Cryptography.DSA" />.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-153">The parameters for <see cref="T:System.Security.Cryptography.DSA" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="c8a5a-154">Nie można wyeksportować klucza.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-154">The key cannot be exported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection"><span data-ttu-id="c8a5a-155">Aby uzyskać uprawnienia do eksportowania klucza.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-155">for permission to export a key.</span></span> <span data-ttu-id="c8a5a-156">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-156">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="c8a5a-157">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Export" /></span><span class="sxs-lookup"><span data-stu-id="c8a5a-157">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Export" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~DSACryptoServiceProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!DSACryptoServiceProvider ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected override byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashData(class System.IO.Stream data, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashData (data As Stream, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashData(System::IO::Stream ^ data, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected override byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashData(unsigned int8[] data, int32 offset, int32 count, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashData (data As Byte(), offset As Integer, count As Integer, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="count">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportCspBlob">
      <MemberSignature Language="C#" Value="public void ImportCspBlob (byte[] keyBlob);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ImportCspBlob(unsigned int8[] keyBlob) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.ImportCspBlob(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub ImportCspBlob (keyBlob As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ImportCspBlob(cli::array &lt;System::Byte&gt; ^ keyBlob);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICspAsymmetricAlgorithm.ImportCspBlob(System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyBlob" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="keyBlob"><span data-ttu-id="c8a5a-158">Tablica bajtów, który reprezentuje obiektu blob klucza algorytmu DSA.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-158">A byte array that represents a DSA key blob.</span></span></param>
        <summary><span data-ttu-id="c8a5a-159">Importuje reprezentujący DSA informacji klucza obiektu blob.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-159">Imports a blob that represents DSA key information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8a5a-160"><xref:System.Security.Cryptography.DSACryptoServiceProvider.ImportCspBlob%2A> Metoda inicjuje dane klucza z <xref:System.Security.Cryptography.DSACryptoServiceProvider> przy użyciu obiektu blob, który jest zgodny z niezarządzanego Microsoft kryptograficznego interfejsu API (CAPI).</span><span class="sxs-lookup"><span data-stu-id="c8a5a-160">The <xref:System.Security.Cryptography.DSACryptoServiceProvider.ImportCspBlob%2A> method initializes the key data of a <xref:System.Security.Cryptography.DSACryptoServiceProvider> object using a blob that is compatible with the unmanaged Microsoft Cryptographic API (CAPI).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection"><span data-ttu-id="c8a5a-161">uprawnienia dostępu do kontenera kluczy podczas importowania klucza.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-161">for permission to access a key container when importing a key.</span></span> <span data-ttu-id="c8a5a-162">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-162">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="c8a5a-163">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Import" /></span><span class="sxs-lookup"><span data-stu-id="c8a5a-163">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Import" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ImportParameters">
      <MemberSignature Language="C#" Value="public override void ImportParameters (System.Security.Cryptography.DSAParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ImportParameters(valuetype System.Security.Cryptography.DSAParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.DSAParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ImportParameters (parameters As DSAParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ImportParameters(System::Security::Cryptography::DSAParameters parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.DSAParameters" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="c8a5a-164">Parametry <see cref="T:System.Security.Cryptography.DSA" />.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-164">The parameters for <see cref="T:System.Security.Cryptography.DSA" />.</span></span></param>
        <summary><span data-ttu-id="c8a5a-165">Importuje określonego <see cref="T:System.Security.Cryptography.DSAParameters" />.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-165">Imports the specified <see cref="T:System.Security.Cryptography.DSAParameters" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="c8a5a-166">Nie można uzyskać dostawcy usług kryptograficznych (CSP).</span><span class="sxs-lookup"><span data-stu-id="c8a5a-166">The cryptographic service provider (CSP) cannot be acquired.</span></span>  
  
 <span data-ttu-id="c8a5a-167">—lub—</span><span class="sxs-lookup"><span data-stu-id="c8a5a-167">-or-</span></span>  
  
 <span data-ttu-id="c8a5a-168"><paramref name="parameters" /> Parametr ma brakujące pola.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-168">The <paramref name="parameters" /> parameter has missing fields.</span></span></exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection"><span data-ttu-id="c8a5a-169">Aby uzyskać uprawnienia do importowania klucza.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-169">for permission to import a key.</span></span> <span data-ttu-id="c8a5a-170">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-170">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="c8a5a-171">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Import" /></span><span class="sxs-lookup"><span data-stu-id="c8a5a-171">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Import" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="KeyExchangeAlgorithm">
      <MemberSignature Language="C#" Value="public override string KeyExchangeAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyExchangeAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACryptoServiceProvider.KeyExchangeAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property KeyExchangeAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ KeyExchangeAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8a5a-172">Pobiera nazwę Algorytm wymiany kluczy.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-172">Gets the name of the key exchange algorithm.</span></span></summary>
        <value><span data-ttu-id="c8a5a-173">Nazwa algorytmu wymiany kluczy.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-173">The name of the key exchange algorithm.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public override int KeySize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACryptoServiceProvider.KeySize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property KeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeySize { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8a5a-174">Pobiera rozmiar klucza używanego przez algorytmu asymetrycznego w bitach.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-174">Gets the size of the key used by the asymmetric algorithm in bits.</span></span></summary>
        <value><span data-ttu-id="c8a5a-175">Rozmiar klucza używanego przez algorytmu asymetrycznego.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-175">The size of the key used by the asymmetric algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8a5a-176">Ten algorytm obsługuje długości kluczy z 512 bitów długości 1024 bitów w przyrostach 64-bitowy.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-176">This algorithm supports key lengths from 512 bits to 1024 bits in increments of 64 bits.</span></span>  
  
 <span data-ttu-id="c8a5a-177"><xref:System.Security.Cryptography.DSACryptoServiceProvider> Klasy nie umożliwiają zmianę rozmiar klucza przy użyciu <xref:System.Security.Cryptography.DSACryptoServiceProvider.KeySize%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-177">The <xref:System.Security.Cryptography.DSACryptoServiceProvider> class does not allow you to change key sizes using the <xref:System.Security.Cryptography.DSACryptoServiceProvider.KeySize%2A> property.</span></span>  <span data-ttu-id="c8a5a-178">Wartości zapisane do tej właściwości zakończy się niepowodzeniem zaktualizować właściwości bez błędów.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-178">Any value written to this property will fail to update the property without error.</span></span>  <span data-ttu-id="c8a5a-179">Aby zmienić rozmiar klucza, użyj jednego z przeciążeń konstruktora.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-179">To change the key size, use one of the constructor overloads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizes">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalKeySizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACryptoServiceProvider.LegalKeySizes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LegalKeySizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistKeyInCsp">
      <MemberSignature Language="C#" Value="public bool PersistKeyInCsp { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PersistKeyInCsp" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACryptoServiceProvider.PersistKeyInCsp" />
      <MemberSignature Language="VB.NET" Value="Public Property PersistKeyInCsp As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PersistKeyInCsp { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8a5a-180">Pobiera lub ustawia wartość wskazującą, czy klucz powinien być utrwalone w dostawcy usług kryptograficznych (CSP).</span><span class="sxs-lookup"><span data-stu-id="c8a5a-180">Gets or sets a value indicating whether the key should be persisted in the cryptographic service provider (CSP).</span></span></summary>
        <value>
          <span data-ttu-id="c8a5a-181"><see langword="true" /> Jeśli klucz powinien być utrwalone w dostawcy usług Kryptograficznych; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-181"><see langword="true" /> if the key should be persisted in the CSP; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8a5a-182">Tej właściwości należy użyć, jeśli chcesz zachować klucza w kontenerze kluczy.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-182">Use this property when you want to persist a key in a key container.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry"><span data-ttu-id="c8a5a-183">Aby uzyskać uprawnienia do usuwania klucza.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-183">for permission to delete a key.</span></span> <span data-ttu-id="c8a5a-184">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-184">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="c8a5a-185">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Delete" /></span><span class="sxs-lookup"><span data-stu-id="c8a5a-185">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Delete" /></span></span>  
  
 <span data-ttu-id="c8a5a-186">—lub—</span><span class="sxs-lookup"><span data-stu-id="c8a5a-186">-or-</span></span>  
  
 <span data-ttu-id="c8a5a-187">Aby uzyskać uprawnienia do tworzenia klucza.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-187">for permission to create a key.</span></span> <span data-ttu-id="c8a5a-188">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-188">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="c8a5a-189">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Create" /></span><span class="sxs-lookup"><span data-stu-id="c8a5a-189">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Create" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="PublicOnly">
      <MemberSignature Language="C#" Value="public bool PublicOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PublicOnly" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACryptoServiceProvider.PublicOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PublicOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PublicOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8a5a-190">Pobiera wartość wskazującą, czy <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> obiekt zawiera tylko klucz publiczny.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-190">Gets a value that indicates whether the <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> object contains only a public key.</span></span></summary>
        <value>
          <span data-ttu-id="c8a5a-191"><see langword="true" /> Jeśli <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> obiekt zawiera tylko publiczną klucza; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-191"><see langword="true" /> if the <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> object contains only a public key; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8a5a-192"><xref:System.Security.Cryptography.DSACryptoServiceProvider> Klasa może być zainicjowana albo, tylko klucz publiczny lub obu publicznego i prywatnego klucza.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-192">The <xref:System.Security.Cryptography.DSACryptoServiceProvider> class can be initialized either with a public key only or with both a public and private key.</span></span>  <span data-ttu-id="c8a5a-193">Użyj <xref:System.Security.Cryptography.DSACryptoServiceProvider.PublicOnly%2A> właściwości w celu określenia, czy bieżące wystąpienie zawiera tylko klucz publiczny lub zarówno klucz publiczny i prywatny.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-193">Use the <xref:System.Security.Cryptography.DSACryptoServiceProvider.PublicOnly%2A> property to determine whether the current instance contains only a public key or both a public and private key.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureAlgorithm">
      <MemberSignature Language="C#" Value="public override string SignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACryptoServiceProvider.SignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SignatureAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SignatureAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8a5a-194">Pobiera nazwę algorytmu podpisu.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-194">Gets the name of the signature algorithm.</span></span></summary>
        <value><span data-ttu-id="c8a5a-195">Nazwa algorytmu podpisu.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-195">The name of the signature algorithm.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignData">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c8a5a-196">Oblicza wartość skrótu określonych danych i podpisuje go.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-196">Computes the hash value of the specified data and signs it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.SignData(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (buffer As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="c8a5a-197">Danych wejściowych, dla którego można obliczyć wartość skrótu.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-197">The input data for which to compute the hash.</span></span></param>
        <summary><span data-ttu-id="c8a5a-198">Oblicza wartość skrótu określonej tablicy bajtów i podpisuje wynikowej wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-198">Computes the hash value of the specified byte array and signs the resulting hash value.</span></span></summary>
        <returns><span data-ttu-id="c8a5a-199"><see cref="T:System.Security.Cryptography.DSA" /> Podpisu dla określonych danych.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-199">The <see cref="T:System.Security.Cryptography.DSA" /> signature for the specified data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8a5a-200">Ta metoda tworzy podpis cyfrowy, który jest zweryfikowana przy użyciu <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-200">This method creates a digital signature that is verified using the <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData%2A> method.</span></span>  
  
 <span data-ttu-id="c8a5a-201"><xref:System.Security.Cryptography.DSA> używa <xref:System.Security.Cryptography.SHA1> algorytmu wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-201"><xref:System.Security.Cryptography.DSA> uses the <xref:System.Security.Cryptography.SHA1> hash algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (System.IO.Stream inputStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(class System.IO.Stream inputStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.SignData(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (inputStream As Stream) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(System::IO::Stream ^ inputStream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inputStream"><span data-ttu-id="c8a5a-202">Danych wejściowych, dla którego można obliczyć wartość skrótu.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-202">The input data for which to compute the hash.</span></span></param>
        <summary><span data-ttu-id="c8a5a-203">Oblicza wartość skrótu określonego strumienia wejściowego i podpisuje wynikowej wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-203">Computes the hash value of the specified input stream and signs the resulting hash value.</span></span></summary>
        <returns><span data-ttu-id="c8a5a-204"><see cref="T:System.Security.Cryptography.DSA" /> Podpisu dla określonych danych.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-204">The <see cref="T:System.Security.Cryptography.DSA" /> signature for the specified data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8a5a-205"><xref:System.Security.Cryptography.DSA> używa <xref:System.Security.Cryptography.SHA1> algorytmu wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-205"><xref:System.Security.Cryptography.DSA> uses the <xref:System.Security.Cryptography.SHA1> hash algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (buffer As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="c8a5a-206">Dane wejściowe do podpisania.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-206">The input data to sign.</span></span></param>
        <param name="offset"><span data-ttu-id="c8a5a-207">Przesunięcie w tablicy, z którego ma zostać rozpoczęta przy użyciu danych.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-207">The offset into the array from which to begin using data.</span></span></param>
        <param name="count"><span data-ttu-id="c8a5a-208">Liczba bajtów w tablicy, która ma być używana jako dane.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-208">The number of bytes in the array to use as data.</span></span></param>
        <summary><span data-ttu-id="c8a5a-209">Znaki tablicę bajtów od początku określonego punktu do określonego punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-209">Signs a byte array from the specified start point to the specified end point.</span></span></summary>
        <returns><span data-ttu-id="c8a5a-210"><see cref="T:System.Security.Cryptography.DSA" /> Podpisu dla określonych danych.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-210">The <see cref="T:System.Security.Cryptography.DSA" /> signature for the specified data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8a5a-211">Ta metoda tworzy podpis cyfrowy, który jest zweryfikowana przy użyciu <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-211">This method creates a digital signature that is verified using the <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData%2A> method.</span></span>  
  
 <span data-ttu-id="c8a5a-212"><xref:System.Security.Cryptography.DSA> używa <xref:System.Security.Cryptography.SHA1> algorytmu wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-212"><xref:System.Security.Cryptography.DSA> uses the <xref:System.Security.Cryptography.SHA1> hash algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignHash">
      <MemberSignature Language="C#" Value="public byte[] SignHash (byte[] rgbHash, string str);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignHash(unsigned int8[] rgbHash, string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.SignHash(System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignHash (rgbHash As Byte(), str As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignHash(cli::array &lt;System::Byte&gt; ^ rgbHash, System::String ^ str);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbHash" Type="System.Byte[]" />
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rgbHash"><span data-ttu-id="c8a5a-213">Wartość skrótu danych do podpisania.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-213">The hash value of the data to be signed.</span></span></param>
        <param name="str"><span data-ttu-id="c8a5a-214">Nazwa algorytmu wyznaczania wartości skrótu używany do tworzenia wartości skrótu danych.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-214">The name of the hash algorithm used to create the hash value of the data.</span></span></param>
        <summary><span data-ttu-id="c8a5a-215">Oblicza podpis dla wartości skrótu określonej szyfrując z kluczem prywatnym.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-215">Computes the signature for the specified hash value by encrypting it with the private key.</span></span></summary>
        <returns><span data-ttu-id="c8a5a-216"><see cref="T:System.Security.Cryptography.DSA" /> Podpis dla wartości skrótu określonej.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-216">The <see cref="T:System.Security.Cryptography.DSA" /> signature for the specified hash value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8a5a-217">Ta metoda tworzy podpis cyfrowy, który jest zweryfikowana przy użyciu <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-217">This method creates a digital signature that is verified using the <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash%2A> method.</span></span>  
  
 <span data-ttu-id="c8a5a-218"><xref:System.Security.Cryptography.DSA> używa <xref:System.Security.Cryptography.SHA1> algorytmu wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-218"><xref:System.Security.Cryptography.DSA> uses the <xref:System.Security.Cryptography.SHA1> hash algorithm.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c8a5a-219"><paramref name="rgbHash" /> Parametr jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-219">The <paramref name="rgbHash" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="c8a5a-220">Nie można uzyskać dostawcy usług kryptograficznych (CSP).</span><span class="sxs-lookup"><span data-stu-id="c8a5a-220">The cryptographic service provider (CSP) cannot be acquired.</span></span>  
  
 <span data-ttu-id="c8a5a-221">—lub—</span><span class="sxs-lookup"><span data-stu-id="c8a5a-221">-or-</span></span>  
  
 <span data-ttu-id="c8a5a-222">Klucz prywatny nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-222">There is no private key.</span></span></exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection"><span data-ttu-id="c8a5a-223">Aby uzyskać uprawnienia do pliku przy użyciu klucza podpisywania.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-223">for permission to sign a file using the key.</span></span> <span data-ttu-id="c8a5a-224">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-224">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="c8a5a-225">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span><span class="sxs-lookup"><span data-stu-id="c8a5a-225">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="UseMachineKeyStore">
      <MemberSignature Language="C#" Value="public static bool UseMachineKeyStore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool UseMachineKeyStore" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACryptoServiceProvider.UseMachineKeyStore" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property UseMachineKeyStore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool UseMachineKeyStore { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8a5a-226">Pobiera lub ustawia wartość wskazującą, czy klucz powinien utrwalone w magazynie kluczy komputera zamiast magazynie profilu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-226">Gets or sets a value indicating whether the key should be persisted in the computer's key store instead of the user profile store.</span></span></summary>
        <value>
          <span data-ttu-id="c8a5a-227"><see langword="true" /> Jeśli klucz powinien utrwalone w magazynie kluczy komputera; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-227"><see langword="true" /> if the key should be persisted in the computer key store; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8a5a-228">Ustawienie tej właściwości na wartość true jest odpowiednikiem przekazywanie <xref:System.Security.Cryptography.DSACryptoServiceProvider.UseMachineKeyStore%2A> flaga <xref:System.Security.Cryptography.CspParameters> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-228">Setting this property to true is equivalent to passing the <xref:System.Security.Cryptography.DSACryptoServiceProvider.UseMachineKeyStore%2A> flag to a <xref:System.Security.Cryptography.CspParameters> object.</span></span> <span data-ttu-id="c8a5a-229"><xref:System.Security.Cryptography.DSACryptoServiceProvider.UseMachineKeyStore%2A> Właściwość ma zastosowanie do całego kodu w bieżącej domenie aplikacji, podczas gdy <xref:System.Security.Cryptography.CspParameters> obiekt ma zastosowanie tylko do klasy, które jawnie odwoływać.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-229">The <xref:System.Security.Cryptography.DSACryptoServiceProvider.UseMachineKeyStore%2A> property applies to all code in the current application domain, while the <xref:System.Security.Cryptography.CspParameters> object applies only to classes that explicitly reference it.</span></span> <span data-ttu-id="c8a5a-230">Te ustawienia są przydatne w przypadku personifikacji lub uruchomiony przy użyciu konta, którego profil użytkownika nie został załadowany.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-230">These settings are useful when impersonating or running under an account whose user profile is not loaded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="VerifyData">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c8a5a-231">Sprawdza, czy podpis cyfrowy jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-231">Verifies that a digital signature is valid.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="VerifyData">
      <MemberSignature Language="C#" Value="public bool VerifyData (byte[] rgbData, byte[] rgbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyData(unsigned int8[] rgbData, unsigned int8[] rgbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyData (rgbData As Byte(), rgbSignature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyData(cli::array &lt;System::Byte&gt; ^ rgbData, cli::array &lt;System::Byte&gt; ^ rgbSignature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbData" Type="System.Byte[]" />
        <Parameter Name="rgbSignature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbData"><span data-ttu-id="c8a5a-232">Dane, który został podpisany.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-232">The data that was signed.</span></span></param>
        <param name="rgbSignature"><span data-ttu-id="c8a5a-233">Dane sygnatur do weryfikacji.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-233">The signature data to be verified.</span></span></param>
        <summary><span data-ttu-id="c8a5a-234">Sprawdza dane określonego podpisu, porównując go z podpisem obliczonym dla określonych danych.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-234">Verifies the specified signature data by comparing it to the signature computed for the specified data.</span></span></summary>
        <returns>
          <span data-ttu-id="c8a5a-235"><see langword="true" /> Jeśli podpis sprawdza ważność; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-235"><see langword="true" /> if the signature verifies as valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8a5a-236">Ta metoda sprawdza <xref:System.Security.Cryptography.DSA> podpisu cyfrowego utworzonego przez <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignData%2A>.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-236">This method verifies the <xref:System.Security.Cryptography.DSA> digital signature produced by <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignData%2A>.</span></span>  
  
 <span data-ttu-id="c8a5a-237"><xref:System.Security.Cryptography.DSA> używa <xref:System.Security.Cryptography.SHA1> algorytmu wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-237"><xref:System.Security.Cryptography.DSA> uses the <xref:System.Security.Cryptography.SHA1> hash algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyHash">
      <MemberSignature Language="C#" Value="public bool VerifyHash (byte[] rgbHash, string str, byte[] rgbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyHash(unsigned int8[] rgbHash, string str, unsigned int8[] rgbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyHash (rgbHash As Byte(), str As String, rgbSignature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyHash(cli::array &lt;System::Byte&gt; ^ rgbHash, System::String ^ str, cli::array &lt;System::Byte&gt; ^ rgbSignature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbHash" Type="System.Byte[]" />
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="rgbSignature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbHash"><span data-ttu-id="c8a5a-238">Wartość skrótu danych do podpisania.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-238">The hash value of the data to be signed.</span></span></param>
        <param name="str"><span data-ttu-id="c8a5a-239">Nazwa algorytmu wyznaczania wartości skrótu używany do tworzenia wartości skrótu danych.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-239">The name of the hash algorithm used to create the hash value of the data.</span></span></param>
        <param name="rgbSignature"><span data-ttu-id="c8a5a-240">Dane sygnatur do weryfikacji.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-240">The signature data to be verified.</span></span></param>
        <summary><span data-ttu-id="c8a5a-241">Sprawdza dane określonego podpisu, porównując go z podpisem obliczonym dla wartości skrótu określonej.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-241">Verifies the specified signature data by comparing it to the signature computed for the specified hash value.</span></span></summary>
        <returns>
          <span data-ttu-id="c8a5a-242"><see langword="true" /> Jeśli podpis sprawdza ważność; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-242"><see langword="true" /> if the signature verifies as valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8a5a-243">Ta metoda sprawdza <xref:System.Security.Cryptography.DSA> podpisu cyfrowego utworzonego przez <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignHash%2A>.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-243">This method verifies the <xref:System.Security.Cryptography.DSA> digital signature produced by <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignHash%2A>.</span></span>  
  
 <span data-ttu-id="c8a5a-244">Jeśli `str` parametr jest `null`, używany jest domyślny algorytm wyznaczania wartości skrótu (SHA1).</span><span class="sxs-lookup"><span data-stu-id="c8a5a-244">If the `str` parameter is `null`, the default hash algorithm (SHA1) is used.</span></span> <span data-ttu-id="c8a5a-245">Algorytmy prawidłowy skrót jest <xref:System.Security.Cryptography.SHA1>.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-245">The valid hash algorithms is <xref:System.Security.Cryptography.SHA1>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c8a5a-246"><paramref name="rgbHash" /> Parametr jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-246">The <paramref name="rgbHash" /> parameter is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="c8a5a-247">—lub—</span><span class="sxs-lookup"><span data-stu-id="c8a5a-247">-or-</span></span>  
  
 <span data-ttu-id="c8a5a-248"><paramref name="rgbSignature" /> Parametr jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-248">The <paramref name="rgbSignature" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="c8a5a-249">Nie można uzyskać dostawcy usług kryptograficznych (CSP).</span><span class="sxs-lookup"><span data-stu-id="c8a5a-249">The cryptographic service provider (CSP) cannot be acquired.</span></span>  
  
 <span data-ttu-id="c8a5a-250">—lub—</span><span class="sxs-lookup"><span data-stu-id="c8a5a-250">-or-</span></span>  
  
 <span data-ttu-id="c8a5a-251">Nie można zweryfikować podpisu.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-251">The signature cannot be verified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifySignature">
      <MemberSignature Language="C#" Value="public override bool VerifySignature (byte[] rgbHash, byte[] rgbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool VerifySignature(unsigned int8[] rgbHash, unsigned int8[] rgbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifySignature(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function VerifySignature (rgbHash As Byte(), rgbSignature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool VerifySignature(cli::array &lt;System::Byte&gt; ^ rgbHash, cli::array &lt;System::Byte&gt; ^ rgbSignature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbHash" Type="System.Byte[]" />
        <Parameter Name="rgbSignature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbHash"><span data-ttu-id="c8a5a-252">Podpisane dane z <c>rgbSignature</c>.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-252">The data signed with <c>rgbSignature</c>.</span></span></param>
        <param name="rgbSignature"><span data-ttu-id="c8a5a-253">Można zweryfikować podpisu <c>rgbData</c>.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-253">The signature to be verified for <c>rgbData</c>.</span></span></param>
        <summary><span data-ttu-id="c8a5a-254">Sprawdza, czy <see cref="T:System.Security.Cryptography.DSA" /> podpisu dla określonych danych.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-254">Verifies the <see cref="T:System.Security.Cryptography.DSA" /> signature for the specified data.</span></span></summary>
        <returns>
          <span data-ttu-id="c8a5a-255"><see langword="true" /> Jeśli <paramref name="rgbSignature" /> zgodny z podpisem obliczonym przy użyciu algorytmu wyznaczania wartości skrótu określonej i klucz na <paramref name="rgbHash" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c8a5a-255"><see langword="true" /> if <paramref name="rgbSignature" /> matches the signature computed using the specified hash algorithm and key on <paramref name="rgbHash" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>