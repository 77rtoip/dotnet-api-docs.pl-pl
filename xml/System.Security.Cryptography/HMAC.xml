<Type Name="HMAC" FullName="System.Security.Cryptography.HMAC">
  <Metadata><Meta Name="ms.openlocfilehash" Value="28dd83c4c1d2bbacc8d9741007a728aead64d692" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69352620" /></Metadata><TypeSignature Language="C#" Value="public abstract class HMAC : System.Security.Cryptography.KeyedHashAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HMAC extends System.Security.Cryptography.KeyedHashAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.HMAC" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HMAC&#xA;Inherits KeyedHashAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class HMAC abstract : System::Security::Cryptography::KeyedHashAlgorithm" />
  <TypeSignature Language="F#" Value="type HMAC = class&#xA;    inherit KeyedHashAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.KeyedHashAlgorithm</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f2c35-101">Reprezentuje klasę abstrakcyjną, z której wszystkie implementacje kod uwierzytelniania wiadomości (HMAC) oparte na skrócie muszą być pochodnymi.</span><span class="sxs-lookup"><span data-stu-id="f2c35-101">Represents the abstract class from which all implementations of Hash-based Message Authentication Code (HMAC) must derive.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2c35-102">Przy użyciu kod uwierzytelniania wiadomości opartego na wykorzystaniu skrótu (HMAC) można określić, czy wiadomość wysłana za pośrednictwem niezabezpieczonego kanału została naruszona, pod warunkiem, że nadawca i odbiorca korzystają z klucza tajnego.</span><span class="sxs-lookup"><span data-stu-id="f2c35-102">A Hash-based Message Authentication Code (HMAC) can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</span></span> <span data-ttu-id="f2c35-103">Nadawca oblicza wartość skrótu dla oryginalnych danych i wysyła zarówno oryginalne dane, jak i HMAC jako jeden komunikat.</span><span class="sxs-lookup"><span data-stu-id="f2c35-103">The sender computes the hash value for the original data and sends both the original data and the HMAC as a single message.</span></span> <span data-ttu-id="f2c35-104">Odbiorca ponownie oblicza wartość skrótu dla odebranego komunikatu i sprawdza, czy obliczona wartość skrótu jest zgodna z przesłaną wartością skrótu.</span><span class="sxs-lookup"><span data-stu-id="f2c35-104">The receiver recomputes the hash value on the received message and checks that the computed hash value matches the transmitted hash value.</span></span>  
  
 <span data-ttu-id="f2c35-105">HMAC może być używany z każdą iteracyjną funkcją skrótu kryptograficznego, taką jak MD5 lub SHA-1, w połączeniu z kluczem udostępnionym tajny.</span><span class="sxs-lookup"><span data-stu-id="f2c35-105">HMAC can be used with any iterative cryptographic hash function, such as MD5 or SHA-1, in combination with a secret shared key.</span></span> <span data-ttu-id="f2c35-106">Kryptograficzna siła algorytmu HMAC zależy od właściwości bazowej funkcji skrótu.</span><span class="sxs-lookup"><span data-stu-id="f2c35-106">The cryptographic strength of HMAC depends on the properties of the underlying hash function.</span></span>  
  
 <span data-ttu-id="f2c35-107">Wszelkie zmiany danych lub wartości skrótu wynoszą niezgodność, ponieważ znajomość klucza tajnego jest wymagana do zmiany komunikatu i odtworzenia poprawnej wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="f2c35-107">Any change to the data or the hash value results in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct hash value.</span></span> <span data-ttu-id="f2c35-108">W związku z tym, jeśli oryginalne i obliczone wartości skrótu są zgodne, komunikat jest uwierzytelniany.</span><span class="sxs-lookup"><span data-stu-id="f2c35-108">Therefore, if the original and computed hash values match, the message is authenticated.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="f2c35-109">Usługi kryptograficzne</span><span class="sxs-lookup"><span data-stu-id="f2c35-109">Cryptographic Services</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HMAC ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HMAC();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f2c35-110">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.HMAC" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="f2c35-110">Initializes a new instance of the <see cref="T:System.Security.Cryptography.HMAC" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlockSizeValue">
      <MemberSignature Language="C#" Value="protected int BlockSizeValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockSizeValue" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HMAC.BlockSizeValue" />
      <MemberSignature Language="VB.NET" Value="Protected Property BlockSizeValue As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int BlockSizeValue { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BlockSizeValue : int with get, set" Usage="System.Security.Cryptography.HMAC.BlockSizeValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2c35-111">Pobiera lub ustawia rozmiar bloku, który ma być używany w wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="f2c35-111">Gets or sets the block size to use in the hash value.</span></span></summary>
        <value><span data-ttu-id="f2c35-112">Rozmiar bloku, który ma być używany w wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="f2c35-112">The block size to use in the hash value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2c35-113">Kod uwierzytelniania wiadomości oparte na skrótach (HMAC) używa funkcji skrótu, w której dane są tworzone przez iterację podstawowej funkcji kompresji w blokach danych.</span><span class="sxs-lookup"><span data-stu-id="f2c35-113">A Hash-based Message Authentication Code (HMAC) uses a hash function where data is hashed by iterating a basic compression function on blocks of data.</span></span> <span data-ttu-id="f2c35-114"><xref:System.Security.Cryptography.HMAC.BlockSizeValue%2A>jest rozmiarem bajtu tego bloku.</span><span class="sxs-lookup"><span data-stu-id="f2c35-114"><xref:System.Security.Cryptography.HMAC.BlockSizeValue%2A> is the byte size of such a block.</span></span> <span data-ttu-id="f2c35-115">Jego wartość to 64 bajtów.</span><span class="sxs-lookup"><span data-stu-id="f2c35-115">Its value is 64 bytes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f2c35-116">Tworzy wystąpienie implementacji kod uwierzytelniania wiadomości opartej na skrótach (<see cref="T:System.Security.Cryptography.HMAC" />).</span><span class="sxs-lookup"><span data-stu-id="f2c35-116">Creates an instance of an implementation of a Hash-based Message Authentication Code (<see cref="T:System.Security.Cryptography.HMAC" />) .</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HMAC Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.HMAC Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As HMAC" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::HMAC ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Security.Cryptography.HMAC" Usage="System.Security.Cryptography.HMAC.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HMAC</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f2c35-117">Tworzy wystąpienie domyślnej implementacji kod uwierzytelniania wiadomości opartej na skrótach (HMAC).</span><span class="sxs-lookup"><span data-stu-id="f2c35-117">Creates an instance of the default implementation of a Hash-based Message Authentication Code (HMAC).</span></span></summary>
        <returns><span data-ttu-id="f2c35-118">Nowe wystąpienie SHA-1, o ile ustawienia domyślne nie zostały zmienione przy użyciu [ &lt;elementu cryptoClass&gt; ](~/docs/framework/configure-apps/file-schema/cryptography/cryptoclass-element.md).</span><span class="sxs-lookup"><span data-stu-id="f2c35-118">A new SHA-1 instance, unless the default settings have been changed by using the [&lt;cryptoClass&gt; element](~/docs/framework/configure-apps/file-schema/cryptography/cryptoclass-element.md).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2c35-119">Domyślnie to Przeciążenie używa implementacji algorytmu SHA-1.</span><span class="sxs-lookup"><span data-stu-id="f2c35-119">By default, this overload uses the SHA-1 implementation of HMAC.</span></span> <span data-ttu-id="f2c35-120">Jeśli chcesz określić inną implementację, użyj <xref:System.Security.Cryptography.HMAC.Create%28System.String%29> przeciążenia, która umożliwia określenie nazwy algorytmu.</span><span class="sxs-lookup"><span data-stu-id="f2c35-120">If you want to specify a different implementation, use the <xref:System.Security.Cryptography.HMAC.Create%28System.String%29> overload, which lets you specify an algorithm name, instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HMAC Create (string algorithmName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.HMAC Create(string algorithmName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (algorithmName As String) As HMAC" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::HMAC ^ Create(System::String ^ algorithmName);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Security.Cryptography.HMAC" Usage="System.Security.Cryptography.HMAC.Create algorithmName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HMAC</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithmName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="algorithmName"><span data-ttu-id="f2c35-121">Implementacja HMAC, która ma zostać użyta.</span><span class="sxs-lookup"><span data-stu-id="f2c35-121">The HMAC implementation to use.</span></span> <span data-ttu-id="f2c35-122">W poniższej tabeli przedstawiono prawidłowe wartości <paramref name="algorithmName" /> parametru i algorytmy, do których są mapowane.</span><span class="sxs-lookup"><span data-stu-id="f2c35-122">The following table shows the valid values for the <paramref name="algorithmName" /> parameter and the algorithms they map to.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="f2c35-123">Wartość parametru</span><span class="sxs-lookup"><span data-stu-id="f2c35-123">Parameter value</span></span> 
 </term><description> <span data-ttu-id="f2c35-124">Implements</span><span class="sxs-lookup"><span data-stu-id="f2c35-124">Implements</span></span> 
 </description></listheader><item><term> <span data-ttu-id="f2c35-125">System.Security.Cryptography.HMAC</span><span class="sxs-lookup"><span data-stu-id="f2c35-125">System.Security.Cryptography.HMAC</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA1" /></description></item><item><term> <span data-ttu-id="f2c35-126">System.Security.Cryptography.KeyedHashAlgorithm</span><span class="sxs-lookup"><span data-stu-id="f2c35-126">System.Security.Cryptography.KeyedHashAlgorithm</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA1" /></description></item><item><term> <span data-ttu-id="f2c35-127">HMACMD5</span><span class="sxs-lookup"><span data-stu-id="f2c35-127">HMACMD5</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACMD5" /></description></item><item><term> <span data-ttu-id="f2c35-128">System.Security.Cryptography.HMACMD5</span><span class="sxs-lookup"><span data-stu-id="f2c35-128">System.Security.Cryptography.HMACMD5</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACMD5" /></description></item><item><term> <span data-ttu-id="f2c35-129">HMACRIPEMD160</span><span class="sxs-lookup"><span data-stu-id="f2c35-129">HMACRIPEMD160</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACRIPEMD160" /></description></item><item><term> <span data-ttu-id="f2c35-130">System.Security.Cryptography.HMACRIPEMD160</span><span class="sxs-lookup"><span data-stu-id="f2c35-130">System.Security.Cryptography.HMACRIPEMD160</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACRIPEMD160" /></description></item><item><term> <span data-ttu-id="f2c35-131">HMACSHA1</span><span class="sxs-lookup"><span data-stu-id="f2c35-131">HMACSHA1</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA1" /></description></item><item><term> <span data-ttu-id="f2c35-132">System.Security.Cryptography.HMACSHA1</span><span class="sxs-lookup"><span data-stu-id="f2c35-132">System.Security.Cryptography.HMACSHA1</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA1" /></description></item><item><term> <span data-ttu-id="f2c35-133">HMACSHA256</span><span class="sxs-lookup"><span data-stu-id="f2c35-133">HMACSHA256</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA256" /></description></item><item><term> <span data-ttu-id="f2c35-134">System.Security.Cryptography.HMACSHA256</span><span class="sxs-lookup"><span data-stu-id="f2c35-134">System.Security.Cryptography.HMACSHA256</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA256" /></description></item><item><term> <span data-ttu-id="f2c35-135">HMACSHA384</span><span class="sxs-lookup"><span data-stu-id="f2c35-135">HMACSHA384</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA384" /></description></item><item><term> <span data-ttu-id="f2c35-136">System.Security.Cryptography.HMACSHA384</span><span class="sxs-lookup"><span data-stu-id="f2c35-136">System.Security.Cryptography.HMACSHA384</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA384" /></description></item><item><term> <span data-ttu-id="f2c35-137">HMACSHA512</span><span class="sxs-lookup"><span data-stu-id="f2c35-137">HMACSHA512</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA512" /></description></item><item><term> <span data-ttu-id="f2c35-138">System.Security.Cryptography.HMACSHA512</span><span class="sxs-lookup"><span data-stu-id="f2c35-138">System.Security.Cryptography.HMACSHA512</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA512" /></description></item><item><term> <span data-ttu-id="f2c35-139">MACTripleDES</span><span class="sxs-lookup"><span data-stu-id="f2c35-139">MACTripleDES</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.MACTripleDES" /></description></item><item><term> <span data-ttu-id="f2c35-140">System.Security.Cryptography.MACTripleDES</span><span class="sxs-lookup"><span data-stu-id="f2c35-140">System.Security.Cryptography.MACTripleDES</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.MACTripleDES" /></description></item></list></param>
        <summary><span data-ttu-id="f2c35-141">Tworzy wystąpienie określonej implementacji kod uwierzytelniania wiadomości opartej na skrótach (HMAC).</span><span class="sxs-lookup"><span data-stu-id="f2c35-141">Creates an instance of the specified implementation of a Hash-based Message Authentication Code (HMAC).</span></span></summary>
        <returns><span data-ttu-id="f2c35-142">Nowe wystąpienie określonej implementacji HMAC.</span><span class="sxs-lookup"><span data-stu-id="f2c35-142">A new instance of the specified HMAC implementation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2c35-143">HMAC obsługuje wiele algorytmów wyznaczania wartości skrótu, w tym MD5, SHA-1, SHA-256 i RIPEMD160.</span><span class="sxs-lookup"><span data-stu-id="f2c35-143">HMAC supports a number of hash algorithms, including MD5, SHA-1, SHA-256, and RIPEMD160.</span></span> <span data-ttu-id="f2c35-144">Aby uzyskać pełną listę, zobacz obsługiwane wartości `algorithmName` parametru.</span><span class="sxs-lookup"><span data-stu-id="f2c35-144">For the full list, see the supported values for the `algorithmName` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="hMAC.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="f2c35-145"><see langword="true" />Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> do zwolnienia tylko zasobów niezarządzanych.</span><span class="sxs-lookup"><span data-stu-id="f2c35-145"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="f2c35-146">Zwalnia niezarządzane zasoby używane przez <see cref="T:System.Security.Cryptography.HMAC" /> klasę, gdy zmiana klucza jest wiarygodna i opcjonalnie zwalnia zarządzane zasoby.</span><span class="sxs-lookup"><span data-stu-id="f2c35-146">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.HMAC" /> class when a key change is legitimate and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2c35-147">Ta metoda jest wywoływana przez metodę publiczną `Dispose()` `Finalize` i metodę.</span><span class="sxs-lookup"><span data-stu-id="f2c35-147">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="f2c35-148">`Dispose()`wywołuje metodę chronioną `Dispose(Boolean)` `disposing` z parametrem ustawionym `true`na.</span><span class="sxs-lookup"><span data-stu-id="f2c35-148">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="f2c35-149">`Finalize`wywołuje `Dispose` `false`z `disposing` ustawionym na.</span><span class="sxs-lookup"><span data-stu-id="f2c35-149">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="f2c35-150">Gdy parametr ma wartość `true`, ta metoda zwalnia wszystkie zasoby przechowywane przez wszystkie obiekty zarządzane, do <xref:System.Security.Cryptography.HMAC> których odwołują się te odwołania. `disposing`</span><span class="sxs-lookup"><span data-stu-id="f2c35-150">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.HMAC> references.</span></span> <span data-ttu-id="f2c35-151">Ta metoda wywołuje `Dispose()` metodę każdego przywoływanego obiektu.</span><span class="sxs-lookup"><span data-stu-id="f2c35-151">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f2c35-152">
            <see langword="Dispose" />może być wywoływana wiele razy przez inne obiekty.</span><span class="sxs-lookup"><span data-stu-id="f2c35-152">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="f2c35-153">Podczas zastępowania <see langword="Dispose(Boolean)" />należy zachować ostrożność, aby nie odwoływać się do obiektów, które zostały wcześniej <see langword="Dispose" />usunięte we wcześniejszej wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="f2c35-153">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="f2c35-154">Aby uzyskać więcej informacji na temat sposobu <see langword="Dispose(Boolean)" />implementacji, zobacz [implementowanie metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="f2c35-154">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="f2c35-155">Aby uzyskać więcej informacji <see langword="Dispose" /> na <see langword="Finalize" />temat i, zobacz [Oczyszczanie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="f2c35-155">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected override void HashCore (ReadOnlySpan&lt;byte&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HashCore(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.HashCore(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HashCore (source As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HashCore(ReadOnlySpan&lt;System::Byte&gt; source);" />
      <MemberSignature Language="F#" Value="override this.HashCore : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="hMAC.HashCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected override void HashCore (byte[] rgb, int ib, int cb);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HashCore(unsigned int8[] rgb, int32 ib, int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.HashCore(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HashCore (rgb As Byte(), ib As Integer, cb As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HashCore(cli::array &lt;System::Byte&gt; ^ rgb, int ib, int cb);" />
      <MemberSignature Language="F#" Value="override this.HashCore : byte[] * int * int -&gt; unit" Usage="hMAC.HashCore (rgb, ib, cb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgb" Type="System.Byte[]" />
        <Parameter Name="ib" Type="System.Int32" />
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rgb"><span data-ttu-id="f2c35-156">Dane wejściowe.</span><span class="sxs-lookup"><span data-stu-id="f2c35-156">The input data.</span></span></param>
        <param name="ib"><span data-ttu-id="f2c35-157">Przesunięcie do tablicy bajtów, z której ma zacząć korzystać z danych.</span><span class="sxs-lookup"><span data-stu-id="f2c35-157">The offset into the byte array from which to begin using data.</span></span></param>
        <param name="cb"><span data-ttu-id="f2c35-158">Liczba bajtów w tablicy, które mają być używane jako dane.</span><span class="sxs-lookup"><span data-stu-id="f2c35-158">The number of bytes in the array to use as data.</span></span></param>
        <summary><span data-ttu-id="f2c35-159">Gdy jest zastępowany w klasie pochodnej, program kieruje dane zapisane w obiekcie do <see cref="T:System.Security.Cryptography.HMAC" /> domyślnego algorytmu wyznaczania wartości skrótu na potrzeby obliczeń.</span><span class="sxs-lookup"><span data-stu-id="f2c35-159">When overridden in a derived class, routes data written to the object into the default <see cref="T:System.Security.Cryptography.HMAC" /> hash algorithm for computing the hash value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2c35-160">Ta metoda nie jest wywoływana przez kod aplikacji.</span><span class="sxs-lookup"><span data-stu-id="f2c35-160">This method is not called by application code.</span></span>  
  
 <span data-ttu-id="f2c35-161">Ta metoda abstrakcyjna wykonuje obliczenia skrótu.</span><span class="sxs-lookup"><span data-stu-id="f2c35-161">This abstract method performs the hash computation.</span></span> <span data-ttu-id="f2c35-162">Każdy zapis w obiekcie strumienia kryptograficznego przekazuje dane za pomocą tej metody.</span><span class="sxs-lookup"><span data-stu-id="f2c35-162">Every write to the cryptographic stream object passes the data through this method.</span></span> <span data-ttu-id="f2c35-163">Dla każdego bloku danych ta metoda aktualizuje stan obiektu skrótu, aby na końcu strumienia danych zwracana była poprawna wartość skrótu.</span><span class="sxs-lookup"><span data-stu-id="f2c35-163">For each block of data, this method updates the state of the hash object so that a correct hash value is returned at the end of the data stream.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Cryptography.HashAlgorithm" />
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="f2c35-164">Usługi kryptograficzne</span><span class="sxs-lookup"><span data-stu-id="f2c35-164">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HashFinal">
      <MemberSignature Language="C#" Value="protected override byte[] HashFinal ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashFinal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.HashFinal" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashFinal () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashFinal();" />
      <MemberSignature Language="F#" Value="override this.HashFinal : unit -&gt; byte[]" Usage="hMAC.HashFinal " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f2c35-165">Gdy jest zastępowany w klasie pochodnej, kończy obliczenia skrótu po ostatnim przetwarzaniu danych przez obiekt strumienia kryptograficznego.</span><span class="sxs-lookup"><span data-stu-id="f2c35-165">When overridden in a derived class, finalizes the hash computation after the last data is processed by the cryptographic stream object.</span></span></summary>
        <returns><span data-ttu-id="f2c35-166">Obliczony kod skrótu w tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="f2c35-166">The computed hash code in a byte array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2c35-167">Ta metoda nie jest wywoływana przez kod aplikacji.</span><span class="sxs-lookup"><span data-stu-id="f2c35-167">This method is not called by application code.</span></span> <span data-ttu-id="f2c35-168">Ta metoda kończy wszelkie częściowe obliczenia i zwraca poprawną wartość skrótu strumienia danych.</span><span class="sxs-lookup"><span data-stu-id="f2c35-168">This method finalizes any partial computation and returns the correct hash value of the data stream.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="f2c35-169">Usługi kryptograficzne</span><span class="sxs-lookup"><span data-stu-id="f2c35-169">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HashName">
      <MemberSignature Language="C#" Value="public string HashName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HashName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HMAC.HashName" />
      <MemberSignature Language="VB.NET" Value="Public Property HashName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HashName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HashName : string with get, set" Usage="System.Security.Cryptography.HMAC.HashName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2c35-170">Pobiera lub ustawia nazwę algorytmu wyznaczania wartości skrótu, który ma być używany na potrzeby tworzenia skrótów.</span><span class="sxs-lookup"><span data-stu-id="f2c35-170">Gets or sets the name of the hash algorithm to use for hashing.</span></span></summary>
        <value><span data-ttu-id="f2c35-171">Nazwa algorytmu wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="f2c35-171">The name of the hash algorithm.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="f2c35-172">Nie można zmienić bieżącego algorytmu wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="f2c35-172">The current hash algorithm cannot be changed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize();" />
      <MemberSignature Language="F#" Value="override this.Initialize : unit -&gt; unit" Usage="hMAC.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f2c35-173">Inicjuje wystąpienie domyślnej implementacji <see cref="T:System.Security.Cryptography.HMAC" />.</span><span class="sxs-lookup"><span data-stu-id="f2c35-173">Initializes an instance of the default implementation of <see cref="T:System.Security.Cryptography.HMAC" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2c35-174">Przy użyciu kod uwierzytelniania wiadomości opartego na wykorzystaniu skrótu (HMAC) można określić, czy wiadomość wysłana za pośrednictwem niezabezpieczonego kanału została naruszona, pod warunkiem, że nadawca i odbiorca korzystają z klucza tajnego.</span><span class="sxs-lookup"><span data-stu-id="f2c35-174">A Hash-based Message Authentication Code (HMAC) can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</span></span> <span data-ttu-id="f2c35-175">Nadawca oblicza wartość skrótu dla oryginalnych danych i wysyła zarówno oryginalne dane, jak i HMAC jako jeden komunikat.</span><span class="sxs-lookup"><span data-stu-id="f2c35-175">The sender computes the hash value for the original data and sends both the original data and the HMAC as a single message.</span></span> <span data-ttu-id="f2c35-176">Odbiorca ponownie oblicza wartość skrótu dla odebranego komunikatu i sprawdza, czy obliczona wartość skrótu jest zgodna z przesłaną wartością skrótu.</span><span class="sxs-lookup"><span data-stu-id="f2c35-176">The receiver recomputes the hash value on the received message and checks that the computed hash value matches the transmitted hash value.</span></span>  
  
 <span data-ttu-id="f2c35-177">HMAC może być używany z każdą iteracyjną funkcją skrótu kryptograficznego, taką jak MD5 lub SHA-1, w połączeniu z kluczem udostępnionym tajny.</span><span class="sxs-lookup"><span data-stu-id="f2c35-177">HMAC can be used with any iterative cryptographic hash function, such as MD5 or SHA-1, in combination with a secret shared key.</span></span> <span data-ttu-id="f2c35-178">Kryptograficzna siła algorytmu HMAC zależy od właściwości bazowej funkcji skrótu.</span><span class="sxs-lookup"><span data-stu-id="f2c35-178">The cryptographic strength of HMAC depends on the properties of the underlying hash function.</span></span>  
  
 <span data-ttu-id="f2c35-179">Wszelkie zmiany danych lub wartości skrótu spowodują niezgodność, ponieważ informacje o kluczu tajnym są wymagane do zmiany komunikatu i odtworzenia poprawnej wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="f2c35-179">Any change to the data or the hash value will result in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct hash value.</span></span> <span data-ttu-id="f2c35-180">W związku z tym, jeśli oryginalne i obliczone wartości skrótu są zgodne, komunikat jest uwierzytelniany.</span><span class="sxs-lookup"><span data-stu-id="f2c35-180">Therefore, if the original and computed hash values match, the message is authenticated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public override byte[] Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Key" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HMAC.Key" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Key As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ Key { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Key : byte[] with get, set" Usage="System.Security.Cryptography.HMAC.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2c35-181">Pobiera lub ustawia klucz do użycia w algorytmie wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="f2c35-181">Gets or sets the key to use in the hash algorithm.</span></span></summary>
        <value><span data-ttu-id="f2c35-182">Klucz, który ma być używany w algorytmie wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="f2c35-182">The key to use in the hash algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2c35-183">Ta właściwość jest kluczem dla algorytmu wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="f2c35-183">This property is the key for the keyed hash algorithm.</span></span>  
  
 <span data-ttu-id="f2c35-184">Przy użyciu kod uwierzytelniania wiadomości opartego na wykorzystaniu skrótu (HMAC) można określić, czy wiadomość wysłana za pośrednictwem niezabezpieczonego kanału została naruszona, pod warunkiem, że nadawca i odbiorca korzystają z klucza tajnego.</span><span class="sxs-lookup"><span data-stu-id="f2c35-184">A Hash-based Message Authentication Code (HMAC) can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</span></span> <span data-ttu-id="f2c35-185">Nadawca oblicza wartość skrótu dla oryginalnych danych i wysyła zarówno oryginalne dane, jak i HMAC jako jeden komunikat.</span><span class="sxs-lookup"><span data-stu-id="f2c35-185">The sender computes the hash value for the original data and sends both the original data and the HMAC as a single message.</span></span> <span data-ttu-id="f2c35-186">Odbiorca ponownie oblicza wartość skrótu dla odebranego komunikatu i sprawdza, czy obliczona wartość skrótu jest zgodna z przesłaną wartością skrótu.</span><span class="sxs-lookup"><span data-stu-id="f2c35-186">The receiver recomputes the hash value on the received message and checks that the computed hash value matches the transmitted hash value.</span></span>  
  
 <span data-ttu-id="f2c35-187">HMAC może być używany z każdą iteracyjną funkcją skrótu kryptograficznego, taką jak MD5 lub SHA-1, w połączeniu z kluczem udostępnionym tajny.</span><span class="sxs-lookup"><span data-stu-id="f2c35-187">HMAC can be used with any iterative cryptographic hash function, such as MD5 or SHA-1, in combination with a secret shared key.</span></span> <span data-ttu-id="f2c35-188">Kryptograficzna siła algorytmu HMAC zależy od właściwości bazowej funkcji skrótu.</span><span class="sxs-lookup"><span data-stu-id="f2c35-188">The cryptographic strength of HMAC depends on the properties of the underlying hash function.</span></span>  
  
 <span data-ttu-id="f2c35-189">Wszelkie zmiany danych lub wartości skrótu wynoszą niezgodność, ponieważ znajomość klucza tajnego jest wymagana do zmiany komunikatu i odtworzenia poprawnej wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="f2c35-189">Any change to the data or the hash value results in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct hash value.</span></span> <span data-ttu-id="f2c35-190">W związku z tym, jeśli oryginalne i obliczone wartości skrótu są zgodne, komunikat jest uwierzytelniany.</span><span class="sxs-lookup"><span data-stu-id="f2c35-190">Therefore, if the original and computed hash values match, the message is authenticated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="f2c35-191">Podjęto próbę zmiany <see cref="P:System.Security.Cryptography.HMAC.Key" /> właściwości po rozpoczęciu mieszania.</span><span class="sxs-lookup"><span data-stu-id="f2c35-191">An attempt is made to change the <see cref="P:System.Security.Cryptography.HMAC.Key" /> property after hashing has begun.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="f2c35-192">Usługi kryptograficzne</span><span class="sxs-lookup"><span data-stu-id="f2c35-192">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryHashFinal">
      <MemberSignature Language="C#" Value="protected override bool TryHashFinal (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryHashFinal(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.TryHashFinal(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryHashFinal (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryHashFinal(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="override this.TryHashFinal : Span&lt;byte&gt; *  -&gt; bool" Usage="hMAC.TryHashFinal (destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
