<Type Name="AsymmetricSignatureDeformatter" FullName="System.Security.Cryptography.AsymmetricSignatureDeformatter">
  <TypeSignature Language="C#" Value="public abstract class AsymmetricSignatureDeformatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AsymmetricSignatureDeformatter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AsymmetricSignatureDeformatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsymmetricSignatureDeformatter abstract" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="20cb0-101">Reprezentuje abstrakcyjna klasa podstawowa, z którego pochodzi wszystkich implementacji deformatters podpisu asymetrycznego.</span><span class="sxs-lookup"><span data-stu-id="20cb0-101">Represents the abstract base class from which all implementations of asymmetric signature deformatters derive.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20cb0-102">Deformatters podpisu asymetrycznego sprawdzanie podpisów cyfrowych, które są tworzone przy użyciu implementacji <xref:System.Security.Cryptography.AsymmetricSignatureFormatter>.</span><span class="sxs-lookup"><span data-stu-id="20cb0-102">Asymmetric signature deformatters verify the digital signatures that are created using implementations of <xref:System.Security.Cryptography.AsymmetricSignatureFormatter>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AsymmetricSignatureDeformatter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AsymmetricSignatureDeformatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20cb0-103">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" />.</span><span class="sxs-lookup"><span data-stu-id="20cb0-103">Initializes a new instance of <see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20cb0-104">Nie można utworzyć wystąpienia klasy abstrakcyjnej.</span><span class="sxs-lookup"><span data-stu-id="20cb0-104">You cannot create an instance of an abstract class.</span></span> <span data-ttu-id="20cb0-105">Kod aplikacji utworzy nowe wystąpienie klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="20cb0-105">Application code will create a new instance of a derived class.</span></span>  
  
 <span data-ttu-id="20cb0-106">Użyj implementacje <xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey%2A> i <xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm%2A> można ustawić przed wywołaniem Implementacja algorytmu klucza i skrótu <xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A>.</span><span class="sxs-lookup"><span data-stu-id="20cb0-106">Use implementations of <xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey%2A> and <xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm%2A> to set the key and hash algorithm before calling an implementation of <xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHashAlgorithm">
      <MemberSignature Language="C#" Value="public abstract void SetHashAlgorithm (string strName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetHashAlgorithm(string strName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetHashAlgorithm (strName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetHashAlgorithm(System::String ^ strName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="strName"><span data-ttu-id="20cb0-107">Nazwa algorytmu wyznaczania wartości skrótu do użycia podczas weryfikowania podpisu.</span><span class="sxs-lookup"><span data-stu-id="20cb0-107">The name of the hash algorithm to use for verifying the signature.</span></span></param>
        <summary><span data-ttu-id="20cb0-108">W przypadku przesłonięcia w klasie pochodnej, ustawia algorytmu wyznaczania wartości skrótu do użycia podczas weryfikowania podpisu.</span><span class="sxs-lookup"><span data-stu-id="20cb0-108">When overridden in a derived class, sets the hash algorithm to use for verifying the signature.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20cb0-109">Należy ustawić przed wywołaniem implementację algorytmu wyznaczania wartości skrótu <xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A>.</span><span class="sxs-lookup"><span data-stu-id="20cb0-109">You must set a hash algorithm before calling an implementation of <xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetKey">
      <MemberSignature Language="C#" Value="public abstract void SetKey (System.Security.Cryptography.AsymmetricAlgorithm key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetKey(class System.Security.Cryptography.AsymmetricAlgorithm key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetKey (key As AsymmetricAlgorithm)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetKey(System::Security::Cryptography::AsymmetricAlgorithm ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="20cb0-110">Wystąpienie implementacji <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> przechowuje klucz publiczny.</span><span class="sxs-lookup"><span data-stu-id="20cb0-110">The instance of an implementation of <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> that holds the public key.</span></span></param>
        <summary><span data-ttu-id="20cb0-111">W przypadku przesłonięcia w klasie pochodnej, ustawia klucz publiczny do weryfikowania podpisu.</span><span class="sxs-lookup"><span data-stu-id="20cb0-111">When overridden in a derived class, sets the public key to use for verifying the signature.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20cb0-112">Klucz należy ustawić przed wywołaniem implementacja <xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A>.</span><span class="sxs-lookup"><span data-stu-id="20cb0-112">You must set a key before calling an implementation of <xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="VerifySignature">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="20cb0-113">Weryfikuje podpis.</span><span class="sxs-lookup"><span data-stu-id="20cb0-113">Verifies the signature.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="VerifySignature">
      <MemberSignature Language="C#" Value="public abstract bool VerifySignature (byte[] rgbHash, byte[] rgbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool VerifySignature(unsigned int8[] rgbHash, unsigned int8[] rgbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function VerifySignature (rgbHash As Byte(), rgbSignature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool VerifySignature(cli::array &lt;System::Byte&gt; ^ rgbHash, cli::array &lt;System::Byte&gt; ^ rgbSignature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbHash" Type="System.Byte[]" />
        <Parameter Name="rgbSignature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbHash"><span data-ttu-id="20cb0-114">Podpisane dane z <c>rgbSignature</c>.</span><span class="sxs-lookup"><span data-stu-id="20cb0-114">The data signed with <c>rgbSignature</c>.</span></span></param>
        <param name="rgbSignature"><span data-ttu-id="20cb0-115">Można zweryfikować podpisu <c>rgbHash</c>.</span><span class="sxs-lookup"><span data-stu-id="20cb0-115">The signature to be verified for <c>rgbHash</c>.</span></span></param>
        <summary><span data-ttu-id="20cb0-116">W przypadku przesłonięcia w klasie pochodnej weryfikuje podpis dla określonych danych.</span><span class="sxs-lookup"><span data-stu-id="20cb0-116">When overridden in a derived class, verifies the signature for the specified data.</span></span></summary>
        <returns>
          <span data-ttu-id="20cb0-117"><see langword="true" /> Jeśli <paramref name="rgbSignature" /> zgodny z podpisem obliczonym przy użyciu algorytmu wyznaczania wartości skrótu określonej i klucz na <paramref name="rgbHash" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="20cb0-117"><see langword="true" /> if <paramref name="rgbSignature" /> matches the signature computed using the specified hash algorithm and key on <paramref name="rgbHash" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20cb0-118">Przed wywołaniem tej metody należy określić klucz publiczny i algorytm wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="20cb0-118">You must specify a public key and a hash algorithm before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifySignature">
      <MemberSignature Language="C#" Value="public virtual bool VerifySignature (System.Security.Cryptography.HashAlgorithm hash, byte[] rgbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool VerifySignature(class System.Security.Cryptography.HashAlgorithm hash, unsigned int8[] rgbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Security.Cryptography.HashAlgorithm,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VerifySignature (hash As HashAlgorithm, rgbSignature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool VerifySignature(System::Security::Cryptography::HashAlgorithm ^ hash, cli::array &lt;System::Byte&gt; ^ rgbSignature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.Security.Cryptography.HashAlgorithm" />
        <Parameter Name="rgbSignature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="hash"><span data-ttu-id="20cb0-119">Algorytm wyznaczania wartości skrótu do weryfikowania podpisu.</span><span class="sxs-lookup"><span data-stu-id="20cb0-119">The hash algorithm to use to verify the signature.</span></span></param>
        <param name="rgbSignature"><span data-ttu-id="20cb0-120">Weryfikowanie podpisu.</span><span class="sxs-lookup"><span data-stu-id="20cb0-120">The signature to be verified.</span></span></param>
        <summary><span data-ttu-id="20cb0-121">Weryfikuje podpis z wartości skrótu określonej.</span><span class="sxs-lookup"><span data-stu-id="20cb0-121">Verifies the signature from the specified hash value.</span></span></summary>
        <returns>
          <span data-ttu-id="20cb0-122"><see langword="true" /> Jeśli podpis jest nieprawidłowy dla skrótu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="20cb0-122"><see langword="true" /> if the signature is valid for the hash; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20cb0-123">Ta metoda określa algorytm wyznaczania wartości skrótu do użycia przed zweryfikowaniem podpis wejściowy algorytm mieszania.</span><span class="sxs-lookup"><span data-stu-id="20cb0-123">This method sets the hash algorithm to be used before verifying the signature of the input hash algorithm value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="20cb0-124"><paramref name="hash" /> Parametr jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="20cb0-124">The <paramref name="hash" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>