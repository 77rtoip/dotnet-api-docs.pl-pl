<Type Name="CspKeyContainerInfo" FullName="System.Security.Cryptography.CspKeyContainerInfo">
  <TypeSignature Language="C#" Value="public sealed class CspKeyContainerInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CspKeyContainerInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.CspKeyContainerInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CspKeyContainerInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class CspKeyContainerInfo sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d04eb-101">Zawiera dodatkowe informacje na temat klucza kryptograficznego.</span><span class="sxs-lookup"><span data-stu-id="d04eb-101">Provides additional information about a cryptographic key pair.</span></span> <span data-ttu-id="d04eb-102">Klasa ta nie może być dziedziczona.</span><span class="sxs-lookup"><span data-stu-id="d04eb-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d04eb-103">Aby uzyskać dodatkowe informacje na temat parę kluczy, takich jak nazwa kontenera kluczy lub kluczy numer, należy użyć tej klasy.</span><span class="sxs-lookup"><span data-stu-id="d04eb-103">Use this class to obtain additional information about a key pair, such as the key container name or the key number.</span></span>  
  
 <span data-ttu-id="d04eb-104">W przypadkach, gdy losowy klucz został wygenerowany przez <xref:System.Security.Cryptography.RSACryptoServiceProvider> lub <xref:System.Security.Cryptography.DSACryptoServiceProvider>, kontener kluczy nie zostanie utworzony, do czasu wywołania metody, która używa klucza.</span><span class="sxs-lookup"><span data-stu-id="d04eb-104">In cases where a random key is generated by the <xref:System.Security.Cryptography.RSACryptoServiceProvider> or the <xref:System.Security.Cryptography.DSACryptoServiceProvider>, a key container will not be created until you call a method that uses the key.</span></span>  <span data-ttu-id="d04eb-105">Niektóre właściwości <xref:System.Security.Cryptography.CspKeyContainerInfo> zgłosi klasy <xref:System.Security.Cryptography.CryptographicException> , gdy kontener kluczy nie została utworzona.</span><span class="sxs-lookup"><span data-stu-id="d04eb-105">Some properties of the <xref:System.Security.Cryptography.CspKeyContainerInfo> class will throw a <xref:System.Security.Cryptography.CryptographicException> if a key container has not been created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d04eb-106">Poniższy przykład kodu tworzy kontener kluczy i pobiera informacje o danym kontenerze.</span><span class="sxs-lookup"><span data-stu-id="d04eb-106">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspKeyContainerInfo (System.Security.Cryptography.CspParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.CspParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspKeyContainerInfo.#ctor(System.Security.Cryptography.CspParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameters As CspParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspKeyContainerInfo(System::Security::Cryptography::CspParameters ^ parameters);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.CspParameters" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="d04eb-107">A <see cref="T:System.Security.Cryptography.CspParameters" /> obiekt, który zawiera informacje o kluczu.</span><span class="sxs-lookup"><span data-stu-id="d04eb-107">A <see cref="T:System.Security.Cryptography.CspParameters" /> object that provides information about the key.</span></span></param>
        <summary><span data-ttu-id="d04eb-108">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> przy użyciu określonych parametrów.</span><span class="sxs-lookup"><span data-stu-id="d04eb-108">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> class using the specified parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d04eb-109">Poniższy przykład kodu tworzy kontener kluczy i pobiera informacje o danym kontenerze.</span><span class="sxs-lookup"><span data-stu-id="d04eb-109">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessible">
      <MemberSignature Language="C#" Value="public bool Accessible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Accessible" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.Accessible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Accessible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Accessible { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d04eb-110">Pobiera wartość wskazującą, czy klucz w kontenerze kluczy jest niedostępny.</span><span class="sxs-lookup"><span data-stu-id="d04eb-110">Gets a value indicating whether a key in a key container is accessible.</span></span></summary>
        <value>
          <span data-ttu-id="d04eb-111"><see langword="true" /> Jeśli klucz jest dostępny; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d04eb-111"><see langword="true" /> if the key is accessible; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d04eb-112">Poniższy przykład kodu tworzy kontener kluczy i pobiera informacje o danym kontenerze.</span><span class="sxs-lookup"><span data-stu-id="d04eb-112">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d04eb-113">Typ klucza nie jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="d04eb-113">The key type is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CryptoKeySecurity">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.CryptoKeySecurity CryptoKeySecurity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.AccessControl.CryptoKeySecurity CryptoKeySecurity" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.CryptoKeySecurity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CryptoKeySecurity As CryptoKeySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::CryptoKeySecurity ^ CryptoKeySecurity { System::Security::AccessControl::CryptoKeySecurity ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.CryptoKeySecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d04eb-114">Pobiera <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> czy reprezentuje prawa dostępu i inspekcji reguły dla kontenera obiektów.</span><span class="sxs-lookup"><span data-stu-id="d04eb-114">Gets a <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> object that represents access rights and audit rules for a container.</span></span></summary>
        <value><span data-ttu-id="d04eb-115">A <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> czy reprezentuje prawa dostępu i inspekcji reguły dla kontenera obiektów.</span><span class="sxs-lookup"><span data-stu-id="d04eb-115">A <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> object that represents access rights and audit rules for a container.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d04eb-116">Użyj <xref:System.Security.Cryptography.CspKeyContainerInfo> właściwości do pobrania <xref:System.Security.AccessControl.CryptoKeySecurity> listy obiekt, który zarządza tworzeniem kontroli dostępu (DACL) i systemowe listy kontroli dostępu (SACL) dla kontenera.</span><span class="sxs-lookup"><span data-stu-id="d04eb-116">Use the <xref:System.Security.Cryptography.CspKeyContainerInfo> property to retrieve the  <xref:System.Security.AccessControl.CryptoKeySecurity> object that manages the creation of discretionary access control lists (DACLS) and system access control lists (SACLS) for a container.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="d04eb-117">Typ klucza nie jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="d04eb-117">The key type is not supported.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d04eb-118">Nie można odnaleźć dostawcy usług kryptograficznych.</span><span class="sxs-lookup"><span data-stu-id="d04eb-118">The cryptographic service provider cannot be found.</span></span>  
  
 <span data-ttu-id="d04eb-119">—lub—</span><span class="sxs-lookup"><span data-stu-id="d04eb-119">-or-</span></span>  
  
 <span data-ttu-id="d04eb-120">Nie znaleziono kontenera kluczy.</span><span class="sxs-lookup"><span data-stu-id="d04eb-120">The key container was not found.</span></span></exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection"><span data-ttu-id="d04eb-121">w przypadku zmiany i wyświetlanie dostępu kontroli listy skojarzonej z tym kontenerem klucza.</span><span class="sxs-lookup"><span data-stu-id="d04eb-121">for  changing and viewing the access control list associated with this key container.</span></span>  
  
 <span data-ttu-id="d04eb-122">Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="d04eb-122">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span>  
  
 <span data-ttu-id="d04eb-123">Skojarzone wyliczenia: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.ChangeAcl" />, <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.ViewAcl" />.</span><span class="sxs-lookup"><span data-stu-id="d04eb-123">Associated enumerations: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.ChangeAcl" />, <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.ViewAcl" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Exportable">
      <MemberSignature Language="C#" Value="public bool Exportable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Exportable" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.Exportable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exportable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Exportable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d04eb-124">Pobiera wartość wskazującą, czy klucz można eksportować z kontenera kluczy.</span><span class="sxs-lookup"><span data-stu-id="d04eb-124">Gets a value indicating whether a key can be exported from a key container.</span></span></summary>
        <value>
          <span data-ttu-id="d04eb-125"><see langword="true" /> Jeśli można wyeksportować klucza; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d04eb-125"><see langword="true" /> if the key can be exported; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d04eb-126">Poniższy przykład kodu tworzy kontener kluczy i pobiera informacje o danym kontenerze.</span><span class="sxs-lookup"><span data-stu-id="d04eb-126">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d04eb-127">Typ klucza nie jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="d04eb-127">The key type is not supported.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="d04eb-128">Nie można odnaleźć dostawcy usług kryptograficznych.</span><span class="sxs-lookup"><span data-stu-id="d04eb-128">The cryptographic service provider cannot be found.</span></span>  
  
 <span data-ttu-id="d04eb-129">—lub—</span><span class="sxs-lookup"><span data-stu-id="d04eb-129">-or-</span></span>  
  
 <span data-ttu-id="d04eb-130">Nie znaleziono kontenera kluczy.</span><span class="sxs-lookup"><span data-stu-id="d04eb-130">The key container was not found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HardwareDevice">
      <MemberSignature Language="C#" Value="public bool HardwareDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HardwareDevice" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.HardwareDevice" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HardwareDevice As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HardwareDevice { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d04eb-131">Pobiera wartość wskazującą, czy klucz jest kluczem sprzętu.</span><span class="sxs-lookup"><span data-stu-id="d04eb-131">Gets a value indicating whether a key is a hardware key.</span></span></summary>
        <value>
          <span data-ttu-id="d04eb-132"><see langword="true" /> Jeśli klucz jest kluczem sprzętu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d04eb-132"><see langword="true" /> if the key is a hardware key; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d04eb-133">Poniższy przykład kodu tworzy kontener kluczy i pobiera informacje o danym kontenerze.</span><span class="sxs-lookup"><span data-stu-id="d04eb-133">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="d04eb-134">Nie można odnaleźć dostawcy usług kryptograficznych.</span><span class="sxs-lookup"><span data-stu-id="d04eb-134">The cryptographic service provider cannot be found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="KeyContainerName">
      <MemberSignature Language="C#" Value="public string KeyContainerName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyContainerName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.KeyContainerName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyContainerName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ KeyContainerName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d04eb-135">Pobiera nazwę kontenera kluczy.</span><span class="sxs-lookup"><span data-stu-id="d04eb-135">Gets a key container name.</span></span></summary>
        <value><span data-ttu-id="d04eb-136">Nazwa kontenera kluczy.</span><span class="sxs-lookup"><span data-stu-id="d04eb-136">The key container name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d04eb-137">Poniższy przykład kodu tworzy kontener kluczy i pobiera informacje o danym kontenerze.</span><span class="sxs-lookup"><span data-stu-id="d04eb-137">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyNumber">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.KeyNumber KeyNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.KeyNumber KeyNumber" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyNumber As KeyNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::KeyNumber KeyNumber { System::Security::Cryptography::KeyNumber get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeyNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d04eb-138">Pobiera wartość, która opisuje, czy klucz asymetryczny został utworzony jako klucz podpisu lub wymiany klucza.</span><span class="sxs-lookup"><span data-stu-id="d04eb-138">Gets a value that describes whether an asymmetric key was created as a signature key or an exchange key.</span></span></summary>
        <value><span data-ttu-id="d04eb-139">Jeden z <see cref="T:System.Security.Cryptography.KeyNumber" /> wartości, które opisano, czy klucz asymetryczny został utworzony jako klucz podpisu lub wymiany klucza.</span><span class="sxs-lookup"><span data-stu-id="d04eb-139">One of the <see cref="T:System.Security.Cryptography.KeyNumber" /> values that describes whether an asymmetric key was created as a signature key or an exchange key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d04eb-140">Wartość <xref:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber%2A> właściwości jest pochodną <xref:System.Security.Cryptography.CspParameters.KeyNumber> pole <xref:System.Security.Cryptography.CspParameters> obiekt, który został użyty do zainicjowania <xref:System.Security.Cryptography.CspKeyContainerInfo> obiektu.</span><span class="sxs-lookup"><span data-stu-id="d04eb-140">The value of the <xref:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber%2A> property is derived from the <xref:System.Security.Cryptography.CspParameters.KeyNumber> field of the <xref:System.Security.Cryptography.CspParameters> object that was used to initialize the <xref:System.Security.Cryptography.CspKeyContainerInfo> object.</span></span>  
  
 <span data-ttu-id="d04eb-141">Klucz wymiany jest para kluczy asymetrycznych używany do szyfrowania kluczy sesji, dzięki czemu można je bezpiecznie przechowywane i wymieniane z innymi użytkownikami.</span><span class="sxs-lookup"><span data-stu-id="d04eb-141">An exchange key is an asymmetric key pair used to encrypt session keys so that they can be safely stored and exchanged with other users.</span></span>  <span data-ttu-id="d04eb-142"><xref:System.Security.Cryptography.KeyNumber.Exchange> Wartość określa klucz wymiany.</span><span class="sxs-lookup"><span data-stu-id="d04eb-142">The <xref:System.Security.Cryptography.KeyNumber.Exchange> value specifies an exchange key.</span></span>  <span data-ttu-id="d04eb-143">Ta wartość odpowiada `AT_KEYEXCHANGE` wartość używana w niezarządzanych Microsoft kryptograficznego interfejsu API (CAPI).</span><span class="sxs-lookup"><span data-stu-id="d04eb-143">This value corresponds to the `AT_KEYEXCHANGE` value used in the unmanaged Microsoft Cryptographic API (CAPI).</span></span>  
  
 <span data-ttu-id="d04eb-144">Klucz podpisu jest para kluczy asymetrycznych używany do uwierzytelniania wiadomości (podpisanych cyfrowo) lub plików.</span><span class="sxs-lookup"><span data-stu-id="d04eb-144">A signature key is an asymmetric key pair used for authenticating (digitally signed) messages or files.</span></span>  <span data-ttu-id="d04eb-145"><xref:System.Security.Cryptography.KeyNumber.Signature> Wartość określa klucz podpisu.</span><span class="sxs-lookup"><span data-stu-id="d04eb-145">The <xref:System.Security.Cryptography.KeyNumber.Signature> value specifies a signature key.</span></span>  <span data-ttu-id="d04eb-146">Ta wartość odpowiada `AT_SIGNATURE` wartość używana w CAPI.</span><span class="sxs-lookup"><span data-stu-id="d04eb-146">This value corresponds to the `AT_SIGNATURE` value used in CAPI.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d04eb-147">Poniższy przykład kodu tworzy kontener kluczy i pobiera informacje o danym kontenerze.</span><span class="sxs-lookup"><span data-stu-id="d04eb-147">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MachineKeyStore">
      <MemberSignature Language="C#" Value="public bool MachineKeyStore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MachineKeyStore" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.MachineKeyStore" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MachineKeyStore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MachineKeyStore { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d04eb-148">Pobiera wartość wskazującą, czy klucz z klucz komputera ustawiono.</span><span class="sxs-lookup"><span data-stu-id="d04eb-148">Gets a value indicating whether a key is from a machine key set.</span></span></summary>
        <value>
          <span data-ttu-id="d04eb-149"><see langword="true" /> Jeśli klucz jest od zestawu kluczy komputera; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d04eb-149"><see langword="true" /> if the key is from the machine key set; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d04eb-150">Poniższy przykład kodu tworzy kontener kluczy i pobiera informacje o danym kontenerze.</span><span class="sxs-lookup"><span data-stu-id="d04eb-150">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Protected">
      <MemberSignature Language="C#" Value="public bool Protected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Protected" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.Protected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Protected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Protected { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d04eb-151">Pobiera wartość wskazującą, czy chroniony jest parą kluczy.</span><span class="sxs-lookup"><span data-stu-id="d04eb-151">Gets a value indicating whether a key pair is protected.</span></span></summary>
        <value>
          <span data-ttu-id="d04eb-152"><see langword="true" /> Jeśli pary kluczy są chronione. w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d04eb-152"><see langword="true" /> if the key pair is protected; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d04eb-153">Poniższy przykład kodu tworzy kontener kluczy i pobiera informacje o danym kontenerze.</span><span class="sxs-lookup"><span data-stu-id="d04eb-153">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d04eb-154">Typ klucza nie jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="d04eb-154">The key type is not supported.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="d04eb-155">Nie można odnaleźć dostawcy usług kryptograficznych.</span><span class="sxs-lookup"><span data-stu-id="d04eb-155">The cryptographic service provider cannot be found.</span></span>  
  
 <span data-ttu-id="d04eb-156">—lub—</span><span class="sxs-lookup"><span data-stu-id="d04eb-156">-or-</span></span>  
  
 <span data-ttu-id="d04eb-157">Nie znaleziono kontenera kluczy.</span><span class="sxs-lookup"><span data-stu-id="d04eb-157">The key container was not found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public string ProviderName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProviderName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d04eb-158">Pobiera nazwę dostawcy klucza.</span><span class="sxs-lookup"><span data-stu-id="d04eb-158">Gets the provider name of a key.</span></span></summary>
        <value><span data-ttu-id="d04eb-159">Nazwa dostawcy.</span><span class="sxs-lookup"><span data-stu-id="d04eb-159">The provider name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d04eb-160">Ta właściwość określa utworzony klucz dostawcy usług kryptograficznych.</span><span class="sxs-lookup"><span data-stu-id="d04eb-160">This property specifies the cryptographic service provider that created the key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d04eb-161">Poniższy przykład kodu tworzy kontener kluczy i pobiera informacje o danym kontenerze.</span><span class="sxs-lookup"><span data-stu-id="d04eb-161">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderType">
      <MemberSignature Language="C#" Value="public int ProviderType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProviderType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.ProviderType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderType As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProviderType { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d04eb-162">Pobiera typ dostawcy klucza.</span><span class="sxs-lookup"><span data-stu-id="d04eb-162">Gets the provider type of a key.</span></span></summary>
        <value><span data-ttu-id="d04eb-163">Typ dostawcy.</span><span class="sxs-lookup"><span data-stu-id="d04eb-163">The provider type.</span></span> <span data-ttu-id="d04eb-164">Domyślnym ustawieniem jest 1.</span><span class="sxs-lookup"><span data-stu-id="d04eb-164">The default is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d04eb-165">Prawidłowe wartości są określane przez dostawcę usług kryptograficznych, używany do tworzenia klucza.</span><span class="sxs-lookup"><span data-stu-id="d04eb-165">Valid values are determined by the cryptographic service provider used to create the key.</span></span> <span data-ttu-id="d04eb-166">Dostawcy usług kryptograficznych zazwyczaj są zorganizowane w grupy lub rodzin, z których każdy ma własny zestaw formatów danych i procesów.</span><span class="sxs-lookup"><span data-stu-id="d04eb-166">Cryptographic service providers are generally organized into groups or families, each of which has its own set of data formats and processes.</span></span> <span data-ttu-id="d04eb-167">Dwie grupy, które używają tego samego algorytmu, takich jak szyfry blokowe RC2, często używają dopełnienie różnych systemów, różne długości kluczy i tryby różne domyślne.</span><span class="sxs-lookup"><span data-stu-id="d04eb-167">Two families that use the same algorithm, such as the RC2 block cipher, often use different padding schemes, different key lengths, and different default modes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d04eb-168">Poniższy przykład kodu tworzy kontener kluczy i pobiera informacje o danym kontenerze.</span><span class="sxs-lookup"><span data-stu-id="d04eb-168">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RandomlyGenerated">
      <MemberSignature Language="C#" Value="public bool RandomlyGenerated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RandomlyGenerated" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.RandomlyGenerated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RandomlyGenerated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RandomlyGenerated { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d04eb-169">Pobiera wartość wskazującą, czy kontener kluczy losowo został wygenerowany przez klasę zarządzanych kryptografii.</span><span class="sxs-lookup"><span data-stu-id="d04eb-169">Gets a value indicating whether a key container was randomly generated by a managed cryptography class.</span></span></summary>
        <value>
          <span data-ttu-id="d04eb-170"><see langword="true" /> Jeśli kontener kluczy losowo został wygenerowany; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d04eb-170"><see langword="true" /> if the key container was randomly generated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d04eb-171">Zwykle, gdy tworzony jest losowo wygenerowany klucz kontenera, kontener kluczy nosi nazwę "CLR {`guid value`}."</span><span class="sxs-lookup"><span data-stu-id="d04eb-171">Usually, when a randomly generated key container is created, the key container is named "CLR{`guid value`}."</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d04eb-172">Poniższy przykład kodu tworzy kontener kluczy i pobiera informacje o danym kontenerze.</span><span class="sxs-lookup"><span data-stu-id="d04eb-172">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Removable">
      <MemberSignature Language="C#" Value="public bool Removable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Removable" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.Removable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Removable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Removable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d04eb-173">Pobiera wartość wskazującą, czy klucz może być usunięty z kontenera kluczy.</span><span class="sxs-lookup"><span data-stu-id="d04eb-173">Gets a value indicating whether a key can be removed from a key container.</span></span></summary>
        <value>
          <span data-ttu-id="d04eb-174"><see langword="true" /> Jeśli klucz jest wymienny; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d04eb-174"><see langword="true" /> if the key is removable; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d04eb-175">Poniższy przykład kodu tworzy kontener kluczy i pobiera informacje o danym kontenerze.</span><span class="sxs-lookup"><span data-stu-id="d04eb-175">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="d04eb-176">Nie znaleziono dostawcy usług kryptograficznych (CSP).</span><span class="sxs-lookup"><span data-stu-id="d04eb-176">The cryptographic service provider (CSP) was not found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UniqueKeyContainerName">
      <MemberSignature Language="C#" Value="public string UniqueKeyContainerName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueKeyContainerName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.UniqueKeyContainerName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UniqueKeyContainerName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UniqueKeyContainerName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d04eb-177">Pobiera nazwę kontenera unikatowy kluczy.</span><span class="sxs-lookup"><span data-stu-id="d04eb-177">Gets a unique key container name.</span></span></summary>
        <value><span data-ttu-id="d04eb-178">Nazwa kontenera unikatowy kluczy.</span><span class="sxs-lookup"><span data-stu-id="d04eb-178">The unique key container name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d04eb-179">Poniższy przykład kodu tworzy kontener kluczy i pobiera informacje o danym kontenerze.</span><span class="sxs-lookup"><span data-stu-id="d04eb-179">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d04eb-180">Typ klucza nie jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="d04eb-180">The key type is not supported.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="d04eb-181">Nie można odnaleźć dostawcy usług kryptograficznych.</span><span class="sxs-lookup"><span data-stu-id="d04eb-181">The cryptographic service provider cannot be found.</span></span>  
  
 <span data-ttu-id="d04eb-182">—lub—</span><span class="sxs-lookup"><span data-stu-id="d04eb-182">-or-</span></span>  
  
 <span data-ttu-id="d04eb-183">Nie znaleziono kontenera kluczy.</span><span class="sxs-lookup"><span data-stu-id="d04eb-183">The key container was not found.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>