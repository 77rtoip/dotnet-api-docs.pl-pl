<Type Name="PasswordDeriveBytes" FullName="System.Security.Cryptography.PasswordDeriveBytes">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="114473ac3aded1fedb136d53f48725f47b5ea62e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30570637" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PasswordDeriveBytes : System.Security.Cryptography.DeriveBytes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PasswordDeriveBytes extends System.Security.Cryptography.DeriveBytes" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.PasswordDeriveBytes" />
  <TypeSignature Language="VB.NET" Value="Public Class PasswordDeriveBytes&#xA;Inherits DeriveBytes" />
  <TypeSignature Language="C++ CLI" Value="public ref class PasswordDeriveBytes : System::Security::Cryptography::DeriveBytes" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.DeriveBytes</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4625c-101">Klucz jest pochodną hasła przy użyciu algorytmu PBKDF1 rozszerzenia.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4625c-101">Derives a key from a password using an extension of the PBKDF1 algorithm.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4625c-102">Ta klasa używa rozszerzenia algorytmu PBKDF1 zdefiniowanych w standardowej v2.0 PKCS nr 5 wyprowadzenia bajtów odpowiednie do użycia jako materiału klucza z hasła.</span><span class="sxs-lookup"><span data-stu-id="4625c-102">This class uses an extension of the PBKDF1 algorithm defined in the PKCS#5 v2.0 standard to derive bytes suitable for use as key material from a password.</span></span> <span data-ttu-id="4625c-103">Standardowe opisano w IETF 2898 kod przyczyny rejestracji.</span><span class="sxs-lookup"><span data-stu-id="4625c-103">The standard is documented in IETF RRC 2898.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4625c-104">Nigdy nie kodowane w hasła w kodzie źródłowym.</span><span class="sxs-lookup"><span data-stu-id="4625c-104">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="4625c-105">Zakodowany hasła mogą być pobierane z zestawu za pomocą [Ildasm.exe (dezasembler IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) narzędzie, Edytor szesnastkowych, lub po prostu otwarcie zestawu w edytorze tekstu, takich jak notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="4625c-105">Hard coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) tool, a hex editor, or by simply opening up the assembly in a text editor like notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4625c-106">Poniższy przykład kodu tworzy klucza z hasła przy użyciu <xref:System.Security.Cryptography.PasswordDeriveBytes> klasy.</span><span class="sxs-lookup"><span data-stu-id="4625c-106">The following code example creates a key from a password using the <xref:System.Security.Cryptography.PasswordDeriveBytes> class.</span></span>  
  
 [!code-cpp[Cryptography.PasswordDerivedbytes#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.PasswordDerivedbytes/cpp/sample.cpp#1)]
 [!code-csharp[Cryptography.PasswordDerivedbytes#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.PasswordDerivedbytes/CS/sample.cs#1)]
 [!code-vb[Cryptography.PasswordDerivedbytes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.PasswordDerivedbytes/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4625c-107">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-107">Initializes a new instance of the <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PasswordDeriveBytes (byte[] password, byte[] salt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] password, unsigned int8[] salt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As Byte(), salt As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PasswordDeriveBytes(cli::array &lt;System::Byte&gt; ^ password, cli::array &lt;System::Byte&gt; ^ salt);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.Byte[]" />
        <Parameter Name="salt" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="password">
          <span data-ttu-id="4625c-108">Hasło do uzyskania klucza dla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-108">The password to derive the key for.</span>
          </span>
        </param>
        <param name="salt">
          <span data-ttu-id="4625c-109">Soli klucza na potrzeby uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-109">The key salt to use to derive the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4625c-110">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> klasy określanie hasła i soli klucza na potrzeby uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-110">Initializes a new instance of the <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> class specifying the password and key salt to use to derive the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="4625c-111">Kodu nigdy nie silne hasło w kodzie źródłowym.</span><span class="sxs-lookup"><span data-stu-id="4625c-111">Never hard code a password within your source code.</span></span>  <span data-ttu-id="4625c-112">Ustalony hasła mogą być pobierane z zestawu za pomocą [Ildasm.exe (dezasembler IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), Edytor szesnastkowych, lub po prostu otwarcie zestawu w edytorze tekstu, takich jak Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="4625c-112">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4625c-113">Poniższy przykład kodu tworzy klucza z hasła przy użyciu <xref:System.Security.Cryptography.PasswordDeriveBytes> klasy.</span><span class="sxs-lookup"><span data-stu-id="4625c-113">The following code example creates a key from a password using the <xref:System.Security.Cryptography.PasswordDeriveBytes> class.</span></span>  
  
 [!code-cpp[Cryptography.PasswordDerivedbytes#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.PasswordDerivedbytes/cpp/sample.cpp#1)]
 [!code-csharp[Cryptography.PasswordDerivedbytes#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.PasswordDerivedbytes/CS/sample.cs#1)]
 [!code-vb[Cryptography.PasswordDerivedbytes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.PasswordDerivedbytes/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PasswordDeriveBytes (string strPassword, byte[] rgbSalt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string strPassword, unsigned int8[] rgbSalt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (strPassword As String, rgbSalt As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PasswordDeriveBytes(System::String ^ strPassword, cli::array &lt;System::Byte&gt; ^ rgbSalt);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="strPassword" Type="System.String" />
        <Parameter Name="rgbSalt" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="strPassword">
          <span data-ttu-id="4625c-114">Hasło do uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-114">The password for which to derive the key.</span>
          </span>
        </param>
        <param name="rgbSalt">
          <span data-ttu-id="4625c-115">Soli klucza na potrzeby uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-115">The key salt to use to derive the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4625c-116">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> z hasła i soli klucza na potrzeby uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-116">Initializes a new instance of the <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> class with the password and key salt to use to derive the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="4625c-117">Nigdy nie kodowane w hasła w kodzie źródłowym.</span><span class="sxs-lookup"><span data-stu-id="4625c-117">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="4625c-118">Zakodowany hasła mogą być pobierane z zestawu za pomocą [Ildasm.exe (dezasembler IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) narzędzie, Edytor szesnastkowych, lub po prostu otwarcie zestawu w edytorze tekstu, takich jak notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="4625c-118">Hard coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) tool, a hex editor, or by simply opening up the assembly in a text editor like notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PasswordDeriveBytes (byte[] password, byte[] salt, System.Security.Cryptography.CspParameters cspParams);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] password, unsigned int8[] salt, class System.Security.Cryptography.CspParameters cspParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.Security.Cryptography.CspParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As Byte(), salt As Byte(), cspParams As CspParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PasswordDeriveBytes(cli::array &lt;System::Byte&gt; ^ password, cli::array &lt;System::Byte&gt; ^ salt, System::Security::Cryptography::CspParameters ^ cspParams);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.Byte[]" />
        <Parameter Name="salt" Type="System.Byte[]" />
        <Parameter Name="cspParams" Type="System.Security.Cryptography.CspParameters" />
      </Parameters>
      <Docs>
        <param name="password">
          <span data-ttu-id="4625c-119">Hasło do uzyskania klucza dla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-119">The password to derive the key for.</span>
          </span>
        </param>
        <param name="salt">
          <span data-ttu-id="4625c-120">Soli klucza na potrzeby uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-120">The key salt to use to derive the key.</span>
          </span>
        </param>
        <param name="cspParams">
          <span data-ttu-id="4625c-121">Parametry dostawcę usług kryptograficznych dla tej operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-121">The cryptographic service provider (CSP) parameters for the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4625c-122">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> klasy określenie hasła, soli klucza i dostawcy usług kryptograficznych (CSP) na potrzeby uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-122">Initializes a new instance of the <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> class specifying the password, key salt, and cryptographic service provider (CSP) to use to derive the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="4625c-123">Kodu nigdy nie silne hasło w kodzie źródłowym.</span><span class="sxs-lookup"><span data-stu-id="4625c-123">Never hard code a password within your source code.</span></span>  <span data-ttu-id="4625c-124">Ustalony hasła mogą być pobierane z zestawu za pomocą [Ildasm.exe (dezasembler IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) l, Edytor szesnastkowych, lub po prostu otwarcie zestawu w edytorze tekstu, takich jak Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="4625c-124">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) l, a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4625c-125">Poniższy przykład kodu tworzy klucza z hasła przy użyciu <xref:System.Security.Cryptography.PasswordDeriveBytes> klasy.</span><span class="sxs-lookup"><span data-stu-id="4625c-125">The following code example creates a key from a password using the <xref:System.Security.Cryptography.PasswordDeriveBytes> class.</span></span>  
  
 [!code-cpp[Cryptography.PasswordDerivedbytes#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.PasswordDerivedbytes/cpp/sample.cpp#1)]
 [!code-csharp[Cryptography.PasswordDerivedbytes#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.PasswordDerivedbytes/CS/sample.cs#1)]
 [!code-vb[Cryptography.PasswordDerivedbytes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.PasswordDerivedbytes/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PasswordDeriveBytes (string strPassword, byte[] rgbSalt, System.Security.Cryptography.CspParameters cspParams);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string strPassword, unsigned int8[] rgbSalt, class System.Security.Cryptography.CspParameters cspParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.Security.Cryptography.CspParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (strPassword As String, rgbSalt As Byte(), cspParams As CspParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PasswordDeriveBytes(System::String ^ strPassword, cli::array &lt;System::Byte&gt; ^ rgbSalt, System::Security::Cryptography::CspParameters ^ cspParams);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="strPassword" Type="System.String" />
        <Parameter Name="rgbSalt" Type="System.Byte[]" />
        <Parameter Name="cspParams" Type="System.Security.Cryptography.CspParameters" />
      </Parameters>
      <Docs>
        <param name="strPassword">
          <span data-ttu-id="4625c-126">Hasło do uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-126">The password for which to derive the key.</span>
          </span>
        </param>
        <param name="rgbSalt">
          <span data-ttu-id="4625c-127">Soli klucza na potrzeby uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-127">The key salt to use to derive the key.</span>
          </span>
        </param>
        <param name="cspParams">
          <span data-ttu-id="4625c-128">Parametry dostawcy usług Kryptograficznych dla tej operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-128">The CSP parameters for the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4625c-129">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> z haseł, kluczy soli i usług kryptograficznych (CSP) dostawcy parametry używane do uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-129">Initializes a new instance of the <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> class with the password, key salt, and cryptographic service provider (CSP) parameters to use to derive the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="4625c-130">Nigdy nie kodowane w hasła w kodzie źródłowym.</span><span class="sxs-lookup"><span data-stu-id="4625c-130">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="4625c-131">Zakodowany hasła mogą być pobierane z zestawu za pomocą [Ildasm.exe (dezasembler IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) narzędzie, Edytor szesnastkowych, lub po prostu otwarcie zestawu w edytorze tekstu, takich jak notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="4625c-131">Hard coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) tool, a hex editor, or by simply opening up the assembly in a text editor like notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PasswordDeriveBytes (byte[] password, byte[] salt, string hashName, int iterations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] password, unsigned int8[] salt, string hashName, int32 iterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As Byte(), salt As Byte(), hashName As String, iterations As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PasswordDeriveBytes(cli::array &lt;System::Byte&gt; ^ password, cli::array &lt;System::Byte&gt; ^ salt, System::String ^ hashName, int iterations);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.Byte[]" />
        <Parameter Name="salt" Type="System.Byte[]" />
        <Parameter Name="hashName" Type="System.String" />
        <Parameter Name="iterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password">
          <span data-ttu-id="4625c-132">Hasło do uzyskania klucza dla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-132">The password to derive the key for.</span>
          </span>
        </param>
        <param name="salt">
          <span data-ttu-id="4625c-133">Soli klucza na potrzeby uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-133">The key salt to use to derive the key.</span>
          </span>
        </param>
        <param name="hashName">
          <span data-ttu-id="4625c-134">Algorytm wyznaczania wartości skrótu do użycia do uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-134">The hash algorithm to use to derive the key.</span>
          </span>
        </param>
        <param name="iterations">
          <span data-ttu-id="4625c-135">Liczba iteracji, służące do uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-135">The iteration count to use to derive the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4625c-136">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> klasy określenie hasła, soli klucza, Nazwa skrótu i iteracji, aby użyć do uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-136">Initializes a new instance of the <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> class specifying the password, key salt, hash name, and iterations to use to derive the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="4625c-137">Kodu nigdy nie silne hasło w kodzie źródłowym.</span><span class="sxs-lookup"><span data-stu-id="4625c-137">Never hard code a password within your source code.</span></span>  <span data-ttu-id="4625c-138">Ustalony hasła mogą być pobierane z zestawu za pomocą [Ildasm.exe (dezasembler IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), Edytor szesnastkowych, lub po prostu otwarcie zestawu w edytorze tekstu, takich jak Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="4625c-138">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="4625c-139">Aby uzyskać listę nazw algorytmu wyznaczania wartości skrótu, zobacz <xref:System.Security.Cryptography.CryptoConfig> klasy.</span><span class="sxs-lookup"><span data-stu-id="4625c-139">For a list of hash algorithm names, see the <xref:System.Security.Cryptography.CryptoConfig> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Cryptography.CryptoConfig" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PasswordDeriveBytes (string strPassword, byte[] rgbSalt, string strHashName, int iterations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string strPassword, unsigned int8[] rgbSalt, string strHashName, int32 iterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (strPassword As String, rgbSalt As Byte(), strHashName As String, iterations As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PasswordDeriveBytes(System::String ^ strPassword, cli::array &lt;System::Byte&gt; ^ rgbSalt, System::String ^ strHashName, int iterations);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="strPassword" Type="System.String" />
        <Parameter Name="rgbSalt" Type="System.Byte[]" />
        <Parameter Name="strHashName" Type="System.String" />
        <Parameter Name="iterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="strPassword">
          <span data-ttu-id="4625c-140">Hasło do uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-140">The password for which to derive the key.</span>
          </span>
        </param>
        <param name="rgbSalt">
          <span data-ttu-id="4625c-141">Soli klucza na potrzeby uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-141">The key salt to use to derive the key.</span>
          </span>
        </param>
        <param name="strHashName">
          <span data-ttu-id="4625c-142">Nazwa algorytmu wyznaczania wartości skrótu dla tej operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-142">The name of the hash algorithm for the operation.</span>
          </span>
        </param>
        <param name="iterations">
          <span data-ttu-id="4625c-143">Liczba iteracji dla tej operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-143">The number of iterations for the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4625c-144">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> klasy z hasłem, soli klucza, Nazwa skrótu i liczba iteracji, aby użyć do uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-144">Initializes a new instance of the <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> class with the password, key salt, hash name, and number of iterations to use to derive the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="4625c-145">Nigdy nie kodowane w hasła w kodzie źródłowym.</span><span class="sxs-lookup"><span data-stu-id="4625c-145">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="4625c-146">Zakodowany hasła mogą być pobierane z zestawu za pomocą [Ildasm.exe (dezasembler IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) narzędzie, Edytor szesnastkowych, lub po prostu otwarcie zestawu w edytorze tekstu, takich jak notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="4625c-146">Hard coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) tool, a hex editor, or by simply opening up the assembly in a text editor like notepad.exe.</span></span>  
  
 <span data-ttu-id="4625c-147">Aby uzyskać listę nazw algorytmu wyznaczania wartości skrótu, zobacz <xref:System.Security.Cryptography.CryptoConfig> klasy.</span><span class="sxs-lookup"><span data-stu-id="4625c-147">For a list of hash algorithm names, see the <xref:System.Security.Cryptography.CryptoConfig> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Cryptography.CryptoConfig" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PasswordDeriveBytes (byte[] password, byte[] salt, string hashName, int iterations, System.Security.Cryptography.CspParameters cspParams);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] password, unsigned int8[] salt, string hashName, int32 iterations, class System.Security.Cryptography.CspParameters cspParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.String,System.Int32,System.Security.Cryptography.CspParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As Byte(), salt As Byte(), hashName As String, iterations As Integer, cspParams As CspParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PasswordDeriveBytes(cli::array &lt;System::Byte&gt; ^ password, cli::array &lt;System::Byte&gt; ^ salt, System::String ^ hashName, int iterations, System::Security::Cryptography::CspParameters ^ cspParams);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="password" Type="System.Byte[]" />
        <Parameter Name="salt" Type="System.Byte[]" />
        <Parameter Name="hashName" Type="System.String" />
        <Parameter Name="iterations" Type="System.Int32" />
        <Parameter Name="cspParams" Type="System.Security.Cryptography.CspParameters" />
      </Parameters>
      <Docs>
        <param name="password">
          <span data-ttu-id="4625c-148">Hasło do uzyskania klucza dla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-148">The password to derive the key for.</span>
          </span>
        </param>
        <param name="salt">
          <span data-ttu-id="4625c-149">Soli klucza na potrzeby uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-149">The key salt to use to derive the key.</span>
          </span>
        </param>
        <param name="hashName">
          <span data-ttu-id="4625c-150">Algorytm wyznaczania wartości skrótu do użycia do uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-150">The hash algorithm to use to derive the key.</span>
          </span>
        </param>
        <param name="iterations">
          <span data-ttu-id="4625c-151">Liczba iteracji, służące do uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-151">The iteration count to use to derive the key.</span>
          </span>
        </param>
        <param name="cspParams">
          <span data-ttu-id="4625c-152">Parametry dostawcę usług kryptograficznych dla tej operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-152">The cryptographic service provider (CSP) parameters for the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4625c-153">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> klasy określenie hasła, soli klucza, Nazwa skrótu, iteracji i dostawcy usług kryptograficznych (CSP) na potrzeby uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-153">Initializes a new instance of the <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> class specifying the password, key salt, hash name, iterations, and cryptographic service provider (CSP) to use to derive the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="4625c-154">Kodu nigdy nie silne hasło w kodzie źródłowym.</span><span class="sxs-lookup"><span data-stu-id="4625c-154">Never hard code a password within your source code.</span></span>  <span data-ttu-id="4625c-155">Ustalony hasła mogą być pobierane z zestawu za pomocą [Ildasm.exe (dezasembler IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), Edytor szesnastkowych, lub po prostu otwarcie zestawu w edytorze tekstu, takich jak Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="4625c-155">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="4625c-156">Aby uzyskać listę nazw algorytmu wyznaczania wartości skrótu, zobacz <xref:System.Security.Cryptography.CryptoConfig> klasy.</span><span class="sxs-lookup"><span data-stu-id="4625c-156">For a list of hash algorithm names, see the <xref:System.Security.Cryptography.CryptoConfig> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Cryptography.CryptoConfig" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PasswordDeriveBytes (string strPassword, byte[] rgbSalt, string strHashName, int iterations, System.Security.Cryptography.CspParameters cspParams);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string strPassword, unsigned int8[] rgbSalt, string strHashName, int32 iterations, class System.Security.Cryptography.CspParameters cspParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.String,System.Int32,System.Security.Cryptography.CspParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (strPassword As String, rgbSalt As Byte(), strHashName As String, iterations As Integer, cspParams As CspParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PasswordDeriveBytes(System::String ^ strPassword, cli::array &lt;System::Byte&gt; ^ rgbSalt, System::String ^ strHashName, int iterations, System::Security::Cryptography::CspParameters ^ cspParams);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="strPassword" Type="System.String" />
        <Parameter Name="rgbSalt" Type="System.Byte[]" />
        <Parameter Name="strHashName" Type="System.String" />
        <Parameter Name="iterations" Type="System.Int32" />
        <Parameter Name="cspParams" Type="System.Security.Cryptography.CspParameters" />
      </Parameters>
      <Docs>
        <param name="strPassword">
          <span data-ttu-id="4625c-157">Hasło do uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-157">The password for which to derive the key.</span>
          </span>
        </param>
        <param name="rgbSalt">
          <span data-ttu-id="4625c-158">Soli klucza na potrzeby uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-158">The key salt to use to derive the key.</span>
          </span>
        </param>
        <param name="strHashName">
          <span data-ttu-id="4625c-159">Nazwa algorytmu wyznaczania wartości skrótu dla tej operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-159">The name of the hash algorithm for the operation.</span>
          </span>
        </param>
        <param name="iterations">
          <span data-ttu-id="4625c-160">Liczba iteracji dla tej operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-160">The number of iterations for the operation.</span>
          </span>
        </param>
        <param name="cspParams">
          <span data-ttu-id="4625c-161">Parametry dostawcy usług Kryptograficznych dla tej operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-161">The CSP parameters for the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4625c-162">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> klasy hasła, soli klucza, Nazwa skrótu, liczby iteracji i usług kryptograficznych (CSP) dostawcy parametry używane do uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-162">Initializes a new instance of the <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> class with the password, key salt, hash name, number of iterations, and cryptographic service provider (CSP) parameters to use to derive the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="4625c-163">Nigdy nie kodowane w hasła w kodzie źródłowym.</span><span class="sxs-lookup"><span data-stu-id="4625c-163">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="4625c-164">Zakodowany hasła mogą być pobierane z zestawu za pomocą [Ildasm.exe (dezasembler IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) narzędzie, Edytor szesnastkowych, lub po prostu otwarcie zestawu w edytorze tekstu, takich jak notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="4625c-164">Hard coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) tool, a hex editor, or by simply opening up the assembly in a text editor like notepad.exe.</span></span>  
  
 <span data-ttu-id="4625c-165">Aby uzyskać listę nazw algorytmu wyznaczania wartości skrótu, zobacz <xref:System.Security.Cryptography.CryptoConfig> klasy.</span><span class="sxs-lookup"><span data-stu-id="4625c-165">For a list of hash algorithm names, see the <xref:System.Security.Cryptography.CryptoConfig> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Cryptography.CryptoConfig" />
      </Docs>
    </Member>
    <Member MemberName="CryptDeriveKey">
      <MemberSignature Language="C#" Value="public byte[] CryptDeriveKey (string algname, string alghashname, int keySize, byte[] rgbIV);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] CryptDeriveKey(string algname, string alghashname, int32 keySize, unsigned int8[] rgbIV) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.PasswordDeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CryptDeriveKey (algname As String, alghashname As String, keySize As Integer, rgbIV As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ CryptDeriveKey(System::String ^ algname, System::String ^ alghashname, int keySize, cli::array &lt;System::Byte&gt; ^ rgbIV);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algname" Type="System.String" />
        <Parameter Name="alghashname" Type="System.String" />
        <Parameter Name="keySize" Type="System.Int32" />
        <Parameter Name="rgbIV" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algname">
          <span data-ttu-id="4625c-166">Nazwa algorytmu, dla której do uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-166">The algorithm name for which to derive the key.</span>
          </span>
        </param>
        <param name="alghashname">
          <span data-ttu-id="4625c-167">Nazwa algorytmu wyznaczania wartości skrótu do użycia do uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-167">The hash algorithm name to use to derive the key.</span>
          </span>
        </param>
        <param name="keySize">
          <span data-ttu-id="4625c-168">Rozmiar klucza w bitach, do uzyskania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-168">The size of the key, in bits, to derive.</span>
          </span>
        </param>
        <param name="rgbIV">
          <span data-ttu-id="4625c-169">Wektor inicjowania (IV) na potrzeby uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-169">The initialization vector (IV) to use to derive the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4625c-170">Pochodzi z klucza kryptograficznego <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-170">Derives a cryptographic key from the <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4625c-171">Klucza pochodnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-171">The derived key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4625c-172">Ta funkcja jest otoką elementu dla funkcji interfejsu API szyfrowania CryptDeriveKey() i jest przeznaczona do zaoferowania współdziałanie z aplikacjami za pomocą interfejsu API szyfrowania.</span><span class="sxs-lookup"><span data-stu-id="4625c-172">This function is a wrapper for the Crypto API function CryptDeriveKey(), and is intended to offer interoperability with applications using the Crypto API.</span></span>  
  
 <span data-ttu-id="4625c-173">Jeśli `keySize` parametr ma wartość 0 bitów, jest używany domyślny rozmiar klucza określony algorytm.</span><span class="sxs-lookup"><span data-stu-id="4625c-173">If the `keySize` parameter is set to 0 bits, the default key size for the specified algorithm is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4625c-174">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.Cryptography.PasswordDeriveBytes> klasy.</span><span class="sxs-lookup"><span data-stu-id="4625c-174">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.PasswordDeriveBytes> class.</span></span>  
  
 [!code-cpp[Cryptography.PasswordDerivedbytes#2](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.PasswordDerivedbytes/cpp/sample.cpp#2)]
 [!code-csharp[Cryptography.PasswordDerivedbytes#2](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.PasswordDerivedbytes/CS/sample.cs#2)]
 [!code-vb[Cryptography.PasswordDerivedbytes#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.PasswordDerivedbytes/VB/sample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="4625c-175">
            <paramref name="keySize" /> Parametr jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-175">The <paramref name="keySize" /> parameter is incorrect.</span>
          </span>
          <span data-ttu-id="4625c-176">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-176">-or-</span>
          </span>
          <span data-ttu-id="4625c-177">Nie można uzyskać dostawcy usług kryptograficznych (CSP).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-177">The cryptographic service provider (CSP) cannot be acquired.</span>
          </span>
          <span data-ttu-id="4625c-178">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-178">-or-</span>
          </span>
          <span data-ttu-id="4625c-179">
            <paramref name="algname" /> Parametr nie jest nazwą prawidłową algorytmu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-179">The <paramref name="algname" /> parameter is not a valid algorithm name.</span>
          </span>
          <span data-ttu-id="4625c-180">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-180">-or-</span>
          </span>
          <span data-ttu-id="4625c-181">
            <paramref name="alghashname" /> Parametr nie jest prawidłowy skrót nazwę algorytmu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-181">The <paramref name="alghashname" /> parameter is not a valid hash algorithm name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.PasswordDeriveBytes.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="4625c-182">
            <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko zasoby niezarządzane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-182">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4625c-183">Zwalnia zasoby niezarządzane używane przez <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> i opcjonalnie zwalnia zasoby zarządzane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-183">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" /> class and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4625c-184">Ta metoda jest wywoływana przez metodę publiczną `Dispose()` — metoda i `Finalize` metody.</span><span class="sxs-lookup"><span data-stu-id="4625c-184">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="4625c-185">`Dispose()` wywołuje chronioną metodę `Dispose(Boolean)` metody z `disposing` ustawiono parametr `true`.</span><span class="sxs-lookup"><span data-stu-id="4625c-185">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="4625c-186">`Finalize` wywołuje `Dispose` z `disposing` ustawioną `false`.</span><span class="sxs-lookup"><span data-stu-id="4625c-186">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="4625c-187">Gdy `disposing` parametr jest `true`, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane przez to <xref:System.Security.Cryptography.PasswordDeriveBytes> odwołania.</span><span class="sxs-lookup"><span data-stu-id="4625c-187">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.PasswordDeriveBytes> references.</span></span> <span data-ttu-id="4625c-188">Ta metoda wywołuje `Dispose()` metody każdego odwołuje się do obiektu.</span><span class="sxs-lookup"><span data-stu-id="4625c-188">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4625c-189">
              <see langword="Dispose" /> można wywoływać wielokrotnie przez inne obiekty.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4625c-189">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="4625c-190">W przypadku przesłaniania <see langword="Dispose(Boolean)" />, nie odwołują się obiekty, które zostały wcześniej zlikwidowane w wywołaniu wcześniejszych <see langword="Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4625c-190">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="4625c-191">Aby uzyskać więcej informacji na temat sposobu wdrażania <see langword="Dispose(Boolean)" />, zobacz [implementacja metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="4625c-191">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="4625c-192">Aby uzyskać więcej informacji na temat <see langword="Dispose" /> i <see langword="Finalize" />, zobacz [czyszczenie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="4625c-192">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override byte[] GetBytes (int cb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetBytes(int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.PasswordDeriveBytes.GetBytes(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (cb As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetBytes(int cb);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Rfc2898DeriveBytes replaces PasswordDeriveBytes for deriving key material from a password and is preferred in new applications.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cb">
          <span data-ttu-id="4625c-193">Liczba pseudolosowego klucza bajtów do wygenerowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-193">The number of pseudo-random key bytes to generate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4625c-194">Zwraca pseudolosowego bajtów klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-194">Returns pseudo-random key bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4625c-195">Tablica bajtów wypełniony pseudolosowego bajtów klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-195">A byte array filled with pseudo-random key bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4625c-196">Tej metody można utworzyć dowolną liczbę pseudolosowego bajtów.</span><span class="sxs-lookup"><span data-stu-id="4625c-196">This method can create any number of pseudo-random bytes.</span></span> <span data-ttu-id="4625c-197">Jednak siłę sekwencji bajtów jest ograniczona liczba bajtów w danych wyjściowych wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="4625c-197">However, the strength of the byte sequence is limited by the number of bytes in the hash output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HashName">
      <MemberSignature Language="C#" Value="public string HashName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HashName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.PasswordDeriveBytes.HashName" />
      <MemberSignature Language="VB.NET" Value="Public Property HashName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HashName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4625c-198">Pobiera lub ustawia nazwę algorytmu wyznaczania wartości skrótu dla tej operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-198">Gets or sets the name of the hash algorithm for the operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4625c-199">Nazwa algorytmu wyznaczania wartości skrótu dla tej operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-199">The name of the hash algorithm for the operation.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="4625c-200">Nazwa wartości skrótu jest stała i próby zmienić tę wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-200">The name of the hash value is fixed and an attempt is made to change this value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IterationCount">
      <MemberSignature Language="C#" Value="public int IterationCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IterationCount" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.PasswordDeriveBytes.IterationCount" />
      <MemberSignature Language="VB.NET" Value="Public Property IterationCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IterationCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4625c-201">Pobiera lub ustawia liczbę iteracji dla tej operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-201">Gets or sets the number of iterations for the operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4625c-202">Liczba iteracji dla tej operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-202">The number of iterations for the operation.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="4625c-203">Liczba iteracji jest stała i próby zmienić tę wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-203">The number of iterations is fixed and an attempt is made to change this value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4625c-204">Nie można ustawić właściwości, ponieważ jej wartość jest poza zakresem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-204">The property cannot be set because its value is out of range.</span>
          </span>
          <span data-ttu-id="4625c-205">Ta właściwość wymaga liczby nieujemnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-205">This property requires a non-negative number.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.PasswordDeriveBytes.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4625c-206">Resetuje stan operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-206">Resets the state of the operation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Salt">
      <MemberSignature Language="C#" Value="public byte[] Salt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Salt" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.PasswordDeriveBytes.Salt" />
      <MemberSignature Language="VB.NET" Value="Public Property Salt As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Salt { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4625c-207">Pobiera lub ustawia wartość zaburzająca klucza dla operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-207">Gets or sets the key salt value for the operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4625c-208">Wartość zaburzająca klucza dla tej operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-208">The key salt value for the operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4625c-209">Atak słownikowy jest atak, w którym atakujący próbuje odszyfrować zaszyfrowanego komunikatu na podstawie porównania ilości zaszyfrowanych wartości z wcześniej obliczonych wartości zaszyfrowanych kluczy najprawdopodobniej.</span><span class="sxs-lookup"><span data-stu-id="4625c-209">A dictionary attack is an attack in which the attacker attempts to decrypt an encrypted message by comparing the encrypted value with previously computed encrypted values for the most likely keys.</span></span> <span data-ttu-id="4625c-210">Atak się znacznie trudniejsze przez wprowadzenie losowych bajtów na końcu hasła przed klucza pochodnego.</span><span class="sxs-lookup"><span data-stu-id="4625c-210">This attack is made much more difficult by the introduction of random bytes at the end of the password before the key derivation.</span></span> <span data-ttu-id="4625c-211">Te losowych bajtów są określane jako wartości zaburzającej.</span><span class="sxs-lookup"><span data-stu-id="4625c-211">These random bytes are known as salt.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="4625c-212">Wartość zaburzająca klucza jest stała i próby zmienić tę wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4625c-212">The key salt value is fixed and an attempt is made to change this value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>