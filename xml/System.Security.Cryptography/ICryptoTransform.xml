<Type Name="ICryptoTransform" FullName="System.Security.Cryptography.ICryptoTransform">
  <TypeSignature Language="C#" Value="public interface ICryptoTransform : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICryptoTransform implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ICryptoTransform" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICryptoTransform&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICryptoTransform : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0adc4-101">Definiuje podstawowe operacje kryptograficzne przekształcenia.</span><span class="sxs-lookup"><span data-stu-id="0adc4-101">Defines the basic operations of cryptographic transformations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0adc4-102">Przykład kryptograficznych przekształceń są algorytmy wyznaczania wartości skrótu (<xref:System.Security.Cryptography.HashAlgorithm>).</span><span class="sxs-lookup"><span data-stu-id="0adc4-102">Hash algorithms are an example of cryptographic transformations (<xref:System.Security.Cryptography.HashAlgorithm>).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanReuseTransform">
      <MemberSignature Language="C#" Value="public bool CanReuseTransform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReuseTransform" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ICryptoTransform.CanReuseTransform" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanReuseTransform As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanReuseTransform { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0adc4-103">Pobiera wartość wskazującą, czy bieżący przekształcenia mogą być ponownie używane.</span><span class="sxs-lookup"><span data-stu-id="0adc4-103">Gets a value indicating whether the current transform can be reused.</span></span></summary>
        <value>
          <span data-ttu-id="0adc4-104"><see langword="true" /> Jeśli bieżący przekształcenia mogą być ponownie używane; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0adc4-104"><see langword="true" /> if the current transform can be reused; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanTransformMultipleBlocks">
      <MemberSignature Language="C#" Value="public bool CanTransformMultipleBlocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTransformMultipleBlocks" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanTransformMultipleBlocks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanTransformMultipleBlocks { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0adc4-105">Pobiera wartość wskazującą, czy można je przekształcać wiele bloków.</span><span class="sxs-lookup"><span data-stu-id="0adc4-105">Gets a value indicating whether multiple blocks can be transformed.</span></span></summary>
        <value>
          <span data-ttu-id="0adc4-106"><see langword="true" /> Jeśli można je przekształcać wiele bloków; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0adc4-106"><see langword="true" /> if multiple blocks can be transformed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBlockSize">
      <MemberSignature Language="C#" Value="public int InputBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InputBlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ICryptoTransform.InputBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputBlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InputBlockSize { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0adc4-107">Pobiera rozmiar bloku wejściowego.</span><span class="sxs-lookup"><span data-stu-id="0adc4-107">Gets the input block size.</span></span></summary>
        <value><span data-ttu-id="0adc4-108">Rozmiar danych wejściowych blokuje w bajtach.</span><span class="sxs-lookup"><span data-stu-id="0adc4-108">The size of the input data blocks in bytes.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputBlockSize">
      <MemberSignature Language="C#" Value="public int OutputBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OutputBlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ICryptoTransform.OutputBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputBlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int OutputBlockSize { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0adc4-109">Pobiera rozmiar bloku danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="0adc4-109">Gets the output block size.</span></span></summary>
        <value><span data-ttu-id="0adc4-110">Rozmiar danych wyjściowych blokuje w bajtach.</span><span class="sxs-lookup"><span data-stu-id="0adc4-110">The size of the output data blocks in bytes.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformBlock">
      <MemberSignature Language="C#" Value="public int TransformBlock (byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 TransformBlock(unsigned int8[] inputBuffer, int32 inputOffset, int32 inputCount, unsigned int8[] outputBuffer, int32 outputOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformBlock (inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer, outputBuffer As Byte(), outputOffset As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int TransformBlock(cli::array &lt;System::Byte&gt; ^ inputBuffer, int inputOffset, int inputCount, cli::array &lt;System::Byte&gt; ^ outputBuffer, int outputOffset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputBuffer" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputCount" Type="System.Int32" />
        <Parameter Name="outputBuffer" Type="System.Byte[]" />
        <Parameter Name="outputOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputBuffer"><span data-ttu-id="0adc4-111">Dane wejściowe, dla którego można obliczyć transformacji.</span><span class="sxs-lookup"><span data-stu-id="0adc4-111">The input for which to compute the transform.</span></span></param>
        <param name="inputOffset"><span data-ttu-id="0adc4-112">Przesunięcie w tablicy bajtów wejściowych, z którego można rozpocząć korzystanie z danych.</span><span class="sxs-lookup"><span data-stu-id="0adc4-112">The offset into the input byte array from which to begin using data.</span></span></param>
        <param name="inputCount"><span data-ttu-id="0adc4-113">Liczba bajtów w wejściowej tablicy bajtów do użycia jako dane.</span><span class="sxs-lookup"><span data-stu-id="0adc4-113">The number of bytes in the input byte array to use as data.</span></span></param>
        <param name="outputBuffer"><span data-ttu-id="0adc4-114">Dane wyjściowe, do którego należy zapisać transformacji.</span><span class="sxs-lookup"><span data-stu-id="0adc4-114">The output to which to write the transform.</span></span></param>
        <param name="outputOffset"><span data-ttu-id="0adc4-115">Przesunięcie do tablicy typu byte dane wyjściowe, z którego ma zostać rozpoczęta zapisywania danych.</span><span class="sxs-lookup"><span data-stu-id="0adc4-115">The offset into the output byte array from which to begin writing data.</span></span></param>
        <summary><span data-ttu-id="0adc4-116">Przekształca określony region wejściowej tablicy bajtów i kopiuje wynikowy transformacji do określonego regionu wyjściowej tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="0adc4-116">Transforms the specified region of the input byte array and copies the resulting transform to the specified region of the output byte array.</span></span></summary>
        <returns><span data-ttu-id="0adc4-117">Liczba zapisanych bajtów.</span><span class="sxs-lookup"><span data-stu-id="0adc4-117">The number of bytes written.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="0adc4-118">Wartość zwracana <xref:System.Security.Cryptography.ICryptoTransform.TransformBlock%2A> jest to liczba bajtów zwrócona do `outputBuffer` i jest zawsze mniejsze niż lub równe <xref:System.Security.Cryptography.ICryptoTransform.OutputBlockSize>.</span><span class="sxs-lookup"><span data-stu-id="0adc4-118">The return value of <xref:System.Security.Cryptography.ICryptoTransform.TransformBlock%2A> is the number of bytes returned to `outputBuffer` and is always less than or equal to <xref:System.Security.Cryptography.ICryptoTransform.OutputBlockSize>.</span></span> <span data-ttu-id="0adc4-119">Jeśli <xref:System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks> jest `true`, następnie `inputCount` musi być dodatnią wielokrotnością żadnych <xref:System.Security.Cryptography.ICryptoTransform.InputBlockSize>.</span><span class="sxs-lookup"><span data-stu-id="0adc4-119">If <xref:System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks> is `true`, then `inputCount` must be any positive multiple of <xref:System.Security.Cryptography.ICryptoTransform.InputBlockSize>.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformFinalBlock">
      <MemberSignature Language="C#" Value="public byte[] TransformFinalBlock (byte[] inputBuffer, int inputOffset, int inputCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] TransformFinalBlock(unsigned int8[] inputBuffer, int32 inputOffset, int32 inputCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformFinalBlock (inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ TransformFinalBlock(cli::array &lt;System::Byte&gt; ^ inputBuffer, int inputOffset, int inputCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputBuffer" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputBuffer"><span data-ttu-id="0adc4-120">Dane wejściowe, dla którego można obliczyć transformacji.</span><span class="sxs-lookup"><span data-stu-id="0adc4-120">The input for which to compute the transform.</span></span></param>
        <param name="inputOffset"><span data-ttu-id="0adc4-121">Przesunięcie do tablicy typu byte, z którego można rozpocząć korzystanie z danych.</span><span class="sxs-lookup"><span data-stu-id="0adc4-121">The offset into the byte array from which to begin using data.</span></span></param>
        <param name="inputCount"><span data-ttu-id="0adc4-122">Liczba bajtów w tablicy bajtów do użycia jako dane.</span><span class="sxs-lookup"><span data-stu-id="0adc4-122">The number of bytes in the byte array to use as data.</span></span></param>
        <summary><span data-ttu-id="0adc4-123">Przekształca określony region określonej tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="0adc4-123">Transforms the specified region of the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="0adc4-124">Obliczona transformacji.</span><span class="sxs-lookup"><span data-stu-id="0adc4-124">The computed transform.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0adc4-125"><xref:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock%2A> jest to funkcja specjalne do przekształcania ostatniego bloku lub częściowe bloku w strumieniu.</span><span class="sxs-lookup"><span data-stu-id="0adc4-125"><xref:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock%2A> is a special function for transforming the last block or a partial block in the stream.</span></span> <span data-ttu-id="0adc4-126">Zwraca nowej tablicy zawierająca przekształcone pozostałe bajty.</span><span class="sxs-lookup"><span data-stu-id="0adc4-126">It returns a new array that contains the remaining transformed bytes.</span></span> <span data-ttu-id="0adc4-127">Nowej tablicy jest zwracany, ponieważ ilość zwracanych na końcu informacji może być większa niż jeden blok po dodaniu dopełnienia.</span><span class="sxs-lookup"><span data-stu-id="0adc4-127">A new array is returned, because the amount of information returned at the end might be larger than a single block when padding is added.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>