<Type Name="HashAlgorithmName" FullName="System.Security.Cryptography.HashAlgorithmName">
  <TypeSignature Language="C#" Value="public struct HashAlgorithmName : IEquatable&lt;System.Security.Cryptography.HashAlgorithmName&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit HashAlgorithmName extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Security.Cryptography.HashAlgorithmName&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.HashAlgorithmName" />
  <TypeSignature Language="VB.NET" Value="Public Structure HashAlgorithmName&#xA;Implements IEquatable(Of HashAlgorithmName)" />
  <TypeSignature Language="C++ CLI" Value="public value class HashAlgorithmName : IEquatable&lt;System::Security::Cryptography::HashAlgorithmName&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Security.Cryptography.HashAlgorithmName&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="e4551-101">Określa nazwę algorytmu mieszania.</span><span class="sxs-lookup"><span data-stu-id="e4551-101">Specifies the name of a cryptographic hash algorithm.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4551-102"><xref:System.Security.Cryptography.HashAlgorithmName> Struktura zawiera niektóre właściwości statyczne zwracających nazw algorytmu wyznaczania wartości skrótu wstępnie zdefiniowane, a także <xref:System.Security.Cryptography.HashAlgorithmName.Name%2A> właściwość, która może reprezentować nazwę algorytmu skrótu niestandardowych jako ciąg jednoznacznie.</span><span class="sxs-lookup"><span data-stu-id="e4551-102">The <xref:System.Security.Cryptography.HashAlgorithmName> structure includes some static properties that return predefined hash algorithm names, as well as a <xref:System.Security.Cryptography.HashAlgorithmName.Name%2A> property that can represent a custom hash algorithm name as a strongly-typed string.</span></span> <span data-ttu-id="e4551-103">Nazw algorytmu wyznaczania wartości skrótu jest rozróżniana wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="e4551-103">Hash algorithm names are case-sensitive.</span></span>  
  
 <span data-ttu-id="e4551-104">Asymetryczne algorytmy implementowane przy użyciu interfejsu API CNG (kryptograficznych generacji) firmy Microsoft zinterpretować odpowiednia wartość ciągu jako [identyfikator algorytmu CNG](https://msdn.microsoft.com/library/windows/desktop/aa375534.aspx).</span><span class="sxs-lookup"><span data-stu-id="e4551-104">Asymmetric algorithms implemented using Microsoft's CNG (Cryptographic Next Generation) API interpret the underlying string value as a [CNG algorithm identifier](https://msdn.microsoft.com/library/windows/desktop/aa375534.aspx).</span></span>  
  
 <span data-ttu-id="e4551-105">Asymetryczne algorytmy są implementowane za pomocą innych technologii:</span><span class="sxs-lookup"><span data-stu-id="e4551-105">Asymmetric algorithms implemented using other technologies:</span></span>  
  
-   <span data-ttu-id="e4551-106">Musi rozpoznać co najmniej "MD5", "SHA1", "SHA256", "SHA384" i "SHA512".</span><span class="sxs-lookup"><span data-stu-id="e4551-106">Must recognize at least "MD5", "SHA1", "SHA256", "SHA384", and "SHA512".</span></span>  
  
-   <span data-ttu-id="e4551-107">Powinien rozpoznać dodatkowe identyfikatory CNG żadnych algorytmów wyznaczania wartości skrótu dodatkowe obsługują.</span><span class="sxs-lookup"><span data-stu-id="e4551-107">Should recognize additional CNG identifiers for any additional hash algorithms that they support.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HashAlgorithmName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithmName.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HashAlgorithmName(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e4551-108">Nazwa algorytmu skrótu niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="e4551-108">The custom hash algorithm name.</span></span></param>
        <summary><span data-ttu-id="e4551-109">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> struktury o nazwie niestandardowej.</span><span class="sxs-lookup"><span data-stu-id="e4551-109">Initializes a new instance of the <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> structure with a custom name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4551-110">Konstruktor przeprowadza weryfikację nie `name`.</span><span class="sxs-lookup"><span data-stu-id="e4551-110">The constructor performs no validation on `name`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e4551-111">Zwraca wartość wskazującą, czy dwa <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> wartości są równe.</span><span class="sxs-lookup"><span data-stu-id="e4551-111">Returns a value that indicates whether two <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> values are equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithmName.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="e4551-112">Obiekt do porównania z bieżącym wystąpieniem.</span><span class="sxs-lookup"><span data-stu-id="e4551-112">The object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="e4551-113">Zwraca wartość wskazującą, czy bieżące wystąpienie oraz określony obiekt są równe.</span><span class="sxs-lookup"><span data-stu-id="e4551-113">Returns a value that indicates whether the current instance and a specified object are equal.</span></span></summary>
        <returns>
          <span data-ttu-id="e4551-114"><see langword="true" /> Jeśli <paramref name="obj" /> jest <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> obiekt i jego <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> właściwości jest równa bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e4551-114"><see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> object and its <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> property is equal to that of the current instance.</span></span> <span data-ttu-id="e4551-115">Wynik porównania ma numer porządkowy i z uwzględnieniem wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="e4551-115">The comparison is ordinal and case-sensitive.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Security.Cryptography.HashAlgorithmName other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Security.Cryptography.HashAlgorithmName other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithmName.Equals(System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As HashAlgorithmName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Security::Cryptography::HashAlgorithmName other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="e4551-116">Obiekt do porównania z bieżącym wystąpieniem.</span><span class="sxs-lookup"><span data-stu-id="e4551-116">The object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="e4551-117">Zwraca wartość wskazującą, czy dwa <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> wystąpienia są takie same.</span><span class="sxs-lookup"><span data-stu-id="e4551-117">Returns a value that indicates whether two <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> instances are equal.</span></span></summary>
        <returns>
          <span data-ttu-id="e4551-118"><see langword="true" /> Jeśli <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> właściwość <paramref name="other" /> jest równa bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e4551-118"><see langword="true" /> if the <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> property of <paramref name="other" /> is equal to that of the current instance.</span></span> <span data-ttu-id="e4551-119">Wynik porównania ma numer porządkowy i z uwzględnieniem wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="e4551-119">The comparison is ordinal and case-sensitive.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithmName.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e4551-120">Zwraca wartość skrótu dla bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e4551-120">Returns the hash code for the current instance.</span></span></summary>
        <returns><span data-ttu-id="e4551-121">Wartość skrótu dla bieżącego wystąpienia lub 0, jeśli nie <paramref name="name" /> podano wartość <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="e4551-121">The hash code for the current instance, or 0 if no <paramref name="name" /> value was supplied to the <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> constructor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MD5">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HashAlgorithmName MD5 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Security.Cryptography.HashAlgorithmName MD5" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HashAlgorithmName.MD5" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MD5 As HashAlgorithmName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::HashAlgorithmName MD5 { System::Security::Cryptography::HashAlgorithmName get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithmName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4551-122">Pobiera nazwę algorytmu wyznaczania wartości skrótu, która reprezentuje "MD5".</span><span class="sxs-lookup"><span data-stu-id="e4551-122">Gets a hash algorithm name that represents "MD5".</span></span></summary>
        <value><span data-ttu-id="e4551-123">Nazwa algorytmu wyznaczania wartości skrótu, która reprezentuje "MD5".</span><span class="sxs-lookup"><span data-stu-id="e4551-123">A hash algorithm name that represents "MD5".</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HashAlgorithmName.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4551-124">Pobiera podstawowy reprezentację ciągu nazwę algorytmu.</span><span class="sxs-lookup"><span data-stu-id="e4551-124">Gets the underlying string representation of the algorithm name.</span></span></summary>
        <value><span data-ttu-id="e4551-125">Reprezentacja ciągu Nazwa algorytmu lub <see langword="null" /> lub <see cref="F:System.String.Empty" /> Jeśli nie algorytmu wyznaczania wartości skrótu jest dostępna.</span><span class="sxs-lookup"><span data-stu-id="e4551-125">The string representation of the algorithm name, or <see langword="null" /> or <see cref="F:System.String.Empty" /> if no hash algorithm is available.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Security.Cryptography.HashAlgorithmName left, System.Security.Cryptography.HashAlgorithmName right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Security.Cryptography.HashAlgorithmName left, valuetype System.Security.Cryptography.HashAlgorithmName right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithmName.op_Equality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As HashAlgorithmName, right As HashAlgorithmName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Security::Cryptography::HashAlgorithmName left, System::Security::Cryptography::HashAlgorithmName right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="right" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="e4551-126">Pierwszy obiekt, który ma zostać porównany.</span><span class="sxs-lookup"><span data-stu-id="e4551-126">The first object to compare.</span></span></param>
        <param name="right"><span data-ttu-id="e4551-127">Drugi obiekt, który będzie porównywany.</span><span class="sxs-lookup"><span data-stu-id="e4551-127">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="e4551-128">Określa, czy dwa określone <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> obiekty są takie same.</span><span class="sxs-lookup"><span data-stu-id="e4551-128">Determines whether two specified <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> objects are equal.</span></span></summary>
        <returns>
          <span data-ttu-id="e4551-129"><see langword="true" /> Jeśli oba <paramref name="left" /> i <paramref name="right" /> tej samej <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> wartości; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e4551-129"><see langword="true" /> if both <paramref name="left" /> and <paramref name="right" /> have the same <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4551-130"><xref:System.Security.Cryptography.HashAlgorithmName.op_Equality%2A> Metoda definiuje operacji operatora równości dla <xref:System.Security.Cryptography.HashAlgorithmName> wartości.</span><span class="sxs-lookup"><span data-stu-id="e4551-130">The <xref:System.Security.Cryptography.HashAlgorithmName.op_Equality%2A> method defines the operation of the equality operator for <xref:System.Security.Cryptography.HashAlgorithmName> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Security.Cryptography.HashAlgorithmName left, System.Security.Cryptography.HashAlgorithmName right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Security.Cryptography.HashAlgorithmName left, valuetype System.Security.Cryptography.HashAlgorithmName right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithmName.op_Inequality(System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As HashAlgorithmName, right As HashAlgorithmName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Security::Cryptography::HashAlgorithmName left, System::Security::Cryptography::HashAlgorithmName right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="right" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="e4551-131">Pierwszy obiekt, który ma zostać porównany.</span><span class="sxs-lookup"><span data-stu-id="e4551-131">The first object to compare.</span></span></param>
        <param name="right"><span data-ttu-id="e4551-132">Drugi obiekt, który będzie porównywany.</span><span class="sxs-lookup"><span data-stu-id="e4551-132">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="e4551-133">Określa, czy dwa określone <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> obiekty nie są takie same.</span><span class="sxs-lookup"><span data-stu-id="e4551-133">Determines whether two specified <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> objects are not equal.</span></span></summary>
        <returns>
          <span data-ttu-id="e4551-134"><see langword="true" /> Jeśli oba <paramref name="left" /> i <paramref name="right" /> nie mają takie same <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> wartości; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e4551-134"><see langword="true" /> if both <paramref name="left" /> and <paramref name="right" /> do not have the same <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4551-135"><xref:System.Security.Cryptography.HashAlgorithmName.op_Inequality%2A> Metoda definiuje operacji operator nierówności <xref:System.Security.Cryptography.HashAlgorithmName> wartości.</span><span class="sxs-lookup"><span data-stu-id="e4551-135">The <xref:System.Security.Cryptography.HashAlgorithmName.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Security.Cryptography.HashAlgorithmName> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SHA1">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HashAlgorithmName SHA1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Security.Cryptography.HashAlgorithmName SHA1" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HashAlgorithmName.SHA1" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SHA1 As HashAlgorithmName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::HashAlgorithmName SHA1 { System::Security::Cryptography::HashAlgorithmName get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithmName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4551-136">Pobiera nazwę algorytmu wyznaczania wartości skrótu, która reprezentuje "SHA1".</span><span class="sxs-lookup"><span data-stu-id="e4551-136">Gets a hash algorithm name that represents "SHA1".</span></span></summary>
        <value><span data-ttu-id="e4551-137">Nazwa algorytmu wyznaczania wartości skrótu, która reprezentuje "SHA1".</span><span class="sxs-lookup"><span data-stu-id="e4551-137">A hash algorithm name that represents "SHA1".</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SHA256">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HashAlgorithmName SHA256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Security.Cryptography.HashAlgorithmName SHA256" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HashAlgorithmName.SHA256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SHA256 As HashAlgorithmName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::HashAlgorithmName SHA256 { System::Security::Cryptography::HashAlgorithmName get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithmName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4551-138">Pobiera nazwę algorytmu wyznaczania wartości skrótu, która reprezentuje "SHA256".</span><span class="sxs-lookup"><span data-stu-id="e4551-138">Gets a hash algorithm name that represents "SHA256".</span></span></summary>
        <value><span data-ttu-id="e4551-139">Nazwa algorytmu wyznaczania wartości skrótu, która reprezentuje "SHA256".</span><span class="sxs-lookup"><span data-stu-id="e4551-139">A hash algorithm name that represents "SHA256".</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SHA384">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HashAlgorithmName SHA384 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Security.Cryptography.HashAlgorithmName SHA384" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HashAlgorithmName.SHA384" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SHA384 As HashAlgorithmName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::HashAlgorithmName SHA384 { System::Security::Cryptography::HashAlgorithmName get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithmName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4551-140">Pobiera nazwę algorytmu wyznaczania wartości skrótu, która reprezentuje "SHA384".</span><span class="sxs-lookup"><span data-stu-id="e4551-140">Gets a hash algorithm name that represents "SHA384".</span></span></summary>
        <value><span data-ttu-id="e4551-141">Nazwa algorytmu wyznaczania wartości skrótu, która reprezentuje "SHA384".</span><span class="sxs-lookup"><span data-stu-id="e4551-141">A hash algorithm name that represents "SHA384".</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SHA512">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HashAlgorithmName SHA512 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Security.Cryptography.HashAlgorithmName SHA512" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HashAlgorithmName.SHA512" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SHA512 As HashAlgorithmName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::HashAlgorithmName SHA512 { System::Security::Cryptography::HashAlgorithmName get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithmName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4551-142">Pobiera nazwę algorytmu wyznaczania wartości skrótu, która reprezentuje "SHA512".</span><span class="sxs-lookup"><span data-stu-id="e4551-142">Gets a hash algorithm name that represents "SHA512".</span></span></summary>
        <value><span data-ttu-id="e4551-143">Nazwa algorytmu wyznaczania wartości skrótu, która reprezentuje "SHA512".</span><span class="sxs-lookup"><span data-stu-id="e4551-143">A hash algorithm name that represents "SHA512".</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithmName.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e4551-144">Zwraca reprezentację ciągu bieżącego <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e4551-144">Returns the string representation of the current <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> instance.</span></span></summary>
        <returns><span data-ttu-id="e4551-145">Reprezentacja ciągu bieżącego <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e4551-145">The string representation of the current <see cref="T:System.Security.Cryptography.HashAlgorithmName" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4551-146"><xref:System.Security.Cryptography.HashAlgorithmName.ToString%2A> Metoda zwraca <xref:System.Security.Cryptography.HashAlgorithmName.Name%2A> właściwości, jeśli został przypisany.</span><span class="sxs-lookup"><span data-stu-id="e4551-146">The <xref:System.Security.Cryptography.HashAlgorithmName.ToString%2A> method returns the <xref:System.Security.Cryptography.HashAlgorithmName.Name%2A> property, if it has been assigned.</span></span> <span data-ttu-id="e4551-147">W przeciwnym razie zwraca <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e4551-147">Otherwise, it returns <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>