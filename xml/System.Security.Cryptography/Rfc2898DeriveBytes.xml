<Type Name="Rfc2898DeriveBytes" FullName="System.Security.Cryptography.Rfc2898DeriveBytes">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b714b65f0dc803f761824594619f2ab81f07f62a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69082324" /></Metadata><TypeSignature Language="C#" Value="public class Rfc2898DeriveBytes : System.Security.Cryptography.DeriveBytes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Rfc2898DeriveBytes extends System.Security.Cryptography.DeriveBytes" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Rfc2898DeriveBytes" />
  <TypeSignature Language="VB.NET" Value="Public Class Rfc2898DeriveBytes&#xA;Inherits DeriveBytes" />
  <TypeSignature Language="C++ CLI" Value="public ref class Rfc2898DeriveBytes : System::Security::Cryptography::DeriveBytes" />
  <TypeSignature Language="F#" Value="type Rfc2898DeriveBytes = class&#xA;    inherit DeriveBytes" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.DeriveBytes</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="46e96-101">Implementuje funkcję wyprowadzania klucza opartego na hasłach, PBKDF2, przy użyciu generatora liczb pseudolosowych opartych na <see cref="T:System.Security.Cryptography.HMACSHA1" />.</span><span class="sxs-lookup"><span data-stu-id="46e96-101">Implements password-based key derivation functionality, PBKDF2, by using a pseudo-random number generator based on <see cref="T:System.Security.Cryptography.HMACSHA1" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46e96-102"><xref:System.Security.Cryptography.Rfc2898DeriveBytes>przyjmuje hasło, sól i liczbę iteracji, a następnie generuje klucze za pomocą wywołań <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="46e96-102"><xref:System.Security.Cryptography.Rfc2898DeriveBytes> takes a password, a salt, and an iteration count, and then generates keys through calls to the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method.</span></span>  
  
 <span data-ttu-id="46e96-103">W dokumencie RFC 2898 opisano metody tworzenia wektora klucza i inicjalizacji (IV) przy użyciu hasła i soli.</span><span class="sxs-lookup"><span data-stu-id="46e96-103">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="46e96-104">Można użyć PBKDF2, funkcji wyprowadzania klucza opartego na hasłach, aby generować klucze przy użyciu funkcji pseudoklasy, która umożliwia generowanie kluczy praktycznie nieograniczonej długości.</span><span class="sxs-lookup"><span data-stu-id="46e96-104">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="46e96-105"><xref:System.Security.Cryptography.Rfc2898DeriveBytes> Klasa może służyć do tworzenia klucza pochodnego z klucza podstawowego i innych parametrów.</span><span class="sxs-lookup"><span data-stu-id="46e96-105">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="46e96-106">W funkcji wyprowadzania klucza opartego na hasłach klucz podstawowy jest hasłem, a inne parametry są wartością soli i liczbą iteracji.</span><span class="sxs-lookup"><span data-stu-id="46e96-106">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="46e96-107">Aby uzyskać więcej informacji na temat PBKDF2, zobacz RFC 2898, "PKCS #5: Specyfikacja kryptografii oparta na hasłach w wersji 2,0, dostępna w [witrynie Request for Comments w sieci Web](https://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="46e96-107">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](https://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="46e96-108">Aby uzyskać szczegółowe informacje, zobacz sekcję 5,2, "PBKDF2".</span><span class="sxs-lookup"><span data-stu-id="46e96-108">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="46e96-109">Nigdy nie należy nakodować hasła w kodzie źródłowym.</span><span class="sxs-lookup"><span data-stu-id="46e96-109">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="46e96-110">Stałe kodowane hasła można pobrać z zestawu przy użyciu [Ildasm. exe (Il dezasembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), używając edytora szesnastkowego lub po prostu otwierając zestaw w edytorze tekstu, takim jak Notepad. exe.</span><span class="sxs-lookup"><span data-stu-id="46e96-110">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46e96-111">Poniższy przykład kodu używa <xref:System.Security.Cryptography.Rfc2898DeriveBytes> klasy do tworzenia dwóch identycznych kluczy <xref:System.Security.Cryptography.TripleDES> dla klasy.</span><span class="sxs-lookup"><span data-stu-id="46e96-111">The following code example uses the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class to create two identical keys for the <xref:System.Security.Cryptography.TripleDES> class.</span></span>  <span data-ttu-id="46e96-112">Następnie szyfruje i odszyfrowuje niektóre dane przy użyciu kluczy.</span><span class="sxs-lookup"><span data-stu-id="46e96-112">It then encrypts and decrypts some data using the keys.</span></span>  
  
 [!code-cpp[rfc28981#1](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#1)]
 [!code-csharp[rfc28981#1](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#1)]
 [!code-vb[rfc28981#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="46e96-113">Usługi kryptograficzne</span><span class="sxs-lookup"><span data-stu-id="46e96-113">Cryptographic Services</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="46e96-114">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="46e96-114">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, byte[] salt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, unsigned int8[] salt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, salt As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, cli::array &lt;System::Byte&gt; ^ salt);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : string * byte[] -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, salt)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="salt" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="46e96-115">Hasło użyte do wygenerowania klucza.</span><span class="sxs-lookup"><span data-stu-id="46e96-115">The password used to derive the key.</span></span></param>
        <param name="salt"><span data-ttu-id="46e96-116">Sól klucza używana do wyprowadzania klucza.</span><span class="sxs-lookup"><span data-stu-id="46e96-116">The key salt used to derive the key.</span></span></param>
        <summary><span data-ttu-id="46e96-117">Inicjuje nowe wystąpienie <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> klasy przy użyciu hasła i soli do uzyskania klucza.</span><span class="sxs-lookup"><span data-stu-id="46e96-117">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using a password and salt to derive the key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46e96-118">Rozmiar ziarna nie może być większy niż 8 bajtów.</span><span class="sxs-lookup"><span data-stu-id="46e96-118">The salt size must be 8 bytes or larger.</span></span>  
  
 <span data-ttu-id="46e96-119">W dokumencie RFC 2898 opisano metody tworzenia wektora klucza i inicjalizacji (IV) przy użyciu hasła i soli.</span><span class="sxs-lookup"><span data-stu-id="46e96-119">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="46e96-120">Można użyć PBKDF2, funkcji wyprowadzania klucza opartego na hasłach, aby generować klucze przy użyciu funkcji pseudoklasy, która umożliwia generowanie kluczy praktycznie nieograniczonej długości.</span><span class="sxs-lookup"><span data-stu-id="46e96-120">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="46e96-121"><xref:System.Security.Cryptography.Rfc2898DeriveBytes> Klasa może służyć do tworzenia klucza pochodnego z klucza podstawowego i innych parametrów.</span><span class="sxs-lookup"><span data-stu-id="46e96-121">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="46e96-122">W funkcji wyprowadzania klucza opartego na hasłach klucz podstawowy jest hasłem, a inne parametry są wartością soli i liczbą iteracji.</span><span class="sxs-lookup"><span data-stu-id="46e96-122">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="46e96-123">Aby uzyskać więcej informacji na temat PBKDF2, zobacz RFC 2898, "PKCS #5: Specyfikacja kryptografii oparta na hasłach w wersji 2,0, dostępna w [witrynie Request for Comments w sieci Web](https://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="46e96-123">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](https://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="46e96-124">Aby uzyskać szczegółowe informacje, zobacz sekcję 5,2, "PBKDF2".</span><span class="sxs-lookup"><span data-stu-id="46e96-124">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="46e96-125">Nigdy nie należy nakodować hasła w kodzie źródłowym.</span><span class="sxs-lookup"><span data-stu-id="46e96-125">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="46e96-126">Stałe kodowane hasła można pobrać z zestawu przy użyciu [Ildasm. exe (Il dezasembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), używając edytora szesnastkowego lub po prostu otwierając zestaw w edytorze tekstu, takim jak Notepad. exe.</span><span class="sxs-lookup"><span data-stu-id="46e96-126">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46e96-127">Poniższy przykład kodu używa <xref:System.Security.Cryptography.Rfc2898DeriveBytes> klasy do tworzenia dwóch identycznych kluczy <xref:System.Security.Cryptography.TripleDES> dla klasy.</span><span class="sxs-lookup"><span data-stu-id="46e96-127">The following code example uses the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class to create two identical keys for the <xref:System.Security.Cryptography.TripleDES> class.</span></span>  <span data-ttu-id="46e96-128">Następnie szyfruje i odszyfrowuje niektóre dane przy użyciu kluczy.</span><span class="sxs-lookup"><span data-stu-id="46e96-128">It then encrypts and decrypts some data using the keys.</span></span>  
  
 [!code-cpp[rfc28981#1](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#1)]
 [!code-csharp[rfc28981#1](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#1)]
 [!code-vb[rfc28981#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="46e96-129">Określony rozmiar ziarna jest mniejszy niż 8 bajtów lub liczba iteracji jest mniejsza niż 1.</span><span class="sxs-lookup"><span data-stu-id="46e96-129">The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="46e96-130">Hasło lub sól jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="46e96-130">The password or salt is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="46e96-131">Usługi kryptograficzne</span><span class="sxs-lookup"><span data-stu-id="46e96-131">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, int saltSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, int32 saltSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, saltSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, int saltSize);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : string * int -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, saltSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="saltSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="46e96-132">Hasło użyte do wygenerowania klucza.</span><span class="sxs-lookup"><span data-stu-id="46e96-132">The password used to derive the key.</span></span></param>
        <param name="saltSize"><span data-ttu-id="46e96-133">Rozmiar losowej soli, która ma być generowana przez klasę.</span><span class="sxs-lookup"><span data-stu-id="46e96-133">The size of the random salt that you want the class to generate.</span></span></param>
        <summary><span data-ttu-id="46e96-134">Inicjuje nowe wystąpienie <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> klasy przy użyciu hasła i rozmiaru ziarna w celu uzyskania klucza.</span><span class="sxs-lookup"><span data-stu-id="46e96-134">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using the password and salt size to derive the key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46e96-135">Rozmiar ziarna nie może być większy niż 8 bajtów.</span><span class="sxs-lookup"><span data-stu-id="46e96-135">The salt size must be 8 bytes or larger.</span></span>  
  
 <span data-ttu-id="46e96-136">W dokumencie RFC 2898 opisano metody tworzenia wektora klucza i inicjalizacji (IV) przy użyciu hasła i soli.</span><span class="sxs-lookup"><span data-stu-id="46e96-136">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="46e96-137">Można użyć PBKDF2, funkcji wyprowadzania klucza opartego na hasłach, aby generować klucze przy użyciu funkcji pseudoklasy, która umożliwia generowanie kluczy praktycznie nieograniczonej długości.</span><span class="sxs-lookup"><span data-stu-id="46e96-137">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="46e96-138"><xref:System.Security.Cryptography.Rfc2898DeriveBytes> Klasa może służyć do tworzenia klucza pochodnego z klucza podstawowego i innych parametrów.</span><span class="sxs-lookup"><span data-stu-id="46e96-138">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="46e96-139">W funkcji wyprowadzania klucza opartego na hasłach klucz podstawowy jest hasłem, a inne parametry są wartością soli i liczbą iteracji.</span><span class="sxs-lookup"><span data-stu-id="46e96-139">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="46e96-140">Aby uzyskać więcej informacji na temat PBKDF2, zobacz RFC 2898, "PKCS #5: Specyfikacja kryptografii oparta na hasłach w wersji 2,0, dostępna w [witrynie Request for Comments w sieci Web](https://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="46e96-140">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](https://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="46e96-141">Aby uzyskać szczegółowe informacje, zobacz sekcję 5,2, "PBKDF2".</span><span class="sxs-lookup"><span data-stu-id="46e96-141">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="46e96-142">Nigdy nie należy nakodować hasła w kodzie źródłowym.</span><span class="sxs-lookup"><span data-stu-id="46e96-142">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="46e96-143">Stałe kodowane hasła można pobrać z zestawu przy użyciu [Ildasm. exe (Il dezasembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), używając edytora szesnastkowego lub po prostu otwierając zestaw w edytorze tekstu, takim jak Notepad. exe.</span><span class="sxs-lookup"><span data-stu-id="46e96-143">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="46e96-144">Określony rozmiar ziarna jest mniejszy niż 8 bajtów.</span><span class="sxs-lookup"><span data-stu-id="46e96-144">The specified salt size is smaller than 8 bytes.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="46e96-145">Hasło lub sól jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="46e96-145">The password or salt is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="46e96-146">Usługi kryptograficzne</span><span class="sxs-lookup"><span data-stu-id="46e96-146">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (byte[] password, byte[] salt, int iterations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] password, unsigned int8[] salt, int32 iterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As Byte(), salt As Byte(), iterations As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(cli::array &lt;System::Byte&gt; ^ password, cli::array &lt;System::Byte&gt; ^ salt, int iterations);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : byte[] * byte[] * int -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, salt, iterations)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="password" Type="System.Byte[]" />
        <Parameter Name="salt" Type="System.Byte[]" />
        <Parameter Name="iterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="46e96-147">Hasło użyte do wygenerowania klucza.</span><span class="sxs-lookup"><span data-stu-id="46e96-147">The password used to derive the key.</span></span></param>
        <param name="salt"><span data-ttu-id="46e96-148">Sól klucza używana do wyprowadzania klucza.</span><span class="sxs-lookup"><span data-stu-id="46e96-148">The key salt used to derive the key.</span></span></param>
        <param name="iterations"><span data-ttu-id="46e96-149">Liczba iteracji dla operacji.</span><span class="sxs-lookup"><span data-stu-id="46e96-149">The number of iterations for the operation.</span></span></param>
        <summary><span data-ttu-id="46e96-150">Inicjuje nowe wystąpienie <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> klasy przy użyciu hasła, soli i liczby iteracji, aby utworzyć klucz.</span><span class="sxs-lookup"><span data-stu-id="46e96-150">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using a password, a salt, and number of iterations to derive the key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46e96-151">Rozmiar ziarna nie może być większy niż 8 bajtów, a liczba iteracji musi być większa od zera.</span><span class="sxs-lookup"><span data-stu-id="46e96-151">The salt size must be 8 bytes or larger and the iteration count must be greater than zero.</span></span> <span data-ttu-id="46e96-152">Minimalna zalecana liczba iteracji to 1000.</span><span class="sxs-lookup"><span data-stu-id="46e96-152">The minimum recommended number of iterations is 1000.</span></span>  
  
 <span data-ttu-id="46e96-153">W dokumencie RFC 2898 opisano metody tworzenia wektora klucza i inicjalizacji (IV) przy użyciu hasła i soli.</span><span class="sxs-lookup"><span data-stu-id="46e96-153">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="46e96-154">Można użyć PBKDF2, funkcji wyprowadzania klucza opartego na hasłach, aby generować klucze przy użyciu funkcji pseudoklasy, która umożliwia generowanie kluczy praktycznie nieograniczonej długości.</span><span class="sxs-lookup"><span data-stu-id="46e96-154">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="46e96-155"><xref:System.Security.Cryptography.Rfc2898DeriveBytes> Klasa może służyć do tworzenia klucza pochodnego z klucza podstawowego i innych parametrów.</span><span class="sxs-lookup"><span data-stu-id="46e96-155">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="46e96-156">W funkcji wyprowadzania klucza opartego na hasłach klucz podstawowy jest hasłem, a inne parametry są wartością soli i liczbą iteracji.</span><span class="sxs-lookup"><span data-stu-id="46e96-156">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="46e96-157">Aby uzyskać więcej informacji na temat PBKDF2, zobacz RFC 2898, "PKCS #5: Specyfikacja kryptografii oparta na hasłach w wersji 2,0, dostępna w [witrynie Request for Comments w sieci Web](https://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="46e96-157">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](https://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="46e96-158">Aby uzyskać szczegółowe informacje, zobacz sekcję 5,2, "PBKDF2".</span><span class="sxs-lookup"><span data-stu-id="46e96-158">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="46e96-159">Nigdy nie należy nakodować hasła w kodzie źródłowym.</span><span class="sxs-lookup"><span data-stu-id="46e96-159">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="46e96-160">Stałe kodowane hasła można pobrać z zestawu przy użyciu [Ildasm. exe (Il dezasembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), używając edytora szesnastkowego lub po prostu otwierając zestaw w edytorze tekstu, takim jak Notepad. exe.</span><span class="sxs-lookup"><span data-stu-id="46e96-160">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="46e96-161">Określony rozmiar ziarna jest mniejszy niż 8 bajtów lub liczba iteracji jest mniejsza niż 1.</span><span class="sxs-lookup"><span data-stu-id="46e96-161">The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="46e96-162">Hasło lub sól jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="46e96-162">The password or salt is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, byte[] salt, int iterations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, unsigned int8[] salt, int32 iterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, salt As Byte(), iterations As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, cli::array &lt;System::Byte&gt; ^ salt, int iterations);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : string * byte[] * int -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, salt, iterations)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="salt" Type="System.Byte[]" />
        <Parameter Name="iterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="46e96-163">Hasło użyte do wygenerowania klucza.</span><span class="sxs-lookup"><span data-stu-id="46e96-163">The password used to derive the key.</span></span></param>
        <param name="salt"><span data-ttu-id="46e96-164">Sól klucza używana do wyprowadzania klucza.</span><span class="sxs-lookup"><span data-stu-id="46e96-164">The key salt used to derive the key.</span></span></param>
        <param name="iterations"><span data-ttu-id="46e96-165">Liczba iteracji dla operacji.</span><span class="sxs-lookup"><span data-stu-id="46e96-165">The number of iterations for the operation.</span></span></param>
        <summary><span data-ttu-id="46e96-166">Inicjuje nowe wystąpienie <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> klasy przy użyciu hasła, soli i liczby iteracji, aby utworzyć klucz.</span><span class="sxs-lookup"><span data-stu-id="46e96-166">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using a password, a salt, and number of iterations to derive the key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46e96-167">Rozmiar ziarna nie może być większy niż 8 bajtów, a liczba iteracji musi być większa od zera.</span><span class="sxs-lookup"><span data-stu-id="46e96-167">The salt size must be 8 bytes or larger and the iteration count must be greater than zero.</span></span> <span data-ttu-id="46e96-168">Minimalna zalecana liczba iteracji to 1000.</span><span class="sxs-lookup"><span data-stu-id="46e96-168">The minimum recommended number of iterations is 1000.</span></span>  
  
 <span data-ttu-id="46e96-169">W dokumencie RFC 2898 opisano metody tworzenia wektora klucza i inicjalizacji (IV) przy użyciu hasła i soli.</span><span class="sxs-lookup"><span data-stu-id="46e96-169">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="46e96-170">Można użyć PBKDF2, funkcji wyprowadzania klucza opartego na hasłach, aby generować klucze przy użyciu funkcji pseudoklasy, która umożliwia generowanie kluczy praktycznie nieograniczonej długości.</span><span class="sxs-lookup"><span data-stu-id="46e96-170">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="46e96-171"><xref:System.Security.Cryptography.Rfc2898DeriveBytes> Klasa może służyć do tworzenia klucza pochodnego z klucza podstawowego i innych parametrów.</span><span class="sxs-lookup"><span data-stu-id="46e96-171">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="46e96-172">W funkcji wyprowadzania klucza opartego na hasłach klucz podstawowy jest hasłem, a inne parametry są wartością soli i liczbą iteracji.</span><span class="sxs-lookup"><span data-stu-id="46e96-172">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="46e96-173">Aby uzyskać więcej informacji na temat PBKDF2, zobacz RFC 2898, "PKCS #5: Specyfikacja kryptografii oparta na hasłach w wersji 2,0, dostępna w [witrynie Request for Comments w sieci Web](https://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="46e96-173">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](https://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="46e96-174">Aby uzyskać szczegółowe informacje, zobacz sekcję 5,2, "PBKDF2".</span><span class="sxs-lookup"><span data-stu-id="46e96-174">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="46e96-175">Nigdy nie należy nakodować hasła w kodzie źródłowym.</span><span class="sxs-lookup"><span data-stu-id="46e96-175">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="46e96-176">Stałe kodowane hasła można pobrać z zestawu przy użyciu [Ildasm. exe (Il dezasembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), używając edytora szesnastkowego lub po prostu otwierając zestaw w edytorze tekstu, takim jak Notepad. exe.</span><span class="sxs-lookup"><span data-stu-id="46e96-176">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46e96-177">Poniższy przykład kodu używa <xref:System.Security.Cryptography.Rfc2898DeriveBytes> klasy do tworzenia dwóch identycznych kluczy <xref:System.Security.Cryptography.TripleDES> dla klasy.</span><span class="sxs-lookup"><span data-stu-id="46e96-177">The following code example uses the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class to create two identical keys for the <xref:System.Security.Cryptography.TripleDES> class.</span></span>  <span data-ttu-id="46e96-178">Następnie szyfruje i odszyfrowuje niektóre dane przy użyciu kluczy.</span><span class="sxs-lookup"><span data-stu-id="46e96-178">It then encrypts and decrypts some data using the keys.</span></span>  
  
 [!code-cpp[rfc28981#1](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#1)]
 [!code-csharp[rfc28981#1](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#1)]
 [!code-vb[rfc28981#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="46e96-179">Określony rozmiar ziarna jest mniejszy niż 8 bajtów lub liczba iteracji jest mniejsza niż 1.</span><span class="sxs-lookup"><span data-stu-id="46e96-179">The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="46e96-180">Hasło lub sól jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="46e96-180">The password or salt is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="46e96-181">Usługi kryptograficzne</span><span class="sxs-lookup"><span data-stu-id="46e96-181">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, int saltSize, int iterations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, int32 saltSize, int32 iterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, saltSize As Integer, iterations As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, int saltSize, int iterations);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : string * int * int -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, saltSize, iterations)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="saltSize" Type="System.Int32" />
        <Parameter Name="iterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="46e96-182">Hasło użyte do wygenerowania klucza.</span><span class="sxs-lookup"><span data-stu-id="46e96-182">The password used to derive the key.</span></span></param>
        <param name="saltSize"><span data-ttu-id="46e96-183">Rozmiar losowej soli, która ma być generowana przez klasę.</span><span class="sxs-lookup"><span data-stu-id="46e96-183">The size of the random salt that you want the class to generate.</span></span></param>
        <param name="iterations"><span data-ttu-id="46e96-184">Liczba iteracji dla operacji.</span><span class="sxs-lookup"><span data-stu-id="46e96-184">The number of iterations for the operation.</span></span></param>
        <summary><span data-ttu-id="46e96-185">Inicjuje nowe wystąpienie <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> klasy przy użyciu hasła, rozmiaru ziarna i liczby iteracji, aby utworzyć klucz.</span><span class="sxs-lookup"><span data-stu-id="46e96-185">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using a password, a salt size, and number of iterations to derive the key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46e96-186">Rozmiar ziarna nie może być większy niż 8 bajtów, a liczba iteracji musi być większa od zera.</span><span class="sxs-lookup"><span data-stu-id="46e96-186">The salt size must be 8 bytes or larger and the iteration count must be greater than zero.</span></span> <span data-ttu-id="46e96-187">Minimalna zalecana liczba iteracji to 1000.</span><span class="sxs-lookup"><span data-stu-id="46e96-187">The minimum recommended number of iterations is 1000.</span></span>  
  
 <span data-ttu-id="46e96-188">W dokumencie RFC 2898 opisano metody tworzenia wektora klucza i inicjalizacji (IV) przy użyciu hasła i soli.</span><span class="sxs-lookup"><span data-stu-id="46e96-188">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="46e96-189">Można użyć PBKDF2, funkcji wyprowadzania klucza opartego na hasłach, aby generować klucze przy użyciu funkcji pseudoklasy, która umożliwia generowanie kluczy praktycznie nieograniczonej długości.</span><span class="sxs-lookup"><span data-stu-id="46e96-189">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="46e96-190"><xref:System.Security.Cryptography.Rfc2898DeriveBytes> Klasa może służyć do tworzenia klucza pochodnego z klucza podstawowego i innych parametrów.</span><span class="sxs-lookup"><span data-stu-id="46e96-190">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="46e96-191">W funkcji wyprowadzania klucza opartego na hasłach klucz podstawowy jest hasłem, a inne parametry są wartością soli i liczbą iteracji.</span><span class="sxs-lookup"><span data-stu-id="46e96-191">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="46e96-192">Aby uzyskać więcej informacji na temat PBKDF2, zobacz RFC 2898, "PKCS #5: Specyfikacja kryptografii oparta na hasłach w wersji 2,0, dostępna w [witrynie Request for Comments w sieci Web](https://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="46e96-192">For more information on PBKDF2, see RFC 2898,"PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](https://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="46e96-193">Aby uzyskać szczegółowe informacje, zobacz sekcję 5,2, "PBKDF2".</span><span class="sxs-lookup"><span data-stu-id="46e96-193">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="46e96-194">Nigdy nie należy nakodować hasła w kodzie źródłowym.</span><span class="sxs-lookup"><span data-stu-id="46e96-194">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="46e96-195">Stałe kodowane hasła można pobrać z zestawu przy użyciu [Ildasm. exe (Il dezasembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), używając edytora szesnastkowego lub po prostu otwierając zestaw w edytorze tekstu, takim jak Notepad. exe.</span><span class="sxs-lookup"><span data-stu-id="46e96-195">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="46e96-196">Określony rozmiar ziarna jest mniejszy niż 8 bajtów lub liczba iteracji jest mniejsza niż 1.</span><span class="sxs-lookup"><span data-stu-id="46e96-196">The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="46e96-197">Hasło lub sól jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="46e96-197">The password or salt is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46e96-198"><paramref name="iterations" />jest poza zakresem.</span><span class="sxs-lookup"><span data-stu-id="46e96-198"><paramref name="iterations" /> is out of range.</span></span> <span data-ttu-id="46e96-199">Ten parametr wymaga liczby nieujemnej.</span><span class="sxs-lookup"><span data-stu-id="46e96-199">This parameter requires a non-negative number.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="46e96-200">Usługi kryptograficzne</span><span class="sxs-lookup"><span data-stu-id="46e96-200">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (byte[] password, byte[] salt, int iterations, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] password, unsigned int8[] salt, int32 iterations, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As Byte(), salt As Byte(), iterations As Integer, hashAlgorithm As HashAlgorithmName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(cli::array &lt;System::Byte&gt; ^ password, cli::array &lt;System::Byte&gt; ^ salt, int iterations, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : byte[] * byte[] * int * System.Security.Cryptography.HashAlgorithmName -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, salt, iterations, hashAlgorithm)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="password" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="salt" Type="System.Byte[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="iterations" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="46e96-201">Hasło, które ma być używane do wyprowadzania klucza.</span><span class="sxs-lookup"><span data-stu-id="46e96-201">The password to use to derive the key.</span></span></param>
        <param name="salt"><span data-ttu-id="46e96-202">Kluczowa sól używana do wyprowadzania klucza.</span><span class="sxs-lookup"><span data-stu-id="46e96-202">The key salt to use to derive the key.</span></span></param>
        <param name="iterations"><span data-ttu-id="46e96-203">Liczba iteracji dla operacji.</span><span class="sxs-lookup"><span data-stu-id="46e96-203">The number of iterations for the operation.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="46e96-204">Algorytm wyznaczania wartości skrótu, który ma być używany do wyprowadzania klucza.</span><span class="sxs-lookup"><span data-stu-id="46e96-204">The hash algorithm to use to derive the key.</span></span></param>
        <summary><span data-ttu-id="46e96-205">Inicjuje nowe wystąpienie <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> klasy przy użyciu określonego hasła, soli, liczby iteracji i nazwy algorytmu wyznaczania wartości skrótu, aby utworzyć klucz.</span><span class="sxs-lookup"><span data-stu-id="46e96-205">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using the specified password, salt, number of iterations and the hash algorithm name to derive the key.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46e96-206"><paramref name="saltSize" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="46e96-206"><paramref name="saltSize" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="46e96-207">Właściwość ma wartość<see langword="null" /> lub .<see cref="F:System.String.Empty" /> <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> <paramref name="hashAlgorithm" /></span><span class="sxs-lookup"><span data-stu-id="46e96-207">The <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> property of <paramref name="hashAlgorithm" /> is either <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="46e96-208">Nazwa algorytmu wyznaczania wartości skrótu jest nieprawidłowa.</span><span class="sxs-lookup"><span data-stu-id="46e96-208">Hash algorithm name is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, byte[] salt, int iterations, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, unsigned int8[] salt, int32 iterations, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, salt As Byte(), iterations As Integer, hashAlgorithm As HashAlgorithmName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, cli::array &lt;System::Byte&gt; ^ salt, int iterations, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : string * byte[] * int * System.Security.Cryptography.HashAlgorithmName -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, salt, iterations, hashAlgorithm)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="salt" Type="System.Byte[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="iterations" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="46e96-209">Hasło, które ma być używane do wyprowadzania klucza.</span><span class="sxs-lookup"><span data-stu-id="46e96-209">The password to use to derive the key.</span></span></param>
        <param name="salt"><span data-ttu-id="46e96-210">Kluczowa sól używana do wyprowadzania klucza.</span><span class="sxs-lookup"><span data-stu-id="46e96-210">The key salt to use to derive the key.</span></span></param>
        <param name="iterations"><span data-ttu-id="46e96-211">Liczba iteracji dla operacji.</span><span class="sxs-lookup"><span data-stu-id="46e96-211">The number of iterations for the operation.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="46e96-212">Algorytm wyznaczania wartości skrótu, który ma być używany do wyprowadzania klucza.</span><span class="sxs-lookup"><span data-stu-id="46e96-212">The hash algorithm to use to derive the key.</span></span></param>
        <summary><span data-ttu-id="46e96-213">Inicjuje nowe wystąpienie <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> klasy przy użyciu określonego hasła, soli, liczby iteracji i nazwy algorytmu wyznaczania wartości skrótu, aby utworzyć klucz.</span><span class="sxs-lookup"><span data-stu-id="46e96-213">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using the specified password, salt, number of iterations and the hash algorithm name to derive the key.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="46e96-214">Właściwość ma wartość<see langword="null" /> lub .<see cref="F:System.String.Empty" /> <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> <paramref name="hashAlgorithm" /></span><span class="sxs-lookup"><span data-stu-id="46e96-214">The <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> property of <paramref name="hashAlgorithm" /> is either <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="46e96-215">Nazwa algorytmu wyznaczania wartości skrótu jest nieprawidłowa.</span><span class="sxs-lookup"><span data-stu-id="46e96-215">Hash algorithm name is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, int saltSize, int iterations, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, int32 saltSize, int32 iterations, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, saltSize As Integer, iterations As Integer, hashAlgorithm As HashAlgorithmName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, int saltSize, int iterations, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : string * int * int * System.Security.Cryptography.HashAlgorithmName -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, saltSize, iterations, hashAlgorithm)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="password" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="saltSize" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="iterations" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="46e96-216">Hasło, które ma być używane do wyprowadzania klucza.</span><span class="sxs-lookup"><span data-stu-id="46e96-216">The password to use to derive the key.</span></span></param>
        <param name="saltSize"><span data-ttu-id="46e96-217">Rozmiar losowej soli, która ma być generowana przez klasę.</span><span class="sxs-lookup"><span data-stu-id="46e96-217">The size of the random salt that you want the class to generate.</span></span></param>
        <param name="iterations"><span data-ttu-id="46e96-218">Liczba iteracji dla operacji.</span><span class="sxs-lookup"><span data-stu-id="46e96-218">The number of iterations for the operation.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="46e96-219">Algorytm wyznaczania wartości skrótu, który ma być używany do wyprowadzania klucza.</span><span class="sxs-lookup"><span data-stu-id="46e96-219">The hash algorithm to use to derive the key.</span></span></param>
        <summary><span data-ttu-id="46e96-220">Inicjuje nowe wystąpienie <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> klasy przy użyciu określonego hasła, rozmiaru ziarna, liczby iteracji i nazwy algorytmu wyznaczania wartości skrótu, aby utworzyć klucz.</span><span class="sxs-lookup"><span data-stu-id="46e96-220">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using the specified password, salt size, number of iterations and the hash algorithm name to derive the key.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46e96-221"><paramref name="saltSize" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="46e96-221"><paramref name="saltSize" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="46e96-222">Właściwość ma wartość<see langword="null" /> lub .<see cref="F:System.String.Empty" /> <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> <paramref name="hashAlgorithm" /></span><span class="sxs-lookup"><span data-stu-id="46e96-222">The <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> property of <paramref name="hashAlgorithm" /> is either <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="46e96-223">Nazwa algorytmu wyznaczania wartości skrótu jest nieprawidłowa.</span><span class="sxs-lookup"><span data-stu-id="46e96-223">Hash algorithm name is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CryptDeriveKey">
      <MemberSignature Language="C#" Value="public byte[] CryptDeriveKey (string algname, string alghashname, int keySize, byte[] rgbIV);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] CryptDeriveKey(string algname, string alghashname, int32 keySize, unsigned int8[] rgbIV) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CryptDeriveKey (algname As String, alghashname As String, keySize As Integer, rgbIV As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ CryptDeriveKey(System::String ^ algname, System::String ^ alghashname, int keySize, cli::array &lt;System::Byte&gt; ^ rgbIV);" />
      <MemberSignature Language="F#" Value="member this.CryptDeriveKey : string * string * int * byte[] -&gt; byte[]" Usage="rfc2898DeriveBytes.CryptDeriveKey (algname, alghashname, keySize, rgbIV)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algname" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="alghashname" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="keySize" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="rgbIV" Type="System.Byte[]" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="algname"><span data-ttu-id="46e96-224">Nazwa algorytmu, dla którego ma zostać pochodny klucz.</span><span class="sxs-lookup"><span data-stu-id="46e96-224">The algorithm name for which to derive the key.</span></span></param>
        <param name="alghashname"><span data-ttu-id="46e96-225">Nazwa algorytmu wyznaczania wartości skrótu, który ma być używany do wyprowadzania klucza.</span><span class="sxs-lookup"><span data-stu-id="46e96-225">The hash algorithm name to use to derive the key.</span></span></param>
        <param name="keySize"><span data-ttu-id="46e96-226">Rozmiar klucza w bitach, który ma być pochodny.</span><span class="sxs-lookup"><span data-stu-id="46e96-226">The size of the key, in bits, to derive.</span></span></param>
        <param name="rgbIV"><span data-ttu-id="46e96-227">Wektor inicjalizacji (IV) do użycia w celu uzyskania klucza.</span><span class="sxs-lookup"><span data-stu-id="46e96-227">The initialization vector (IV) to use to derive the key.</span></span></param>
        <summary><span data-ttu-id="46e96-228">Dziedziczy klucz kryptograficzny z <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="46e96-228">Derives a cryptographic key from the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> object.</span></span></summary>
        <returns><span data-ttu-id="46e96-229">Klucz pochodny.</span><span class="sxs-lookup"><span data-stu-id="46e96-229">The derived key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46e96-230">Ta funkcja jest otoką dla funkcji API kryptografii CryptDeriveKey () i jest przeznaczona do oferowania współdziałania z aplikacjami za pomocą interfejsu API kryptografii.</span><span class="sxs-lookup"><span data-stu-id="46e96-230">This function is a wrapper for the Crypto API function CryptDeriveKey(), and is intended to offer interoperability with applications using the Crypto API.</span></span>  
  
 <span data-ttu-id="46e96-231">`keySize` Jeśli parametr ma wartość 0 bitów, zostanie użyty domyślny rozmiar klucza dla określonego algorytmu.</span><span class="sxs-lookup"><span data-stu-id="46e96-231">If the `keySize` parameter is set to 0 bits, the default key size for the specified algorithm is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="46e96-232"><paramref name="keySize" /> Parametr jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="46e96-232">The <paramref name="keySize" /> parameter is incorrect.</span></span>  
  
<span data-ttu-id="46e96-233">—lub—</span><span class="sxs-lookup"><span data-stu-id="46e96-233">-or-</span></span> 
<span data-ttu-id="46e96-234">Nie można uzyskać dostawcy usług kryptograficznych.</span><span class="sxs-lookup"><span data-stu-id="46e96-234">The cryptographic service provider (CSP) cannot be acquired.</span></span>  
  
<span data-ttu-id="46e96-235">—lub—</span><span class="sxs-lookup"><span data-stu-id="46e96-235">-or-</span></span> 
<span data-ttu-id="46e96-236"><paramref name="algname" /> Parametr nie jest prawidłową nazwą algorytmu.</span><span class="sxs-lookup"><span data-stu-id="46e96-236">The <paramref name="algname" /> parameter is not a valid algorithm name.</span></span>  
  
<span data-ttu-id="46e96-237">—lub—</span><span class="sxs-lookup"><span data-stu-id="46e96-237">-or-</span></span> 
<span data-ttu-id="46e96-238"><paramref name="alghashname" /> Parametr nie jest prawidłową nazwą algorytmu wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="46e96-238">The <paramref name="alghashname" /> parameter is not a valid hash algorithm name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="rfc2898DeriveBytes.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="46e96-239"><see langword="true" />Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> do zwolnienia tylko zasobów niezarządzanych.</span><span class="sxs-lookup"><span data-stu-id="46e96-239"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="46e96-240">Zwalnia niezarządzane zasoby używane przez <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> klasę i opcjonalnie zwalnia zarządzane zasoby.</span><span class="sxs-lookup"><span data-stu-id="46e96-240">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46e96-241">Ta metoda jest wywoływana przez metodę publiczną `Dispose()` `Finalize` i metodę.</span><span class="sxs-lookup"><span data-stu-id="46e96-241">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="46e96-242">`Dispose()`wywołuje metodę chronioną `Dispose(Boolean)` `disposing` z parametrem ustawionym `true`na.</span><span class="sxs-lookup"><span data-stu-id="46e96-242">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="46e96-243">`Finalize`wywołuje `Dispose` `false`z `disposing` ustawionym na.</span><span class="sxs-lookup"><span data-stu-id="46e96-243">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="46e96-244">Gdy parametr ma wartość `true`, ta metoda zwalnia wszystkie zasoby przechowywane przez wszystkie obiekty zarządzane, do <xref:System.Security.Cryptography.Rfc2898DeriveBytes> których odwołują się te odwołania. `disposing`</span><span class="sxs-lookup"><span data-stu-id="46e96-244">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.Rfc2898DeriveBytes> references.</span></span> <span data-ttu-id="46e96-245">Ta metoda wywołuje `Dispose()` metodę każdego przywoływanego obiektu.</span><span class="sxs-lookup"><span data-stu-id="46e96-245">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="46e96-246">
            <see langword="Dispose" />może być wywoływana wiele razy przez inne obiekty.</span><span class="sxs-lookup"><span data-stu-id="46e96-246">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="46e96-247">Podczas zastępowania <see langword="Dispose(Boolean)" />należy zachować ostrożność, aby nie odwoływać się do obiektów, które zostały wcześniej <see langword="Dispose" />usunięte we wcześniejszej wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="46e96-247">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="46e96-248">Aby uzyskać więcej informacji na temat sposobu <see langword="Dispose(Boolean)" />implementacji, zobacz [implementowanie metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="46e96-248">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="46e96-249">Aby uzyskać więcej informacji <see langword="Dispose" /> na <see langword="Finalize" />temat i, zobacz [Oczyszczanie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="46e96-249">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override byte[] GetBytes (int cb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetBytes(int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (cb As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetBytes(int cb);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : int -&gt; byte[]" Usage="rfc2898DeriveBytes.GetBytes cb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cb"><span data-ttu-id="46e96-250">Liczba wygenerowanych losowo bajtów klucza do wygenerowania.</span><span class="sxs-lookup"><span data-stu-id="46e96-250">The number of pseudo-random key bytes to generate.</span></span></param>
        <summary><span data-ttu-id="46e96-251">Zwraca pseudo-losowy klucz dla tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="46e96-251">Returns the pseudo-random key for this object.</span></span></summary>
        <returns><span data-ttu-id="46e96-252">Tablica bajtowa jest wypełniona pseudo-losowym bajtem klucza.</span><span class="sxs-lookup"><span data-stu-id="46e96-252">A byte array filled with pseudo-random key bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46e96-253">Klasa implementuje funkcję PBKDF2 przy użyciu generatora numerów pseudolosowych opartych na <xref:System.Security.Cryptography.HMACSHA1>. <xref:System.Security.Cryptography.Rfc2898DeriveBytes></span><span class="sxs-lookup"><span data-stu-id="46e96-253">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class implements PBKDF2 functionality by using a pseudorandom number generator based on <xref:System.Security.Cryptography.HMACSHA1>.</span></span> <span data-ttu-id="46e96-254">Klasa przyjmuje hasło, sól i liczbę iteracji, a następnie generuje klucze za pomocą wywołań <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> metody. <xref:System.Security.Cryptography.Rfc2898DeriveBytes></span><span class="sxs-lookup"><span data-stu-id="46e96-254">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class takes a password, a salt, and an iteration count, and then generates keys through calls to the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method.</span></span> <span data-ttu-id="46e96-255">Powtórzone wywołania tej metody nie generują tego samego klucza; Zamiast tego, dołączane są dwa <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> wywołania metody `cb` z wartością parametru o `20` jest `cb` równoważne wywołaniem <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> metody raz z wartością `40`parametru.</span><span class="sxs-lookup"><span data-stu-id="46e96-255">Repeated calls to this method will not generate the same key; instead, appending two calls of the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method with a `cb` parameter value of `20` is the equivalent of calling the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method once with a `cb` parameter value of `40`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46e96-256">Poniższy przykład pokazuje, jak używać metody, <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> Aby uzyskać klucz dla <xref:System.Security.Cryptography.Rfc2898DeriveBytes>wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="46e96-256">The following example shows how to use the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method to get the key for an instance of <xref:System.Security.Cryptography.Rfc2898DeriveBytes>.</span></span> <span data-ttu-id="46e96-257">Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Security.Cryptography.Rfc2898DeriveBytes> klasy.</span><span class="sxs-lookup"><span data-stu-id="46e96-257">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class.</span></span>  
  
 [!code-cpp[rfc28981#2](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#2)]
 [!code-csharp[rfc28981#2](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#2)]
 [!code-vb[rfc28981#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46e96-258"><paramref name="cb" />jest poza zakresem.</span><span class="sxs-lookup"><span data-stu-id="46e96-258"><paramref name="cb" /> is out of range.</span></span> <span data-ttu-id="46e96-259">Ten parametr wymaga liczby nieujemnej.</span><span class="sxs-lookup"><span data-stu-id="46e96-259">This parameter requires a non-negative number.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="46e96-260">Usługi kryptograficzne</span><span class="sxs-lookup"><span data-stu-id="46e96-260">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.HashAlgorithmName HashAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.HashAlgorithmName HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Rfc2898DeriveBytes.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HashAlgorithm As HashAlgorithmName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::HashAlgorithmName HashAlgorithm { System::Security::Cryptography::HashAlgorithmName get(); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithm : System.Security.Cryptography.HashAlgorithmName" Usage="System.Security.Cryptography.Rfc2898DeriveBytes.HashAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithmName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IterationCount">
      <MemberSignature Language="C#" Value="public int IterationCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IterationCount" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount" />
      <MemberSignature Language="VB.NET" Value="Public Property IterationCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IterationCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IterationCount : int with get, set" Usage="System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="46e96-261">Pobiera lub ustawia liczbę iteracji dla operacji.</span><span class="sxs-lookup"><span data-stu-id="46e96-261">Gets or sets the number of iterations for the operation.</span></span></summary>
        <value><span data-ttu-id="46e96-262">Liczba iteracji dla operacji.</span><span class="sxs-lookup"><span data-stu-id="46e96-262">The number of iterations for the operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46e96-263">Liczba iteracji to Liczba wykonań operacji.</span><span class="sxs-lookup"><span data-stu-id="46e96-263">Iteration count is the number of times an operation is performed.</span></span> <span data-ttu-id="46e96-264">W przypadku tej metody liczba powinna być większa od zera.</span><span class="sxs-lookup"><span data-stu-id="46e96-264">For this method, the count should be greater than zero.</span></span> <span data-ttu-id="46e96-265">Minimalna zalecana liczba iteracji to 1000.</span><span class="sxs-lookup"><span data-stu-id="46e96-265">The minimum recommended number of iterations is 1000.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46e96-266">Poniższy przykład pokazuje, jak użyć właściwości, <xref:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount%2A> aby wyświetlić liczbę iteracji użytych w generowaniu klucza.</span><span class="sxs-lookup"><span data-stu-id="46e96-266">The following example shows how to use the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount%2A> property to display the number of iterations used in the generation of the key.</span></span> <span data-ttu-id="46e96-267">Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Security.Cryptography.Rfc2898DeriveBytes> klasy.</span><span class="sxs-lookup"><span data-stu-id="46e96-267">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class.</span></span>  
  
 [!code-cpp[rfc28981#3](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#3)]
 [!code-csharp[rfc28981#3](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#3)]
 [!code-vb[rfc28981#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="46e96-268">Liczba iteracji jest mniejsza niż 1.</span><span class="sxs-lookup"><span data-stu-id="46e96-268">The number of iterations is less than 1.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="46e96-269">Usługi kryptograficzne</span><span class="sxs-lookup"><span data-stu-id="46e96-269">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberSignature Language="F#" Value="override this.Reset : unit -&gt; unit" Usage="rfc2898DeriveBytes.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="46e96-270">Resetuje stan operacji.</span><span class="sxs-lookup"><span data-stu-id="46e96-270">Resets the state of the operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46e96-271">Ta metoda jest wywoływana automatycznie, jeśli liczba soli lub iteracji jest modyfikowana.</span><span class="sxs-lookup"><span data-stu-id="46e96-271">This method is automatically called if the salt or iteration count is modified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46e96-272">Poniższy przykład pokazuje, <xref:System.Security.Cryptography.Rfc2898DeriveBytes.Reset%2A> jak używać metody.</span><span class="sxs-lookup"><span data-stu-id="46e96-272">The following example shows how to use the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.Reset%2A> method.</span></span> <span data-ttu-id="46e96-273">Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Security.Cryptography.Rfc2898DeriveBytes> klasy.</span><span class="sxs-lookup"><span data-stu-id="46e96-273">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class.</span></span>  
  
 [!code-cpp[rfc28981#5](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#5)]
 [!code-csharp[rfc28981#5](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#5)]
 [!code-vb[rfc28981#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="46e96-274">Usługi kryptograficzne</span><span class="sxs-lookup"><span data-stu-id="46e96-274">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Salt">
      <MemberSignature Language="C#" Value="public byte[] Salt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Salt" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Rfc2898DeriveBytes.Salt" />
      <MemberSignature Language="VB.NET" Value="Public Property Salt As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Salt { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Salt : byte[] with get, set" Usage="System.Security.Cryptography.Rfc2898DeriveBytes.Salt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="46e96-275">Pobiera lub ustawia wartość soli klucza dla operacji.</span><span class="sxs-lookup"><span data-stu-id="46e96-275">Gets or sets the key salt value for the operation.</span></span></summary>
        <value><span data-ttu-id="46e96-276">Wartość soli klucza dla operacji.</span><span class="sxs-lookup"><span data-stu-id="46e96-276">The key salt value for the operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46e96-277">Sól, losowy zestaw bajtów służy do nieautoryzowanego odszyfrowywania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="46e96-277">Salt, a random set of bytes, is used to make unauthorized decrypting of a message more difficult.</span></span> <span data-ttu-id="46e96-278">Atak słownikowy to atak polegający na tym, że osoba atakująca próbuje odszyfrować zaszyfrowany komunikat, porównując zaszyfrowaną wartość z wcześniej obliczonymi zaszyfrowanymi wartościami dla najbardziej możliwych kluczy.</span><span class="sxs-lookup"><span data-stu-id="46e96-278">A dictionary attack is an attack in which the attacker attempts to decrypt an encrypted message by comparing the encrypted value with previously computed encrypted values for the most likely keys.</span></span> <span data-ttu-id="46e96-279">Ten atak jest znacznie trudniejszy przez wprowadzenie soli lub losowych bajtów na końcu hasła przed pochodnym kluczem.</span><span class="sxs-lookup"><span data-stu-id="46e96-279">This attack is made much more difficult by the introduction of salt, or random bytes, at the end of the password before the key derivation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="46e96-280">Określony rozmiar ziarna jest mniejszy niż 8 bajtów.</span><span class="sxs-lookup"><span data-stu-id="46e96-280">The specified salt size is smaller than 8 bytes.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="46e96-281">Sól jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="46e96-281">The salt is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="46e96-282">Usługi kryptograficzne</span><span class="sxs-lookup"><span data-stu-id="46e96-282">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
