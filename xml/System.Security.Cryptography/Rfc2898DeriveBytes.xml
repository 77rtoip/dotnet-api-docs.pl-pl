<Type Name="Rfc2898DeriveBytes" FullName="System.Security.Cryptography.Rfc2898DeriveBytes">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e285ca1271a28895045fb33d43ebf5e6709370cf" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Rfc2898DeriveBytes : System.Security.Cryptography.DeriveBytes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Rfc2898DeriveBytes extends System.Security.Cryptography.DeriveBytes" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Rfc2898DeriveBytes" />
  <TypeSignature Language="VB.NET" Value="Public Class Rfc2898DeriveBytes&#xA;Inherits DeriveBytes" />
  <TypeSignature Language="C++ CLI" Value="public ref class Rfc2898DeriveBytes : System::Security::Cryptography::DeriveBytes" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.DeriveBytes</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b402f-101">Implementuje opartego na hasłach klucza pochodnego funkcjonalność, PBKDF2, za pomocą pseudolosowego generatora liczb na podstawie <see cref="T:System.Security.Cryptography.HMACSHA1" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b402f-101">Implements password-based key derivation functionality, PBKDF2, by using a pseudo-random number generator based on <see cref="T:System.Security.Cryptography.HMACSHA1" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b402f-102"><xref:System.Security.Cryptography.Rfc2898DeriveBytes> pobiera hasło, soli i liczba iteracji, a następnie generuje klucze za pomocą wywołania <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="b402f-102"><xref:System.Security.Cryptography.Rfc2898DeriveBytes> takes a password, a salt, and an iteration count, and then generates keys through calls to the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method.</span></span>  
  
 <span data-ttu-id="b402f-103">RFC 2898 zawiera metody do tworzenia kluczy i wektora inicjowania (IV) z hasła i soli.</span><span class="sxs-lookup"><span data-stu-id="b402f-103">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="b402f-104">PBKDF2, funkcja wyprowadzania klucza opartego na hasłach, służy do tworzenia kluczy przy użyciu funkcji pseudolosowego, która umożliwia klucze praktycznie nieograniczoną długość ma zostać wygenerowane.</span><span class="sxs-lookup"><span data-stu-id="b402f-104">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="b402f-105"><xref:System.Security.Cryptography.Rfc2898DeriveBytes> Klasa może być używana do tworzenia klucza pochodnego z klucza podstawowego i innych parametrów.</span><span class="sxs-lookup"><span data-stu-id="b402f-105">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="b402f-106">Funkcja wyprowadzania klucza opartego na hasłach klucz podstawowy to hasło, a inne parametry są wartości zaburzającej i liczby iteracji.</span><span class="sxs-lookup"><span data-stu-id="b402f-106">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="b402f-107">Aby uzyskać więcej informacji na temat PBKDF2 zobacz RFC 2898 "PKCS #5: opartego na hasłach kryptografii specyfikacji wersji 2.0," dostępne na [żądań dla witryny sieci Web komentarze](http://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="b402f-107">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](http://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="b402f-108">W sekcji 5.2, "PBKDF2", aby uzyskać szczegółowe informacje.</span><span class="sxs-lookup"><span data-stu-id="b402f-108">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b402f-109">Nigdy nie kodowane w hasła w kodzie źródłowym.</span><span class="sxs-lookup"><span data-stu-id="b402f-109">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="b402f-110">Ustalony hasła mogą być pobrane z zestawu przy użyciu [Ildasm.exe (dezasembler IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), za pomocą edytora szesnastkową lub po prostu otwarcie zestawu w edytorze tekstu, takich jak Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="b402f-110">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b402f-111">Poniższy przykład kodu wykorzystuje <xref:System.Security.Cryptography.Rfc2898DeriveBytes> klasę, aby utworzyć dwa identyczne klucze dla <xref:System.Security.Cryptography.TripleDES> klasy.</span><span class="sxs-lookup"><span data-stu-id="b402f-111">The following code example uses the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class to create two identical keys for the <xref:System.Security.Cryptography.TripleDES> class.</span></span>  <span data-ttu-id="b402f-112">Następnie szyfruje i odszyfrowuje niektórych danych przy użyciu kluczy.</span><span class="sxs-lookup"><span data-stu-id="b402f-112">It then encrypts and decrypts some data using the keys.</span></span>  
  
 [!code-cpp[rfc28981#1](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#1)]
 [!code-csharp[rfc28981#1](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#1)]
 [!code-vb[rfc28981#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b402f-113">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-113">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, byte[] salt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, unsigned int8[] salt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, salt As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, cli::array &lt;System::Byte&gt; ^ salt);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="salt" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="password">
          <span data-ttu-id="b402f-114">Hasło używane do uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-114">The password used to derive the key.</span>
          </span>
        </param>
        <param name="salt">
          <span data-ttu-id="b402f-115">Soli klucza, używany do uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-115">The key salt used to derive the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b402f-116">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> przy użyciu hasła i soli do uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-116">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using a password and salt to derive the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b402f-117">Rozmiar ziarna musi wynosić 8 bajtów lub większą.</span><span class="sxs-lookup"><span data-stu-id="b402f-117">The salt size must be 8 bytes or larger.</span></span>  
  
 <span data-ttu-id="b402f-118">RFC 2898 zawiera metody do tworzenia kluczy i wektora inicjowania (IV) z hasła i soli.</span><span class="sxs-lookup"><span data-stu-id="b402f-118">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="b402f-119">PBKDF2, funkcja wyprowadzania klucza opartego na hasłach, służy do tworzenia kluczy przy użyciu funkcji pseudolosowego, która umożliwia klucze praktycznie nieograniczoną długość ma zostać wygenerowane.</span><span class="sxs-lookup"><span data-stu-id="b402f-119">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="b402f-120"><xref:System.Security.Cryptography.Rfc2898DeriveBytes> Klasa może być używana do tworzenia klucza pochodnego z klucza podstawowego i innych parametrów.</span><span class="sxs-lookup"><span data-stu-id="b402f-120">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="b402f-121">Funkcja wyprowadzania klucza opartego na hasłach klucz podstawowy to hasło, a inne parametry są wartości zaburzającej i liczby iteracji.</span><span class="sxs-lookup"><span data-stu-id="b402f-121">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="b402f-122">Aby uzyskać więcej informacji na temat PBKDF2 zobacz RFC 2898 "PKCS #5: opartego na hasłach kryptografii specyfikacji wersji 2.0," dostępne na [żądań dla witryny sieci Web komentarze](http://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="b402f-122">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](http://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="b402f-123">W sekcji 5.2, "PBKDF2", aby uzyskać szczegółowe informacje.</span><span class="sxs-lookup"><span data-stu-id="b402f-123">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b402f-124">Nigdy nie kodowane w hasła w kodzie źródłowym.</span><span class="sxs-lookup"><span data-stu-id="b402f-124">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="b402f-125">Ustalony hasła mogą być pobrane z zestawu przy użyciu [Ildasm.exe (dezasembler IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), za pomocą edytora szesnastkową lub po prostu otwarcie zestawu w edytorze tekstu, takich jak Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="b402f-125">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b402f-126">Poniższy przykład kodu wykorzystuje <xref:System.Security.Cryptography.Rfc2898DeriveBytes> klasę, aby utworzyć dwa identyczne klucze dla <xref:System.Security.Cryptography.TripleDES> klasy.</span><span class="sxs-lookup"><span data-stu-id="b402f-126">The following code example uses the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class to create two identical keys for the <xref:System.Security.Cryptography.TripleDES> class.</span></span>  <span data-ttu-id="b402f-127">Następnie szyfruje i odszyfrowuje niektórych danych przy użyciu kluczy.</span><span class="sxs-lookup"><span data-stu-id="b402f-127">It then encrypts and decrypts some data using the keys.</span></span>  
  
 [!code-cpp[rfc28981#1](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#1)]
 [!code-csharp[rfc28981#1](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#1)]
 [!code-vb[rfc28981#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b402f-128">Określony rozmiar ziarna jest mniejszy niż 8 bajtów lub liczba iteracji jest mniejszy niż 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-128">The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b402f-129">Hasło lub ziarna jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-129">The password or salt is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, int saltSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, int32 saltSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, saltSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, int saltSize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="saltSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password">
          <span data-ttu-id="b402f-130">Hasło używane do uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-130">The password used to derive the key.</span>
          </span>
        </param>
        <param name="saltSize">
          <span data-ttu-id="b402f-131">Rozmiar losowe soli interesujące klasy do wygenerowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-131">The size of the random salt that you want the class to generate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b402f-132">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> przy użyciu hasła i rozmiaru ziarna do uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-132">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using the password and salt size to derive the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b402f-133">Rozmiar ziarna musi wynosić 8 bajtów lub większą.</span><span class="sxs-lookup"><span data-stu-id="b402f-133">The salt size must be 8 bytes or larger.</span></span>  
  
 <span data-ttu-id="b402f-134">RFC 2898 zawiera metody do tworzenia kluczy i wektora inicjowania (IV) z hasła i soli.</span><span class="sxs-lookup"><span data-stu-id="b402f-134">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="b402f-135">PBKDF2, funkcja wyprowadzania klucza opartego na hasłach, służy do tworzenia kluczy przy użyciu funkcji pseudolosowego, która umożliwia klucze praktycznie nieograniczoną długość ma zostać wygenerowane.</span><span class="sxs-lookup"><span data-stu-id="b402f-135">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="b402f-136"><xref:System.Security.Cryptography.Rfc2898DeriveBytes> Klasa może być używana do tworzenia klucza pochodnego z klucza podstawowego i innych parametrów.</span><span class="sxs-lookup"><span data-stu-id="b402f-136">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="b402f-137">Funkcja wyprowadzania klucza opartego na hasłach klucz podstawowy to hasło, a inne parametry są wartości zaburzającej i liczby iteracji.</span><span class="sxs-lookup"><span data-stu-id="b402f-137">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="b402f-138">Aby uzyskać więcej informacji na temat PBKDF2 zobacz RFC 2898 "PKCS #5: opartego na hasłach kryptografii specyfikacji wersji 2.0," dostępne na [żądań dla witryny sieci Web komentarze](http://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="b402f-138">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](http://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="b402f-139">W sekcji 5.2, "PBKDF2", aby uzyskać szczegółowe informacje.</span><span class="sxs-lookup"><span data-stu-id="b402f-139">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b402f-140">Nigdy nie kodowane w hasła w kodzie źródłowym.</span><span class="sxs-lookup"><span data-stu-id="b402f-140">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="b402f-141">Ustalony hasła mogą być pobrane z zestawu przy użyciu [Ildasm.exe (dezasembler IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), za pomocą edytora szesnastkową lub po prostu otwarcie zestawu w edytorze tekstu, takich jak Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="b402f-141">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b402f-142">Określony rozmiar ziarna jest mniejszy niż 8 bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-142">The specified salt size is smaller than 8 bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b402f-143">Hasło lub ziarna jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-143">The password or salt is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (byte[] password, byte[] salt, int iterations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] password, unsigned int8[] salt, int32 iterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As Byte(), salt As Byte(), iterations As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(cli::array &lt;System::Byte&gt; ^ password, cli::array &lt;System::Byte&gt; ^ salt, int iterations);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="password" Type="System.Byte[]" />
        <Parameter Name="salt" Type="System.Byte[]" />
        <Parameter Name="iterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password">
          <span data-ttu-id="b402f-144">Hasło używane do uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-144">The password used to derive the key.</span>
          </span>
        </param>
        <param name="salt">
          <span data-ttu-id="b402f-145">Soli klucza, używany do uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-145">The key salt used to derive the key.</span>
          </span>
        </param>
        <param name="iterations">
          <span data-ttu-id="b402f-146">Liczba iteracji dla tej operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-146">The number of iterations for the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b402f-147">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> uzyskania klucza przy użyciu hasła, soli i liczby iteracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-147">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using a password, a salt, and number of iterations to derive the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b402f-148">Rozmiar ziarna musi wynosić 8 bajtów i większych i liczba iteracji musi być większa niż zero.</span><span class="sxs-lookup"><span data-stu-id="b402f-148">The salt size must be 8 bytes or larger and the iteration count must be greater than zero.</span></span> <span data-ttu-id="b402f-149">Minimalna zalecana liczba iteracji wynosi 1000.</span><span class="sxs-lookup"><span data-stu-id="b402f-149">The minimum recommended number of iterations is 1000.</span></span>  
  
 <span data-ttu-id="b402f-150">RFC 2898 zawiera metody do tworzenia kluczy i wektora inicjowania (IV) z hasła i soli.</span><span class="sxs-lookup"><span data-stu-id="b402f-150">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="b402f-151">PBKDF2, funkcja wyprowadzania klucza opartego na hasłach, służy do tworzenia kluczy przy użyciu funkcji pseudolosowego, która umożliwia klucze praktycznie nieograniczoną długość ma zostać wygenerowane.</span><span class="sxs-lookup"><span data-stu-id="b402f-151">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="b402f-152"><xref:System.Security.Cryptography.Rfc2898DeriveBytes> Klasa może być używana do tworzenia klucza pochodnego z klucza podstawowego i innych parametrów.</span><span class="sxs-lookup"><span data-stu-id="b402f-152">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="b402f-153">Funkcja wyprowadzania klucza opartego na hasłach klucz podstawowy to hasło, a inne parametry są wartości zaburzającej i liczby iteracji.</span><span class="sxs-lookup"><span data-stu-id="b402f-153">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="b402f-154">Aby uzyskać więcej informacji na temat PBKDF2 zobacz RFC 2898 "PKCS #5: opartego na hasłach kryptografii specyfikacji wersji 2.0," dostępne na [żądań dla witryny sieci Web komentarze](http://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="b402f-154">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](http://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="b402f-155">W sekcji 5.2, "PBKDF2", aby uzyskać szczegółowe informacje.</span><span class="sxs-lookup"><span data-stu-id="b402f-155">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b402f-156">Nigdy nie kodowane w hasła w kodzie źródłowym.</span><span class="sxs-lookup"><span data-stu-id="b402f-156">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="b402f-157">Ustalony hasła mogą być pobrane z zestawu przy użyciu [Ildasm.exe (dezasembler IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), za pomocą edytora szesnastkową lub po prostu otwarcie zestawu w edytorze tekstu, takich jak Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="b402f-157">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b402f-158">Określony rozmiar ziarna jest mniejszy niż 8 bajtów lub liczba iteracji jest mniejszy niż 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-158">The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b402f-159">Hasło lub ziarna jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-159">The password or salt is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, byte[] salt, int iterations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, unsigned int8[] salt, int32 iterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, salt As Byte(), iterations As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, cli::array &lt;System::Byte&gt; ^ salt, int iterations);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="salt" Type="System.Byte[]" />
        <Parameter Name="iterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password">
          <span data-ttu-id="b402f-160">Hasło używane do uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-160">The password used to derive the key.</span>
          </span>
        </param>
        <param name="salt">
          <span data-ttu-id="b402f-161">Soli klucza, używany do uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-161">The key salt used to derive the key.</span>
          </span>
        </param>
        <param name="iterations">
          <span data-ttu-id="b402f-162">Liczba iteracji dla tej operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-162">The number of iterations for the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b402f-163">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> uzyskania klucza przy użyciu hasła, soli i liczby iteracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-163">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using a password, a salt, and number of iterations to derive the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b402f-164">Rozmiar ziarna musi wynosić 8 bajtów i większych i liczba iteracji musi być większa niż zero.</span><span class="sxs-lookup"><span data-stu-id="b402f-164">The salt size must be 8 bytes or larger and the iteration count must be greater than zero.</span></span> <span data-ttu-id="b402f-165">Minimalna zalecana liczba iteracji wynosi 1000.</span><span class="sxs-lookup"><span data-stu-id="b402f-165">The minimum recommended number of iterations is 1000.</span></span>  
  
 <span data-ttu-id="b402f-166">RFC 2898 zawiera metody do tworzenia kluczy i wektora inicjowania (IV) z hasła i soli.</span><span class="sxs-lookup"><span data-stu-id="b402f-166">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="b402f-167">PBKDF2, funkcja wyprowadzania klucza opartego na hasłach, służy do tworzenia kluczy przy użyciu funkcji pseudolosowego, która umożliwia klucze praktycznie nieograniczoną długość ma zostać wygenerowane.</span><span class="sxs-lookup"><span data-stu-id="b402f-167">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="b402f-168"><xref:System.Security.Cryptography.Rfc2898DeriveBytes> Klasa może być używana do tworzenia klucza pochodnego z klucza podstawowego i innych parametrów.</span><span class="sxs-lookup"><span data-stu-id="b402f-168">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="b402f-169">Funkcja wyprowadzania klucza opartego na hasłach klucz podstawowy to hasło, a inne parametry są wartości zaburzającej i liczby iteracji.</span><span class="sxs-lookup"><span data-stu-id="b402f-169">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="b402f-170">Aby uzyskać więcej informacji na temat PBKDF2 zobacz RFC 2898 "PKCS #5: opartego na hasłach kryptografii specyfikacji wersji 2.0," dostępne na [żądań dla witryny sieci Web komentarze](http://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="b402f-170">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](http://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="b402f-171">W sekcji 5.2, "PBKDF2", aby uzyskać szczegółowe informacje.</span><span class="sxs-lookup"><span data-stu-id="b402f-171">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b402f-172">Nigdy nie kodowane w hasła w kodzie źródłowym.</span><span class="sxs-lookup"><span data-stu-id="b402f-172">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="b402f-173">Ustalony hasła mogą być pobrane z zestawu przy użyciu [Ildasm.exe (dezasembler IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), za pomocą edytora szesnastkową lub po prostu otwarcie zestawu w edytorze tekstu, takich jak Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="b402f-173">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b402f-174">Poniższy przykład kodu wykorzystuje <xref:System.Security.Cryptography.Rfc2898DeriveBytes> klasę, aby utworzyć dwa identyczne klucze dla <xref:System.Security.Cryptography.TripleDES> klasy.</span><span class="sxs-lookup"><span data-stu-id="b402f-174">The following code example uses the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class to create two identical keys for the <xref:System.Security.Cryptography.TripleDES> class.</span></span>  <span data-ttu-id="b402f-175">Następnie szyfruje i odszyfrowuje niektórych danych przy użyciu kluczy.</span><span class="sxs-lookup"><span data-stu-id="b402f-175">It then encrypts and decrypts some data using the keys.</span></span>  
  
 [!code-cpp[rfc28981#1](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#1)]
 [!code-csharp[rfc28981#1](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#1)]
 [!code-vb[rfc28981#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b402f-176">Określony rozmiar ziarna jest mniejszy niż 8 bajtów lub liczba iteracji jest mniejszy niż 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-176">The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b402f-177">Hasło lub ziarna jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-177">The password or salt is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, int saltSize, int iterations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, int32 saltSize, int32 iterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, saltSize As Integer, iterations As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, int saltSize, int iterations);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="saltSize" Type="System.Int32" />
        <Parameter Name="iterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password">
          <span data-ttu-id="b402f-178">Hasło używane do uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-178">The password used to derive the key.</span>
          </span>
        </param>
        <param name="saltSize">
          <span data-ttu-id="b402f-179">Rozmiar losowe soli interesujące klasy do wygenerowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-179">The size of the random salt that you want the class to generate.</span>
          </span>
        </param>
        <param name="iterations">
          <span data-ttu-id="b402f-180">Liczba iteracji dla tej operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-180">The number of iterations for the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b402f-181">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> uzyskania klucza przy użyciu hasła, rozmiaru ziarna i liczby iteracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-181">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using a password, a salt size, and number of iterations to derive the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b402f-182">Rozmiar ziarna musi wynosić 8 bajtów i większych i liczba iteracji musi być większa niż zero.</span><span class="sxs-lookup"><span data-stu-id="b402f-182">The salt size must be 8 bytes or larger and the iteration count must be greater than zero.</span></span> <span data-ttu-id="b402f-183">Minimalna zalecana liczba iteracji wynosi 1000.</span><span class="sxs-lookup"><span data-stu-id="b402f-183">The minimum recommended number of iterations is 1000.</span></span>  
  
 <span data-ttu-id="b402f-184">RFC 2898 zawiera metody do tworzenia kluczy i wektora inicjowania (IV) z hasła i soli.</span><span class="sxs-lookup"><span data-stu-id="b402f-184">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="b402f-185">PBKDF2, funkcja wyprowadzania klucza opartego na hasłach, służy do tworzenia kluczy przy użyciu funkcji pseudolosowego, która umożliwia klucze praktycznie nieograniczoną długość ma zostać wygenerowane.</span><span class="sxs-lookup"><span data-stu-id="b402f-185">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="b402f-186"><xref:System.Security.Cryptography.Rfc2898DeriveBytes> Klasa może być używana do tworzenia klucza pochodnego z klucza podstawowego i innych parametrów.</span><span class="sxs-lookup"><span data-stu-id="b402f-186">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="b402f-187">Funkcja wyprowadzania klucza opartego na hasłach klucz podstawowy to hasło, a inne parametry są wartości zaburzającej i liczby iteracji.</span><span class="sxs-lookup"><span data-stu-id="b402f-187">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="b402f-188">Aby uzyskać więcej informacji o PBKDF2, zobacz RFC 2898 "PKCS nr 5: opartego na hasłach kryptografii specyfikacji wersji 2.0," dostępne na [żądań dla witryny sieci Web komentarze](http://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="b402f-188">For more information on PBKDF2, see RFC 2898,"PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](http://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="b402f-189">W sekcji 5.2, "PBKDF2", aby uzyskać szczegółowe informacje.</span><span class="sxs-lookup"><span data-stu-id="b402f-189">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b402f-190">Nigdy nie kodowane w hasła w kodzie źródłowym.</span><span class="sxs-lookup"><span data-stu-id="b402f-190">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="b402f-191">Ustalony hasła mogą być pobrane z zestawu przy użyciu [Ildasm.exe (dezasembler IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), za pomocą edytora szesnastkową lub po prostu otwarcie zestawu w edytorze tekstu, takich jak Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="b402f-191">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b402f-192">Określony rozmiar ziarna jest mniejszy niż 8 bajtów lub liczba iteracji jest mniejszy niż 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-192">The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b402f-193">Hasło lub ziarna jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-193">The password or salt is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b402f-194">
            <paramref name="iterations" /> jest poza zakresem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-194">
              <paramref name="iterations" /> is out of range.</span>
          </span>
          <span data-ttu-id="b402f-195">Ten parametr wymaga liczby nieujemnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-195">This parameter requires a non-negative number.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (byte[] password, byte[] salt, int iterations, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] password, unsigned int8[] salt, int32 iterations, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As Byte(), salt As Byte(), iterations As Integer, hashAlgorithm As HashAlgorithmName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(cli::array &lt;System::Byte&gt; ^ password, cli::array &lt;System::Byte&gt; ^ salt, int iterations, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.Byte[]" />
        <Parameter Name="salt" Type="System.Byte[]" />
        <Parameter Name="iterations" Type="System.Int32" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="password">To be added.</param>
        <param name="salt">To be added.</param>
        <param name="iterations">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, byte[] salt, int iterations, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, unsigned int8[] salt, int32 iterations, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, salt As Byte(), iterations As Integer, hashAlgorithm As HashAlgorithmName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, cli::array &lt;System::Byte&gt; ^ salt, int iterations, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="salt" Type="System.Byte[]" />
        <Parameter Name="iterations" Type="System.Int32" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="password">To be added.</param>
        <param name="salt">To be added.</param>
        <param name="iterations">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, int saltSize, int iterations, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, int32 saltSize, int32 iterations, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, saltSize As Integer, iterations As Integer, hashAlgorithm As HashAlgorithmName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, int saltSize, int iterations, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="saltSize" Type="System.Int32" />
        <Parameter Name="iterations" Type="System.Int32" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="password">To be added.</param>
        <param name="saltSize">To be added.</param>
        <param name="iterations">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CryptDeriveKey">
      <MemberSignature Language="C#" Value="public byte[] CryptDeriveKey (string algname, string alghashname, int keySize, byte[] rgbIV);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] CryptDeriveKey(string algname, string alghashname, int32 keySize, unsigned int8[] rgbIV) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CryptDeriveKey (algname As String, alghashname As String, keySize As Integer, rgbIV As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ CryptDeriveKey(System::String ^ algname, System::String ^ alghashname, int keySize, cli::array &lt;System::Byte&gt; ^ rgbIV);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algname" Type="System.String" />
        <Parameter Name="alghashname" Type="System.String" />
        <Parameter Name="keySize" Type="System.Int32" />
        <Parameter Name="rgbIV" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algname">
          <span data-ttu-id="b402f-196">Nazwa algorytmu, dla której do uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-196">The algorithm name for which to derive the key.</span>
          </span>
        </param>
        <param name="alghashname">
          <span data-ttu-id="b402f-197">Nazwa algorytmu wyznaczania wartości skrótu do użycia do uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-197">The hash algorithm name to use to derive the key.</span>
          </span>
        </param>
        <param name="keySize">
          <span data-ttu-id="b402f-198">Rozmiar klucza w bitach, do uzyskania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-198">The size of the key, in bits, to derive.</span>
          </span>
        </param>
        <param name="rgbIV">
          <span data-ttu-id="b402f-199">Wektor inicjowania (IV) na potrzeby uzyskania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-199">The initialization vector (IV) to use to derive the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b402f-200">Pochodzi z klucza kryptograficznego <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-200">Derives a cryptographic key from the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b402f-201">Klucza pochodnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-201">The derived key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b402f-202">Ta funkcja jest otoką elementu dla funkcji interfejsu API szyfrowania CryptDeriveKey() i jest przeznaczona do zaoferowania współdziałanie z aplikacjami za pomocą interfejsu API szyfrowania.</span><span class="sxs-lookup"><span data-stu-id="b402f-202">This function is a wrapper for the Crypto API function CryptDeriveKey(), and is intended to offer interoperability with applications using the Crypto API.</span></span>  
  
 <span data-ttu-id="b402f-203">Jeśli `keySize` parametr ma wartość 0 bitów, jest używany domyślny rozmiar klucza określony algorytm.</span><span class="sxs-lookup"><span data-stu-id="b402f-203">If the `keySize` parameter is set to 0 bits, the default key size for the specified algorithm is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="b402f-204">
            <paramref name="keySize" /> Parametr jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-204">The <paramref name="keySize" /> parameter is incorrect.</span>
          </span>
          <span data-ttu-id="b402f-205">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-205">-or-</span>
          </span>
          <span data-ttu-id="b402f-206">Nie można uzyskać dostawcy usług kryptograficznych (CSP).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-206">The cryptographic service provider (CSP) cannot be acquired.</span>
          </span>
          <span data-ttu-id="b402f-207">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-207">-or-</span>
          </span>
          <span data-ttu-id="b402f-208">
            <paramref name="algname" /> Parametr nie jest nazwą prawidłową algorytmu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-208">The <paramref name="algname" /> parameter is not a valid algorithm name.</span>
          </span>
          <span data-ttu-id="b402f-209">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-209">-or-</span>
          </span>
          <span data-ttu-id="b402f-210">
            <paramref name="alghashname" /> Parametr nie jest prawidłowy skrót nazwę algorytmu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-210">The <paramref name="alghashname" /> parameter is not a valid hash algorithm name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="b402f-211">
            <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko zasoby niezarządzane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-211">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b402f-212">Zwalnia zasoby niezarządzane używane przez <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> i opcjonalnie zwalnia zasoby zarządzane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-212">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b402f-213">Ta metoda jest wywoływana przez metodę publiczną `Dispose()` — metoda i `Finalize` metody.</span><span class="sxs-lookup"><span data-stu-id="b402f-213">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="b402f-214">`Dispose()` wywołuje chronioną metodę `Dispose(Boolean)` metody z `disposing` ustawiono parametr `true`.</span><span class="sxs-lookup"><span data-stu-id="b402f-214">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="b402f-215">`Finalize` wywołuje `Dispose` z `disposing` ustawioną `false`.</span><span class="sxs-lookup"><span data-stu-id="b402f-215">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="b402f-216">Gdy `disposing` parametr jest `true`, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane przez to <xref:System.Security.Cryptography.Rfc2898DeriveBytes> odwołania.</span><span class="sxs-lookup"><span data-stu-id="b402f-216">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.Rfc2898DeriveBytes> references.</span></span> <span data-ttu-id="b402f-217">Ta metoda wywołuje `Dispose()` metody każdego odwołuje się do obiektu.</span><span class="sxs-lookup"><span data-stu-id="b402f-217">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b402f-218">
              <see langword="Dispose" /> można wywoływać wielokrotnie przez inne obiekty.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b402f-218">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="b402f-219">W przypadku przesłaniania <see langword="Dispose(Boolean)" />, nie odwołują się obiekty, które zostały wcześniej zlikwidowane w wywołaniu wcześniejszych <see langword="Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b402f-219">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="b402f-220">Aby uzyskać więcej informacji na temat sposobu wdrażania <see langword="Dispose(Boolean)" />, zobacz [implementacja metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="b402f-220">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="b402f-221">Aby uzyskać więcej informacji na temat <see langword="Dispose" /> i <see langword="Finalize" />, zobacz [czyszczenie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="b402f-221">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override byte[] GetBytes (int cb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetBytes(int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (cb As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetBytes(int cb);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cb">
          <span data-ttu-id="b402f-222">Liczba pseudolosowego klucza bajtów do wygenerowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-222">The number of pseudo-random key bytes to generate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b402f-223">Zwraca pseudolosowego klucza dla tego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-223">Returns the pseudo-random key for this object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b402f-224">Tablica bajtów wypełniony pseudolosowego bajtów klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-224">A byte array filled with pseudo-random key bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b402f-225"><xref:System.Security.Cryptography.Rfc2898DeriveBytes> Klasa implementuje funkcje PBKDF2 przy użyciu pseudolosowych generatora liczb na podstawie <xref:System.Security.Cryptography.HMACSHA1>.</span><span class="sxs-lookup"><span data-stu-id="b402f-225">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class implements PBKDF2 functionality by using a pseudorandom number generator based on <xref:System.Security.Cryptography.HMACSHA1>.</span></span> <span data-ttu-id="b402f-226"><xref:System.Security.Cryptography.Rfc2898DeriveBytes> Klasa ma hasła, soli i liczba iteracji, a następnie generuje klucze za pomocą wywołania <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="b402f-226">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class takes a password, a salt, and an iteration count, and then generates keys through calls to the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method.</span></span> <span data-ttu-id="b402f-227">Powtarzane wywołania tej metody nie będą generowane ten sam klucz; Zamiast tego dołączanie dwóch wywołania <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> metody z `cb` wartości parametru `20` jest odpowiednikiem wywołania metody <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> metody jeden raz z `cb` wartości parametru `40`.</span><span class="sxs-lookup"><span data-stu-id="b402f-227">Repeated calls to this method will not generate the same key; instead, appending two calls of the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method with a `cb` parameter value of `20` is the equivalent of calling the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method once with a `cb` parameter value of `40`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b402f-228">Poniższy przykład przedstawia użycie <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> metody, aby pobrać klucz dla wystąpienia <xref:System.Security.Cryptography.Rfc2898DeriveBytes>.</span><span class="sxs-lookup"><span data-stu-id="b402f-228">The following example shows how to use the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method to get the key for an instance of <xref:System.Security.Cryptography.Rfc2898DeriveBytes>.</span></span> <span data-ttu-id="b402f-229">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.Cryptography.Rfc2898DeriveBytes> klasy.</span><span class="sxs-lookup"><span data-stu-id="b402f-229">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class.</span></span>  
  
 [!code-cpp[rfc28981#2](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#2)]
 [!code-csharp[rfc28981#2](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#2)]
 [!code-vb[rfc28981#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b402f-230">
            <paramref name="cb" /> jest poza zakresem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-230">
              <paramref name="cb" /> is out of range.</span>
          </span>
          <span data-ttu-id="b402f-231">Ten parametr wymaga liczby nieujemnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-231">This parameter requires a non-negative number.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.HashAlgorithmName HashAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.HashAlgorithmName HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Rfc2898DeriveBytes.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HashAlgorithm As HashAlgorithmName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::HashAlgorithmName HashAlgorithm { System::Security::Cryptography::HashAlgorithmName get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithmName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IterationCount">
      <MemberSignature Language="C#" Value="public int IterationCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IterationCount" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount" />
      <MemberSignature Language="VB.NET" Value="Public Property IterationCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IterationCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b402f-232">Pobiera lub ustawia liczbę iteracji dla tej operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-232">Gets or sets the number of iterations for the operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b402f-233">Liczba iteracji dla tej operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-233">The number of iterations for the operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b402f-234">Liczba iteracji jest liczba operacji.</span><span class="sxs-lookup"><span data-stu-id="b402f-234">Iteration count is the number of times an operation is performed.</span></span> <span data-ttu-id="b402f-235">Tę metodę liczba powinna być większa od zera.</span><span class="sxs-lookup"><span data-stu-id="b402f-235">For this method, the count should be greater than zero.</span></span> <span data-ttu-id="b402f-236">Minimalna zalecana liczba iteracji wynosi 1000.</span><span class="sxs-lookup"><span data-stu-id="b402f-236">The minimum recommended number of iterations is 1000.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b402f-237">Poniższy przykład przedstawia użycie <xref:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount%2A> właściwość, aby wyświetlić liczbę iteracji podczas generowania klucza.</span><span class="sxs-lookup"><span data-stu-id="b402f-237">The following example shows how to use the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount%2A> property to display the number of iterations used in the generation of the key.</span></span> <span data-ttu-id="b402f-238">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.Cryptography.Rfc2898DeriveBytes> klasy.</span><span class="sxs-lookup"><span data-stu-id="b402f-238">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class.</span></span>  
  
 [!code-cpp[rfc28981#3](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#3)]
 [!code-csharp[rfc28981#3](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#3)]
 [!code-vb[rfc28981#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b402f-239">Liczba iteracji jest mniejszy niż 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-239">The number of iterations is less than 1.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b402f-240">Resetuje stan operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-240">Resets the state of the operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b402f-241">Ta metoda jest wywoływana automatycznie, jeśli liczba soli lub iteracji zostanie zmodyfikowany.</span><span class="sxs-lookup"><span data-stu-id="b402f-241">This method is automatically called if the salt or iteration count is modified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b402f-242">Poniższy przykład przedstawia użycie <xref:System.Security.Cryptography.Rfc2898DeriveBytes.Reset%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="b402f-242">The following example shows how to use the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.Reset%2A> method.</span></span> <span data-ttu-id="b402f-243">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Security.Cryptography.Rfc2898DeriveBytes> klasy.</span><span class="sxs-lookup"><span data-stu-id="b402f-243">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class.</span></span>  
  
 [!code-cpp[rfc28981#5](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#5)]
 [!code-csharp[rfc28981#5](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#5)]
 [!code-vb[rfc28981#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Salt">
      <MemberSignature Language="C#" Value="public byte[] Salt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Salt" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Rfc2898DeriveBytes.Salt" />
      <MemberSignature Language="VB.NET" Value="Public Property Salt As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Salt { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b402f-244">Pobiera lub ustawia wartość zaburzająca klucza dla operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-244">Gets or sets the key salt value for the operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b402f-245">Wartość zaburzająca klucza dla tej operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-245">The key salt value for the operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b402f-246">Wartość zaburzająca, zbiór losowych bajtów, umożliwia nieautoryzowanego odszyfrowywania wiadomości trudniejsze.</span><span class="sxs-lookup"><span data-stu-id="b402f-246">Salt, a random set of bytes, is used to make unauthorized decrypting of a message more difficult.</span></span> <span data-ttu-id="b402f-247">Atak słownikowy jest atak, w którym atakujący próbuje odszyfrować zaszyfrowanego komunikatu na podstawie porównania ilości zaszyfrowanych wartości z wcześniej obliczonych wartości zaszyfrowanych kluczy najprawdopodobniej.</span><span class="sxs-lookup"><span data-stu-id="b402f-247">A dictionary attack is an attack in which the attacker attempts to decrypt an encrypted message by comparing the encrypted value with previously computed encrypted values for the most likely keys.</span></span> <span data-ttu-id="b402f-248">Atak się znacznie trudniejsze przez wprowadzenie soli lub losowych bajtów, na końcu hasła przed klucza pochodnego.</span><span class="sxs-lookup"><span data-stu-id="b402f-248">This attack is made much more difficult by the introduction of salt, or random bytes, at the end of the password before the key derivation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b402f-249">Określony rozmiar ziarna jest mniejszy niż 8 bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-249">The specified salt size is smaller than 8 bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b402f-250">Jest soli <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b402f-250">The salt is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>