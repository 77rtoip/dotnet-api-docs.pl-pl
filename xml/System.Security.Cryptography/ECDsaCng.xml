<Type Name="ECDsaCng" FullName="System.Security.Cryptography.ECDsaCng">
  <TypeSignature Language="C#" Value="public sealed class ECDsaCng : System.Security.Cryptography.ECDsa" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ECDsaCng extends System.Security.Cryptography.ECDsa" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ECDsaCng" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ECDsaCng&#xA;Inherits ECDsa" />
  <TypeSignature Language="C++ CLI" Value="public ref class ECDsaCng sealed : System::Security::Cryptography::ECDsa" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.ECDsa</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="295ad-101">Udostępnia implementację kryptografii nowej generacji (CNG) z korzenia krzywej Digital Signature Algorithm (ECDSA).</span><span class="sxs-lookup"><span data-stu-id="295ad-101">Provides a Cryptography Next Generation (CNG) implementation of the Elliptic Curve Digital Signature Algorithm (ECDSA).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="295ad-102">Ta klasa pochodzi od <xref:System.Security.Cryptography.ECDsa> abstrakcyjnej klasy podstawowej.</span><span class="sxs-lookup"><span data-stu-id="295ad-102">This class derives from the <xref:System.Security.Cryptography.ECDsa> abstract base class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="295ad-103">Poniższy przykład przedstawia użycie <xref:System.Security.Cryptography.ECDsaCng> klasy do podpisywania wiadomości i sposobu użycia podpis, aby sprawdzić, czy wiadomość nie została zmieniona.</span><span class="sxs-lookup"><span data-stu-id="295ad-103">The following example shows how to use the <xref:System.Security.Cryptography.ECDsaCng> class to sign a message and how to use the signature to verify that the message has not been altered.</span></span>  
  
 [!code-csharp[ECDsaCng#1](~/samples/snippets/csharp/VS_Snippets_CLR/ecdsacng/cs/program.cs#1)]
 [!code-vb[ECDsaCng#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ecdsacng/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="295ad-104">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.ECDsaCng" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="295ad-104">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDsaCng" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDsaCng ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDsaCng();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="295ad-105">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.ECDsaCng" /> klasy przy użyciu losowego pary kluczy.</span><span class="sxs-lookup"><span data-stu-id="295ad-105">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDsaCng" /> class with a random key pair.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="295ad-106">Losowe pary kluczy ma długość klucza publicznego 521 bitów.</span><span class="sxs-lookup"><span data-stu-id="295ad-106">The random key pair has a public key length of 521 bits.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="295ad-107">Klasy kryptografii nowej generacji (CNG) nie są obsługiwane w tym systemie.</span><span class="sxs-lookup"><span data-stu-id="295ad-107">Cryptography Next Generation (CNG) classes are not supported on this system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDsaCng (int keySize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDsaCng(int keySize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="keySize"><span data-ttu-id="295ad-108">Rozmiar klucza.</span><span class="sxs-lookup"><span data-stu-id="295ad-108">The size of the key.</span></span> <span data-ttu-id="295ad-109">Nieprawidłowy rozmiar klucza to 256, 384 i 521 usługi bits.</span><span class="sxs-lookup"><span data-stu-id="295ad-109">Valid key sizes are 256, 384, and 521 bits.</span></span></param>
        <summary><span data-ttu-id="295ad-110">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.ECDsaCng" /> klasy z pary kluczy losowych, używając określonego rozmiaru klucza.</span><span class="sxs-lookup"><span data-stu-id="295ad-110">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDsaCng" /> class with a random key pair, using the specified key size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="295ad-111">Losowe pary kluczy mają długość klucza publicznego, zdefiniowane przez `keySize` parametru.</span><span class="sxs-lookup"><span data-stu-id="295ad-111">The random key pair will have the public key length defined by the `keySize` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="295ad-112">Klasy kryptografii nowej generacji (CNG) nie są obsługiwane w tym systemie.</span><span class="sxs-lookup"><span data-stu-id="295ad-112">Cryptography Next Generation (CNG) classes are not supported on this system.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="295ad-113"><paramref name="keySize" /> Określa nieprawidłową długość.</span><span class="sxs-lookup"><span data-stu-id="295ad-113"><paramref name="keySize" /> specifies an invalid length.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDsaCng (System.Security.Cryptography.CngKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.CngKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.CngKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As CngKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDsaCng(System::Security::Cryptography::CngKey ^ key);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.CngKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="295ad-114">Klucz, który będzie używany jako dane wejściowe, aby operacje kryptograficzne wykonywane przez bieżący obiekt.</span><span class="sxs-lookup"><span data-stu-id="295ad-114">The key that will be used as input to the cryptographic operations performed by the current object.</span></span></param>
        <summary><span data-ttu-id="295ad-115">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.ECDsaCng" /> przy użyciu określonego <see cref="T:System.Security.Cryptography.CngKey" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="295ad-115">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDsaCng" /> class by using the specified <see cref="T:System.Security.Cryptography.CngKey" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="295ad-116"><paramref name="key" /> nie określono grupy eliptycznej krzywej Digital Signature Algorithm (ECDSA).</span><span class="sxs-lookup"><span data-stu-id="295ad-116"><paramref name="key" /> does not specify an Elliptic Curve Digital Signature Algorithm (ECDSA) group.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="295ad-117"><paramref name="key" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="295ad-117"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="295ad-118">Klasy kryptografii nowej generacji (CNG) nie są obsługiwane w tym systemie.</span><span class="sxs-lookup"><span data-stu-id="295ad-118">Cryptography Next Generation (CNG) classes are not supported on this system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDsaCng (System.Security.Cryptography.ECCurve curve);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Cryptography.ECCurve curve) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.ECCurve)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (curve As ECCurve)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDsaCng(System::Security::Cryptography::ECCurve curve);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="curve" Type="System.Security.Cryptography.ECCurve" />
      </Parameters>
      <Docs>
        <param name="curve"><span data-ttu-id="295ad-119">Krzywej służący do generowania pary kluczy publiczny/prywatny.</span><span class="sxs-lookup"><span data-stu-id="295ad-119">The curve used to generate the public/private key pair.</span></span></param>
        <summary><span data-ttu-id="295ad-120">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.ECDsaCng" /> którego pary kluczy publiczny/prywatny jest generowany krzywej określonej klasy.</span><span class="sxs-lookup"><span data-stu-id="295ad-120">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDsaCng" /> class whose public/private key pair is generated over the specified curve.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="295ad-121">`curve` należy sprawdzić poprawność (czyli musi zwracać `true`) przekazany do <xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType> — metoda i musi być prime nazwanych lub jawnego.</span><span class="sxs-lookup"><span data-stu-id="295ad-121">`curve` must validate (that is, it must return `true`) when passed to the <xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType> method and must be either a named or explicit prime.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="295ad-122"><paramref name="curve" /> Nie można zweryfikować.</span><span class="sxs-lookup"><span data-stu-id="295ad-122"><paramref name="curve" /> does not validate.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportExplicitParameters">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ECParameters ExportExplicitParameters (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Security.Cryptography.ECParameters ExportExplicitParameters(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.ExportExplicitParameters(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExportExplicitParameters (includePrivateParameters As Boolean) As ECParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ECParameters ExportExplicitParameters(bool includePrivateParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters">
          <span data-ttu-id="295ad-123"><see langword="true" /> Aby uwzględnić parametry prywatny; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="295ad-123"><see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="295ad-124">Eksportuje klucza i krzywej jawne parametry używane przez dany obiekt cryptography (ECC) na krzywej eliptycznej <see cref="T:System.Security.Cryptography.ECParameters" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="295ad-124">Exports the key and explicit curve parameters used by the Elliptic curve cryptography (ECC) object into an <see cref="T:System.Security.Cryptography.ECParameters" /> object.</span></span></summary>
        <returns><span data-ttu-id="295ad-125">Klucz i krzywej jawne parametry używane przez obiekt ECC.</span><span class="sxs-lookup"><span data-stu-id="295ad-125">The key and explicit curve parameters used by the ECC object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="295ad-126">Wystąpił błąd podczas uzyskiwania wartości krzywą.</span><span class="sxs-lookup"><span data-stu-id="295ad-126">An error occurred while obtaining the curve values.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="295ad-127">Jawne eksportowanie jest nieobsługiwane przez tę platformę.</span><span class="sxs-lookup"><span data-stu-id="295ad-127">Explicit export is not supported by this platform.</span></span> <span data-ttu-id="295ad-128">Wymagany jest system Windows 10 lub nowszej.</span><span class="sxs-lookup"><span data-stu-id="295ad-128">Windows 10 or higher is required.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExportParameters">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ECParameters ExportParameters (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Security.Cryptography.ECParameters ExportParameters(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.ExportParameters(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExportParameters (includePrivateParameters As Boolean) As ECParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ECParameters ExportParameters(bool includePrivateParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters">
          <span data-ttu-id="295ad-129"><see langword="true" /> Aby uwzględnić parametry prywatny; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="295ad-129"><see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="295ad-130">Eksportuje klucz używany na krzywej eliptycznej obiektu cryptography (ECC) do <see cref="T:System.Security.Cryptography.ECParameters" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="295ad-130">Exports the key used by the Elliptic curve cryptography (ECC) object into an <see cref="T:System.Security.Cryptography.ECParameters" /> object.</span></span> <span data-ttu-id="295ad-131">Jeśli klucz został utworzony jako krzywą nazwane <see cref="F:System.Security.Cryptography.ECParameters.Curve" /> pole zawiera parametry nazwane krzywej; w przeciwnym razie zawiera jawne parametry.</span><span class="sxs-lookup"><span data-stu-id="295ad-131">If the key was created as a named curve, the <see cref="F:System.Security.Cryptography.ECParameters.Curve" /> field contains named curve parameters; otherwise, it contains explicit parameters.</span></span></summary>
        <returns><span data-ttu-id="295ad-132">Parametry nazwane i kluczowych krzywej używane przez obiekt ECC.</span><span class="sxs-lookup"><span data-stu-id="295ad-132">The key and named curve parameters used by the ECC object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="295ad-133">Wystąpił błąd podczas uzyskiwania wartości krzywą.</span><span class="sxs-lookup"><span data-stu-id="295ad-133">An error occurred while obtaining the curve values.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromXmlString">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="295ad-134">Deserializuje dane klucza z ciągu XML.</span><span class="sxs-lookup"><span data-stu-id="295ad-134">Deserializes the key information from an XML string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromXmlString">
      <MemberSignature Language="C#" Value="public override void FromXmlString (string xmlString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXmlString(string xmlString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXmlString (xmlString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXmlString(System::String ^ xmlString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlString"><span data-ttu-id="295ad-135">Informacje klucza opartych na języku XML do zdeserializowania.</span><span class="sxs-lookup"><span data-stu-id="295ad-135">The XML-based key information to be deserialized.</span></span></param>
        <summary><span data-ttu-id="295ad-136">Ta metoda nie jest zaimplementowana.</span><span class="sxs-lookup"><span data-stu-id="295ad-136">This method is not implemented.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="295ad-137">Aby deserializować klucza XML, użyj <xref:System.Security.Cryptography.ECDsaCng.FromXmlString%28System.String%2CSystem.Security.Cryptography.ECKeyXmlFormat%29> zamiast tego przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="295ad-137">To deserialize an XML key, use the <xref:System.Security.Cryptography.ECDsaCng.FromXmlString%28System.String%2CSystem.Security.Cryptography.ECKeyXmlFormat%29> overload instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="295ad-138">Ta metoda nie została zastąpiona dla tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="295ad-138">This method was not overridden for this instance.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromXmlString">
      <MemberSignature Language="C#" Value="public void FromXmlString (string xml, System.Security.Cryptography.ECKeyXmlFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FromXmlString(string xml, valuetype System.Security.Cryptography.ECKeyXmlFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FromXmlString (xml As String, format As ECKeyXmlFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FromXmlString(System::String ^ xml, System::Security::Cryptography::ECKeyXmlFormat format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xml" Type="System.String" />
        <Parameter Name="format" Type="System.Security.Cryptography.ECKeyXmlFormat" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="295ad-139">Informacje klucza opartych na języku XML do zdeserializowania.</span><span class="sxs-lookup"><span data-stu-id="295ad-139">The XML-based key information to be deserialized.</span></span></param>
        <param name="format"><span data-ttu-id="295ad-140">Jedna z wartości wyliczenia, które określa format ciągu XML.</span><span class="sxs-lookup"><span data-stu-id="295ad-140">One of the enumeration values that specifies the format of the XML string.</span></span> <span data-ttu-id="295ad-141">To jedyny obecnie akceptowane format jest <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span><span class="sxs-lookup"><span data-stu-id="295ad-141">The only currently accepted format is <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span></span></param>
        <summary><span data-ttu-id="295ad-142">Deserializuje dane klucza z ciągu XML przy użyciu określonego formatu.</span><span class="sxs-lookup"><span data-stu-id="295ad-142">Deserializes the key information from an XML string by using the specified format.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="295ad-143"><paramref name="xml" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="295ad-143"><paramref name="xml" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="295ad-144"><paramref name="format" /> Określa nieprawidłowy format.</span><span class="sxs-lookup"><span data-stu-id="295ad-144"><paramref name="format" /> specifies an invalid format.</span></span> <span data-ttu-id="295ad-145">Jest to jedyna wartość zaakceptowane <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span><span class="sxs-lookup"><span data-stu-id="295ad-145">The only accepted value is <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="295ad-146">Inne błędy.</span><span class="sxs-lookup"><span data-stu-id="295ad-146">All other errors.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateKey">
      <MemberSignature Language="C#" Value="public override void GenerateKey (System.Security.Cryptography.ECCurve curve);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GenerateKey(valuetype System.Security.Cryptography.ECCurve curve) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.GenerateKey(System.Security.Cryptography.ECCurve)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GenerateKey (curve As ECCurve)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GenerateKey(System::Security::Cryptography::ECCurve curve);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="curve" Type="System.Security.Cryptography.ECCurve" />
      </Parameters>
      <Docs>
        <param name="curve"><span data-ttu-id="295ad-147">Krzywej używany do generowania klucza.</span><span class="sxs-lookup"><span data-stu-id="295ad-147">The curve to use to generate the key.</span></span></param>
        <summary><span data-ttu-id="295ad-148">Generuje klucz do użycia na potrzeby algorytmem ECDsaCng.</span><span class="sxs-lookup"><span data-stu-id="295ad-148">Generates a key to use for the ECDsaCng algorithm.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="295ad-149"><paramref name="curve" /> Nie można zweryfikować.</span><span class="sxs-lookup"><span data-stu-id="295ad-149"><paramref name="curve" /> does not validate.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CngAlgorithm HashAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CngAlgorithm HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDsaCng.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property HashAlgorithm As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CngAlgorithm ^ HashAlgorithm { System::Security::Cryptography::CngAlgorithm ^ get(); void set(System::Security::Cryptography::CngAlgorithm ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="295ad-150">Pobiera lub ustawia algorytmu wyznaczania wartości skrótu do użycia podczas podpisywania i weryfikowania danych.</span><span class="sxs-lookup"><span data-stu-id="295ad-150">Gets or sets the hash algorithm to use when signing and verifying data.</span></span></summary>
        <value><span data-ttu-id="295ad-151">Obiekt, który określa algorytm wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="295ad-151">An object that specifies the hash algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="295ad-152">Ta właściwość akceptuje następujących algorytmów: <xref:System.Security.Cryptography.CngAlgorithm.MD5%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha1%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha384%2A>, i <xref:System.Security.Cryptography.CngAlgorithm.Sha512%2A>.</span><span class="sxs-lookup"><span data-stu-id="295ad-152">This property accepts the following algorithms: <xref:System.Security.Cryptography.CngAlgorithm.MD5%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha1%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha384%2A>, and <xref:System.Security.Cryptography.CngAlgorithm.Sha512%2A>.</span></span>  
  
 <span data-ttu-id="295ad-153">Inne algorytmy wyznaczania wartości skrótu niestandardowy może być również.</span><span class="sxs-lookup"><span data-stu-id="295ad-153">Other custom hash algorithms may also be used.</span></span>  
  
 <span data-ttu-id="295ad-154">Domyślnym algorytmem jest <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>.</span><span class="sxs-lookup"><span data-stu-id="295ad-154">The default algorithm is <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>.</span></span>  
  
 <span data-ttu-id="295ad-155">Ta właściwość nie jest używana podczas podpisywania lub weryfikowanie danych, który już jest wartość skrótu.</span><span class="sxs-lookup"><span data-stu-id="295ad-155">This property is not used if you are signing or verifying data that is already hashed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="295ad-156">Wartość jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="295ad-156">The value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected override byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashData(class System.IO.Stream data, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashData (data As Stream, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashData(System::IO::Stream ^ data, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected override byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashData(unsigned int8[] data, int32 offset, int32 count, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashData (data As Byte(), offset As Integer, count As Integer, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="count">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportParameters">
      <MemberSignature Language="C#" Value="public override void ImportParameters (System.Security.Cryptography.ECParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ImportParameters(valuetype System.Security.Cryptography.ECParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.ImportParameters(System.Security.Cryptography.ECParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ImportParameters (parameters As ECParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ImportParameters(System::Security::Cryptography::ECParameters parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.ECParameters" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="295ad-157">Parametry krzywą.</span><span class="sxs-lookup"><span data-stu-id="295ad-157">The curve parameters.</span></span></param>
        <summary><span data-ttu-id="295ad-158">Powoduje zastąpienie istniejącego klucza, czy bieżące wystąpienie działa z przez utworzenie nowej <see cref="T:System.Security.Cryptography.CngKey" /> dla struktury parametrów.</span><span class="sxs-lookup"><span data-stu-id="295ad-158">Replaces the existing key that the current instance is working with by creating a new <see cref="T:System.Security.Cryptography.CngKey" /> for the parameters structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="295ad-159">Jeśli `parameters` zawiera tylko <xref:System.Security.Cryptography.ECParameters.Q>tylko klucz publiczny zostanie zaimportowany.</span><span class="sxs-lookup"><span data-stu-id="295ad-159">If `parameters` contains only <xref:System.Security.Cryptography.ECParameters.Q>, only a public key is imported.</span></span> <span data-ttu-id="295ad-160">Jeśli `parameters` zawiera także <xref:System.Security.Cryptography.ECParameters.D>, pary kluczy pełnej została zaimportowana.</span><span class="sxs-lookup"><span data-stu-id="295ad-160">If `parameters` also contains <xref:System.Security.Cryptography.ECParameters.D>, a full key pair is imported.</span></span> <span data-ttu-id="295ad-161"><xref:System.Security.Cryptography.ECParameters.Curve> Pole określa typ krzywej do zaimportowania.</span><span class="sxs-lookup"><span data-stu-id="295ad-161">The <xref:System.Security.Cryptography.ECParameters.Curve> field specifies the type of the curve to import.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="295ad-162"><paramref name="parameters" /> nie zawiera prawidłowych wartości.</span><span class="sxs-lookup"><span data-stu-id="295ad-162"><paramref name="parameters" /> does not contain valid values.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="295ad-163"><paramref name="parameters" /> odwołuje się do krzywej, którego nie można zaimportować.</span><span class="sxs-lookup"><span data-stu-id="295ad-163"><paramref name="parameters" /> references a curve that cannot be imported.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="295ad-164"><paramref name="parameters" /> odwołuje się do krzywej, która nie jest obsługiwana przez tę platformę.</span><span class="sxs-lookup"><span data-stu-id="295ad-164"><paramref name="parameters" /> references a curve that is not supported by this platform.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CngKey Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CngKey Key" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDsaCng.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As CngKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CngKey ^ Key { System::Security::Cryptography::CngKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="295ad-165">Pobiera lub ustawia klucz do użycia podczas podpisywania i weryfikowania danych.</span><span class="sxs-lookup"><span data-stu-id="295ad-165">Gets or sets the key to use when signing and verifying data.</span></span></summary>
        <value><span data-ttu-id="295ad-166">Obiekt, który określa klucz.</span><span class="sxs-lookup"><span data-stu-id="295ad-166">An object that specifies the key.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public override int KeySize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDsaCng.KeySize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property KeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeySize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizes">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalKeySizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDsaCng.LegalKeySizes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LegalKeySizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignData">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="295ad-167">Generuje sygnaturę.</span><span class="sxs-lookup"><span data-stu-id="295ad-167">Generates a signature.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (data As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="295ad-168">Dane wiadomości były podpisane.</span><span class="sxs-lookup"><span data-stu-id="295ad-168">The message data to be signed.</span></span></param>
        <summary><span data-ttu-id="295ad-169">Generuje podpis dla określonych danych.</span><span class="sxs-lookup"><span data-stu-id="295ad-169">Generates a signature for the specified data.</span></span></summary>
        <returns><span data-ttu-id="295ad-170">Podpis cyfrowy dla określonych danych.</span><span class="sxs-lookup"><span data-stu-id="295ad-170">A digital signature for the specified data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="295ad-171">Ta metoda generuje podpis określone dane przez tworzenie skrótów przy użyciu danych wejściowych <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> właściwości, a następnie w wyniku podpis.</span><span class="sxs-lookup"><span data-stu-id="295ad-171">This method generates a signature for the specified data by hashing the input data using the <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> property, and then signing the result.</span></span>  
  
 <span data-ttu-id="295ad-172"><xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType> Flaga jest wymagany, jeśli klucz kryptografii nowej generacji (CNG) nie jest losowo generowany przez <xref:System.Security.Cryptography.ECDsaCng> obiektu.</span><span class="sxs-lookup"><span data-stu-id="295ad-172">The <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType> flag is required if the Cryptography Next Generation (CNG) key is not randomly generated by the <xref:System.Security.Cryptography.ECDsaCng> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="295ad-173"><paramref name="data" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="295ad-173"><paramref name="data" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="295ad-174">Informacje o kluczu, który jest skojarzony z wystąpieniem nie ma klucza prywatnego.</span><span class="sxs-lookup"><span data-stu-id="295ad-174">The key information that is associated with the instance does not have a private key.</span></span></exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermission"><span data-ttu-id="295ad-175">Aby uzyskać uprawnienia do podpisywania danych.</span><span class="sxs-lookup"><span data-stu-id="295ad-175">for permission to sign data.</span></span> <span data-ttu-id="295ad-176">Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="295ad-176">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="295ad-177">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span><span class="sxs-lookup"><span data-stu-id="295ad-177">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (System.IO.Stream data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(class System.IO.Stream data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (data As Stream) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(System::IO::Stream ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="295ad-178">Strumień danych do podpisania.</span><span class="sxs-lookup"><span data-stu-id="295ad-178">The data stream to be signed.</span></span></param>
        <summary><span data-ttu-id="295ad-179">Generuje podpis dla tego strumienia określone dane, Odczyt do końca strumienia.</span><span class="sxs-lookup"><span data-stu-id="295ad-179">Generates a signature for the specified data stream, reading to the end of the stream.</span></span></summary>
        <returns><span data-ttu-id="295ad-180">Podpis cyfrowy strumienia określone dane.</span><span class="sxs-lookup"><span data-stu-id="295ad-180">A digital signature for the specified data stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="295ad-181">Ta metoda generuje podpis dla tego strumienia określone dane przez tworzenie skrótów przy użyciu danych wejściowych <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> właściwości, a następnie w wyniku podpis.</span><span class="sxs-lookup"><span data-stu-id="295ad-181">This method generates a signature for the specified data stream by hashing the input data using the <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> property, and then signing the result.</span></span>  
  
 <span data-ttu-id="295ad-182"><xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType> Flaga jest wymagany, jeśli klucz kryptografii nowej generacji (CNG) nie jest losowo generowany przez <xref:System.Security.Cryptography.ECDsaCng> obiektu.</span><span class="sxs-lookup"><span data-stu-id="295ad-182">The <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType> flag is required if the Cryptography Next Generation (CNG) key is not randomly generated by the <xref:System.Security.Cryptography.ECDsaCng> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="295ad-183"><paramref name="data" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="295ad-183"><paramref name="data" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="295ad-184">Informacje o kluczu, który jest skojarzony z wystąpieniem nie ma klucza prywatnego.</span><span class="sxs-lookup"><span data-stu-id="295ad-184">The key information that is associated with the instance does not have a private key.</span></span></exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermission"><span data-ttu-id="295ad-185">Aby uzyskać uprawnienia do podpisywania danych.</span><span class="sxs-lookup"><span data-stu-id="295ad-185">for permission to sign data.</span></span> <span data-ttu-id="295ad-186">Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="295ad-186">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="295ad-187">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span><span class="sxs-lookup"><span data-stu-id="295ad-187">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (byte[] data, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(unsigned int8[] data, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (data As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="295ad-188">Dane wiadomości były podpisane.</span><span class="sxs-lookup"><span data-stu-id="295ad-188">The message data to be signed.</span></span></param>
        <param name="offset"><span data-ttu-id="295ad-189">Lokalizacja, w ciągu, w którym należy uruchomić podpisywania.</span><span class="sxs-lookup"><span data-stu-id="295ad-189">The location in the string at which to start signing.</span></span></param>
        <param name="count"><span data-ttu-id="295ad-190">Długość ciągu, w znaki następne <c>przesunięcie</c> który będzie podpisywany.</span><span class="sxs-lookup"><span data-stu-id="295ad-190">The length of the string, in characters, following <c>offset</c> that will be signed.</span></span></param>
        <summary><span data-ttu-id="295ad-191">Generuje podpisu cyfrowego dla określonej długości danych, rozpoczynając od określonego przesunięcia.</span><span class="sxs-lookup"><span data-stu-id="295ad-191">Generates a digital signature for the specified length of data, beginning at the specified offset.</span></span></summary>
        <returns><span data-ttu-id="295ad-192">Podpis cyfrowy określona długość danych.</span><span class="sxs-lookup"><span data-stu-id="295ad-192">A digital signature for the specified length of data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="295ad-193">Ta metoda generuje podpis określone dane przez tworzenie skrótów przy użyciu danych wejściowych <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> właściwości, a następnie w wyniku podpis</span><span class="sxs-lookup"><span data-stu-id="295ad-193">This method generates a signature for the specified data by hashing the input data using the <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> property, and then signing the result</span></span>  
  
 <span data-ttu-id="295ad-194"><xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType> Flaga jest wymagany, jeśli klucz kryptografii nowej generacji (CNG) nie jest losowo generowany przez <xref:System.Security.Cryptography.ECDsaCng> obiektu.</span><span class="sxs-lookup"><span data-stu-id="295ad-194">The <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType> flag is required if the Cryptography Next Generation (CNG) key is not randomly generated by the <xref:System.Security.Cryptography.ECDsaCng> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="295ad-195"><paramref name="data" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="295ad-195"><paramref name="data" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="295ad-196"><paramref name="count" /> lub <paramref name="offset" /> spowodował odczytu poza granicami ciąg danych.</span><span class="sxs-lookup"><span data-stu-id="295ad-196"><paramref name="count" /> or <paramref name="offset" /> caused reading outside the bounds of the data string.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="295ad-197">Informacje o kluczu, który jest skojarzony z wystąpieniem nie ma klucza prywatnego.</span><span class="sxs-lookup"><span data-stu-id="295ad-197">The key information that is associated with the instance does not have a private key.</span></span></exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermission"><span data-ttu-id="295ad-198">Aby uzyskać uprawnienia do podpisywania danych.</span><span class="sxs-lookup"><span data-stu-id="295ad-198">for permission to sign data.</span></span> <span data-ttu-id="295ad-199">Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="295ad-199">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="295ad-200">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span><span class="sxs-lookup"><span data-stu-id="295ad-200">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SignHash">
      <MemberSignature Language="C#" Value="public override byte[] SignHash (byte[] hash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] SignHash(unsigned int8[] hash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SignHash (hash As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ SignHash(cli::array &lt;System::Byte&gt; ^ hash);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="hash"><span data-ttu-id="295ad-201">Wartość skrótu danych do podpisania.</span><span class="sxs-lookup"><span data-stu-id="295ad-201">The hash value of the data to be signed.</span></span></param>
        <summary><span data-ttu-id="295ad-202">Generuje sygnatury skrótu określonej wartości.</span><span class="sxs-lookup"><span data-stu-id="295ad-202">Generates a signature for the specified hash value.</span></span></summary>
        <returns><span data-ttu-id="295ad-203">Podpis cyfrowy wartości skrótu określonej.</span><span class="sxs-lookup"><span data-stu-id="295ad-203">A digital signature for the specified hash value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="295ad-204"><xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType> Flaga jest wymagany, jeśli klucz kryptografii nowej generacji (CNG) nie jest losowo generowany przez <xref:System.Security.Cryptography.ECDsaCng> obiektu.</span><span class="sxs-lookup"><span data-stu-id="295ad-204">The <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType> flag is required if the Cryptography Next Generation (CNG) key is not randomly generated by the <xref:System.Security.Cryptography.ECDsaCng> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="295ad-205"><paramref name="hash" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="295ad-205"><paramref name="hash" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="295ad-206">Informacje o kluczu, który jest skojarzony z wystąpieniem nie ma klucza prywatnego.</span><span class="sxs-lookup"><span data-stu-id="295ad-206">The key information that is associated with the instance does not have a private key.</span></span></exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermission"><span data-ttu-id="295ad-207">Aby uzyskać uprawnienia do podpisywania danych.</span><span class="sxs-lookup"><span data-stu-id="295ad-207">for permission to sign data.</span></span> <span data-ttu-id="295ad-208">Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="295ad-208">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="295ad-209">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span><span class="sxs-lookup"><span data-stu-id="295ad-209">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToXmlString">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="295ad-210">Serializuje dane klucza do ciągu XML.</span><span class="sxs-lookup"><span data-stu-id="295ad-210">Serializes the key information to an XML string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToXmlString">
      <MemberSignature Language="C#" Value="public override string ToXmlString (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToXmlString(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXmlString (includePrivateParameters As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToXmlString(bool includePrivateParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters">
          <span data-ttu-id="295ad-211"><see langword="true" /> Aby uwzględnić parametry prywatny; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="295ad-211"><see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="295ad-212">Ta metoda nie jest zaimplementowana.</span><span class="sxs-lookup"><span data-stu-id="295ad-212">This method is not implemented.</span></span></summary>
        <returns><span data-ttu-id="295ad-213">Nie dotyczy.</span><span class="sxs-lookup"><span data-stu-id="295ad-213">Not applicable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="295ad-214">Aby przekonwertować bieżącego klucza reprezentację XML, użyj <xref:System.Security.Cryptography.ECDsaCng.ToXmlString%28System.Security.Cryptography.ECKeyXmlFormat%29> zamiast tego przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="295ad-214">To convert the current key to an XML representation, use the <xref:System.Security.Cryptography.ECDsaCng.ToXmlString%28System.Security.Cryptography.ECKeyXmlFormat%29> overload instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="295ad-215">Ta metoda nie jest zaimplementowana.</span><span class="sxs-lookup"><span data-stu-id="295ad-215">This method is not implemented.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToXmlString">
      <MemberSignature Language="C#" Value="public string ToXmlString (System.Security.Cryptography.ECKeyXmlFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToXmlString(valuetype System.Security.Cryptography.ECKeyXmlFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToXmlString (format As ECKeyXmlFormat) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToXmlString(System::Security::Cryptography::ECKeyXmlFormat format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Security.Cryptography.ECKeyXmlFormat" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="295ad-216">Jedna z wartości wyliczenia, które określa format ciągu XML.</span><span class="sxs-lookup"><span data-stu-id="295ad-216">One of the enumeration values that specifies the format of the XML string.</span></span> <span data-ttu-id="295ad-217">To jedyny obecnie akceptowane format jest <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span><span class="sxs-lookup"><span data-stu-id="295ad-217">The only currently accepted format is <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span></span></param>
        <summary><span data-ttu-id="295ad-218">Serializuje dane klucza do ciągu XML przy użyciu określonego formatu.</span><span class="sxs-lookup"><span data-stu-id="295ad-218">Serializes the key information to an XML string by using the specified format.</span></span></summary>
        <returns><span data-ttu-id="295ad-219">Obiekt ciągu zawierający informacje o kluczu, uszeregować w ciągu XML zgodnie z żądany format.</span><span class="sxs-lookup"><span data-stu-id="295ad-219">A string object that contains the key information, serialized to an XML string according to the requested format.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="295ad-220"><paramref name="format" /> Określa nieprawidłowy format.</span><span class="sxs-lookup"><span data-stu-id="295ad-220"><paramref name="format" /> specifies an invalid format.</span></span> <span data-ttu-id="295ad-221">Jest to jedyna wartość zaakceptowane <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span><span class="sxs-lookup"><span data-stu-id="295ad-221">The only accepted value is <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="295ad-222">Inne błędy.</span><span class="sxs-lookup"><span data-stu-id="295ad-222">All other errors.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="VerifyData">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="295ad-223">Weryfikuje podpis cyfrowy.</span><span class="sxs-lookup"><span data-stu-id="295ad-223">Verifies a digital signature.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="VerifyData">
      <MemberSignature Language="C#" Value="public bool VerifyData (byte[] data, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyData(unsigned int8[] data, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyData (data As Byte(), signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyData(cli::array &lt;System::Byte&gt; ^ data, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="signature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="295ad-224">Dane, który został podpisany.</span><span class="sxs-lookup"><span data-stu-id="295ad-224">The data that was signed.</span></span></param>
        <param name="signature"><span data-ttu-id="295ad-225">Weryfikowanie podpisu.</span><span class="sxs-lookup"><span data-stu-id="295ad-225">The signature to be verified.</span></span></param>
        <summary><span data-ttu-id="295ad-226">Weryfikuje podpis cyfrowy z określonych danych.</span><span class="sxs-lookup"><span data-stu-id="295ad-226">Verifies the digital signature of the specified data.</span></span></summary>
        <returns>
          <span data-ttu-id="295ad-227"><see langword="true" /> Jeśli podpis jest nieprawidłowy; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="295ad-227"><see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="295ad-228">Ta metoda generuje podpis dla podanych danych przez tworzenie skrótów przy użyciu danych wejściowych <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> właściwości, a następnie w wyniku podpis.</span><span class="sxs-lookup"><span data-stu-id="295ad-228">This method generates a signature for the given data by hashing the input data using the <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> property, and then signing the result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="295ad-229"><paramref name="data" /> lub <paramref name="signature" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="295ad-229"><paramref name="data" /> or <paramref name="signature" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyData">
      <MemberSignature Language="C#" Value="public bool VerifyData (System.IO.Stream data, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyData(class System.IO.Stream data, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyData (data As Stream, signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyData(System::IO::Stream ^ data, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="signature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="295ad-230">Strumień danych, który został podpisany.</span><span class="sxs-lookup"><span data-stu-id="295ad-230">The data stream that was signed.</span></span></param>
        <param name="signature"><span data-ttu-id="295ad-231">Weryfikowanie podpisu.</span><span class="sxs-lookup"><span data-stu-id="295ad-231">The signature to be verified.</span></span></param>
        <summary><span data-ttu-id="295ad-232">Weryfikuje podpis cyfrowy strumienia określone dane, Odczyt do końca strumienia.</span><span class="sxs-lookup"><span data-stu-id="295ad-232">Verifies the digital signature of the specified data stream, reading to the end of the stream.</span></span></summary>
        <returns>
          <span data-ttu-id="295ad-233"><see langword="true" /> Jeśli podpis jest nieprawidłowy; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="295ad-233"><see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="295ad-234">Ta metoda tworzy skrót danych wejściowych przy użyciu <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> właściwości przed weryfikacji.</span><span class="sxs-lookup"><span data-stu-id="295ad-234">This method hashes the input data by using the <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> property before verification.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="295ad-235"><paramref name="data" /> lub <paramref name="signature" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="295ad-235"><paramref name="data" /> or <paramref name="signature" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyData">
      <MemberSignature Language="C#" Value="public bool VerifyData (byte[] data, int offset, int count, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyData(unsigned int8[] data, int32 offset, int32 count, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyData (data As Byte(), offset As Integer, count As Integer, signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="signature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="295ad-236">Dane, który został podpisany.</span><span class="sxs-lookup"><span data-stu-id="295ad-236">The data that was signed.</span></span></param>
        <param name="offset"><span data-ttu-id="295ad-237">Lokalizacja danych, w którym rozpoczyna się podpisane dane.</span><span class="sxs-lookup"><span data-stu-id="295ad-237">The location in the data at which the signed data begins.</span></span></param>
        <param name="count"><span data-ttu-id="295ad-238">Długość danych, w znaki następne <c>przesunięcie</c> który będzie podpisywany.</span><span class="sxs-lookup"><span data-stu-id="295ad-238">The length of the data, in characters, following <c>offset</c> that will be signed.</span></span></param>
        <param name="signature"><span data-ttu-id="295ad-239">Weryfikowanie podpisu.</span><span class="sxs-lookup"><span data-stu-id="295ad-239">The signature to be verified.</span></span></param>
        <summary><span data-ttu-id="295ad-240">Sprawdza podpis dla określonej długości danych, rozpoczynając od określonego przesunięcia.</span><span class="sxs-lookup"><span data-stu-id="295ad-240">Verifies a signature for the specified length of data, beginning at the specified offset.</span></span></summary>
        <returns>
          <span data-ttu-id="295ad-241"><see langword="true" /> Jeśli podpis jest nieprawidłowy; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="295ad-241"><see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="295ad-242">Ta metoda tworzy skrót danych wejściowych przy użyciu <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> właściwości przed weryfikacji.</span><span class="sxs-lookup"><span data-stu-id="295ad-242">This method hashes the input data by using the <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A> property before verification.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="295ad-243"><paramref name="offset" /> lub <paramref name="count" /> jest mniejsza niż zero.</span><span class="sxs-lookup"><span data-stu-id="295ad-243"><paramref name="offset" /> or <paramref name="count" /> is less then zero.</span></span>  
  
 <span data-ttu-id="295ad-244">—lub—</span><span class="sxs-lookup"><span data-stu-id="295ad-244">-or-</span></span>  
  
 <span data-ttu-id="295ad-245"><paramref name="offset" /> lub <paramref name="count" /> jest większy niż długość tablicy bajtów przekazano <paramref name="data" /> parametru.</span><span class="sxs-lookup"><span data-stu-id="295ad-245"><paramref name="offset" /> or <paramref name="count" /> is larger than the length of the byte array passed in the <paramref name="data" /> parameter.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="295ad-246"><paramref name="data" /> lub <paramref name="signature" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="295ad-246"><paramref name="data" /> or <paramref name="signature" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyHash">
      <MemberSignature Language="C#" Value="public override bool VerifyHash (byte[] hash, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool VerifyHash(unsigned int8[] hash, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDsaCng.VerifyHash(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function VerifyHash (hash As Byte(), signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool VerifyHash(cli::array &lt;System::Byte&gt; ^ hash, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.Byte[]" />
        <Parameter Name="signature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="hash"><span data-ttu-id="295ad-247">Wartość skrótu danych do weryfikacji.</span><span class="sxs-lookup"><span data-stu-id="295ad-247">The hash value of the data to be verified.</span></span></param>
        <param name="signature"><span data-ttu-id="295ad-248">Dane można zweryfikować wartości skrótu podpisu cyfrowego.</span><span class="sxs-lookup"><span data-stu-id="295ad-248">The digital signature of the data to be verified against the hash value.</span></span></param>
        <summary><span data-ttu-id="295ad-249">Weryfikuje określony podpis cyfrowy względem wartości określonej wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="295ad-249">Verifies the specified digital signature against a specified hash value.</span></span></summary>
        <returns>
          <span data-ttu-id="295ad-250"><see langword="true" /> Jeśli podpis jest nieprawidłowy; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="295ad-250"><see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="295ad-251"><paramref name="hash" /> lub <paramref name="signature" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="295ad-251"><paramref name="hash" /> or <paramref name="signature" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>