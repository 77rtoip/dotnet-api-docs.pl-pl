<Type Name="ECDiffieHellmanKeyDerivationFunction" FullName="System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0014048858d87c772bf118d45af0f02015001b60" /><Meta Name="ms.sourcegitcommit" Value="74239f3977d28923e5020663db2c4e91601bea79" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="07/24/2019" /><Meta Name="ms.locfileid" Value="68436037" /></Metadata><TypeSignature Language="C#" Value="public enum ECDiffieHellmanKeyDerivationFunction" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ECDiffieHellmanKeyDerivationFunction extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction" />
  <TypeSignature Language="VB.NET" Value="Public Enum ECDiffieHellmanKeyDerivationFunction" />
  <TypeSignature Language="C++ CLI" Value="public enum class ECDiffieHellmanKeyDerivationFunction" />
  <TypeSignature Language="F#" Value="type ECDiffieHellmanKeyDerivationFunction = " />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
    <AssemblyVersion>4.3.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Określa funkcję wyprowadzania klucza, która <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> będzie używana przez klasę do konwertowania tajnych umów na materiał klucza.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ECDiffieHellmanKeyDerivationFunction` Wyliczenie definiuje typ algorytmu, który zostanie użyty do przekształcenia surowej tajnej umowy w materiał klucza. Tajna umowa to wartość wygenerowana na podstawie klucza prywatnego i klucza publicznego innej firmy w ramach wymiany kluczy. Jest to wartość inicjatora klucza materiału, który jest generowany przez <xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial%2A?displayProperty=nameWithType> metodę.  
  
 Właściwość używa tego wyliczenia do pobrania funkcji wyprowadzania klucza <xref:System.Security.Cryptography.ECDiffieHellmanCng> dla klasy. <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A?displayProperty=nameWithType>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Hash">
      <MemberSignature Language="C#" Value="Hash" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction Hash = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" />
      <MemberSignature Language="VB.NET" Value="Hash" />
      <MemberSignature Language="C++ CLI" Value="Hash" />
      <MemberSignature Language="F#" Value="Hash = 0" Usage="System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Algorytm wyznaczania wartości skrótu jest używany do generowania materiału klucza. <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm" /> Właściwość określa nazwę algorytmu, który ma być używany. Jeśli nazwa algorytmu nie zostanie określona, <see cref="T:System.Security.Cryptography.SHA256" /> jest używany jako algorytm domyślny. Można również określić <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend" /> właściwości i <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend" /> , ale nie są one wymagane. Ilość generowanego materiału kluczowego jest równoważna z rozmiarem wartości skrótu dla określonego algorytmu.</summary>
      </Docs>
    </Member>
    <Member MemberName="Hmac">
      <MemberSignature Language="C#" Value="Hmac" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction Hmac = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" />
      <MemberSignature Language="VB.NET" Value="Hmac" />
      <MemberSignature Language="C++ CLI" Value="Hmac" />
      <MemberSignature Language="F#" Value="Hmac = 1" Usage="System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Algorytm kod uwierzytelniania wiadomości (HMAC) oparty na skrócie jest używany do generowania materiału klucza. <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey" /> Właściwość określa klucz, który ma być używany. Ta właściwość musi <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey" /> być ustawiona lub właściwość musi być ustawiona na <see langword="true" />; w przeciwnym razie <see cref="T:System.Security.Cryptography.CryptographicException" /> jest zgłaszany w przypadku użycia <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" />. Jeśli ustawiono obie właściwości, umowa tajna jest używana jako klucz HMAC. Można również określić <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend" /> właściwości i <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend" /> , ale nie są one wymagane. Ilość generowanego materiału kluczowego jest równoważna rozmiarowi wartości HMAC.</summary>
      </Docs>
    </Member>
    <Member MemberName="Tls">
      <MemberSignature Language="C#" Value="Tls" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction Tls = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" />
      <MemberSignature Language="VB.NET" Value="Tls" />
      <MemberSignature Language="C++ CLI" Value="Tls" />
      <MemberSignature Language="F#" Value="Tls = 2" Usage="System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Protokół Transport Layer Security (TLS) służy do generowania materiału kluczowego. Należy ustawić właściwości <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Label" />i. w przeciwnym razie <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" /> jestzgłaszanywprzypadkuużycia.<see cref="T:System.Security.Cryptography.CryptographicException" /> <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed" /> Ta wartość generuje 160 bitów materiału kluczowego.</summary>
      </Docs>
    </Member>
  </Members>
</Type>