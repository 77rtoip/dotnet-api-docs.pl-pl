<Type Name="CspParameters" FullName="System.Security.Cryptography.CspParameters">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="759007ce1dbbb6430d624fbf0203f907bc871d0b" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52226601" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CspParameters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CspParameters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.CspParameters" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CspParameters" />
  <TypeSignature Language="C++ CLI" Value="public ref class CspParameters sealed" />
  <TypeSignature Language="F#" Value="type CspParameters = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zawiera parametry, które są przekazywane do dostawcy usług kryptograficznych (CSP), który wykonuje operacje kryptograficzne. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.CspParameters> Klasa reprezentuje parametry, które można przekazywać na klasy kryptografii zarządzanych, używających wewnętrznie Microsoft dostawcy usług kryptograficznych (CSP) z niezarządzanego Microsoft Cryptography API (CAPI). Klasy przy użyciu nazwy kończące się na "CryptoServiceProvider" są kod zarządzany otok dla odpowiedniego dostawcy usług Kryptograficznych.  
  
 Użyj <xref:System.Security.Cryptography.CspParameters> klasy, aby wykonać następujące czynności:  
  
-   Określ określonego dostawcy usług Kryptograficznych, przekazując typ dostawcy do <xref:System.Security.Cryptography.CspParameters.ProviderType> lub <xref:System.Security.Cryptography.CspParameters.ProviderName> właściwości.  Można również określić dostawcy usług Kryptograficznych za pomocą przeciążenia konstruktora.  
  
-   Tworzenie kontenera kluczy, w którym można przechowywać klucze kryptograficzne.  Kontenery kluczy zapewniają najbezpieczniejszy utrwalić klucze kryptograficzne i nie należy ich ujawniać złośliwego innych firm.  Aby uzyskać więcej informacji na temat tworzenia kontenerów kluczy, zobacz [jak: Store Asymmetric Keys in a Key Container](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md).  
  
-   Określ, czy należy utworzyć klucz asymetryczny podpisu lub asymetrycznego wymiany kluczy przy użyciu <xref:System.Security.Cryptography.CspParameters.KeyNumber> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy kontener klucza przy użyciu <xref:System.Security.Cryptography.CspParameters> klasy, a następnie zapisuje klucz w kontenerze.  
  
 [!code-cpp[capikey#1](~/samples/snippets/cpp/VS_Snippets_CLR/capikey/CPP/capikey.cpp#1)]
 [!code-csharp[capikey#1](~/samples/snippets/csharp/VS_Snippets_CLR/capikey/CS/capikey.cs#1)]
 [!code-vb[capikey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/capikey/VB/capikey.vb#1)]  
  
 Poniższy przykład kodu wykorzystuje <xref:System.Security.Cryptography.CspParameters> klasy, aby wybrać dostawcę usług kryptograficznych kart inteligentnych.  Następnie podpisuje i weryfikuje dane przy użyciu karty inteligentnej.  
  
 [!code-cpp[Cryptography.SmartCardCSP#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.SmartCardCSP/CPP/Cryptography.SmartCardCSP.cpp#1)]
 [!code-csharp[Cryptography.SmartCardCSP#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.SmartCardCSP/CS/example.cs#1)]
 [!code-vb[Cryptography.SmartCardCSP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.SmartCardCSP/VB/example.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Usługi kryptograficzne</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.CspParameters" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.CspParameters" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta forma <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> inicjuje <xref:System.Security.Cryptography.CspParameters.ProviderType> pola na wartość `24`, który określa dostawcę PROV_RSA_AES.  Ten dostawca domyślny jest zgodny z <xref:System.Security.Cryptography.Aes> algorytmu.  
  
 Aby uzyskać informacje o innych typach dostawcy, zobacz <xref:System.Security.Cryptography.CspParameters.ProviderType> pola.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy kontener klucza przy użyciu <xref:System.Security.Cryptography.CspParameters> klasy, a następnie zapisuje klucz w kontenerze.  
  
 [!code-cpp[capikey#1](~/samples/snippets/cpp/VS_Snippets_CLR/capikey/CPP/capikey.cpp#1)]
 [!code-csharp[capikey#1](~/samples/snippets/csharp/VS_Snippets_CLR/capikey/CS/capikey.cs#1)]
 [!code-vb[capikey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/capikey/VB/capikey.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Usługi kryptograficzne</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int dwTypeIn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwTypeIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwTypeIn As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int dwTypeIn);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CspParameters : int -&gt; System.Security.Cryptography.CspParameters" Usage="new System.Security.Cryptography.CspParameters dwTypeIn" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwTypeIn" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dwTypeIn">Kod typu dostawcy, który określa typ dostawcy do utworzenia.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.CspParameters" /> klasy przy użyciu kodu typu określonego dostawcy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> konstruktora, aby określić typ dostawcy, przekazując wartość liczbowa, która reprezentuje tego dostawcy.  Wartości numeryczne, które reprezentują domyślne typy dostawcy są zdefiniowane w pliku nagłówkowym WinCrypt.h:  
  
-   Aby określić dostawcę zgodny z <xref:System.Security.Cryptography.RSA> algorytmu, przekazać wartość `1` do `dwTypeIn` parametru.  
  
-   Aby określić dostawcę zgodny z <xref:System.Security.Cryptography.DSA> algorytmu, przekazać wartość `13` do `dwTypeIn` parametru.  
  
 Aby uzyskać informacji na temat innych wartości typu dostawcy, zobacz <xref:System.Security.Cryptography.CspParameters.ProviderType> pola.  Aby uzyskać więcej informacji o domyślnych dostawcy typów i ich zachowania zobacz dokumentację firmy Microsoft Cryptography API (CAPI) w bibliotece MSDN.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy kontener klucza przy użyciu <xref:System.Security.Cryptography.CspParameters> klasy, a następnie zapisuje klucz w kontenerze.  
  
 [!code-cpp[capikey#1](~/samples/snippets/cpp/VS_Snippets_CLR/capikey/CPP/capikey.cpp#1)]
 [!code-csharp[capikey#1](~/samples/snippets/csharp/VS_Snippets_CLR/capikey/CS/capikey.cs#1)]
 [!code-vb[capikey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/capikey/VB/capikey.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Usługi kryptograficzne</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int dwTypeIn, string strProviderNameIn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwTypeIn, string strProviderNameIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwTypeIn As Integer, strProviderNameIn As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int dwTypeIn, System::String ^ strProviderNameIn);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CspParameters : int * string -&gt; System.Security.Cryptography.CspParameters" Usage="new System.Security.Cryptography.CspParameters (dwTypeIn, strProviderNameIn)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwTypeIn" Type="System.Int32" />
        <Parameter Name="strProviderNameIn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dwTypeIn">Kod typu dostawcy, który określa typ dostawcy do utworzenia.</param>
        <param name="strProviderNameIn">Nazwa dostawcy.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.CspParameters" /> klasy przy użyciu kodu typu określonego dostawcy i nazwy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> konstruktora, aby określić typ dostawcy i nazwę.  
  
 Określ typ dostawcy, przekazując wartość liczbową, który reprezentuje typ wybranego dostawcy.  Wartości numeryczne, które reprezentują domyślne typy dostawcy są zdefiniowane w pliku nagłówkowym WinCrypt.h:  
  
-   Aby określić dostawcę zgodny z <xref:System.Security.Cryptography.RSA> algorytmu, przekazać wartość `1` do `dwTypeIn` parametru.  
  
-   Aby określić dostawcę zgodny z <xref:System.Security.Cryptography.DSA> algorytmu, przekazać wartość `13` do `dwTypeIn` parametru.  
  
 Aby uzyskać informacji na temat innych wartości typu dostawcy, zobacz <xref:System.Security.Cryptography.CspParameters.ProviderType> pola.  Aby uzyskać więcej informacji o domyślnych dostawcy typów i ich zachowania zobacz dokumentację firmy Microsoft Cryptography API (CAPI) w bibliotece MSDN.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Security.Cryptography.CspParameters> klasy, aby wybrać dostawcę usług kryptograficznych kart inteligentnych.  Następnie podpisuje i weryfikuje dane przy użyciu karty inteligentnej.  
  
 [!code-cpp[Cryptography.SmartCardCSP#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.SmartCardCSP/CPP/Cryptography.SmartCardCSP.cpp#1)]
 [!code-csharp[Cryptography.SmartCardCSP#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.SmartCardCSP/CS/example.cs#1)]
 [!code-vb[Cryptography.SmartCardCSP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.SmartCardCSP/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Usługi kryptograficzne</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int dwTypeIn, string strProviderNameIn, string strContainerNameIn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwTypeIn, string strProviderNameIn, string strContainerNameIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwTypeIn As Integer, strProviderNameIn As String, strContainerNameIn As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int dwTypeIn, System::String ^ strProviderNameIn, System::String ^ strContainerNameIn);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CspParameters : int * string * string -&gt; System.Security.Cryptography.CspParameters" Usage="new System.Security.Cryptography.CspParameters (dwTypeIn, strProviderNameIn, strContainerNameIn)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwTypeIn" Type="System.Int32" />
        <Parameter Name="strProviderNameIn" Type="System.String" />
        <Parameter Name="strContainerNameIn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dwTypeIn">Kod typu dostawcy określa typ dostawcy do utworzenia.</param>
        <param name="strProviderNameIn">Nazwa dostawcy.</param>
        <param name="strContainerNameIn">Nazwa kontenera.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.CspParameters" /> klasy przy użyciu kodu typu określonego dostawcy i nazwy i nazwy określonego kontenera.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> konstruktora, aby określić typ dostawcy, nazwa dostawcy i nazwy kontenera.  
  
 Nazwa kontenera służy do pobierania klucza w tym kontenerze.  
  
 Określ typ dostawcy, przekazując wartość liczbową, który reprezentuje typ wybranego dostawcy.  Wartości numeryczne, które reprezentują domyślne typy dostawcy są zdefiniowane w pliku nagłówkowym WinCrypt.h:  
  
-   Aby określić dostawcę zgodny z <xref:System.Security.Cryptography.RSA> algorytmu, przekazać wartość `1` do `dwTypeIn` parametru.  
  
-   Aby określić dostawcę zgodny z <xref:System.Security.Cryptography.DSA> algorytmu, przekazać wartość `13` do `dwTypeIn` parametru.  
  
 Aby uzyskać informacji na temat innych wartości typu dostawcy, zobacz <xref:System.Security.Cryptography.CspParameters.ProviderType> pola.  Aby uzyskać więcej informacji o domyślnych dostawcy typów i ich zachowania zobacz dokumentację firmy Microsoft Cryptography API (CAPI) w bibliotece MSDN.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Usługi kryptograficzne</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int providerType, string providerName, string keyContainerName, System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, IntPtr parentWindowHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 providerType, string providerName, string keyContainerName, class System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, native int parentWindowHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int providerType, System::String ^ providerName, System::String ^ keyContainerName, System::Security::AccessControl::CryptoKeySecurity ^ cryptoKeySecurity, IntPtr parentWindowHandle);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CspParameters : int * string * string * System.Security.AccessControl.CryptoKeySecurity * nativeint -&gt; System.Security.Cryptography.CspParameters" Usage="new System.Security.Cryptography.CspParameters (providerType, providerName, keyContainerName, cryptoKeySecurity, parentWindowHandle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerType" Type="System.Int32" />
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="keyContainerName" Type="System.String" />
        <Parameter Name="cryptoKeySecurity" Type="System.Security.AccessControl.CryptoKeySecurity" />
        <Parameter Name="parentWindowHandle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="providerType">Kod typu dostawcy określa typ dostawcy do utworzenia.</param>
        <param name="providerName">Nazwa dostawcy.</param>
        <param name="keyContainerName">Nazwa kontenera.</param>
        <param name="cryptoKeySecurity">Zasady praw i inspekcji dostępu do reprezentuje obiekt kontenera.</param>
        <param name="parentWindowHandle">Dojście do nadrzędnego okna dla okna dialogowego hasło karty inteligentnej.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.CspParameters" /> przy użyciu typu dostawcy, nazwa dostawcy, nazwa kontenera, uzyskiwanie dostępu do informacji i dojścia do okna dialogowego hasło niezarządzanych karty inteligentnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa kontenera służy do pobierania klucza w tym kontenerze.  
  
 Określ typ dostawcy, przekazując wartość liczbową, który reprezentuje typ wybranego dostawcy.  Wartości numeryczne, które reprezentują domyślne typy dostawcy są zdefiniowane w pliku nagłówkowym WinCrypt.h:  
  
-   Aby określić dostawcę zgodny z <xref:System.Security.Cryptography.RSA> algorytmu, przekazać wartość `1` do `dwTypeIn` parametru.  
  
-   Aby określić dostawcę zgodny z <xref:System.Security.Cryptography.DSA> algorytmu, przekazać wartość `13` do `dwTypeIn` parametru.  
  
 Aby uzyskać informacji na temat innych wartości typu dostawcy, zobacz <xref:System.Security.Cryptography.CspParameters.ProviderType> pola.  Aby uzyskać więcej informacji o domyślnych dostawcy typów i ich zachowania zobacz dokumentację firmy Microsoft Cryptography API (CAPI) w bibliotece MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int providerType, string providerName, string keyContainerName, System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, System.Security.SecureString keyPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 providerType, string providerName, string keyContainerName, class System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, class System.Security.SecureString keyPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.Security.SecureString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int providerType, System::String ^ providerName, System::String ^ keyContainerName, System::Security::AccessControl::CryptoKeySecurity ^ cryptoKeySecurity, System::Security::SecureString ^ keyPassword);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CspParameters : int * string * string * System.Security.AccessControl.CryptoKeySecurity * System.Security.SecureString -&gt; System.Security.Cryptography.CspParameters" Usage="new System.Security.Cryptography.CspParameters (providerType, providerName, keyContainerName, cryptoKeySecurity, keyPassword)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerType" Type="System.Int32" />
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="keyContainerName" Type="System.String" />
        <Parameter Name="cryptoKeySecurity" Type="System.Security.AccessControl.CryptoKeySecurity" />
        <Parameter Name="keyPassword" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="providerType">Kod typu dostawcy określa typ dostawcy do utworzenia.</param>
        <param name="providerName">Nazwa dostawcy.</param>
        <param name="keyContainerName">Nazwa kontenera.</param>
        <param name="cryptoKeySecurity">Zasady praw i inspekcji dostępu do reprezentuje obiekt kontenera.</param>
        <param name="keyPassword">Hasło skojarzone z kluczem karty inteligentnej.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.CspParameters" /> klasy przy użyciu typu dostawcy, nazwa dostawcy, nazwa kontenera, uzyskiwanie dostępu do informacji i hasło skojarzone z kluczem karty inteligentnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa kontenera służy do pobierania klucza w tym kontenerze.  
  
 Określ typ dostawcy, przekazując wartość liczbową, który reprezentuje typ wybranego dostawcy.  Wartości numeryczne, które reprezentują domyślne typy dostawcy są zdefiniowane w pliku nagłówkowym WinCrypt.h:  
  
-   Aby określić dostawcę zgodny z <xref:System.Security.Cryptography.RSA> algorytmu, przekazać wartość `1` do `dwTypeIn` parametru.  
  
-   Aby określić dostawcę zgodny z <xref:System.Security.Cryptography.DSA> algorytmu, przekazać wartość `13` do `dwTypeIn` parametru.  
  
 Aby uzyskać informacji na temat innych wartości typu dostawcy, zobacz <xref:System.Security.Cryptography.CspParameters.ProviderType> pola.  Aby uzyskać więcej informacji o domyślnych dostawcy typów i ich zachowania zobacz dokumentację firmy Microsoft Cryptography API (CAPI) w bibliotece MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CryptoKeySecurity">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.CryptoKeySecurity CryptoKeySecurity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.AccessControl.CryptoKeySecurity CryptoKeySecurity" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspParameters.CryptoKeySecurity" />
      <MemberSignature Language="VB.NET" Value="Public Property CryptoKeySecurity As CryptoKeySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::CryptoKeySecurity ^ CryptoKeySecurity { System::Security::AccessControl::CryptoKeySecurity ^ get(); void set(System::Security::AccessControl::CryptoKeySecurity ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CryptoKeySecurity : System.Security.AccessControl.CryptoKeySecurity with get, set" Usage="System.Security.Cryptography.CspParameters.CryptoKeySecurity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.CryptoKeySecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> czy reprezentuje prawa dostępu i inspekcji reguły dla kontenera obiektów.</summary>
        <value>A <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> czy reprezentuje prawa dostępu i inspekcji reguły dla kontenera obiektów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Security.Cryptography.CspParameters.CryptoKeySecurity%2A> właściwości w celu określenia <xref:System.Security.AccessControl.CryptoKeySecurity> obiekt, który zarządza tworzeniem arbitralnej kontroli dostępu listy (DACL) i systemowe listy kontroli dostępu (SACL) dla kontenera.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CspProviderFlags Flags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.CspProviderFlags Flags" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspParameters.Flags" />
      <MemberSignature Language="VB.NET" Value="Public Property Flags As CspProviderFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CspProviderFlags Flags { System::Security::Cryptography::CspProviderFlags get(); void set(System::Security::Cryptography::CspProviderFlags value); };" />
      <MemberSignature Language="F#" Value="member this.Flags : System.Security.Cryptography.CspProviderFlags with get, set" Usage="System.Security.Cryptography.CspParameters.Flags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CspProviderFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje flagi dla <see cref="T:System.Security.Cryptography.CspParameters" /> , które modyfikują zachowanie dostawcy usług kryptograficznych (CSP).</summary>
        <value>Wartość wyliczenia lub bitowa kombinacja wartości wyliczenia.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Wartość nie jest prawidłową wartością wyliczenia.</exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Usługi kryptograficzne</related>
      </Docs>
    </Member>
    <Member MemberName="KeyContainerName">
      <MemberSignature Language="C#" Value="public string KeyContainerName;" />
      <MemberSignature Language="ILAsm" Value=".field public string KeyContainerName" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CspParameters.KeyContainerName" />
      <MemberSignature Language="VB.NET" Value="Public KeyContainerName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ KeyContainerName;" />
      <MemberSignature Language="F#" Value="val mutable KeyContainerName : string" Usage="System.Security.Cryptography.CspParameters.KeyContainerName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje nazwę kontenera kluczy <see cref="T:System.Security.Cryptography.CspParameters" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Security.Cryptography.CspParameters.KeyContainerName> pola, aby określić nazwę kontenera kluczy.  Nazwa kontenera służy do pobierania klucza utrwalonych w tym kontenerze.  
  
 Aby uzyskać więcej informacji na temat tworzenia kontenerów kluczy, zobacz [jak: Store Asymmetric Keys in a Key Container](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md).  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy kontener klucza przy użyciu <xref:System.Security.Cryptography.CspParameters> klasy, a następnie zapisuje klucz w kontenerze.  
  
 [!code-cpp[capikey#1](~/samples/snippets/cpp/VS_Snippets_CLR/capikey/CPP/capikey.cpp#1)]
 [!code-csharp[capikey#1](~/samples/snippets/csharp/VS_Snippets_CLR/capikey/CS/capikey.cs#1)]
 [!code-vb[capikey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/capikey/VB/capikey.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Usługi kryptograficzne</related>
      </Docs>
    </Member>
    <Member MemberName="KeyNumber">
      <MemberSignature Language="C#" Value="public int KeyNumber;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 KeyNumber" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CspParameters.KeyNumber" />
      <MemberSignature Language="VB.NET" Value="Public KeyNumber As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: int KeyNumber;" />
      <MemberSignature Language="F#" Value="val mutable KeyNumber : int" Usage="System.Security.Cryptography.CspParameters.KeyNumber" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa, czy to klucz asymetryczny jest tworzony jako klucz podpisu lub wymiany klucza.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.CspParameters.KeyNumber> Pola inicjuje <xref:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber%2A> właściwości podczas inicjowania <xref:System.Security.Cryptography.CspKeyContainerInfo> obiekt z <xref:System.Security.Cryptography.CspParameters> obiektu.  
  
 Klucz wymiany jest para kluczy asymetrycznych używany do szyfrowania kluczy sesji, tak aby można je bezpiecznie przechowywane i wymiany z innymi użytkownikami.  Możesz użyć <xref:System.Security.Cryptography.KeyNumber.Exchange> wartość (`1`) do określenia klucza wymiany.  Ta wartość odpowiada `AT_KEYEXCHANGE` wartość używana w niezarządzanych Microsoft Cryptographic API (CAPI).  
  
 Klucz podpisu jest para kluczy asymetrycznych używany do uwierzytelniania cyfrowo podpisanych wiadomości lub plików.  Możesz użyć <xref:System.Security.Cryptography.KeyNumber.Signature> wartość (`2`) do określenia klucza podpisu.  Ta wartość odpowiada `AT_SIGNATURE` wartość używana przez CAPI.  
  
 Domyślnie <xref:System.Security.Cryptography.CspParameters.KeyNumber> pola określa klucz wymiany.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Security.Cryptography.KeyNumber> wyliczeniu, aby określić typ klucza dla <xref:System.Security.Cryptography.RSACryptoServiceProvider> obiektu.  
  
 [!code-cpp[Cryptography.KeyNumber#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.KeyNumber/cpp/sample.cpp#1)]
 [!code-csharp[Cryptography.KeyNumber#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.KeyNumber/CS/sample.cs#1)]
 [!code-vb[Cryptography.KeyNumber#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.KeyNumber/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Usługi kryptograficzne</related>
      </Docs>
    </Member>
    <Member MemberName="KeyPassword">
      <MemberSignature Language="C#" Value="public System.Security.SecureString KeyPassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.SecureString KeyPassword" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspParameters.KeyPassword" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyPassword As SecureString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::SecureString ^ KeyPassword { System::Security::SecureString ^ get(); void set(System::Security::SecureString ^ value); };" />
      <MemberSignature Language="F#" Value="member this.KeyPassword : System.Security.SecureString with get, set" Usage="System.Security.Cryptography.CspParameters.KeyPassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.SecureString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia hasło skojarzone z kluczem karty inteligentnej.</summary>
        <value>Hasło skojarzone z kluczem karty inteligentnej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Security.Cryptography.CspParameters.KeyPassword%2A> właściwość, aby podać hasło dla klucza karty inteligentnej.  Po określeniu hasła za pomocą tej właściwości, okno dialogowe hasło nie zostanie wyświetlone dla użytkownika.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentWindowHandle">
      <MemberSignature Language="C#" Value="public IntPtr ParentWindowHandle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ParentWindowHandle" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspParameters.ParentWindowHandle" />
      <MemberSignature Language="VB.NET" Value="Public Property ParentWindowHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr ParentWindowHandle { IntPtr get(); void set(IntPtr value); };" />
      <MemberSignature Language="F#" Value="member this.ParentWindowHandle : nativeint with get, set" Usage="System.Security.Cryptography.CspParameters.ParentWindowHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia dojścia do okna nadrzędnego niezarządzanych okno dialogowe Hasło karty inteligentnej.</summary>
        <value>Dojście do nadrzędnego okna dla okna dialogowego hasło karty inteligentnej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Security.Cryptography.CspParameters.ParentWindowHandle%2A> właściwości w celu określenia dojścia do okna nadrzędnego niezarządzanych okno dialogowe Hasło karty inteligentnej.  Po określeniu uchwyt za pomocą tej właściwości, zostanie wyświetlone okno dialogowe Hasło karty inteligentnej do użytkownika.  
  
 Możesz uniknąć prezentowanie okno dialogowe Hasło karty inteligentnej przez jawne określenie hasła przy użyciu <xref:System.Security.Cryptography.CspParameters.KeyPassword%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public string ProviderName;" />
      <MemberSignature Language="ILAsm" Value=".field public string ProviderName" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CspParameters.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public ProviderName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ProviderName;" />
      <MemberSignature Language="F#" Value="val mutable ProviderName : string" Usage="System.Security.Cryptography.CspParameters.ProviderName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje nazwę dostawcy <see cref="T:System.Security.Cryptography.CspParameters" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W dokumentacji firmy Microsoft Cryptography API (CAPI) w bibliotece MSDN, aby uzyskać szczegółowe informacje na temat nazw dostawcy.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Usługi kryptograficzne</related>
      </Docs>
    </Member>
    <Member MemberName="ProviderType">
      <MemberSignature Language="C#" Value="public int ProviderType;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 ProviderType" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CspParameters.ProviderType" />
      <MemberSignature Language="VB.NET" Value="Public ProviderType As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: int ProviderType;" />
      <MemberSignature Language="F#" Value="val mutable ProviderType : int" Usage="System.Security.Cryptography.CspParameters.ProviderType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje kod typu dostawcy <see cref="T:System.Security.Cryptography.CspParameters" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Security.Cryptography.CspParameters.ProviderType> pola, aby określić typ dostawcy, przekazując wartość liczbowa, która reprezentuje tego dostawcy.  Wartości numeryczne, które reprezentują domyślne typy dostawcy są zdefiniowane w pliku nagłówkowym WinCrypt.h:  
  
-   Aby określić dostawcę zgodny z <xref:System.Security.Cryptography.RSA> klasy, przekazać wartość `1`.  
  
-   Aby określić dostawcę zgodny z <xref:System.Security.Cryptography.DSA> klasy, przekazać wartość `13`.  
  
 W poniższej tabeli wymieniono typy dostawców oraz ich odpowiednich wartości liczbowych, zdefiniowana w pliku nagłówkowym WinCrypt.h.  
  
|Typ dostawcy|Wartość liczbowa|  
|-------------------|-------------------|  
|`PROV_RSA_FULL`|1|  
|`PROV_RSA_SIG`|2|  
|`PROV_DSS`|3|  
|`PROV_FORTEZZA`|4|  
|`PROV_MS_EXCHANGE`|5|  
|`PROV_SSL`|6|  
|`PROV_RSA_SCHANNEL`|12|  
|`PROV_DSS_DH`|13|  
|`PROV_EC_ECDSA_SIG`|14|  
|`PROV_EC_ECNRA_SIG`|15|  
|`PROV_EC_ECDSA_FULL`|16|  
|`PROV_EC_ECNRA_FULL`|17|  
|`PROV_DH_SCHANNEL`|18|  
|`PROV_SPYRUS_LYNKS`|20|  
|`PROV_RNG`|21|  
|`PROV_INTEL_SEC`|22|  
|`PROV_REPLACE_OWF`|23|  
|`PROV_RSA_AES`|24|  
  
 Aby uzyskać więcej informacji o domyślnych dostawcy typów i ich zachowania zobacz dokumentację firmy Microsoft Cryptography API (CAPI) w bibliotece MSDN.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Usługi kryptograficzne</related>
      </Docs>
    </Member>
  </Members>
</Type>