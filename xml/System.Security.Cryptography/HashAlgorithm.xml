<Type Name="HashAlgorithm" FullName="System.Security.Cryptography.HashAlgorithm">
  <TypeSignature Language="C#" Value="public abstract class HashAlgorithm : System.Security.Cryptography.ICryptoTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HashAlgorithm extends System.Object implements class System.IDisposable, class System.Security.Cryptography.ICryptoTransform" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.HashAlgorithm" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HashAlgorithm&#xA;Implements ICryptoTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class HashAlgorithm abstract : System::Security::Cryptography::ICryptoTransform" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Cryptography.ICryptoTransform</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d1d41-101">Reprezentuje klasę podstawową, z których wszystkie implementacji skrót kryptograficzny musi pochodzić algorytmów.</span><span class="sxs-lookup"><span data-stu-id="d1d41-101">Represents the base class from which all implementations of cryptographic hash algorithms must derive.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1d41-102">Funkcje skrótu są niezbędne, aby nowoczesnych kryptografii.</span><span class="sxs-lookup"><span data-stu-id="d1d41-102">Hash functions are fundamental to modern cryptography.</span></span> <span data-ttu-id="d1d41-103">Funkcje te mapowania ciągów binarnych o dowolnej długości małych binarne ciągi o stałej długości, znany jako wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="d1d41-103">These functions map binary strings of an arbitrary length to small binary strings of a fixed length, known as hash values.</span></span> <span data-ttu-id="d1d41-104">Funkcja skrót kryptograficzny ma właściwość czy on jest praktycznie niemożliwe znaleźć dwóch różnych parametrów wejściowych ten skrót do tej samej wartości.</span><span class="sxs-lookup"><span data-stu-id="d1d41-104">A cryptographic hash function has the property that it is computationally infeasible to find two distinct inputs that hash to the same value.</span></span> <span data-ttu-id="d1d41-105">Funkcje skrótu są często używane z podpisami cyfrowymi i integralności danych.</span><span class="sxs-lookup"><span data-stu-id="d1d41-105">Hash functions are commonly used with digital signatures and for data integrity.</span></span>  
  
 <span data-ttu-id="d1d41-106">Skrót jest używana jako unikatowy o stałym rozmiarze reprezentujący dużej ilości danych.</span><span class="sxs-lookup"><span data-stu-id="d1d41-106">The hash is used as a unique value of fixed size representing a large amount of data.</span></span> <span data-ttu-id="d1d41-107">Skróty dwóch zestawów danych powinien być zgodny Jeśli zgodny odpowiednich danych.</span><span class="sxs-lookup"><span data-stu-id="d1d41-107">Hashes of two sets of data should match if the corresponding data also matches.</span></span> <span data-ttu-id="d1d41-108">Niewielkie zmiany w wyniku danych w dużych zmian nieprzewidywalne mieszania.</span><span class="sxs-lookup"><span data-stu-id="d1d41-108">Small changes to the data result in large unpredictable changes in the hash.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1d41-109">Poniższy kod przykładowy oblicza <xref:System.Security.Cryptography.SHA1CryptoServiceProvider> wyznaczania wartości skrótu dla tablicy.</span><span class="sxs-lookup"><span data-stu-id="d1d41-109">The following code example computes the <xref:System.Security.Cryptography.SHA1CryptoServiceProvider> hash for an array.</span></span> <span data-ttu-id="d1d41-110">W tym przykładzie przyjęto założenie, że jest tablicą bajtów wstępnie zdefiniowanych `dataArray[]`.</span><span class="sxs-lookup"><span data-stu-id="d1d41-110">This example assumes that there is a predefined byte array `dataArray[]`.</span></span> <span data-ttu-id="d1d41-111"><xref:System.Security.Cryptography.SHA1CryptoServiceProvider> jest klasą pochodne <xref:System.Security.Cryptography.HashAlgorithm>.</span><span class="sxs-lookup"><span data-stu-id="d1d41-111"><xref:System.Security.Cryptography.SHA1CryptoServiceProvider> is a derived class of <xref:System.Security.Cryptography.HashAlgorithm>.</span></span>  
  
 [!code-cpp[Classic HashAlgorithm Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic HashAlgorithm Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HashAlgorithm Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic HashAlgorithm Example/CS/source.cs#1)]
 [!code-vb[Classic HashAlgorithm Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic HashAlgorithm Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="d1d41-112">Przy dziedziczeniu z <see cref="T:System.Security.Cryptography.HashAlgorithm" /> klasy, konieczne jest przesłonięcie następujących członków: <see cref="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)" /> i <see cref="M:System.Security.Cryptography.HashAlgorithm.HashFinal" />.</span><span class="sxs-lookup"><span data-stu-id="d1d41-112">When you inherit from the <see cref="T:System.Security.Cryptography.HashAlgorithm" /> class, you must override the following members:  <see cref="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.Security.Cryptography.HashAlgorithm.HashFinal" />.</span></span></para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HashAlgorithm ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HashAlgorithm();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d1d41-113">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.HashAlgorithm" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="d1d41-113">Initializes a new instance of the <see cref="T:System.Security.Cryptography.HashAlgorithm" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1d41-114">Nie można utworzyć wystąpienia klasy abstrakcyjnej.</span><span class="sxs-lookup"><span data-stu-id="d1d41-114">You cannot create an instance of an abstract class.</span></span> <span data-ttu-id="d1d41-115">Kod aplikacji tworzy nowe wystąpienie klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="d1d41-115">Application code creates a new instance of a derived class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReuseTransform">
      <MemberSignature Language="C#" Value="public virtual bool CanReuseTransform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReuseTransform" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HashAlgorithm.CanReuseTransform" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanReuseTransform As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReuseTransform { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.CanReuseTransform</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1d41-116">Pobiera wartość wskazującą, czy bieżący przekształcenia mogą być ponownie używane.</span><span class="sxs-lookup"><span data-stu-id="d1d41-116">Gets a value indicating whether the current transform can be reused.</span></span></summary>
        <value><span data-ttu-id="d1d41-117">Zawsze <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="d1d41-117">Always <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanTransformMultipleBlocks">
      <MemberSignature Language="C#" Value="public virtual bool CanTransformMultipleBlocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTransformMultipleBlocks" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanTransformMultipleBlocks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTransformMultipleBlocks { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1d41-118">W przypadku przesłonięcia w klasie pochodnej pobiera wartość wskazującą, czy można je przekształcać wiele bloków.</span><span class="sxs-lookup"><span data-stu-id="d1d41-118">When overridden in a derived class, gets a value indicating whether multiple blocks can be transformed.</span></span></summary>
        <value>
          <span data-ttu-id="d1d41-119"><see langword="true" /> Jeśli można je przekształcać wiele bloków; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d1d41-119"><see langword="true" /> if multiple blocks can be transformed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d1d41-120">Zwalnia wszelkie zasoby używane przez <see cref="T:System.Security.Cryptography.HashAlgorithm" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="d1d41-120">Releases all resources used by the <see cref="T:System.Security.Cryptography.HashAlgorithm" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1d41-121">Ta metoda jest proste wywołanie <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="d1d41-121">This method is a simple call to the <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="d1d41-122">Wywoływanie `Dispose` umożliwia zasoby używane przez <xref:System.Security.Cryptography.HashAlgorithm> klasy można przydzielić do innych celów.</span><span class="sxs-lookup"><span data-stu-id="d1d41-122">Calling `Dispose` allows the resources used by the <xref:System.Security.Cryptography.HashAlgorithm> class to be reallocated for other purposes.</span></span> <span data-ttu-id="d1d41-123">Aby uzyskać więcej informacji na temat `Dispose`, zobacz [czyszczenie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="d1d41-123">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ComputeHash">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d1d41-124">Oblicza wartość skrótu dla danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="d1d41-124">Computes the hash value for the input data.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ComputeHash">
      <MemberSignature Language="C#" Value="public byte[] ComputeHash (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] ComputeHash(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ComputeHash (buffer As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ ComputeHash(cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="d1d41-125">Oblicz wartość skrótu dla dane wejściowe.</span><span class="sxs-lookup"><span data-stu-id="d1d41-125">The input to compute the hash code for.</span></span></param>
        <summary><span data-ttu-id="d1d41-126">Oblicza wartość skrótu dla określonej tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="d1d41-126">Computes the hash value for the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="d1d41-127">Obliczona wartość skrótu.</span><span class="sxs-lookup"><span data-stu-id="d1d41-127">The computed hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d1d41-128">Poniższy przykład oblicza <xref:System.Security.Cryptography.MD5> wartość ciągu skrótu i zwraca wartość skrótu jako ciąg 32 znaków, w formacie szesnastkowym.</span><span class="sxs-lookup"><span data-stu-id="d1d41-128">The following example computes the <xref:System.Security.Cryptography.MD5> hash value of a string and returns the hash as a 32-character, hexadecimal-formatted string.</span></span>  <span data-ttu-id="d1d41-129">Ciąg skrótu utworzone przez ten przykładowy kod jest zgodny z dowolnej funkcji skrótu MD5 w (na dowolnej platformie) typu ciąg skrótu 32 znaków, w formacie szesnastkowym.</span><span class="sxs-lookup"><span data-stu-id="d1d41-129">The hash string created by this code example is compatible with any MD5 hash function (on any platform) that creates a 32-character, hexadecimal-formatted hash string.</span></span>  
  
 [!code-csharp[Security.Cryptography.MD5#1](~/samples/snippets/csharp/VS_Snippets_CLR/Security.Cryptography.MD5/cs/example.cs#1)]
 [!code-vb[Security.Cryptography.MD5#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Security.Cryptography.MD5/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d1d41-130"><paramref name="buffer" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d1d41-130"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d1d41-131">Obiekt został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="d1d41-131">The object has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ComputeHash">
      <MemberSignature Language="C#" Value="public byte[] ComputeHash (System.IO.Stream inputStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] ComputeHash(class System.IO.Stream inputStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function ComputeHash (inputStream As Stream) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ ComputeHash(System::IO::Stream ^ inputStream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inputStream"><span data-ttu-id="d1d41-132">Oblicz wartość skrótu dla dane wejściowe.</span><span class="sxs-lookup"><span data-stu-id="d1d41-132">The input to compute the hash code for.</span></span></param>
        <summary><span data-ttu-id="d1d41-133">Oblicza wartość skrótu dla określonego <see cref="T:System.IO.Stream" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="d1d41-133">Computes the hash value for the specified <see cref="T:System.IO.Stream" /> object.</span></span></summary>
        <returns><span data-ttu-id="d1d41-134">Obliczona wartość skrótu.</span><span class="sxs-lookup"><span data-stu-id="d1d41-134">The computed hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d1d41-135">W poniższym przykładzie oblicza <xref:System.Security.Cryptography.RIPEMD160> wyznaczania wartości skrótu dla wszystkich plików w katalogu.</span><span class="sxs-lookup"><span data-stu-id="d1d41-135">The following example calculates the <xref:System.Security.Cryptography.RIPEMD160> hash for all files in a directory.</span></span>  
  
 [!code-cpp[RIPEMD160#1](~/samples/snippets/cpp/VS_Snippets_CLR/RIPEMD160/CPP/ripemd160.cpp#1)]
 [!code-csharp[RIPEMD160#1](~/samples/snippets/csharp/VS_Snippets_CLR/RIPEMD160/CS/ripemd160.cs#1)]
 [!code-vb[RIPEMD160#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RIPEMD160/vb/ripemd160.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d1d41-136">Obiekt został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="d1d41-136">The object has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ComputeHash">
      <MemberSignature Language="C#" Value="public byte[] ComputeHash (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] ComputeHash(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ComputeHash (buffer As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ ComputeHash(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="d1d41-137">Oblicz wartość skrótu dla dane wejściowe.</span><span class="sxs-lookup"><span data-stu-id="d1d41-137">The input to compute the hash code for.</span></span></param>
        <param name="offset"><span data-ttu-id="d1d41-138">Przesunięcie do tablicy typu byte, z którego można rozpocząć korzystanie z danych.</span><span class="sxs-lookup"><span data-stu-id="d1d41-138">The offset into the byte array from which to begin using data.</span></span></param>
        <param name="count"><span data-ttu-id="d1d41-139">Liczba bajtów w tablicy, która ma być używana jako dane.</span><span class="sxs-lookup"><span data-stu-id="d1d41-139">The number of bytes in the array to use as data.</span></span></param>
        <summary><span data-ttu-id="d1d41-140">Oblicza wartość skrótu dla określonego regionu określonej tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="d1d41-140">Computes the hash value for the specified region of the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="d1d41-141">Obliczona wartość skrótu.</span><span class="sxs-lookup"><span data-stu-id="d1d41-141">The computed hash code.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d1d41-142"><paramref name="count" /> wartość jest nieprawidłowa.</span><span class="sxs-lookup"><span data-stu-id="d1d41-142"><paramref name="count" /> is an invalid value.</span></span>  
  
 <span data-ttu-id="d1d41-143">—lub—</span><span class="sxs-lookup"><span data-stu-id="d1d41-143">-or-</span></span>  
  
 <span data-ttu-id="d1d41-144"><paramref name="buffer" /> długość jest nieprawidłowa.</span><span class="sxs-lookup"><span data-stu-id="d1d41-144"><paramref name="buffer" /> length is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d1d41-145"><paramref name="buffer" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d1d41-145"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d1d41-146"><paramref name="offset" /> jest poza zakresem.</span><span class="sxs-lookup"><span data-stu-id="d1d41-146"><paramref name="offset" /> is out of range.</span></span> <span data-ttu-id="d1d41-147">Ten parametr wymaga liczby nieujemnej.</span><span class="sxs-lookup"><span data-stu-id="d1d41-147">This parameter requires a non-negative number.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d1d41-148">Obiekt został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="d1d41-148">The object has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d1d41-149">Tworzy wystąpienie implementację algorytmu wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="d1d41-149">Creates an instance of an implementation of a hash algorithm.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HashAlgorithm Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.HashAlgorithm Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As HashAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::HashAlgorithm ^ Create();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d1d41-150">Tworzy wystąpienie domyślną implementację algorytmu wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="d1d41-150">Creates an instance of the default implementation of a hash algorithm.</span></span></summary>
        <returns><span data-ttu-id="d1d41-151">Nowy <see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /> wystąpienia, chyba że zostały zmienione ustawienia domyślne przy użyciu.</span><span class="sxs-lookup"><span data-stu-id="d1d41-151">A new <see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /> instance, unless the default settings have been changed using the .</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1d41-152">Domyślnie używa tego przeciążenia <xref:System.Security.Cryptography.SHA1CryptoServiceProvider> implementację algorytmu wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="d1d41-152">By default, this overload uses the <xref:System.Security.Cryptography.SHA1CryptoServiceProvider> implementation of a hash algorithm.</span></span> <span data-ttu-id="d1d41-153">Jeśli chcesz określić inną implementację, użyj <xref:System.Security.Cryptography.HashAlgorithm.Create%28System.String%29> przeciążenia, które pozwalają określić nazwę algorytmu zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="d1d41-153">If you want to specify a different implementation, use the <xref:System.Security.Cryptography.HashAlgorithm.Create%28System.String%29> overload, which lets you specify an algorithm name, instead.</span></span> <span data-ttu-id="d1d41-154">System konfiguracji kryptografii definiuje domyślną implementację elementu <xref:System.Security.Cryptography.HashAlgorithm>.</span><span class="sxs-lookup"><span data-stu-id="d1d41-154">The cryptography configuration system defines the default implementation of <xref:System.Security.Cryptography.HashAlgorithm>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HashAlgorithm Create (string hashName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.HashAlgorithm Create(string hashName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (hashName As String) As HashAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::HashAlgorithm ^ Create(System::String ^ hashName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hashName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hashName"><span data-ttu-id="d1d41-155">Implementacja algorytmu wyznaczania wartości skrótu do użycia.</span><span class="sxs-lookup"><span data-stu-id="d1d41-155">The hash algorithm implementation to use.</span></span> <span data-ttu-id="d1d41-156">W poniższej tabeli przedstawiono prawidłowe wartości dla <c>hashName</c> parametr i algorytmy są one wykonywane na.</span><span class="sxs-lookup"><span data-stu-id="d1d41-156">The following table shows the valid values for the <c>hashName</c> parameter and the algorithms they map to.</span></span>  
  
 <span data-ttu-id="d1d41-157"><list type="table"><listheader><term> Wartość parametru</span><span class="sxs-lookup"><span data-stu-id="d1d41-157"><list type="table"><listheader><term> Parameter value</span></span>  
  
 <span data-ttu-id="d1d41-158"></term><description> Implementuje</span><span class="sxs-lookup"><span data-stu-id="d1d41-158"></term><description> Implements</span></span>  
  
 <span data-ttu-id="d1d41-159"></description></listheader><item><term> SHA</span><span class="sxs-lookup"><span data-stu-id="d1d41-159"></description></listheader><item><term> SHA</span></span>  
  
 <span data-ttu-id="d1d41-160"></term><description><see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /></description></item><item><term> SHA1</span><span class="sxs-lookup"><span data-stu-id="d1d41-160"></term><description><see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /></description></item><item><term> SHA1</span></span>  
  
 <span data-ttu-id="d1d41-161"></term><description><see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /></description></item><item><term> System.Security.Cryptography.SHA1</span><span class="sxs-lookup"><span data-stu-id="d1d41-161"></term><description><see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /></description></item><item><term> System.Security.Cryptography.SHA1</span></span>  
  
 <span data-ttu-id="d1d41-162"></term><description><see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /></description></item><item><term> System.Security.Cryptography.HashAlgorithm</span><span class="sxs-lookup"><span data-stu-id="d1d41-162"></term><description><see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /></description></item><item><term> System.Security.Cryptography.HashAlgorithm</span></span>  
  
 <span data-ttu-id="d1d41-163"></term><description><see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /></description></item><item><term> MD5</span><span class="sxs-lookup"><span data-stu-id="d1d41-163"></term><description><see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" /></description></item><item><term> MD5</span></span>  
  
 <span data-ttu-id="d1d41-164"></term><description><see cref="T:System.Security.Cryptography.MD5CryptoServiceProvider" /></description></item><item><term> System.Security.Cryptography.MD5</span><span class="sxs-lookup"><span data-stu-id="d1d41-164"></term><description><see cref="T:System.Security.Cryptography.MD5CryptoServiceProvider" /></description></item><item><term> System.Security.Cryptography.MD5</span></span>  
  
 <span data-ttu-id="d1d41-165"></term><description><see cref="T:System.Security.Cryptography.MD5CryptoServiceProvider" /></description></item><item><term> SHA256</span><span class="sxs-lookup"><span data-stu-id="d1d41-165"></term><description><see cref="T:System.Security.Cryptography.MD5CryptoServiceProvider" /></description></item><item><term> SHA256</span></span>  
  
 <span data-ttu-id="d1d41-166"></term><description><see cref="T:System.Security.Cryptography.SHA256Managed" /></description></item><item><term> SHA-256</span><span class="sxs-lookup"><span data-stu-id="d1d41-166"></term><description><see cref="T:System.Security.Cryptography.SHA256Managed" /></description></item><item><term> SHA-256</span></span>  
  
 <span data-ttu-id="d1d41-167"></term><description><see cref="T:System.Security.Cryptography.SHA256Managed" /></description></item><item><term> System.Security.Cryptography.SHA256</span><span class="sxs-lookup"><span data-stu-id="d1d41-167"></term><description><see cref="T:System.Security.Cryptography.SHA256Managed" /></description></item><item><term> System.Security.Cryptography.SHA256</span></span>  
  
 <span data-ttu-id="d1d41-168"></term><description><see cref="T:System.Security.Cryptography.SHA256Managed" /></description></item><item><term> SHA384</span><span class="sxs-lookup"><span data-stu-id="d1d41-168"></term><description><see cref="T:System.Security.Cryptography.SHA256Managed" /></description></item><item><term> SHA384</span></span>  
  
 <span data-ttu-id="d1d41-169"></term><description><see cref="T:System.Security.Cryptography.SHA384Managed" /></description></item><item><term> SHA-384</span><span class="sxs-lookup"><span data-stu-id="d1d41-169"></term><description><see cref="T:System.Security.Cryptography.SHA384Managed" /></description></item><item><term> SHA-384</span></span>  
  
 <span data-ttu-id="d1d41-170"></term><description><see cref="T:System.Security.Cryptography.SHA384Managed" /></description></item><item><term> System.Security.Cryptography.SHA384</span><span class="sxs-lookup"><span data-stu-id="d1d41-170"></term><description><see cref="T:System.Security.Cryptography.SHA384Managed" /></description></item><item><term> System.Security.Cryptography.SHA384</span></span>  
  
 <span data-ttu-id="d1d41-171"></term><description><see cref="T:System.Security.Cryptography.SHA384Managed" /></description></item><item><term> SHA512</span><span class="sxs-lookup"><span data-stu-id="d1d41-171"></term><description><see cref="T:System.Security.Cryptography.SHA384Managed" /></description></item><item><term> SHA512</span></span>  
  
 <span data-ttu-id="d1d41-172"></term><description><see cref="T:System.Security.Cryptography.SHA512Managed" /></description></item><item><term> SHA-512</span><span class="sxs-lookup"><span data-stu-id="d1d41-172"></term><description><see cref="T:System.Security.Cryptography.SHA512Managed" /></description></item><item><term> SHA-512</span></span>  
  
 <span data-ttu-id="d1d41-173"></term><description><see cref="T:System.Security.Cryptography.SHA512Managed" /></description></item><item><term> System.Security.Cryptography.SHA512</span><span class="sxs-lookup"><span data-stu-id="d1d41-173"></term><description><see cref="T:System.Security.Cryptography.SHA512Managed" /></description></item><item><term> System.Security.Cryptography.SHA512</span></span>  
  
 </term><description><see cref="T:System.Security.Cryptography.SHA512Managed" /></description></item></list></param>
        <summary><span data-ttu-id="d1d41-174">Tworzy wystąpienie określonego implementację algorytmu wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="d1d41-174">Creates an instance of the specified implementation of a hash algorithm.</span></span></summary>
        <returns><span data-ttu-id="d1d41-175">Nowe wystąpienie klasy algorytmu wyznaczania wartości skrótu określonej lub <see langword="null" /> Jeśli <paramref name="hashName" /> nie jest algorytm prawidłowy skrót.</span><span class="sxs-lookup"><span data-stu-id="d1d41-175">A new instance of the specified hash algorithm, or <see langword="null" /> if <paramref name="hashName" /> is not a valid hash algorithm.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d1d41-176">Zwalnia wszelkie zasoby używane przez bieżące wystąpienie klasy <see cref="T:System.Security.Cryptography.HashAlgorithm" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="d1d41-176">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.HashAlgorithm" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d1d41-177">Zwalnia wszelkie zasoby używane przez bieżące wystąpienie klasy <see cref="T:System.Security.Cryptography.HashAlgorithm" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="d1d41-177">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.HashAlgorithm" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1d41-178">Wywołanie `Dispose` po zakończeniu przy użyciu <xref:System.Security.Cryptography.HashAlgorithm>.</span><span class="sxs-lookup"><span data-stu-id="d1d41-178">Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.HashAlgorithm>.</span></span> <span data-ttu-id="d1d41-179">`Dispose` Pozostawia metody <xref:System.Security.Cryptography.HashAlgorithm> w stanie uniemożliwiającym jego używanie.</span><span class="sxs-lookup"><span data-stu-id="d1d41-179">The `Dispose` method leaves the <xref:System.Security.Cryptography.HashAlgorithm> in an unusable state.</span></span> <span data-ttu-id="d1d41-180">Po wywołaniu `Dispose`, konieczne jest zwolnienie wszystkich odwołań do <xref:System.Security.Cryptography.HashAlgorithm> , moduł zbierający elementy bezużyteczne mógł odzyskać pamięć który <xref:System.Security.Cryptography.HashAlgorithm> klasy.</span><span class="sxs-lookup"><span data-stu-id="d1d41-180">After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.HashAlgorithm> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.HashAlgorithm> was occupying.</span></span>  
  
 <span data-ttu-id="d1d41-181">Aby uzyskać więcej informacji, zobacz [czyszczenie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i [implementacja metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="d1d41-181">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d1d41-182">Wywoływanie zawsze `Dispose` przed zwolnieniem ostatniego odwołania do <xref:System.Security.Cryptography.HashAlgorithm>.</span><span class="sxs-lookup"><span data-stu-id="d1d41-182">Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.HashAlgorithm>.</span></span> <span data-ttu-id="d1d41-183">W przeciwnym razie używa zasobów nie zostanie zwolniona do wywołania modułu zbierającego elementy bezużyteczne <xref:System.Security.Cryptography.HashAlgorithm> obiektu `Finalize` metody.</span><span class="sxs-lookup"><span data-stu-id="d1d41-183">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.HashAlgorithm> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="d1d41-184"><see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko zasoby niezarządzane.</span><span class="sxs-lookup"><span data-stu-id="d1d41-184"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="d1d41-185">Zwalnia zasoby niezarządzane używane przez <see cref="T:System.Security.Cryptography.HashAlgorithm" /> i opcjonalnie zwalnia zasoby zarządzane.</span><span class="sxs-lookup"><span data-stu-id="d1d41-185">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.HashAlgorithm" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1d41-186">Ta metoda jest wywoływana przez metodę publiczną `Dispose()` — metoda i `Finalize` metody.</span><span class="sxs-lookup"><span data-stu-id="d1d41-186">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="d1d41-187">`Dispose()` wywołuje chronioną metodę `Dispose(Boolean)` metody z `disposing` ustawiono parametr `true`.</span><span class="sxs-lookup"><span data-stu-id="d1d41-187">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="d1d41-188">`Finalize` wywołuje `Dispose` z `disposing` ustawioną `false`.</span><span class="sxs-lookup"><span data-stu-id="d1d41-188">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="d1d41-189">Gdy `disposing` parametr jest `true`, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane przez to <xref:System.Security.Cryptography.HashAlgorithm> odwołania.</span><span class="sxs-lookup"><span data-stu-id="d1d41-189">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.HashAlgorithm> references.</span></span> <span data-ttu-id="d1d41-190">Ta metoda wywołuje `Dispose()` metody każdego odwołuje się do obiektu.</span><span class="sxs-lookup"><span data-stu-id="d1d41-190">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d1d41-191"><see langword="Dispose" /> można wywoływać wielokrotnie przez inne obiekty.</span><span class="sxs-lookup"><span data-stu-id="d1d41-191"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="d1d41-192">W przypadku przesłaniania <see langword="Dispose(Boolean)" />, nie odwołują się obiekty, które zostały wcześniej zlikwidowane w wywołaniu wcześniejszych <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="d1d41-192">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="d1d41-193">Aby uzyskać więcej informacji na temat sposobu wdrażania <see langword="Dispose(Boolean)" />, zobacz [implementacja metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="d1d41-193">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="d1d41-194">Aby uzyskać więcej informacji na temat <see langword="Dispose" /> i <see langword="Finalize" />, zobacz [czyszczenie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="d1d41-194">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Hash">
      <MemberSignature Language="C#" Value="public virtual byte[] Hash { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Hash" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HashAlgorithm.Hash" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Hash As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ Hash { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1d41-195">Pobiera wartość obliczona wartość skrótu.</span><span class="sxs-lookup"><span data-stu-id="d1d41-195">Gets the value of the computed hash code.</span></span></summary>
        <value><span data-ttu-id="d1d41-196">Bieżąca wartość obliczona wartość skrótu.</span><span class="sxs-lookup"><span data-stu-id="d1d41-196">The current value of the computed hash code.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1d41-197"><xref:System.Security.Cryptography.HashAlgorithm.Hash%2A> Właściwość jest tablicą bajtów; <xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A> właściwość ma wartość, która reprezentuje usługi bits.</span><span class="sxs-lookup"><span data-stu-id="d1d41-197">The <xref:System.Security.Cryptography.HashAlgorithm.Hash%2A> property is a byte array; the <xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A> property is a value that represent bits.</span></span> <span data-ttu-id="d1d41-198">W związku z tym liczba elementów w <xref:System.Security.Cryptography.HashAlgorithm.Hash%2A> ósmego jeden rozmiar <xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="d1d41-198">Therefore, the number of elements in <xref:System.Security.Cryptography.HashAlgorithm.Hash%2A> is one-eighth the size of <xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException">
          <span data-ttu-id="d1d41-199"><see cref="F:System.Security.Cryptography.HashAlgorithm.HashValue" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d1d41-199"><see cref="F:System.Security.Cryptography.HashAlgorithm.HashValue" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d1d41-200">Obiekt został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="d1d41-200">The object has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected virtual void HashCore (ReadOnlySpan&lt;byte&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void HashCore(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub HashCore (source As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void HashCore(ReadOnlySpan&lt;System::Byte&gt; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected abstract void HashCore (byte[] array, int ibStart, int cbSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void HashCore(unsigned int8[] array, int32 ibStart, int32 cbSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub HashCore (array As Byte(), ibStart As Integer, cbSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void HashCore(cli::array &lt;System::Byte&gt; ^ array, int ibStart, int cbSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" />
        <Parameter Name="ibStart" Type="System.Int32" />
        <Parameter Name="cbSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="d1d41-201">Oblicz wartość skrótu dla dane wejściowe.</span><span class="sxs-lookup"><span data-stu-id="d1d41-201">The input to compute the hash code for.</span></span></param>
        <param name="ibStart"><span data-ttu-id="d1d41-202">Przesunięcie do tablicy typu byte, z którego można rozpocząć korzystanie z danych.</span><span class="sxs-lookup"><span data-stu-id="d1d41-202">The offset into the byte array from which to begin using data.</span></span></param>
        <param name="cbSize"><span data-ttu-id="d1d41-203">Liczba bajtów w tablicy bajtów do użycia jako dane.</span><span class="sxs-lookup"><span data-stu-id="d1d41-203">The number of bytes in the byte array to use as data.</span></span></param>
        <summary><span data-ttu-id="d1d41-204">W przypadku przesłonięcia w klasie pochodnej, danych trasy w algorytmu wyznaczania wartości skrótu dla przetwarzania skrót zapisywane do obiektu.</span><span class="sxs-lookup"><span data-stu-id="d1d41-204">When overridden in a derived class, routes data written to the object into the hash algorithm for computing the hash.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1d41-205">Ta metoda nie jest wywoływany przez kod aplikacji.</span><span class="sxs-lookup"><span data-stu-id="d1d41-205">This method is not called by application code.</span></span>  
  
 <span data-ttu-id="d1d41-206">Ta metoda abstrakcyjna wykonuje obliczenia wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="d1d41-206">This abstract method performs the hash computation.</span></span> <span data-ttu-id="d1d41-207">Każdego zapisu do obiektu strumienia kryptograficznego przekazuje dane za pomocą tej metody.</span><span class="sxs-lookup"><span data-stu-id="d1d41-207">Every write to the cryptographic stream object passes the data through this method.</span></span> <span data-ttu-id="d1d41-208">Dla każdego bloku danych ta metoda aktualizacji stanu obiektu skrótu, toteż zwracana jest wartość skrótu poprawne na koniec strumienia danych.</span><span class="sxs-lookup"><span data-stu-id="d1d41-208">For each block of data, this method updates the state of the hash object so a correct hash value is returned at the end of the data stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HashFinal">
      <MemberSignature Language="C#" Value="protected abstract byte[] HashFinal ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] HashFinal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.HashFinal" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function HashFinal () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract cli::array &lt;System::Byte&gt; ^ HashFinal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d1d41-209">W przypadku przesłonięcia w klasie pochodnej, kończenie znajdujących się w obliczania skrótu po przetworzeniu ostatniego danych przez obiekt strumienia kryptograficznego.</span><span class="sxs-lookup"><span data-stu-id="d1d41-209">When overridden in a derived class, finalizes the hash computation after the last data is processed by the cryptographic stream object.</span></span></summary>
        <returns><span data-ttu-id="d1d41-210">Obliczona wartość skrótu.</span><span class="sxs-lookup"><span data-stu-id="d1d41-210">The computed hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1d41-211">Ta metoda Kończenie znajdujących się w dowolnej częściowe obliczeń i zwraca wartość skrótu poprawne dla strumienia danych.</span><span class="sxs-lookup"><span data-stu-id="d1d41-211">This method finalizes any partial computation and returns the correct hash value for the data stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HashSize">
      <MemberSignature Language="C#" Value="public virtual int HashSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HashSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HashAlgorithm.HashSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HashSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int HashSize { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1d41-212">Pobiera rozmiar w bitach, obliczona wartość skrótu.</span><span class="sxs-lookup"><span data-stu-id="d1d41-212">Gets the size, in bits, of the computed hash code.</span></span></summary>
        <value><span data-ttu-id="d1d41-213">Rozmiar w bitach, obliczona wartość skrótu.</span><span class="sxs-lookup"><span data-stu-id="d1d41-213">The size, in bits, of the computed hash code.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashSizeValue">
      <MemberSignature Language="C#" Value="protected int HashSizeValue;" />
      <MemberSignature Language="ILAsm" Value=".field family int32 HashSizeValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.HashAlgorithm.HashSizeValue" />
      <MemberSignature Language="VB.NET" Value="Protected HashSizeValue As Integer " />
      <MemberSignature Language="C++ CLI" Value="protected: int HashSizeValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1d41-214">Reprezentuje rozmiar w bitach, obliczona wartość skrótu.</span><span class="sxs-lookup"><span data-stu-id="d1d41-214">Represents the size, in bits, of the computed hash code.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1d41-215">Algorytm wyznaczania wartości skrótu Określa rozmiar skrótu.</span><span class="sxs-lookup"><span data-stu-id="d1d41-215">The hash algorithm specifies the size of the hash code.</span></span> <span data-ttu-id="d1d41-216">Na przykład <xref:System.Security.Cryptography.SHA1> używany rozmiar skrótu 160 bitów.</span><span class="sxs-lookup"><span data-stu-id="d1d41-216">For example, <xref:System.Security.Cryptography.SHA1> uses a hash size of 160 bits.</span></span>  
  
 <span data-ttu-id="d1d41-217">To pole jest dostępny za pośrednictwem <xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="d1d41-217">This field is accessed through the <xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HashValue">
      <MemberSignature Language="C#" Value="protected internal byte[] HashValue;" />
      <MemberSignature Language="ILAsm" Value=".field familyorassembly unsigned int8[] HashValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.HashAlgorithm.HashValue" />
      <MemberSignature Language="VB.NET" Value="Protected Friend HashValue As Byte() " />
      <MemberSignature Language="C++ CLI" Value="protected public: cli::array &lt;System::Byte&gt; ^ HashValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1d41-218">Reprezentuje wartość obliczona wartość skrótu.</span><span class="sxs-lookup"><span data-stu-id="d1d41-218">Represents the value of the computed hash code.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1d41-219">To pole jest dostępny za pośrednictwem <xref:System.Security.Cryptography.HashAlgorithm.Hash%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="d1d41-219">This field is accessed through the <xref:System.Security.Cryptography.HashAlgorithm.Hash%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public abstract void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d1d41-220">Inicjuje implementacja <see cref="T:System.Security.Cryptography.HashAlgorithm" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="d1d41-220">Initializes an implementation of the <see cref="T:System.Security.Cryptography.HashAlgorithm" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBlockSize">
      <MemberSignature Language="C#" Value="public virtual int InputBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InputBlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HashAlgorithm.InputBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property InputBlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int InputBlockSize { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.InputBlockSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1d41-221">W przypadku przesłonięcia w klasie pochodnej pobiera rozmiar bloku wejściowego.</span><span class="sxs-lookup"><span data-stu-id="d1d41-221">When overridden in a derived class, gets the input block size.</span></span></summary>
        <value><span data-ttu-id="d1d41-222">Rozmiar bloku wejściowego.</span><span class="sxs-lookup"><span data-stu-id="d1d41-222">The input block size.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1d41-223">Jeśli nie została zastąpiona, ta właściwość zwraca wartość 1.</span><span class="sxs-lookup"><span data-stu-id="d1d41-223">Unless overridden, this property returns the value 1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputBlockSize">
      <MemberSignature Language="C#" Value="public virtual int OutputBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OutputBlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HashAlgorithm.OutputBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OutputBlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int OutputBlockSize { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.OutputBlockSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1d41-224">W przypadku przesłonięcia w klasie pochodnej pobiera rozmiar bloku danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="d1d41-224">When overridden in a derived class, gets the output block size.</span></span></summary>
        <value><span data-ttu-id="d1d41-225">Rozmiar bloku danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="d1d41-225">The output block size.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1d41-226">Jeśli nie została zastąpiona, ta właściwość zwraca wartość 1.</span><span class="sxs-lookup"><span data-stu-id="d1d41-226">Unless overridden, this property returns the value 1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="protected int State;" />
      <MemberSignature Language="ILAsm" Value=".field family int32 State" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.HashAlgorithm.State" />
      <MemberSignature Language="VB.NET" Value="Protected State As Integer " />
      <MemberSignature Language="C++ CLI" Value="protected: int State;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1d41-227">Reprezentuje stan obliczania skrótu.</span><span class="sxs-lookup"><span data-stu-id="d1d41-227">Represents the state of the hash computation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1d41-228">To pole jest używane, aby uniemożliwić użytkownikom zmianę klucza algorytmu wyznaczania wartości skrótu kluczem podczas operacji wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="d1d41-228">This field is used to prevent users from changing the key of a keyed hash algorithm during a hash operation.</span></span> <span data-ttu-id="d1d41-229">Podczas zmiany klucza jest poprawny, wartość tego pola jest zero, przed i po zakończeniu operacji wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="d1d41-229">When a key change is legitimate, the value of this field is zero both before and after a hash operation.</span></span> <span data-ttu-id="d1d41-230">Podczas zmiany klucza nie jest autentyczna, wartość tego pola jest różna od zera.</span><span class="sxs-lookup"><span data-stu-id="d1d41-230">When a key change is not legitimate, the value of this field is nonzero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformBlock">
      <MemberSignature Language="C#" Value="public int TransformBlock (byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 TransformBlock(unsigned int8[] inputBuffer, int32 inputOffset, int32 inputCount, unsigned int8[] outputBuffer, int32 outputOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformBlock (inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer, outputBuffer As Byte(), outputOffset As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int TransformBlock(cli::array &lt;System::Byte&gt; ^ inputBuffer, int inputOffset, int inputCount, cli::array &lt;System::Byte&gt; ^ outputBuffer, int outputOffset);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputBuffer" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputCount" Type="System.Int32" />
        <Parameter Name="outputBuffer" Type="System.Byte[]" />
        <Parameter Name="outputOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputBuffer"><span data-ttu-id="d1d41-231">Oblicz wartość skrótu dla dane wejściowe.</span><span class="sxs-lookup"><span data-stu-id="d1d41-231">The input to compute the hash code for.</span></span></param>
        <param name="inputOffset"><span data-ttu-id="d1d41-232">Przesunięcie w tablicy bajtów wejściowych, z którego można rozpocząć korzystanie z danych.</span><span class="sxs-lookup"><span data-stu-id="d1d41-232">The offset into the input byte array from which to begin using data.</span></span></param>
        <param name="inputCount"><span data-ttu-id="d1d41-233">Liczba bajtów w wejściowej tablicy bajtów do użycia jako dane.</span><span class="sxs-lookup"><span data-stu-id="d1d41-233">The number of bytes in the input byte array to use as data.</span></span></param>
        <param name="outputBuffer"><span data-ttu-id="d1d41-234">Kopia część tablicy wejściowej używany do obliczania skrótu.</span><span class="sxs-lookup"><span data-stu-id="d1d41-234">A copy of the part of the input array used to compute the hash code.</span></span></param>
        <param name="outputOffset"><span data-ttu-id="d1d41-235">Przesunięcie do tablicy typu byte dane wyjściowe, z którego ma zostać rozpoczęta zapisywania danych.</span><span class="sxs-lookup"><span data-stu-id="d1d41-235">The offset into the output byte array from which to begin writing data.</span></span></param>
        <summary><span data-ttu-id="d1d41-236">Oblicza wartość skrótu dla określonego regionu wejściowej tablicy bajtów i kopiuje określonego regionu wejściowej tablicy bajtów do określonego regionu wyjściowej tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="d1d41-236">Computes the hash value for the specified region of the input byte array and copies the specified region of the input byte array to the specified region of the output byte array.</span></span></summary>
        <returns><span data-ttu-id="d1d41-237">Liczba zapisanych bajtów.</span><span class="sxs-lookup"><span data-stu-id="d1d41-237">The number of bytes written.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1d41-238">Należy wywołać <xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A> metoda przed wywołaniem <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="d1d41-238">You must call the <xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A> method before calling the <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A> method.</span></span> <span data-ttu-id="d1d41-239">Obie metody należy wywołać przed pobraniem wartości końcowej skrótu.</span><span class="sxs-lookup"><span data-stu-id="d1d41-239">You must call both methods before you retrieve the final hash value.</span></span>  
  
 <span data-ttu-id="d1d41-240">Można pobrać wartości skrótu końcowego po wywołaniu <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A> metody, Pobierz zawartych w tablicy bajtów <xref:System.Security.Cryptography.HashAlgorithm.Hash%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="d1d41-240">To retrieve the final hash value after calling the <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A> method, get the byte array contained within the <xref:System.Security.Cryptography.HashAlgorithm.Hash%2A> property.</span></span>  
  
 <span data-ttu-id="d1d41-241">Wywoływanie <xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A> wynikiem metody za pomocą różnych danych wejściowych i wyjściowych tablic <xref:System.IO.IOException>.</span><span class="sxs-lookup"><span data-stu-id="d1d41-241">Calling the <xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A> method with different input and output arrays results in an <xref:System.IO.IOException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1d41-242">Poniższy kod przykłady użycia <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A> metody z <xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A> metody skrótu ciągu.</span><span class="sxs-lookup"><span data-stu-id="d1d41-242">The following code examples use the <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A> method with the <xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A> method to hash a string.</span></span>  
  
 [!code-csharp[Cryptography.HashAlgorithm.TransformFinalBlock#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.HashAlgorithm.TransformFinalBlock/CS/sample.cs#1)]
 [!code-vb[Cryptography.HashAlgorithm.TransformFinalBlock#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.HashAlgorithm.TransformFinalBlock/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d1d41-243"><paramref name="inputCount" /> używa nieprawidłową wartość.</span><span class="sxs-lookup"><span data-stu-id="d1d41-243"><paramref name="inputCount" /> uses an invalid value.</span></span>  
  
 <span data-ttu-id="d1d41-244">—lub—</span><span class="sxs-lookup"><span data-stu-id="d1d41-244">-or-</span></span>  
  
 <span data-ttu-id="d1d41-245"><paramref name="inputBuffer" /> ma nieprawidłową długość.</span><span class="sxs-lookup"><span data-stu-id="d1d41-245"><paramref name="inputBuffer" /> has an invalid length.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d1d41-246"><paramref name="inputBuffer" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d1d41-246"><paramref name="inputBuffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d1d41-247"><paramref name="inputOffset" /> jest poza zakresem.</span><span class="sxs-lookup"><span data-stu-id="d1d41-247"><paramref name="inputOffset" /> is out of range.</span></span> <span data-ttu-id="d1d41-248">Ten parametr wymaga liczby nieujemnej.</span><span class="sxs-lookup"><span data-stu-id="d1d41-248">This parameter requires a non-negative number.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d1d41-249">Obiekt został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="d1d41-249">The object has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransformFinalBlock">
      <MemberSignature Language="C#" Value="public byte[] TransformFinalBlock (byte[] inputBuffer, int inputOffset, int inputCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] TransformFinalBlock(unsigned int8[] inputBuffer, int32 inputOffset, int32 inputCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformFinalBlock (inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ TransformFinalBlock(cli::array &lt;System::Byte&gt; ^ inputBuffer, int inputOffset, int inputCount);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputBuffer" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputBuffer"><span data-ttu-id="d1d41-250">Oblicz wartość skrótu dla dane wejściowe.</span><span class="sxs-lookup"><span data-stu-id="d1d41-250">The input to compute the hash code for.</span></span></param>
        <param name="inputOffset"><span data-ttu-id="d1d41-251">Przesunięcie do tablicy typu byte, z którego można rozpocząć korzystanie z danych.</span><span class="sxs-lookup"><span data-stu-id="d1d41-251">The offset into the byte array from which to begin using data.</span></span></param>
        <param name="inputCount"><span data-ttu-id="d1d41-252">Liczba bajtów w tablicy bajtów do użycia jako dane.</span><span class="sxs-lookup"><span data-stu-id="d1d41-252">The number of bytes in the byte array to use as data.</span></span></param>
        <summary><span data-ttu-id="d1d41-253">Oblicza wartość skrótu dla określonego regionu określonej tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="d1d41-253">Computes the hash value for the specified region of the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="d1d41-254">Tablica jest kopią część danych wejściowych, który jest wartość skrótu.</span><span class="sxs-lookup"><span data-stu-id="d1d41-254">An array that is a copy of the part of the input that is hashed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1d41-255">Należy wywołać <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A> metody po wywołaniu <xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A> metody, ale przed pobraniem wartości końcowej skrótu.</span><span class="sxs-lookup"><span data-stu-id="d1d41-255">You must call the <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A> method after calling the <xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A> method but before you retrieve the final hash value.</span></span>  
  
 <span data-ttu-id="d1d41-256">Należy pamiętać, że zwracana wartość ta metoda nie jest wartość skrótu, ale tylko kopię skrótem część danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="d1d41-256">Note that the return value of this method is not the hash value, but only a copy of the hashed part of the input data.</span></span>  <span data-ttu-id="d1d41-257">Można pobrać ostatecznych mieszany wartość po wywołaniu <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A> metoda, get, tablica bajtów zawartych w <xref:System.Security.Cryptography.HashAlgorithm.Hash%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="d1d41-257">To retrieve the final hashed value after calling the <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A> method, get the byte array contained in the <xref:System.Security.Cryptography.HashAlgorithm.Hash%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1d41-258">Poniższy kod przykłady użycia <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A> metody z <xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A> metody skrótu ciągu.</span><span class="sxs-lookup"><span data-stu-id="d1d41-258">The following code examples use the <xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A> method with the <xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A> method to hash a string.</span></span>  
  
 [!code-csharp[Cryptography.HashAlgorithm.TransformFinalBlock#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.HashAlgorithm.TransformFinalBlock/CS/sample.cs#1)]
 [!code-vb[Cryptography.HashAlgorithm.TransformFinalBlock#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.HashAlgorithm.TransformFinalBlock/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d1d41-259"><paramref name="inputCount" /> używa nieprawidłową wartość.</span><span class="sxs-lookup"><span data-stu-id="d1d41-259"><paramref name="inputCount" /> uses an invalid value.</span></span>  
  
 <span data-ttu-id="d1d41-260">—lub—</span><span class="sxs-lookup"><span data-stu-id="d1d41-260">-or-</span></span>  
  
 <span data-ttu-id="d1d41-261"><paramref name="inputBuffer" /> ma nieprawidłową długość przesunięcia.</span><span class="sxs-lookup"><span data-stu-id="d1d41-261"><paramref name="inputBuffer" /> has an invalid offset length.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d1d41-262"><paramref name="inputBuffer" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d1d41-262"><paramref name="inputBuffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d1d41-263"><paramref name="inputOffset" /> jest poza zakresem.</span><span class="sxs-lookup"><span data-stu-id="d1d41-263"><paramref name="inputOffset" /> is out of range.</span></span> <span data-ttu-id="d1d41-264">Ten parametr wymaga liczby nieujemnej.</span><span class="sxs-lookup"><span data-stu-id="d1d41-264">This parameter requires a non-negative number.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d1d41-265">Obiekt został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="d1d41-265">The object has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryComputeHash">
      <MemberSignature Language="C#" Value="public bool TryComputeHash (ReadOnlySpan&lt;byte&gt; source, Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryComputeHash(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.TryComputeHash(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryComputeHash (source As ReadOnlySpan(Of Byte), destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryComputeHash(ReadOnlySpan&lt;System::Byte&gt; source, Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="destination">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryHashFinal">
      <MemberSignature Language="C#" Value="protected virtual bool TryHashFinal (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TryHashFinal(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HashAlgorithm.TryHashFinal(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TryHashFinal (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TryHashFinal(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>