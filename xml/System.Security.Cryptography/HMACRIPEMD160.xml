<Type Name="HMACRIPEMD160" FullName="System.Security.Cryptography.HMACRIPEMD160">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="af4f8995a55f8bf92313c47b792af80d17b7aef7" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39878660" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HMACRIPEMD160 : System.Security.Cryptography.HMAC" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HMACRIPEMD160 extends System.Security.Cryptography.HMAC" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.HMACRIPEMD160" />
  <TypeSignature Language="VB.NET" Value="Public Class HMACRIPEMD160&#xA;Inherits HMAC" />
  <TypeSignature Language="C++ CLI" Value="public ref class HMACRIPEMD160 : System::Security::Cryptography::HMAC" />
  <TypeSignature Language="F#" Value="type HMACRIPEMD160 = class&#xA;    inherit HMAC" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.HMAC</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d3cfe-101">Oblicza bazujących na skrótach komunikat o kod uwierzytelniania (HMAC) przy użyciu <see cref="T:System.Security.Cryptography.RIPEMD160" /> wyznaczania wartości skrótu funkcji.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d3cfe-101">Computes a Hash-based Message Authentication Code (HMAC) by using the <see cref="T:System.Security.Cryptography.RIPEMD160" /> hash function.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3cfe-102"><xref:System.Security.Cryptography.HMACRIPEMD160> jest typem algorytm skrótu kluczem, który jest zbudowany z funkcji skrótu RIPEMD 160 i używane jako bazujących na skrótach komunikatów uwierzytelniania kodu (HMAC).</span><span class="sxs-lookup"><span data-stu-id="d3cfe-102"><xref:System.Security.Cryptography.HMACRIPEMD160> is a type of keyed hash algorithm that is constructed from the RIPEMD-160 hash function and used as a Hash-based Message Authentication Code (HMAC).</span></span> <span data-ttu-id="d3cfe-103">Proces HMAC łączy klucz tajny z danymi wiadomości, tworzy skrót wyniku przy użyciu funkcji skrótu, łączy skrót z kluczem tajnym ponownie i następnie stosuje funkcję skrótu po raz drugi.</span><span class="sxs-lookup"><span data-stu-id="d3cfe-103">The HMAC process mixes a secret key with the message data, hashes the result with the hash function, mixes that hash value with the secret key again, and then applies the hash function a second time.</span></span> <span data-ttu-id="d3cfe-104">Wynikowy skrót ma 160 bitów długości.</span><span class="sxs-lookup"><span data-stu-id="d3cfe-104">The output hash is 160 bits in length.</span></span>  
  
 <span data-ttu-id="d3cfe-105">HMAC może służyć do określenia, czy komunikat wysyłany za pośrednictwem niezabezpieczonego kanału została naruszona, pod warunkiem, że nadawcą i odbiorcą udostępnianie klucz tajny.</span><span class="sxs-lookup"><span data-stu-id="d3cfe-105">An HMAC can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</span></span> <span data-ttu-id="d3cfe-106">Nadawca oblicza wartość skrótu dla niej oryginalne dane i wysyła oryginalne dane i wartość skrótu jako pojedynczą wiadomość.</span><span class="sxs-lookup"><span data-stu-id="d3cfe-106">The sender computes the hash value for the original data and sends both the original data and the hash value as a single message.</span></span> <span data-ttu-id="d3cfe-107">Odbiornik ponownie oblicza wartość skrótu dla odebranego komunikatu i sprawdza, czy obliczanej HMAC odpowiada przesyłane HMAC.</span><span class="sxs-lookup"><span data-stu-id="d3cfe-107">The receiver recalculates the hash value on the received message and checks that the computed HMAC matches the transmitted HMAC.</span></span>  
  
 <span data-ttu-id="d3cfe-108">Wszelkie zmiany danych lub wartość skrótu powoduje niezgodność, ponieważ znajomości klucz tajny jest wymagany do zmienić komunikat i Odtwórz wartość skrótu poprawne.</span><span class="sxs-lookup"><span data-stu-id="d3cfe-108">Any change to the data or the hash value results in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct hash value.</span></span> <span data-ttu-id="d3cfe-109">W związku z tym jeśli odpowiada wartości skrótu oryginalnego i obliczanej, wiadomość została uwierzytelniona.</span><span class="sxs-lookup"><span data-stu-id="d3cfe-109">Therefore, if the original and computed hash values match, the message is authenticated.</span></span>  
  
 <span data-ttu-id="d3cfe-110"><xref:System.Security.Cryptography.HMACRIPEMD160> akceptuje klucze o dowolnym rozmiarze i stworzy sekwencję wyznaczania wartości skrótu, która ma długość 160 bitów.</span><span class="sxs-lookup"><span data-stu-id="d3cfe-110"><xref:System.Security.Cryptography.HMACRIPEMD160> accepts keys of any size, and produces a hash sequence that is 160 bits long.</span></span>  
  
 <span data-ttu-id="d3cfe-111">Algorytm wyznaczania wartości skrótu RIPEMD oraz jej następców zostały opracowane przez DOJRZAŁE Europejskiego projekt.</span><span class="sxs-lookup"><span data-stu-id="d3cfe-111">The RIPEMD hash algorithm and its successors were developed by the European RIPE project.</span></span> <span data-ttu-id="d3cfe-112">Pierwotny algorytm RIPEMD zaprojektowano tak, aby zastąpić MD4 i MD5 i później została wzmocniona i RIPEMD 160 zmieniona.</span><span class="sxs-lookup"><span data-stu-id="d3cfe-112">The original RIPEMD algorithm was designed to replace MD4 and MD5 and was later strengthened and renamed RIPEMD-160.</span></span> <span data-ttu-id="d3cfe-113">Algorytm wyznaczania wartości skrótu RIPEMD 160 generuje wartość skrótu 160-bitowych.</span><span class="sxs-lookup"><span data-stu-id="d3cfe-113">The RIPEMD-160 hash algorithm produces a 160-bit hash value.</span></span> <span data-ttu-id="d3cfe-114">Projektanci algorytm umieszczono je w domenie publicznej.</span><span class="sxs-lookup"><span data-stu-id="d3cfe-114">The algorithm's designers have placed it in the public domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3cfe-115">Poniższy przykład pokazuje, jak podpisać plik przy użyciu <xref:System.Security.Cryptography.HMACRIPEMD160> obiektu, a następnie przedstawiono sposób sprawdzania pliku.</span><span class="sxs-lookup"><span data-stu-id="d3cfe-115">The following example shows how to sign a file by using the <xref:System.Security.Cryptography.HMACRIPEMD160> object and then how to verify the file.</span></span>  
  
 [!code-cpp[HMACRIPEMD160#1](~/samples/snippets/cpp/VS_Snippets_CLR/HMACRIPEMD160/CPP/hmacripemd160.cpp#1)]
 [!code-csharp[HMACRIPEMD160#1](~/samples/snippets/csharp/VS_Snippets_CLR/HMACRIPEMD160/CS/hmacripemd160.cs#1)]
 [!code-vb[HMACRIPEMD160#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/HMACRIPEMD160/vb/hmacripemd160.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d3cfe-116">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.HMACRIPEMD160" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3cfe-116">Initializes a new instance of the <see cref="T:System.Security.Cryptography.HMACRIPEMD160" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HMACRIPEMD160 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMACRIPEMD160.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HMACRIPEMD160();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d3cfe-117">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.HMACRIPEMD160" /> klasy z losowo generowany 64-bajtowy klucz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3cfe-117">Initializes a new instance of the <see cref="T:System.Security.Cryptography.HMACRIPEMD160" /> class with a randomly generated 64-byte key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3cfe-118"><xref:System.Security.Cryptography.HMACRIPEMD160> jest typem algorytm skrótu kluczem, który jest zbudowany z funkcji skrótu RIPEMD 160 i używane jako bazujących na skrótach komunikatów uwierzytelniania kodu (HMAC).</span><span class="sxs-lookup"><span data-stu-id="d3cfe-118"><xref:System.Security.Cryptography.HMACRIPEMD160> is a type of keyed hash algorithm that is constructed from the RIPEMD-160 hash function and used as a Hash-based Message Authentication Code (HMAC).</span></span> <span data-ttu-id="d3cfe-119">Proces HMAC łączy klucz tajny z danymi wiadomości, tworzy skrót wyniku przy użyciu funkcji skrótu, łączy skrót z kluczem tajnym ponownie i następnie stosuje funkcję skrótu po raz drugi.</span><span class="sxs-lookup"><span data-stu-id="d3cfe-119">The HMAC process mixes a secret key with the message data, hashes the result with the hash function, mixes that hash value with the secret key again, and then applies the hash function a second time.</span></span> <span data-ttu-id="d3cfe-120">Wynikowy skrót ma 160 bajtów długości.</span><span class="sxs-lookup"><span data-stu-id="d3cfe-120">The output hash is 160 bytes in length.</span></span>  
  
 <span data-ttu-id="d3cfe-121">Ten konstruktor korzysta z 64-bajtowych, losowo wygenerowany klucz.</span><span class="sxs-lookup"><span data-stu-id="d3cfe-121">This constructor uses a 64-byte, randomly generated key.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HMACRIPEMD160 (byte[] key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMACRIPEMD160.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HMACRIPEMD160(cli::array &lt;System::Byte&gt; ^ key);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.HMACRIPEMD160 : byte[] -&gt; System.Security.Cryptography.HMACRIPEMD160" Usage="new System.Security.Cryptography.HMACRIPEMD160 key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="d3cfe-122">Klucz tajny dla <see cref="T:System.Security.Cryptography.HMACRIPEMD160" /> szyfrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3cfe-122">The secret key for <see cref="T:System.Security.Cryptography.HMACRIPEMD160" /> encryption.</span>
          </span>
          <span data-ttu-id="d3cfe-123">Klucz może być dowolnej długości, ale jeśli jest więcej niż 64 bajtów jego skrót jest tworzony (przy użyciu algorytmu SHA-1) do uzyskania klucza 64 bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3cfe-123">The key can be any length, but if it is more than 64 bytes long it is hashed (using SHA-1) to derive a 64-byte key.</span>
          </span>
          <span data-ttu-id="d3cfe-124">W związku z tym zalecany rozmiar klucza tajnego wynosi 64 bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3cfe-124">Therefore, the recommended size of the secret key is 64 bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3cfe-125">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.HMACRIPEMD160" /> klasy przy użyciu określonego klucza danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3cfe-125">Initializes a new instance of the <see cref="T:System.Security.Cryptography.HMACRIPEMD160" /> class with the specified key data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3cfe-126"><xref:System.Security.Cryptography.HMACRIPEMD160> jest typem algorytm skrótu kluczem, który jest zbudowany z funkcji skrótu RIPEMD 160 i używane jako bazujących na skrótach komunikatów uwierzytelniania kodu (HMAC).</span><span class="sxs-lookup"><span data-stu-id="d3cfe-126"><xref:System.Security.Cryptography.HMACRIPEMD160> is a type of keyed hash algorithm that is constructed from the RIPEMD-160 hash function and used as a Hash-based Message Authentication Code (HMAC).</span></span> <span data-ttu-id="d3cfe-127">Proces HMAC łączy klucz tajny z danymi wiadomości, tworzy skrót wyniku przy użyciu funkcji skrótu, łączy skrót z kluczem tajnym ponownie i następnie stosuje funkcję skrótu po raz drugi.</span><span class="sxs-lookup"><span data-stu-id="d3cfe-127">The HMAC process mixes a secret key with the message data, hashes the result with the hash function, mixes that hash value with the secret key again, and then applies the hash function a second time.</span></span> <span data-ttu-id="d3cfe-128">Wynikowy skrót ma 160 bajtów długości.</span><span class="sxs-lookup"><span data-stu-id="d3cfe-128">The output hash is 160 bytes in length.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3cfe-129">Na przykład dotyczące używania tego konstruktora zobacz <xref:System.Security.Cryptography.HMACRIPEMD160> klasy.</span><span class="sxs-lookup"><span data-stu-id="d3cfe-129">For an example of how to use this constructor, see the <xref:System.Security.Cryptography.HMACRIPEMD160> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d3cfe-130">
            <paramref name="key" /> Parametr <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3cfe-130">The <paramref name="key" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>