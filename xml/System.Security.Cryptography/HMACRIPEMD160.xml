<Type Name="HMACRIPEMD160" FullName="System.Security.Cryptography.HMACRIPEMD160">
  <Metadata><Meta Name="ms.openlocfilehash" Value="410104d3cbf47b382f5d8c81f5dd34f5b4791190" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69352530" /></Metadata><TypeSignature Language="C#" Value="public class HMACRIPEMD160 : System.Security.Cryptography.HMAC" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HMACRIPEMD160 extends System.Security.Cryptography.HMAC" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.HMACRIPEMD160" />
  <TypeSignature Language="VB.NET" Value="Public Class HMACRIPEMD160&#xA;Inherits HMAC" />
  <TypeSignature Language="C++ CLI" Value="public ref class HMACRIPEMD160 : System::Security::Cryptography::HMAC" />
  <TypeSignature Language="F#" Value="type HMACRIPEMD160 = class&#xA;    inherit HMAC" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.HMAC</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2dc04-101">Oblicza kod uwierzytelniania wiadomości oparte na skrótach (HMAC) przy użyciu <see cref="T:System.Security.Cryptography.RIPEMD160" /> funkcji skrótu.</span><span class="sxs-lookup"><span data-stu-id="2dc04-101">Computes a Hash-based Message Authentication Code (HMAC) by using the <see cref="T:System.Security.Cryptography.RIPEMD160" /> hash function.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc04-102"><xref:System.Security.Cryptography.HMACRIPEMD160>jest typem wbudowanego algorytmu wyznaczania wartości skrótu, który jest zbudowany z funkcji skrótu RIPEMD-160 i używany jako kod uwierzytelniania wiadomości oparty na skrótach (HMAC).</span><span class="sxs-lookup"><span data-stu-id="2dc04-102"><xref:System.Security.Cryptography.HMACRIPEMD160> is a type of keyed hash algorithm that is constructed from the RIPEMD-160 hash function and used as a Hash-based Message Authentication Code (HMAC).</span></span> <span data-ttu-id="2dc04-103">Proces HMAC miesza klucz tajny z danymi wiadomości, miesza wynik przy użyciu funkcji hash, miesza tę wartość skrótu z kluczem tajnym, a następnie stosuje funkcję skrótu po raz drugi.</span><span class="sxs-lookup"><span data-stu-id="2dc04-103">The HMAC process mixes a secret key with the message data, hashes the result with the hash function, mixes that hash value with the secret key again, and then applies the hash function a second time.</span></span> <span data-ttu-id="2dc04-104">Wynikowy skrót ma długość 160 bitów.</span><span class="sxs-lookup"><span data-stu-id="2dc04-104">The output hash is 160 bits in length.</span></span>  
  
 <span data-ttu-id="2dc04-105">Można użyć algorytmu HMAC, aby określić, czy wiadomość wysłana za pośrednictwem niezabezpieczonego kanału została naruszona, pod warunkiem, że nadawca i odbiorca korzystają z klucza tajnego.</span><span class="sxs-lookup"><span data-stu-id="2dc04-105">An HMAC can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</span></span> <span data-ttu-id="2dc04-106">Nadawca oblicza wartość skrótu dla oryginalnych danych i wysyła zarówno oryginalne dane, jak i wartość skrótu jako jeden komunikat.</span><span class="sxs-lookup"><span data-stu-id="2dc04-106">The sender computes the hash value for the original data and sends both the original data and the hash value as a single message.</span></span> <span data-ttu-id="2dc04-107">Odbiorca ponownie oblicza wartość skrótu dla odebranego komunikatu i sprawdza, czy obliczony HMAC jest zgodny z przesłanym algorytmem HMAC.</span><span class="sxs-lookup"><span data-stu-id="2dc04-107">The receiver recalculates the hash value on the received message and checks that the computed HMAC matches the transmitted HMAC.</span></span>  
  
 <span data-ttu-id="2dc04-108">Wszelkie zmiany danych lub wartości skrótu wynoszą niezgodność, ponieważ znajomość klucza tajnego jest wymagana do zmiany komunikatu i odtworzenia poprawnej wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="2dc04-108">Any change to the data or the hash value results in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct hash value.</span></span> <span data-ttu-id="2dc04-109">W związku z tym, jeśli oryginalne i obliczone wartości skrótu są zgodne, komunikat jest uwierzytelniany.</span><span class="sxs-lookup"><span data-stu-id="2dc04-109">Therefore, if the original and computed hash values match, the message is authenticated.</span></span>  
  
 <span data-ttu-id="2dc04-110"><xref:System.Security.Cryptography.HMACRIPEMD160>akceptuje klucze o dowolnym rozmiarze i tworzy sekwencję skrótu o długości 160 bitów.</span><span class="sxs-lookup"><span data-stu-id="2dc04-110"><xref:System.Security.Cryptography.HMACRIPEMD160> accepts keys of any size, and produces a hash sequence that is 160 bits long.</span></span>  
  
 <span data-ttu-id="2dc04-111">Algorytm wyznaczania wartości skrótu RIPEMD i jego następników zostały opracowane przez Europejski, DOJRZAŁy projekt.</span><span class="sxs-lookup"><span data-stu-id="2dc04-111">The RIPEMD hash algorithm and its successors were developed by the European RIPE project.</span></span> <span data-ttu-id="2dc04-112">Oryginalny algorytm RIPEMD został zaprojektowany, aby zastąpić algorytm MD4 i MD5, a następnie został w późniejszym czasie wzmocniony i zmieniono jego nazwę RIPEMD-160.</span><span class="sxs-lookup"><span data-stu-id="2dc04-112">The original RIPEMD algorithm was designed to replace MD4 and MD5 and was later strengthened and renamed RIPEMD-160.</span></span> <span data-ttu-id="2dc04-113">Algorytm wyznaczania wartości skrótu RIPEMD-160 daje 160-bitową wartość mieszania.</span><span class="sxs-lookup"><span data-stu-id="2dc04-113">The RIPEMD-160 hash algorithm produces a 160-bit hash value.</span></span> <span data-ttu-id="2dc04-114">Projektanci algorytmu umieszczali ją w domenie publicznej.</span><span class="sxs-lookup"><span data-stu-id="2dc04-114">The algorithm's designers have placed it in the public domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2dc04-115">Poniższy przykład pokazuje, jak podpisać plik przy użyciu <xref:System.Security.Cryptography.HMACRIPEMD160> obiektu, a następnie jak zweryfikować plik.</span><span class="sxs-lookup"><span data-stu-id="2dc04-115">The following example shows how to sign a file by using the <xref:System.Security.Cryptography.HMACRIPEMD160> object and then how to verify the file.</span></span>  
  
 [!code-cpp[HMACRIPEMD160#1](~/samples/snippets/cpp/VS_Snippets_CLR/HMACRIPEMD160/CPP/hmacripemd160.cpp#1)]
 [!code-csharp[HMACRIPEMD160#1](~/samples/snippets/csharp/VS_Snippets_CLR/HMACRIPEMD160/CS/hmacripemd160.cs#1)]
 [!code-vb[HMACRIPEMD160#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/HMACRIPEMD160/vb/hmacripemd160.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="2dc04-116">Usługi kryptograficzne</span><span class="sxs-lookup"><span data-stu-id="2dc04-116">Cryptographic Services</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2dc04-117">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.HMACRIPEMD160" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="2dc04-117">Initializes a new instance of the <see cref="T:System.Security.Cryptography.HMACRIPEMD160" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HMACRIPEMD160 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMACRIPEMD160.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HMACRIPEMD160();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2dc04-118">Inicjuje nowe wystąpienie <see cref="T:System.Security.Cryptography.HMACRIPEMD160" /> klasy z losowo wygenerowanym kluczem 64-bajtowym.</span><span class="sxs-lookup"><span data-stu-id="2dc04-118">Initializes a new instance of the <see cref="T:System.Security.Cryptography.HMACRIPEMD160" /> class with a randomly generated 64-byte key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc04-119"><xref:System.Security.Cryptography.HMACRIPEMD160>jest typem wbudowanego algorytmu wyznaczania wartości skrótu, który jest zbudowany z funkcji skrótu RIPEMD-160 i używany jako kod uwierzytelniania wiadomości oparty na skrótach (HMAC).</span><span class="sxs-lookup"><span data-stu-id="2dc04-119"><xref:System.Security.Cryptography.HMACRIPEMD160> is a type of keyed hash algorithm that is constructed from the RIPEMD-160 hash function and used as a Hash-based Message Authentication Code (HMAC).</span></span> <span data-ttu-id="2dc04-120">Proces HMAC miesza klucz tajny z danymi wiadomości, miesza wynik przy użyciu funkcji hash, miesza tę wartość skrótu z kluczem tajnym, a następnie stosuje funkcję skrótu po raz drugi.</span><span class="sxs-lookup"><span data-stu-id="2dc04-120">The HMAC process mixes a secret key with the message data, hashes the result with the hash function, mixes that hash value with the secret key again, and then applies the hash function a second time.</span></span> <span data-ttu-id="2dc04-121">Wartość skrótu wyjściowego to 160 bajtów.</span><span class="sxs-lookup"><span data-stu-id="2dc04-121">The output hash is 160 bytes in length.</span></span>  
  
 <span data-ttu-id="2dc04-122">Ten konstruktor używa 64-bajtowego, losowo generowanego klucza.</span><span class="sxs-lookup"><span data-stu-id="2dc04-122">This constructor uses a 64-byte, randomly generated key.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="2dc04-123">Usługi kryptograficzne</span><span class="sxs-lookup"><span data-stu-id="2dc04-123">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HMACRIPEMD160 (byte[] key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMACRIPEMD160.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HMACRIPEMD160(cli::array &lt;System::Byte&gt; ^ key);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.HMACRIPEMD160 : byte[] -&gt; System.Security.Cryptography.HMACRIPEMD160" Usage="new System.Security.Cryptography.HMACRIPEMD160 key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="2dc04-124">Klucz tajny do <see cref="T:System.Security.Cryptography.HMACRIPEMD160" /> szyfrowania.</span><span class="sxs-lookup"><span data-stu-id="2dc04-124">The secret key for <see cref="T:System.Security.Cryptography.HMACRIPEMD160" /> encryption.</span></span> <span data-ttu-id="2dc04-125">Klucz może być dowolną długością, ale jeśli jest więcej niż 64 bajtów, jest używana wartość skrótu (przy użyciu algorytmu SHA-1) w celu uzyskania klucza 64-bajtowego.</span><span class="sxs-lookup"><span data-stu-id="2dc04-125">The key can be any length, but if it is more than 64 bytes long it is hashed (using SHA-1) to derive a 64-byte key.</span></span> <span data-ttu-id="2dc04-126">W związku z tym zalecanym rozmiarem klucza tajnego jest 64 bajtów.</span><span class="sxs-lookup"><span data-stu-id="2dc04-126">Therefore, the recommended size of the secret key is 64 bytes.</span></span></param>
        <summary><span data-ttu-id="2dc04-127">Inicjuje nowe wystąpienie <see cref="T:System.Security.Cryptography.HMACRIPEMD160" /> klasy z określonymi danymi klucza.</span><span class="sxs-lookup"><span data-stu-id="2dc04-127">Initializes a new instance of the <see cref="T:System.Security.Cryptography.HMACRIPEMD160" /> class with the specified key data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dc04-128"><xref:System.Security.Cryptography.HMACRIPEMD160>jest typem wbudowanego algorytmu wyznaczania wartości skrótu, który jest zbudowany z funkcji skrótu RIPEMD-160 i używany jako kod uwierzytelniania wiadomości oparty na skrótach (HMAC).</span><span class="sxs-lookup"><span data-stu-id="2dc04-128"><xref:System.Security.Cryptography.HMACRIPEMD160> is a type of keyed hash algorithm that is constructed from the RIPEMD-160 hash function and used as a Hash-based Message Authentication Code (HMAC).</span></span> <span data-ttu-id="2dc04-129">Proces HMAC miesza klucz tajny z danymi wiadomości, miesza wynik przy użyciu funkcji hash, miesza tę wartość skrótu z kluczem tajnym, a następnie stosuje funkcję skrótu po raz drugi.</span><span class="sxs-lookup"><span data-stu-id="2dc04-129">The HMAC process mixes a secret key with the message data, hashes the result with the hash function, mixes that hash value with the secret key again, and then applies the hash function a second time.</span></span> <span data-ttu-id="2dc04-130">Wartość skrótu wyjściowego to 160 bajtów.</span><span class="sxs-lookup"><span data-stu-id="2dc04-130">The output hash is 160 bytes in length.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2dc04-131">Aby zapoznać się z przykładem użycia tego konstruktora, zobacz <xref:System.Security.Cryptography.HMACRIPEMD160> Klasa.</span><span class="sxs-lookup"><span data-stu-id="2dc04-131">For an example of how to use this constructor, see the <xref:System.Security.Cryptography.HMACRIPEMD160> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2dc04-132">Parametr ma wartość <see langword="null" />. <paramref name="key" /></span><span class="sxs-lookup"><span data-stu-id="2dc04-132">The <paramref name="key" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="2dc04-133">Usługi kryptograficzne</span><span class="sxs-lookup"><span data-stu-id="2dc04-133">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
