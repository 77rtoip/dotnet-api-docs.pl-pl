<Type Name="HMACRIPEMD160" FullName="System.Security.Cryptography.HMACRIPEMD160">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6e0915be18b8c1f8512a72dc9a1f0f642e7d7ee6" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37624175" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HMACRIPEMD160 : System.Security.Cryptography.HMAC" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HMACRIPEMD160 extends System.Security.Cryptography.HMAC" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.HMACRIPEMD160" />
  <TypeSignature Language="VB.NET" Value="Public Class HMACRIPEMD160&#xA;Inherits HMAC" />
  <TypeSignature Language="C++ CLI" Value="public ref class HMACRIPEMD160 : System::Security::Cryptography::HMAC" />
  <TypeSignature Language="F#" Value="type HMACRIPEMD160 = class&#xA;    inherit HMAC" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.HMAC</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Oblicza bazujących na skrótach komunikat o kod uwierzytelniania (HMAC) przy użyciu <see cref="T:System.Security.Cryptography.RIPEMD160" /> wyznaczania wartości skrótu funkcji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.HMACRIPEMD160> jest typem algorytm skrótu kluczem, który jest zbudowany z funkcji skrótu RIPEMD 160 i używane jako bazujących na skrótach komunikatów uwierzytelniania kodu (HMAC). Proces HMAC łączy klucz tajny z danymi wiadomości, tworzy skrót wyniku przy użyciu funkcji skrótu, łączy skrót z kluczem tajnym ponownie i następnie stosuje funkcję skrótu po raz drugi. Wynikowy skrót ma 160 bitów długości.  
  
 HMAC może służyć do określenia, czy komunikat wysyłany za pośrednictwem niezabezpieczonego kanału została naruszona, pod warunkiem, że nadawcą i odbiorcą udostępnianie klucz tajny. Nadawca oblicza wartość skrótu dla niej oryginalne dane i wysyła oryginalne dane i wartość skrótu jako pojedynczą wiadomość. Odbiornik ponownie oblicza wartość skrótu dla odebranego komunikatu i sprawdza, czy obliczanej HMAC odpowiada przesyłane HMAC.  
  
 Wszelkie zmiany danych lub wartość skrótu powoduje niezgodność, ponieważ znajomości klucz tajny jest wymagany do zmienić komunikat i Odtwórz wartość skrótu poprawne. W związku z tym jeśli odpowiada wartości skrótu oryginalnego i obliczanej, wiadomość została uwierzytelniona.  
  
 <xref:System.Security.Cryptography.HMACRIPEMD160> akceptuje klucze o dowolnym rozmiarze i stworzy sekwencję wyznaczania wartości skrótu, która ma długość 160 bitów.  
  
 Algorytm wyznaczania wartości skrótu RIPEMD oraz jej następców zostały opracowane przez DOJRZAŁE Europejskiego projekt. Pierwotny algorytm RIPEMD zaprojektowano tak, aby zastąpić MD4 i MD5 i później została wzmocniona i RIPEMD 160 zmieniona. Algorytm wyznaczania wartości skrótu RIPEMD 160 generuje wartość skrótu 160-bitowych. Projektanci algorytm umieszczono je w domenie publicznej.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak podpisać plik przy użyciu <xref:System.Security.Cryptography.HMACRIPEMD160> obiektu, a następnie przedstawiono sposób sprawdzania pliku.  
  
 [!code-cpp[HMACRIPEMD160#1](~/samples/snippets/cpp/VS_Snippets_CLR/HMACRIPEMD160/CPP/hmacripemd160.cpp#1)]
 [!code-csharp[HMACRIPEMD160#1](~/samples/snippets/csharp/VS_Snippets_CLR/HMACRIPEMD160/CS/hmacripemd160.cs#1)]
 [!code-vb[HMACRIPEMD160#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/HMACRIPEMD160/vb/hmacripemd160.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.HMACRIPEMD160" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HMACRIPEMD160 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMACRIPEMD160.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HMACRIPEMD160();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.HMACRIPEMD160" /> klasy z losowo generowany 64-bajtowy klucz.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.HMACRIPEMD160> jest typem algorytm skrótu kluczem, który jest zbudowany z funkcji skrótu RIPEMD 160 i używane jako bazujących na skrótach komunikatów uwierzytelniania kodu (HMAC). Proces HMAC łączy klucz tajny z danymi wiadomości, tworzy skrót wyniku przy użyciu funkcji skrótu, łączy skrót z kluczem tajnym ponownie i następnie stosuje funkcję skrótu po raz drugi. Wynikowy skrót ma 160 bajtów długości.  
  
 Ten konstruktor korzysta z 64-bajtowych, losowo wygenerowany klucz.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HMACRIPEMD160 (byte[] key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMACRIPEMD160.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HMACRIPEMD160(cli::array &lt;System::Byte&gt; ^ key);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.HMACRIPEMD160 : byte[] -&gt; System.Security.Cryptography.HMACRIPEMD160" Usage="new System.Security.Cryptography.HMACRIPEMD160 key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="key">Klucz tajny dla <see cref="T:System.Security.Cryptography.HMACRIPEMD160" /> szyfrowania. Klucz może być dowolnej długości, ale jeśli jest więcej niż 64 bajtów jego skrót jest tworzony (przy użyciu algorytmu SHA-1) do uzyskania klucza 64 bajtów. W związku z tym zalecany rozmiar klucza tajnego wynosi 64 bajtów.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.HMACRIPEMD160" /> klasy przy użyciu określonego klucza danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.HMACRIPEMD160> jest typem algorytm skrótu kluczem, który jest zbudowany z funkcji skrótu RIPEMD 160 i używane jako bazujących na skrótach komunikatów uwierzytelniania kodu (HMAC). Proces HMAC łączy klucz tajny z danymi wiadomości, tworzy skrót wyniku przy użyciu funkcji skrótu, łączy skrót z kluczem tajnym ponownie i następnie stosuje funkcję skrótu po raz drugi. Wynikowy skrót ma 160 bajtów długości.  
  
   
  
## Examples  
 Na przykład dotyczące używania tego konstruktora zobacz <xref:System.Security.Cryptography.HMACRIPEMD160> klasy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> Parametr <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>