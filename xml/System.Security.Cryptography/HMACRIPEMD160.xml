<Type Name="HMACRIPEMD160" FullName="System.Security.Cryptography.HMACRIPEMD160">
  <Metadata><Meta Name="ms.openlocfilehash" Value="410104d3cbf47b382f5d8c81f5dd34f5b4791190" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69352530" /></Metadata><TypeSignature Language="C#" Value="public class HMACRIPEMD160 : System.Security.Cryptography.HMAC" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HMACRIPEMD160 extends System.Security.Cryptography.HMAC" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.HMACRIPEMD160" />
  <TypeSignature Language="VB.NET" Value="Public Class HMACRIPEMD160&#xA;Inherits HMAC" />
  <TypeSignature Language="C++ CLI" Value="public ref class HMACRIPEMD160 : System::Security::Cryptography::HMAC" />
  <TypeSignature Language="F#" Value="type HMACRIPEMD160 = class&#xA;    inherit HMAC" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.HMAC</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Oblicza kod uwierzytelniania wiadomości oparte na skrótach (HMAC) przy użyciu <see cref="T:System.Security.Cryptography.RIPEMD160" /> funkcji skrótu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.HMACRIPEMD160>jest typem wbudowanego algorytmu wyznaczania wartości skrótu, który jest zbudowany z funkcji skrótu RIPEMD-160 i używany jako kod uwierzytelniania wiadomości oparty na skrótach (HMAC). Proces HMAC miesza klucz tajny z danymi wiadomości, miesza wynik przy użyciu funkcji hash, miesza tę wartość skrótu z kluczem tajnym, a następnie stosuje funkcję skrótu po raz drugi. Wynikowy skrót ma długość 160 bitów.  
  
 Można użyć algorytmu HMAC, aby określić, czy wiadomość wysłana za pośrednictwem niezabezpieczonego kanału została naruszona, pod warunkiem, że nadawca i odbiorca korzystają z klucza tajnego. Nadawca oblicza wartość skrótu dla oryginalnych danych i wysyła zarówno oryginalne dane, jak i wartość skrótu jako jeden komunikat. Odbiorca ponownie oblicza wartość skrótu dla odebranego komunikatu i sprawdza, czy obliczony HMAC jest zgodny z przesłanym algorytmem HMAC.  
  
 Wszelkie zmiany danych lub wartości skrótu wynoszą niezgodność, ponieważ znajomość klucza tajnego jest wymagana do zmiany komunikatu i odtworzenia poprawnej wartości skrótu. W związku z tym, jeśli oryginalne i obliczone wartości skrótu są zgodne, komunikat jest uwierzytelniany.  
  
 <xref:System.Security.Cryptography.HMACRIPEMD160>akceptuje klucze o dowolnym rozmiarze i tworzy sekwencję skrótu o długości 160 bitów.  
  
 Algorytm wyznaczania wartości skrótu RIPEMD i jego następników zostały opracowane przez Europejski, DOJRZAŁy projekt. Oryginalny algorytm RIPEMD został zaprojektowany, aby zastąpić algorytm MD4 i MD5, a następnie został w późniejszym czasie wzmocniony i zmieniono jego nazwę RIPEMD-160. Algorytm wyznaczania wartości skrótu RIPEMD-160 daje 160-bitową wartość mieszania. Projektanci algorytmu umieszczali ją w domenie publicznej.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak podpisać plik przy użyciu <xref:System.Security.Cryptography.HMACRIPEMD160> obiektu, a następnie jak zweryfikować plik.  
  
 [!code-cpp[HMACRIPEMD160#1](~/samples/snippets/cpp/VS_Snippets_CLR/HMACRIPEMD160/CPP/hmacripemd160.cpp#1)]
 [!code-csharp[HMACRIPEMD160#1](~/samples/snippets/csharp/VS_Snippets_CLR/HMACRIPEMD160/CS/hmacripemd160.cs#1)]
 [!code-vb[HMACRIPEMD160#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/HMACRIPEMD160/vb/hmacripemd160.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Usługi kryptograficzne</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.HMACRIPEMD160" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HMACRIPEMD160 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMACRIPEMD160.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HMACRIPEMD160();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Security.Cryptography.HMACRIPEMD160" /> klasy z losowo wygenerowanym kluczem 64-bajtowym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.HMACRIPEMD160>jest typem wbudowanego algorytmu wyznaczania wartości skrótu, który jest zbudowany z funkcji skrótu RIPEMD-160 i używany jako kod uwierzytelniania wiadomości oparty na skrótach (HMAC). Proces HMAC miesza klucz tajny z danymi wiadomości, miesza wynik przy użyciu funkcji hash, miesza tę wartość skrótu z kluczem tajnym, a następnie stosuje funkcję skrótu po raz drugi. Wartość skrótu wyjściowego to 160 bajtów.  
  
 Ten konstruktor używa 64-bajtowego, losowo generowanego klucza.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Usługi kryptograficzne</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HMACRIPEMD160 (byte[] key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMACRIPEMD160.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HMACRIPEMD160(cli::array &lt;System::Byte&gt; ^ key);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.HMACRIPEMD160 : byte[] -&gt; System.Security.Cryptography.HMACRIPEMD160" Usage="new System.Security.Cryptography.HMACRIPEMD160 key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="key">Klucz tajny do <see cref="T:System.Security.Cryptography.HMACRIPEMD160" /> szyfrowania. Klucz może być dowolną długością, ale jeśli jest więcej niż 64 bajtów, jest używana wartość skrótu (przy użyciu algorytmu SHA-1) w celu uzyskania klucza 64-bajtowego. W związku z tym zalecanym rozmiarem klucza tajnego jest 64 bajtów.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Security.Cryptography.HMACRIPEMD160" /> klasy z określonymi danymi klucza.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.HMACRIPEMD160>jest typem wbudowanego algorytmu wyznaczania wartości skrótu, który jest zbudowany z funkcji skrótu RIPEMD-160 i używany jako kod uwierzytelniania wiadomości oparty na skrótach (HMAC). Proces HMAC miesza klucz tajny z danymi wiadomości, miesza wynik przy użyciu funkcji hash, miesza tę wartość skrótu z kluczem tajnym, a następnie stosuje funkcję skrótu po raz drugi. Wartość skrótu wyjściowego to 160 bajtów.  
  
   
  
## Examples  
 Aby zapoznać się z przykładem użycia tego konstruktora, zobacz <xref:System.Security.Cryptography.HMACRIPEMD160> Klasa.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="key" /></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Usługi kryptograficzne</related>
      </Docs>
    </Member>
  </Members>
</Type>
