<Type Name="DataProtector" FullName="System.Security.Cryptography.DataProtector">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ef3c55edb35c510863f9db0f58ae2ad38c4965d3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30570385" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DataProtector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DataProtector extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.DataProtector" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DataProtector" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataProtector abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia klasę podstawową dla funkcji ochrony danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa chroni dane przechowywane z wyświetlanie i manipulowanie. Dostęp do chronionych danych są uzyskiwane przez utworzenie wystąpienia tej klasy i używania ciągów celu dokładnego, które były używane do ochrony danych.  Obiekt wywołujący nie jest konieczne klucza do ochrony lub wyłączyć ochronę danych. Klucz jest dostarczany przez algorytm szyfrowania.  
  
 Klasy pochodne muszą przesłaniać <xref:System.Security.Cryptography.DataProtector.ProviderProtect%2A> i <xref:System.Security.Cryptography.DataProtector.Unprotect%2A> metod, które <xref:System.Security.Cryptography.DataProtector> podstawowa klasa wywołania do. Musi także zastępować <xref:System.Security.Cryptography.DataProtector.IsReprotectRequired%2A> metodę, która zawsze wrócić `true` z możliwością utraty małej wydajności aplikacji odświeżania ich bazy danych przechowywanych szyfrowania tekstu. Klasy pochodne powinien zawierać konstruktora, który wywołuje konstruktor klasy podstawowej, która ustawia <xref:System.Security.Cryptography.DataProtector.ApplicationName%2A>, <xref:System.Security.Cryptography.DataProtector.SpecificPurposes%2A>, i <xref:System.Security.Cryptography.DataProtector.PrimaryPurpose%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób tworzenia danych funkcji ochrony używającej klasy ochrony z opcją dla dodatkowych entropii. Domyślnie <xref:System.Security.Cryptography.DataProtector> klasy dołącza skrót właściwości cel, aby dane były szyfrowane. Można wyłączyć te funkcje i użyj skrótu cel jako dodatkowa entropia, podczas wywoływania metody ochrony danych, z opcją dodatkowe entropii.  
  
 [!code-csharp[Cryptography.DataProtector#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.dataprotector/cs/class1.cs#1)]
 [!code-vb[Cryptography.DataProtector#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.dataprotector/vb/class1.vb#1)]  
  
 W poniższym przykładzie pokazano proste danych funkcji ochrony, która używa <xref:System.Security.Cryptography.DataProtector.PrependHashedPurposeToPlaintext%2A> funkcjonalność <xref:System.Security.Cryptography.DataProtector> klasy.  
  
 [!code-csharp[Cryptography.MemoryProtector#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.memoryprotector/cs/class1.cs#1)]
 [!code-vb[Cryptography.MemoryProtector#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.memoryprotector/vb/class1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataProtector (string applicationName, string primaryPurpose, string[] specificPurposes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string applicationName, string primaryPurpose, string[] specificPurposes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DataProtector.#ctor(System.String,System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (applicationName As String, primaryPurpose As String, specificPurposes As String())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataProtector(System::String ^ applicationName, System::String ^ primaryPurpose, cli::array &lt;System::String ^&gt; ^ specificPurposes);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="applicationName" Type="System.String" />
        <Parameter Name="primaryPurpose" Type="System.String" />
        <Parameter Name="specificPurposes" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="applicationName">Nazwa aplikacji.</param>
        <param name="primaryPurpose">Głównym celem chronionych danych.</param>
        <param name="specificPurposes">Określonych celów chronionych danych.</param>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.DataProtector" /> przy użyciu nazwy aplikacji podane podstawowym celem i określonych celów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor ustawia <xref:System.Security.Cryptography.DataProtector.ApplicationName%2A>, <xref:System.Security.Cryptography.DataProtector.PrimaryPurpose%2A>, i <xref:System.Security.Cryptography.DataProtector.SpecificPurposes%2A> właściwości. Kombinacja tych trzech właściwości musi jednoznacznie identyfikować dane, które są chronione. Jeśli dane nie jest jednoznacznie zidentyfikować, mogą przypadkowo odczytać błędnych danych lub innych danych mogą być zastępowane dla należy do Ciebie. Przykłady z par podstawowych i określonego celu są "faktura" i faktury numer, "kart upominkowych" oraz liczbę kart upominkowych, "password" i ciąg adresu URL.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="applicationName" /> jest to pusty ciąg lub <see langword="null" />.  
  
 —lub—  
  
 <paramref name="primaryPurpose" /> jest to pusty ciąg lub <see langword="null" />.  
  
 —lub—  
  
 <paramref name="specificPurposes" /> zawiera pusty ciąg lub <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="protected string ApplicationName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DataProtector.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ ApplicationName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę aplikacji.</summary>
        <value>Nazwa aplikacji.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.DataProtector Create (string providerClass, string applicationName, string primaryPurpose, params string[] specificPurposes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.DataProtector Create(string providerClass, string applicationName, string primaryPurpose, string[] specificPurposes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DataProtector.Create(System.String,System.String,System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (providerClass As String, applicationName As String, primaryPurpose As String, ParamArray specificPurposes As String()) As DataProtector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::DataProtector ^ Create(System::String ^ providerClass, System::String ^ applicationName, System::String ^ primaryPurpose, ... cli::array &lt;System::String ^&gt; ^ specificPurposes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.DataProtector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerClass" Type="System.String" />
        <Parameter Name="applicationName" Type="System.String" />
        <Parameter Name="primaryPurpose" Type="System.String" />
        <Parameter Name="specificPurposes" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="providerClass">Nazwa klasy funkcji ochrony danych.</param>
        <param name="applicationName">Nazwa aplikacji.</param>
        <param name="primaryPurpose">Głównym celem chronionych danych.</param>
        <param name="specificPurposes">Określonych celów chronionych danych.</param>
        <summary>Tworzy wystąpienie implementacji funkcji ochrony danych przy użyciu nazwy określonej klasy funkcji ochrony danych, nazwę aplikacji, głównym celem i określonych celów.</summary>
        <returns>Obiekt implementacji funkcji ochrony danych.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerClass" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashedPurpose">
      <MemberSignature Language="C#" Value="protected virtual byte[] GetHashedPurpose ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] GetHashedPurpose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DataProtector.GetHashedPurpose" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetHashedPurpose () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetHashedPurpose();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy skrót wartości właściwości określonej przez konstruktora.</summary>
        <returns>Tablica bajtów, które zawierają skrót <see cref="P:System.Security.Cryptography.DataProtector.ApplicationName" />, <see cref="P:System.Security.Cryptography.DataProtector.PrimaryPurpose" />, i <see cref="P:System.Security.Cryptography.DataProtector.SpecificPurposes" /> właściwości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.DataProtector.GetHashedPurpose%2A> oblicza wartość skrótu nazwę aplikacji i Pełna cel.  Pełna celem jest złączeniem wszystkie <xref:System.Security.Cryptography.DataProtector.PrimaryPurpose%2A> i <xref:System.Security.Cryptography.DataProtector.SpecificPurposes%2A> właściwości.  Każdego z trzech części jest poprzedzone znakiem jego długość, skrót można wycofać.  
  
   
  
## Examples  
 Poniższy przykład przedstawia użycie <xref:System.Security.Cryptography.DataProtector.GetHashedPurpose%2A> metody skrótu właściwości cel do użycia jako dodatkowy entropii.  Nie jest częścią większego przykładu kodu dla <xref:System.Security.Cryptography.DataProtector> klasy.  
  
 [!code-csharp[Cryptography.DataProtector#3](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.dataprotector/cs/class1.cs#3)]
 [!code-vb[Cryptography.DataProtector#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.dataprotector/vb/class1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReprotectRequired">
      <MemberSignature Language="C#" Value="public abstract bool IsReprotectRequired (byte[] encryptedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsReprotectRequired(unsigned int8[] encryptedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DataProtector.IsReprotectRequired(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsReprotectRequired (encryptedData As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsReprotectRequired(cli::array &lt;System::Byte&gt; ^ encryptedData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="encryptedData">Zaszyfrowane dane, które ma zostać obliczone.</param>
        <summary>Określa, czy ponownego szyfrowania jest wymagany dla określonych danych zaszyfrowanych.</summary>
        <returns>
          <see langword="true" /> Jeśli dane muszą być ponownie szyfrowane; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrependHashedPurposeToPlaintext">
      <MemberSignature Language="C#" Value="protected virtual bool PrependHashedPurposeToPlaintext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrependHashedPurposeToPlaintext" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DataProtector.PrependHashedPurposeToPlaintext" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property PrependHashedPurposeToPlaintext As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool PrependHashedPurposeToPlaintext { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa, czy skrót dołączany na początku tablicy tekst przed szyfrowania.</summary>
        <value>Zawsze <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie zakłada się, że klas pochodnych będzie dołączenie wartości skrótu <xref:System.Security.Cryptography.DataProtector.ApplicationName%2A>, <xref:System.Security.Cryptography.DataProtector.PrimaryPurpose%2A>, i <xref:System.Security.Cryptography.DataProtector.SpecificPurposes%2A> właściwości na zwykły tekst przed zaszyfrowaniem i będzie Sprawdź i zweryfikował skrótu podczas odszyfrowywania.  Jeśli klasa pochodna chce Określ prepended dane samodzielnie (na przykład jako wartość opcjonalna entropii), tej właściwości można zastąpić i wartość do zwrócenia `false`.  Jeśli <xref:System.Security.Cryptography.DataProtector.PrependHashedPurposeToPlaintext%2A> jest `false`, <xref:System.Security.Cryptography.DataProtector.Protect%2A> i <xref:System.Security.Cryptography.DataProtector.Unprotect%2A> bezpośrednio za pomocą przekazuje do <xref:System.Security.Cryptography.DataProtector.ProviderProtect%2A> i <xref:System.Security.Cryptography.DataProtector.ProviderUnprotect%2A> zastępuje bez zmiany tablicy bajtów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryPurpose">
      <MemberSignature Language="C#" Value="protected string PrimaryPurpose { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PrimaryPurpose" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DataProtector.PrimaryPurpose" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property PrimaryPurpose As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ PrimaryPurpose { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera podstawowym celem chronionych danych.</summary>
        <value>Głównym celem chronionych danych.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public byte[] Protect (byte[] userData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Protect(unsigned int8[] userData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DataProtector.Protect(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Protect (userData As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Protect(cli::array &lt;System::Byte&gt; ^ userData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="userData">Dane, które mają być chronione.</param>
        <summary>Chroni dane określonego użytkownika.</summary>
        <returns>Tablica bajtów, który zawiera dane zaszyfrowane.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="userData" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ProviderProtect">
      <MemberSignature Language="C#" Value="protected abstract byte[] ProviderProtect (byte[] userData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] ProviderProtect(unsigned int8[] userData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DataProtector.ProviderProtect(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ProviderProtect (userData As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract cli::array &lt;System::Byte&gt; ^ ProviderProtect(cli::array &lt;System::Byte&gt; ^ userData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="userData">Do szyfrowania danych.</param>
        <summary>Określa metodę delegata w pochodnej klasy, która <see cref="M:System.Security.Cryptography.DataProtector.Protect(System.Byte[])" /> ponownie wywołuje metodę w klasie podstawowej.</summary>
        <returns>Tablica bajtów, który zawiera dane zaszyfrowane.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład przedstawia implementację <xref:System.Security.Cryptography.DataProtector.ProviderProtect%2A> metody.  Nie jest częścią większego przykładu kodu dla <xref:System.Security.Cryptography.DataProtector> klasy.  
  
 [!code-csharp[Cryptography.MemoryProtector#3](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.memoryprotector/cs/class1.cs#3)]
 [!code-vb[Cryptography.MemoryProtector#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.memoryprotector/vb/class1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderUnprotect">
      <MemberSignature Language="C#" Value="protected abstract byte[] ProviderUnprotect (byte[] encryptedData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] ProviderUnprotect(unsigned int8[] encryptedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DataProtector.ProviderUnprotect(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ProviderUnprotect (encryptedData As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract cli::array &lt;System::Byte&gt; ^ ProviderUnprotect(cli::array &lt;System::Byte&gt; ^ encryptedData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="encryptedData">Dane niezaszyfrowane.</param>
        <summary>Określa metodę delegata w pochodnej klasy, która <see cref="M:System.Security.Cryptography.DataProtector.Unprotect(System.Byte[])" /> ponownie wywołuje metodę w klasie podstawowej.</summary>
        <returns>Niezaszyfrowane dane.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład przedstawia implementację <xref:System.Security.Cryptography.DataProtector.ProviderUnprotect%2A> metody.  Nie jest częścią większego przykładu kodu dla <xref:System.Security.Cryptography.DataProtector> klasy.  
  
 [!code-csharp[Cryptography.MemoryProtector#4](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.memoryprotector/cs/class1.cs#4)]
 [!code-vb[Cryptography.MemoryProtector#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.memoryprotector/vb/class1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpecificPurposes">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IEnumerable&lt;string&gt; SpecificPurposes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; SpecificPurposes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DataProtector.SpecificPurposes" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property SpecificPurposes As IEnumerable(Of String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ SpecificPurposes { System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera określonych celów chronionych danych.</summary>
        <value>Kolekcja określonych celów chronionych danych.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public byte[] Unprotect (byte[] encryptedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Unprotect(unsigned int8[] encryptedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DataProtector.Unprotect(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Unprotect (encryptedData As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Unprotect(cli::array &lt;System::Byte&gt; ^ encryptedData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="encryptedData">Zaszyfrowane dane do usunięcia ochrony.</param>
        <summary>Wyłącza ochronę określonych danych chronionych.</summary>
        <returns>Tablica bajtów z danymi w formacie zwykłego tekstu.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="encryptedData" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <paramref name="encryptedData" /> zawiera nieprawidłowy cel.</exception>
      </Docs>
    </Member>
  </Members>
</Type>