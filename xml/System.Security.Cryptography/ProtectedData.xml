<Type Name="ProtectedData" FullName="System.Security.Cryptography.ProtectedData">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="113fa7049e84e98a7de443e726e3f32bf66cafcc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30570016" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ProtectedData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ProtectedData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ProtectedData" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProtectedData" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProtectedData sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.ProtectedData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia metody do szyfrowania i odszyfrowywania danych. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa umożliwia dostęp do danych interfejsu API ochrony (DPAPI) dostępnych w systemie Microsoft Windows 2000 i nowszych systemów operacyjnych. Jest to usługa, która jest dostarczana przez system operacyjny i nie wymaga dodatkowych bibliotek. Zapewnia on ochronę można zaszyfrować lub odszyfrować danych przy użyciu poświadczeń użytkownika lub komputera.  
  
 Klasa składa się z dwóch otoki dla niezarządzanego DPAPI <xref:System.Security.Cryptography.ProtectedData.Protect%2A> i <xref:System.Security.Cryptography.ProtectedData.Unprotect%2A>. Te dwie metody mogą służyć do szyfrowania i odszyfrowywania danych, takie jak hasła, klucze i parametry połączenia.  
  
 Jeśli używasz tych metod podczas personifikacji, może zostać wyświetlony następujący błąd: "Nieprawidłowy klucz do użycia w określony stan". Dzieje się tak, ponieważ DPAPI przechowuje dane klucza w profilach użytkownika. Jeśli profil nie został załadowany, nie będzie mógł wykonywać odszyfrowywanie DPAPI. Aby uniknąć tego błędu, Załaduj profil użytkownika, którego chcesz dokonać personifikacji przed wywołaniem metody albo. Pomocą DPAPI personifikacji może pociągnąć za sobą znaczących complication i wymaga decyzji projektowych zachować ostrożność.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób korzystania z ochrony danych.  
  
 [!code-cpp[Cryptography.DataProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CPP/dataprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.DataProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CS/dataprotectionsample.cs#1)]
 [!code-vb[Cryptography.DataProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DataProtectionSample/vb/dataprotectionsample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public static byte[] Protect (byte[] userData, byte[] optionalEntropy, System.Security.Cryptography.DataProtectionScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Protect(unsigned int8[] userData, unsigned int8[] optionalEntropy, valuetype System.Security.Cryptography.DataProtectionScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ProtectedData.Protect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Protect (userData As Byte(), optionalEntropy As Byte(), scope As DataProtectionScope) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Protect(cli::array &lt;System::Byte&gt; ^ userData, cli::array &lt;System::Byte&gt; ^ optionalEntropy, System::Security::Cryptography::DataProtectionScope scope);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.ProtectedData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userData" Type="System.Byte[]" />
        <Parameter Name="optionalEntropy" Type="System.Byte[]" />
        <Parameter Name="scope" Type="System.Security.Cryptography.DataProtectionScope" />
      </Parameters>
      <Docs>
        <param name="userData">Tablica bajtów, zawierający dane do zaszyfrowania.</param>
        <param name="optionalEntropy">Opcjonalne dodatkowe bajtów tablicy używany w celu zwiększenia złożoności szyfrowania, lub <see langword="null" /> dla nie dodatkowej złożoności.</param>
        <param name="scope">Jedna z wartości wyliczenia, które określa zakres szyfrowania.</param>
        <summary>Szyfruje dane w określonej tablicy bajtów i zwraca tablicę bajtów zawierającą zaszyfrowanych danych.</summary>
        <returns>Tablica bajtów reprezentujący zaszyfrowanych danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może służyć do szyfrowania danych, takie jak hasła, klucze lub parametry połączenia. `optionalEntropy` Parametru umożliwia dodanie danych do zwiększenia złożoności szyfrowania; określ `null` dla nie dodatkowej złożoności. Jeśli zostanie podana, te informacje muszą również używane podczas odszyfrowywania danych przy użyciu <xref:System.Security.Cryptography.ProtectedData.Unprotect%2A> metody.  
  
> [!NOTE]
>  Jeśli ta metoda podczas personifikacji, może zostać wyświetlony następujący błąd: "Nieprawidłowy klucz do użycia w określony stan". Aby uniknąć tego błędu, Załaduj profil użytkownika, którego chcesz dokonać personifikacji przed wywołaniem metody.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób korzystania z ochrony danych.  
  
 [!code-cpp[Cryptography.DataProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CPP/dataprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.DataProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CS/dataprotectionsample.cs#1)]
 [!code-vb[Cryptography.DataProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DataProtectionSample/vb/dataprotectionsample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="userData" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Szyfrowanie nie powiodło się.</exception>
        <exception cref="T:System.NotSupportedException">System operacyjny nie obsługuje tej metody.</exception>
        <exception cref="T:System.OutOfMemoryException">W systemie zabrakło pamięci podczas szyfrowania danych.</exception>
        <permission cref="T:System.Security.Permissions.DataProtectionPermission">z skojarzony <see cref="P:System.Security.Permissions.DataProtectionPermissionAttribute.ProtectData" /> flagę uzyskać uprawnienia do ochrony danych.</permission>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public static byte[] Unprotect (byte[] encryptedData, byte[] optionalEntropy, System.Security.Cryptography.DataProtectionScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Unprotect(unsigned int8[] encryptedData, unsigned int8[] optionalEntropy, valuetype System.Security.Cryptography.DataProtectionScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ProtectedData.Unprotect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Unprotect (encryptedData As Byte(), optionalEntropy As Byte(), scope As DataProtectionScope) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Unprotect(cli::array &lt;System::Byte&gt; ^ encryptedData, cli::array &lt;System::Byte&gt; ^ optionalEntropy, System::Security::Cryptography::DataProtectionScope scope);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.ProtectedData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Byte[]" />
        <Parameter Name="optionalEntropy" Type="System.Byte[]" />
        <Parameter Name="scope" Type="System.Security.Cryptography.DataProtectionScope" />
      </Parameters>
      <Docs>
        <param name="encryptedData">Tablica bajtów zawierająca dane zaszyfrowane przy użyciu <see cref="M:System.Security.Cryptography.ProtectedData.Protect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)" /> metody.</param>
        <param name="optionalEntropy">Opcjonalne dodatkowe tablicy bajtowej został użyty do szyfrowania danych, lub <see langword="null" /> Jeśli tablica bajtów dodatkowe nie były używane.</param>
        <param name="scope">Jedna z wartości wyliczenia, które określa zakres ochrony danych, który został użyty do szyfrowania danych.</param>
        <summary>Odszyfrowuje dane w określonej tablicy bajtów i zwraca tablicę bajtów zawierającą odszyfrowane dane.</summary>
        <returns>Tablica bajtów reprezentujący odszyfrowane dane.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do usuwania ochrony danych, która została zaszyfrowana przy użyciu <xref:System.Security.Cryptography.ProtectedData.Protect%2A> metody. Jeśli `optionalEntropy` parametr został użyty podczas szyfrowania, musi zostać dostarczona na jego odszyfrowanie danych.  
  
> [!NOTE]
>  Jeśli ta metoda podczas personifikacji, może zostać wyświetlony następujący błąd: "Nieprawidłowy klucz do użycia w określony stan". Aby uniknąć tego błędu, Załaduj profil użytkownika, którego chcesz dokonać personifikacji przed wywołaniem metody.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono sposób korzystania z ochrony danych.  
  
 [!code-cpp[Cryptography.DataProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CPP/dataprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.DataProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CS/dataprotectionsample.cs#1)]
 [!code-vb[Cryptography.DataProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DataProtectionSample/vb/dataprotectionsample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="encryptedData" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Odszyfrowywanie nie powiodło się.</exception>
        <exception cref="T:System.NotSupportedException">System operacyjny nie obsługuje tej metody.</exception>
        <exception cref="T:System.OutOfMemoryException">Za mało pamięci.</exception>
        <permission cref="T:System.Security.Permissions.DataProtectionPermission">z skojarzony <see cref="P:System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectData" /> flagę uzyskać uprawnienia do usuwania ochrony danych.</permission>
      </Docs>
    </Member>
  </Members>
</Type>