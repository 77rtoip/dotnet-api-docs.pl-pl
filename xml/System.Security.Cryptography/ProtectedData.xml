<Type Name="ProtectedData" FullName="System.Security.Cryptography.ProtectedData">
  <Metadata><Meta Name="ms.openlocfilehash" Value="38eb090e97e5972009f0065e48a5b55765ceee17" /><Meta Name="ms.sourcegitcommit" Value="3575d47a0ba065e8986f03d99279f478811907b8" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="05/20/2019" /><Meta Name="ms.locfileid" Value="65922701" /></Metadata><TypeSignature Language="C#" Value="public sealed class ProtectedData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ProtectedData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ProtectedData" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProtectedData" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProtectedData sealed" />
  <TypeSignature Language="F#" Value="type ProtectedData = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.ProtectedData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera metody służące do szyfrowania i odszyfrowywania danych. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

Ta klasa umożliwia dostęp do danych interfejsu API ochrony (DPAPI) dostępnych w systemach operacyjnych Windows. Jest to usługa, które są dostarczane przez system operacyjny, a nie wymaga dodatkowych bibliotek. Zapewnia ochronę szyfrowania lub odszyfrowywania danych przy użyciu poświadczeń użytkownika lub komputera.

> [!IMPORTANT]
> Ponieważ jest zależny od interfejsu DPAPI, `ProtectedData` klasy jest obsługiwana tylko na platformie Windows. Zgłasza jego użycia w środowisku .NET Core na platformach innych niż Windows <xref:System.PlatformNotSupportedException>.
  
Klasa składa się z dwóch otoki niezarządzanego interfejsu DPAPI, <xref:System.Security.Cryptography.ProtectedData.Protect%2A> i <xref:System.Security.Cryptography.ProtectedData.Unprotect%2A>. Te dwie metody mogą służyć do szyfrowania i odszyfrowywania danych, takie jak hasła, klucze i parametry połączenia.  
  
Użycie tych metod podczas personifikacji, może pojawić się następujący błąd: "Klucz nie jest prawidłowa do stosowania w określonym stanie." Dzieje się tak, ponieważ DPAPI przechowuje dane klucza w profilach użytkowników. Jeśli profil nie został załadowany, DPAPI nie będzie mógł wykonywać odszyfrowywania. Aby uniknąć tego błędu, należy załadować profilu użytkownika, który ma być Personifikowane przez aplikację przed wywołaniem metody albo. Przy użyciu interfejsu DPAPI personifikacji może pociągnąć za sobą znaczące kompilacji i wymaga starannego uzasadnienie wyboru tych elementów.  

## Examples  
 Poniższy przykład przedstawia sposób korzystania z ochrony danych.  
  
 [!code-cpp[Cryptography.DataProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CPP/dataprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.DataProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CS/dataprotectionsample.cs#1)]
 [!code-vb[Cryptography.DataProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DataProtectionSample/vb/dataprotectionsample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public static byte[] Protect (byte[] userData, byte[] optionalEntropy, System.Security.Cryptography.DataProtectionScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Protect(unsigned int8[] userData, unsigned int8[] optionalEntropy, valuetype System.Security.Cryptography.DataProtectionScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ProtectedData.Protect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Protect (userData As Byte(), optionalEntropy As Byte(), scope As DataProtectionScope) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Protect(cli::array &lt;System::Byte&gt; ^ userData, cli::array &lt;System::Byte&gt; ^ optionalEntropy, System::Security::Cryptography::DataProtectionScope scope);" />
      <MemberSignature Language="F#" Value="static member Protect : byte[] * byte[] * System.Security.Cryptography.DataProtectionScope -&gt; byte[]" Usage="System.Security.Cryptography.ProtectedData.Protect (userData, optionalEntropy, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.ProtectedData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userData" Type="System.Byte[]" />
        <Parameter Name="optionalEntropy" Type="System.Byte[]" />
        <Parameter Name="scope" Type="System.Security.Cryptography.DataProtectionScope" />
      </Parameters>
      <Docs>
        <param name="userData">Tablica bajtów, która zawiera dane do zaszyfrowania.</param>
        <param name="optionalEntropy">Tablica opcjonalne bajtów dodatkowych, używany w celu zwiększenia złożoności szyfrowania lub <see langword="null" /> uzyskać nie dodatkowej złożoności.</param>
        <param name="scope">Jedna z wartości wyliczenia, które określa zakres szyfrowania.</param>
        <summary>Szyfruje dane w określonej tablicy bajtów i zwraca tablicę bajtów, który zawiera zaszyfrowane dane.</summary>
        <returns>Tablica bajtów reprezentujących zaszyfrowanych danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może służyć do szyfrowania danych, takie jak hasła, klucze lub parametry połączenia. `optionalEntropy` Parametru pozwala na dodawanie danych do zwiększenia złożoności szyfrowania; określ `null` uzyskać nie dodatkowej złożoności. Jeśli nie dostarczono, te informacje muszą również podczas deszyfrowania danych przy użyciu <xref:System.Security.Cryptography.ProtectedData.Unprotect%2A> metody.  
  
> [!NOTE]
>  Użycie tej metody podczas personifikacji, może pojawić się następujący błąd: "Klucz nie jest prawidłowa do stosowania w określonym stanie." Aby uniknąć tego błędu, należy załadować profilu użytkownika, który ma być Personifikowane przez aplikację przed wywołaniem metody.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób korzystania z ochrony danych.  
  
 [!code-cpp[Cryptography.DataProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CPP/dataprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.DataProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CS/dataprotectionsample.cs#1)]
 [!code-vb[Cryptography.DataProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DataProtectionSample/vb/dataprotectionsample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="userData" /> Parametr <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Szyfrowanie nie powiodło się.</exception>
        <exception cref="T:System.NotSupportedException">System operacyjny nie obsługuje tej metody.</exception>
        <exception cref="T:System.OutOfMemoryException">W systemie zabrakło pamięci podczas szyfrowania danych.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Tylko .NET core: Wywołania <c>Chroń</c> metody są obsługiwane w systemach operacyjnych Windows tylko.</exception>
        <permission cref="T:System.Security.Permissions.DataProtectionPermission">za pomocą skojarzonego <see cref="P:System.Security.Permissions.DataProtectionPermissionAttribute.ProtectData" /> flagi dla uprawnień chronić dane.</permission>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public static byte[] Unprotect (byte[] encryptedData, byte[] optionalEntropy, System.Security.Cryptography.DataProtectionScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Unprotect(unsigned int8[] encryptedData, unsigned int8[] optionalEntropy, valuetype System.Security.Cryptography.DataProtectionScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ProtectedData.Unprotect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Unprotect (encryptedData As Byte(), optionalEntropy As Byte(), scope As DataProtectionScope) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Unprotect(cli::array &lt;System::Byte&gt; ^ encryptedData, cli::array &lt;System::Byte&gt; ^ optionalEntropy, System::Security::Cryptography::DataProtectionScope scope);" />
      <MemberSignature Language="F#" Value="static member Unprotect : byte[] * byte[] * System.Security.Cryptography.DataProtectionScope -&gt; byte[]" Usage="System.Security.Cryptography.ProtectedData.Unprotect (encryptedData, optionalEntropy, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.ProtectedData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Byte[]" />
        <Parameter Name="optionalEntropy" Type="System.Byte[]" />
        <Parameter Name="scope" Type="System.Security.Cryptography.DataProtectionScope" />
      </Parameters>
      <Docs>
        <param name="encryptedData">Tablica bajtów zawierająca dane są szyfrowane przy użyciu <see cref="M:System.Security.Cryptography.ProtectedData.Protect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)" /> metody.</param>
        <param name="optionalEntropy">Tablica opcjonalne dodatkowe bajtów, który został użyty do szyfrowania danych, lub <see langword="null" /> Jeśli tablica bajtów dodatkowe nie był używany.</param>
        <param name="scope">Jedna z wartości wyliczenia, które określa zakres ochrony danych, który został użyty do szyfrowania danych.</param>
        <summary>Odszyfrowuje dane w określonej tablicy bajtów i zwraca tablicę bajtów, która zawiera odszyfrowane dane.</summary>
        <returns>Tablica bajtów reprezentujących odszyfrowane dane.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do wyłączania ochrony danych, która została zaszyfrowana przy użyciu <xref:System.Security.Cryptography.ProtectedData.Protect%2A> metody. Jeśli `optionalEntropy` użyto parametru podczas szyfrowania, musi zostać dostarczony na odszyfrowanie danych.  
  
> [!NOTE]
>  Użycie tej metody podczas personifikacji, może pojawić się następujący błąd: "Klucz nie jest prawidłowa do stosowania w określonym stanie." Aby uniknąć tego błędu, należy załadować profilu użytkownika, który ma być Personifikowane przez aplikację przed wywołaniem metody.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób korzystania z ochrony danych.  
  
 [!code-cpp[Cryptography.DataProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CPP/dataprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.DataProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CS/dataprotectionsample.cs#1)]
 [!code-vb[Cryptography.DataProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DataProtectionSample/vb/dataprotectionsample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="encryptedData" /> Parametr <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Odszyfrowanie nie powiodło się.</exception>
        <exception cref="T:System.NotSupportedException">System operacyjny nie obsługuje tej metody.</exception>
        <exception cref="T:System.OutOfMemoryException">Za mało pamięci.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Tylko .NET core: Wywołania <c>Unprotect</c> metody są obsługiwane w systemach operacyjnych Windows tylko.</exception>
        <permission cref="T:System.Security.Permissions.DataProtectionPermission">za pomocą skojarzonego <see cref="P:System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectData" /> flagi dla uprawnień do usunięcia ochrony danych.</permission>
      </Docs>
    </Member>
  </Members>
</Type>