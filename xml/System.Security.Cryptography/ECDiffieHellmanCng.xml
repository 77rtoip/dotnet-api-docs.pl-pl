<Type Name="ECDiffieHellmanCng" FullName="System.Security.Cryptography.ECDiffieHellmanCng">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="75483415824486b97203441fb036211f367aa896" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37624815" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ECDiffieHellmanCng : System.Security.Cryptography.ECDiffieHellman" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ECDiffieHellmanCng extends System.Security.Cryptography.ECDiffieHellman" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ECDiffieHellmanCng" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ECDiffieHellmanCng&#xA;Inherits ECDiffieHellman" />
  <TypeSignature Language="C++ CLI" Value="public ref class ECDiffieHellmanCng sealed : System::Security::Cryptography::ECDiffieHellman" />
  <TypeSignature Language="F#" Value="type ECDiffieHellmanCng = class&#xA;    inherit ECDiffieHellman" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.ECDiffieHellman</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="95fcf-101">Udostępnia implementację algorytmu Elliptic krzywej Diffie'ego-Hellmana (ECDH) Cryptography Next Generation (CNG).</span>
      <span class="sxs-lookup">
        <span data-stu-id="95fcf-101">Provides a Cryptography Next Generation (CNG) implementation of the Elliptic Curve Diffie-Hellman (ECDH) algorithm.</span>
      </span>
      <span data-ttu-id="95fcf-102">Ta klasa jest używana do wykonywania operacji kryptograficznych.</span>
      <span class="sxs-lookup">
        <span data-stu-id="95fcf-102">This class is used to perform cryptographic operations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fcf-103"><xref:System.Security.Cryptography.ECDiffieHellmanCng> Klasa umożliwia obie strony do wymiany materiał klucza prywatnego, nawet wtedy, gdy komunikują się za pośrednictwem publicznego kanału.</span><span class="sxs-lookup"><span data-stu-id="95fcf-103">The <xref:System.Security.Cryptography.ECDiffieHellmanCng> class enables two parties to exchange private key material even if they are communicating through a public channel.</span></span>  <span data-ttu-id="95fcf-104">Obie strony można obliczyć tę samą wartość wpisu tajnego jest określany jako *wpisu tajnego umowy* zarządzanych klas Diffie'ego-Hellmana.</span><span class="sxs-lookup"><span data-stu-id="95fcf-104">Both parties can calculate the same secret value, which is referred to as the *secret agreement* in the managed Diffie-Hellman classes.</span></span> <span data-ttu-id="95fcf-105">Następnie można umowy wpisu tajnego do różnych celów, w tym jako klucz symetryczny.</span><span class="sxs-lookup"><span data-stu-id="95fcf-105">The secret agreement can then be used for a variety of purposes, including as a symmetric key.</span></span> <span data-ttu-id="95fcf-106">Jednak zamiast bezpośrednio, udostępnianie wpisu tajnego umowy <xref:System.Security.Cryptography.ECDiffieHellmanCng> klasy przetwarza je po na umowie przed podaniem wartości.</span><span class="sxs-lookup"><span data-stu-id="95fcf-106">However, instead of exposing the secret agreement directly, the <xref:System.Security.Cryptography.ECDiffieHellmanCng> class does some post-processing on the agreement before providing the value.</span></span> <span data-ttu-id="95fcf-107">To przetwarzanie wpis jest określany jako *klucza funkcji Tworzenie wartości pochodnych (KDF)*; można wybrać KDF, której chcesz użyć, a następnie ustaw jego parametrów za pomocą zestawu właściwości w wystąpieniu obiektu Diffie'ego-Hellmana.</span><span class="sxs-lookup"><span data-stu-id="95fcf-107">This post processing is referred to as the *key derivation function (KDF)*; you can select which KDF you want to use and set its parameters through a set of properties on the instance of the Diffie-Hellman object.</span></span>  
  
|<span data-ttu-id="95fcf-108">Funkcja wyprowadzania klucza</span><span class="sxs-lookup"><span data-stu-id="95fcf-108">Key derivation function</span></span>|<span data-ttu-id="95fcf-109">Właściwości</span><span class="sxs-lookup"><span data-stu-id="95fcf-109">Properties</span></span>|  
|-----------------------------|----------------|  
|<xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash>|<span data-ttu-id="95fcf-110"><xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm%2A> Algorytmu wyznaczania wartości skrótu, który zostanie użyty do przetwarzania wpisu tajnego umowy.</span><span class="sxs-lookup"><span data-stu-id="95fcf-110"><xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm%2A> - The hash algorithm that is used to process the secret agreement.</span></span><br /><br /> <span data-ttu-id="95fcf-111"><xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A> -Tablica opcjonalne bajtów, być dołączana do Porozumienia wpisu tajnego przed jej wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="95fcf-111"><xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A> - An optional byte array to prepend to the secret agreement before hashing it.</span></span><br /><br /> <span data-ttu-id="95fcf-112"><xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> -Bajtów opcjonalne tablicy do dołączenia do wpisu tajnego umowy przed jej wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="95fcf-112"><xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> - An optional byte array to append to the secret agreement before hashing it.</span></span>|  
|<xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac>|<span data-ttu-id="95fcf-113"><xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm%2A> Algorytmu wyznaczania wartości skrótu, który zostanie użyty do przetwarzania wpisu tajnego umowy.</span><span class="sxs-lookup"><span data-stu-id="95fcf-113"><xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm%2A> - The hash algorithm that is used to process the secret agreement.</span></span><br /><br /> <span data-ttu-id="95fcf-114"><xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A>-Tablica opcjonalne bajtów, być dołączana do Porozumienia wpisu tajnego przed jej wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="95fcf-114"><xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A>- An optional byte array to prepend to the secret agreement before hashing it.</span></span><br /><br /> <span data-ttu-id="95fcf-115"><xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> -Bajtów opcjonalne tablicy do dołączenia do wpisu tajnego umowy przed jej wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="95fcf-115"><xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> - An optional byte array to append to the secret agreement before hashing it.</span></span>|  
|<xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls>|<span data-ttu-id="95fcf-116"><xref:System.Security.Cryptography.ECDiffieHellmanCng.Label%2A> -Etykieta klucza pochodnego.</span><span class="sxs-lookup"><span data-stu-id="95fcf-116"><xref:System.Security.Cryptography.ECDiffieHellmanCng.Label%2A> - The label for key derivation.</span></span><br /><br /> <span data-ttu-id="95fcf-117"><xref:System.Security.Cryptography.ECDiffieHellmanCng.Seed%2A> -Inicjatora dla klucza pochodnego.</span><span class="sxs-lookup"><span data-stu-id="95fcf-117"><xref:System.Security.Cryptography.ECDiffieHellmanCng.Seed%2A> - The seed for key derivation.</span></span>|  
  
 <span data-ttu-id="95fcf-118">Wynik przekazania klucza tajnego Umowy za pośrednictwem funkcji wyprowadzania klucza jest tablica bajtów, która może być używany jako materiał klucza dla aplikacji.</span><span class="sxs-lookup"><span data-stu-id="95fcf-118">The result of passing the secret agreement through the key derivation function is a byte array that may be used as key material for your application.</span></span> <span data-ttu-id="95fcf-119">Liczba bajtów materiał klucza, generowany jest zależny od funkcji klucza pochodnego; na przykład SHA-256 wygeneruje 256 bitów materiału klucza, natomiast SHA-512 wygeneruje 512 bitów materiału klucza. Podstawowy przepływ ECDH wymiany kluczy jest następująca:</span><span class="sxs-lookup"><span data-stu-id="95fcf-119">The number of bytes of key material generated is dependent on the key derivation function; for example, SHA-256 will generate 256 bits of key material, whereas SHA-512 will generate 512 bits of key material.The basic flow of an ECDH key exchange is as follows:</span></span>  
  
1.  <span data-ttu-id="95fcf-120">Alice i Bob tworzenia pary kluczy do użycia dla operacji wymiany kluczy Diffie'ego-Hellmana</span><span class="sxs-lookup"><span data-stu-id="95fcf-120">Alice and Bob create a key pair to use for the Diffie-Hellman key exchange operation</span></span>  
  
2.  <span data-ttu-id="95fcf-121">Alice i Bob skonfiguruj KDF przy użyciu parametrów Zgadzam się na.</span><span class="sxs-lookup"><span data-stu-id="95fcf-121">Alice and Bob configure the KDF using parameters the agree on.</span></span>  
  
3.  <span data-ttu-id="95fcf-122">Alicja wysyła Bob jej klucz publiczny.</span><span class="sxs-lookup"><span data-stu-id="95fcf-122">Alice sends Bob her public key.</span></span>  
  
4.  <span data-ttu-id="95fcf-123">Robert wysyła Alicja jego klucza publicznego.</span><span class="sxs-lookup"><span data-stu-id="95fcf-123">Bob sends Alice his public key.</span></span>  
  
5.  <span data-ttu-id="95fcf-124">Alice i Bob umożliwia generowanie klucza tajnego umowy przez siebie nawzajem kluczy publicznych, a następnie zastosować KDF do Porozumienia wpisu tajnego do generowania materiału klucza.</span><span class="sxs-lookup"><span data-stu-id="95fcf-124">Alice and Bob use each other's public keys to generate the secret agreement, and apply the KDF to the secret agreement to generate key material.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95fcf-125">Poniższy przykład pokazuje, jak używać <xref:System.Security.Cryptography.ECDiffieHellmanCng> klasy w celu ustanowienia wymiany kluczy i sposobu użycia tego klucza szyfrowania wiadomości, które mogą być wysyłane za pośrednictwem publicznego kanału i odszyfrowywane przez odbiorcę.</span><span class="sxs-lookup"><span data-stu-id="95fcf-125">The following example shows how to use the <xref:System.Security.Cryptography.ECDiffieHellmanCng> class to establish a key exchange and how to use that key to encrypt a message that can be sent over a public channel and decrypted by the receiver.</span></span>  
  
 [!code-csharp[ECDiffieHellmanCng#1](~/samples/snippets/csharp/VS_Snippets_CLR/ecdiffiehellmancng/cs/program.cs#1)]
 [!code-vb[ECDiffieHellmanCng#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ecdiffiehellmancng/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="95fcf-126">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-126">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDiffieHellmanCng ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDiffieHellmanCng();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="95fcf-127">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> klasie z atrybutem losową parę kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-127">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> class with a random key pair.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fcf-128">Losową parę kluczy ma domyślne publiczny klucz o długości 521 bitów.</span><span class="sxs-lookup"><span data-stu-id="95fcf-128">The random key pair has a default public key length of 521 bits.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDiffieHellmanCng (int keySize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDiffieHellmanCng(int keySize);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.ECDiffieHellmanCng : int -&gt; System.Security.Cryptography.ECDiffieHellmanCng" Usage="new System.Security.Cryptography.ECDiffieHellmanCng keySize" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="keySize">
          <span data-ttu-id="95fcf-129">Rozmiar klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-129">The size of the key.</span>
          </span>
          <span data-ttu-id="95fcf-130">Prawidłowe rozmiary klucza to 256, 384 i 521 bitów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-130">Valid key sizes are 256, 384, and 521 bits.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fcf-131">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> klasie z atrybutem losową parę kluczy, za pomocą określonego rozmiaru klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-131">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> class with a random key pair, using the specified key size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fcf-132">Losową parę kluczy mają długość klucza publicznego, zdefiniowane przez `keySize` parametru.</span><span class="sxs-lookup"><span data-stu-id="95fcf-132">The random key pair will have the public key length defined by the `keySize` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="95fcf-133">
            <paramref name="keySize" /> Określa nieprawidłową długość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-133">
              <paramref name="keySize" /> specifies an invalid length.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="95fcf-134">Cryptography Next Generation (CNG) klasy nie są obsługiwane w tym systemie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-134">Cryptography Next Generation (CNG) classes are not supported on this system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDiffieHellmanCng (System.Security.Cryptography.CngKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.CngKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.CngKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As CngKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDiffieHellmanCng(System::Security::Cryptography::CngKey ^ key);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.ECDiffieHellmanCng : System.Security.Cryptography.CngKey -&gt; System.Security.Cryptography.ECDiffieHellmanCng" Usage="new System.Security.Cryptography.ECDiffieHellmanCng key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.CngKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="95fcf-135">Klucz, który będzie służyć jako dane wejściowe dla operacji kryptograficznych, wykonywane przez bieżący obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-135">The key that will be used as input to the cryptographic operations performed by the current object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fcf-136">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> klasy przy użyciu określonego <see cref="T:System.Security.Cryptography.CngKey" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-136">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> class by using the specified <see cref="T:System.Security.Cryptography.CngKey" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95fcf-137">
            <paramref name="key" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-137">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="95fcf-138">
            <paramref name="key" /> nie określono grupę algorytmu Elliptic krzywej Diffie'ego-Hellmana (ECDH).</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-138">
              <paramref name="key" /> does not specify an Elliptic Curve Diffie-Hellman (ECDH) algorithm group.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="95fcf-139">Cryptography Next Generation (CNG) klasy nie są obsługiwane w tym systemie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-139">Cryptography Next Generation (CNG) classes are not supported on this system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECDiffieHellmanCng (System.Security.Cryptography.ECCurve curve);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Cryptography.ECCurve curve) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.ECCurve)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (curve As ECCurve)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ECDiffieHellmanCng(System::Security::Cryptography::ECCurve curve);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.ECDiffieHellmanCng : System.Security.Cryptography.ECCurve -&gt; System.Security.Cryptography.ECDiffieHellmanCng" Usage="new System.Security.Cryptography.ECDiffieHellmanCng curve" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="curve" Type="System.Security.Cryptography.ECCurve" />
      </Parameters>
      <Docs>
        <param name="curve">
          <span data-ttu-id="95fcf-140">Krzywa, używany do generowania pary kluczy publiczny/prywatny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-140">The curve used to generate the public/private key pair.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fcf-141">Tworzy nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> którego pary kluczy publiczny/prywatny jest generowany krzywej określonej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-141">Creates a new instance of the <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> class whose public/private key pair is generated over the specified curve.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fcf-142">`curve` należy sprawdzić, (oznacza to, że aplikacja musi zwracać `true`) przekazany do <xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType> metody i musi być prime nazwana lub jawnego.</span><span class="sxs-lookup"><span data-stu-id="95fcf-142">`curve` must validate (that is, it must return `true`) when passed to the <xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType> method and must be either a named or explicit prime.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="95fcf-143">
            <paramref name="curve" /> Nie można zweryfikować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-143">
              <paramref name="curve" /> does not validate.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeriveKeyFromHash">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="95fcf-144">Pochodzi bajtów, które mogą być używane jako klucz przy użyciu funkcji skrótu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-144">Derives bytes that can be used as a key using a hash function .</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeriveKeyFromHash">
      <MemberSignature Language="C#" Value="public override byte[] DeriveKeyFromHash (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, byte[] secretPrepend, byte[] secretAppend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] DeriveKeyFromHash(class System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm, unsigned int8[] secretPrepend, unsigned int8[] secretAppend) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeriveKeyFromHash (otherPartyPublicKey As ECDiffieHellmanPublicKey, hashAlgorithm As HashAlgorithmName, secretPrepend As Byte(), secretAppend As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ DeriveKeyFromHash(System::Security::Cryptography::ECDiffieHellmanPublicKey ^ otherPartyPublicKey, System::Security::Cryptography::HashAlgorithmName hashAlgorithm, cli::array &lt;System::Byte&gt; ^ secretPrepend, cli::array &lt;System::Byte&gt; ^ secretAppend);" />
      <MemberSignature Language="F#" Value="override this.DeriveKeyFromHash : System.Security.Cryptography.ECDiffieHellmanPublicKey * System.Security.Cryptography.HashAlgorithmName * byte[] * byte[] -&gt; byte[]" Usage="eCDiffieHellmanCng.DeriveKeyFromHash (otherPartyPublicKey, hashAlgorithm, secretPrepend, secretAppend)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherPartyPublicKey" Type="System.Security.Cryptography.ECDiffieHellmanPublicKey" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="secretPrepend" Type="System.Byte[]" />
        <Parameter Name="secretAppend" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="otherPartyPublicKey">
          <span data-ttu-id="95fcf-145">Klucz publiczny z drugiej strony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-145">The other party's public key.</span>
          </span>
        </param>
        <param name="hashAlgorithm">
          <span data-ttu-id="95fcf-146">Algorytm wyznaczania wartości skrótu do użycia do uzyskania materiału klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-146">The hash algorithm  to use to derive the key material.</span>
          </span>
        </param>
        <param name="secretPrepend">
          <span data-ttu-id="95fcf-147">Wartość być dołączana do pochodnej klucz tajny przed wyznaczania wartości skrótu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-147">A value to prepend to the derived secret before hashing.</span>
          </span>
        </param>
        <param name="secretAppend">
          <span data-ttu-id="95fcf-148">Wartość do dołączenia do pochodnej klucz tajny przed wyznaczania wartości skrótu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-148">A value to append to the derived secret before hashing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fcf-149">Pochodzi bajtów, które mogą być używane jako klucz przy użyciu funkcji skrótu danego klucza publicznego innej strony, nazwa algorytmu wyznaczania wartości skrótu, wartość prepend i wartością dołączania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-149">Derives bytes that can be used as a key using a hash function, given another party's public key, hash algorithm's name, a prepend value and an append value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95fcf-150">Materiał klucza z wymiany kluczy przy użyciu klucza publicznego z drugiej strony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-150">The key material from the key exchange with the other party’s public key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fcf-151">Jeśli wartość `secretPrepend` lub `secretAppend` jest `null`, będą one traktowane jako pusty tablic.</span><span class="sxs-lookup"><span data-stu-id="95fcf-151">If the value of `secretPrepend` or `secretAppend` is `null`, they are treated as empty arrays.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95fcf-152">
            <paramref name="otherPartyPublicKey" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-152">
              <paramref name="otherPartyPublicKey" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="95fcf-153">
            <paramref name="otherPartyPublicKey" /> nie jest to klucz ECDH lub nie jest prawidłowy rozmiar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-153">
              <paramref name="otherPartyPublicKey" /> is not an ECDH key, or it is not the correct size.</span>
          </span>
          <span data-ttu-id="95fcf-154">- lub - <paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-154">-or-  <paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span>
          </span>
          <span data-ttu-id="95fcf-155">jest <see langword="null" /> lub <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-155">is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="95fcf-156">Inne błędy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-156">All other errors.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeriveKeyFromHmac">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="95fcf-157">Pochodzi bajtów, które mogą być używane jako klucz przy użyciu bazujących na skrótach komunikat o kod uwierzytelniania (HMAC).</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-157">Derives bytes that can be used as a key using a Hash-based Message Authentication Code (HMAC).</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeriveKeyFromHmac">
      <MemberSignature Language="C#" Value="public override byte[] DeriveKeyFromHmac (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, byte[] hmacKey, byte[] secretPrepend, byte[] secretAppend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] DeriveKeyFromHmac(class System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm, unsigned int8[] hmacKey, unsigned int8[] secretPrepend, unsigned int8[] secretAppend) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeriveKeyFromHmac (otherPartyPublicKey As ECDiffieHellmanPublicKey, hashAlgorithm As HashAlgorithmName, hmacKey As Byte(), secretPrepend As Byte(), secretAppend As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ DeriveKeyFromHmac(System::Security::Cryptography::ECDiffieHellmanPublicKey ^ otherPartyPublicKey, System::Security::Cryptography::HashAlgorithmName hashAlgorithm, cli::array &lt;System::Byte&gt; ^ hmacKey, cli::array &lt;System::Byte&gt; ^ secretPrepend, cli::array &lt;System::Byte&gt; ^ secretAppend);" />
      <MemberSignature Language="F#" Value="override this.DeriveKeyFromHmac : System.Security.Cryptography.ECDiffieHellmanPublicKey * System.Security.Cryptography.HashAlgorithmName * byte[] * byte[] * byte[] -&gt; byte[]" Usage="eCDiffieHellmanCng.DeriveKeyFromHmac (otherPartyPublicKey, hashAlgorithm, hmacKey, secretPrepend, secretAppend)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherPartyPublicKey" Type="System.Security.Cryptography.ECDiffieHellmanPublicKey" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="hmacKey" Type="System.Byte[]" />
        <Parameter Name="secretPrepend" Type="System.Byte[]" />
        <Parameter Name="secretAppend" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="otherPartyPublicKey">
          <span data-ttu-id="95fcf-158">Klucz publiczny z drugiej strony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-158">The other party's public key.</span>
          </span>
        </param>
        <param name="hashAlgorithm">
          <span data-ttu-id="95fcf-159">Algorytm wyznaczania wartości skrótu do użycia do uzyskania materiału klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-159">The hash algorithm to use to derive the key material.</span>
          </span>
        </param>
        <param name="hmacKey">
          <span data-ttu-id="95fcf-160">Klucz dla HMAC.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-160">The key for the HMAC.</span>
          </span>
        </param>
        <param name="secretPrepend">
          <span data-ttu-id="95fcf-161">Wartość być dołączana do pochodnej klucz tajny przed wyznaczania wartości skrótu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-161">A value to prepend to the derived secret before hashing.</span>
          </span>
        </param>
        <param name="secretAppend">
          <span data-ttu-id="95fcf-162">Wartość do dołączenia do pochodnej klucz tajny przed wyznaczania wartości skrótu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-162">A value to append to the derived secret before hashing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fcf-163">Pochodzi bajtów, które mogą być używane jako klucz przy użyciu bazujących na skrótach komunikat o kod uwierzytelniania (HMAC).</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-163">Derives bytes that can be used as a key using a Hash-based Message Authentication Code (HMAC).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95fcf-164">Materiał klucza z wymiany kluczy przy użyciu klucza publicznego z drugiej strony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-164">The key material from the key exchange with the other party’s public key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fcf-165">Jeśli wartość `secretPrepend` lub `secretAppend` jest `null`, będą one traktowane jako pusty tablic.</span><span class="sxs-lookup"><span data-stu-id="95fcf-165">If the value of `secretPrepend` or `secretAppend` is `null`, they are treated as empty arrays.</span></span> <span data-ttu-id="95fcf-166">Jeśli wartość `hmacKey` jest `null`, wyniki algorytmu Elliptic krzywej Diffie'ego-Hellmana (ECDH) będzie używany jako klucz HMAC.</span><span class="sxs-lookup"><span data-stu-id="95fcf-166">If the value of `hmacKey` is `null`, the result of the Elliptic Curve Diffie-Hellman (ECDH) algorithm will be used as the HMAC key.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95fcf-167">
            <paramref name="otherPartyPublicKey" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-167">
              <paramref name="otherPartyPublicKey" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="95fcf-168">
            <paramref name="otherPartyPublicKey" /> nie jest to klucz ECDH lub nie jest prawidłowy rozmiar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-168">
              <paramref name="otherPartyPublicKey" /> is not an ECDH key, or it is not the correct size.</span>
          </span>
          <span data-ttu-id="95fcf-169">- lub - <paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-169">-or-  <paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span>
          </span>
          <span data-ttu-id="95fcf-170">jest <see langword="null" /> lub <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-170">is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="95fcf-171">Inne błędy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-171">All other errors.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeriveKeyMaterial">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="95fcf-172">Pochodzi materiał klucza który jest generowany na podstawie tajnego Umowę między stronami.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-172">Derives the key material that is generated from the secret agreement between two parties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fcf-173">Algorytmu Elliptic krzywej Diffie'ego-Hellmana (ECDH) akceptuje klucza prywatnego i innych firm klucza publicznego jako dane wejściowe i generuje wpisu tajnego umowy jako dane wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="95fcf-173">The Elliptic Curve Diffie-Hellman (ECDH) algorithm accepts the private key and the other party’s public key as input, and produces the secret agreement as output.</span></span> <span data-ttu-id="95fcf-174">Funkcja klucza pochodnego (KDF) następnie przyjmuje umowy wpisu tajnego i tworzy materiału klucza jako dane wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="95fcf-174">The key derivation function (KDF) then takes the secret agreement and produces the key material as output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeriveKeyMaterial">
      <MemberSignature Language="C#" Value="public byte[] DeriveKeyMaterial (System.Security.Cryptography.CngKey otherPartyPublicKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DeriveKeyMaterial(class System.Security.Cryptography.CngKey otherPartyPublicKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeriveKeyMaterial (otherPartyPublicKey As CngKey) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ DeriveKeyMaterial(System::Security::Cryptography::CngKey ^ otherPartyPublicKey);" />
      <MemberSignature Language="F#" Value="override this.DeriveKeyMaterial : System.Security.Cryptography.CngKey -&gt; byte[]" Usage="eCDiffieHellmanCng.DeriveKeyMaterial otherPartyPublicKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherPartyPublicKey" Type="System.Security.Cryptography.CngKey" />
      </Parameters>
      <Docs>
        <param name="otherPartyPublicKey">
          <span data-ttu-id="95fcf-175">Obiekt zawierający publiczną część klucza Elliptic krzywej Diffie'ego-Hellmana (ECDH), z drugiej strony wymiany kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-175">An object that contains the public part of the Elliptic Curve Diffie-Hellman (ECDH) key from the other party in the key exchange.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fcf-176">Materiał klucza który jest generowany na podstawie tajnego Umowę między stronami, biorąc pod uwagę pochodzi <see cref="T:System.Security.Cryptography.CngKey" /> obiekt, który zawiera klucz publiczny z drugiej strony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-176">Derives the key material that is generated from the secret agreement between two parties, given a <see cref="T:System.Security.Cryptography.CngKey" /> object that contains the second party's public key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95fcf-177">Tablica bajtów, która zawiera materiał klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-177">A byte array that contains the key material.</span>
          </span>
          <span data-ttu-id="95fcf-178">Informacje te są generowane z wpisu tajnego umowy, która jest obliczana na podstawie bieżącego obiektu klucza prywatnego i określony klucz publiczny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-178">This information is generated from the secret agreement that is calculated from the current object's private key and the specified public key.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95fcf-179">
            <paramref name="otherPartyPublicKey" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-179">
              <paramref name="otherPartyPublicKey" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="95fcf-180">
            <paramref name="otherPartyPublicKey" /> jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-180">
              <paramref name="otherPartyPublicKey" /> is invalid.</span>
          </span>
          <span data-ttu-id="95fcf-181">Albo jego <see cref="P:System.Security.Cryptography.CngKey.AlgorithmGroup" /> właściwość nie określa <see cref="P:System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman" /> lub jego rozmiar klucza nie jest zgodny z rozmiar klucza dla tego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-181">Either its <see cref="P:System.Security.Cryptography.CngKey.AlgorithmGroup" /> property does not specify <see cref="P:System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman" /> or its key size does not match the key size of this instance.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="95fcf-182">Ten obiekt <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction" /> właściwość określa <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" /> funkcja wyprowadzania klucza, ale albo <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Label" /> lub <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-182">This object's <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction" /> property specifies the <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" /> key derivation function, but either <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Label" /> or <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="95fcf-183">Inne błędy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-183">All other errors.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DeriveKeyMaterial">
      <MemberSignature Language="C#" Value="public override byte[] DeriveKeyMaterial (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] DeriveKeyMaterial(class System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeriveKeyMaterial (otherPartyPublicKey As ECDiffieHellmanPublicKey) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ DeriveKeyMaterial(System::Security::Cryptography::ECDiffieHellmanPublicKey ^ otherPartyPublicKey);" />
      <MemberSignature Language="F#" Value="override this.DeriveKeyMaterial : System.Security.Cryptography.ECDiffieHellmanPublicKey -&gt; byte[]" Usage="eCDiffieHellmanCng.DeriveKeyMaterial otherPartyPublicKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherPartyPublicKey" Type="System.Security.Cryptography.ECDiffieHellmanPublicKey" />
      </Parameters>
      <Docs>
        <param name="otherPartyPublicKey">
          <span data-ttu-id="95fcf-184">Klucz publiczny z drugiej strony wymiany kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-184">The public key from the other party in the key exchange.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fcf-185">Materiał klucza który jest generowany na podstawie tajnego Umowę między stronami, biorąc pod uwagę pochodzi <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /> obiekt, który zawiera klucz publiczny z drugiej strony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-185">Derives the key material that is generated from the secret agreement between two parties, given an <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /> object that contains the second party's public key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95fcf-186">Tablica bajtów, która zawiera materiał klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-186">A byte array that contains the key material.</span>
          </span>
          <span data-ttu-id="95fcf-187">Informacje te są generowane z wpisu tajnego umowy, która jest obliczana na podstawie bieżącego obiektu klucza prywatnego i określony klucz publiczny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-187">This information is generated from the secret agreement that is calculated from the current object's private key and the specified public key.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95fcf-188">
            <paramref name="otherPartyPublicKey" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-188">
              <paramref name="otherPartyPublicKey" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="95fcf-189">
            <paramref name="otherPartyPublicKey" /> nie jest <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" /> klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-189">
              <paramref name="otherPartyPublicKey" /> is not an <see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" /> key.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DeriveKeyTls">
      <MemberSignature Language="C#" Value="public override byte[] DeriveKeyTls (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, byte[] prfLabel, byte[] prfSeed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] DeriveKeyTls(class System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, unsigned int8[] prfLabel, unsigned int8[] prfSeed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeriveKeyTls (otherPartyPublicKey As ECDiffieHellmanPublicKey, prfLabel As Byte(), prfSeed As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ DeriveKeyTls(System::Security::Cryptography::ECDiffieHellmanPublicKey ^ otherPartyPublicKey, cli::array &lt;System::Byte&gt; ^ prfLabel, cli::array &lt;System::Byte&gt; ^ prfSeed);" />
      <MemberSignature Language="F#" Value="override this.DeriveKeyTls : System.Security.Cryptography.ECDiffieHellmanPublicKey * byte[] * byte[] -&gt; byte[]" Usage="eCDiffieHellmanCng.DeriveKeyTls (otherPartyPublicKey, prfLabel, prfSeed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherPartyPublicKey" Type="System.Security.Cryptography.ECDiffieHellmanPublicKey" />
        <Parameter Name="prfLabel" Type="System.Byte[]" />
        <Parameter Name="prfSeed" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="otherPartyPublicKey">
          <span data-ttu-id="95fcf-190">Klucz publiczny z drugiej strony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-190">The other party's public key.</span>
          </span>
        </param>
        <param name="prfLabel">
          <span data-ttu-id="95fcf-191">Etykieta PRF zakodowane w formacie ASCII.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-191">The ASCII-encoded PRF label.</span>
          </span>
        </param>
        <param name="prfSeed">
          <span data-ttu-id="95fcf-192">Inicjator PRF 64 bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-192">The 64-byte PRF seed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fcf-193">Pochodzi bajtów, które mogą być używane jako klucz przy użyciu Algorytm wyprowadzania zabezpieczeń TLS (Transport Layer) Pseudo-Random — funkcja (PRF).</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-193">Derives bytes that can be used as a key using a Transport Layer Security (TLS) Pseudo-Random Function (PRF) derivation algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95fcf-194">Materiał klucza z wymiany kluczy przy użyciu klucza publicznego z drugiej strony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-194">The key material from the key exchange with the other party’s public key.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95fcf-195">
            <paramref name="otherPartyPublicKey" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-195">
              <paramref name="otherPartyPublicKey" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="95fcf-196">- lub - <paramref name="prfLabel" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-196">-or-  <paramref name="prfLabel" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="95fcf-197">- lub - <paramref name="prfSeed" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-197">-or-  <paramref name="prfSeed" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="95fcf-198">
            <paramref name="otherPartyPublicKey" /> nie jest to klucz ECDH lub nie jest prawidłowy rozmiar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-198">
              <paramref name="otherPartyPublicKey" /> is not an ECDH key, or it is not the correct size.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="95fcf-199">
            <paramref name="prfSeed" /> nie jest dokładnie 64 bajtów długości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-199">
              <paramref name="prfSeed" /> is not exactly 64 bytes in length.</span>
          </span>
          <span data-ttu-id="95fcf-200">- lub - wszystkie błędy kryptograficznych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-200">-or-  All other cryptographic errors.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeriveSecretAgreementHandle">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="95fcf-201">Pobiera uchwyt do Porozumienia wpisu tajnego wygenerowane między dwiema stronami.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-201">Gets a handle to the secret agreement generated between two parties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fcf-202"><xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle%2A> Przeciążenia metody są dla zaawansowanych użytkowników, którzy potrzebują dojścia do Porozumienia wpisu tajnego raw zamiast materiału klucza.</span><span class="sxs-lookup"><span data-stu-id="95fcf-202">The <xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle%2A> method overloads are for advanced users who need a handle to the raw secret agreement instead of the key material.</span></span> <span data-ttu-id="95fcf-203">Uchwyt klucza tajnego umowy mogą być używane w platformę wywołania, aby wykonać wszelkie prace, który nie jest otoczony przez <xref:System.Security.Cryptography.ECDiffieHellmanCng> klasy.</span><span class="sxs-lookup"><span data-stu-id="95fcf-203">The secret agreement handle can be used in platform invoke calls to perform any work that is not wrapped by the <xref:System.Security.Cryptography.ECDiffieHellmanCng> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeriveSecretAgreementHandle">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle DeriveSecretAgreementHandle (System.Security.Cryptography.CngKey otherPartyPublicKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle DeriveSecretAgreementHandle(class System.Security.Cryptography.CngKey otherPartyPublicKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeriveSecretAgreementHandle (otherPartyPublicKey As CngKey) As SafeNCryptSecretHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::SafeHandles::SafeNCryptSecretHandle ^ DeriveSecretAgreementHandle(System::Security::Cryptography::CngKey ^ otherPartyPublicKey);" />
      <MemberSignature Language="F#" Value="member this.DeriveSecretAgreementHandle : System.Security.Cryptography.CngKey -&gt; Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle" Usage="eCDiffieHellmanCng.DeriveSecretAgreementHandle otherPartyPublicKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherPartyPublicKey" Type="System.Security.Cryptography.CngKey" />
      </Parameters>
      <Docs>
        <param name="otherPartyPublicKey">
          <span data-ttu-id="95fcf-204">Obiekt zawierający publiczną część klucza Elliptic krzywej Diffie'ego-Hellmana (ECDH), z drugiej strony wymiany kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-204">An object that contains the public part of the Elliptic Curve Diffie-Hellman (ECDH) key from the other party in the key exchange.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fcf-205">Pobiera uchwyt do Porozumienia wpisu tajnego wygenerowane między stronami, biorąc pod uwagę <see cref="T:System.Security.Cryptography.CngKey" /> obiekt, który zawiera klucz publiczny z drugiej strony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-205">Gets a handle to the secret agreement generated between two parties, given a <see cref="T:System.Security.Cryptography.CngKey" /> object that contains the second party's public key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95fcf-206">Dojście do Porozumienia wpisu tajnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-206">A handle to the secret agreement.</span>
          </span>
          <span data-ttu-id="95fcf-207">Informacja ta jest obliczana na podstawie bieżącego obiektu klucza prywatnego i określony klucz publiczny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-207">This information is calculated from the current object's private key and the specified public key.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95fcf-208">
            <paramref name="otherPartyPublicKey" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-208">
              <paramref name="otherPartyPublicKey" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="95fcf-209">
            <paramref name="otherPartyPublicKey" /> nie jest to klucz ECDH lub nie jest prawidłowy rozmiar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-209">
              <paramref name="otherPartyPublicKey" /> is not an ECDH key, or it is not the correct size.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="95fcf-210">Inne błędy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-210">All other errors.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="95fcf-211">Aby uzyskać uprawnienie wywoływać kod niezarządzany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-211">for permission to call unmanaged code.</span>
          </span>
          <span data-ttu-id="95fcf-212">Zapotrzebowanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-212">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="95fcf-213">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-213">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DeriveSecretAgreementHandle">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle DeriveSecretAgreementHandle (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle DeriveSecretAgreementHandle(class System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeriveSecretAgreementHandle (otherPartyPublicKey As ECDiffieHellmanPublicKey) As SafeNCryptSecretHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::SafeHandles::SafeNCryptSecretHandle ^ DeriveSecretAgreementHandle(System::Security::Cryptography::ECDiffieHellmanPublicKey ^ otherPartyPublicKey);" />
      <MemberSignature Language="F#" Value="member this.DeriveSecretAgreementHandle : System.Security.Cryptography.ECDiffieHellmanPublicKey -&gt; Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle" Usage="eCDiffieHellmanCng.DeriveSecretAgreementHandle otherPartyPublicKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherPartyPublicKey" Type="System.Security.Cryptography.ECDiffieHellmanPublicKey" />
      </Parameters>
      <Docs>
        <param name="otherPartyPublicKey">
          <span data-ttu-id="95fcf-214">Klucz publiczny z drugiej strony wymiany kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-214">The public key from the other party in the key exchange.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fcf-215">Pobiera uchwyt do Porozumienia wpisu tajnego wygenerowane między stronami, biorąc pod uwagę <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /> obiekt, który zawiera klucz publiczny z drugiej strony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-215">Gets a handle to the secret agreement generated between two parties, given an <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /> object that contains the second party's public key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95fcf-216">Dojście do Porozumienia wpisu tajnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-216">A handle to the secret agreement.</span>
          </span>
          <span data-ttu-id="95fcf-217">Informacja ta jest obliczana na podstawie bieżącego obiektu klucza prywatnego i określony klucz publiczny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-217">This information is calculated from the current object's private key and the specified public key.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95fcf-218">
            <paramref name="otherPartyPublicKey" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-218">
              <paramref name="otherPartyPublicKey" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="95fcf-219">
            <paramref name="otherPartyPublicKey" /> nie jest <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /> klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-219">
              <paramref name="otherPartyPublicKey" /> is not an <see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /> key.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="eCDiffieHellmanCng.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportExplicitParameters">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ECParameters ExportExplicitParameters (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Security.Cryptography.ECParameters ExportExplicitParameters(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportExplicitParameters(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExportExplicitParameters (includePrivateParameters As Boolean) As ECParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ECParameters ExportExplicitParameters(bool includePrivateParameters);" />
      <MemberSignature Language="F#" Value="override this.ExportExplicitParameters : bool -&gt; System.Security.Cryptography.ECParameters" Usage="eCDiffieHellmanCng.ExportExplicitParameters includePrivateParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters">
          <span data-ttu-id="95fcf-220">
            <see langword="true" /> Aby uwzględnić parametry prywatny; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-220">
              <see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fcf-221">Eksportuje klucz i krzywej jawnych parametrów używanych przez <see cref="T:System.Security.Cryptography.ECCurve" /> do obiektu <see cref="T:System.Security.Cryptography.ECParameters" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-221">Exports the key and explicit curve parameters used by the <see cref="T:System.Security.Cryptography.ECCurve" /> object into an <see cref="T:System.Security.Cryptography.ECParameters" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95fcf-222">Klucza i jawne krzywą parametrów używanych przez <see cref="T:System.Security.Cryptography.ECCurve" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-222">The key and explicit curve parameters used by the <see cref="T:System.Security.Cryptography.ECCurve" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="95fcf-223">Metody nie można uzyskać wartości krzywej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-223">The method cannot obtain curve values.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="95fcf-224">Jawne eksportu nie jest obsługiwana przez tę platformę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-224">Explicit export is not supported by this platform.</span>
          </span>
          <span data-ttu-id="95fcf-225">Windows 10 lub nowszy jest wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-225">Windows 10 or higher is required.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExportParameters">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ECParameters ExportParameters (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Security.Cryptography.ECParameters ExportParameters(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportParameters(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExportParameters (includePrivateParameters As Boolean) As ECParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ECParameters ExportParameters(bool includePrivateParameters);" />
      <MemberSignature Language="F#" Value="override this.ExportParameters : bool -&gt; System.Security.Cryptography.ECParameters" Usage="eCDiffieHellmanCng.ExportParameters includePrivateParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters">
          <span data-ttu-id="95fcf-226">
            <see langword="true" /> Aby uwzględnić parametry prywatny; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-226">
              <see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fcf-227">Eksportuje klucz używany przez <see cref="T:System.Security.Cryptography.ECCurve" /> do obiektu <see cref="T:System.Security.Cryptography.ECParameters" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-227">Exports the key used by the <see cref="T:System.Security.Cryptography.ECCurve" /> object into an <see cref="T:System.Security.Cryptography.ECParameters" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95fcf-228">Krzywa, klucza i nazwanych parametrów używanych przez <see cref="T:System.Security.Cryptography.ECCurve" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-228">The key and named curve parameters used by the <see cref="T:System.Security.Cryptography.ECCurve" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fcf-229">Jeśli klucz został utworzony jako o nazwie krzywej <xref:System.Security.Cryptography.ECParameters.Curve?displayProperty=nameWithType> pole zawiera parametry nazwane krzywej;          w przeciwnym razie zawiera jawne parametry.</span><span class="sxs-lookup"><span data-stu-id="95fcf-229">If the key was created as a named curve, the <xref:System.Security.Cryptography.ECParameters.Curve?displayProperty=nameWithType> field contains named curve parameters;          otherwise,  it contains explicit parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="95fcf-230">Metody nie można uzyskać wartości krzywej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-230">The method cannot obtain curve values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromXmlString">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="95fcf-231">Deserializuje dane klucza z ciągu XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-231">Deserializes the key information from an XML string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromXmlString">
      <MemberSignature Language="C#" Value="public override void FromXmlString (string xmlString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXmlString(string xmlString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXmlString (xmlString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXmlString(System::String ^ xmlString);" />
      <MemberSignature Language="F#" Value="abstract member FromXmlString : string -&gt; unit&#xA;override this.FromXmlString : string -&gt; unit" Usage="eCDiffieHellmanCng.FromXmlString xmlString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlString">
          <span data-ttu-id="95fcf-232">Oparte na języku XML kluczowe informacje do zdeserializowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-232">The XML-based key information to be deserialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fcf-233">Ta metoda nie jest zaimplementowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-233">This method is not implemented.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fcf-234">Do deserializacji klawiszem XML, należy użyć <xref:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString%28System.String%2CSystem.Security.Cryptography.ECKeyXmlFormat%29> zamiast tego przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="95fcf-234">To deserialize an XML key, use the <xref:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString%28System.String%2CSystem.Security.Cryptography.ECKeyXmlFormat%29> overload instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="95fcf-235">Ta metoda nie zostanie zastąpiona dla tego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-235">This method was not overridden for this instance.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromXmlString">
      <MemberSignature Language="C#" Value="public void FromXmlString (string xml, System.Security.Cryptography.ECKeyXmlFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FromXmlString(string xml, valuetype System.Security.Cryptography.ECKeyXmlFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FromXmlString (xml As String, format As ECKeyXmlFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FromXmlString(System::String ^ xml, System::Security::Cryptography::ECKeyXmlFormat format);" />
      <MemberSignature Language="F#" Value="member this.FromXmlString : string * System.Security.Cryptography.ECKeyXmlFormat -&gt; unit" Usage="eCDiffieHellmanCng.FromXmlString (xml, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xml" Type="System.String" />
        <Parameter Name="format" Type="System.Security.Cryptography.ECKeyXmlFormat" />
      </Parameters>
      <Docs>
        <param name="xml">
          <span data-ttu-id="95fcf-236">Oparte na języku XML kluczowe informacje do zdeserializowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-236">The XML-based key information to be deserialized.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="95fcf-237">Jedna z wartości wyliczenia, które określają format ciągu XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-237">One of the enumeration values that specifies the format of the XML string.</span>
          </span>
          <span data-ttu-id="95fcf-238">To jedyny obecnie akceptowane format <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-238">The only currently accepted format is <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fcf-239">Deserializuje dane klucza z ciągu XML przy użyciu określonego formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-239">Deserializes the key information from an XML string by using the specified format.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95fcf-240">
            <paramref name="xml" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-240">
              <paramref name="xml" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="95fcf-241">
            <paramref name="xml" /> jest źle sformułowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-241">
              <paramref name="xml" /> is malformed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="95fcf-242">
            <paramref name="format" /> Określa nieprawidłowy format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-242">
              <paramref name="format" /> specifies an invalid format.</span>
          </span>
          <span data-ttu-id="95fcf-243">Jest to jedyna wartość akceptowane <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-243">The only accepted value is <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="95fcf-244">Inne błędy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-244">All other errors.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateKey">
      <MemberSignature Language="C#" Value="public override void GenerateKey (System.Security.Cryptography.ECCurve curve);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GenerateKey(valuetype System.Security.Cryptography.ECCurve curve) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.GenerateKey(System.Security.Cryptography.ECCurve)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GenerateKey (curve As ECCurve)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GenerateKey(System::Security::Cryptography::ECCurve curve);" />
      <MemberSignature Language="F#" Value="override this.GenerateKey : System.Security.Cryptography.ECCurve -&gt; unit" Usage="eCDiffieHellmanCng.GenerateKey curve" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="curve" Type="System.Security.Cryptography.ECCurve" />
      </Parameters>
      <Docs>
        <param name="curve">
          <span data-ttu-id="95fcf-245">Krzywa, używany do generowania efemeryczne pary kluczy publiczny/prywatny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-245">The curve used to generate an ephemeral public/private key pair.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fcf-246">Generuje nową efemeryczne publicznych/prywatnych parę kluczy dla określonej krzywej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-246">Generates a new ephemeral public/private key pair for the specified curve.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fcf-247">`curve` należy sprawdzić (czyli musi zwracać wartość true, gdy przekazywane do <xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType> metoda) i nie może być niejawne.</span><span class="sxs-lookup"><span data-stu-id="95fcf-247">`curve` must validate (that is, it must return true when passed to the <xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType> method) and must not be implicit.</span></span>  
  
 <span data-ttu-id="95fcf-248">Krzywe cechy-2 nie są obsługiwane w Windows.</span><span class="sxs-lookup"><span data-stu-id="95fcf-248">Characteristic-2 curves are not supported on Windows.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="95fcf-249">
            <paramref name="curve" /> Nie można zweryfikować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-249">
              <paramref name="curve" /> does not validate.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CngAlgorithm HashAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CngAlgorithm HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property HashAlgorithm As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CngAlgorithm ^ HashAlgorithm { System::Security::Cryptography::CngAlgorithm ^ get(); void set(System::Security::Cryptography::CngAlgorithm ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithm : System.Security.Cryptography.CngAlgorithm with get, set" Usage="System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95fcf-250">Pobiera lub ustawia algorytm wyznaczania wartości skrótu do użycia podczas generowania materiału klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-250">Gets or sets the hash algorithm to use when generating key material.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95fcf-251">Obiekt, który określa algorytm wyznaczania wartości skrótu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-251">An object that specifies the hash algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fcf-252">Ta właściwość jest używana przez obiekty Cryptography Next Generation (CNG) tylko wtedy, gdy <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash> lub <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac> wartość jest ustawiana w <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="95fcf-252">This property is used by Cryptography Next Generation (CNG) objects only if the <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash> or <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac> value is set in the <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> property.</span></span>  
  
 <span data-ttu-id="95fcf-253">Ta właściwość akceptuje następujących algorytmów: <xref:System.Security.Cryptography.CngAlgorithm.MD5%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha1%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha384%2A>, i <xref:System.Security.Cryptography.CngAlgorithm.Sha512%2A>.</span><span class="sxs-lookup"><span data-stu-id="95fcf-253">This property accepts the following algorithms: <xref:System.Security.Cryptography.CngAlgorithm.MD5%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha1%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha384%2A>, and <xref:System.Security.Cryptography.CngAlgorithm.Sha512%2A>.</span></span>  
  
 <span data-ttu-id="95fcf-254">Inne algorytmy wyznaczania wartości skrótu w niestandardowych mogą również.</span><span class="sxs-lookup"><span data-stu-id="95fcf-254">Other custom hash algorithms may also be used.</span></span>  
  
 <span data-ttu-id="95fcf-255">Domyślny algorytm to <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>.</span><span class="sxs-lookup"><span data-stu-id="95fcf-255">The default algorithm is <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95fcf-256">Wartość jest <see langword="null." /></span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-256">The value is <see langword="null." /></span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HmacKey">
      <MemberSignature Language="C#" Value="public byte[] HmacKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] HmacKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey" />
      <MemberSignature Language="VB.NET" Value="Public Property HmacKey As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ HmacKey { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HmacKey : byte[] with get, set" Usage="System.Security.Cryptography.ECDiffieHellmanCng.HmacKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95fcf-257">Pobiera lub ustawia klucz bazujących na skrótach komunikatów uwierzytelniania kodu metoda HMAC () do użycia podczas wyprowadzania materiału klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-257">Gets or sets the Hash-based Message Authentication Code (HMAC) key to use when deriving key material.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95fcf-258">Klucz bazujących na skrótach komunikatów uwierzytelniania kodu metoda HMAC () do użycia podczas wyprowadzania materiału klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-258">The Hash-based Message Authentication Code (HMAC) key to use when deriving key material.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fcf-259">Ta właściwość ma zastosowanie tylko wtedy, gdy <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac> wartość jest ustawiana w <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> właściwości i <xref:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey%2A> właściwość `false`.</span><span class="sxs-lookup"><span data-stu-id="95fcf-259">This property applies only when the <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac> value is set in the <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> property, and the <xref:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey%2A> property is `false`.</span></span> <span data-ttu-id="95fcf-260">Domyślna wartość to `null`.</span><span class="sxs-lookup"><span data-stu-id="95fcf-260">By default, the value is `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportParameters">
      <MemberSignature Language="C#" Value="public override void ImportParameters (System.Security.Cryptography.ECParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ImportParameters(valuetype System.Security.Cryptography.ECParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters(System.Security.Cryptography.ECParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ImportParameters (parameters As ECParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ImportParameters(System::Security::Cryptography::ECParameters parameters);" />
      <MemberSignature Language="F#" Value="override this.ImportParameters : System.Security.Cryptography.ECParameters -&gt; unit" Usage="eCDiffieHellmanCng.ImportParameters parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.ECParameters" />
      </Parameters>
      <Docs>
        <param name="parameters">
          <span data-ttu-id="95fcf-261">Parametry krzywej do zaimportowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-261">The curve's parameters to import.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fcf-262">Importuje określone parametry <see cref="T:System.Security.Cryptography.ECCurve" /> obiektu jako klucz do bieżącego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-262">Imports the specified parameters for an <see cref="T:System.Security.Cryptography.ECCurve" /> object as a key into the current instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fcf-263"><xref:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters%2A> Metoda zastępuje istniejący klucz, który współpracuje z tego obiektu przez utworzenie nowego <xref:System.Security.Cryptography.CngKey> obiektu.</span><span class="sxs-lookup"><span data-stu-id="95fcf-263">The <xref:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters%2A> method replaces the existing key that this object is working with by creating a         new <xref:System.Security.Cryptography.CngKey> object.</span></span> <span data-ttu-id="95fcf-264">Jeśli `parameters` zawiera tylko <xref:System.Security.Cryptography.ECParameters.Q> pola, a następnie tylko klucz publiczny jest importowany.</span><span class="sxs-lookup"><span data-stu-id="95fcf-264">If `parameters` contains only the <xref:System.Security.Cryptography.ECParameters.Q> field, then only a public key is imported.</span></span>         <span data-ttu-id="95fcf-265">Jeśli `parameters` zawiera także <xref:System.Security.Cryptography.ECParameters.D>, a następnie parą kluczy pełnej jest importowany.</span><span class="sxs-lookup"><span data-stu-id="95fcf-265">If `parameters` also contains <xref:System.Security.Cryptography.ECParameters.D>, then a full key pair is be imported.</span></span> <span data-ttu-id="95fcf-266">`parameter` <xref:System.Security.Cryptography.ECParameters.Curve> Wartość określa typ krzywej do zaimportowania.</span><span class="sxs-lookup"><span data-stu-id="95fcf-266">The `parameter` <xref:System.Security.Cryptography.ECParameters.Curve> value specifies the type of the curve to import.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="95fcf-267">
            <paramref name="parameters" /> Nie można zweryfikować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-267">
              <paramref name="parameters" /> does not validate.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="95fcf-268">
            <paramref name="parameters" /> odwołuje się krzywej, których nie można importować...</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-268">
              <paramref name="parameters" /> references a curve that cannot be imported..</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="95fcf-269">
            <paramref name="parameters" /> odwołuje się krzywej, która nie jest obsługiwana przez tę platformę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-269">
              <paramref name="parameters" /> references a curve that is not supported by this platform.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CngKey Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CngKey Key" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDiffieHellmanCng.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As CngKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CngKey ^ Key { System::Security::Cryptography::CngKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Key : System.Security.Cryptography.CngKey" Usage="System.Security.Cryptography.ECDiffieHellmanCng.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95fcf-270">Określa <see cref="T:System.Security.Cryptography.CngKey" /> używanego przez bieżący obiekt, do obsługi operacji kryptograficznych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-270">Specifies the <see cref="T:System.Security.Cryptography.CngKey" /> that is used by the current object for cryptographic operations.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95fcf-271">Pary kluczy używanych przez ten obiekt do wykonywania operacji kryptograficznych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-271">The key pair used by this object to perform cryptographic operations.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDerivationFunction">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction KeyDerivationFunction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction KeyDerivationFunction" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyDerivationFunction As ECDiffieHellmanKeyDerivationFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::ECDiffieHellmanKeyDerivationFunction KeyDerivationFunction { System::Security::Cryptography::ECDiffieHellmanKeyDerivationFunction get(); void set(System::Security::Cryptography::ECDiffieHellmanKeyDerivationFunction value); };" />
      <MemberSignature Language="F#" Value="member this.KeyDerivationFunction : System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction with get, set" Usage="System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95fcf-272">Pobiera lub ustawia funkcję wyprowadzania klucza dla <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-272">Gets or sets the key derivation function for the <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95fcf-273">Jedną z <see cref="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction" /> wartości wyliczenia: <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" />, <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" />, lub <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-273">One of the <see cref="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction" /> enumeration values: <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" />, <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" />, or <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" />.</span>
          </span>
          <span data-ttu-id="95fcf-274">Wartość domyślna to <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-274">The default value is <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fcf-275">Ta właściwość określa funkcja wyprowadzania klucza, która jest używana do przekształcania w materiału klucza tajnego umowy.</span><span class="sxs-lookup"><span data-stu-id="95fcf-275">This property specifies the key derivation function that is used to transform the secret agreement into key material.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="95fcf-276">Wartość wyliczenia jest poza zakresem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-276">The enumeration value is out of range.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public byte[] Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Label" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDiffieHellmanCng.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Label { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Label : byte[] with get, set" Usage="System.Security.Cryptography.ECDiffieHellmanCng.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95fcf-277">Pobiera lub ustawia wartość etykiety, która jest używana dla klucza pochodnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-277">Gets or sets the label value that is used for key derivation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95fcf-278">Wartość etykiety.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-278">The label value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fcf-279">Ta wartość jest używana dla klucza pochodnego, jeśli <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls> wartość jest ustawiana w <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="95fcf-279">This value is used for key derivation if the <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls> value is set in the <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> property.</span></span> <span data-ttu-id="95fcf-280">Domyślnie jest `null`.</span><span class="sxs-lookup"><span data-stu-id="95fcf-280">By default, it is `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PublicKey">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ECDiffieHellmanPublicKey PublicKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.ECDiffieHellmanPublicKey PublicKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDiffieHellmanCng.PublicKey" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PublicKey As ECDiffieHellmanPublicKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::ECDiffieHellmanPublicKey ^ PublicKey { System::Security::Cryptography::ECDiffieHellmanPublicKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PublicKey : System.Security.Cryptography.ECDiffieHellmanPublicKey" Usage="System.Security.Cryptography.ECDiffieHellmanCng.PublicKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECDiffieHellmanPublicKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95fcf-281">Pobiera klucz publiczny, który może być używany przez inny <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> obiektu umożliwiającą wygenerowanie udostępnionego umowy wpisu tajnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-281">Gets the public key that can be used by another <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> object to generate a shared secret agreement.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95fcf-282">Klucz publiczny, który jest skojarzony z tym wystąpieniem <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-282">The public key that is associated with this instance of the <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecretAppend">
      <MemberSignature Language="C#" Value="public byte[] SecretAppend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] SecretAppend" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend" />
      <MemberSignature Language="VB.NET" Value="Public Property SecretAppend As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ SecretAppend { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SecretAppend : byte[] with get, set" Usage="System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95fcf-283">Pobiera lub ustawia wartość, która zostanie dołączony do Porozumienia wpisu tajnego podczas generowania materiału klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-283">Gets or sets a value that will be appended to the secret agreement when generating key material.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95fcf-284">Wartość, która jest dołączana do Porozumienia wpisu tajnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-284">The value that is appended to the secret agreement.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fcf-285">Ta wartość jest używana dla klucza pochodnego, jeśli <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash> lub <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac> jest używana funkcja klucza pochodnego (KDF).</span><span class="sxs-lookup"><span data-stu-id="95fcf-285">This value is used for key derivation if the <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash> or <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac> key derivation function (KDF) is used.</span></span> <span data-ttu-id="95fcf-286">Wartość jest dołączana do wpisu tajnego umowę, a łączna wartość jest przekazywana do KDF Generowanie materiału klucza.</span><span class="sxs-lookup"><span data-stu-id="95fcf-286">The value is appended to the secret agreement, and the combined value is passed to the KDF to generate the key material.</span></span> <span data-ttu-id="95fcf-287">Domyślna wartość to `null`.</span><span class="sxs-lookup"><span data-stu-id="95fcf-287">By default, the value is `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecretPrepend">
      <MemberSignature Language="C#" Value="public byte[] SecretPrepend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] SecretPrepend" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend" />
      <MemberSignature Language="VB.NET" Value="Public Property SecretPrepend As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ SecretPrepend { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SecretPrepend : byte[] with get, set" Usage="System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95fcf-288">Pobiera lub ustawia wartość, która zostanie dodany na początku umowy wpisu tajnego, podczas wyprowadzania materiału klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-288">Gets or sets a value that will be added to the beginning of the secret agreement when deriving key material.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95fcf-289">Wartość, która jest dołączany na początku umowy wpisu tajnego podczas wyprowadzania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-289">The value that is appended to the beginning of the secret agreement during key derivation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fcf-290">Ta wartość jest używana dla klucza pochodnego, jeśli <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> właściwość jest ustawiona na jedną z następujących wartości:</span><span class="sxs-lookup"><span data-stu-id="95fcf-290">This value is used for key derivation if the <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> property is set to one of the following values:</span></span>  
  
-   <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash>  
  
-   <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac>  
  
 <span data-ttu-id="95fcf-291">Wartość jest dołączony do Porozumienia wpisu tajnego i połączoną wartość jest przekazywana do funkcji klucza pochodnego (KDF), aby wygenerować materiału klucza.</span><span class="sxs-lookup"><span data-stu-id="95fcf-291">The value is prepended to the secret agreement, and the combined value is passed to the key derivation function (KDF) to generate the key material.</span></span> <span data-ttu-id="95fcf-292">Domyślna wartość to `null`.</span><span class="sxs-lookup"><span data-stu-id="95fcf-292">By default, the value is `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seed">
      <MemberSignature Language="C#" Value="public byte[] Seed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Seed" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed" />
      <MemberSignature Language="VB.NET" Value="Public Property Seed As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Seed { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Seed : byte[] with get, set" Usage="System.Security.Cryptography.ECDiffieHellmanCng.Seed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95fcf-293">Pobiera lub ustawia wartość początkową, który będzie używany podczas wyprowadzania materiału klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-293">Gets or sets the seed value that will be used when deriving key material.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95fcf-294">Wartość początkową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-294">The seed value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fcf-295">Ta wartość jest używana dla klucza pochodnego, jeśli <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> właściwość jest ustawiona na <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls>.</span><span class="sxs-lookup"><span data-stu-id="95fcf-295">This value is used for key derivation if the <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> property is set to <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls>.</span></span> <span data-ttu-id="95fcf-296">Domyślna wartość to `null`.</span><span class="sxs-lookup"><span data-stu-id="95fcf-296">By default, the value is `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToXmlString">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="95fcf-297">Serializuje dane klucza do ciągu XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-297">Serializes the key information to an XML string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToXmlString">
      <MemberSignature Language="C#" Value="public override string ToXmlString (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToXmlString(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXmlString (includePrivateParameters As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToXmlString(bool includePrivateParameters);" />
      <MemberSignature Language="F#" Value="abstract member ToXmlString : bool -&gt; string&#xA;override this.ToXmlString : bool -&gt; string" Usage="eCDiffieHellmanCng.ToXmlString includePrivateParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters">
          <span data-ttu-id="95fcf-298">
            <see langword="true" /> Aby uwzględnić parametry prywatny; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-298">
              <see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fcf-299">Ta metoda nie jest zaimplementowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-299">This method is not implemented.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95fcf-300">Nie dotyczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-300">Not applicable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95fcf-301">Aby przekonwertować bieżący klucz reprezentację XML, użyj <xref:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString%28System.Security.Cryptography.ECKeyXmlFormat%29> zamiast tego przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="95fcf-301">To convert the current key to an XML representation, use the <xref:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString%28System.Security.Cryptography.ECKeyXmlFormat%29> overload instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="95fcf-302">Ta metoda nie zostanie zastąpiona dla tego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-302">This method was not overridden for this instance.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToXmlString">
      <MemberSignature Language="C#" Value="public string ToXmlString (System.Security.Cryptography.ECKeyXmlFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToXmlString(valuetype System.Security.Cryptography.ECKeyXmlFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToXmlString (format As ECKeyXmlFormat) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToXmlString(System::Security::Cryptography::ECKeyXmlFormat format);" />
      <MemberSignature Language="F#" Value="member this.ToXmlString : System.Security.Cryptography.ECKeyXmlFormat -&gt; string" Usage="eCDiffieHellmanCng.ToXmlString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Security.Cryptography.ECKeyXmlFormat" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="95fcf-303">Jedna z wartości wyliczenia, które określają format ciągu XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-303">One of the enumeration values that specifies the format of the XML string.</span>
          </span>
          <span data-ttu-id="95fcf-304">To jedyny obecnie akceptowane format <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-304">The only currently accepted format is <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95fcf-305">Serializuje dane klucza do ciągu XML przy użyciu określonego formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-305">Serializes the key information to an XML string by using the specified format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95fcf-306">Obiekt ciągu, który zawiera informacje o kluczu, serializować do ciągu XML, zgodnie z żądanego formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-306">A string object that contains the key information, serialized to an XML string, according to the requested format.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="95fcf-307">
            <paramref name="format" /> Określa nieprawidłowy format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-307">
              <paramref name="format" /> specifies an invalid format.</span>
          </span>
          <span data-ttu-id="95fcf-308">Jest to jedyna wartość akceptowane <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-308">The only accepted value is <see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UseSecretAgreementAsHmacKey">
      <MemberSignature Language="C#" Value="public bool UseSecretAgreementAsHmacKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSecretAgreementAsHmacKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseSecretAgreementAsHmacKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseSecretAgreementAsHmacKey { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UseSecretAgreementAsHmacKey : bool" Usage="System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95fcf-309">Pobiera wartość wskazującą, czy umowa wpisu tajnego jest używany jako klucz bazujących na skrótach komunikatów uwierzytelniania kodu metoda HMAC () do uzyskania materiału klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-309">Gets a value that indicates whether the secret agreement is used as a Hash-based Message Authentication Code (HMAC) key to derive key material.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95fcf-310">
            <see langword="true" /> Jeśli umowy wpisu tajnego jest używany jako klawisz HMAC do uzyskania materiału klucza; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95fcf-310">
              <see langword="true" /> if the secret agreement is used as an HMAC key to derive key material; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   <span data-ttu-id="95fcf-311">Ta wartość jest używana dla klucza pochodnego, jeśli <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> właściwość jest ustawiona na <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac>.</span><span class="sxs-lookup"><span data-stu-id="95fcf-311">This value is used for key derivation if the <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> property is set to <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac>.</span></span> <span data-ttu-id="95fcf-312">Domyślna wartość to `false`.</span><span class="sxs-lookup"><span data-stu-id="95fcf-312">By default, the value is `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>