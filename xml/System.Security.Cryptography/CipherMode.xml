<Type Name="CipherMode" FullName="System.Security.Cryptography.CipherMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="16396fdc5122018822821fb1334467baa735154b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36530119" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum CipherMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed CipherMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.CipherMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum CipherMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class CipherMode" />
  <TypeSignature Language="F#" Value="type CipherMode = " />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Określa tryb szyfrowania bloku do użycia na potrzeby szyfrowania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Algorytmy szyfrowania bloku szyfrować dane w jednostkach bloku, a nie pojedynczy bajt naraz. Najbardziej typowe rozmiar bloku jest 8 bajtów. Ponieważ każdy blok silnie został przetworzony, blok, szyfrowania zapewnia wyższy poziom zabezpieczeń niż szyfrów strumienia. Jednak algorytmów szyfrowania bloku zwykle do wykonania wolniej niż szyfrów strumienia.  
  
 Szyfry bloku użyć tego samego algorytmu szyfrowania dla każdego bloku. W związku z tym blok tekstowy zawsze zwraca tego samego tekstu szyfrowania, gdy zaszyfrowany za pomocą tego samego klucza i algorytm. Ponieważ to zachowanie może służyć do złamania określony szyfr, tryby szyfrowania wprowadzono modyfikujące proces szyfrowania, na podstawie opinii z wcześniejszych szyfrowanie bloku. Wynikowa szyfrowanie zapewnia wyższy poziom zabezpieczeń niż szyfrowania Prosty blok.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CBC">
      <MemberSignature Language="C#" Value="CBC" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.CipherMode CBC = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CipherMode.CBC" />
      <MemberSignature Language="VB.NET" Value="CBC" />
      <MemberSignature Language="C++ CLI" Value="CBC" />
      <MemberSignature Language="F#" Value="CBC = 1" Usage="System.Security.Cryptography.CipherMode.CBC" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Tworzenie łańcuchów bloku szyfrowania (<see langword="CBC" />) trybu wprowadza opinii. Przed każdy blok w postaci zwykłego tekstu jest zaszyfrowany, jest połączone z zaszyfrowanego tekstu poprzedniego bloku przez operację bitowej OR wyłączne. Dzięki temu, że nawet wtedy, gdy zwykły tekst zawiera wiele identycznych bloków, ich będzie każdego szyfrowania z różnych szyfrowania bloku tekstu. Wektor inicjowania w połączeniu z pierwszego bloku zwykłego tekstu przez operację bitowej OR wyłączne przed bloku jest zaszyfrowany. Jeśli jest zniekształcone jednej ręki szyfrowania bloku tekstu, odpowiedni blok zwykły tekst również będzie zniekształcone. Ponadto nieco w kolejnych bloku, w tym samym miejscu oryginalnego bit zniekształcone, będzie można zniekształcone.</summary>
      </Docs>
    </Member>
    <Member MemberName="CFB">
      <MemberSignature Language="C#" Value="CFB" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.CipherMode CFB = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CipherMode.CFB" />
      <MemberSignature Language="VB.NET" Value="CFB" />
      <MemberSignature Language="C++ CLI" Value="CFB" />
      <MemberSignature Language="F#" Value="CFB = 4" Usage="System.Security.Cryptography.CipherMode.CFB" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Cipher Feedback (<see langword="CFB" />) tryb przetwarzania małych przyrostów zwykłego tekstu do tekst zaszyfrowany, zamiast przetwarzania bloku naraz. W tym trybie używa rejestru shift, który jest jeden blok długości i jest podzielony na sekcje. Na przykład jeśli rozmiar bloku jest 8 bajtów z jednego bajtu przetwarzane pojedynczo, rejestru shift jest podzielona na osiem sekcje. Jeśli bit w szyfr zniekształcone jest tekst, jeden bit zwykłego tekstu jest zniekształcone i rejestru shift jest uszkodzony. Powoduje to dalej kilka zwiększa zwykły tekst są zniekształcone dopóki zły bit zostanie przesunięty poza rejestru shift. Domyślny rozmiar opinii zależą od algorytmu, ale jest zwykle 8 bitów lub liczbę bitów rozmiaru bloku. Liczba bitów opinii można zmienić za pomocą <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" /> właściwości. Algorytmy, które obsługują CFB używają tej właściwości można ustawić opinii.</summary>
      </Docs>
    </Member>
    <Member MemberName="CTS">
      <MemberSignature Language="C#" Value="CTS" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.CipherMode CTS = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CipherMode.CTS" />
      <MemberSignature Language="VB.NET" Value="CTS" />
      <MemberSignature Language="C++ CLI" Value="CTS" />
      <MemberSignature Language="F#" Value="CTS = 5" Usage="System.Security.Cryptography.CipherMode.CTS" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>Kradzież tekst szyfrowania (<see langword="CTS" />) trybu obsługi dowolnej długości zwykły tekst i tworzy szyfrowania o długości odpowiada długość tekstu zwykłego tekstu. Ten tryb zachowuje się jak <see langword="CBC" /> trybie wszystkie, ale ostatnie dwa bloki zwykłego tekstu.</summary>
      </Docs>
    </Member>
    <Member MemberName="ECB">
      <MemberSignature Language="C#" Value="ECB" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.CipherMode ECB = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CipherMode.ECB" />
      <MemberSignature Language="VB.NET" Value="ECB" />
      <MemberSignature Language="C++ CLI" Value="ECB" />
      <MemberSignature Language="F#" Value="ECB = 2" Usage="System.Security.Cryptography.CipherMode.ECB" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Elektronicznych Codebook (<see langword="ECB" />) trybu szyfruje każdy blok pojedynczo. Żadnych bloków zwykłego tekstu, które są identyczne i w ten sam komunikat lub znajdują się w różnych wiadomości zaszyfrowane za pomocą tego samego klucza, zostanie on przekształcony na bloki tekstu identyczne szyfrowania. ** Ważne **: ten tryb nie jest zalecane, ponieważ spowoduje to otwarcie drzwi wielu lukami w zabezpieczeniach. Jeśli zwykły tekst do zaszyfrowania zawiera istotne powtarzania, jest praktycznie szyfrowania tekst, który ma być podzielone jeden blok w czasie. Istnieje również możliwość użycia bloku analizy do określenia klucza szyfrowania. Również active atakujący dokonuje można zastąpić i exchange poszczególnych bloków bez wykrywania, dzięki czemu bloków na zapisywanie i dodaje do strumienia w innych punktach bez wykrywania.</summary>
      </Docs>
    </Member>
    <Member MemberName="OFB">
      <MemberSignature Language="C#" Value="OFB" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.CipherMode OFB = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CipherMode.OFB" />
      <MemberSignature Language="VB.NET" Value="OFB" />
      <MemberSignature Language="C++ CLI" Value="OFB" />
      <MemberSignature Language="F#" Value="OFB = 3" Usage="System.Security.Cryptography.CipherMode.OFB" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Opinie danych wyjściowych (<see langword="OFB" />) tryb przetwarzania małych przyrostów zwykłego tekstu do szyfrowania tekst, a przetwarzanie bloku naraz. Ten tryb jest podobny do <see langword="CFB" />; tylko różnica dwóch trybów jest sposób zmiany rejestru jest wypełnione. Jeśli bit w szyfr zniekształcone jest tekst, zostanie zniekształcone odpowiadający mu bit zwykłego tekstu. Jednak w przypadku dodatkowe lub brakujące usługi bits z zaszyfrowanego tekstu zwykłego tekstu będzie zniekształcone od tego momentu na.</summary>
      </Docs>
    </Member>
  </Members>
</Type>