<Type Name="CipherMode" FullName="System.Security.Cryptography.CipherMode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="35b22958be43358a5e13f397146a1d91f8775b18" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69083839" /></Metadata><TypeSignature Language="C#" Value="public enum CipherMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed CipherMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.CipherMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum CipherMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class CipherMode" />
  <TypeSignature Language="F#" Value="type CipherMode = " />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="03177-101">Określa tryb szyfru blokowego do użycia na potrzeby szyfrowania.</span><span class="sxs-lookup"><span data-stu-id="03177-101">Specifies the block cipher mode to use for encryption.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03177-102">Blokuj algorytmy szyfrowania dane w jednostkach bloku, a nie pojedyncze bajty naraz.</span><span class="sxs-lookup"><span data-stu-id="03177-102">Block cipher algorithms encrypt data in block units, rather than a single byte at a time.</span></span> <span data-ttu-id="03177-103">Najbardziej typowy rozmiar bloku to 8 bajtów.</span><span class="sxs-lookup"><span data-stu-id="03177-103">The most common block size is 8 bytes.</span></span> <span data-ttu-id="03177-104">Ponieważ każdy blok jest silnie przetwarzany, Szyfry blokowe zapewniają wyższy poziom zabezpieczeń niż szyfry strumienia.</span><span class="sxs-lookup"><span data-stu-id="03177-104">Because each block is heavily processed, block ciphers provide a higher level of security than stream ciphers.</span></span> <span data-ttu-id="03177-105">Jednak blokowe algorytmy szyfrowania są wykonywane wolniej niż szyfry strumienia.</span><span class="sxs-lookup"><span data-stu-id="03177-105">However, block cipher algorithms tend to execute more slowly than stream ciphers.</span></span>  
  
 <span data-ttu-id="03177-106">Blokuj szyfry używają tego samego algorytmu szyfrowania dla każdego bloku.</span><span class="sxs-lookup"><span data-stu-id="03177-106">Block ciphers use the same encryption algorithm for each block.</span></span> <span data-ttu-id="03177-107">Z tego powodu blok zwykłego tekstu zawsze będzie zwracać ten sam tekst szyfru, gdy jest szyfrowany z tym samym kluczem i algorytmem.</span><span class="sxs-lookup"><span data-stu-id="03177-107">Because of this, a block of plain text will always return the same cipher text when encrypted with the same key and algorithm.</span></span> <span data-ttu-id="03177-108">Ponieważ takie zachowanie może być używane do złamania szyfru, wprowadzane są tryby szyfru, które modyfikują proces szyfrowania na podstawie informacji zwrotnych z wcześniejszych szyfrowanych blokad.</span><span class="sxs-lookup"><span data-stu-id="03177-108">Because this behavior can be used to crack a cipher, cipher modes are introduced that modify the encryption process based on feedback from earlier block encryptions.</span></span> <span data-ttu-id="03177-109">Wynikiem szyfrowania jest wyższy poziom zabezpieczeń niż proste szyfrowanie bloku.</span><span class="sxs-lookup"><span data-stu-id="03177-109">The resulting encryption provides a higher level of security than a simple block encryption.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="03177-110">Usługi kryptograficzne</span><span class="sxs-lookup"><span data-stu-id="03177-110">Cryptographic Services</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="CBC">
      <MemberSignature Language="C#" Value="CBC" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.CipherMode CBC = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CipherMode.CBC" />
      <MemberSignature Language="VB.NET" Value="CBC" />
      <MemberSignature Language="C++ CLI" Value="CBC" />
      <MemberSignature Language="F#" Value="CBC = 1" Usage="System.Security.Cryptography.CipherMode.CBC" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="03177-111">Tryb łańcucha szyfru (<see langword="CBC" />) zawiera informacje zwrotne.</span><span class="sxs-lookup"><span data-stu-id="03177-111">The Cipher Block Chaining (<see langword="CBC" />) mode introduces feedback.</span></span> <span data-ttu-id="03177-112">Przed zaszyfrowaniem każdego zwykłego bloku tekstu jest on połączony z tekstem szyfru poprzedniego bloku przez bitowe wykluczenie lub operację.</span><span class="sxs-lookup"><span data-stu-id="03177-112">Before each plain text block is encrypted, it is combined with the cipher text of the previous block by a bitwise exclusive OR operation.</span></span> <span data-ttu-id="03177-113">Gwarantuje to, że nawet jeśli zwykły tekst zawiera wiele identycznych bloków, każda z nich będzie szyfrowana w innym bloku tekstu szyfrowania.</span><span class="sxs-lookup"><span data-stu-id="03177-113">This ensures that even if the plain text contains many identical blocks, they will each encrypt to a different cipher text block.</span></span> <span data-ttu-id="03177-114">Wektor inicjalizacji jest połączony z pierwszym blokiem zwykłego tekstu przez bitowe wykluczenie lub operację przed zaszyfrowaniem bloku.</span><span class="sxs-lookup"><span data-stu-id="03177-114">The initialization vector is combined with the first plain text block by a bitwise exclusive OR operation before the block is encrypted.</span></span> <span data-ttu-id="03177-115">Jeśli pojedynczy bit bloku tekstu szyfrowania to zniekształcona, odpowiedni blok zwykłego tekstu również będzie zniekształcona.</span><span class="sxs-lookup"><span data-stu-id="03177-115">If a single bit of the cipher text block is mangled, the corresponding plain text block will also be mangled.</span></span> <span data-ttu-id="03177-116">Ponadto bit w kolejnym bloku w tym samym miejscu, w którym znajduje się oryginalny zniekształcona bit, będzie zniekształcona.</span><span class="sxs-lookup"><span data-stu-id="03177-116">In addition, a bit in the subsequent block, in the same position as the original mangled bit, will be mangled.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="CFB">
      <MemberSignature Language="C#" Value="CFB" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.CipherMode CFB = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CipherMode.CFB" />
      <MemberSignature Language="VB.NET" Value="CFB" />
      <MemberSignature Language="C++ CLI" Value="CFB" />
      <MemberSignature Language="F#" Value="CFB = 4" Usage="System.Security.Cryptography.CipherMode.CFB" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="03177-117">Tryb reopinii (<see langword="CFB" />) przetwarza małe przyrosty zwykłego tekstu do szyfru tekstu, zamiast przetwarzać cały blok w danym momencie.</span><span class="sxs-lookup"><span data-stu-id="03177-117">The Cipher Feedback (<see langword="CFB" />) mode processes small increments of plain text into cipher text, instead of processing an entire block at a time.</span></span> <span data-ttu-id="03177-118">Ten tryb używa rejestru przesunięcia o długości jednego bloku i jest podzielony na sekcje.</span><span class="sxs-lookup"><span data-stu-id="03177-118">This mode uses a shift register that is one block in length and is divided into sections.</span></span> <span data-ttu-id="03177-119">Na przykład, jeśli rozmiar bloku to 8 bajtów, po przetworzeniu jednego bajtu w czasie, rejestr przesunięcia jest podzielony na osiem sekcji.</span><span class="sxs-lookup"><span data-stu-id="03177-119">For example, if the block size is 8 bytes, with one byte processed at a time, the shift register is divided into eight sections.</span></span> <span data-ttu-id="03177-120">Jeśli bit w tekście szyfru jest zniekształcona, jeden bit w postaci zwykłego tekstu jest zniekształcona i rejestr przesunięć jest uszkodzony.</span><span class="sxs-lookup"><span data-stu-id="03177-120">If a bit in the cipher text is mangled, one plain text bit is mangled and the shift register is corrupted.</span></span> <span data-ttu-id="03177-121">Powoduje to, że kolejne kilka zwykłych wartości tekstowych jest zniekształcona, dopóki niewłaściwy bit nie zostanie przesunięty w rejestrze przesunięcia.</span><span class="sxs-lookup"><span data-stu-id="03177-121">This results in the next several plain text increments being mangled until the bad bit is shifted out of the shift register.</span></span> <span data-ttu-id="03177-122">Domyślny rozmiar informacji zwrotnych może różnić się w zależności od algorytmu, ale zazwyczaj jest to 8 bitów lub liczba bitów rozmiaru bloku.</span><span class="sxs-lookup"><span data-stu-id="03177-122">The default feedback size can vary by algorithm, but is typically either 8 bits or the number of bits of the block size.</span></span> <span data-ttu-id="03177-123">Liczbę bitów informacji zwrotnych można zmienić za pomocą <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="03177-123">You can alter the number of feedback bits by using the <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" /> property.</span></span> <span data-ttu-id="03177-124">Algorytmy obsługujące CFB używają tej właściwości do ustawiania informacji zwrotnych.</span><span class="sxs-lookup"><span data-stu-id="03177-124">Algorithms that support CFB use this property to set the feedback.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="CTS">
      <MemberSignature Language="C#" Value="CTS" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.CipherMode CTS = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CipherMode.CTS" />
      <MemberSignature Language="VB.NET" Value="CTS" />
      <MemberSignature Language="C++ CLI" Value="CTS" />
      <MemberSignature Language="F#" Value="CTS = 5" Usage="System.Security.Cryptography.CipherMode.CTS" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary><span data-ttu-id="03177-125">Tryb szyfrowania tekstu (<see langword="CTS" />) obsługuje dowolną długość zwykłego tekstu i generuje tekst szyfru, którego długość jest zgodna z długością zwykłego tekstu.</span><span class="sxs-lookup"><span data-stu-id="03177-125">The Cipher Text Stealing (<see langword="CTS" />) mode handles any length of plain text and produces cipher text whose length matches the plain text length.</span></span> <span data-ttu-id="03177-126">Ten tryb zachowuje się <see langword="CBC" /> jak tryb dla wszystkich oprócz ostatnich dwóch bloków zwykłego tekstu.</span><span class="sxs-lookup"><span data-stu-id="03177-126">This mode behaves like the <see langword="CBC" /> mode for all but the last two blocks of the plain text.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ECB">
      <MemberSignature Language="C#" Value="ECB" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.CipherMode ECB = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CipherMode.ECB" />
      <MemberSignature Language="VB.NET" Value="ECB" />
      <MemberSignature Language="C++ CLI" Value="ECB" />
      <MemberSignature Language="F#" Value="ECB = 2" Usage="System.Security.Cryptography.CipherMode.ECB" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="03177-127">Tryb elektroniczny trybu (<see langword="ECB" />) szyfruje każdy blok pojedynczo.</span><span class="sxs-lookup"><span data-stu-id="03177-127">The Electronic Codebook (<see langword="ECB" />) mode encrypts each block individually.</span></span> <span data-ttu-id="03177-128">Wszystkie bloki zwykłego tekstu, które są identyczne i w tym samym komunikacie lub znajdują się w innej wiadomości zaszyfrowanej przy użyciu tego samego klucza, zostaną przekształcone w identyczne bloki tekstu szyfru.</span><span class="sxs-lookup"><span data-stu-id="03177-128">Any blocks of plain text that are identical and in the same message, or that are in a different message encrypted with the same key, will be transformed into identical cipher text blocks.</span></span> <span data-ttu-id="03177-129">**Ważne**:  Ten tryb nie jest zalecany, ponieważ otwiera drzwi dla wielu luk w zabezpieczeniach.</span><span class="sxs-lookup"><span data-stu-id="03177-129">**Important**:  This mode is not recommended because it opens the door for multiple security exploits.</span></span> <span data-ttu-id="03177-130">Jeśli zwykły tekst, który ma być zaszyfrowany, zawiera duże powtarzanie, jest możliwe, aby tekst szyfru był uszkodzony po jednym bloku w danym momencie.</span><span class="sxs-lookup"><span data-stu-id="03177-130">If the plain text to be encrypted contains substantial repetition, it is feasible for the cipher text to be broken one block at a time.</span></span> <span data-ttu-id="03177-131">Istnieje również możliwość użycia analizy bloków do określenia klucza szyfrowania.</span><span class="sxs-lookup"><span data-stu-id="03177-131">It is also possible to use block analysis to determine the encryption key.</span></span> <span data-ttu-id="03177-132">Ponadto Active atakującej może zastępować i wymieniać poszczególne bloki bez wykrywania, co umożliwia zapisywanie i wstawianie bloków do strumienia w innych punktach bez wykrywania.</span><span class="sxs-lookup"><span data-stu-id="03177-132">Also, an active adversary can substitute and exchange individual blocks without detection, which allows blocks to be saved and inserted into the stream at other points without detection.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="OFB">
      <MemberSignature Language="C#" Value="OFB" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.CipherMode OFB = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CipherMode.OFB" />
      <MemberSignature Language="VB.NET" Value="OFB" />
      <MemberSignature Language="C++ CLI" Value="OFB" />
      <MemberSignature Language="F#" Value="OFB = 3" Usage="System.Security.Cryptography.CipherMode.OFB" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="03177-133">Tryb opinii wyjściowych<see langword="OFB" />() przetwarza małe przyrosty zwykłego tekstu do szyfru tekstu zamiast przetwarzania całego bloku w danym momencie.</span><span class="sxs-lookup"><span data-stu-id="03177-133">The Output Feedback (<see langword="OFB" />) mode processes small increments of plain text into cipher text instead of processing an entire block at a time.</span></span> <span data-ttu-id="03177-134">Ten tryb jest podobny do <see langword="CFB" />; jedyną różnicą między dwoma trybami jest wypełnienie rejestru przesunięcia.</span><span class="sxs-lookup"><span data-stu-id="03177-134">This mode is similar to <see langword="CFB" />; the only difference between the two modes is the way that the shift register is filled.</span></span> <span data-ttu-id="03177-135">Jeśli bit w tekście szyfru jest zniekształcona, odpowiadający mu bit zwykłego tekstu będzie zniekształcona.</span><span class="sxs-lookup"><span data-stu-id="03177-135">If a bit in the cipher text is mangled, the corresponding bit of plain text will be mangled.</span></span> <span data-ttu-id="03177-136">Jeśli jednak istnieją dodatkowe lub brakujące bity z tekstu szyfrowania, zwykły tekst zostanie zniekształcona od tego momentu.</span><span class="sxs-lookup"><span data-stu-id="03177-136">However, if there are extra or missing bits from the cipher text, the plain text will be mangled from that point on.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
