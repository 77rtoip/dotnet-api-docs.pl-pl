<Type Name="BitmapEncoder" FullName="System.Windows.Media.Imaging.BitmapEncoder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4cd997ed077df61c3411b4727ea630984117e45d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30711563" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BitmapEncoder : System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BitmapEncoder extends System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Imaging.BitmapEncoder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BitmapEncoder&#xA;Inherits DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class BitmapEncoder abstract : System::Windows::Threading::DispatcherObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Koduje Kolekcja <see cref="T:System.Windows.Media.Imaging.BitmapFrame" /> obiektów do strumienia obrazu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pochodne koder-dekoder może również zapewniają obsługę specjalne kodowania właściwości, które są używane do określania, jak mapy bitowej jest zaszyfrowana. Na przykład kodera-dekodera może obsługuje procedury kompresji specjalne lub przeplot zakodowanego obrazu.  
  
 Można określić wiele ramek dla dowolnego pochodnej kodera, nawet wtedy, gdy format mapy bitowej obsługuje tylko jedną ramkę. W takim przypadku zostanie zapisana tylko pierwsza ramka.  
  
 Kolekcja ramki może być zakodowane pojedynczo do dowolnej liczby strumieni plików.  
  
 Kodowanie nie działa w częściowej relacji zaufania. Zobacz [WPF częściowego zaufania zabezpieczeń](~/docs/framework/wpf/wpf-partial-trust-security.md) informacji w częściowej relacji zaufania.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia pochodnej <xref:System.Windows.Media.Imaging.TiffBitmapEncoder> klasy do kodowania obrazu.  
  
 [!code-csharp[bitmapframeexample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BitmapFrameExample/CSharp/BitmapFrame.cs#3)]
 [!code-vb[bitmapframeexample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BitmapFrameExample/VB/BitmapFrame.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Imaging.BitmapSource" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BitmapEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Imaging.BitmapEncoder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BitmapEncoder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Media.Imaging.BitmapEncoder" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CodecInfo">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Media.Imaging.BitmapCodecInfo CodecInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Imaging.BitmapCodecInfo CodecInfo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Imaging.BitmapEncoder.CodecInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CodecInfo As BitmapCodecInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Media::Imaging::BitmapCodecInfo ^ CodecInfo { System::Windows::Media::Imaging::BitmapCodecInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Imaging.BitmapCodecInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera informacje opisujące ten koder-dekoder.</summary>
        <value>Wystąpienie <see cref="T:System.Windows.Media.Imaging.BitmapCodecInfo" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.Media.Imaging.BitmapCodecInfo> implementacja jest wymagana dla każdego koder-dekoder.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak można odczytać informacji z <xref:System.Windows.Media.Imaging.BitmapCodecInfo> obiekt, a następnie wysłać je do ciągu.  
  
 [!code-csharp[bitmapframeexample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BitmapFrameExample/CSharp/BitmapFrame.cs#3)]
 [!code-vb[bitmapframeexample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BitmapFrameExample/VB/BitmapFrame.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Imaging.BitmapCodecInfo" />
      </Docs>
    </Member>
    <Member MemberName="ColorContexts">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Media.ColorContext&gt; ColorContexts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Media.ColorContext&gt; ColorContexts" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Imaging.BitmapEncoder.ColorContexts" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ColorContexts As ReadOnlyCollection(Of ColorContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Media::ColorContext ^&gt; ^ ColorContexts { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Media::ColorContext ^&gt; ^ get(); void set(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Media::ColorContext ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Media.ColorContext&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość, która reprezentuje profil, który jest skojarzony z tym kodera.</summary>
        <value>Kolekcja <see cref="T:System.Windows.Media.ColorContext" /> obiektów, które reprezentuje profile kolorów, które używa tego kodera.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Koder nie obsługuje profile kolorów.</exception>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Windows.Media.ColorContext" /> Jest wartość, która została przekazana do kodera <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Imaging.BitmapEncoder Create (Guid containerFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.Imaging.BitmapEncoder Create(valuetype System.Guid containerFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Imaging.BitmapEncoder.Create(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (containerFormat As Guid) As BitmapEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Imaging::BitmapEncoder ^ Create(Guid containerFormat);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Imaging.BitmapEncoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containerFormat" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="containerFormat">Określa format kodowania żądaną mapy bitowej.</param>
        <summary>Tworzy <see cref="T:System.Windows.Media.Imaging.BitmapEncoder" /> z <see cref="T:System.Guid" /> który identyfikuje żądaną mapa bitowa.</summary>
        <returns>A <see cref="T:System.Windows.Media.Imaging.BitmapEncoder" /> który można zakodować w określonym <paramref name="containerFormat" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest dostępna dla rozszerzalności tylko do celów. Koder-dekoder autorów należy wygenerować własnych <xref:System.Guid> do identyfikowania ich nowo utworzony kodera. Użyj pochodnej <xref:System.Windows.Media.Imaging.BitmapEncoder> klas, takich jak <xref:System.Windows.Media.Imaging.BmpBitmapEncoder> klasy, aby utworzyć kodera dla wbudowanego koder-dekoder.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="containerFormat" /> Jest <see langword="Empty" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Frames">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Windows.Media.Imaging.BitmapFrame&gt; Frames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Windows.Media.Imaging.BitmapFrame&gt; Frames" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Imaging.BitmapEncoder.Frames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Frames As IList(Of BitmapFrame)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::Windows::Media::Imaging::BitmapFrame ^&gt; ^ Frames { System::Collections::Generic::IList&lt;System::Windows::Media::Imaging::BitmapFrame ^&gt; ^ get(); void set(System::Collections::Generic::IList&lt;System::Windows::Media::Imaging::BitmapFrame ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Windows.Media.Imaging.BitmapFrame&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia poszczególnych klatek na obrazie.</summary>
        <value>Kolekcja <see cref="T:System.Windows.Media.Imaging.BitmapFrame" /> obiektów w obrazie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tylko [!INCLUDE[TLA#tla_tiff](~/includes/tlasharptla-tiff-md.md)], [!INCLUDE[TLA#tla_gif](~/includes/tlasharptla-gif-md.md)], i [!INCLUDE[TLA#tla_wdp](~/includes/tlasharptla-wdp-md.md)] obrazów obsługuje więcej niż jedną ramkę. Tylko pierwsza ramka jest zakodowany spowoduje próbuje dodać dodatkowe ramki do formatów, które nie są obsługiwane.  
  
<a name="xamlTextUsage_Frames"></a>   
## <a name="xaml-text-usage"></a>Użycie tekstu w języku XAML  
 Nie można użyć tej właściwości w [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób dodawania ramki do kodera.  
  
 [!code-csharp[bitmapframeexample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BitmapFrameExample/CSharp/BitmapFrame.cs#3)]
 [!code-vb[bitmapframeexample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BitmapFrameExample/VB/BitmapFrame.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Windows.Media.Imaging.BitmapFrame" /> Jest wartość, która została przekazana do kodera <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Media.Imaging.BitmapFrame" />
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Media.Imaging.BitmapMetadata Metadata { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Imaging.BitmapMetadata Metadata" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Imaging.BitmapEncoder.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Metadata As BitmapMetadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Media::Imaging::BitmapMetadata ^ Metadata { System::Windows::Media::Imaging::BitmapMetadata ^ get(); void set(System::Windows::Media::Imaging::BitmapMetadata ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Imaging.BitmapMetadata</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia metadane, która zostanie skojarzona z tym mapy bitowej podczas kodowania.</summary>
        <value>Wystąpienie <see cref="T:System.Windows.Media.Imaging.BitmapMetadata" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bitmapy obsługują i przechowywania metadanych inaczej. Aby uzyskać więcej informacji na temat typów metadanych, które są obsługiwane w przypadku każdego mapy bitowej, zobacz <xref:System.Windows.Media.Imaging.BitmapMetadata> klasy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Koder nie obsługuje globalnych metadanych.</exception>
        <exception cref="T:System.ArgumentNullException">Podejmowana jest próba zapisu metadanych niezgodny format.</exception>
        <altmember cref="T:System.Windows.Media.Imaging.BitmapMetadata" />
      </Docs>
    </Member>
    <Member MemberName="Palette">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Media.Imaging.BitmapPalette Palette { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Imaging.BitmapPalette Palette" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Imaging.BitmapEncoder.Palette" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Palette As BitmapPalette" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Media::Imaging::BitmapPalette ^ Palette { System::Windows::Media::Imaging::BitmapPalette ^ get(); void set(System::Windows::Media::Imaging::BitmapPalette ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Imaging.BitmapPalette</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość, która reprezentuje <see cref="T:System.Windows.Media.Imaging.BitmapPalette" /> zakodowanego bitmapy.</summary>
        <value>Wystąpienie <see cref="T:System.Windows.Media.Imaging.BitmapPalette" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tylko [!INCLUDE[TLA#tla_tiff](~/includes/tlasharptla-tiff-md.md)] i [!INCLUDE[TLA#tla_gif](~/includes/tlasharptla-gif-md.md)] obrazów (i niektóre starsze, niestandardowym [!INCLUDE[TLA#tla_bmp](~/includes/tlasharptla-bmp-md.md)] obrazy) obsługuje palety.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób stosowania palety niestandardowej do [!INCLUDE[TLA#tla_tiff](~/includes/tlasharptla-tiff-md.md)] obrazu, a następnie kodować je.  
  
 [!code-csharp[bitmapframeexample#1](~/samples/snippets/csharp/VS_Snippets_Wpf/BitmapFrameExample/CSharp/BitmapFrame.cs#1)]
 [!code-vb[bitmapframeexample#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BitmapFrameExample/VB/BitmapFrame.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Windows.Media.Imaging.BitmapPalette" /> Jest wartość, która została przekazana do kodera <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Media.Imaging.BitmapPalette" />
        <altmember cref="T:System.Windows.Media.Imaging.BitmapPalettes" />
      </Docs>
    </Member>
    <Member MemberName="Preview">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Media.Imaging.BitmapSource Preview { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Imaging.BitmapSource Preview" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Imaging.BitmapEncoder.Preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Preview As BitmapSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Media::Imaging::BitmapSource ^ Preview { System::Windows::Media::Imaging::BitmapSource ^ get(); void set(System::Windows::Media::Imaging::BitmapSource ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Imaging.BitmapSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> reprezentujący globalne Podgląd mapę bitową, jeśli istnieje.</summary>
        <value>A <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> reprezentujący Podgląd mapy bitowej.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Mapa bitowa nie obsługuje wersji zapoznawczej.</exception>
        <exception cref="T:System.ArgumentNullException">Wartość jest równa <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Media.Imaging.BitmapSource" />
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public virtual void Save (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Imaging.BitmapEncoder.Save(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Save(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Identyfikuje tej mapy bitowej jest kodowany do strumienia pliku.</param>
        <summary>Koduje obraz mapy bitowej do określonej <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W kontekście tego [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)], "Zapisz" i "kodowania" oznaczają to samo.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób zapisywania obrazu mapy bitowej do strumienia pliku przy użyciu pochodnej <xref:System.Windows.Media.Imaging.TiffBitmapEncoder> klasy.  
  
 [!code-csharp[bitmapframeexample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BitmapFrameExample/CSharp/BitmapFrame.cs#3)]
 [!code-vb[bitmapframeexample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BitmapFrameExample/VB/BitmapFrame.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Już został zakodowany mapy bitowej.</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Windows.Media.Imaging.BitmapEncoder.Frames" /> Liczba jest mniejsza niż zero.</exception>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="Thumbnail">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Media.Imaging.BitmapSource Thumbnail { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Imaging.BitmapSource Thumbnail" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Imaging.BitmapEncoder.Thumbnail" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Thumbnail As BitmapSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Media::Imaging::BitmapSource ^ Thumbnail { System::Windows::Media::Imaging::BitmapSource ^ get(); void set(System::Windows::Media::Imaging::BitmapSource ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Imaging.BitmapSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> reprezentujący globalnych miniatur osadzonych.</summary>
        <value>A <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> reprezentujący miniatury mapy bitowej.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Mapa bitowa nie obsługuje miniatur.</exception>
        <exception cref="T:System.ArgumentNullException">Wartość jest równa <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Media.Imaging.BitmapSource" />
      </Docs>
    </Member>
  </Members>
</Type>