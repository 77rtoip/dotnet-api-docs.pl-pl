<Type Name="DbLimitExpression" FullName="System.Data.Common.CommandTrees.DbLimitExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ce1043c8355c26e3fb2a0a7e536271197db90ab2" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36693305" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DbLimitExpression : System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DbLimitExpression extends System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.DbLimitExpression" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DbLimitExpression&#xA;Inherits DbExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbLimitExpression sealed : System::Data::Common::CommandTrees::DbExpression" />
  <TypeSignature Language="F#" Value="type DbLimitExpression = class&#xA;    inherit DbExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.CommandTrees.DbExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje ograniczenie liczby elementów w kolekcji argumentów wartość określonego limitu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Data.Common.CommandTrees.DbLimitExpression> może odnosić się do dowolnego <xref:System.Data.Common.CommandTrees.DbExpression> z typem wyniku kolekcji, w tym <xref:System.Data.Common.CommandTrees.DbSkipExpression>. <xref:System.Data.Common.CommandTrees.DbLimitExpression> udostępnia odpowiednik Top operacji. Operacja porządkowania mogły zostać wykonane na jej danych wejściowych nie jest wymagane. Dwie `Expression` właściwości <xref:System.Data.Common.CommandTrees.DbLimitExpression.Argument%2A> i <xref:System.Data.Common.CommandTrees.DbLimitExpression.Limit%2A>, które określają, kolekcji i liczby wierszy do zwrócenia odpowiednio. <xref:System.Data.Common.CommandTrees.DbLimitExpression> ma również `Boolean` <xref:System.Data.Common.CommandTrees.DbLimitExpression.WithTies%2A> właściwość, która określa, czy wierszy równa rangą do wiersza końcowego są zwracane. <xref:System.Data.Common.CommandTrees.DbLimitExpression.WithTies%2A> Domyślnie `false`.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override void Accept (System.Data.Common.CommandTrees.DbExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Accept(class System.Data.Common.CommandTrees.DbExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbLimitExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Accept (visitor As DbExpressionVisitor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Accept(System::Data::Common::CommandTrees::DbExpressionVisitor ^ visitor);" />
      <MemberSignature Language="F#" Value="override this.Accept : System.Data.Common.CommandTrees.DbExpressionVisitor -&gt; unit" Usage="dbLimitExpression.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Data.Common.CommandTrees.DbExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">Wystąpienie <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</param>
        <summary>Implementuje wzorzec odwiedzający dla wyrażeń, które nie tworzy wartości wyniku.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="visitor" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;TResultType&gt;">
      <MemberSignature Language="C#" Value="public override TResultType Accept&lt;TResultType&gt; (System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt; visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!TResultType Accept&lt;TResultType&gt;(class System.Data.Common.CommandTrees.DbExpressionVisitor`1&lt;!!TResultType&gt; visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbLimitExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Accept(Of TResultType) (visitor As DbExpressionVisitor(Of TResultType)) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResultType&gt;&#xA; override TResultType Accept(System::Data::Common::CommandTrees::DbExpressionVisitor&lt;TResultType&gt; ^ visitor);" />
      <MemberSignature Language="F#" Value="override this.Accept : System.Data.Common.CommandTrees.DbExpressionVisitor&lt;'ResultType&gt; -&gt; 'ResultType" Usage="dbLimitExpression.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResultType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResultType">Typ wyniku zwracany przez <c>odwiedzający</c>.</typeparam>
        <param name="visitor">Wystąpienie typu <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> daje wartość wyniku określonego typu.</param>
        <summary>Implementuje wzorzec odwiedzający wyrażeń, które powodują powstanie wartość wyniku określonego typu.</summary>
        <returns>Wartość wyniku o typie określonym utworzonego przez <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="visitor" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Argument">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbExpression Argument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbExpression Argument" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbLimitExpression.Argument" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Argument As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::CommandTrees::DbExpression ^ Argument { System::Data::Common::CommandTrees::DbExpression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Argument : System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.DbLimitExpression.Argument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wyrażenie, które określa zbiór wejściowy.</summary>
        <value>Wyrażenie, które określa zbiór wejściowy.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Wyrażenie jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Wyrażenie nie jest skojarzony z drzewa polecenia <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" />, lub jego typ wyniku nie jest typem kolekcji.</exception>
      </Docs>
    </Member>
    <Member MemberName="Limit">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbExpression Limit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbExpression Limit" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbLimitExpression.Limit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Limit As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::CommandTrees::DbExpression ^ Limit { System::Data::Common::CommandTrees::DbExpression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Limit : System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.DbLimitExpression.Limit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wyrażenie, które określa limit na liczbę zwracanych z wejściowych kolekcji elementów.</summary>
        <value>Wyrażenie, które określa limit na liczbę zwracanych z wejściowych kolekcji elementów.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Wyrażenie jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Wyrażenie nie jest skojarzony z drzewa polecenia <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" />, lub nie jest jednym z <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> lub <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" />, lub jego typ wyniku nie jest równa lub Awansowanie do typu 64-bitową liczbę całkowitą.</exception>
      </Docs>
    </Member>
    <Member MemberName="WithTies">
      <MemberSignature Language="C#" Value="public bool WithTies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WithTies" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbLimitExpression.WithTies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WithTies As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WithTies { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.WithTies : bool" Usage="System.Data.Common.CommandTrees.DbLimitExpression.WithTies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera informacje, czy operacja limit będzie zawierać wiązanej wyników. Dołączanie wyników wiązanej może powodować generowanie wyników więcej niż określone przez <see cref="P:System.Data.Common.CommandTrees.DbLimitExpression.Limit" /> wartość.</summary>
        <value>
          <see langword="true" /> Jeśli operacja limit będzie zawierać powiązane wyniki. w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Common.CommandTrees.DbLimitExpression.WithTies%2A> Właściwość określa, czy wiersze rangą równa wiersza końcowego są zwracane.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>