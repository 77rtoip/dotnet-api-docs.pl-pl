<Type Name="DefaultExpressionVisitor" FullName="System.Data.Common.CommandTrees.DefaultExpressionVisitor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7f7395799e6f2e927e724fd0f74497b55569957c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30443616" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DefaultExpressionVisitor : System.Data.Common.CommandTrees.DbExpressionVisitor&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DefaultExpressionVisitor extends System.Data.Common.CommandTrees.DbExpressionVisitor`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.DefaultExpressionVisitor" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultExpressionVisitor&#xA;Inherits DbExpressionVisitor(Of DbExpression)" />
  <TypeSignature Language="C++ CLI" Value="public ref class DefaultExpressionVisitor : System::Data::Common::CommandTrees::DbExpressionVisitor&lt;System::Data::Common::CommandTrees::DbExpression ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.CommandTrees.DbExpressionVisitor&lt;System.Data.Common.CommandTrees.DbExpression&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TResultType">System.Data.Common.CommandTrees.DbExpression</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Odwiedza każdy element drzewa wyrażeń z głównym danego wyrażenia. W przypadku zmiany dowolnego elementu, drzewa jest ponownie skompilowany od głównego i zwracany jest nowe wyrażenie głównego; w przeciwnym razie jest zwracana oryginalne wyrażenie głównego.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DefaultExpressionVisitor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DefaultExpressionVisitor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Common.CommandTrees.DefaultExpressionVisitor" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEnterScope">
      <MemberSignature Language="C#" Value="protected virtual void OnEnterScope (System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; scopeVariables);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEnterScope(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; scopeVariables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnEnterScope(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEnterScope (scopeVariables As IEnumerable(Of DbVariableReferenceExpression))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEnterScope(System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbVariableReferenceExpression ^&gt; ^ scopeVariables);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopeVariables" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="scopeVariables">Kolekcja zmiennych zakresu.</param>
        <summary>Reprezentuje zdarzenie, wprowadzając zakres dla obiekt odwiedzający wyrażenie ze zmiennymi określonego zakresu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnExitScope">
      <MemberSignature Language="C#" Value="protected virtual void OnExitScope ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnExitScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnExitScope" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnExitScope ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnExitScope();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zamyka zakres dla obiekt odwiedzający wyrażenie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnExpressionReplaced">
      <MemberSignature Language="C#" Value="protected virtual void OnExpressionReplaced (System.Data.Common.CommandTrees.DbExpression oldExpression, System.Data.Common.CommandTrees.DbExpression newExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnExpressionReplaced(class System.Data.Common.CommandTrees.DbExpression oldExpression, class System.Data.Common.CommandTrees.DbExpression newExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnExpressionReplaced(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnExpressionReplaced (oldExpression As DbExpression, newExpression As DbExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnExpressionReplaced(System::Data::Common::CommandTrees::DbExpression ^ oldExpression, System::Data::Common::CommandTrees::DbExpression ^ newExpression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldExpression" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="newExpression" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="oldExpression">Stare wyrażenie.</param>
        <param name="newExpression">Nowe wyrażenie.</param>
        <summary>Zamienia starego wyrażenia nowego filtru dla obiekt odwiedzający wyrażenie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVariableRebound">
      <MemberSignature Language="C#" Value="protected virtual void OnVariableRebound (System.Data.Common.CommandTrees.DbVariableReferenceExpression fromVarRef, System.Data.Common.CommandTrees.DbVariableReferenceExpression toVarRef);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnVariableRebound(class System.Data.Common.CommandTrees.DbVariableReferenceExpression fromVarRef, class System.Data.Common.CommandTrees.DbVariableReferenceExpression toVarRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnVariableRebound(System.Data.Common.CommandTrees.DbVariableReferenceExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnVariableRebound (fromVarRef As DbVariableReferenceExpression, toVarRef As DbVariableReferenceExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnVariableRebound(System::Data::Common::CommandTrees::DbVariableReferenceExpression ^ fromVarRef, System::Data::Common::CommandTrees::DbVariableReferenceExpression ^ toVarRef);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromVarRef" Type="System.Data.Common.CommandTrees.DbVariableReferenceExpression" />
        <Parameter Name="toVarRef" Type="System.Data.Common.CommandTrees.DbVariableReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="fromVarRef">Lokalizacja zmiennej.</param>
        <param name="toVarRef">Odwołanie do zmiennej, gdzie jest rebounded.</param>
        <summary>Reprezentuje zdarzenie, gdy zmienna jest odbitych dla obiekt odwiedzający wyrażenie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Visit">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Implementuje wzorzec obiekt odwiedzający.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbAndExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbAndExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbAndExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbAndExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbAndExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbAndExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie logiczne i.</param>
        <summary>Implementuje wzorzec obiekt odwiedzający wyrażenie logiczne i.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbApplyExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbApplyExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbApplyExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbApplyExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbApplyExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbApplyExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie Zastosuj.</param>
        <summary>Implementuje wzorzec obiektu odwiedzającego wywołania funkcji określony dla każdego elementu w określonym zestawie wejściowym.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbArithmeticExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbArithmeticExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbArithmeticExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbArithmeticExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbArithmeticExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenia arytmetyczne.</param>
        <summary>Implementuje wzorzec obiekt odwiedzający operacji arytmetycznej stosowane do argumentów.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbCaseExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbCaseExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCaseExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbCaseExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbCaseExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbCaseExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie case.</param>
        <summary>Implementuje wzorzec odwiedzający dla kiedy, następnie i Else klauzul.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbCastExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbCastExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCastExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbCastExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbCastExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbCastExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie cast.</param>
        <summary>Implementuje wzorzec odwiedzający dla konwersji typów z pojedynczym argumentem do określonego typu.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbComparisonExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbComparisonExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbComparisonExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbComparisonExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbComparisonExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie cast.</param>
        <summary>Implementuje wzorzec obiekt odwiedzający operacji porównania stosowane do dwóch argumentów.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbConstantExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbConstantExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbConstantExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbConstantExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbConstantExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbConstantExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie stałe.</param>
        <summary>Implementuje wzorzec odwiedzający dla różnych rodzajów stałe.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbCrossJoinExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbCrossJoinExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbCrossJoinExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbCrossJoinExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbCrossJoinExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie sprzężenia.</param>
        <summary>Implementuje wzorzec obiekt odwiedzający operacji bezwarunkowe sprzężenia między argumentami danej kolekcji.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbDerefExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbDerefExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDerefExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbDerefExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbDerefExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbDerefExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie DEREF.</param>
        <summary>Implementuje wzorzec obiekt odwiedzający wyrażenie, które pobiera jednostki na podstawie określonego odwołania.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbDistinctExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbDistinctExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbDistinctExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbDistinctExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbDistinctExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie distinct.</param>
        <summary>Implementuje wzorzec odwiedzający Usunięto zduplikowane elementy w argumencie określonego zestawu.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbElementExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbElementExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbElementExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbElementExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbElementExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbElementExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie element.</param>
        <summary>Implementuje wzorzec obiekt odwiedzający do konwersji argumentu określonego zestawu z pojedynczym konwersji argumentu określonego zestawu z pojedynczym.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbEntityRefExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbEntityRefExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbEntityRefExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbEntityRefExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbEntityRefExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie odwołania jednostki.</param>
        <summary>Implementuje wzorzec obiekt odwiedzający wyrażenie, które pobiera odwołanie z podstawowej wystąpienia jednostki.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbExceptExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbExceptExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExceptExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbExceptExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbExceptExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbExceptExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie.</param>
        <summary>Implementuje wzorzec odwiedzający dla operacji ustawienia odejmowania lewy i prawy argumentów.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie.</param>
        <summary>Implementuje wzorzec odwiedzający podstawowe funkcje wymagane przez typy wyrażenia.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbFilterExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbFilterExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFilterExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbFilterExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbFilterExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbFilterExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie filtru.</param>
        <summary>Implementuje wzorzec odwiedzający dla predykatu stosowane do filtrowania zestawu wejściowego.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbFunctionExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbFunctionExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbFunctionExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbFunctionExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbFunctionExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie funkcji.</param>
        <summary>Implementuje wzorzec obiektu odwiedzającego wywołania funkcji.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbGroupByExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbGroupByExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbGroupByExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbGroupByExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbGroupByExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie.</param>
        <summary>Implementuje wzorzec odwiedzający grupy przez operację.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbIntersectExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbIntersectExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbIntersectExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbIntersectExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbIntersectExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie.</param>
        <summary>Implementuje wzorzec odwiedzający dla operacji ustawienia przecięcia lewy i prawy argumentów.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbIsEmptyExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbIsEmptyExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbIsEmptyExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbIsEmptyExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbIsEmptyExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie.</param>
        <summary>Implementuje wzorzec odwiedzający ustalania pusty zestaw stosowane do argumentu jednego zestawu.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbIsNullExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbIsNullExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbIsNullExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbIsNullExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbIsNullExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie.</param>
        <summary>Implementuje wzorzec odwiedzający oznaczania null stosowane do jeden argument.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbIsOfExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbIsOfExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbIsOfExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbIsOfExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbIsOfExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie.</param>
        <summary>Implementuje wzorzec odwiedzający porównanie typu jeden argument dla określonego typu.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbJoinExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbJoinExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbJoinExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbJoinExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbJoinExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbJoinExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie.</param>
        <summary>Implementuje obiektu odwiedzającego wzorca wewnętrzne, zewnętrzne po lewej lub operacji pełne sprzężenie zewnętrzne między argumentami danej kolekcji na warunek sprzężenia określony.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbLambdaExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbLambdaExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbLambdaExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbLambdaExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbLambdaExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie.</param>
        <summary>Implementuje wzorzec odwiedzający dla aplikacji funkcja lambda do argumentów reprezentowane przez obiekty DbExpression.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbLikeExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbLikeExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLikeExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbLikeExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbLikeExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbLikeExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie.</param>
        <summary>Implementuje wzorzec odwiedzający porównanie ciągu określonego wzorca z ciągiem opcjonalne ucieczki.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbLimitExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbLimitExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLimitExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbLimitExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbLimitExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbLimitExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie.</param>
        <summary>Implementuje wzorzec odwiedzający przez ograniczenie liczby elementów w kolekcji argumentów wartość określonego limitu.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbNewInstanceExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbNewInstanceExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbNewInstanceExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbNewInstanceExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbNewInstanceExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie.</param>
        <summary>Implementuje wzorzec obiekt odwiedzający do tworzenia nowego wystąpienia danego typu, w tym zestawie i typy rekordów.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbNotExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbNotExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNotExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbNotExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbNotExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbNotExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie.</param>
        <summary>Implementuje wzorzec odwiedzający logicznym nie pochodzi z pojedynczym argumentem Boolean.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbNullExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbNullExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNullExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbNullExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbNullExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbNullExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie.</param>
        <summary>Implementuje wzorzec odwiedzający odwołanie do typu literału null.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbOfTypeExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbOfTypeExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbOfTypeExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbOfTypeExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbOfTypeExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie.</param>
        <summary>Implementuje wzorzec odwiedzający pobierania elementów typu określonego w argumencie danego zestawu.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbOrExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbOrExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOrExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbOrExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbOrExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbOrExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie.</param>
        <summary>Implementuje wzorzec odwiedzający logicznym lub dwóch argumentów logicznych.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbParameterReferenceExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbParameterReferenceExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbParameterReferenceExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbParameterReferenceExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbParameterReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie.</param>
        <summary>Implementuje wzorzec odwiedzający dla odwołania do parametru zadeklarowane w drzewo poleceń, który zawiera to wyrażenie.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbProjectExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbProjectExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbProjectExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbProjectExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbProjectExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbProjectExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie.</param>
        <summary>Implementuje wzorzec odwiedzający projekcji określonych danych wejściowych, ustawić przez określone wyrażenie.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbPropertyExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbPropertyExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbPropertyExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbPropertyExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbPropertyExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie.</param>
        <summary>Implementuje wzorzec odwiedzający pobierania właściwości wystąpienia.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbQuantifierExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbQuantifierExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbQuantifierExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbQuantifierExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbQuantifierExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie.</param>
        <summary>Implementuje wzorzec obiekt odwiedzający operacji kwantyfikatora określonego rodzaju za pośrednictwem elementy określonego zestawu wejściowego.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbRefExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbRefExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbRefExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbRefExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbRefExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie.</param>
        <summary>Implementuje wzorzec odwiedzający jednoznacznie odwołanie do określonego wystąpienia w obrębie jednostki zestawu.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbRefKeyExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbRefKeyExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbRefKeyExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbRefKeyExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbRefKeyExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie.</param>
        <summary>Implementuje wzorzec obiekt odwiedzający do pobierania wartości klucza z podstawowej wartości odwołania.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbRelationshipNavigationExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbRelationshipNavigationExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbRelationshipNavigationExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbRelationshipNavigationExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie.</param>
        <summary>Implementuje wzorzec odwiedzający nawigacji relacji.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbScanExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbScanExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbScanExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbScanExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbScanExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbScanExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie.</param>
        <summary>Implementuje wzorzec odwiedzający skanowania przez zestaw jednostek lub relacji zestaw, określone przez właściwość Target.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbSkipExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbSkipExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSkipExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbSkipExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbSkipExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbSkipExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie.</param>
        <summary>Implementuje wzorzec odwiedzający w wyrażeniu skip.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbSortExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbSortExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSortExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbSortExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbSortExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbSortExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie.</param>
        <summary>Implementuje wzorzec odwiedzający dla klucza sortowania, który może służyć jako część kolejności sortowania.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbTreatExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbTreatExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbTreatExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbTreatExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbTreatExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbTreatExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie.</param>
        <summary>Implementuje wzorzec odwiedzający stosowane do polimorficznym argumentu operacji konwersji typu.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbUnionAllExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbUnionAllExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbUnionAllExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbUnionAllExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbUnionAllExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie.</param>
        <summary>Implementuje wzorzec obiekt odwiedzający operacji Unii zestaw argumentów lewy i prawy.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbVariableReferenceExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbVariableReferenceExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbVariableReferenceExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbVariableReferenceExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbVariableReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie.</param>
        <summary>Implementuje wzorzec odwiedzający odwołanie do zmiennej, która jest obecnie w zakresie.</summary>
        <returns>Implementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitAggregate">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.CommandTrees.DbAggregate VisitAggregate (System.Data.Common.CommandTrees.DbAggregate aggregate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.CommandTrees.DbAggregate VisitAggregate(class System.Data.Common.CommandTrees.DbAggregate aggregate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitAggregate(System.Data.Common.CommandTrees.DbAggregate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitAggregate (aggregate As DbAggregate) As DbAggregate" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::CommandTrees::DbAggregate ^ VisitAggregate(System::Data::Common::CommandTrees::DbAggregate ^ aggregate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbAggregate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aggregate" Type="System.Data.Common.CommandTrees.DbAggregate" />
      </Parameters>
      <Docs>
        <param name="aggregate">Wartości zagregowanej.</param>
        <summary>Implementuje wzorzec obiekt odwiedzający wartości zagregowanej.</summary>
        <returns>Wzorzec zaimplementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitEntitySet">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Metadata.Edm.EntitySetBase VisitEntitySet (System.Data.Metadata.Edm.EntitySetBase entitySet);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Metadata.Edm.EntitySetBase VisitEntitySet(class System.Data.Metadata.Edm.EntitySetBase entitySet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitEntitySet(System.Data.Metadata.Edm.EntitySetBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitEntitySet (entitySet As EntitySetBase) As EntitySetBase" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Metadata::Edm::EntitySetBase ^ VisitEntitySet(System::Data::Metadata::Edm::EntitySetBase ^ entitySet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntitySetBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySetBase" />
      </Parameters>
      <Docs>
        <param name="entitySet">Zestaw jednostek.</param>
        <summary>Implementuje wzorzec obiekt odwiedzający dla obiekt zestawu.</summary>
        <returns>Wzorzec zaimplementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitExpression">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.CommandTrees.DbExpression VisitExpression (System.Data.Common.CommandTrees.DbExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.CommandTrees.DbExpression VisitExpression(class System.Data.Common.CommandTrees.DbExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpression(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitExpression (expression As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::CommandTrees::DbExpression ^ VisitExpression(System::Data::Common::CommandTrees::DbExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="expression">Wyrażenie.</param>
        <summary>Implementuje wzorzec obiekt odwiedzający wyrażenie.</summary>
        <returns>Wzorzec zaimplementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitExpressionBinding">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.CommandTrees.DbExpressionBinding VisitExpressionBinding (System.Data.Common.CommandTrees.DbExpressionBinding binding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.CommandTrees.DbExpressionBinding VisitExpressionBinding(class System.Data.Common.CommandTrees.DbExpressionBinding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionBinding(System.Data.Common.CommandTrees.DbExpressionBinding)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitExpressionBinding (binding As DbExpressionBinding) As DbExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::CommandTrees::DbExpressionBinding ^ VisitExpressionBinding(System::Data::Common::CommandTrees::DbExpressionBinding ^ binding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
      </Parameters>
      <Docs>
        <param name="binding">Wyrażenie powiązania.</param>
        <summary>Implementuje wzorzec obiekt odwiedzający wyrażenie powiązania.</summary>
        <returns>Wzorzec zaimplementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitExpressionBindingList">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt; VisitExpressionBindingList (System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt; list);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Data.Common.CommandTrees.DbExpressionBinding&gt; VisitExpressionBindingList(class System.Collections.Generic.IList`1&lt;class System.Data.Common.CommandTrees.DbExpressionBinding&gt; list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionBindingList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpressionBinding})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitExpressionBindingList (list As IList(Of DbExpressionBinding)) As IList(Of DbExpressionBinding)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Data::Common::CommandTrees::DbExpressionBinding ^&gt; ^ VisitExpressionBindingList(System::Collections::Generic::IList&lt;System::Data::Common::CommandTrees::DbExpressionBinding ^&gt; ^ list);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt;" />
      </Parameters>
      <Docs>
        <param name="list">Lista wyrażeń powiązania.</param>
        <summary>Implementuje wzorzec obiekt odwiedzający wyrażenie listy powiązania.</summary>
        <returns>Wzorzec zaimplementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitExpressionList">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpression&gt; VisitExpressionList (System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpression&gt; list);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; VisitExpressionList(class System.Collections.Generic.IList`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitExpressionList (list As IList(Of DbExpression)) As IList(Of DbExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ VisitExpressionList(System::Collections::Generic::IList&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ list);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpression&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="list">Lista wyrażeń.</param>
        <summary>Implementuje wzorzec obiekt odwiedzający wyrażenie listy.</summary>
        <returns>Wzorzec zaimplementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitFunction">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Metadata.Edm.EdmFunction VisitFunction (System.Data.Metadata.Edm.EdmFunction functionMetadata);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Metadata.Edm.EdmFunction VisitFunction(class System.Data.Metadata.Edm.EdmFunction functionMetadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitFunction(System.Data.Metadata.Edm.EdmFunction)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitFunction (functionMetadata As EdmFunction) As EdmFunction" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Metadata::Edm::EdmFunction ^ VisitFunction(System::Data::Metadata::Edm::EdmFunction ^ functionMetadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EdmFunction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="functionMetadata" Type="System.Data.Metadata.Edm.EdmFunction" />
      </Parameters>
      <Docs>
        <param name="functionMetadata">Metadane funkcji.</param>
        <summary>Implementuje wzorzec odwiedzający dla funkcji.</summary>
        <returns>Wzorzec zaimplementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitFunctionAggregate">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.CommandTrees.DbFunctionAggregate VisitFunctionAggregate (System.Data.Common.CommandTrees.DbFunctionAggregate aggregate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.CommandTrees.DbFunctionAggregate VisitFunctionAggregate(class System.Data.Common.CommandTrees.DbFunctionAggregate aggregate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitFunctionAggregate(System.Data.Common.CommandTrees.DbFunctionAggregate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitFunctionAggregate (aggregate As DbFunctionAggregate) As DbFunctionAggregate" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::CommandTrees::DbFunctionAggregate ^ VisitFunctionAggregate(System::Data::Common::CommandTrees::DbFunctionAggregate ^ aggregate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionAggregate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aggregate" Type="System.Data.Common.CommandTrees.DbFunctionAggregate" />
      </Parameters>
      <Docs>
        <param name="aggregate">Wartości zagregowanej.</param>
        <summary>Implementuje wzorzec odwiedzający dla funkcji agregacji.</summary>
        <returns>Wzorzec zaimplementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitGroupAggregate">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.CommandTrees.DbGroupAggregate VisitGroupAggregate (System.Data.Common.CommandTrees.DbGroupAggregate aggregate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.CommandTrees.DbGroupAggregate VisitGroupAggregate(class System.Data.Common.CommandTrees.DbGroupAggregate aggregate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitGroupAggregate(System.Data.Common.CommandTrees.DbGroupAggregate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitGroupAggregate (aggregate As DbGroupAggregate) As DbGroupAggregate" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::CommandTrees::DbGroupAggregate ^ VisitGroupAggregate(System::Data::Common::CommandTrees::DbGroupAggregate ^ aggregate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbGroupAggregate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aggregate" Type="System.Data.Common.CommandTrees.DbGroupAggregate" />
      </Parameters>
      <Docs>
        <param name="aggregate">Wartości zagregowanej.</param>
        <summary>Implementuje wzorzec obiekt odwiedzający wartości zagregowanej grupy.</summary>
        <returns>Wzorzec zaimplementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitGroupExpressionBinding">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.CommandTrees.DbGroupExpressionBinding VisitGroupExpressionBinding (System.Data.Common.CommandTrees.DbGroupExpressionBinding binding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.CommandTrees.DbGroupExpressionBinding VisitGroupExpressionBinding(class System.Data.Common.CommandTrees.DbGroupExpressionBinding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitGroupExpressionBinding(System.Data.Common.CommandTrees.DbGroupExpressionBinding)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitGroupExpressionBinding (binding As DbGroupExpressionBinding) As DbGroupExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::CommandTrees::DbGroupExpressionBinding ^ VisitGroupExpressionBinding(System::Data::Common::CommandTrees::DbGroupExpressionBinding ^ binding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbGroupExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.Data.Common.CommandTrees.DbGroupExpressionBinding" />
      </Parameters>
      <Docs>
        <param name="binding">Wiązanie.</param>
        <summary>Implementuje wzorzec odwiedzający dla powiązania wyrażenie grupy.</summary>
        <returns>Wzorzec zaimplementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitLambda">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.CommandTrees.DbLambda VisitLambda (System.Data.Common.CommandTrees.DbLambda lambda);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.CommandTrees.DbLambda VisitLambda(class System.Data.Common.CommandTrees.DbLambda lambda) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitLambda(System.Data.Common.CommandTrees.DbLambda)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitLambda (lambda As DbLambda) As DbLambda" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::CommandTrees::DbLambda ^ VisitLambda(System::Data::Common::CommandTrees::DbLambda ^ lambda);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lambda" Type="System.Data.Common.CommandTrees.DbLambda" />
      </Parameters>
      <Docs>
        <param name="lambda">Funkcja lambda.</param>
        <summary>Implementuje wzorzec odwiedzający funkcji Lambda.</summary>
        <returns>Wzorzec zaimplementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSortClause">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.CommandTrees.DbSortClause VisitSortClause (System.Data.Common.CommandTrees.DbSortClause clause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.CommandTrees.DbSortClause VisitSortClause(class System.Data.Common.CommandTrees.DbSortClause clause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitSortClause(System.Data.Common.CommandTrees.DbSortClause)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitSortClause (clause As DbSortClause) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::CommandTrees::DbSortClause ^ VisitSortClause(System::Data::Common::CommandTrees::DbSortClause ^ clause);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clause" Type="System.Data.Common.CommandTrees.DbSortClause" />
      </Parameters>
      <Docs>
        <param name="clause">W klauzuli sortowania.</param>
        <summary>Implementuje wzorzec odwiedzający dla klauzuli sortowania.</summary>
        <returns>Wzorzec zaimplementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSortOrder">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbSortClause&gt; VisitSortOrder (System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Data.Common.CommandTrees.DbSortClause&gt; VisitSortOrder(class System.Collections.Generic.IList`1&lt;class System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitSortOrder(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitSortOrder (sortOrder As IList(Of DbSortClause)) As IList(Of DbSortClause)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Data::Common::CommandTrees::DbSortClause ^&gt; ^ VisitSortOrder(System::Collections::Generic::IList&lt;System::Data::Common::CommandTrees::DbSortClause ^&gt; ^ sortOrder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbSortClause&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortOrder" Type="System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbSortClause&gt;" />
      </Parameters>
      <Docs>
        <param name="sortOrder">Porządek sortowania.</param>
        <summary>Implementuje wzorzec odwiedzający kolejności sortowania.</summary>
        <returns>Wzorzec zaimplementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitType">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Metadata.Edm.EdmType VisitType (System.Data.Metadata.Edm.EdmType type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Metadata.Edm.EdmType VisitType(class System.Data.Metadata.Edm.EdmType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitType(System.Data.Metadata.Edm.EdmType)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitType (type As EdmType) As EdmType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Metadata::Edm::EdmType ^ VisitType(System::Data::Metadata::Edm::EdmType ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EdmType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.EdmType" />
      </Parameters>
      <Docs>
        <param name="type">Typ.</param>
        <summary>Implementuje wzorzec obiekt odwiedzający typu.</summary>
        <returns>Wzorzec zaimplementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitTypeUsage">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Metadata.Edm.TypeUsage VisitTypeUsage (System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Metadata.Edm.TypeUsage VisitTypeUsage(class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitTypeUsage(System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitTypeUsage (type As TypeUsage) As TypeUsage" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Metadata::Edm::TypeUsage ^ VisitTypeUsage(System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="type">Typ.</param>
        <summary>Implementuje wzorzec odwiedzający użycie typu.</summary>
        <returns>Wzorzec zaimplementowany obiekt odwiedzający.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>