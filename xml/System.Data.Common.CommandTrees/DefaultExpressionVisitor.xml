<Type Name="DefaultExpressionVisitor" FullName="System.Data.Common.CommandTrees.DefaultExpressionVisitor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e851dc03b733829775f4e40aac991f5a341d4c23" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36692533" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DefaultExpressionVisitor : System.Data.Common.CommandTrees.DbExpressionVisitor&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DefaultExpressionVisitor extends System.Data.Common.CommandTrees.DbExpressionVisitor`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.DefaultExpressionVisitor" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultExpressionVisitor&#xA;Inherits DbExpressionVisitor(Of DbExpression)" />
  <TypeSignature Language="C++ CLI" Value="public ref class DefaultExpressionVisitor : System::Data::Common::CommandTrees::DbExpressionVisitor&lt;System::Data::Common::CommandTrees::DbExpression ^&gt;" />
  <TypeSignature Language="F#" Value="type DefaultExpressionVisitor = class&#xA;    inherit DbExpressionVisitor&lt;DbExpression&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.CommandTrees.DbExpressionVisitor&lt;System.Data.Common.CommandTrees.DbExpression&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TResultType">System.Data.Common.CommandTrees.DbExpression</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="63e4c-101">Odwiedza każdy element drzewa wyrażeń z głównym danego wyrażenia.</span>
      <span class="sxs-lookup">
        <span data-stu-id="63e4c-101">Visits each element of an expression tree from a given root expression.</span>
      </span>
      <span data-ttu-id="63e4c-102">W przypadku zmiany dowolnego elementu, drzewa jest ponownie skompilowany od głównego i zwracany jest nowe wyrażenie głównego; w przeciwnym razie jest zwracana oryginalne wyrażenie głównego.</span>
      <span class="sxs-lookup">
        <span data-stu-id="63e4c-102">If any element changes, the tree is rebuilt back to the root and the new root expression is returned; otherwise the original root expression is returned.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DefaultExpressionVisitor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DefaultExpressionVisitor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="63e4c-103">Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Common.CommandTrees.DefaultExpressionVisitor" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-103">Initializes a new instance of the <see cref="T:System.Data.Common.CommandTrees.DefaultExpressionVisitor" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEnterScope">
      <MemberSignature Language="C#" Value="protected virtual void OnEnterScope (System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; scopeVariables);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEnterScope(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; scopeVariables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnEnterScope(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEnterScope (scopeVariables As IEnumerable(Of DbVariableReferenceExpression))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEnterScope(System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbVariableReferenceExpression ^&gt; ^ scopeVariables);" />
      <MemberSignature Language="F#" Value="abstract member OnEnterScope : seq&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; -&gt; unit&#xA;override this.OnEnterScope : seq&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; -&gt; unit" Usage="defaultExpressionVisitor.OnEnterScope scopeVariables" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopeVariables" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="scopeVariables">
          <span data-ttu-id="63e4c-104">Kolekcja zmiennych zakresu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-104">The collection of scope variables.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-105">Reprezentuje zdarzenie, wprowadzając zakres dla obiekt odwiedzający wyrażenie ze zmiennymi określonego zakresu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-105">Represents an event when entering the scope for the expression visitor with specified scope variables.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnExitScope">
      <MemberSignature Language="C#" Value="protected virtual void OnExitScope ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnExitScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnExitScope" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnExitScope ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnExitScope();" />
      <MemberSignature Language="F#" Value="abstract member OnExitScope : unit -&gt; unit&#xA;override this.OnExitScope : unit -&gt; unit" Usage="defaultExpressionVisitor.OnExitScope " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="63e4c-106">Zamyka zakres dla obiekt odwiedzający wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-106">Exits the scope for the expression visitor.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnExpressionReplaced">
      <MemberSignature Language="C#" Value="protected virtual void OnExpressionReplaced (System.Data.Common.CommandTrees.DbExpression oldExpression, System.Data.Common.CommandTrees.DbExpression newExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnExpressionReplaced(class System.Data.Common.CommandTrees.DbExpression oldExpression, class System.Data.Common.CommandTrees.DbExpression newExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnExpressionReplaced(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnExpressionReplaced (oldExpression As DbExpression, newExpression As DbExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnExpressionReplaced(System::Data::Common::CommandTrees::DbExpression ^ oldExpression, System::Data::Common::CommandTrees::DbExpression ^ newExpression);" />
      <MemberSignature Language="F#" Value="abstract member OnExpressionReplaced : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; unit&#xA;override this.OnExpressionReplaced : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; unit" Usage="defaultExpressionVisitor.OnExpressionReplaced (oldExpression, newExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldExpression" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="newExpression" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="oldExpression">
          <span data-ttu-id="63e4c-107">Stare wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-107">The old expression.</span>
          </span>
        </param>
        <param name="newExpression">
          <span data-ttu-id="63e4c-108">Nowe wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-108">The new expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-109">Zamienia starego wyrażenia nowego filtru dla obiekt odwiedzający wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-109">Replaces an old expression with a new one for the expression visitor.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVariableRebound">
      <MemberSignature Language="C#" Value="protected virtual void OnVariableRebound (System.Data.Common.CommandTrees.DbVariableReferenceExpression fromVarRef, System.Data.Common.CommandTrees.DbVariableReferenceExpression toVarRef);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnVariableRebound(class System.Data.Common.CommandTrees.DbVariableReferenceExpression fromVarRef, class System.Data.Common.CommandTrees.DbVariableReferenceExpression toVarRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnVariableRebound(System.Data.Common.CommandTrees.DbVariableReferenceExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnVariableRebound (fromVarRef As DbVariableReferenceExpression, toVarRef As DbVariableReferenceExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnVariableRebound(System::Data::Common::CommandTrees::DbVariableReferenceExpression ^ fromVarRef, System::Data::Common::CommandTrees::DbVariableReferenceExpression ^ toVarRef);" />
      <MemberSignature Language="F#" Value="abstract member OnVariableRebound : System.Data.Common.CommandTrees.DbVariableReferenceExpression * System.Data.Common.CommandTrees.DbVariableReferenceExpression -&gt; unit&#xA;override this.OnVariableRebound : System.Data.Common.CommandTrees.DbVariableReferenceExpression * System.Data.Common.CommandTrees.DbVariableReferenceExpression -&gt; unit" Usage="defaultExpressionVisitor.OnVariableRebound (fromVarRef, toVarRef)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromVarRef" Type="System.Data.Common.CommandTrees.DbVariableReferenceExpression" />
        <Parameter Name="toVarRef" Type="System.Data.Common.CommandTrees.DbVariableReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="fromVarRef">
          <span data-ttu-id="63e4c-110">Lokalizacja zmiennej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-110">The location of the variable.</span>
          </span>
        </param>
        <param name="toVarRef">
          <span data-ttu-id="63e4c-111">Odwołanie do zmiennej, gdzie jest rebounded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-111">The reference of the variable where it is rebounded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-112">Reprezentuje zdarzenie, gdy zmienna jest odbitych dla obiekt odwiedzający wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-112">Represents an event when the variable is rebound for the expression visitor.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Visit">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="63e4c-113">Implementuje wzorzec obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-113">Implements the visitor pattern.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbAndExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbAndExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbAndExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbAndExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbAndExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbAndExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbAndExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-114">Wyrażenie logiczne i.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-114">The logical AND expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-115">Implementuje wzorzec obiekt odwiedzający wyrażenie logiczne i.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-115">Implements the visitor pattern for the logical AND expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-116">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-116">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbApplyExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbApplyExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbApplyExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbApplyExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbApplyExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbApplyExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbApplyExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-117">Wyrażenie Zastosuj.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-117">The APPLY expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-118">Implementuje wzorzec obiektu odwiedzającego wywołania funkcji określony dla każdego elementu w określonym zestawie wejściowym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-118">Implements the visitor pattern for the invocation of the specified function for each element in the specified input set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-119">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-119">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbArithmeticExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbArithmeticExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbArithmeticExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbArithmeticExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbArithmeticExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbArithmeticExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-120">Wyrażenia arytmetyczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-120">The arithmetic expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-121">Implementuje wzorzec obiekt odwiedzający operacji arytmetycznej stosowane do argumentów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-121">Implements the visitor pattern for the arithmetic operation applied to numeric arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-122">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-122">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbCaseExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbCaseExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCaseExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbCaseExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbCaseExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbCaseExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbCaseExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-123">Wyrażenie case.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-123">The case expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-124">Implementuje wzorzec odwiedzający dla kiedy, następnie i Else klauzul.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-124">Implements the visitor pattern for the When, Then, and Else clauses.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-125">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-125">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbCastExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbCastExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCastExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbCastExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbCastExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbCastExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbCastExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-126">Wyrażenie cast.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-126">The cast expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-127">Implementuje wzorzec odwiedzający dla konwersji typów z pojedynczym argumentem do określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-127">Implements the visitor pattern for the type conversion of a single argument to the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-128">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-128">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbComparisonExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbComparisonExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbComparisonExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbComparisonExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbComparisonExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbComparisonExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-129">Wyrażenie cast.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-129">The cast expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-130">Implementuje wzorzec obiekt odwiedzający operacji porównania stosowane do dwóch argumentów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-130">Implements the visitor pattern for the comparison operation applied to two arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-131">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-131">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbConstantExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbConstantExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbConstantExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbConstantExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbConstantExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbConstantExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbConstantExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-132">Wyrażenie stałe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-132">The constant expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-133">Implementuje wzorzec odwiedzający dla różnych rodzajów stałe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-133">Implements the visitor pattern for the different kinds of constants.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-134">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-134">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbCrossJoinExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbCrossJoinExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbCrossJoinExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbCrossJoinExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbCrossJoinExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbCrossJoinExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-135">Wyrażenie sprzężenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-135">The join expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-136">Implementuje wzorzec obiekt odwiedzający operacji bezwarunkowe sprzężenia między argumentami danej kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-136">Implements the visitor pattern for the unconditional join operation between the given collection arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-137">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-137">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbDerefExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbDerefExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDerefExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbDerefExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbDerefExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbDerefExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbDerefExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-138">Wyrażenie DEREF.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-138">The DEREF expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-139">Implementuje wzorzec obiekt odwiedzający wyrażenie, które pobiera jednostki na podstawie określonego odwołania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-139">Implements the visitor pattern for the expression that retrieves an entity based on the specified reference.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-140">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-140">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbDistinctExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbDistinctExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbDistinctExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbDistinctExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbDistinctExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbDistinctExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-141">Wyrażenie distinct.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-141">The distinct expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-142">Implementuje wzorzec odwiedzający Usunięto zduplikowane elementy w argumencie określonego zestawu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-142">Implements the visitor pattern for the removed duplicate elements from the specified set argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-143">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-143">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbElementExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbElementExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbElementExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbElementExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbElementExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbElementExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbElementExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-144">Wyrażenie element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-144">The element expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-145">Implementuje wzorzec obiekt odwiedzający do konwersji argumentu określonego zestawu z pojedynczym konwersji argumentu określonego zestawu z pojedynczym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-145">Implements the visitor pattern for the conversion of the specified set argument to a singleton the conversion of the specified set argument to a singleton.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-146">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-146">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbEntityRefExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbEntityRefExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbEntityRefExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbEntityRefExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbEntityRefExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbEntityRefExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-147">Wyrażenie odwołania jednostki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-147">The entity reference expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-148">Implementuje wzorzec obiekt odwiedzający wyrażenie, które pobiera odwołanie z podstawowej wystąpienia jednostki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-148">Implements the visitor pattern for the expression that extracts a reference from the underlying entity instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-149">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-149">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbExceptExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbExceptExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExceptExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbExceptExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbExceptExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbExceptExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbExceptExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-150">Wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-150">The expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-151">Implementuje wzorzec odwiedzający dla operacji ustawienia odejmowania lewy i prawy argumentów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-151">Implements the visitor pattern for the set subtraction operation between the left and right operands.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-152">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-152">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-153">Wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-153">The expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-154">Implementuje wzorzec odwiedzający podstawowe funkcje wymagane przez typy wyrażenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-154">Implements the visitor pattern for the basic functionality required by expression types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-155">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-155">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbFilterExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbFilterExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFilterExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbFilterExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbFilterExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbFilterExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbFilterExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-156">Wyrażenie filtru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-156">The filter expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-157">Implementuje wzorzec odwiedzający dla predykatu stosowane do filtrowania zestawu wejściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-157">Implements the visitor pattern for a predicate applied to filter an input set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-158">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-158">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbFunctionExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbFunctionExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbFunctionExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbFunctionExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbFunctionExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbFunctionExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-159">Wyrażenie funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-159">The function expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-160">Implementuje wzorzec obiektu odwiedzającego wywołania funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-160">Implements the visitor pattern for an invocation of a function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-161">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-161">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbGroupByExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbGroupByExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbGroupByExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbGroupByExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbGroupByExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbGroupByExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-162">Wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-162">The expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-163">Implementuje wzorzec odwiedzający grupy przez operację.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-163">Implements the visitor pattern for a group by operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-164">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-164">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbIntersectExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbIntersectExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbIntersectExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbIntersectExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbIntersectExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbIntersectExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-165">Wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-165">The expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-166">Implementuje wzorzec odwiedzający dla operacji ustawienia przecięcia lewy i prawy argumentów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-166">Implements the visitor pattern for the set intersection operation between the left and right operands.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-167">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-167">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbIsEmptyExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbIsEmptyExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbIsEmptyExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbIsEmptyExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbIsEmptyExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbIsEmptyExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-168">Wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-168">The expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-169">Implementuje wzorzec odwiedzający ustalania pusty zestaw stosowane do argumentu jednego zestawu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-169">Implements the visitor pattern for an empty set determination applied to a single set argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-170">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-170">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbIsNullExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbIsNullExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbIsNullExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbIsNullExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbIsNullExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbIsNullExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-171">Wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-171">The expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-172">Implementuje wzorzec odwiedzający oznaczania null stosowane do jeden argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-172">Implements the visitor pattern for the null determination applied to a single argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-173">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-173">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbIsOfExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbIsOfExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbIsOfExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbIsOfExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbIsOfExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbIsOfExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-174">Wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-174">The expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-175">Implementuje wzorzec odwiedzający porównanie typu jeden argument dla określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-175">Implements the visitor pattern for the type comparison of a single argument against the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-176">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-176">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbJoinExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbJoinExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbJoinExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbJoinExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbJoinExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbJoinExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbJoinExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-177">Wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-177">The expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-178">Implementuje obiektu odwiedzającego wzorca wewnętrzne, zewnętrzne po lewej lub operacji pełne sprzężenie zewnętrzne między argumentami danej kolekcji na warunek sprzężenia określony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-178">Implements the visitor pattern for an inner, left outer, or full outer join operation between the given collection arguments on the specified join condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-179">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-179">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbLambdaExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbLambdaExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbLambdaExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbLambdaExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbLambdaExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbLambdaExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-180">Wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-180">The expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-181">Implementuje wzorzec odwiedzający dla aplikacji funkcja lambda do argumentów reprezentowane przez obiekty DbExpression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-181">Implements the visitor pattern for the application of a lambda function to arguments represented by DbExpression objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-182">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-182">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbLikeExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbLikeExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLikeExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbLikeExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbLikeExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbLikeExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbLikeExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-183">Wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-183">The expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-184">Implementuje wzorzec odwiedzający porównanie ciągu określonego wzorca z ciągiem opcjonalne ucieczki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-184">Implements the visitor pattern for a string comparison against the specified pattern with an optional escape string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-185">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-185">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbLimitExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbLimitExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLimitExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbLimitExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbLimitExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbLimitExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbLimitExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-186">Wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-186">The expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-187">Implementuje wzorzec odwiedzający przez ograniczenie liczby elementów w kolekcji argumentów wartość określonego limitu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-187">Implements the visitor pattern for the restriction of the number of elements in the argument collection to the specified limit value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-188">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-188">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbNewInstanceExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbNewInstanceExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbNewInstanceExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbNewInstanceExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbNewInstanceExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbNewInstanceExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-189">Wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-189">The expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-190">Implementuje wzorzec obiekt odwiedzający do tworzenia nowego wystąpienia danego typu, w tym zestawie i typy rekordów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-190">Implements the visitor pattern for the construction of a new instance of a given type, including set and record types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-191">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-191">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbNotExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbNotExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNotExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbNotExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbNotExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbNotExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbNotExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-192">Wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-192">The expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-193">Implementuje wzorzec odwiedzający logicznym nie pochodzi z pojedynczym argumentem Boolean.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-193">Implements the visitor pattern for the logical NOT of a single Boolean argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-194">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-194">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbNullExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbNullExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNullExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbNullExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbNullExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbNullExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbNullExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-195">Wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-195">The expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-196">Implementuje wzorzec odwiedzający odwołanie do typu literału null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-196">Implements the visitor pattern for a reference to a typed null literal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-197">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-197">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbOfTypeExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbOfTypeExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbOfTypeExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbOfTypeExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbOfTypeExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbOfTypeExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-198">Wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-198">The expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-199">Implementuje wzorzec odwiedzający pobierania elementów typu określonego w argumencie danego zestawu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-199">Implements the visitor pattern for the retrieval of elements of the specified type from the given set argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-200">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-200">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbOrExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbOrExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOrExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbOrExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbOrExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbOrExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbOrExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-201">Wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-201">The expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-202">Implementuje wzorzec odwiedzający logicznym lub dwóch argumentów logicznych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-202">Implements the visitor pattern for the logical OR of two Boolean arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-203">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-203">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbParameterReferenceExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbParameterReferenceExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbParameterReferenceExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbParameterReferenceExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbParameterReferenceExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbParameterReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-204">Wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-204">The expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-205">Implementuje wzorzec odwiedzający dla odwołania do parametru zadeklarowane w drzewo poleceń, który zawiera to wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-205">Implements the visitor pattern for a reference to a parameter declared on the command tree that contains this expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-206">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-206">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbProjectExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbProjectExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbProjectExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbProjectExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbProjectExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbProjectExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbProjectExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-207">Wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-207">The expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-208">Implementuje wzorzec odwiedzający projekcji określonych danych wejściowych, ustawić przez określone wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-208">Implements the visitor pattern for the projection of a given input set over the specified expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-209">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-209">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbPropertyExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbPropertyExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbPropertyExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbPropertyExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbPropertyExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbPropertyExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-210">Wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-210">The expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-211">Implementuje wzorzec odwiedzający pobierania właściwości wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-211">Implements the visitor pattern for retrieving an instance property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-212">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-212">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbQuantifierExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbQuantifierExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbQuantifierExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbQuantifierExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbQuantifierExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbQuantifierExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-213">Wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-213">The expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-214">Implementuje wzorzec obiekt odwiedzający operacji kwantyfikatora określonego rodzaju za pośrednictwem elementy określonego zestawu wejściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-214">Implements the visitor pattern for a quantifier operation of the specified kind over the elements of the specified input set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-215">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-215">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbRefExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbRefExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbRefExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbRefExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbRefExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbRefExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-216">Wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-216">The expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-217">Implementuje wzorzec odwiedzający jednoznacznie odwołanie do określonego wystąpienia w obrębie jednostki zestawu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-217">Implements the visitor pattern for a strongly typed reference to a specific instance within an entity set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-218">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-218">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbRefKeyExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbRefKeyExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbRefKeyExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbRefKeyExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbRefKeyExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbRefKeyExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-219">Wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-219">The expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-220">Implementuje wzorzec obiekt odwiedzający do pobierania wartości klucza z podstawowej wartości odwołania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-220">Implements the visitor pattern for the retrieval of the key value from the underlying reference value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-221">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-221">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbRelationshipNavigationExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbRelationshipNavigationExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbRelationshipNavigationExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbRelationshipNavigationExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbRelationshipNavigationExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-222">Wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-222">The expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-223">Implementuje wzorzec odwiedzający nawigacji relacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-223">Implements the visitor pattern for the navigation of a relationship.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-224">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-224">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbScanExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbScanExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbScanExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbScanExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbScanExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbScanExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbScanExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-225">Wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-225">The expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-226">Implementuje wzorzec odwiedzający skanowania przez zestaw jednostek lub relacji zestaw, określone przez właściwość Target.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-226">Implements the visitor pattern for a scan over an entity set or relationship set, as indicated by the Target property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-227">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-227">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbSkipExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbSkipExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSkipExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbSkipExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbSkipExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbSkipExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbSkipExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-228">Wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-228">The expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-229">Implementuje wzorzec odwiedzający w wyrażeniu skip.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-229">Implements the visitor pattern for the skip expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-230">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-230">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbSortExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbSortExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSortExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbSortExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbSortExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbSortExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbSortExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-231">Wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-231">The expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-232">Implementuje wzorzec odwiedzający dla klucza sortowania, który może służyć jako część kolejności sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-232">Implements the visitor pattern for a sort key that can be used as part of the sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-233">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-233">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbTreatExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbTreatExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbTreatExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbTreatExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbTreatExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbTreatExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbTreatExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-234">Wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-234">The expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-235">Implementuje wzorzec odwiedzający stosowane do polimorficznym argumentu operacji konwersji typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-235">Implements the visitor pattern for a type conversion operation applied to a polymorphic argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-236">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-236">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbUnionAllExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbUnionAllExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbUnionAllExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbUnionAllExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbUnionAllExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbUnionAllExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-237">Wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-237">The expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-238">Implementuje wzorzec obiekt odwiedzający operacji Unii zestaw argumentów lewy i prawy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-238">Implements the visitor pattern for the set union operation between the left and right operands.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-239">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-239">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbVariableReferenceExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbVariableReferenceExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbVariableReferenceExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbVariableReferenceExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbVariableReferenceExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbVariableReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-240">Wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-240">The expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-241">Implementuje wzorzec odwiedzający odwołanie do zmiennej, która jest obecnie w zakresie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-241">Implements the visitor pattern for a reference to a variable that is currently in scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-242">Implementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-242">The implemented visitor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitAggregate">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.CommandTrees.DbAggregate VisitAggregate (System.Data.Common.CommandTrees.DbAggregate aggregate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.CommandTrees.DbAggregate VisitAggregate(class System.Data.Common.CommandTrees.DbAggregate aggregate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitAggregate(System.Data.Common.CommandTrees.DbAggregate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitAggregate (aggregate As DbAggregate) As DbAggregate" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::CommandTrees::DbAggregate ^ VisitAggregate(System::Data::Common::CommandTrees::DbAggregate ^ aggregate);" />
      <MemberSignature Language="F#" Value="abstract member VisitAggregate : System.Data.Common.CommandTrees.DbAggregate -&gt; System.Data.Common.CommandTrees.DbAggregate&#xA;override this.VisitAggregate : System.Data.Common.CommandTrees.DbAggregate -&gt; System.Data.Common.CommandTrees.DbAggregate" Usage="defaultExpressionVisitor.VisitAggregate aggregate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbAggregate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aggregate" Type="System.Data.Common.CommandTrees.DbAggregate" />
      </Parameters>
      <Docs>
        <param name="aggregate">
          <span data-ttu-id="63e4c-243">Wartości zagregowanej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-243">The aggregate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-244">Implementuje wzorzec obiekt odwiedzający wartości zagregowanej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-244">Implements the visitor pattern for the aggregate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-245">Wzorzec zaimplementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-245">The implemented visitor pattern.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitEntitySet">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Metadata.Edm.EntitySetBase VisitEntitySet (System.Data.Metadata.Edm.EntitySetBase entitySet);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Metadata.Edm.EntitySetBase VisitEntitySet(class System.Data.Metadata.Edm.EntitySetBase entitySet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitEntitySet(System.Data.Metadata.Edm.EntitySetBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitEntitySet (entitySet As EntitySetBase) As EntitySetBase" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Metadata::Edm::EntitySetBase ^ VisitEntitySet(System::Data::Metadata::Edm::EntitySetBase ^ entitySet);" />
      <MemberSignature Language="F#" Value="abstract member VisitEntitySet : System.Data.Metadata.Edm.EntitySetBase -&gt; System.Data.Metadata.Edm.EntitySetBase&#xA;override this.VisitEntitySet : System.Data.Metadata.Edm.EntitySetBase -&gt; System.Data.Metadata.Edm.EntitySetBase" Usage="defaultExpressionVisitor.VisitEntitySet entitySet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntitySetBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySetBase" />
      </Parameters>
      <Docs>
        <param name="entitySet">
          <span data-ttu-id="63e4c-246">Zestaw jednostek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-246">The entity set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-247">Implementuje wzorzec obiekt odwiedzający dla obiekt zestawu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-247">Implements the visitor pattern for the entity set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-248">Wzorzec zaimplementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-248">The implemented visitor pattern.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitExpression">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.CommandTrees.DbExpression VisitExpression (System.Data.Common.CommandTrees.DbExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.CommandTrees.DbExpression VisitExpression(class System.Data.Common.CommandTrees.DbExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpression(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitExpression (expression As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::CommandTrees::DbExpression ^ VisitExpression(System::Data::Common::CommandTrees::DbExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member VisitExpression : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExpression&#xA;override this.VisitExpression : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.VisitExpression expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="63e4c-249">Wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-249">The expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-250">Implementuje wzorzec obiekt odwiedzający wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-250">Implements the visitor pattern for the expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-251">Wzorzec zaimplementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-251">The implemented visitor pattern.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitExpressionBinding">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.CommandTrees.DbExpressionBinding VisitExpressionBinding (System.Data.Common.CommandTrees.DbExpressionBinding binding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.CommandTrees.DbExpressionBinding VisitExpressionBinding(class System.Data.Common.CommandTrees.DbExpressionBinding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionBinding(System.Data.Common.CommandTrees.DbExpressionBinding)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitExpressionBinding (binding As DbExpressionBinding) As DbExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::CommandTrees::DbExpressionBinding ^ VisitExpressionBinding(System::Data::Common::CommandTrees::DbExpressionBinding ^ binding);" />
      <MemberSignature Language="F#" Value="abstract member VisitExpressionBinding : System.Data.Common.CommandTrees.DbExpressionBinding -&gt; System.Data.Common.CommandTrees.DbExpressionBinding&#xA;override this.VisitExpressionBinding : System.Data.Common.CommandTrees.DbExpressionBinding -&gt; System.Data.Common.CommandTrees.DbExpressionBinding" Usage="defaultExpressionVisitor.VisitExpressionBinding binding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
      </Parameters>
      <Docs>
        <param name="binding">
          <span data-ttu-id="63e4c-252">Wyrażenie powiązania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-252">The expression binding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-253">Implementuje wzorzec obiekt odwiedzający wyrażenie powiązania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-253">Implements the visitor pattern for expression binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-254">Wzorzec zaimplementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-254">The implemented visitor pattern.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitExpressionBindingList">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt; VisitExpressionBindingList (System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt; list);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Data.Common.CommandTrees.DbExpressionBinding&gt; VisitExpressionBindingList(class System.Collections.Generic.IList`1&lt;class System.Data.Common.CommandTrees.DbExpressionBinding&gt; list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionBindingList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpressionBinding})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitExpressionBindingList (list As IList(Of DbExpressionBinding)) As IList(Of DbExpressionBinding)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Data::Common::CommandTrees::DbExpressionBinding ^&gt; ^ VisitExpressionBindingList(System::Collections::Generic::IList&lt;System::Data::Common::CommandTrees::DbExpressionBinding ^&gt; ^ list);" />
      <MemberSignature Language="F#" Value="abstract member VisitExpressionBindingList : System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt; -&gt; System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt;&#xA;override this.VisitExpressionBindingList : System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt; -&gt; System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt;" Usage="defaultExpressionVisitor.VisitExpressionBindingList list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt;" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="63e4c-255">Lista wyrażeń powiązania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-255">The expression binding list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-256">Implementuje wzorzec obiekt odwiedzający wyrażenie listy powiązania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-256">Implements the visitor pattern for the expression binding list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-257">Wzorzec zaimplementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-257">The implemented visitor pattern.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitExpressionList">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpression&gt; VisitExpressionList (System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpression&gt; list);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; VisitExpressionList(class System.Collections.Generic.IList`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitExpressionList (list As IList(Of DbExpression)) As IList(Of DbExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ VisitExpressionList(System::Collections::Generic::IList&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ list);" />
      <MemberSignature Language="F#" Value="abstract member VisitExpressionList : System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpression&gt;&#xA;override this.VisitExpressionList : System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpression&gt;" Usage="defaultExpressionVisitor.VisitExpressionList list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpression&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="63e4c-258">Lista wyrażeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-258">The expression list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-259">Implementuje wzorzec obiekt odwiedzający wyrażenie listy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-259">Implements the visitor pattern for the expression list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-260">Wzorzec zaimplementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-260">The implemented visitor pattern.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitFunction">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Metadata.Edm.EdmFunction VisitFunction (System.Data.Metadata.Edm.EdmFunction functionMetadata);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Metadata.Edm.EdmFunction VisitFunction(class System.Data.Metadata.Edm.EdmFunction functionMetadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitFunction(System.Data.Metadata.Edm.EdmFunction)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitFunction (functionMetadata As EdmFunction) As EdmFunction" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Metadata::Edm::EdmFunction ^ VisitFunction(System::Data::Metadata::Edm::EdmFunction ^ functionMetadata);" />
      <MemberSignature Language="F#" Value="abstract member VisitFunction : System.Data.Metadata.Edm.EdmFunction -&gt; System.Data.Metadata.Edm.EdmFunction&#xA;override this.VisitFunction : System.Data.Metadata.Edm.EdmFunction -&gt; System.Data.Metadata.Edm.EdmFunction" Usage="defaultExpressionVisitor.VisitFunction functionMetadata" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EdmFunction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="functionMetadata" Type="System.Data.Metadata.Edm.EdmFunction" />
      </Parameters>
      <Docs>
        <param name="functionMetadata">
          <span data-ttu-id="63e4c-261">Metadane funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-261">The function metadata.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-262">Implementuje wzorzec odwiedzający dla funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-262">Implements the visitor pattern for the function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-263">Wzorzec zaimplementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-263">The implemented visitor pattern.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitFunctionAggregate">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.CommandTrees.DbFunctionAggregate VisitFunctionAggregate (System.Data.Common.CommandTrees.DbFunctionAggregate aggregate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.CommandTrees.DbFunctionAggregate VisitFunctionAggregate(class System.Data.Common.CommandTrees.DbFunctionAggregate aggregate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitFunctionAggregate(System.Data.Common.CommandTrees.DbFunctionAggregate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitFunctionAggregate (aggregate As DbFunctionAggregate) As DbFunctionAggregate" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::CommandTrees::DbFunctionAggregate ^ VisitFunctionAggregate(System::Data::Common::CommandTrees::DbFunctionAggregate ^ aggregate);" />
      <MemberSignature Language="F#" Value="abstract member VisitFunctionAggregate : System.Data.Common.CommandTrees.DbFunctionAggregate -&gt; System.Data.Common.CommandTrees.DbFunctionAggregate&#xA;override this.VisitFunctionAggregate : System.Data.Common.CommandTrees.DbFunctionAggregate -&gt; System.Data.Common.CommandTrees.DbFunctionAggregate" Usage="defaultExpressionVisitor.VisitFunctionAggregate aggregate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionAggregate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aggregate" Type="System.Data.Common.CommandTrees.DbFunctionAggregate" />
      </Parameters>
      <Docs>
        <param name="aggregate">
          <span data-ttu-id="63e4c-264">Wartości zagregowanej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-264">The aggregate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-265">Implementuje wzorzec odwiedzający dla funkcji agregacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-265">Implements the visitor pattern for the function aggregate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-266">Wzorzec zaimplementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-266">The implemented visitor pattern.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitGroupAggregate">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.CommandTrees.DbGroupAggregate VisitGroupAggregate (System.Data.Common.CommandTrees.DbGroupAggregate aggregate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.CommandTrees.DbGroupAggregate VisitGroupAggregate(class System.Data.Common.CommandTrees.DbGroupAggregate aggregate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitGroupAggregate(System.Data.Common.CommandTrees.DbGroupAggregate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitGroupAggregate (aggregate As DbGroupAggregate) As DbGroupAggregate" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::CommandTrees::DbGroupAggregate ^ VisitGroupAggregate(System::Data::Common::CommandTrees::DbGroupAggregate ^ aggregate);" />
      <MemberSignature Language="F#" Value="abstract member VisitGroupAggregate : System.Data.Common.CommandTrees.DbGroupAggregate -&gt; System.Data.Common.CommandTrees.DbGroupAggregate&#xA;override this.VisitGroupAggregate : System.Data.Common.CommandTrees.DbGroupAggregate -&gt; System.Data.Common.CommandTrees.DbGroupAggregate" Usage="defaultExpressionVisitor.VisitGroupAggregate aggregate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbGroupAggregate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aggregate" Type="System.Data.Common.CommandTrees.DbGroupAggregate" />
      </Parameters>
      <Docs>
        <param name="aggregate">
          <span data-ttu-id="63e4c-267">Wartości zagregowanej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-267">The aggregate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-268">Implementuje wzorzec obiekt odwiedzający wartości zagregowanej grupy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-268">Implements the visitor pattern for the group aggregate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-269">Wzorzec zaimplementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-269">The implemented visitor pattern.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitGroupExpressionBinding">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.CommandTrees.DbGroupExpressionBinding VisitGroupExpressionBinding (System.Data.Common.CommandTrees.DbGroupExpressionBinding binding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.CommandTrees.DbGroupExpressionBinding VisitGroupExpressionBinding(class System.Data.Common.CommandTrees.DbGroupExpressionBinding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitGroupExpressionBinding(System.Data.Common.CommandTrees.DbGroupExpressionBinding)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitGroupExpressionBinding (binding As DbGroupExpressionBinding) As DbGroupExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::CommandTrees::DbGroupExpressionBinding ^ VisitGroupExpressionBinding(System::Data::Common::CommandTrees::DbGroupExpressionBinding ^ binding);" />
      <MemberSignature Language="F#" Value="abstract member VisitGroupExpressionBinding : System.Data.Common.CommandTrees.DbGroupExpressionBinding -&gt; System.Data.Common.CommandTrees.DbGroupExpressionBinding&#xA;override this.VisitGroupExpressionBinding : System.Data.Common.CommandTrees.DbGroupExpressionBinding -&gt; System.Data.Common.CommandTrees.DbGroupExpressionBinding" Usage="defaultExpressionVisitor.VisitGroupExpressionBinding binding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbGroupExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.Data.Common.CommandTrees.DbGroupExpressionBinding" />
      </Parameters>
      <Docs>
        <param name="binding">
          <span data-ttu-id="63e4c-270">Wiązanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-270">The binding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-271">Implementuje wzorzec odwiedzający dla powiązania wyrażenie grupy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-271">Implements the visitor pattern for the group expression binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-272">Wzorzec zaimplementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-272">The implemented visitor pattern.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitLambda">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.CommandTrees.DbLambda VisitLambda (System.Data.Common.CommandTrees.DbLambda lambda);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.CommandTrees.DbLambda VisitLambda(class System.Data.Common.CommandTrees.DbLambda lambda) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitLambda(System.Data.Common.CommandTrees.DbLambda)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitLambda (lambda As DbLambda) As DbLambda" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::CommandTrees::DbLambda ^ VisitLambda(System::Data::Common::CommandTrees::DbLambda ^ lambda);" />
      <MemberSignature Language="F#" Value="abstract member VisitLambda : System.Data.Common.CommandTrees.DbLambda -&gt; System.Data.Common.CommandTrees.DbLambda&#xA;override this.VisitLambda : System.Data.Common.CommandTrees.DbLambda -&gt; System.Data.Common.CommandTrees.DbLambda" Usage="defaultExpressionVisitor.VisitLambda lambda" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lambda" Type="System.Data.Common.CommandTrees.DbLambda" />
      </Parameters>
      <Docs>
        <param name="lambda">
          <span data-ttu-id="63e4c-273">Funkcja lambda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-273">The lambda function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-274">Implementuje wzorzec odwiedzający funkcji Lambda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-274">Implements the visitor pattern for the Lambda function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-275">Wzorzec zaimplementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-275">The implemented visitor pattern.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSortClause">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.CommandTrees.DbSortClause VisitSortClause (System.Data.Common.CommandTrees.DbSortClause clause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.CommandTrees.DbSortClause VisitSortClause(class System.Data.Common.CommandTrees.DbSortClause clause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitSortClause(System.Data.Common.CommandTrees.DbSortClause)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitSortClause (clause As DbSortClause) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::CommandTrees::DbSortClause ^ VisitSortClause(System::Data::Common::CommandTrees::DbSortClause ^ clause);" />
      <MemberSignature Language="F#" Value="abstract member VisitSortClause : System.Data.Common.CommandTrees.DbSortClause -&gt; System.Data.Common.CommandTrees.DbSortClause&#xA;override this.VisitSortClause : System.Data.Common.CommandTrees.DbSortClause -&gt; System.Data.Common.CommandTrees.DbSortClause" Usage="defaultExpressionVisitor.VisitSortClause clause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clause" Type="System.Data.Common.CommandTrees.DbSortClause" />
      </Parameters>
      <Docs>
        <param name="clause">
          <span data-ttu-id="63e4c-276">W klauzuli sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-276">The sort clause.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-277">Implementuje wzorzec odwiedzający dla klauzuli sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-277">Implements the visitor pattern for the sort clause.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-278">Wzorzec zaimplementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-278">The implemented visitor pattern.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSortOrder">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbSortClause&gt; VisitSortOrder (System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Data.Common.CommandTrees.DbSortClause&gt; VisitSortOrder(class System.Collections.Generic.IList`1&lt;class System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitSortOrder(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitSortOrder (sortOrder As IList(Of DbSortClause)) As IList(Of DbSortClause)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Data::Common::CommandTrees::DbSortClause ^&gt; ^ VisitSortOrder(System::Collections::Generic::IList&lt;System::Data::Common::CommandTrees::DbSortClause ^&gt; ^ sortOrder);" />
      <MemberSignature Language="F#" Value="abstract member VisitSortOrder : System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbSortClause&gt; -&gt; System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbSortClause&gt;&#xA;override this.VisitSortOrder : System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbSortClause&gt; -&gt; System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbSortClause&gt;" Usage="defaultExpressionVisitor.VisitSortOrder sortOrder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbSortClause&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortOrder" Type="System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbSortClause&gt;" />
      </Parameters>
      <Docs>
        <param name="sortOrder">
          <span data-ttu-id="63e4c-279">Porządek sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-279">The sort order.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-280">Implementuje wzorzec odwiedzający kolejności sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-280">Implements the visitor pattern for the sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-281">Wzorzec zaimplementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-281">The implemented visitor pattern.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitType">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Metadata.Edm.EdmType VisitType (System.Data.Metadata.Edm.EdmType type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Metadata.Edm.EdmType VisitType(class System.Data.Metadata.Edm.EdmType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitType(System.Data.Metadata.Edm.EdmType)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitType (type As EdmType) As EdmType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Metadata::Edm::EdmType ^ VisitType(System::Data::Metadata::Edm::EdmType ^ type);" />
      <MemberSignature Language="F#" Value="abstract member VisitType : System.Data.Metadata.Edm.EdmType -&gt; System.Data.Metadata.Edm.EdmType&#xA;override this.VisitType : System.Data.Metadata.Edm.EdmType -&gt; System.Data.Metadata.Edm.EdmType" Usage="defaultExpressionVisitor.VisitType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EdmType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.EdmType" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="63e4c-282">Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-282">The type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-283">Implementuje wzorzec obiekt odwiedzający typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-283">Implements the visitor pattern for the type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-284">Wzorzec zaimplementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-284">The implemented visitor pattern.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitTypeUsage">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Metadata.Edm.TypeUsage VisitTypeUsage (System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Metadata.Edm.TypeUsage VisitTypeUsage(class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitTypeUsage(System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitTypeUsage (type As TypeUsage) As TypeUsage" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Metadata::Edm::TypeUsage ^ VisitTypeUsage(System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberSignature Language="F#" Value="abstract member VisitTypeUsage : System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Metadata.Edm.TypeUsage&#xA;override this.VisitTypeUsage : System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Metadata.Edm.TypeUsage" Usage="defaultExpressionVisitor.VisitTypeUsage type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="63e4c-285">Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-285">The type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63e4c-286">Implementuje wzorzec odwiedzający użycie typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-286">Implements the visitor pattern for the type usage.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63e4c-287">Wzorzec zaimplementowany obiekt odwiedzający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63e4c-287">The implemented visitor pattern.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>