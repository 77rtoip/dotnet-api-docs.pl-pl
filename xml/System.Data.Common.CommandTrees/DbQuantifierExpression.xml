<Type Name="DbQuantifierExpression" FullName="System.Data.Common.CommandTrees.DbQuantifierExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="da103493e967ad9ff0817257fad4d5b3d63338ac" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37684158" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DbQuantifierExpression : System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DbQuantifierExpression extends System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DbQuantifierExpression&#xA;Inherits DbExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbQuantifierExpression sealed : System::Data::Common::CommandTrees::DbExpression" />
  <TypeSignature Language="F#" Value="type DbQuantifierExpression = class&#xA;    inherit DbExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.CommandTrees.DbExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="52b9b-101">Reprezentuje operację kwantyfikator określonego rodzaju nad elementami określonego zestawu danych wejściowych.</span>
      <span class="sxs-lookup">
        <span data-stu-id="52b9b-101">Represents a quantifier operation of the specified kind over the elements of the specified input set.</span>
      </span>
      <span data-ttu-id="52b9b-102">Klasa ta nie może być dziedziczona.</span>
      <span class="sxs-lookup">
        <span data-stu-id="52b9b-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52b9b-103">Ta klasa reprezentuje `Any` i `All` Kwantyfikatory.</span><span class="sxs-lookup"><span data-stu-id="52b9b-103">This class represents `Any` and `All` quantifiers.</span></span> <span data-ttu-id="52b9b-104">`Any` i `All` są kodowane w <xref:System.Data.Common.CommandTrees.DbExpressionKind>.</span><span class="sxs-lookup"><span data-stu-id="52b9b-104">`Any` and `All` are encoded in the <xref:System.Data.Common.CommandTrees.DbExpressionKind>.</span></span> <span data-ttu-id="52b9b-105">Typ wyniku wyrażenia kwantyfikator jest zawsze `Boolean`.</span><span class="sxs-lookup"><span data-stu-id="52b9b-105">The result type of a quantifier expression is always a `Boolean`.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override void Accept (System.Data.Common.CommandTrees.DbExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Accept(class System.Data.Common.CommandTrees.DbExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbQuantifierExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Accept (visitor As DbExpressionVisitor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Accept(System::Data::Common::CommandTrees::DbExpressionVisitor ^ visitor);" />
      <MemberSignature Language="F#" Value="override this.Accept : System.Data.Common.CommandTrees.DbExpressionVisitor -&gt; unit" Usage="dbQuantifierExpression.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Data.Common.CommandTrees.DbExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">
          <span data-ttu-id="52b9b-106">Wystąpienie <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52b9b-106">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52b9b-107">Implementuje wzorzec odwiedzający wyrażeń, które nie generują wartości wyniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52b9b-107">Implements the visitor pattern for expressions that do not produce a result value.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52b9b-108">
            <paramref name="visitor" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52b9b-108">
              <paramref name="visitor" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;TResultType&gt;">
      <MemberSignature Language="C#" Value="public override TResultType Accept&lt;TResultType&gt; (System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt; visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!TResultType Accept&lt;TResultType&gt;(class System.Data.Common.CommandTrees.DbExpressionVisitor`1&lt;!!TResultType&gt; visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbQuantifierExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Accept(Of TResultType) (visitor As DbExpressionVisitor(Of TResultType)) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResultType&gt;&#xA; override TResultType Accept(System::Data::Common::CommandTrees::DbExpressionVisitor&lt;TResultType&gt; ^ visitor);" />
      <MemberSignature Language="F#" Value="override this.Accept : System.Data.Common.CommandTrees.DbExpressionVisitor&lt;'ResultType&gt; -&gt; 'ResultType" Usage="dbQuantifierExpression.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResultType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResultType">
          <span data-ttu-id="52b9b-109">Typ wyniku zwracany przez <c>obiektu odwiedzającego</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52b9b-109">The type of the result produced by <c>visitor</c>.</span>
          </span>
        </typeparam>
        <param name="visitor">
          <span data-ttu-id="52b9b-110">Wystąpienie wpisane <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> która wytwarza wartości wyniku określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52b9b-110">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52b9b-111">Implementuje wzorzec odwiedzający wyrażeń, które generują wartości wyniku określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52b9b-111">Implements the visitor pattern for expressions that produce a result value of a specific type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52b9b-112">Utworzona przez testowany wartości wyniku o typie określonym <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52b9b-112">A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52b9b-113">
            <paramref name="visitor" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52b9b-113">
              <paramref name="visitor" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbExpressionBinding Input { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbExpressionBinding Input" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbQuantifierExpression.Input" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Input As DbExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::CommandTrees::DbExpressionBinding ^ Input { System::Data::Common::CommandTrees::DbExpressionBinding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Input : System.Data.Common.CommandTrees.DbExpressionBinding" Usage="System.Data.Common.CommandTrees.DbQuantifierExpression.Input" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpressionBinding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52b9b-114">Pobiera <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> , który określa zestaw danych wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52b9b-114">Gets the <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52b9b-115">
            <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> , Który określa zestaw danych wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52b9b-115">The <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Predicate">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbExpression Predicate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbExpression Predicate" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbQuantifierExpression.Predicate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Predicate As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::CommandTrees::DbExpression ^ Predicate { System::Data::Common::CommandTrees::DbExpression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Predicate : System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.DbQuantifierExpression.Predicate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52b9b-116">Pobiera lub ustawia <see langword="Boolean" /> predykat, który ma zostać obliczona dla każdego elementu w zestawie danych wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52b9b-116">Gets or sets the <see langword="Boolean" /> predicate that should be evaluated for each element in the input set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52b9b-117">
            <see langword="Boolean" /> Predykat, który ma zostać obliczona dla każdego elementu w zestawie danych wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52b9b-117">The <see langword="Boolean" /> predicate that should be evaluated for each element in the input set.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52b9b-118">Wyrażenie jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52b9b-118">The expression is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="52b9b-119">Wyrażenie nie jest skojarzony z drzewem polecenia dla <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />, lub jego typ wyniku jest <see langword="Boolean" /> typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="52b9b-119">The expression is not associated with the command tree for the <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />,  or its result type is not a <see langword="Boolean" /> type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>