<Type Name="DbUnaryExpression" FullName="System.Data.Common.CommandTrees.DbUnaryExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2314e92a734033d4c67727d38a47ad235b3c017b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30442542" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DbUnaryExpression : System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbUnaryExpression extends System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.DbUnaryExpression" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbUnaryExpression&#xA;Inherits DbExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbUnaryExpression abstract : System::Data::Common::CommandTrees::DbExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.CommandTrees.DbExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Implementuje podstawowe funkcje wymagane przez wyrażeń, które akceptują argumentów jedno wyrażenie.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa jest klasą podstawową pomocnika wiele kolejnych klas wbudowanych.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Argument">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbExpression Argument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbExpression Argument" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbUnaryExpression.Argument" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Argument As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::CommandTrees::DbExpression ^ Argument { System::Data::Common::CommandTrees::DbExpression ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> definiuje argument.</summary>
        <value>
          <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> Definiuje argument.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typy pochodne wyrażenia mogą wykonywać bardziej rygorystyczne typu sprawdza podczas <xref:System.Data.Common.CommandTrees.DbUnaryExpression.Argument%2A> właściwość jest ustawiona. Na przykład <xref:System.Data.Common.CommandTrees.DbDistinctExpression> wymaga jej wyrażenia argumentu typu wyniku kolekcji. Zazwyczaj nie zezwala na typy pochodne wyrażenia <xref:System.Data.Common.CommandTrees.DbUnaryExpression.Argument%2A> ustawioną wyrażenia z typem wyniku, który nie jest równa lub Awansowanie do typu wyniku bieżącą wartość.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wyrażenie jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Wyrażenie nie jest skojarzony z drzewa polecenia <see cref="T:System.Data.Common.CommandTrees.DbUnaryExpression" />, lub jego typ wyniku nie jest równa lub awansowanie na wymagany typ argumentu.</exception>
      </Docs>
    </Member>
  </Members>
</Type>