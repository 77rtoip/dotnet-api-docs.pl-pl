<Type Name="DbOfTypeExpression" FullName="System.Data.Common.CommandTrees.DbOfTypeExpression">
  <TypeSignature Language="C#" Value="public sealed class DbOfTypeExpression : System.Data.Common.CommandTrees.DbUnaryExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DbOfTypeExpression extends System.Data.Common.CommandTrees.DbUnaryExpression" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.DbOfTypeExpression" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DbOfTypeExpression&#xA;Inherits DbUnaryExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbOfTypeExpression sealed : System::Data::Common::CommandTrees::DbUnaryExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.CommandTrees.DbUnaryExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6268a-101">Reprezentuje pobieranie elementów typu określonego w argumencie danego zestawu.</span><span class="sxs-lookup"><span data-stu-id="6268a-101">Represents the retrieval of elements of the specified type from the given set argument.</span></span> <span data-ttu-id="6268a-102">Klasa ta nie może być dziedziczona.</span><span class="sxs-lookup"><span data-stu-id="6268a-102">This class cannot be inherited.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override void Accept (System.Data.Common.CommandTrees.DbExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Accept(class System.Data.Common.CommandTrees.DbExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbOfTypeExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Accept (visitor As DbExpressionVisitor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Accept(System::Data::Common::CommandTrees::DbExpressionVisitor ^ visitor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Data.Common.CommandTrees.DbExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor"><span data-ttu-id="6268a-103">Wystąpienie <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</span><span class="sxs-lookup"><span data-stu-id="6268a-103">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</span></span></param>
        <summary><span data-ttu-id="6268a-104">Implementuje wzorzec odwiedzający dla wyrażeń, które nie tworzy wartości wyniku.</span><span class="sxs-lookup"><span data-stu-id="6268a-104">Implements the visitor pattern for expressions that do not produce a result value.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6268a-105"><paramref name="visitor" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6268a-105"><paramref name="visitor" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;TResultType&gt;">
      <MemberSignature Language="C#" Value="public override TResultType Accept&lt;TResultType&gt; (System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt; visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!TResultType Accept&lt;TResultType&gt;(class System.Data.Common.CommandTrees.DbExpressionVisitor`1&lt;!!TResultType&gt; visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbOfTypeExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Accept(Of TResultType) (visitor As DbExpressionVisitor(Of TResultType)) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResultType&gt;&#xA; override TResultType Accept(System::Data::Common::CommandTrees::DbExpressionVisitor&lt;TResultType&gt; ^ visitor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResultType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResultType"><span data-ttu-id="6268a-106">Typ wyniku zwracany przez <c>odwiedzający</c>.</span><span class="sxs-lookup"><span data-stu-id="6268a-106">The type of the result produced by <c>visitor</c>.</span></span></typeparam>
        <param name="visitor"><span data-ttu-id="6268a-107">Wystąpienie typu <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> daje wartość wyniku określonego typu.</span><span class="sxs-lookup"><span data-stu-id="6268a-107">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</span></span></param>
        <summary><span data-ttu-id="6268a-108">Implementuje wzorzec odwiedzający wyrażeń, które powodują powstanie wartość wyniku określonego typu.</span><span class="sxs-lookup"><span data-stu-id="6268a-108">Implements the visitor pattern for expressions that produce a result value of a specific type.</span></span></summary>
        <returns><span data-ttu-id="6268a-109">Wartość wyniku o typie określonym utworzonego przez <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</span><span class="sxs-lookup"><span data-stu-id="6268a-109">A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6268a-110"><paramref name="visitor" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6268a-110"><paramref name="visitor" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OfType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.TypeUsage OfType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.TypeUsage OfType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbOfTypeExpression.OfType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OfType As TypeUsage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::TypeUsage ^ OfType { System::Data::Metadata::Edm::TypeUsage ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6268a-111">Pobiera metadane typ elementów, które mają zostać pobrane z argument zestawu.</span><span class="sxs-lookup"><span data-stu-id="6268a-111">Gets the metadata of the type of elements that should be retrieved from the set argument.</span></span></summary>
        <value><span data-ttu-id="6268a-112">Metadane typu elementów, które mają zostać pobrane z argument zestawu.</span><span class="sxs-lookup"><span data-stu-id="6268a-112">The metadata of the type of elements that should be retrieved from the set argument.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>