<Type Name="WaitHandle" FullName="System.Threading.WaitHandle">
  <Metadata><Meta Name="ms.openlocfilehash" Value="06234dda8c2720fb32dc463109f1e24a669c3fb6" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53232745" /></Metadata><TypeSignature Language="C#" Value="public abstract class WaitHandle : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi abstract beforefieldinit WaitHandle extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.WaitHandle" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WaitHandle&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WaitHandle abstract : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type WaitHandle = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e95b9-101">Hermetyzuje obiektów specyficznych dla systemu operacyjnego, które poczekaj, aż wyłącznego dostępu do udostępnionych zasobów.</span><span class="sxs-lookup"><span data-stu-id="e95b9-101">Encapsulates operating system-specific objects that wait for exclusive access to shared resources.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e95b9-102"><xref:System.Threading.WaitHandle> Klasa hermetyzuje dojście synchronizacji macierzystego systemu operacyjnego i jest używana do reprezentowania wszystkich obiektów synchronizacji w środowisku uruchomieniowym, zezwalających na wiele operacji oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-102">The <xref:System.Threading.WaitHandle> class encapsulates a native operating system synchronization handle and is used to represent all synchronization objects in the runtime that allow multiple wait operations.</span></span> <span data-ttu-id="e95b9-103">Dla porównania uchwytami oczekiwania z innymi obiektami synchronizacji, zobacz [Przegląd podstawowych synchronizacji](~/docs/standard/threading/overview-of-synchronization-primitives.md).</span><span class="sxs-lookup"><span data-stu-id="e95b9-103">For a comparison of wait handles with other synchronization objects, see [Overview of Synchronization Primitives](~/docs/standard/threading/overview-of-synchronization-primitives.md).</span></span>  
  
 <span data-ttu-id="e95b9-104"><xref:System.Threading.WaitHandle> Sama klasa jest abstrakcyjna.</span><span class="sxs-lookup"><span data-stu-id="e95b9-104">The <xref:System.Threading.WaitHandle> class itself is abstract.</span></span> <span data-ttu-id="e95b9-105">Klasy pochodne <xref:System.Threading.WaitHandle> zdefiniowanie sygnalizowanie zasad, aby wskazać, biorąc lub zwalnianie dostęp do udostępnionego zasobu, ale używają dziedziczonego <xref:System.Threading.WaitHandle> metody, aby zablokować podczas oczekiwania na dostęp do zasobów udostępnionych.</span><span class="sxs-lookup"><span data-stu-id="e95b9-105">Classes derived from <xref:System.Threading.WaitHandle> define a signaling mechanism to indicate taking or releasing access to a shared resource, but they use the inherited <xref:System.Threading.WaitHandle> methods to block while waiting for access to shared resources.</span></span> <span data-ttu-id="e95b9-106">Klasy pochodne <xref:System.Threading.WaitHandle> obejmują:</span><span class="sxs-lookup"><span data-stu-id="e95b9-106">The classes derived from <xref:System.Threading.WaitHandle> include:</span></span>  
  
-   <span data-ttu-id="e95b9-107"><xref:System.Threading.Mutex> Klasy.</span><span class="sxs-lookup"><span data-stu-id="e95b9-107">The <xref:System.Threading.Mutex> class.</span></span> <span data-ttu-id="e95b9-108">Zobacz [muteksy](~/docs/standard/threading/mutexes.md).</span><span class="sxs-lookup"><span data-stu-id="e95b9-108">See [Mutexes](~/docs/standard/threading/mutexes.md).</span></span>  
  
-   <span data-ttu-id="e95b9-109"><xref:System.Threading.EventWaitHandle> Klasa i jej klasy pochodne <xref:System.Threading.AutoResetEvent> i <xref:System.Threading.ManualResetEvent>.</span><span class="sxs-lookup"><span data-stu-id="e95b9-109">The <xref:System.Threading.EventWaitHandle> class and its derived classes, <xref:System.Threading.AutoResetEvent> and <xref:System.Threading.ManualResetEvent>.</span></span> <span data-ttu-id="e95b9-110">Zobacz [EventWaitHandle, autoresetevent —, CountdownEvent ManualResetEvent](~/docs/standard/threading/eventwaithandle-autoresetevent-countdownevent-manualresetevent.md).</span><span class="sxs-lookup"><span data-stu-id="e95b9-110">See [EventWaitHandle, AutoResetEvent, CountdownEvent, ManualResetEvent](~/docs/standard/threading/eventwaithandle-autoresetevent-countdownevent-manualresetevent.md).</span></span>  
  
-   <span data-ttu-id="e95b9-111"><xref:System.Threading.Semaphore> Klasy.</span><span class="sxs-lookup"><span data-stu-id="e95b9-111">The <xref:System.Threading.Semaphore> class.</span></span> <span data-ttu-id="e95b9-112">Zobacz [Semaphore i SemaphoreSlim](~/docs/standard/threading/semaphore-and-semaphoreslim.md).</span><span class="sxs-lookup"><span data-stu-id="e95b9-112">See [Semaphore and SemaphoreSlim](~/docs/standard/threading/semaphore-and-semaphoreslim.md).</span></span>  
  
 <span data-ttu-id="e95b9-113">Wątki, można zablokować na dojście oczekiwania poszczególnych przez wywołanie metody wystąpienia <xref:System.Threading.WaitHandle.WaitOne%2A>, który jest dziedziczone przez klasy pochodne <xref:System.Threading.WaitHandle>.</span><span class="sxs-lookup"><span data-stu-id="e95b9-113">Threads can block on an individual wait handle by calling the instance method <xref:System.Threading.WaitHandle.WaitOne%2A>, which is inherited by classes derived from <xref:System.Threading.WaitHandle>.</span></span>  
  
 <span data-ttu-id="e95b9-114">Klasy pochodne z <xref:System.Threading.WaitHandle> różnią się w ich koligacji wątku.</span><span class="sxs-lookup"><span data-stu-id="e95b9-114">The derived classes of <xref:System.Threading.WaitHandle> differ in their thread affinity.</span></span> <span data-ttu-id="e95b9-115">Uchwyty oczekiwania zdarzeń (<xref:System.Threading.EventWaitHandle>, <xref:System.Threading.AutoResetEvent>, i <xref:System.Threading.ManualResetEvent>) i semaforów nie mają koligacji wątku; wątek może sygnał dojście oczekiwania zdarzeń lub semafor.</span><span class="sxs-lookup"><span data-stu-id="e95b9-115">Event wait handles (<xref:System.Threading.EventWaitHandle>, <xref:System.Threading.AutoResetEvent>, and <xref:System.Threading.ManualResetEvent>) and semaphores do not have thread affinity; any thread can signal an event wait handle or semaphore.</span></span> <span data-ttu-id="e95b9-116">Muteksy, z drugiej strony, pozostają w koligacji wątku; Wątek, który jest właścicielem obiektu mutex musi zwolnić go, a wyjątek jest generowany, jeśli wątek wywołuje <xref:System.Threading.Mutex.ReleaseMutex%2A> metody na element mutex, który nie jest właścicielem.</span><span class="sxs-lookup"><span data-stu-id="e95b9-116">Mutexes, on the other hand, do have thread affinity; the thread that owns a mutex must release it, and an exception is thrown if a thread calls the <xref:System.Threading.Mutex.ReleaseMutex%2A> method on a mutex that it does not own.</span></span>  
  
 <span data-ttu-id="e95b9-117">Ponieważ <xref:System.Threading.WaitHandle> klasa pochodzi od <xref:System.MarshalByRefObject>, te klasy mogą być używane do synchronizowania działania wątków poza granice domeny aplikacji.</span><span class="sxs-lookup"><span data-stu-id="e95b9-117">Because the <xref:System.Threading.WaitHandle> class derives from <xref:System.MarshalByRefObject>, these classes can be used to synchronize the activities of threads across application domain boundaries.</span></span>  
  
 <span data-ttu-id="e95b9-118">Oprócz jej klasy pochodne <xref:System.Threading.WaitHandle> klasa ma szereg metod statycznych, które blokują wątek, dopóki jedna lub więcej obiektów synchronizacji odebrania sygnału.</span><span class="sxs-lookup"><span data-stu-id="e95b9-118">In addition to its derived classes, the <xref:System.Threading.WaitHandle> class has a number of static methods that block a thread until one or more synchronization objects receive a signal.</span></span> <span data-ttu-id="e95b9-119">Należą do nich następujące elementy:</span><span class="sxs-lookup"><span data-stu-id="e95b9-119">These include:</span></span>  
  
-   <span data-ttu-id="e95b9-120"><xref:System.Threading.WaitHandle.SignalAndWait%2A>, co pozwala wątku w celu zasygnalizowania określonego dojścia oczekiwania i natychmiast czekać na innym.</span><span class="sxs-lookup"><span data-stu-id="e95b9-120"><xref:System.Threading.WaitHandle.SignalAndWait%2A>, which allows a thread to signal one wait handle and immediately wait on another.</span></span>  
  
-   <span data-ttu-id="e95b9-121"><xref:System.Threading.WaitHandle.WaitAll%2A>, pozwalający wątku, poczekać, aż wszystkie dojścia oczekiwania w tablicy odbioru sygnału.</span><span class="sxs-lookup"><span data-stu-id="e95b9-121"><xref:System.Threading.WaitHandle.WaitAll%2A>, which allows a thread to wait until all the wait handles in an array receive a signal.</span></span>  
  
-   <span data-ttu-id="e95b9-122"><xref:System.Threading.WaitHandle.WaitAny%2A>, pozwalający wątku, poczekać, aż zasygnalizują któregokolwiek z określonego zestawu dojść oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-122"><xref:System.Threading.WaitHandle.WaitAny%2A>, which allows a thread to wait until any one of a specified set of wait handles has been signaled .</span></span>  
  
 <span data-ttu-id="e95b9-123">Przeciążenia metody te zawierają interwałów limitu czasu dla porzucenie czas oczekiwania i możliwość zamknąć kontekstu synchronizacji przed wejściem czas oczekiwania, dzięki czemu inne wątki używać kontekstu synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="e95b9-123">The overloads of these methods provide timeout intervals for abandoning the wait, and the opportunity to exit a synchronization context before entering the wait, allowing other threads to use the synchronization context.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e95b9-124">Ten typ implementuje <xref:System.IDisposable> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-124">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="e95b9-125">Po zakończeniu przy użyciu typu lub typ pochodzący od niego bezpośrednio lub pośrednio należy usunąć z niej.</span><span class="sxs-lookup"><span data-stu-id="e95b9-125">When you have finished using the type or a type derived from it, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="e95b9-126">Do usuwania tego typu, należy wywołać jej <xref:System.Threading.WaitHandle.Close%2A> method in Class metoda `try` / `catch` bloku.</span><span class="sxs-lookup"><span data-stu-id="e95b9-126">To dispose of the type directly, call its <xref:System.Threading.WaitHandle.Close%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="e95b9-127">Aby usunąć ją pośrednio, użyj konstrukcją języka pierwszej klasy takiej jak `using` (w języku C#) lub `Using` (w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="e95b9-127">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="e95b9-128">Aby uzyskać więcej informacji, zobacz sekcję "Przy użyciu obiektu który implementuje interfejs IDisposable" w <xref:System.IDisposable> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-128">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="e95b9-129"><xref:System.Threading.WaitHandle> implementuje <xref:System.IDisposable.Dispose%2A> wzorca.</span><span class="sxs-lookup"><span data-stu-id="e95b9-129"><xref:System.Threading.WaitHandle> implements the <xref:System.IDisposable.Dispose%2A> pattern.</span></span> <span data-ttu-id="e95b9-130">Zobacz [wzorca usuwania](~/docs/standard/design-guidelines/dispose-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="e95b9-130">See [Dispose Pattern](~/docs/standard/design-guidelines/dispose-pattern.md).</span></span> <span data-ttu-id="e95b9-131">Po utworzeniu klasy pochodnej z <xref:System.Threading.WaitHandle>, użyj <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> właściwość, aby przechowywać swoje dojście macierzystego systemu operacyjnego.</span><span class="sxs-lookup"><span data-stu-id="e95b9-131">When you derive from <xref:System.Threading.WaitHandle>, use the <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> property to store your native operating system handle.</span></span> <span data-ttu-id="e95b9-132">Nie trzeba zastąpić chronionego <xref:System.Threading.WaitHandle.Dispose%2A> metoda chyba że są używane dodatkowe zasoby niezarządzane.</span><span class="sxs-lookup"><span data-stu-id="e95b9-132">You do not need to override the protected <xref:System.Threading.WaitHandle.Dispose%2A> method unless you use additional unmanaged resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e95b9-133">Poniższy kod przedstawia przykład jak dwa wątki mogą wykonaj zadania w tle podczas główny wątek czeka na zadania do wykonania przy użyciu statycznych <xref:System.Threading.WaitHandle.WaitAny%2A> i <xref:System.Threading.WaitHandle.WaitAll%2A> metody <xref:System.Threading.WaitHandle> klasy.</span><span class="sxs-lookup"><span data-stu-id="e95b9-133">The following code example shows how two threads can do background tasks while the Main thread waits for the tasks to complete using the static <xref:System.Threading.WaitHandle.WaitAny%2A> and <xref:System.Threading.WaitHandle.WaitAll%2A> methods of the <xref:System.Threading.WaitHandle> class.</span></span>  
  
 [!code-cpp[WaitHandle#1](~/samples/snippets/cpp/VS_Snippets_CLR/WaitHandle/cpp/WaitHandle.cpp#1)]
 [!code-csharp[WaitHandle#1](~/samples/snippets/csharp/VS_Snippets_CLR/WaitHandle/CS/WaitHandle.cs#1)]
 [!code-vb[WaitHandle#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/WaitHandle/VB/WaitHandle.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="e95b9-134">Ten typ jest bezpieczny wątkowo.</span><span class="sxs-lookup"><span data-stu-id="e95b9-134">This type is thread safe.</span></span></threadsafe>
    <related type="Article" href="~/docs/standard/threading/index.md"><span data-ttu-id="e95b9-135">Wątkowość</span><span class="sxs-lookup"><span data-stu-id="e95b9-135">Threading</span></span></related>
    <related type="Article" href="~/docs/standard/threading/threading-objects-and-features.md"><span data-ttu-id="e95b9-136">Wątkowość obiektów i funkcji</span><span class="sxs-lookup"><span data-stu-id="e95b9-136">Threading Objects and Features</span></span></related>
    <related type="Article" href="~/docs/standard/threading/mutexes.md"><span data-ttu-id="e95b9-137">Muteksy</span><span class="sxs-lookup"><span data-stu-id="e95b9-137">Mutexes</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/cd94fc34-ac15-427f-b723-a1240a4fab7d"><span data-ttu-id="e95b9-138">EventWaitHandle, autoresetevent — i ManualResetEvent</span><span class="sxs-lookup"><span data-stu-id="e95b9-138">EventWaitHandle, AutoResetEvent, and ManualResetEvent</span></span></related>
    <related type="Article" href="~/docs/standard/threading/semaphore-and-semaphoreslim.md"><span data-ttu-id="e95b9-139">Semaforów</span><span class="sxs-lookup"><span data-stu-id="e95b9-139">Semaphores</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WaitHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WaitHandle();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e95b9-140">Inicjuje nowe wystąpienie klasy <see cref="T:System.Threading.WaitHandle" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="e95b9-140">Initializes a new instance of the <see cref="T:System.Threading.WaitHandle" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="waitHandle.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e95b9-141">Zwalnia wszystkie zasoby zajmowane przez bieżącą <see cref="T:System.Threading.WaitHandle" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-141">Releases all resources held by the current <see cref="T:System.Threading.WaitHandle" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e95b9-142">Ta metoda jest implementacją publicznych <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> metodę <xref:System.Threading.WaitHandle> klasy i jej klasy pochodne.</span><span class="sxs-lookup"><span data-stu-id="e95b9-142">This method is the public implementation of the <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> method for the <xref:System.Threading.WaitHandle> class and its derived classes.</span></span> <span data-ttu-id="e95b9-143">Zapewnia standardową implementację, która wywołuje `Dispose(Boolean)` przeciążenia z `true` argument, a następnie wywołania <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="e95b9-143">It provides a standard implementation that calls the `Dispose(Boolean)` overload with a `true` argument and then calls the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="e95b9-144">Wywołaj tę metodę, aby zwolnić wszystkie zasoby zajmowane przez wystąpienia `WaitHandle` lub klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="e95b9-144">Call this method to release all resources held by an instance of `WaitHandle` or a derived class.</span></span>  
  
 <span data-ttu-id="e95b9-145">Gdy ta metoda jest wywoływana, odwołania do bieżącego wystąpienia spowodować niezdefiniowane zachowanie.</span><span class="sxs-lookup"><span data-stu-id="e95b9-145">Once this method is called, references to the current instance cause undefined behavior.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e95b9-146">Zawsze wywołuj <xref:System.Threading.WaitHandle.Close%2A> lub <xref:System.Threading.WaitHandle.Dispose> przed publikacją swoje ostatnie odwołanie do <xref:System.Threading.WaitHandle>.</span><span class="sxs-lookup"><span data-stu-id="e95b9-146">Always call <xref:System.Threading.WaitHandle.Close%2A> or <xref:System.Threading.WaitHandle.Dispose> before you release your last reference to the <xref:System.Threading.WaitHandle>.</span></span> <span data-ttu-id="e95b9-147">W przeciwnym razie nie zostanie zwolniona przez nią zasoby.</span><span class="sxs-lookup"><span data-stu-id="e95b9-147">Otherwise, the resources it is using will not be freed.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="e95b9-148">Należy zastąpić <see langword="Dispose(Boolean)" /> metodę, aby zwolnić zasoby przydzielone w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="e95b9-148">You should override the <see langword="Dispose(Boolean)" /> method to release resources allocated in derived classes.</span></span></para></block>
        <related type="Article" href="~/docs/standard/garbage-collection/implementing-dispose.md"><span data-ttu-id="e95b9-149">Implementacja metody Dispose</span><span class="sxs-lookup"><span data-stu-id="e95b9-149">Implementing a Dispose Method</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e95b9-150">Zwalnia wszelkie zasoby używane przez bieżące wystąpienie <see cref="T:System.Threading.WaitHandle" /> klasy</span><span class="sxs-lookup"><span data-stu-id="e95b9-150">Releases all resources used by the current instance of the <see cref="T:System.Threading.WaitHandle" /> class</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="waitHandle.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e95b9-151">Zwalnia wszelkie zasoby używane przez bieżące wystąpienie <see cref="T:System.Threading.WaitHandle" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="e95b9-151">Releases all resources used by the current instance of the <see cref="T:System.Threading.WaitHandle" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e95b9-152">Ta metoda jest odpowiednikiem <xref:System.Threading.WaitHandle.Close%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e95b9-152">This method is equivalent to the <xref:System.Threading.WaitHandle.Close%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e95b9-153">Zawsze wywołuj <xref:System.Threading.WaitHandle.Close%2A> lub <xref:System.Threading.WaitHandle.Dispose> przed publikacją swoje ostatnie odwołanie do <xref:System.Threading.WaitHandle>.</span><span class="sxs-lookup"><span data-stu-id="e95b9-153">Always call <xref:System.Threading.WaitHandle.Close%2A> or <xref:System.Threading.WaitHandle.Dispose> before you release your last reference to the <xref:System.Threading.WaitHandle>.</span></span> <span data-ttu-id="e95b9-154">W przeciwnym razie nie zostanie zwolniona przez nią zasoby.</span><span class="sxs-lookup"><span data-stu-id="e95b9-154">Otherwise, the resources it is using will not be freed.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/garbage-collection/unmanaged.md"><span data-ttu-id="e95b9-155">Oczyszczanie zasobów niezarządzanych</span><span class="sxs-lookup"><span data-stu-id="e95b9-155">Cleaning Up Unmanaged Resources</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool explicitDisposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool explicitDisposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (explicitDisposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool explicitDisposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="waitHandle.Dispose explicitDisposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="explicitDisposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="explicitDisposing"><span data-ttu-id="e95b9-156"><see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko niezarządzane zasoby.</span><span class="sxs-lookup"><span data-stu-id="e95b9-156"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="e95b9-157">W przypadku przesłonięcia w klasie pochodnej, zwalnia zasoby niezarządzane używane przez <see cref="T:System.Threading.WaitHandle" />i opcjonalnie zwalnia zasoby zarządzane.</span><span class="sxs-lookup"><span data-stu-id="e95b9-157">When overridden in a derived class, releases the unmanaged resources used by the <see cref="T:System.Threading.WaitHandle" />, and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e95b9-158">Ta metoda jest wywoływana <xref:System.Threading.WaitHandle.Close%2A> i <xref:System.Threading.WaitHandle.Dispose> metod z `explicitDisposing` parametr `true`.</span><span class="sxs-lookup"><span data-stu-id="e95b9-158">This method is called by the <xref:System.Threading.WaitHandle.Close%2A> and the <xref:System.Threading.WaitHandle.Dispose> methods with the `explicitDisposing` parameter set to `true`.</span></span>  <span data-ttu-id="e95b9-159">Gdy `explicitDisposing` parametr jest `true`, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane że <xref:System.Threading.WaitHandle> obiektu odwołania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-159">When the `explicitDisposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Threading.WaitHandle> object references.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="e95b9-160">Należy zastąpić <see cref="M:System.Threading.WaitHandle.Dispose(System.Boolean)" /> metodę, aby zwolnić zasoby przydzielone w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="e95b9-160">You should override the <see cref="M:System.Threading.WaitHandle.Dispose(System.Boolean)" /> method to release resources allocated in derived classes.</span></span>  
  
<span data-ttu-id="e95b9-161"><see cref="M:System.Threading.WaitHandle.Close" /> Lub <see cref="M:System.Threading.WaitHandle.Dispose" /> metoda może być wywoływana wiele razy przez inne obiekty.</span><span class="sxs-lookup"><span data-stu-id="e95b9-161">The <see cref="M:System.Threading.WaitHandle.Close" /> or <see cref="M:System.Threading.WaitHandle.Dispose" /> method can be called multiple times by other objects.</span></span> <span data-ttu-id="e95b9-162">W przypadku przesłaniania tej metody należy uważać, aby nie odwołują się do obiektów, które zostały wcześniej zlikwidowane wcześniejszym wywołaniem do <see langword="Dispose" /> lub <see langword="Close" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-162">When overriding this method, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" /> or <see langword="Close" />.</span></span></para></block>
        <related type="Article" href="~/docs/standard/garbage-collection/implementing-dispose.md"><span data-ttu-id="e95b9-163">Implementacja metody Dispose</span><span class="sxs-lookup"><span data-stu-id="e95b9-163">Implementing a Dispose Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~WaitHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!WaitHandle ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="waitHandle.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e95b9-164">Zwalnia zasoby blokowane przez bieżące wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="e95b9-164">Releases the resources held by the current instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  

> [!NOTE]
> <span data-ttu-id="e95b9-165">Ten element członkowski został usunięty z .NET Framework w wersji 2.0 i późniejszych wersjach.</span><span class="sxs-lookup"><span data-stu-id="e95b9-165">This member has been removed from the .NET Framework version 2.0 and subsequent versions.</span></span> <span data-ttu-id="e95b9-166">Ten temat dotyczy tylko wersji na liście "Informacje o wersji" w dalszej części tego tematu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-166">This topic applies only to the versions listed in "Version Information" later in this topic.</span></span>


<span data-ttu-id="e95b9-167">Metoda nie jest wywoływana przez kod aplikacji, ale automatycznie podczas wyrzucania elementów bezużytecznych, chyba że moduł wyrzucania elementów bezużytecznych wyłączył finalizację.</span><span class="sxs-lookup"><span data-stu-id="e95b9-167">Application code does not call this method; it is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled.</span></span> <span data-ttu-id="e95b9-168">Aby uzyskać więcej informacji, zobacz <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> i <xref:System.Object.Finalize>.</span><span class="sxs-lookup"><span data-stu-id="e95b9-168">For more information, see <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> and <xref:System.Object.Finalize>.</span></span> <span data-ttu-id="e95b9-169">Ta metoda zastępuje <xref:System.Object.Finalize>.</span><span class="sxs-lookup"><span data-stu-id="e95b9-169">This method overrides <xref:System.Object.Finalize>.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public virtual IntPtr Handle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Threading.WaitHandle.Handle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property IntPtr Handle { IntPtr get(); void set(IntPtr value); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint with get, set" Usage="System.Threading.WaitHandle.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("Use the SafeWaitHandle property instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e95b9-170">Pobiera lub ustawia uchwyt macierzystego systemu operacyjnego.</span><span class="sxs-lookup"><span data-stu-id="e95b9-170">Gets or sets the native operating system handle.</span></span></summary>
        <value><span data-ttu-id="e95b9-171"><see langword="IntPtr" /> Reprezentujący dojście macierzystego systemu operacyjnego.</span><span class="sxs-lookup"><span data-stu-id="e95b9-171">An <see langword="IntPtr" /> representing the native operating system handle.</span></span> <span data-ttu-id="e95b9-172">Wartość domyślna to wartość <see cref="F:System.Threading.WaitHandle.InvalidHandle" /> pola.</span><span class="sxs-lookup"><span data-stu-id="e95b9-172">The default is the value of the <see cref="F:System.Threading.WaitHandle.InvalidHandle" /> field.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e95b9-173">Przypisywanie nową wartość do <xref:System.Threading.WaitHandle.Handle%2A> właściwości nie zamyka uchwyt poprzedniego.</span><span class="sxs-lookup"><span data-stu-id="e95b9-173">Assigning a new value to the <xref:System.Threading.WaitHandle.Handle%2A> property does not close the previous handle.</span></span> <span data-ttu-id="e95b9-174">Może to spowodować, że ujawnione dojście.</span><span class="sxs-lookup"><span data-stu-id="e95b9-174">This can result in a leaked handle.</span></span>  
  
 <span data-ttu-id="e95b9-175">Nie należy używać tej właściwości w .NET Framework w wersji 2.0 lub nowszy; Użyj <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> właściwości zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="e95b9-175">Do not use this property in the .NET Framework version 2.0 or later; use the <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> property instead.</span></span> <span data-ttu-id="e95b9-176">Ustawienie tej właściwości na prawidłowy uchwyt również zestawów <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> właściwości, ale ustawienie <xref:System.Threading.WaitHandle.InvalidHandle> może spowodować ujawnione dojście.</span><span class="sxs-lookup"><span data-stu-id="e95b9-176">Setting this property to a valid handle also sets the <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> property, but setting it to <xref:System.Threading.WaitHandle.InvalidHandle> can result in a leaked handle.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="e95b9-177">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego, można ustawić wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="e95b9-177">Requires full trust for the immediate caller to set the property value.</span></span> <span data-ttu-id="e95b9-178">Nie można ustawić tego elementu członkowskiego przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="e95b9-178">This member cannot be set by partially trusted or transparent code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="e95b9-179">Typy pochodne muszą mieć <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> można ustawić wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="e95b9-179">Derived types must have <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> to set the property value.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="InvalidHandle">
      <MemberSignature Language="C#" Value="protected static readonly IntPtr InvalidHandle;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly native int InvalidHandle" />
      <MemberSignature Language="DocId" Value="F:System.Threading.WaitHandle.InvalidHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly InvalidHandle As IntPtr " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly IntPtr InvalidHandle;" />
      <MemberSignature Language="F#" Value=" staticval mutable InvalidHandle : nativeint" Usage="System.Threading.WaitHandle.InvalidHandle" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e95b9-180">Reprezentuje uchwyt nieprawidłowy macierzystego systemu operacyjnego.</span><span class="sxs-lookup"><span data-stu-id="e95b9-180">Represents an invalid native operating system handle.</span></span> <span data-ttu-id="e95b9-181">To pole jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-181">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e95b9-182">Używana wewnętrznie w celu zainicjowania <xref:System.Threading.WaitHandle.Handle%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="e95b9-182">Used internally to initialize the <xref:System.Threading.WaitHandle.Handle%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="e95b9-183">Tej wartości można użyć, aby określić, czy <see cref="P:System.Threading.WaitHandle.Handle" /> właściwość zawiera uchwyt prawidłowego macierzystego systemu operacyjnego.</span><span class="sxs-lookup"><span data-stu-id="e95b9-183">You can use this value to determine whether the <see cref="P:System.Threading.WaitHandle.Handle" /> property contains a valid native operating system handle.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="SafeWaitHandle">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafeWaitHandle SafeWaitHandle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafeWaitHandle SafeWaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.Threading.WaitHandle.SafeWaitHandle" />
      <MemberSignature Language="VB.NET" Value="Public Property SafeWaitHandle As SafeWaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::SafeHandles::SafeWaitHandle ^ SafeWaitHandle { Microsoft::Win32::SafeHandles::SafeWaitHandle ^ get(); void set(Microsoft::Win32::SafeHandles::SafeWaitHandle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SafeWaitHandle : Microsoft.Win32.SafeHandles.SafeWaitHandle with get, set" Usage="System.Threading.WaitHandle.SafeWaitHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>set: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeWaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e95b9-184">Pobiera lub ustawia uchwyt macierzystego systemu operacyjnego.</span><span class="sxs-lookup"><span data-stu-id="e95b9-184">Gets or sets the native operating system handle.</span></span></summary>
        <value><span data-ttu-id="e95b9-185">A <see cref="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" /> reprezentujący dojście macierzystego systemu operacyjnego.</span><span class="sxs-lookup"><span data-stu-id="e95b9-185">A <see cref="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" /> representing the native operating system handle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e95b9-186">Podczas przypisywania nową wartość do <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> właściwości poprzedniego uchwyt zostaną zamknięte, kiedy poprzednie <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> obiektu są zbierane.</span><span class="sxs-lookup"><span data-stu-id="e95b9-186">When you assign a new value to the <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> property, the previous handle will be closed when the previous <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> object is collected.</span></span> <span data-ttu-id="e95b9-187">Nie ręcznie zamknąć dojście, ponieważ powoduje to <xref:System.ObjectDisposedException> podczas <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> próbuje zamknąć dojście.</span><span class="sxs-lookup"><span data-stu-id="e95b9-187">Do not manually close the handle, because this results in an <xref:System.ObjectDisposedException> when the <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> attempts to close the handle.</span></span>  
  
 <span data-ttu-id="e95b9-188"><xref:System.Threading.WaitHandle> implementuje <xref:System.IDisposable.Dispose%2A> wzorca.</span><span class="sxs-lookup"><span data-stu-id="e95b9-188"><xref:System.Threading.WaitHandle> implements the <xref:System.IDisposable.Dispose%2A> pattern.</span></span> <span data-ttu-id="e95b9-189">Zobacz [wzorca usuwania](~/docs/standard/design-guidelines/dispose-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="e95b9-189">See [Dispose Pattern](~/docs/standard/design-guidelines/dispose-pattern.md).</span></span> <span data-ttu-id="e95b9-190">Po utworzeniu klasy pochodnej z <xref:System.Threading.WaitHandle>, użyj <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> właściwość, aby przechowywać swoje dojście systemu operacyjnego uchwyt macierzysty.</span><span class="sxs-lookup"><span data-stu-id="e95b9-190">When you derive from <xref:System.Threading.WaitHandle>, use the <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> property to store your native handle operating system handle.</span></span> <span data-ttu-id="e95b9-191">Nie trzeba zastąpić chronionego <xref:System.Threading.WaitHandle.Dispose%2A> metoda chyba że są używane dodatkowe zasoby niezarządzane.</span><span class="sxs-lookup"><span data-stu-id="e95b9-191">You do not need to override the protected <xref:System.Threading.WaitHandle.Dispose%2A> method unless you use additional unmanaged resources.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="e95b9-192">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="e95b9-192">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="e95b9-193">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="e95b9-193">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="e95b9-194">Typy pochodne muszą mieć <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> do wywoływania tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="e95b9-194">Derived types must have <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> to call this member.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignalAndWait">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e95b9-195">Sygnalizuje jeden <see cref="T:System.Threading.WaitHandle" /> i czeka na innym.</span><span class="sxs-lookup"><span data-stu-id="e95b9-195">Signals one <see cref="T:System.Threading.WaitHandle" /> and waits on another.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public static bool SignalAndWait (System.Threading.WaitHandle toSignal, System.Threading.WaitHandle toWaitOn);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SignalAndWait(class System.Threading.WaitHandle toSignal, class System.Threading.WaitHandle toWaitOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SignalAndWait (toSignal As WaitHandle, toWaitOn As WaitHandle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SignalAndWait(System::Threading::WaitHandle ^ toSignal, System::Threading::WaitHandle ^ toWaitOn);" />
      <MemberSignature Language="F#" Value="static member SignalAndWait : System.Threading.WaitHandle * System.Threading.WaitHandle -&gt; bool" Usage="System.Threading.WaitHandle.SignalAndWait (toSignal, toWaitOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toSignal" Type="System.Threading.WaitHandle" />
        <Parameter Name="toWaitOn" Type="System.Threading.WaitHandle" />
      </Parameters>
      <Docs>
        <param name="toSignal"><span data-ttu-id="e95b9-196"><see cref="T:System.Threading.WaitHandle" /> Na sygnał.</span><span class="sxs-lookup"><span data-stu-id="e95b9-196">The <see cref="T:System.Threading.WaitHandle" /> to signal.</span></span></param>
        <param name="toWaitOn"><span data-ttu-id="e95b9-197"><see cref="T:System.Threading.WaitHandle" /> Oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-197">The <see cref="T:System.Threading.WaitHandle" /> to wait on.</span></span></param>
        <summary><span data-ttu-id="e95b9-198">Sygnalizuje jeden <see cref="T:System.Threading.WaitHandle" /> i czeka na innym.</span><span class="sxs-lookup"><span data-stu-id="e95b9-198">Signals one <see cref="T:System.Threading.WaitHandle" /> and waits on another.</span></span></summary>
        <returns><span data-ttu-id="e95b9-199"><see langword="true" /> Jeśli zarówno sygnałem, jak i czas oczekiwania zakończy się pomyślnie; Jeśli czas oczekiwania nie zostanie ukończone, metoda nie zwraca.</span><span class="sxs-lookup"><span data-stu-id="e95b9-199"><see langword="true" /> if both the signal and the wait complete successfully; if the wait does not complete, the method does not return.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e95b9-200">Ta operacja nie jest gwarantowana niepodzielnych.</span><span class="sxs-lookup"><span data-stu-id="e95b9-200">This operation is not guaranteed to be atomic.</span></span> <span data-ttu-id="e95b9-201">Po bieżącym sygnały wątku `toSignal` , ale przed jego czeka `toWaitOn`, wątek, który działa na inny procesor może być sygnał `toWaitOn` lub zaczekaj na nim.</span><span class="sxs-lookup"><span data-stu-id="e95b9-201">After the current thread signals `toSignal` but before it waits on `toWaitOn`, a thread that is running on another processor might signal `toWaitOn` or wait on it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e95b9-202">Poniższy przykład kodu wykorzystuje <xref:System.Threading.WaitHandle.SignalAndWait%28System.Threading.WaitHandle%2CSystem.Threading.WaitHandle%29> przeciążenia metody, aby zezwolić na wątek główny sygnał zablokowany wątek i poczekać, aż wątek kończy zadanie.</span><span class="sxs-lookup"><span data-stu-id="e95b9-202">The following code example uses the <xref:System.Threading.WaitHandle.SignalAndWait%28System.Threading.WaitHandle%2CSystem.Threading.WaitHandle%29> method overload to allow the main thread to signal a blocked thread and then wait until the thread finishes a task.</span></span>  
  
 <span data-ttu-id="e95b9-203">Przykład rozpoczyna pięć wątków, pozwala na ich blokowanie na <xref:System.Threading.EventWaitHandle> utworzone za pomocą <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> Flaga, a następnie jeden wątek wersji czasu użytkownik naciśnie klawisz ENTER.</span><span class="sxs-lookup"><span data-stu-id="e95b9-203">The example starts five threads, allows them to block on an <xref:System.Threading.EventWaitHandle> created with the <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> flag, and then releases one thread each time the user presses the ENTER key.</span></span> <span data-ttu-id="e95b9-204">Przykład następnie kolejkuje innego pięć wątków i zwalnia je za pomocą <xref:System.Threading.EventWaitHandle> utworzone za pomocą <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> flagi.</span><span class="sxs-lookup"><span data-stu-id="e95b9-204">The example then queues another five threads and releases them all using an <xref:System.Threading.EventWaitHandle> created with the <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> flag.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/CS/source.cs#1)]
 [!code-vb[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e95b9-205"><paramref name="toSignal" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-205"><paramref name="toSignal" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="e95b9-206">—lub—</span><span class="sxs-lookup"><span data-stu-id="e95b9-206">-or-</span></span> 
 <span data-ttu-id="e95b9-207"><paramref name="toWaitOn" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-207"><paramref name="toWaitOn" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e95b9-208">Metoda została wywołana w wątku, który ma <see cref="T:System.STAThreadAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-208">The method was called on a thread that has <see cref="T:System.STAThreadAttribute" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e95b9-209">Ta metoda nie jest obsługiwana na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="e95b9-209">This method is not supported on Windows 98 or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e95b9-210"><paramref name="toSignal" /> jest semafor i jest już pełna liczba.</span><span class="sxs-lookup"><span data-stu-id="e95b9-210"><paramref name="toSignal" /> is a semaphore, and it already has a full count.</span></span></exception>
        <exception cref="T:System.Threading.AbandonedMutexException"><span data-ttu-id="e95b9-211">Czas oczekiwania zakończyć, ponieważ wątek został zakończony bez zwalniania elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="e95b9-211">The wait completed because a thread exited without releasing a mutex.</span></span> <span data-ttu-id="e95b9-212">Ten wyjątek nie jest generowany na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="e95b9-212">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public static bool SignalAndWait (System.Threading.WaitHandle toSignal, System.Threading.WaitHandle toWaitOn, int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SignalAndWait(class System.Threading.WaitHandle toSignal, class System.Threading.WaitHandle toWaitOn, int32 millisecondsTimeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SignalAndWait (toSignal As WaitHandle, toWaitOn As WaitHandle, millisecondsTimeout As Integer, exitContext As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SignalAndWait(System::Threading::WaitHandle ^ toSignal, System::Threading::WaitHandle ^ toWaitOn, int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="static member SignalAndWait : System.Threading.WaitHandle * System.Threading.WaitHandle * int * bool -&gt; bool" Usage="System.Threading.WaitHandle.SignalAndWait (toSignal, toWaitOn, millisecondsTimeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toSignal" Type="System.Threading.WaitHandle" />
        <Parameter Name="toWaitOn" Type="System.Threading.WaitHandle" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="toSignal"><span data-ttu-id="e95b9-213"><see cref="T:System.Threading.WaitHandle" /> Na sygnał.</span><span class="sxs-lookup"><span data-stu-id="e95b9-213">The <see cref="T:System.Threading.WaitHandle" /> to signal.</span></span></param>
        <param name="toWaitOn"><span data-ttu-id="e95b9-214"><see cref="T:System.Threading.WaitHandle" /> Oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-214">The <see cref="T:System.Threading.WaitHandle" /> to wait on.</span></span></param>
        <param name="millisecondsTimeout"><span data-ttu-id="e95b9-215">Liczba całkowita, która reprezentuje interwałem oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-215">An integer that represents the interval to wait.</span></span> <span data-ttu-id="e95b9-216">Jeśli wartość jest <see cref="F:System.Threading.Timeout.Infinite" />, -1, czas oczekiwania jest nieskończona.</span><span class="sxs-lookup"><span data-stu-id="e95b9-216">If the value is <see cref="F:System.Threading.Timeout.Infinite" />, that is, -1, the wait is infinite.</span></span></param>
        <param name="exitContext"><span data-ttu-id="e95b9-217"><see langword="true" /> Aby zakończyć domeny synchronizacji dla kontekstu przed oczekiwaniem (Jeśli w kontekście zsynchronizowane), a potem; ponownie pobrać w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-217"><see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e95b9-218">Sygnalizuje jeden <see cref="T:System.Threading.WaitHandle" /> i czeka na innym, określając interwał limitu czasu jako liczba całkowita 32-bitowe podpisane i określeniu, czy zakończyć domeny synchronizacji dla kontekstu przed wejściem czas oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-218">Signals one <see cref="T:System.Threading.WaitHandle" /> and waits on another, specifying a time-out interval as a 32-bit signed integer and specifying whether to exit the synchronization domain for the context before entering the wait.</span></span></summary>
        <returns><span data-ttu-id="e95b9-219"><see langword="true" /> Jeśli zarówno sygnałem, jak i czas oczekiwania zakończone pomyślnie, lub <see langword="false" /> Jeśli sygnału ukończone, ale czas oczekiwania upłynął limit czasu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-219"><see langword="true" /> if both the signal and the wait completed successfully, or <see langword="false" /> if the signal completed but the wait timed out.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e95b9-220">Ta operacja nie jest gwarantowana niepodzielnych.</span><span class="sxs-lookup"><span data-stu-id="e95b9-220">This operation is not guaranteed to be atomic.</span></span> <span data-ttu-id="e95b9-221">Po bieżącym sygnały wątku `toSignal` , ale przed jego czeka `toWaitOn`, wątek, który działa na inny procesor może być sygnał `toWaitOn` lub zaczekaj na nim.</span><span class="sxs-lookup"><span data-stu-id="e95b9-221">After the current thread signals `toSignal` but before it waits on `toWaitOn`, a thread that is running on another processor might signal `toWaitOn` or wait on it.</span></span>  
  
 <span data-ttu-id="e95b9-222">Jeśli `millisecondsTimeout` wynosi zero, nie są blokowane w metodzie.</span><span class="sxs-lookup"><span data-stu-id="e95b9-222">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="e95b9-223">Sprawdza stan `toWaitOn` i zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="e95b9-223">It tests the state of the `toWaitOn` and returns immediately.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="e95b9-224">Uwagi dotyczące zamykania kontekstu</span><span class="sxs-lookup"><span data-stu-id="e95b9-224">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="e95b9-225">`exitContext` Parametr jest ignorowany, chyba że <xref:System.Threading.WaitHandle.SignalAndWait%2A> metoda jest wywoływana z wewnątrz inny niż domyślny kontekst zarządzanych.</span><span class="sxs-lookup"><span data-stu-id="e95b9-225">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="e95b9-226">Może się to zdarzyć, jeśli wątek znajduje się wewnątrz wywołania do wystąpienia klasy pochodzącej od <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="e95b9-226">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="e95b9-227">Nawet wtedy, gdy są aktualnie wykonuje metodę w klasie, która nie pochodzi od <xref:System.ContextBoundObject>, takiej jak <xref:System.String>, może być w kontekście innej niż domyślna Jeśli <xref:System.ContextBoundObject> znajduje się na stosie w bieżącej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="e95b9-227">Even if you are currently executing a method on a class that does not derive from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="e95b9-228">Gdy kod jest wykonywany w kontekście innej niż domyślna, określając `true` dla `exitContext` powoduje, że wątku zamknąć kontekstu zarządzanych inną niż domyślna (oznacza to, do którego nastąpi przejście do domyślnego kontekstu) przed wykonaniem <xref:System.Threading.WaitHandle.SignalAndWait%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e95b9-228">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method.</span></span> <span data-ttu-id="e95b9-229">Wątek jest zwracany do oryginalnego kontekstu niedomyślną po wywołaniu <xref:System.Threading.WaitHandle.SignalAndWait%2A> ukończeniu metody.</span><span class="sxs-lookup"><span data-stu-id="e95b9-229">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method completes.</span></span>  
  
 <span data-ttu-id="e95b9-230">Może to być przydatne, gdy zawiera klasy powiązane z kontekstu <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="e95b9-230">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="e95b9-231">W takim przypadku wszystkie wywołania do elementów członkowskich klasy są automatycznie synchronizowane i domena synchronizacji jest cały kod dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="e95b9-231">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="e95b9-232">Jeśli kod w stosie wywołań elementu członkowskiego wywołuje <xref:System.Threading.WaitHandle.SignalAndWait%2A> metody i określa `true` dla `exitContext`, wątek kończy działanie synchronizacji domeny, dzięki czemu wątek, który jest zablokowany w wywołaniu do wszystkich elementów członkowskich obiektu, aby kontynuować.</span><span class="sxs-lookup"><span data-stu-id="e95b9-232">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="e95b9-233">Gdy <xref:System.Threading.WaitHandle.SignalAndWait%2A> metoda zwróci wartość, wątku, który zgłosił wywołanie musi czekać ponownie domeny synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="e95b9-233">When the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e95b9-234"><paramref name="toSignal" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-234"><paramref name="toSignal" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="e95b9-235">—lub—</span><span class="sxs-lookup"><span data-stu-id="e95b9-235">-or-</span></span> 
 <span data-ttu-id="e95b9-236"><paramref name="toWaitOn" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-236"><paramref name="toWaitOn" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e95b9-237">Metoda jest wywoływana w wątku, który ma <see cref="T:System.STAThreadAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-237">The method is called on a thread that has <see cref="T:System.STAThreadAttribute" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e95b9-238">Ta metoda nie jest obsługiwana na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="e95b9-238">This method is not supported on Windows 98 or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e95b9-239"><see cref="T:System.Threading.WaitHandle" /> Nie sygnalizowane, ponieważ może to spowodować przekroczenie jego maksymalną liczbę.</span><span class="sxs-lookup"><span data-stu-id="e95b9-239">The <see cref="T:System.Threading.WaitHandle" /> cannot be signaled because it would exceed its maximum count.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e95b9-240"><paramref name="millisecondsTimeout" /> jest liczbą ujemną od-1, który reprezentuje nieskończony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-240"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
        <exception cref="T:System.Threading.AbandonedMutexException"><span data-ttu-id="e95b9-241">Czas oczekiwania zakończyć, ponieważ wątek został zakończony bez zwalniania elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="e95b9-241">The wait completed because a thread exited without releasing a mutex.</span></span> <span data-ttu-id="e95b9-242">Ten wyjątek nie jest generowany na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="e95b9-242">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public static bool SignalAndWait (System.Threading.WaitHandle toSignal, System.Threading.WaitHandle toWaitOn, TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SignalAndWait(class System.Threading.WaitHandle toSignal, class System.Threading.WaitHandle toWaitOn, valuetype System.TimeSpan timeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SignalAndWait (toSignal As WaitHandle, toWaitOn As WaitHandle, timeout As TimeSpan, exitContext As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SignalAndWait(System::Threading::WaitHandle ^ toSignal, System::Threading::WaitHandle ^ toWaitOn, TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="static member SignalAndWait : System.Threading.WaitHandle * System.Threading.WaitHandle * TimeSpan * bool -&gt; bool" Usage="System.Threading.WaitHandle.SignalAndWait (toSignal, toWaitOn, timeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toSignal" Type="System.Threading.WaitHandle" />
        <Parameter Name="toWaitOn" Type="System.Threading.WaitHandle" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="toSignal"><span data-ttu-id="e95b9-243"><see cref="T:System.Threading.WaitHandle" /> Na sygnał.</span><span class="sxs-lookup"><span data-stu-id="e95b9-243">The <see cref="T:System.Threading.WaitHandle" /> to signal.</span></span></param>
        <param name="toWaitOn"><span data-ttu-id="e95b9-244"><see cref="T:System.Threading.WaitHandle" /> Oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-244">The <see cref="T:System.Threading.WaitHandle" /> to wait on.</span></span></param>
        <param name="timeout"><span data-ttu-id="e95b9-245">A <see cref="T:System.TimeSpan" /> reprezentujący interwał oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-245">A <see cref="T:System.TimeSpan" /> that represents the interval to wait.</span></span> <span data-ttu-id="e95b9-246">Jeśli wartość wynosi -1, czas oczekiwania jest nieskończona.</span><span class="sxs-lookup"><span data-stu-id="e95b9-246">If the value is -1, the wait is infinite.</span></span></param>
        <param name="exitContext"><span data-ttu-id="e95b9-247"><see langword="true" /> Aby zakończyć domeny synchronizacji dla kontekstu przed oczekiwaniem (Jeśli w kontekście zsynchronizowane), a potem; ponownie pobrać w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-247"><see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e95b9-248">Sygnalizuje jeden <see cref="T:System.Threading.WaitHandle" /> i czeka na innym, określając interwał limitu czasu jako <see cref="T:System.TimeSpan" /> i określenie, czy chcesz zamknąć domeny synchronizacji dla kontekstu przed wejściem czas oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-248">Signals one <see cref="T:System.Threading.WaitHandle" /> and waits on another, specifying the time-out interval as a <see cref="T:System.TimeSpan" /> and specifying whether to exit the synchronization domain for the context before entering the wait.</span></span></summary>
        <returns><span data-ttu-id="e95b9-249"><see langword="true" /> Jeśli zarówno sygnałem, jak i czas oczekiwania zakończone pomyślnie, lub <see langword="false" /> Jeśli sygnału ukończone, ale czas oczekiwania upłynął limit czasu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-249"><see langword="true" /> if both the signal and the wait completed successfully, or <see langword="false" /> if the signal completed but the wait timed out.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e95b9-250">Ta operacja nie jest gwarantowana niepodzielnych.</span><span class="sxs-lookup"><span data-stu-id="e95b9-250">This operation is not guaranteed to be atomic.</span></span> <span data-ttu-id="e95b9-251">Po bieżącym sygnały wątku `toSignal` , ale przed jego czeka `toWaitOn`, wątek, który działa na inny procesor może być sygnał `toWaitOn` lub zaczekaj na nim.</span><span class="sxs-lookup"><span data-stu-id="e95b9-251">After the current thread signals `toSignal` but before it waits on `toWaitOn`, a thread that is running on another processor might signal `toWaitOn` or wait on it.</span></span>  
  
 <span data-ttu-id="e95b9-252">Maksymalna wartość `timeout` jest <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e95b9-252">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="e95b9-253">Jeśli `timeout` wynosi zero, nie są blokowane w metodzie.</span><span class="sxs-lookup"><span data-stu-id="e95b9-253">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="e95b9-254">Sprawdza stan `toWaitOn` i zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="e95b9-254">It tests the state of the `toWaitOn` and returns immediately.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="e95b9-255">Uwagi dotyczące zamykania kontekstu</span><span class="sxs-lookup"><span data-stu-id="e95b9-255">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="e95b9-256">`exitContext` Parametr jest ignorowany, chyba że <xref:System.Threading.WaitHandle.SignalAndWait%2A> metoda jest wywoływana z wewnątrz inny niż domyślny kontekst zarządzanych.</span><span class="sxs-lookup"><span data-stu-id="e95b9-256">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="e95b9-257">Może się to zdarzyć, jeśli wątek znajduje się wewnątrz wywołania do wystąpienia klasy pochodzącej od <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="e95b9-257">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="e95b9-258">Nawet wtedy, gdy są aktualnie wykonuje metodę w klasie, która nie pochodzi od <xref:System.ContextBoundObject>, takiej jak <xref:System.String>, może być w kontekście innej niż domyślna Jeśli <xref:System.ContextBoundObject> znajduje się na stosie w bieżącej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="e95b9-258">Even if you are currently executing a method on a class that does not derive from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="e95b9-259">Gdy kod jest wykonywany w kontekście innej niż domyślna, określając `true` dla `exitContext` powoduje, że wątku zamknąć kontekstu zarządzanych inną niż domyślna (oznacza to, do którego nastąpi przejście do domyślnego kontekstu) przed wykonaniem <xref:System.Threading.WaitHandle.SignalAndWait%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e95b9-259">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method.</span></span> <span data-ttu-id="e95b9-260">Wątek jest zwracany do oryginalnego kontekstu niedomyślną po wywołaniu <xref:System.Threading.WaitHandle.SignalAndWait%2A> ukończeniu metody.</span><span class="sxs-lookup"><span data-stu-id="e95b9-260">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method completes.</span></span>  
  
 <span data-ttu-id="e95b9-261">Może to być przydatne, gdy zawiera klasy powiązane z kontekstu <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="e95b9-261">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="e95b9-262">W takim przypadku wszystkie wywołania do elementów członkowskich klasy są automatycznie synchronizowane i domena synchronizacji jest cały kod dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="e95b9-262">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="e95b9-263">Jeśli kod w stosie wywołań elementu członkowskiego wywołuje <xref:System.Threading.WaitHandle.SignalAndWait%2A> metody i określa `true` dla `exitContext`, wątek kończy działanie synchronizacji domeny, dzięki czemu wątek, który jest zablokowany w wywołaniu do wszystkich elementów członkowskich obiektu, aby kontynuować.</span><span class="sxs-lookup"><span data-stu-id="e95b9-263">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="e95b9-264">Gdy <xref:System.Threading.WaitHandle.SignalAndWait%2A> metoda zwróci wartość, wątku, który zgłosił wywołanie musi czekać ponownie domeny synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="e95b9-264">When the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e95b9-265"><paramref name="toSignal" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-265"><paramref name="toSignal" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="e95b9-266">—lub—</span><span class="sxs-lookup"><span data-stu-id="e95b9-266">-or-</span></span> 
 <span data-ttu-id="e95b9-267"><paramref name="toWaitOn" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-267"><paramref name="toWaitOn" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e95b9-268">Metoda została wywołana w wątku, który ma <see cref="T:System.STAThreadAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-268">The method was called on a thread that has <see cref="T:System.STAThreadAttribute" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e95b9-269">Ta metoda nie jest obsługiwana na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="e95b9-269">This method is not supported on Windows 98 or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e95b9-270"><paramref name="toSignal" /> jest semafor i jest już pełna liczba.</span><span class="sxs-lookup"><span data-stu-id="e95b9-270"><paramref name="toSignal" /> is a semaphore, and it already has a full count.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e95b9-271"><paramref name="timeout" /> Zwraca ujemną liczbę milisekund od-1.</span><span class="sxs-lookup"><span data-stu-id="e95b9-271"><paramref name="timeout" /> evaluates to a negative number of milliseconds other than -1.</span></span>  
  
<span data-ttu-id="e95b9-272">—lub—</span><span class="sxs-lookup"><span data-stu-id="e95b9-272">-or-</span></span> 
 <span data-ttu-id="e95b9-273"><paramref name="timeout" /> jest większa niż <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-273"><paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.Threading.AbandonedMutexException"><span data-ttu-id="e95b9-274">Czas oczekiwania zakończyć, ponieważ wątek został zakończony bez zwalniania elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="e95b9-274">The wait completed because a thread exited without releasing a mutex.</span></span> <span data-ttu-id="e95b9-275">Ten wyjątek nie jest generowany na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="e95b9-275">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e95b9-276">Zwalnia wszelkie zasoby używane przez <see cref="T:System.Threading.WaitHandle" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-276">Releases all resources used by the <see cref="T:System.Threading.WaitHandle" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="e95b9-277">Wywoływanie `Dispose` umożliwia zasoby używane przez <xref:System.Threading.WaitHandle> zostają przeniesione do innych celów.</span><span class="sxs-lookup"><span data-stu-id="e95b9-277">Calling `Dispose` allows the resources used by the <xref:System.Threading.WaitHandle> to be reallocated for other purposes.</span></span> <span data-ttu-id="e95b9-278">Aby uzyskać więcej informacji na temat `Dispose`, zobacz [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="e95b9-278">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>

]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="WaitAll">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e95b9-279">Czeka, aż wszystkie elementy w wybranej tablicy do otrzymania sygnału.</span><span class="sxs-lookup"><span data-stu-id="e95b9-279">Waits for all the elements in the specified array to receive a signal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WaitAll">
      <MemberSignature Language="C#" Value="public static bool WaitAll (System.Threading.WaitHandle[] waitHandles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WaitAll(class System.Threading.WaitHandle[] waitHandles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAll (waitHandles As WaitHandle()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool WaitAll(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles);" />
      <MemberSignature Language="F#" Value="static member WaitAll : System.Threading.WaitHandle[] -&gt; bool" Usage="System.Threading.WaitHandle.WaitAll waitHandles" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
      </Parameters>
      <Docs>
        <param name="waitHandles"><span data-ttu-id="e95b9-280">A <see langword="WaitHandle" /> tablicę zawierającą obiekty, dla których będzie czekać bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e95b9-280">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span></span> <span data-ttu-id="e95b9-281">Ta tablica nie może zawierać wiele odwołań do tego samego obiektu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-281">This array cannot contain multiple references to the same object.</span></span></param>
        <summary><span data-ttu-id="e95b9-282">Czeka, aż wszystkie elementy w wybranej tablicy do otrzymania sygnału.</span><span class="sxs-lookup"><span data-stu-id="e95b9-282">Waits for all the elements in the specified array to receive a signal.</span></span></summary>
        <returns><span data-ttu-id="e95b9-283"><see langword="true" /> gdy każdy element w kolekcji <paramref name="waitHandles" /> otrzymał sygnał; w przeciwnym razie metoda nigdy nie zwraca.</span><span class="sxs-lookup"><span data-stu-id="e95b9-283"><see langword="true" /> when every element in <paramref name="waitHandles" /> has received a signal; otherwise the method never returns.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e95b9-284"><xref:System.Threading.AbandonedMutexException> jest nowa w .NET Framework w wersji 2.0.</span><span class="sxs-lookup"><span data-stu-id="e95b9-284"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e95b9-285">W poprzednich wersjach <xref:System.Threading.WaitHandle.WaitAll%2A> metoda zwraca `true` po mutex zostanie porzucony.</span><span class="sxs-lookup"><span data-stu-id="e95b9-285">In previous versions, the <xref:System.Threading.WaitHandle.WaitAll%2A> method returns `true` when a mutex is abandoned.</span></span> <span data-ttu-id="e95b9-286">Porzuconego elementu mutex często oznacza to poważny błąd kodowania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-286">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="e95b9-287">W przypadku elementu mutex całego systemu może wskazywać, że aplikacja został zakończony nagle (na przykład przy użyciu Menedżera zadań Windows).</span><span class="sxs-lookup"><span data-stu-id="e95b9-287">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="e95b9-288">Wyjątek zawiera informacje przydatne podczas debugowania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-288">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="e95b9-289"><xref:System.Threading.WaitHandle.WaitAll%2A> Metoda zwraca wartość, gdy są sygnalizowane wszystkie uchwyty.</span><span class="sxs-lookup"><span data-stu-id="e95b9-289">The <xref:System.Threading.WaitHandle.WaitAll%2A> method returns when all the handles are signaled.</span></span> <span data-ttu-id="e95b9-290">W niektórych implementacjach obsługuje więcej niż 64 są przekazywane <xref:System.NotSupportedException> zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="e95b9-290">On some implementations, if more than 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span> <span data-ttu-id="e95b9-291">Jeśli tablica zawiera duplikaty, wywołanie zakończy się niepowodzeniem z <xref:System.DuplicateWaitObjectException>.</span><span class="sxs-lookup"><span data-stu-id="e95b9-291">If the array contains duplicates, the call fails with a <xref:System.DuplicateWaitObjectException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e95b9-292"><xref:System.Threading.WaitHandle.WaitAll%2A> Metoda nie jest obsługiwana w wątkach, które mają <xref:System.STAThreadAttribute>.</span><span class="sxs-lookup"><span data-stu-id="e95b9-292">The <xref:System.Threading.WaitHandle.WaitAll%2A> method is not supported on threads that have <xref:System.STAThreadAttribute>.</span></span>  
  
 <span data-ttu-id="e95b9-293">Wywołanie tego przeciążenia metody jest równoważne z wywoływaniem <xref:System.Threading.WaitHandle.WaitAll%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> przeciążenie metody i określając wartość -1 (lub <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>) dla `millisecondsTimeout` i `true` dla `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="e95b9-293">Calling this method overload is equivalent to calling the <xref:System.Threading.WaitHandle.WaitAll%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> method overload and specifying -1 (or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>) for `millisecondsTimeout` and `true` for `exitContext`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e95b9-294">Poniższy przykład kodu pokazuje, jak używać puli wątków, aby asynchronicznie tworzyć i zapisywać grupy plików.</span><span class="sxs-lookup"><span data-stu-id="e95b9-294">The following code example shows how to use the thread pool to asynchronously create and write to a group of files.</span></span> <span data-ttu-id="e95b9-295">Po zakończeniu każdej operacji zapisu jest w kolejce jako element roboczy i sygnałów.</span><span class="sxs-lookup"><span data-stu-id="e95b9-295">Each write operation is queued as a work item and signals when it is finished.</span></span> <span data-ttu-id="e95b9-296">Główny wątek czeka, aż wszystkie elementy do sygnalizowania, a następnie kończy działanie.</span><span class="sxs-lookup"><span data-stu-id="e95b9-296">The main thread waits for all the items to signal and then exits.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitAll1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll1/CPP/source1.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitAll1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll1/CS/source1.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitAll1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll1/VB/source1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e95b9-297"><paramref name="waitHandles" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-297">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span></span> <span data-ttu-id="e95b9-298">—lub—</span><span class="sxs-lookup"><span data-stu-id="e95b9-298">-or-</span></span> 
<span data-ttu-id="e95b9-299">Co najmniej jeden z obiektów w <paramref name="waitHandles" /> tablicy są <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-299">One or more of the objects in the <paramref name="waitHandles" /> array are <see langword="null" />.</span></span>  
  
<span data-ttu-id="e95b9-300">—lub—</span><span class="sxs-lookup"><span data-stu-id="e95b9-300">-or-</span></span> 
 <span data-ttu-id="e95b9-301"><paramref name="waitHandles" /> jest tablicą bez elementów i wersji programu .NET Framework jest 2.0 lub nowszej.</span><span class="sxs-lookup"><span data-stu-id="e95b9-301"><paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 2.0 or later.</span></span></exception>
        <exception cref="T:System.DuplicateWaitObjectException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="e95b9-302">W <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> lub <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, przechwycić wyjątek klasy bazowej <see cref="T:System.ArgumentException" />, a zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="e95b9-302">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.ArgumentException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="e95b9-303"><paramref name="waitHandles" /> Tablica zawiera elementy, które są duplikatami.</span><span class="sxs-lookup"><span data-stu-id="e95b9-303">The <paramref name="waitHandles" /> array contains elements that are duplicates.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e95b9-304">Liczba obiektów w <paramref name="waitHandles" /> jest większa niż zezwala na system.</span><span class="sxs-lookup"><span data-stu-id="e95b9-304">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span></span>  
  
<span data-ttu-id="e95b9-305">—lub—</span><span class="sxs-lookup"><span data-stu-id="e95b9-305">-or-</span></span> 
<span data-ttu-id="e95b9-306"><see cref="T:System.STAThreadAttribute" /> Atrybut jest stosowany do procedury wątku dla bieżącego wątku i <paramref name="waitHandles" /> zawiera więcej niż jeden element.</span><span class="sxs-lookup"><span data-stu-id="e95b9-306">The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element.</span></span></exception>
        <exception cref="T:System.ApplicationException"><span data-ttu-id="e95b9-307"><paramref name="waitHandles" /> jest tablicą bez elementów i wersji programu .NET Framework jest w wersji 1.0 lub 1.1.</span><span class="sxs-lookup"><span data-stu-id="e95b9-307"><paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 1.0 or 1.1.</span></span></exception>
        <exception cref="T:System.Threading.AbandonedMutexException"><span data-ttu-id="e95b9-308">Czas oczekiwania zakończone, ponieważ wątek został zakończony bez zwalniania elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="e95b9-308">The wait terminated because a thread exited without releasing a mutex.</span></span> <span data-ttu-id="e95b9-309">Ten wyjątek nie jest generowany na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="e95b9-309">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e95b9-310"><paramref name="waitHandles" /> Tablica zawiera przezroczyste serwera proxy dla <see cref="T:System.Threading.WaitHandle" /> w innej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="e95b9-310">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAll">
      <MemberSignature Language="C#" Value="public static bool WaitAll (System.Threading.WaitHandle[] waitHandles, int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WaitAll(class System.Threading.WaitHandle[] waitHandles, int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAll (waitHandles As WaitHandle(), millisecondsTimeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool WaitAll(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="static member WaitAll : System.Threading.WaitHandle[] * int -&gt; bool" Usage="System.Threading.WaitHandle.WaitAll (waitHandles, millisecondsTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="waitHandles"><span data-ttu-id="e95b9-311">A <see langword="WaitHandle" /> tablicę zawierającą obiekty, dla których będzie czekać bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e95b9-311">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span></span> <span data-ttu-id="e95b9-312">Ta tablica nie może zawierać wiele odwołań do tego samego obiektu (duplikatów).</span><span class="sxs-lookup"><span data-stu-id="e95b9-312">This array cannot contain multiple references to the same object (duplicates).</span></span></param>
        <param name="millisecondsTimeout"><span data-ttu-id="e95b9-313">Liczba milisekund, lub <see cref="F:System.Threading.Timeout.Infinite" /> (-1), aby czekać w nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="e95b9-313">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="e95b9-314">Czeka, aż wszystkie elementy w określonej tablicy, aby otrzymać sygnał, za pomocą <see cref="T:System.Int32" /> wartość, aby określić interwał czasu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-314">Waits for all the elements in the specified array to receive a signal, using an <see cref="T:System.Int32" /> value to specify the time interval.</span></span></summary>
        <returns><span data-ttu-id="e95b9-315"><see langword="true" /> gdy każdy element w kolekcji <paramref name="waitHandles" /> otrzymał sygnał; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-315"><see langword="true" /> when every element in <paramref name="waitHandles" /> has received a signal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e95b9-316">Jeśli `millisecondsTimeout` wynosi zero, nie są blokowane w metodzie.</span><span class="sxs-lookup"><span data-stu-id="e95b9-316">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="e95b9-317">Testuje, stan uchwytami oczekiwania i zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="e95b9-317">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="e95b9-318"><xref:System.Threading.WaitHandle.WaitAll%2A> Metoda zwraca wartość, gdy czas oczekiwania skończy się, co oznacza, że gdy wszystkie uchwyty są sygnalizowane lub przekroczenia limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-318">The <xref:System.Threading.WaitHandle.WaitAll%2A> method returns when the wait terminates, which means either when all the handles are signaled or when time-out occurs.</span></span> <span data-ttu-id="e95b9-319">W niektórych implementacjach obsługuje więcej niż 64 są przekazywane <xref:System.NotSupportedException> zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="e95b9-319">On some implementations, if more than 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span> <span data-ttu-id="e95b9-320">Jeśli istnieją duplikaty w tablicy, wywołania kończy się niepowodzeniem z <xref:System.DuplicateWaitObjectException>.</span><span class="sxs-lookup"><span data-stu-id="e95b9-320">If there are duplicates in the array, the call fails with a <xref:System.DuplicateWaitObjectException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e95b9-321"><xref:System.Threading.WaitHandle.WaitAll%2A> Metoda nie jest obsługiwana w wątkach, które mają <xref:System.STAThreadAttribute>.</span><span class="sxs-lookup"><span data-stu-id="e95b9-321">The <xref:System.Threading.WaitHandle.WaitAll%2A> method is not supported on threads that have <xref:System.STAThreadAttribute>.</span></span>  
  
 <span data-ttu-id="e95b9-322">Wywołanie tego przeciążenia metody jest taka sama jak wywołanie <xref:System.Threading.WaitHandle.WaitAll%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> przeciążenia i określając `false` dla `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="e95b9-322">Calling this method overload is the same as calling the <xref:System.Threading.WaitHandle.WaitAll%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> overload and specifying `false` for `exitContext`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e95b9-323"><paramref name="waitHandles" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-323">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="e95b9-324">—lub—</span><span class="sxs-lookup"><span data-stu-id="e95b9-324">-or-</span></span> 
<span data-ttu-id="e95b9-325">Co najmniej jeden z obiektów w <paramref name="waitHandles" /> tablica jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-325">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span></span>  
  
<span data-ttu-id="e95b9-326">—lub—</span><span class="sxs-lookup"><span data-stu-id="e95b9-326">-or-</span></span> 
 <span data-ttu-id="e95b9-327"><paramref name="waitHandles" /> jest tablicą bez elementów.</span><span class="sxs-lookup"><span data-stu-id="e95b9-327"><paramref name="waitHandles" /> is an array with no elements.</span></span></exception>
        <exception cref="T:System.DuplicateWaitObjectException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="e95b9-328">W <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> lub <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, przechwycić wyjątek klasy bazowej <see cref="T:System.ArgumentException" />, a zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="e95b9-328">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.ArgumentException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="e95b9-329"><paramref name="waitHandles" /> Tablica zawiera elementy, które są duplikatami.</span><span class="sxs-lookup"><span data-stu-id="e95b9-329">The <paramref name="waitHandles" /> array contains elements that are duplicates.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e95b9-330">Liczba obiektów w <paramref name="waitHandles" /> jest większa niż zezwala na system.</span><span class="sxs-lookup"><span data-stu-id="e95b9-330">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span></span>  
  
<span data-ttu-id="e95b9-331">—lub—</span><span class="sxs-lookup"><span data-stu-id="e95b9-331">-or-</span></span> 
<span data-ttu-id="e95b9-332"><see cref="T:System.STAThreadAttribute" /> Atrybut jest stosowany do procedury wątku dla bieżącego wątku i <paramref name="waitHandles" /> zawiera więcej niż jeden element.</span><span class="sxs-lookup"><span data-stu-id="e95b9-332">The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e95b9-333"><paramref name="millisecondsTimeout" /> jest liczbą ujemną od-1, który reprezentuje nieskończony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-333"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
        <exception cref="T:System.Threading.AbandonedMutexException"><span data-ttu-id="e95b9-334">Czas oczekiwania zakończyć, ponieważ wątek został zakończony bez zwalniania elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="e95b9-334">The wait completed because a thread exited without releasing a mutex.</span></span> <span data-ttu-id="e95b9-335">Ten wyjątek nie jest generowany na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="e95b9-335">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e95b9-336"><paramref name="waitHandles" /> Tablica zawiera przezroczyste serwera proxy dla <see cref="T:System.Threading.WaitHandle" /> w innej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="e95b9-336">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAll">
      <MemberSignature Language="C#" Value="public static bool WaitAll (System.Threading.WaitHandle[] waitHandles, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WaitAll(class System.Threading.WaitHandle[] waitHandles, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAll (waitHandles As WaitHandle(), timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool WaitAll(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member WaitAll : System.Threading.WaitHandle[] * TimeSpan -&gt; bool" Usage="System.Threading.WaitHandle.WaitAll (waitHandles, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="waitHandles"><span data-ttu-id="e95b9-337">A <see langword="WaitHandle" /> tablicę zawierającą obiekty, dla których będzie czekać bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e95b9-337">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span></span> <span data-ttu-id="e95b9-338">Ta tablica nie może zawierać wiele odwołań do tego samego obiektu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-338">This array cannot contain multiple references to the same object.</span></span></param>
        <param name="timeout"><span data-ttu-id="e95b9-339">A <see cref="T:System.TimeSpan" /> reprezentujący liczbę milisekund oczekiwania, lub <see cref="T:System.TimeSpan" /> reprezentujący milisekund-1, aby czekać w nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="e95b9-339">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds, to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="e95b9-340">Czeka, aż wszystkie elementy w określonej tablicy, aby otrzymać sygnał, za pomocą <see cref="T:System.TimeSpan" /> wartość, aby określić interwał czasu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-340">Waits for all the elements in the specified array to receive a signal, using a <see cref="T:System.TimeSpan" /> value to specify the time interval.</span></span></summary>
        <returns><span data-ttu-id="e95b9-341"><see langword="true" /> gdy każdy element w kolekcji <paramref name="waitHandles" /> otrzymał sygnał; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-341"><see langword="true" /> when every element in <paramref name="waitHandles" /> has received a signal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e95b9-342">Jeśli `timeout` wynosi zero, nie są blokowane w metodzie.</span><span class="sxs-lookup"><span data-stu-id="e95b9-342">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="e95b9-343">Testuje, stan uchwytami oczekiwania i zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="e95b9-343">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="e95b9-344"><xref:System.Threading.WaitHandle.WaitAll%2A> Metoda zwraca wartość, gdy czas oczekiwania skończy, co oznacza, że są sygnalizowane albo wszystkie dojścia lub przekroczenia limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-344">The <xref:System.Threading.WaitHandle.WaitAll%2A> method returns when the wait terminates, which means either all the handles are signaled or a time-out occurs.</span></span> <span data-ttu-id="e95b9-345">W niektórych implementacjach obsługuje więcej niż 64 są przekazywane <xref:System.NotSupportedException> zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="e95b9-345">On some implementations, if more than 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span> <span data-ttu-id="e95b9-346">Jeśli tablica zawiera duplikaty, wywołanie zakończy się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="e95b9-346">If the array contains duplicates, the call will fail.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e95b9-347"><xref:System.Threading.WaitHandle.WaitAll%2A> Metoda nie jest obsługiwana w wątkach, które mają <xref:System.STAThreadAttribute>.</span><span class="sxs-lookup"><span data-stu-id="e95b9-347">The <xref:System.Threading.WaitHandle.WaitAll%2A> method is not supported on threads that have <xref:System.STAThreadAttribute>.</span></span>  
  
 <span data-ttu-id="e95b9-348">Maksymalna wartość `timeout` jest <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e95b9-348">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="e95b9-349">Wywołanie tego przeciążenia metody jest taka sama jak wywołanie <xref:System.Threading.WaitHandle.WaitAll%28System.Threading.WaitHandle%5B%5D%2CSystem.TimeSpan%2CSystem.Boolean%29> przeciążenia i określając `false` dla `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="e95b9-349">Calling this method overload is the same as calling the <xref:System.Threading.WaitHandle.WaitAll%28System.Threading.WaitHandle%5B%5D%2CSystem.TimeSpan%2CSystem.Boolean%29> overload and specifying `false` for `exitContext`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e95b9-350"><paramref name="waitHandles" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-350">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="e95b9-351">—lub—</span><span class="sxs-lookup"><span data-stu-id="e95b9-351">-or-</span></span> 
<span data-ttu-id="e95b9-352">Co najmniej jeden z obiektów w <paramref name="waitHandles" /> tablica jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-352">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span></span>  
  
<span data-ttu-id="e95b9-353">—lub—</span><span class="sxs-lookup"><span data-stu-id="e95b9-353">-or-</span></span> 
 <span data-ttu-id="e95b9-354"><paramref name="waitHandles" /> jest tablicą bez elementów.</span><span class="sxs-lookup"><span data-stu-id="e95b9-354"><paramref name="waitHandles" /> is an array with no elements.</span></span></exception>
        <exception cref="T:System.DuplicateWaitObjectException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="e95b9-355">W <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> lub <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, przechwycić wyjątek klasy bazowej <see cref="T:System.ArgumentException" />, a zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="e95b9-355">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.ArgumentException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="e95b9-356"><paramref name="waitHandles" /> Tablica zawiera elementy, które są duplikatami.</span><span class="sxs-lookup"><span data-stu-id="e95b9-356">The <paramref name="waitHandles" /> array contains elements that are duplicates.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e95b9-357">Liczba obiektów w <paramref name="waitHandles" /> jest większa niż zezwala na system.</span><span class="sxs-lookup"><span data-stu-id="e95b9-357">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span></span>  
  
<span data-ttu-id="e95b9-358">—lub—</span><span class="sxs-lookup"><span data-stu-id="e95b9-358">-or-</span></span> 
<span data-ttu-id="e95b9-359"><see cref="T:System.STAThreadAttribute" /> Atrybut jest stosowany do procedury wątku dla bieżącego wątku i <paramref name="waitHandles" /> zawiera więcej niż jeden element.</span><span class="sxs-lookup"><span data-stu-id="e95b9-359">The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e95b9-360"><paramref name="timeout" /> jest to liczba ujemna innych niż milisekund wartości-1, który reprezentuje nieskończony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-360"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span></span> 
<span data-ttu-id="e95b9-361">—lub—</span><span class="sxs-lookup"><span data-stu-id="e95b9-361">-or-</span></span> 
 <span data-ttu-id="e95b9-362"><paramref name="timeout" /> jest większa niż <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-362"><paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.Threading.AbandonedMutexException"><span data-ttu-id="e95b9-363">Czas oczekiwania zakończone, ponieważ wątek został zakończony bez zwalniania elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="e95b9-363">The wait terminated because a thread exited without releasing a mutex.</span></span> <span data-ttu-id="e95b9-364">Ten wyjątek nie jest generowany na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="e95b9-364">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e95b9-365"><paramref name="waitHandles" /> Tablica zawiera przezroczyste serwera proxy dla <see cref="T:System.Threading.WaitHandle" /> w innej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="e95b9-365">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAll">
      <MemberSignature Language="C#" Value="public static bool WaitAll (System.Threading.WaitHandle[] waitHandles, int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WaitAll(class System.Threading.WaitHandle[] waitHandles, int32 millisecondsTimeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAll (waitHandles As WaitHandle(), millisecondsTimeout As Integer, exitContext As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool WaitAll(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="static member WaitAll : System.Threading.WaitHandle[] * int * bool -&gt; bool" Usage="System.Threading.WaitHandle.WaitAll (waitHandles, millisecondsTimeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="waitHandles"><span data-ttu-id="e95b9-366">A <see langword="WaitHandle" /> tablicę zawierającą obiekty, dla których będzie czekać bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e95b9-366">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span></span> <span data-ttu-id="e95b9-367">Ta tablica nie może zawierać wiele odwołań do tego samego obiektu (duplikatów).</span><span class="sxs-lookup"><span data-stu-id="e95b9-367">This array cannot contain multiple references to the same object (duplicates).</span></span></param>
        <param name="millisecondsTimeout"><span data-ttu-id="e95b9-368">Liczba milisekund, lub <see cref="F:System.Threading.Timeout.Infinite" /> (-1), aby czekać w nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="e95b9-368">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span></span></param>
        <param name="exitContext"><span data-ttu-id="e95b9-369"><see langword="true" /> Aby zakończyć domeny synchronizacji dla kontekstu przed oczekiwaniem (Jeśli w kontekście zsynchronizowane), a potem; ponownie pobrać w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-369"><see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e95b9-370">Czeka, aż wszystkie elementy w określonej tablicy, aby otrzymać sygnał, za pomocą <see cref="T:System.Int32" /> wartością do określenia interwału czasu i określeniu, czy zakończyć domeny synchronizacji przed czas oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-370">Waits for all the elements in the specified array to receive a signal, using an <see cref="T:System.Int32" /> value to specify the time interval and specifying whether to exit the synchronization domain before the wait.</span></span></summary>
        <returns><span data-ttu-id="e95b9-371"><see langword="true" /> gdy każdy element w kolekcji <paramref name="waitHandles" /> otrzymał sygnał; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-371"><see langword="true" /> when every element in <paramref name="waitHandles" /> has received a signal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e95b9-372">Jeśli `millisecondsTimeout` wynosi zero, nie są blokowane w metodzie.</span><span class="sxs-lookup"><span data-stu-id="e95b9-372">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="e95b9-373">Testuje, stan uchwytami oczekiwania i zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="e95b9-373">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="e95b9-374"><xref:System.Threading.AbandonedMutexException> jest nowa w .NET Framework w wersji 2.0.</span><span class="sxs-lookup"><span data-stu-id="e95b9-374"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e95b9-375">W poprzednich wersjach <xref:System.Threading.WaitHandle.WaitAll%2A> metoda zwraca `true` po mutex zostanie porzucony.</span><span class="sxs-lookup"><span data-stu-id="e95b9-375">In previous versions, the <xref:System.Threading.WaitHandle.WaitAll%2A> method returns `true` when a mutex is abandoned.</span></span> <span data-ttu-id="e95b9-376">Porzuconego elementu mutex często oznacza to poważny błąd kodowania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-376">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="e95b9-377">W przypadku elementu mutex całego systemu może wskazywać, że aplikacja został zakończony nagle (na przykład przy użyciu Menedżera zadań Windows).</span><span class="sxs-lookup"><span data-stu-id="e95b9-377">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="e95b9-378">Wyjątek zawiera informacje przydatne podczas debugowania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-378">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="e95b9-379"><xref:System.Threading.WaitHandle.WaitAll%2A> Metoda zwraca wartość, gdy czas oczekiwania skończy się, co oznacza, że gdy wszystkie uchwyty są sygnalizowane lub przekroczenia limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-379">The <xref:System.Threading.WaitHandle.WaitAll%2A> method returns when the wait terminates, which means either when all the handles are signaled or when time-out occurs.</span></span> <span data-ttu-id="e95b9-380">W niektórych implementacjach obsługuje więcej niż 64 są przekazywane <xref:System.NotSupportedException> zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="e95b9-380">On some implementations, if more than 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span> <span data-ttu-id="e95b9-381">Jeśli istnieją duplikaty w tablicy, wywołania kończy się niepowodzeniem z <xref:System.DuplicateWaitObjectException>.</span><span class="sxs-lookup"><span data-stu-id="e95b9-381">If there are duplicates in the array, the call fails with a <xref:System.DuplicateWaitObjectException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e95b9-382"><xref:System.Threading.WaitHandle.WaitAll%2A> Metoda nie jest obsługiwana w wątkach, które mają <xref:System.STAThreadAttribute>.</span><span class="sxs-lookup"><span data-stu-id="e95b9-382">The <xref:System.Threading.WaitHandle.WaitAll%2A> method is not supported on threads that have <xref:System.STAThreadAttribute>.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="e95b9-383">Uwagi dotyczące zamykania kontekstu</span><span class="sxs-lookup"><span data-stu-id="e95b9-383">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="e95b9-384">`exitContext` Parametr jest ignorowany, chyba że <xref:System.Threading.WaitHandle.WaitAll%2A> metoda jest wywoływana z wewnątrz inny niż domyślny kontekst zarządzanych.</span><span class="sxs-lookup"><span data-stu-id="e95b9-384">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.WaitAll%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="e95b9-385">Może się to zdarzyć, jeśli wątek znajduje się wewnątrz wywołania do wystąpienia klasy pochodzącej od <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="e95b9-385">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="e95b9-386">Nawet wtedy, gdy są aktualnie wykonuje metodę w klasie, która nie pochodzi od <xref:System.ContextBoundObject>, takiej jak <xref:System.String>, może być w kontekście innej niż domyślna Jeśli <xref:System.ContextBoundObject> znajduje się na stosie w bieżącej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="e95b9-386">Even if you are currently executing a method on a class that is not derived from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="e95b9-387">Gdy kod jest wykonywany w kontekście innej niż domyślna, określając `true` dla `exitContext` powoduje, że wątku zamknąć kontekstu zarządzanych inną niż domyślna (oznacza to, do którego nastąpi przejście do domyślnego kontekstu) przed wykonaniem <xref:System.Threading.WaitHandle.WaitAll%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e95b9-387">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.WaitAll%2A> method.</span></span> <span data-ttu-id="e95b9-388">Wątek jest zwracany do oryginalnego kontekstu niedomyślną po wywołaniu <xref:System.Threading.WaitHandle.WaitAll%2A> ukończeniu metody.</span><span class="sxs-lookup"><span data-stu-id="e95b9-388">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.WaitAll%2A> method completes.</span></span>  
  
 <span data-ttu-id="e95b9-389">Może to być przydatne, gdy zawiera klasy powiązane z kontekstu <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute> atrybutu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-389">This can be useful when the context-bound class has the <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute> attribute.</span></span> <span data-ttu-id="e95b9-390">W takim przypadku wszystkie wywołania do elementów członkowskich klasy są automatycznie synchronizowane i domena synchronizacji jest cały kod dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="e95b9-390">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="e95b9-391">Jeśli kod w stosie wywołań elementu członkowskiego wywołuje <xref:System.Threading.WaitHandle.WaitAll%2A> metody i określa `true` dla `exitContext`, wątek kończy działanie synchronizacji domeny, dzięki czemu wątek, który jest zablokowany w wywołaniu do wszystkich elementów członkowskich obiektu, aby kontynuować.</span><span class="sxs-lookup"><span data-stu-id="e95b9-391">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.WaitAll%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="e95b9-392">Gdy <xref:System.Threading.WaitHandle.WaitAll%2A> metoda zwróci wartość, wątku, który zgłosił wywołanie musi czekać ponownie domeny synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="e95b9-392">When the <xref:System.Threading.WaitHandle.WaitAll%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e95b9-393">Poniższy przykład kodu pokazuje, jak używać puli wątków, aby asynchronicznie tworzyć i zapisywać grupy plików.</span><span class="sxs-lookup"><span data-stu-id="e95b9-393">The following code example shows how to use the thread pool to asynchronously create and write to a group of files.</span></span> <span data-ttu-id="e95b9-394">Po zakończeniu każdej operacji zapisu jest w kolejce jako element roboczy i sygnałów.</span><span class="sxs-lookup"><span data-stu-id="e95b9-394">Each write operation is queued as a work item and signals when it is finished.</span></span> <span data-ttu-id="e95b9-395">Główny wątek czeka, aż wszystkie elementy do sygnalizowania, a następnie kończy działanie.</span><span class="sxs-lookup"><span data-stu-id="e95b9-395">The main thread waits for all the items to signal and then exits.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitAll2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll2/CPP/source2.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitAll2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll2/CS/source2.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitAll2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll2/VB/source2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e95b9-396"><paramref name="waitHandles" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-396">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="e95b9-397">—lub—</span><span class="sxs-lookup"><span data-stu-id="e95b9-397">-or-</span></span> 
<span data-ttu-id="e95b9-398">Co najmniej jeden z obiektów w <paramref name="waitHandles" /> tablica jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-398">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span></span>  
  
<span data-ttu-id="e95b9-399">—lub—</span><span class="sxs-lookup"><span data-stu-id="e95b9-399">-or-</span></span> 
 <span data-ttu-id="e95b9-400"><paramref name="waitHandles" /> jest tablicą bez elementów i wersji programu .NET Framework jest 2.0 lub nowszej.</span><span class="sxs-lookup"><span data-stu-id="e95b9-400"><paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 2.0 or later.</span></span></exception>
        <exception cref="T:System.DuplicateWaitObjectException"><span data-ttu-id="e95b9-401"><paramref name="waitHandles" /> Tablica zawiera elementy, które są duplikatami.</span><span class="sxs-lookup"><span data-stu-id="e95b9-401">The <paramref name="waitHandles" /> array contains elements that are duplicates.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e95b9-402">Liczba obiektów w <paramref name="waitHandles" /> jest większa niż zezwala na system.</span><span class="sxs-lookup"><span data-stu-id="e95b9-402">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span></span>  
  
<span data-ttu-id="e95b9-403">—lub—</span><span class="sxs-lookup"><span data-stu-id="e95b9-403">-or-</span></span> 
<span data-ttu-id="e95b9-404"><see cref="T:System.STAThreadAttribute" /> Atrybut jest stosowany do procedury wątku dla bieżącego wątku i <paramref name="waitHandles" /> zawiera więcej niż jeden element.</span><span class="sxs-lookup"><span data-stu-id="e95b9-404">The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element.</span></span></exception>
        <exception cref="T:System.ApplicationException"><span data-ttu-id="e95b9-405"><paramref name="waitHandles" /> jest tablicą bez elementów i wersji programu .NET Framework jest w wersji 1.0 lub 1.1.</span><span class="sxs-lookup"><span data-stu-id="e95b9-405"><paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 1.0 or 1.1.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e95b9-406"><paramref name="millisecondsTimeout" /> jest liczbą ujemną od-1, który reprezentuje nieskończony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-406"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
        <exception cref="T:System.Threading.AbandonedMutexException"><span data-ttu-id="e95b9-407">Czas oczekiwania zakończyć, ponieważ wątek został zakończony bez zwalniania elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="e95b9-407">The wait completed because a thread exited without releasing a mutex.</span></span> <span data-ttu-id="e95b9-408">Ten wyjątek nie jest generowany na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="e95b9-408">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e95b9-409"><paramref name="waitHandles" /> Tablica zawiera przezroczyste serwera proxy dla <see cref="T:System.Threading.WaitHandle" /> w innej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="e95b9-409">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAll">
      <MemberSignature Language="C#" Value="public static bool WaitAll (System.Threading.WaitHandle[] waitHandles, TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WaitAll(class System.Threading.WaitHandle[] waitHandles, valuetype System.TimeSpan timeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAll (waitHandles As WaitHandle(), timeout As TimeSpan, exitContext As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool WaitAll(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="static member WaitAll : System.Threading.WaitHandle[] * TimeSpan * bool -&gt; bool" Usage="System.Threading.WaitHandle.WaitAll (waitHandles, timeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="waitHandles"><span data-ttu-id="e95b9-410">A <see langword="WaitHandle" /> tablicę zawierającą obiekty, dla których będzie czekać bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e95b9-410">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span></span> <span data-ttu-id="e95b9-411">Ta tablica nie może zawierać wiele odwołań do tego samego obiektu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-411">This array cannot contain multiple references to the same object.</span></span></param>
        <param name="timeout"><span data-ttu-id="e95b9-412">A <see cref="T:System.TimeSpan" /> reprezentujący liczbę milisekund oczekiwania, lub <see cref="T:System.TimeSpan" /> reprezentujący milisekund-1, aby czekać w nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="e95b9-412">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds, to wait indefinitely.</span></span></param>
        <param name="exitContext"><span data-ttu-id="e95b9-413"><see langword="true" /> Aby zakończyć domeny synchronizacji dla kontekstu przed oczekiwaniem (Jeśli w kontekście zsynchronizowane), a potem; ponownie pobrać w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-413"><see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e95b9-414">Czeka, aż wszystkie elementy w określonej tablicy, aby otrzymać sygnał, za pomocą <see cref="T:System.TimeSpan" /> wartość do określenia interwału czasu, a określająca, czy zakończyć domeny synchronizacji przed czas oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-414">Waits for all the elements in the specified array to receive a signal, using a <see cref="T:System.TimeSpan" /> value to specify the time interval, and specifying whether to exit the synchronization domain before the wait.</span></span></summary>
        <returns><span data-ttu-id="e95b9-415"><see langword="true" /> gdy każdy element w kolekcji <paramref name="waitHandles" /> otrzymał sygnał; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-415"><see langword="true" /> when every element in <paramref name="waitHandles" /> has received a signal; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e95b9-416">Jeśli `timeout` wynosi zero, nie są blokowane w metodzie.</span><span class="sxs-lookup"><span data-stu-id="e95b9-416">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="e95b9-417">Testuje, stan uchwytami oczekiwania i zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="e95b9-417">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="e95b9-418"><xref:System.Threading.AbandonedMutexException> jest nowa w .NET Framework w wersji 2.0.</span><span class="sxs-lookup"><span data-stu-id="e95b9-418"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e95b9-419">W poprzednich wersjach <xref:System.Threading.WaitHandle.WaitAll%2A> metoda zwraca `true` po mutex zostanie porzucony.</span><span class="sxs-lookup"><span data-stu-id="e95b9-419">In previous versions, the <xref:System.Threading.WaitHandle.WaitAll%2A> method returns `true` when a mutex is abandoned.</span></span> <span data-ttu-id="e95b9-420">Porzuconego elementu mutex często oznacza to poważny błąd kodowania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-420">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="e95b9-421">W przypadku elementu mutex całego systemu może wskazywać, że aplikacja został zakończony nagle (na przykład przy użyciu Menedżera zadań Windows).</span><span class="sxs-lookup"><span data-stu-id="e95b9-421">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="e95b9-422">Wyjątek zawiera informacje przydatne podczas debugowania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-422">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="e95b9-423"><xref:System.Threading.WaitHandle.WaitAll%2A> Metoda zwraca wartość, gdy czas oczekiwania skończy, co oznacza, że są sygnalizowane albo wszystkie dojścia lub przekroczenia limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-423">The <xref:System.Threading.WaitHandle.WaitAll%2A> method returns when the wait terminates, which means either all the handles are signaled or a time-out occurs.</span></span> <span data-ttu-id="e95b9-424">W niektórych implementacjach obsługuje więcej niż 64 są przekazywane <xref:System.NotSupportedException> zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="e95b9-424">On some implementations, if more than 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span> <span data-ttu-id="e95b9-425">Jeśli tablica zawiera duplikaty, wywołanie zakończy się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="e95b9-425">If the array contains duplicates, the call will fail.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e95b9-426"><xref:System.Threading.WaitHandle.WaitAll%2A> Metoda nie jest obsługiwana w wątkach, które mają <xref:System.STAThreadAttribute>.</span><span class="sxs-lookup"><span data-stu-id="e95b9-426">The <xref:System.Threading.WaitHandle.WaitAll%2A> method is not supported on threads that have <xref:System.STAThreadAttribute>.</span></span>  
  
 <span data-ttu-id="e95b9-427">Maksymalna wartość `timeout` jest <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e95b9-427">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="e95b9-428">Uwagi dotyczące zamykania kontekstu</span><span class="sxs-lookup"><span data-stu-id="e95b9-428">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="e95b9-429">`exitContext` Parametr jest ignorowany, chyba że <xref:System.Threading.WaitHandle.WaitAll%2A> metoda jest wywoływana z wewnątrz inny niż domyślny kontekst zarządzanych.</span><span class="sxs-lookup"><span data-stu-id="e95b9-429">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.WaitAll%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="e95b9-430">Może się to zdarzyć, jeśli wątek znajduje się wewnątrz wywołania do wystąpienia klasy pochodzącej od <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="e95b9-430">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="e95b9-431">Nawet wtedy, gdy są aktualnie wykonuje metodę w klasie, która nie pochodzi od <xref:System.ContextBoundObject>, takiej jak <xref:System.String>, może być w kontekście innej niż domyślna Jeśli <xref:System.ContextBoundObject> znajduje się na stosie w bieżącej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="e95b9-431">Even if you are currently executing a method on a class that is not derived from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="e95b9-432">Gdy kod jest wykonywany w kontekście innej niż domyślna, określając `true` dla `exitContext` powoduje, że wątku zamknąć kontekstu zarządzanych inną niż domyślna (oznacza to, do którego nastąpi przejście do domyślnego kontekstu) przed wykonaniem <xref:System.Threading.WaitHandle.WaitAll%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e95b9-432">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.WaitAll%2A> method.</span></span> <span data-ttu-id="e95b9-433">Zwraca do oryginalnego kontekstu niedomyślną po wywołaniu <xref:System.Threading.WaitHandle.WaitAll%2A> ukończeniu metody.</span><span class="sxs-lookup"><span data-stu-id="e95b9-433">It returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.WaitAll%2A> method completes.</span></span>  
  
 <span data-ttu-id="e95b9-434">Może to być przydatne, gdy zawiera klasy powiązane z kontekstu <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="e95b9-434">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="e95b9-435">W takim przypadku wszystkie wywołania do elementów członkowskich klasy są automatycznie synchronizowane i domena synchronizacji jest cały kod dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="e95b9-435">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="e95b9-436">Jeśli kod w stosie wywołań elementu członkowskiego wywołuje <xref:System.Threading.WaitHandle.WaitAll%2A> metody i określa `true` dla `exitContext`, wątek kończy działanie synchronizacji domeny, dzięki czemu wątek, który jest zablokowany w wywołaniu do wszystkich elementów członkowskich obiektu, aby kontynuować.</span><span class="sxs-lookup"><span data-stu-id="e95b9-436">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.WaitAll%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="e95b9-437">Gdy <xref:System.Threading.WaitHandle.WaitAll%2A> metoda zwróci wartość, wątku, który zgłosił wywołanie musi czekać ponownie domeny synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="e95b9-437">When the <xref:System.Threading.WaitHandle.WaitAll%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e95b9-438">Poniższy przykład kodu pokazuje, jak używać puli wątków, aby asynchronicznie tworzyć i zapisywać grupy plików.</span><span class="sxs-lookup"><span data-stu-id="e95b9-438">The following code example shows how to use the thread pool to asynchronously create and write to a group of files.</span></span> <span data-ttu-id="e95b9-439">Po zakończeniu każdej operacji zapisu jest w kolejce jako element roboczy i sygnałów.</span><span class="sxs-lookup"><span data-stu-id="e95b9-439">Each write operation is queued as a work item and signals when it is finished.</span></span> <span data-ttu-id="e95b9-440">Główny wątek czeka, aż wszystkie elementy do sygnalizowania, a następnie kończy działanie.</span><span class="sxs-lookup"><span data-stu-id="e95b9-440">The main thread waits for all the items to signal and then exits.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitAll3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll3/CPP/source3.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitAll3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll3/CS/source3.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitAll3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll3/VB/source3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e95b9-441"><paramref name="waitHandles" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-441">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="e95b9-442">—lub—</span><span class="sxs-lookup"><span data-stu-id="e95b9-442">-or-</span></span> 
<span data-ttu-id="e95b9-443">Co najmniej jeden z obiektów w <paramref name="waitHandles" /> tablica jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-443">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span></span>  
  
<span data-ttu-id="e95b9-444">—lub—</span><span class="sxs-lookup"><span data-stu-id="e95b9-444">-or-</span></span> 
 <span data-ttu-id="e95b9-445"><paramref name="waitHandles" /> jest tablicą bez elementów i wersji programu .NET Framework jest 2.0 lub nowszej.</span><span class="sxs-lookup"><span data-stu-id="e95b9-445"><paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 2.0 or later.</span></span></exception>
        <exception cref="T:System.DuplicateWaitObjectException"><span data-ttu-id="e95b9-446"><paramref name="waitHandles" /> Tablica zawiera elementy, które są duplikatami.</span><span class="sxs-lookup"><span data-stu-id="e95b9-446">The <paramref name="waitHandles" /> array contains elements that are duplicates.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e95b9-447">Liczba obiektów w <paramref name="waitHandles" /> jest większa niż zezwala na system.</span><span class="sxs-lookup"><span data-stu-id="e95b9-447">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span></span>  
  
<span data-ttu-id="e95b9-448">—lub—</span><span class="sxs-lookup"><span data-stu-id="e95b9-448">-or-</span></span> 
<span data-ttu-id="e95b9-449"><see cref="T:System.STAThreadAttribute" /> Atrybut jest stosowany do procedury wątku dla bieżącego wątku i <paramref name="waitHandles" /> zawiera więcej niż jeden element.</span><span class="sxs-lookup"><span data-stu-id="e95b9-449">The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element.</span></span></exception>
        <exception cref="T:System.ApplicationException"><span data-ttu-id="e95b9-450"><paramref name="waitHandles" /> jest tablicą bez elementów i wersji programu .NET Framework jest w wersji 1.0 lub 1.1.</span><span class="sxs-lookup"><span data-stu-id="e95b9-450"><paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 1.0 or 1.1.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e95b9-451"><paramref name="timeout" /> jest to liczba ujemna innych niż milisekund wartości-1, który reprezentuje nieskończony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-451"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span></span> 
<span data-ttu-id="e95b9-452">—lub—</span><span class="sxs-lookup"><span data-stu-id="e95b9-452">-or-</span></span> 
 <span data-ttu-id="e95b9-453"><paramref name="timeout" /> jest większa niż <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-453"><paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.Threading.AbandonedMutexException"><span data-ttu-id="e95b9-454">Czas oczekiwania zakończone, ponieważ wątek został zakończony bez zwalniania elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="e95b9-454">The wait terminated because a thread exited without releasing a mutex.</span></span> <span data-ttu-id="e95b9-455">Ten wyjątek nie jest generowany na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="e95b9-455">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e95b9-456"><paramref name="waitHandles" /> Tablica zawiera przezroczyste serwera proxy dla <see cref="T:System.Threading.WaitHandle" /> w innej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="e95b9-456">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WaitAny">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e95b9-457">Czeka na dowolne elementy w wybranej tablicy do otrzymania sygnału.</span><span class="sxs-lookup"><span data-stu-id="e95b9-457">Waits for any of the elements in the specified array to receive a signal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WaitAny">
      <MemberSignature Language="C#" Value="public static int WaitAny (System.Threading.WaitHandle[] waitHandles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 WaitAny(class System.Threading.WaitHandle[] waitHandles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAny (waitHandles As WaitHandle()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int WaitAny(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles);" />
      <MemberSignature Language="F#" Value="static member WaitAny : System.Threading.WaitHandle[] -&gt; int" Usage="System.Threading.WaitHandle.WaitAny waitHandles" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
      </Parameters>
      <Docs>
        <param name="waitHandles"><span data-ttu-id="e95b9-458">A <see langword="WaitHandle" /> tablicę zawierającą obiekty, dla których będzie czekać bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e95b9-458">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span></span></param>
        <summary><span data-ttu-id="e95b9-459">Czeka na dowolne elementy w wybranej tablicy do otrzymania sygnału.</span><span class="sxs-lookup"><span data-stu-id="e95b9-459">Waits for any of the elements in the specified array to receive a signal.</span></span></summary>
        <returns><span data-ttu-id="e95b9-460">Indeks tablicy obiektu spełniającego oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-460">The array index of the object that satisfied the wait.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e95b9-461"><xref:System.Threading.AbandonedMutexException> jest nowa w .NET Framework w wersji 2.0.</span><span class="sxs-lookup"><span data-stu-id="e95b9-461"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e95b9-462">W poprzednich wersjach <xref:System.Threading.WaitHandle.WaitAny%2A> metoda zwraca `true` po ukończeniu czas oczekiwania, ponieważ element mutex zostanie porzucony.</span><span class="sxs-lookup"><span data-stu-id="e95b9-462">In previous versions, the <xref:System.Threading.WaitHandle.WaitAny%2A> method returns `true` if the wait completes because a mutex is abandoned.</span></span> <span data-ttu-id="e95b9-463">Porzuconego elementu mutex często oznacza to poważny błąd kodowania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-463">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="e95b9-464">W przypadku elementu mutex całego systemu może wskazywać, że aplikacja został zakończony nagle (na przykład przy użyciu Menedżera zadań Windows).</span><span class="sxs-lookup"><span data-stu-id="e95b9-464">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="e95b9-465">Wyjątek zawiera informacje przydatne podczas debugowania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-465">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="e95b9-466"><xref:System.Threading.WaitHandle.WaitAny%2A> Metoda zgłasza wyjątek <xref:System.Threading.AbandonedMutexException> tylko, gdy czas oczekiwania kończy z powodu porzuconego elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="e95b9-466">The <xref:System.Threading.WaitHandle.WaitAny%2A> method throws an <xref:System.Threading.AbandonedMutexException> only when the wait completes because of an abandoned mutex.</span></span> <span data-ttu-id="e95b9-467">Jeśli `waitHandles` zawiera wydana obiektu mutex z mniejszą liczbą indeksu niż porzuconego elementu mutex <xref:System.Threading.WaitHandle.WaitAny%2A> metoda zakończy się normalnie i nie jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="e95b9-467">If `waitHandles` contains a released mutex with a lower index number than the abandoned mutex, the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes normally and the exception is not thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e95b9-468">W wersjach programu .NET Framework wcześniejszych niż wersja 2.0, jeśli wątek zamyka lub przerywa bez jawnie zwalniania <xref:System.Threading.Mutex>oraz że `Mutex` pod indeksem 0 (zero) trwa `WaitAny` tablicy na inny wątek, wskaźnik zwracany przez `WaitAny` jest 128 zamiast 0.</span><span class="sxs-lookup"><span data-stu-id="e95b9-468">In versions of the .NET Framework earlier than version 2.0, if a thread exits or aborts without explicitly releasing a <xref:System.Threading.Mutex>, and that `Mutex` is at index 0 (zero) in a `WaitAny` array on another thread, the index returned by `WaitAny` is 128 instead of 0.</span></span>  
  
 <span data-ttu-id="e95b9-469">Ta metoda zwraca, jeśli dowolny uchwyt jest sygnalizowane.</span><span class="sxs-lookup"><span data-stu-id="e95b9-469">This method returns when any handle is signaled.</span></span> <span data-ttu-id="e95b9-470">Jeśli więcej niż jeden obiekt staje się zasygnalizowane podczas wywołania, wartość zwracana jest indeks tablicy obiektu sygnałowego mający najmniejszą wartość indeksu sygnałowego obiektów.</span><span class="sxs-lookup"><span data-stu-id="e95b9-470">If more than one object becomes signaled during the call, the return value is the array index of the signaled object with the smallest index value of all the signaled objects.</span></span> <span data-ttu-id="e95b9-471">W niektórych implementacjach, jeśli inne, które obsługuje 64 są przekazywane <xref:System.NotSupportedException> zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="e95b9-471">On some implementations, if more that 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 <span data-ttu-id="e95b9-472">Wywołanie tego przeciążenia metody jest równoważne z wywoływaniem <xref:System.Threading.WaitHandle.WaitAny%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> przeciążenie metody i określając wartość -1 (lub <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>) dla `millisecondsTimeout` i `true` dla `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="e95b9-472">Calling this method overload is equivalent to calling the <xref:System.Threading.WaitHandle.WaitAny%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> method overload and specifying -1 (or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>) for `millisecondsTimeout` and `true` for `exitContext`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e95b9-473">Poniższy przykład kodu demonstruje wywołanie <xref:System.Threading.WaitHandle.WaitAny%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e95b9-473">The following code example demonstrates calling the <xref:System.Threading.WaitHandle.WaitAny%2A> method.</span></span>  
  
 [!code-cpp[WaitHandle#1](~/samples/snippets/cpp/VS_Snippets_CLR/WaitHandle/cpp/WaitHandle.cpp#1)]
 [!code-csharp[WaitHandle#1](~/samples/snippets/csharp/VS_Snippets_CLR/WaitHandle/CS/WaitHandle.cs#1)]
 [!code-vb[WaitHandle#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/WaitHandle/VB/WaitHandle.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e95b9-474"><paramref name="waitHandles" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-474">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="e95b9-475">—lub—</span><span class="sxs-lookup"><span data-stu-id="e95b9-475">-or-</span></span> 
<span data-ttu-id="e95b9-476">Co najmniej jeden z obiektów w <paramref name="waitHandles" /> tablica jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-476">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e95b9-477">Liczba obiektów w <paramref name="waitHandles" /> jest większa niż zezwala na system.</span><span class="sxs-lookup"><span data-stu-id="e95b9-477">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span></span></exception>
        <exception cref="T:System.ApplicationException"><span data-ttu-id="e95b9-478"><paramref name="waitHandles" /> jest tablicą bez elementów i wersji programu .NET Framework jest w wersji 1.0 lub 1.1.</span><span class="sxs-lookup"><span data-stu-id="e95b9-478"><paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 1.0 or 1.1.</span></span></exception>
        <exception cref="T:System.Threading.AbandonedMutexException"><span data-ttu-id="e95b9-479">Czas oczekiwania zakończyć, ponieważ wątek został zakończony bez zwalniania elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="e95b9-479">The wait completed because a thread exited without releasing a mutex.</span></span> <span data-ttu-id="e95b9-480">Ten wyjątek nie jest generowany na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="e95b9-480">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e95b9-481"><paramref name="waitHandles" /> jest tablicą bez elementów i wersji programu .NET Framework jest 2.0 lub nowszej.</span><span class="sxs-lookup"><span data-stu-id="e95b9-481"><paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 2.0 or later.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e95b9-482"><paramref name="waitHandles" /> Tablica zawiera przezroczyste serwera proxy dla <see cref="T:System.Threading.WaitHandle" /> w innej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="e95b9-482">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAny">
      <MemberSignature Language="C#" Value="public static int WaitAny (System.Threading.WaitHandle[] waitHandles, int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 WaitAny(class System.Threading.WaitHandle[] waitHandles, int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAny (waitHandles As WaitHandle(), millisecondsTimeout As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int WaitAny(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="static member WaitAny : System.Threading.WaitHandle[] * int -&gt; int" Usage="System.Threading.WaitHandle.WaitAny (waitHandles, millisecondsTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="waitHandles"><span data-ttu-id="e95b9-483">A <see langword="WaitHandle" /> tablicę zawierającą obiekty, dla których będzie czekać bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e95b9-483">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span></span></param>
        <param name="millisecondsTimeout"><span data-ttu-id="e95b9-484">Liczba milisekund, lub <see cref="F:System.Threading.Timeout.Infinite" /> (-1), aby czekać w nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="e95b9-484">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="e95b9-485">Czeka na dowolne elementy w wybranej tablicy do otrzymania sygnału, przy użyciu całkowita 32-bitowych, aby określić interwał czasu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-485">Waits for any of the elements in the specified array to receive a signal, using a 32-bit signed integer to specify the time interval.</span></span></summary>
        <returns><span data-ttu-id="e95b9-486">Indeks tablicy obiektu spełniającego oczekiwania, lub <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> Jeśli żaden obiekt nie ustali, czas oczekiwania i przedział czasu jest odpowiednikiem <paramref name="millisecondsTimeout" /> został przekazany.</span><span class="sxs-lookup"><span data-stu-id="e95b9-486">The array index of the object that satisfied the wait, or <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> if no object satisfied the wait and a time interval equivalent to <paramref name="millisecondsTimeout" /> has passed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e95b9-487">Jeśli `millisecondsTimeout` wynosi zero, nie są blokowane w metodzie.</span><span class="sxs-lookup"><span data-stu-id="e95b9-487">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="e95b9-488">Testuje, stan uchwytami oczekiwania i zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="e95b9-488">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="e95b9-489"><xref:System.Threading.WaitHandle.WaitAny%2A> Metoda zgłasza wyjątek <xref:System.Threading.AbandonedMutexException> tylko, gdy czas oczekiwania kończy z powodu porzuconego elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="e95b9-489">The <xref:System.Threading.WaitHandle.WaitAny%2A> method throws an <xref:System.Threading.AbandonedMutexException> only when the wait completes because of an abandoned mutex.</span></span> <span data-ttu-id="e95b9-490">Jeśli `waitHandles` zawiera wydana obiektu mutex z mniejszą liczbą indeksu niż porzuconego elementu mutex <xref:System.Threading.WaitHandle.WaitAny%2A> metoda zakończy się normalnie i nie jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="e95b9-490">If `waitHandles` contains a released mutex with a lower index number than the abandoned mutex, the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes normally and the exception is not thrown.</span></span>  
  
 <span data-ttu-id="e95b9-491">Ta metoda zwraca wartość, gdy czas oczekiwania skończy, gdy jeden z uchwytów są sygnalizowane lub zostanie przekroczony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-491">This method returns when the wait terminates, either when any of the handles are signaled or when a timeout occurs.</span></span> <span data-ttu-id="e95b9-492">Jeśli więcej niż jeden obiekt staje się zasygnalizowane podczas wywołania, wartość zwracana jest indeks tablicy obiektu sygnałowego mający najmniejszą wartość indeksu sygnałowego obiektów.</span><span class="sxs-lookup"><span data-stu-id="e95b9-492">If more than one object becomes signaled during the call, the return value is the array index of the signaled object with the smallest index value of all the signaled objects.</span></span> <span data-ttu-id="e95b9-493">W niektórych implementacjach, jeśli inne, które obsługuje 64 są przekazywane <xref:System.NotSupportedException> zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="e95b9-493">On some implementations, if more that 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 <span data-ttu-id="e95b9-494">Wywołanie tego przeciążenia metody jest taka sama jak wywołanie <xref:System.Threading.WaitHandle.WaitAny%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> przeciążenia i określając `false` dla `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="e95b9-494">Calling this method overload is the same as calling the <xref:System.Threading.WaitHandle.WaitAny%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> overload and specifying `false` for `exitContext`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e95b9-495"><paramref name="waitHandles" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-495">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="e95b9-496">—lub—</span><span class="sxs-lookup"><span data-stu-id="e95b9-496">-or-</span></span> 
<span data-ttu-id="e95b9-497">Co najmniej jeden z obiektów w <paramref name="waitHandles" /> tablica jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-497">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e95b9-498">Liczba obiektów w <paramref name="waitHandles" /> jest większa niż zezwala na system.</span><span class="sxs-lookup"><span data-stu-id="e95b9-498">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e95b9-499"><paramref name="millisecondsTimeout" /> jest liczbą ujemną od-1, który reprezentuje nieskończony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-499"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
        <exception cref="T:System.Threading.AbandonedMutexException"><span data-ttu-id="e95b9-500">Czas oczekiwania zakończyć, ponieważ wątek został zakończony bez zwalniania elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="e95b9-500">The wait completed because a thread exited without releasing a mutex.</span></span> <span data-ttu-id="e95b9-501">Ten wyjątek nie jest generowany na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="e95b9-501">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e95b9-502"><paramref name="waitHandles" /> jest tablicą bez elementów.</span><span class="sxs-lookup"><span data-stu-id="e95b9-502"><paramref name="waitHandles" /> is an array with no elements.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e95b9-503"><paramref name="waitHandles" /> Tablica zawiera przezroczyste serwera proxy dla <see cref="T:System.Threading.WaitHandle" /> w innej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="e95b9-503">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAny">
      <MemberSignature Language="C#" Value="public static int WaitAny (System.Threading.WaitHandle[] waitHandles, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 WaitAny(class System.Threading.WaitHandle[] waitHandles, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAny (waitHandles As WaitHandle(), timeout As TimeSpan) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int WaitAny(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member WaitAny : System.Threading.WaitHandle[] * TimeSpan -&gt; int" Usage="System.Threading.WaitHandle.WaitAny (waitHandles, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="waitHandles"><span data-ttu-id="e95b9-504">A <see langword="WaitHandle" /> tablicę zawierającą obiekty, dla których będzie czekać bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e95b9-504">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span></span></param>
        <param name="timeout"><span data-ttu-id="e95b9-505">A <see cref="T:System.TimeSpan" /> reprezentujący liczbę milisekund oczekiwania, lub <see cref="T:System.TimeSpan" /> reprezentujący milisekund czekać w nieskończoność,-1.</span><span class="sxs-lookup"><span data-stu-id="e95b9-505">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="e95b9-506">Czeka na dowolne elementy w wybranej tablicy do otrzymania sygnału, za pomocą <see cref="T:System.TimeSpan" /> do określenia interwału czasu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-506">Waits for any of the elements in the specified array to receive a signal, using a <see cref="T:System.TimeSpan" /> to specify the time interval.</span></span></summary>
        <returns><span data-ttu-id="e95b9-507">Indeks tablicy obiektu spełniającego oczekiwania, lub <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> Jeśli żaden obiekt nie ustali, czas oczekiwania i przedział czasu jest odpowiednikiem <paramref name="timeout" /> został przekazany.</span><span class="sxs-lookup"><span data-stu-id="e95b9-507">The array index of the object that satisfied the wait, or <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> if no object satisfied the wait and a time interval equivalent to <paramref name="timeout" /> has passed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e95b9-508">Jeśli `timeout` wynosi zero, nie są blokowane w metodzie.</span><span class="sxs-lookup"><span data-stu-id="e95b9-508">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="e95b9-509">Testuje, stan uchwytami oczekiwania i zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="e95b9-509">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="e95b9-510"><xref:System.Threading.WaitHandle.WaitAny%2A> Metoda zgłasza wyjątek <xref:System.Threading.AbandonedMutexException> tylko, gdy czas oczekiwania kończy z powodu porzuconego elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="e95b9-510">The <xref:System.Threading.WaitHandle.WaitAny%2A> method throws an <xref:System.Threading.AbandonedMutexException> only when the wait completes because of an abandoned mutex.</span></span> <span data-ttu-id="e95b9-511">Jeśli `waitHandles` zawiera wydana obiektu mutex z mniejszą liczbą indeksu niż porzuconego elementu mutex <xref:System.Threading.WaitHandle.WaitAny%2A> metoda zakończy się normalnie i nie jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="e95b9-511">If `waitHandles` contains a released mutex with a lower index number than the abandoned mutex, the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes normally and the exception is not thrown.</span></span>  
  
 <span data-ttu-id="e95b9-512">Ta metoda zwraca, gdy czas oczekiwania skończy, gdy jeden z uchwytów są sygnalizowane lub przekroczenia limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-512">This method returns when the wait terminates, either when any of the handles are signaled or when a time-out occurs.</span></span> <span data-ttu-id="e95b9-513">Jeśli więcej niż jeden obiekt staje się zasygnalizowane podczas wywołania, wartość zwracana jest indeks tablicy obiektu sygnałowego mający najmniejszą wartość indeksu sygnałowego obiektów.</span><span class="sxs-lookup"><span data-stu-id="e95b9-513">If more than one object becomes signaled during the call, the return value is the array index of the signaled object with the smallest index value of all the signaled objects.</span></span> <span data-ttu-id="e95b9-514">W niektórych implementacjach, jeśli inne, które obsługuje 64 są przekazywane <xref:System.NotSupportedException> zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="e95b9-514">On some implementations, if more that 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 <span data-ttu-id="e95b9-515">Maksymalna wartość `timeout` jest <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e95b9-515">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="e95b9-516">Wywołanie tego przeciążenia metody jest taka sama jak wywołanie <xref:System.Threading.WaitHandle.WaitAny%28System.Threading.WaitHandle%5B%5D%2CSystem.TimeSpan%2CSystem.Boolean%29> przeciążenia i określając `false` dla `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="e95b9-516">Calling this method overload is the same as calling the <xref:System.Threading.WaitHandle.WaitAny%28System.Threading.WaitHandle%5B%5D%2CSystem.TimeSpan%2CSystem.Boolean%29> overload and specifying `false` for `exitContext`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e95b9-517"><paramref name="waitHandles" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-517">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="e95b9-518">—lub—</span><span class="sxs-lookup"><span data-stu-id="e95b9-518">-or-</span></span> 
<span data-ttu-id="e95b9-519">Co najmniej jeden z obiektów w <paramref name="waitHandles" /> tablica jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-519">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e95b9-520">Liczba obiektów w <paramref name="waitHandles" /> jest większa niż zezwala na system.</span><span class="sxs-lookup"><span data-stu-id="e95b9-520">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e95b9-521"><paramref name="timeout" /> jest to liczba ujemna innych niż milisekund wartości-1, który reprezentuje nieskończony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-521"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span></span> 
<span data-ttu-id="e95b9-522">—lub—</span><span class="sxs-lookup"><span data-stu-id="e95b9-522">-or-</span></span> 
 <span data-ttu-id="e95b9-523"><paramref name="timeout" /> jest większa niż <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-523"><paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.Threading.AbandonedMutexException"><span data-ttu-id="e95b9-524">Czas oczekiwania zakończyć, ponieważ wątek został zakończony bez zwalniania elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="e95b9-524">The wait completed because a thread exited without releasing a mutex.</span></span> <span data-ttu-id="e95b9-525">Ten wyjątek nie jest generowany na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="e95b9-525">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e95b9-526"><paramref name="waitHandles" /> jest tablicą bez elementów.</span><span class="sxs-lookup"><span data-stu-id="e95b9-526"><paramref name="waitHandles" /> is an array with no elements.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e95b9-527"><paramref name="waitHandles" /> Tablica zawiera przezroczyste serwera proxy dla <see cref="T:System.Threading.WaitHandle" /> w innej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="e95b9-527">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAny">
      <MemberSignature Language="C#" Value="public static int WaitAny (System.Threading.WaitHandle[] waitHandles, int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 WaitAny(class System.Threading.WaitHandle[] waitHandles, int32 millisecondsTimeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAny (waitHandles As WaitHandle(), millisecondsTimeout As Integer, exitContext As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int WaitAny(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="static member WaitAny : System.Threading.WaitHandle[] * int * bool -&gt; int" Usage="System.Threading.WaitHandle.WaitAny (waitHandles, millisecondsTimeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="waitHandles"><span data-ttu-id="e95b9-528">A <see langword="WaitHandle" /> tablicę zawierającą obiekty, dla których będzie czekać bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e95b9-528">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span></span></param>
        <param name="millisecondsTimeout"><span data-ttu-id="e95b9-529">Liczba milisekund, lub <see cref="F:System.Threading.Timeout.Infinite" /> (-1), aby czekać w nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="e95b9-529">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span></span></param>
        <param name="exitContext"><span data-ttu-id="e95b9-530"><see langword="true" /> Aby zakończyć domeny synchronizacji dla kontekstu przed oczekiwaniem (Jeśli w kontekście zsynchronizowane), a potem; ponownie pobrać w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-530"><see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e95b9-531">Czeka na dowolne elementy w określonej tablicy, aby otrzymać przy użyciu całkowita 32-bitowych, aby określić interwał czasu i określeniu, czy zakończyć domeny synchronizacji przed czas oczekiwania na sygnał.</span><span class="sxs-lookup"><span data-stu-id="e95b9-531">Waits for any of the elements in the specified array to receive a signal, using a 32-bit signed integer to specify the time interval, and specifying whether to exit the synchronization domain before the wait.</span></span></summary>
        <returns><span data-ttu-id="e95b9-532">Indeks tablicy obiektu spełniającego oczekiwania, lub <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> Jeśli żaden obiekt nie ustali, czas oczekiwania i przedział czasu jest odpowiednikiem <paramref name="millisecondsTimeout" /> został przekazany.</span><span class="sxs-lookup"><span data-stu-id="e95b9-532">The array index of the object that satisfied the wait, or <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> if no object satisfied the wait and a time interval equivalent to <paramref name="millisecondsTimeout" /> has passed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e95b9-533">Jeśli `millisecondsTimeout` wynosi zero, nie są blokowane w metodzie.</span><span class="sxs-lookup"><span data-stu-id="e95b9-533">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="e95b9-534">Testuje, stan uchwytami oczekiwania i zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="e95b9-534">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="e95b9-535"><xref:System.Threading.AbandonedMutexException> jest nowa w .NET Framework w wersji 2.0.</span><span class="sxs-lookup"><span data-stu-id="e95b9-535"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e95b9-536">W poprzednich wersjach <xref:System.Threading.WaitHandle.WaitAny%2A> metoda zwraca `true` po ukończeniu czas oczekiwania, ponieważ element mutex zostanie porzucony.</span><span class="sxs-lookup"><span data-stu-id="e95b9-536">In previous versions, the <xref:System.Threading.WaitHandle.WaitAny%2A> method returns `true` if the wait completes because a mutex is abandoned.</span></span> <span data-ttu-id="e95b9-537">Porzuconego elementu mutex często oznacza to poważny błąd kodowania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-537">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="e95b9-538">W przypadku elementu mutex całego systemu może wskazywać, że aplikacja został zakończony nagle (na przykład przy użyciu Menedżera zadań Windows).</span><span class="sxs-lookup"><span data-stu-id="e95b9-538">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="e95b9-539">Wyjątek zawiera informacje przydatne podczas debugowania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-539">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="e95b9-540"><xref:System.Threading.WaitHandle.WaitAny%2A> Metoda zgłasza wyjątek <xref:System.Threading.AbandonedMutexException> tylko, gdy czas oczekiwania kończy z powodu porzuconego elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="e95b9-540">The <xref:System.Threading.WaitHandle.WaitAny%2A> method throws an <xref:System.Threading.AbandonedMutexException> only when the wait completes because of an abandoned mutex.</span></span> <span data-ttu-id="e95b9-541">Jeśli `waitHandles` zawiera wydana obiektu mutex z mniejszą liczbą indeksu niż porzuconego elementu mutex <xref:System.Threading.WaitHandle.WaitAny%2A> metoda zakończy się normalnie i nie jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="e95b9-541">If `waitHandles` contains a released mutex with a lower index number than the abandoned mutex, the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes normally and the exception is not thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e95b9-542">W wersjach programu .NET Framework wcześniejszych niż wersja 2.0, jeśli wątek zamyka lub przerywa bez jawnie zwalniania <xref:System.Threading.Mutex>oraz że `Mutex` pod indeksem 0 (zero) trwa `WaitAny` tablicy na inny wątek, wskaźnik zwracany przez `WaitAny` jest 128 zamiast 0.</span><span class="sxs-lookup"><span data-stu-id="e95b9-542">In versions of the .NET Framework earlier than version 2.0, if a thread exits or aborts without explicitly releasing a <xref:System.Threading.Mutex>, and that `Mutex` is at index 0 (zero) in a `WaitAny` array on another thread, the index returned by `WaitAny` is 128 instead of 0.</span></span>  
  
 <span data-ttu-id="e95b9-543">Ta metoda zwraca wartość, gdy czas oczekiwania skończy, gdy jeden z uchwytów są sygnalizowane lub zostanie przekroczony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-543">This method returns when the wait terminates, either when any of the handles are signaled or when a timeout occurs.</span></span> <span data-ttu-id="e95b9-544">Jeśli więcej niż jeden obiekt staje się zasygnalizowane podczas wywołania, wartość zwracana jest indeks tablicy obiektu sygnałowego mający najmniejszą wartość indeksu sygnałowego obiektów.</span><span class="sxs-lookup"><span data-stu-id="e95b9-544">If more than one object becomes signaled during the call, the return value is the array index of the signaled object with the smallest index value of all the signaled objects.</span></span> <span data-ttu-id="e95b9-545">W niektórych implementacjach, jeśli inne, które obsługuje 64 są przekazywane <xref:System.NotSupportedException> zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="e95b9-545">On some implementations, if more that 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="e95b9-546">Uwagi dotyczące zamykania kontekstu</span><span class="sxs-lookup"><span data-stu-id="e95b9-546">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="e95b9-547">`exitContext` Parametr jest ignorowany, chyba że <xref:System.Threading.WaitHandle.WaitAny%2A> metoda jest wywoływana z wewnątrz inny niż domyślny kontekst zarządzanych.</span><span class="sxs-lookup"><span data-stu-id="e95b9-547">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.WaitAny%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="e95b9-548">Może się to zdarzyć, jeśli wątek znajduje się wewnątrz wywołania do wystąpienia klasy pochodzącej od <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="e95b9-548">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="e95b9-549">Nawet wtedy, gdy są aktualnie wykonuje metodę w klasie, która nie pochodzi od <xref:System.ContextBoundObject>, takiej jak <xref:System.String>, może być w kontekście innej niż domyślna Jeśli <xref:System.ContextBoundObject> znajduje się na stosie w bieżącej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="e95b9-549">Even if you are currently executing a method on a class that does not derive from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="e95b9-550">Gdy kod jest wykonywany w kontekście innej niż domyślna, określając `true` dla `exitContext` powoduje, że wątku zamknąć kontekstu zarządzanych inną niż domyślna (oznacza to, do którego nastąpi przejście do domyślnego kontekstu) przed wykonaniem <xref:System.Threading.WaitHandle.WaitAny%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e95b9-550">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.WaitAny%2A> method.</span></span> <span data-ttu-id="e95b9-551">Wątek jest zwracany do oryginalnego kontekstu niedomyślną po wywołaniu <xref:System.Threading.WaitHandle.WaitAny%2A> ukończeniu metody.</span><span class="sxs-lookup"><span data-stu-id="e95b9-551">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes.</span></span>  
  
 <span data-ttu-id="e95b9-552">Może to być przydatne, gdy zawiera klasy powiązane z kontekstu <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="e95b9-552">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="e95b9-553">W takim przypadku wszystkie wywołania do elementów członkowskich klasy są automatycznie synchronizowane i domena synchronizacji jest cały kod dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="e95b9-553">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="e95b9-554">Jeśli kod w stosie wywołań elementu członkowskiego wywołuje <xref:System.Threading.WaitHandle.WaitAny%2A> metody i określa `true` dla `exitContext`, wątek kończy działanie synchronizacji domeny, dzięki czemu wątek, który jest zablokowany w wywołaniu do wszystkich elementów członkowskich obiektu, aby kontynuować.</span><span class="sxs-lookup"><span data-stu-id="e95b9-554">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.WaitAny%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="e95b9-555">Gdy <xref:System.Threading.WaitHandle.WaitAny%2A> metoda zwróci wartość, wątku, który zgłosił wywołanie musi czekać ponownie domeny synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="e95b9-555">When the <xref:System.Threading.WaitHandle.WaitAny%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e95b9-556">Poniższy przykład kodu demonstruje sposób używania puli wątków jednocześnie wyszukiwania plików na wielu dyskach.</span><span class="sxs-lookup"><span data-stu-id="e95b9-556">The following code example demonstrates how to use the thread pool to simultaneously search for a file on multiple disks.</span></span> <span data-ttu-id="e95b9-557">Kwestie związane z miejsca przeszukiwany jest tylko katalog główny każdego dysku.</span><span class="sxs-lookup"><span data-stu-id="e95b9-557">For space considerations, only the root directory of each disk is searched.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitAny2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny2/CPP/source2.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitAny2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny2/CS/source2.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitAny2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny2/VB/source2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e95b9-558"><paramref name="waitHandles" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-558">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="e95b9-559">—lub—</span><span class="sxs-lookup"><span data-stu-id="e95b9-559">-or-</span></span> 
<span data-ttu-id="e95b9-560">Co najmniej jeden z obiektów w <paramref name="waitHandles" /> tablica jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-560">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e95b9-561">Liczba obiektów w <paramref name="waitHandles" /> jest większa niż zezwala na system.</span><span class="sxs-lookup"><span data-stu-id="e95b9-561">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span></span></exception>
        <exception cref="T:System.ApplicationException"><span data-ttu-id="e95b9-562"><paramref name="waitHandles" /> jest tablicą bez elementów i wersji programu .NET Framework jest w wersji 1.0 lub 1.1.</span><span class="sxs-lookup"><span data-stu-id="e95b9-562"><paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 1.0 or 1.1.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e95b9-563"><paramref name="millisecondsTimeout" /> jest liczbą ujemną od-1, który reprezentuje nieskończony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-563"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
        <exception cref="T:System.Threading.AbandonedMutexException"><span data-ttu-id="e95b9-564">Czas oczekiwania zakończyć, ponieważ wątek został zakończony bez zwalniania elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="e95b9-564">The wait completed because a thread exited without releasing a mutex.</span></span> <span data-ttu-id="e95b9-565">Ten wyjątek nie jest generowany na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="e95b9-565">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e95b9-566"><paramref name="waitHandles" /> jest tablicą bez elementów i wersji programu .NET Framework jest 2.0 lub nowszej.</span><span class="sxs-lookup"><span data-stu-id="e95b9-566"><paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 2.0 or later.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e95b9-567"><paramref name="waitHandles" /> Tablica zawiera przezroczyste serwera proxy dla <see cref="T:System.Threading.WaitHandle" /> w innej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="e95b9-567">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAny">
      <MemberSignature Language="C#" Value="public static int WaitAny (System.Threading.WaitHandle[] waitHandles, TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 WaitAny(class System.Threading.WaitHandle[] waitHandles, valuetype System.TimeSpan timeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAny (waitHandles As WaitHandle(), timeout As TimeSpan, exitContext As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int WaitAny(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="static member WaitAny : System.Threading.WaitHandle[] * TimeSpan * bool -&gt; int" Usage="System.Threading.WaitHandle.WaitAny (waitHandles, timeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="waitHandles"><span data-ttu-id="e95b9-568">A <see langword="WaitHandle" /> tablicę zawierającą obiekty, dla których będzie czekać bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e95b9-568">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span></span></param>
        <param name="timeout"><span data-ttu-id="e95b9-569">A <see cref="T:System.TimeSpan" /> reprezentujący liczbę milisekund oczekiwania, lub <see cref="T:System.TimeSpan" /> reprezentujący milisekund czekać w nieskończoność,-1.</span><span class="sxs-lookup"><span data-stu-id="e95b9-569">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <param name="exitContext"><span data-ttu-id="e95b9-570"><see langword="true" /> Aby zakończyć domeny synchronizacji dla kontekstu przed oczekiwaniem (Jeśli w kontekście zsynchronizowane), a potem; ponownie pobrać w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-570"><see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e95b9-571">Czeka na dowolne elementy w wybranej tablicy do otrzymania sygnału, za pomocą <see cref="T:System.TimeSpan" /> do określenia interwału czasu i określeniu, czy zakończyć domeny synchronizacji przed czas oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-571">Waits for any of the elements in the specified array to receive a signal, using a <see cref="T:System.TimeSpan" /> to specify the time interval and specifying whether to exit the synchronization domain before the wait.</span></span></summary>
        <returns><span data-ttu-id="e95b9-572">Indeks tablicy obiektu spełniającego oczekiwania, lub <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> Jeśli żaden obiekt nie ustali, czas oczekiwania i przedział czasu jest odpowiednikiem <paramref name="timeout" /> został przekazany.</span><span class="sxs-lookup"><span data-stu-id="e95b9-572">The array index of the object that satisfied the wait, or <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> if no object satisfied the wait and a time interval equivalent to <paramref name="timeout" /> has passed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e95b9-573">Jeśli `timeout` wynosi zero, nie są blokowane w metodzie.</span><span class="sxs-lookup"><span data-stu-id="e95b9-573">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="e95b9-574">Testuje, stan uchwytami oczekiwania i zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="e95b9-574">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="e95b9-575"><xref:System.Threading.AbandonedMutexException> jest nowa w .NET Framework w wersji 2.0.</span><span class="sxs-lookup"><span data-stu-id="e95b9-575"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e95b9-576">W poprzednich wersjach <xref:System.Threading.WaitHandle.WaitAny%2A> metoda zwraca `true` po ukończeniu czas oczekiwania, ponieważ element mutex zostanie porzucony.</span><span class="sxs-lookup"><span data-stu-id="e95b9-576">In previous versions, the <xref:System.Threading.WaitHandle.WaitAny%2A> method returns `true` if the wait completes because a mutex is abandoned.</span></span> <span data-ttu-id="e95b9-577">Porzuconego elementu mutex często oznacza to poważny błąd kodowania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-577">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="e95b9-578">W przypadku elementu mutex całego systemu może wskazywać, że aplikacja został zakończony nagle (na przykład przy użyciu Menedżera zadań Windows).</span><span class="sxs-lookup"><span data-stu-id="e95b9-578">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="e95b9-579">Wyjątek zawiera informacje przydatne podczas debugowania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-579">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="e95b9-580"><xref:System.Threading.WaitHandle.WaitAny%2A> Metoda zgłasza wyjątek <xref:System.Threading.AbandonedMutexException> tylko, gdy czas oczekiwania kończy z powodu porzuconego elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="e95b9-580">The <xref:System.Threading.WaitHandle.WaitAny%2A> method throws an <xref:System.Threading.AbandonedMutexException> only when the wait completes because of an abandoned mutex.</span></span> <span data-ttu-id="e95b9-581">Jeśli `waitHandles` zawiera wydana obiektu mutex z mniejszą liczbą indeksu niż porzuconego elementu mutex <xref:System.Threading.WaitHandle.WaitAny%2A> metoda zakończy się normalnie i nie jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="e95b9-581">If `waitHandles` contains a released mutex with a lower index number than the abandoned mutex, the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes normally and the exception is not thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e95b9-582">W wersjach programu .NET Framework wcześniejszych niż wersja 2.0, jeśli wątek zamyka lub przerywa bez jawnie zwalniania <xref:System.Threading.Mutex>oraz że `Mutex` pod indeksem 0 (zero) trwa `WaitAny` tablicy na inny wątek, wskaźnik zwracany przez `WaitAny` jest 128 zamiast 0.</span><span class="sxs-lookup"><span data-stu-id="e95b9-582">In versions of the .NET Framework earlier than version 2.0, if a thread exits or aborts without explicitly releasing a <xref:System.Threading.Mutex>, and that `Mutex` is at index 0 (zero) in a `WaitAny` array on another thread, the index returned by `WaitAny` is 128 instead of 0.</span></span>  
  
 <span data-ttu-id="e95b9-583">Ta metoda zwraca, gdy czas oczekiwania skończy, gdy jeden z uchwytów są sygnalizowane lub przekroczenia limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-583">This method returns when the wait terminates, either when any of the handles are signaled or when a time-out occurs.</span></span> <span data-ttu-id="e95b9-584">Jeśli więcej niż jeden obiekt staje się zasygnalizowane podczas wywołania, wartość zwracana jest indeks tablicy obiektu sygnałowego mający najmniejszą wartość indeksu sygnałowego obiektów.</span><span class="sxs-lookup"><span data-stu-id="e95b9-584">If more than one object becomes signaled during the call, the return value is the array index of the signaled object with the smallest index value of all the signaled objects.</span></span> <span data-ttu-id="e95b9-585">W niektórych implementacjach, jeśli inne, które obsługuje 64 są przekazywane <xref:System.NotSupportedException> zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="e95b9-585">On some implementations, if more that 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 <span data-ttu-id="e95b9-586">Maksymalna wartość `timeout` jest <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e95b9-586">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="e95b9-587">Uwagi dotyczące zamykania kontekstu</span><span class="sxs-lookup"><span data-stu-id="e95b9-587">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="e95b9-588">`exitContext` Parametr jest ignorowany, chyba że <xref:System.Threading.WaitHandle.WaitAny%2A> metoda jest wywoływana z wewnątrz inny niż domyślny kontekst zarządzanych.</span><span class="sxs-lookup"><span data-stu-id="e95b9-588">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.WaitAny%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="e95b9-589">Może się to zdarzyć, jeśli wątek znajduje się wewnątrz wywołania do wystąpienia klasy pochodzącej od <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="e95b9-589">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="e95b9-590">Nawet wtedy, gdy są aktualnie wykonuje metodę w klasie, która nie pochodzi od <xref:System.ContextBoundObject>, takiej jak <xref:System.String>, może być w kontekście innej niż domyślna Jeśli <xref:System.ContextBoundObject> znajduje się na stosie w bieżącej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="e95b9-590">Even if you are currently executing a method on a class that does not derive from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="e95b9-591">Gdy kod jest wykonywany w kontekście innej niż domyślna, określając `true` dla `exitContext` powoduje, że wątku zamknąć kontekstu zarządzanych inną niż domyślna (oznacza to, do którego nastąpi przejście do domyślnego kontekstu) przed wykonaniem <xref:System.Threading.WaitHandle.WaitAny%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e95b9-591">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.WaitAny%2A> method.</span></span> <span data-ttu-id="e95b9-592">Wątek jest zwracany do oryginalnego kontekstu niedomyślną po wywołaniu <xref:System.Threading.WaitHandle.WaitAny%2A> ukończeniu metody.</span><span class="sxs-lookup"><span data-stu-id="e95b9-592">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes.</span></span>  
  
 <span data-ttu-id="e95b9-593">Może to być przydatne, gdy zawiera klasy powiązane z kontekstu <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="e95b9-593">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="e95b9-594">W takim przypadku wszystkie wywołania do elementów członkowskich klasy są automatycznie synchronizowane i domena synchronizacji jest cały kod dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="e95b9-594">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="e95b9-595">Jeśli kod w stosie wywołań elementu członkowskiego wywołuje <xref:System.Threading.WaitHandle.WaitAny%2A> metody i określa `true` dla `exitContext`, wątek kończy działanie synchronizacji domeny, dzięki czemu wątek, który jest zablokowany w wywołaniu do wszystkich elementów członkowskich obiektu, aby kontynuować.</span><span class="sxs-lookup"><span data-stu-id="e95b9-595">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.WaitAny%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="e95b9-596">Gdy <xref:System.Threading.WaitHandle.WaitAny%2A> metoda zwróci wartość, wątku, który zgłosił wywołanie musi czekać ponownie domeny synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="e95b9-596">When the <xref:System.Threading.WaitHandle.WaitAny%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e95b9-597">Poniższy przykład kodu demonstruje sposób używania puli wątków jednocześnie wyszukiwania plików na wielu dyskach.</span><span class="sxs-lookup"><span data-stu-id="e95b9-597">The following code example demonstrates how to use the thread pool to simultaneously search for a file on multiple disks.</span></span> <span data-ttu-id="e95b9-598">Kwestie związane z miejsca przeszukiwany jest tylko katalog główny każdego dysku.</span><span class="sxs-lookup"><span data-stu-id="e95b9-598">For space considerations, only the root directory of each disk is searched.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitAny3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny3/CPP/source3.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitAny3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny3/CS/source3.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitAny3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny3/VB/source3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e95b9-599"><paramref name="waitHandles" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-599">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="e95b9-600">—lub—</span><span class="sxs-lookup"><span data-stu-id="e95b9-600">-or-</span></span> 
<span data-ttu-id="e95b9-601">Co najmniej jeden z obiektów w <paramref name="waitHandles" /> tablica jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-601">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e95b9-602">Liczba obiektów w <paramref name="waitHandles" /> jest większa niż zezwala na system.</span><span class="sxs-lookup"><span data-stu-id="e95b9-602">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span></span></exception>
        <exception cref="T:System.ApplicationException"><span data-ttu-id="e95b9-603"><paramref name="waitHandles" /> jest tablicą bez elementów i wersji programu .NET Framework jest w wersji 1.0 lub 1.1.</span><span class="sxs-lookup"><span data-stu-id="e95b9-603"><paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 1.0 or 1.1.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e95b9-604"><paramref name="timeout" /> jest to liczba ujemna innych niż milisekund wartości-1, który reprezentuje nieskończony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-604"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span></span> 
<span data-ttu-id="e95b9-605">—lub—</span><span class="sxs-lookup"><span data-stu-id="e95b9-605">-or-</span></span> 
 <span data-ttu-id="e95b9-606"><paramref name="timeout" /> jest większa niż <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-606"><paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.Threading.AbandonedMutexException"><span data-ttu-id="e95b9-607">Czas oczekiwania zakończyć, ponieważ wątek został zakończony bez zwalniania elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="e95b9-607">The wait completed because a thread exited without releasing a mutex.</span></span> <span data-ttu-id="e95b9-608">Ten wyjątek nie jest generowany na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="e95b9-608">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e95b9-609"><paramref name="waitHandles" /> jest tablicą bez elementów i wersji programu .NET Framework jest 2.0 lub nowszej.</span><span class="sxs-lookup"><span data-stu-id="e95b9-609"><paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 2.0 or later.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e95b9-610"><paramref name="waitHandles" /> Tablica zawiera przezroczyste serwera proxy dla <see cref="T:System.Threading.WaitHandle" /> w innej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="e95b9-610">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WaitOne">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e95b9-611">Blokuje bieżący wątek do bieżącego <see cref="T:System.Threading.WaitHandle" /> odbiera sygnał.</span><span class="sxs-lookup"><span data-stu-id="e95b9-611">Blocks the current thread until the current <see cref="T:System.Threading.WaitHandle" /> receives a signal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WaitOne">
      <MemberSignature Language="C#" Value="public virtual bool WaitOne ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitOne() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitOne" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WaitOne () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool WaitOne();" />
      <MemberSignature Language="F#" Value="abstract member WaitOne : unit -&gt; bool&#xA;override this.WaitOne : unit -&gt; bool" Usage="waitHandle.WaitOne " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e95b9-612">Blokuje bieżący wątek do bieżącego <see cref="T:System.Threading.WaitHandle" /> odbiera sygnał.</span><span class="sxs-lookup"><span data-stu-id="e95b9-612">Blocks the current thread until the current <see cref="T:System.Threading.WaitHandle" /> receives a signal.</span></span></summary>
        <returns><span data-ttu-id="e95b9-613"><see langword="true" /> Jeśli bieżące wystąpienie odbiera sygnał.</span><span class="sxs-lookup"><span data-stu-id="e95b9-613"><see langword="true" /> if the current instance receives a signal.</span></span> <span data-ttu-id="e95b9-614">Jeśli bieżące wystąpienie nigdy nie jest sygnalizowane, <see cref="M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)" /> nigdy nie zwraca.</span><span class="sxs-lookup"><span data-stu-id="e95b9-614">If the current instance is never signaled, <see cref="M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)" /> never returns.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e95b9-615"><xref:System.Threading.AbandonedMutexException> jest nowa w .NET Framework w wersji 2.0.</span><span class="sxs-lookup"><span data-stu-id="e95b9-615"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e95b9-616">W poprzednich wersjach <xref:System.Threading.WaitHandle.WaitOne%2A> metoda zwraca `true` po mutex zostanie porzucony.</span><span class="sxs-lookup"><span data-stu-id="e95b9-616">In previous versions, the <xref:System.Threading.WaitHandle.WaitOne%2A> method returns `true` when a mutex is abandoned.</span></span> <span data-ttu-id="e95b9-617">Porzuconego elementu mutex często oznacza to poważny błąd kodowania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-617">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="e95b9-618">W przypadku elementu mutex całego systemu może wskazywać, że aplikacja został zakończony nagle (na przykład przy użyciu Menedżera zadań Windows).</span><span class="sxs-lookup"><span data-stu-id="e95b9-618">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="e95b9-619">Wyjątek zawiera informacje przydatne podczas debugowania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-619">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="e95b9-620">Obiekt wywołujący bloków tej metody na czas nieokreślony, aż bieżące wystąpienie odbiera sygnał.</span><span class="sxs-lookup"><span data-stu-id="e95b9-620">The caller of this method blocks indefinitely until the current instance receives a signal.</span></span> <span data-ttu-id="e95b9-621">Ta metoda służy do blokowania aż <xref:System.Threading.WaitHandle> odbiera sygnał z innego wątku, takich jak jest generowany po zakończeniu operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="e95b9-621">Use this method to block until a <xref:System.Threading.WaitHandle> receives a signal from another thread, such as is generated when an asynchronous operation completes.</span></span> <span data-ttu-id="e95b9-622">Aby uzyskać więcej informacji, zobacz <xref:System.IAsyncResult> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-622">For more information, see the <xref:System.IAsyncResult> interface.</span></span>  
  
 <span data-ttu-id="e95b9-623">Wywołanie tego przeciążenia metody jest równoważne z wywoływaniem <xref:System.Threading.WaitHandle.WaitOne%28System.Int32%2CSystem.Boolean%29> przeciążenie metody i określając wartość -1 lub <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> jako pierwszy parametr i `false` dla drugiego parametru.</span><span class="sxs-lookup"><span data-stu-id="e95b9-623">Calling this method overload is equivalent to calling the <xref:System.Threading.WaitHandle.WaitOne%28System.Int32%2CSystem.Boolean%29> method overload and specifying -1 or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> for the first parameter and `false` for the second parameter.</span></span>  
  
 <span data-ttu-id="e95b9-624">Zastępuje tę metodę, aby dostosować zachowanie w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="e95b9-624">Override this method to customize the behavior of derived classes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e95b9-625">W poniższym przykładzie kodu pokazano, jak zachować procesu z przerywa podczas oczekiwania na zakończenie wykonywania wątku w tle za pomocą dojście oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-625">The following code example shows how to use a wait handle to keep a process from terminating while it waits for a background thread to finish executing.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitOne1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne1/CPP/source1.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitOne1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne1/CS/source1.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitOne1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne1/VB/source1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e95b9-626">Bieżące wystąpienie został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="e95b9-626">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.Threading.AbandonedMutexException"><span data-ttu-id="e95b9-627">Czas oczekiwania zakończyć, ponieważ wątek został zakończony bez zwalniania elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="e95b9-627">The wait completed because a thread exited without releasing a mutex.</span></span> <span data-ttu-id="e95b9-628">Ten wyjątek nie jest generowany na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="e95b9-628">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e95b9-629">Bieżące wystąpienie jest przezroczysty serwera proxy dla <see cref="T:System.Threading.WaitHandle" /> w innej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="e95b9-629">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WaitOne">
      <MemberSignature Language="C#" Value="public virtual bool WaitOne (int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitOne(int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitOne(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WaitOne (millisecondsTimeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool WaitOne(int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="abstract member WaitOne : int -&gt; bool&#xA;override this.WaitOne : int -&gt; bool" Usage="waitHandle.WaitOne millisecondsTimeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout"><span data-ttu-id="e95b9-630">Liczba milisekund, lub <see cref="F:System.Threading.Timeout.Infinite" /> (-1), aby czekać w nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="e95b9-630">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="e95b9-631">Blokuje bieżący wątek do bieżącego <see cref="T:System.Threading.WaitHandle" /> odbiera sygnał, za pomocą całkowita 32-bitowych, aby określić interwał czasu w milisekundach.</span><span class="sxs-lookup"><span data-stu-id="e95b9-631">Blocks the current thread until the current <see cref="T:System.Threading.WaitHandle" /> receives a signal, using a 32-bit signed integer to specify the time interval in milliseconds.</span></span></summary>
        <returns><span data-ttu-id="e95b9-632"><see langword="true" /> Jeśli bieżące wystąpienie odbiera sygnał; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-632"><see langword="true" /> if the current instance receives a signal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e95b9-633">Jeśli `millisecondsTimeout` wynosi zero, nie są blokowane w metodzie.</span><span class="sxs-lookup"><span data-stu-id="e95b9-633">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="e95b9-634">Testuje, stan dojście oczekiwania i zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="e95b9-634">It tests the state of the wait handle and returns immediately.</span></span>  
  
 <span data-ttu-id="e95b9-635">Występuje, obiekt wywołujący tego bloków metody, dopóki bieżącego wystąpienia otrzymuje sygnał lub limit czasu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-635">The caller of this method blocks until the current instance receives a signal or a time-out occurs.</span></span> <span data-ttu-id="e95b9-636">Ta metoda służy do blokowania aż <xref:System.Threading.WaitHandle> odbiera sygnał z innego wątku, takich jak jest generowany po zakończeniu operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="e95b9-636">Use this method to block until a <xref:System.Threading.WaitHandle> receives a signal from another thread, such as is generated when an asynchronous operation completes.</span></span> <span data-ttu-id="e95b9-637">Aby uzyskać więcej informacji, zobacz <xref:System.IAsyncResult> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-637">For more information, see the <xref:System.IAsyncResult> interface.</span></span>  
  
 <span data-ttu-id="e95b9-638">Zastępuje tę metodę, aby dostosować zachowanie w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="e95b9-638">Override this method to customize the behavior of derived classes.</span></span>  
  
 <span data-ttu-id="e95b9-639">Wywołanie tego przeciążenia metody jest taka sama jak wywołanie <xref:System.Threading.WaitHandle.WaitOne%28System.Int32%2CSystem.Boolean%29> przeciążenia i określając `false` dla `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="e95b9-639">Calling this method overload is the same as calling the <xref:System.Threading.WaitHandle.WaitOne%28System.Int32%2CSystem.Boolean%29> overload and specifying `false` for `exitContext`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e95b9-640">W poniższym przykładzie kodu pokazano, jak zachować procesu z przerywa podczas oczekiwania na zakończenie wykonywania wątku w tle za pomocą dojście oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-640">The following code example shows how to use a wait handle to keep a process from terminating while it waits for a background thread to finish executing.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitOne2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne2/CPP/source2.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitOne2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne2/CS/source2.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitOne2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne2/VB/source2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e95b9-641">Bieżące wystąpienie został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="e95b9-641">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e95b9-642"><paramref name="millisecondsTimeout" /> jest liczbą ujemną od-1, który reprezentuje nieskończony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-642"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
        <exception cref="T:System.Threading.AbandonedMutexException"><span data-ttu-id="e95b9-643">Czas oczekiwania zakończyć, ponieważ wątek został zakończony bez zwalniania elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="e95b9-643">The wait completed because a thread exited without releasing a mutex.</span></span> <span data-ttu-id="e95b9-644">Ten wyjątek nie jest generowany na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="e95b9-644">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e95b9-645">Bieżące wystąpienie jest przezroczysty serwera proxy dla <see cref="T:System.Threading.WaitHandle" /> w innej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="e95b9-645">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WaitOne">
      <MemberSignature Language="C#" Value="public virtual bool WaitOne (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitOne(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WaitOne (timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool WaitOne(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member WaitOne : TimeSpan -&gt; bool&#xA;override this.WaitOne : TimeSpan -&gt; bool" Usage="waitHandle.WaitOne timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="e95b9-646">A <see cref="T:System.TimeSpan" /> reprezentujący liczbę milisekund oczekiwania, lub <see cref="T:System.TimeSpan" /> reprezentujący milisekund czekać w nieskończoność,-1.</span><span class="sxs-lookup"><span data-stu-id="e95b9-646">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="e95b9-647">Blokuje bieżący wątek, aż bieżące wystąpienie odbiera sygnał, za pomocą <see cref="T:System.TimeSpan" /> do określenia interwału czasu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-647">Blocks the current thread until the current instance receives a signal, using a <see cref="T:System.TimeSpan" /> to specify the time interval.</span></span></summary>
        <returns><span data-ttu-id="e95b9-648"><see langword="true" /> Jeśli bieżące wystąpienie odbiera sygnał; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-648"><see langword="true" /> if the current instance receives a signal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e95b9-649">Jeśli `timeout` wynosi zero, nie są blokowane w metodzie.</span><span class="sxs-lookup"><span data-stu-id="e95b9-649">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="e95b9-650">Testuje, stan dojście oczekiwania i zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="e95b9-650">It tests the state of the wait handle and returns immediately.</span></span>  
  
 <span data-ttu-id="e95b9-651">Występuje, obiekt wywołujący tego bloków metody, dopóki bieżącego wystąpienia otrzymuje sygnał lub limit czasu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-651">The caller of this method blocks until the current instance receives a signal or a time-out occurs.</span></span> <span data-ttu-id="e95b9-652">Ta metoda służy do blokowania aż <xref:System.Threading.WaitHandle> odbiera sygnał z innego wątku, takich jak jest generowany po zakończeniu operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="e95b9-652">Use this method to block until a <xref:System.Threading.WaitHandle> receives a signal from another thread, such as is generated when an asynchronous operation completes.</span></span> <span data-ttu-id="e95b9-653">Aby uzyskać więcej informacji, zobacz <xref:System.IAsyncResult> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-653">For more information, see the <xref:System.IAsyncResult> interface.</span></span>  
  
 <span data-ttu-id="e95b9-654">Zastępuje tę metodę, aby dostosować zachowanie w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="e95b9-654">Override this method to customize the behavior of derived classes.</span></span>  
  
 <span data-ttu-id="e95b9-655">Maksymalna wartość `timeout` jest <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e95b9-655">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="e95b9-656">Wywołanie tego przeciążenia metody jest taka sama jak wywołanie <xref:System.Threading.WaitHandle.WaitOne%28System.TimeSpan%2CSystem.Boolean%29> przeciążenia i określając `false` dla `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="e95b9-656">Calling this method overload is the same as calling the <xref:System.Threading.WaitHandle.WaitOne%28System.TimeSpan%2CSystem.Boolean%29> overload and specifying `false` for `exitContext`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e95b9-657">Bieżące wystąpienie został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="e95b9-657">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e95b9-658"><paramref name="timeout" /> jest to liczba ujemna innych niż milisekund wartości-1, który reprezentuje nieskończony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-658"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span></span> 
<span data-ttu-id="e95b9-659">—lub—</span><span class="sxs-lookup"><span data-stu-id="e95b9-659">-or-</span></span> 
 <span data-ttu-id="e95b9-660"><paramref name="timeout" /> jest większa niż <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-660"><paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.Threading.AbandonedMutexException"><span data-ttu-id="e95b9-661">Czas oczekiwania zakończyć, ponieważ wątek został zakończony bez zwalniania elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="e95b9-661">The wait completed because a thread exited without releasing a mutex.</span></span> <span data-ttu-id="e95b9-662">Ten wyjątek nie jest generowany na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="e95b9-662">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e95b9-663">Bieżące wystąpienie jest przezroczysty serwera proxy dla <see cref="T:System.Threading.WaitHandle" /> w innej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="e95b9-663">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WaitOne">
      <MemberSignature Language="C#" Value="public virtual bool WaitOne (int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitOne(int32 millisecondsTimeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WaitOne (millisecondsTimeout As Integer, exitContext As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool WaitOne(int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="abstract member WaitOne : int * bool -&gt; bool&#xA;override this.WaitOne : int * bool -&gt; bool" Usage="waitHandle.WaitOne (millisecondsTimeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout"><span data-ttu-id="e95b9-664">Liczba milisekund, lub <see cref="F:System.Threading.Timeout.Infinite" /> (-1), aby czekać w nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="e95b9-664">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span></span></param>
        <param name="exitContext"><span data-ttu-id="e95b9-665"><see langword="true" /> Aby zakończyć domeny synchronizacji dla kontekstu przed oczekiwaniem (Jeśli w kontekście zsynchronizowane), a potem; ponownie pobrać w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-665"><see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e95b9-666">Blokuje bieżący wątek do bieżącego <see cref="T:System.Threading.WaitHandle" /> odbiera sygnał, przy użyciu całkowita 32-bitowych, aby określić interwał czasu i określeniu, czy zakończyć domeny synchronizacji przed czas oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-666">Blocks the current thread until the current <see cref="T:System.Threading.WaitHandle" /> receives a signal, using a 32-bit signed integer to specify the time interval and specifying whether to exit the synchronization domain before the wait.</span></span></summary>
        <returns><span data-ttu-id="e95b9-667"><see langword="true" /> Jeśli bieżące wystąpienie odbiera sygnał; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-667"><see langword="true" /> if the current instance receives a signal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e95b9-668">Jeśli `millisecondsTimeout` wynosi zero, nie są blokowane w metodzie.</span><span class="sxs-lookup"><span data-stu-id="e95b9-668">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="e95b9-669">Testuje, stan dojście oczekiwania i zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="e95b9-669">It tests the state of the wait handle and returns immediately.</span></span>  
  
 <span data-ttu-id="e95b9-670"><xref:System.Threading.AbandonedMutexException> jest nowa w .NET Framework w wersji 2.0.</span><span class="sxs-lookup"><span data-stu-id="e95b9-670"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e95b9-671">W poprzednich wersjach <xref:System.Threading.WaitHandle.WaitOne%2A> metoda zwraca `true` po mutex zostanie porzucony.</span><span class="sxs-lookup"><span data-stu-id="e95b9-671">In previous versions, the <xref:System.Threading.WaitHandle.WaitOne%2A> method returns `true` when a mutex is abandoned.</span></span> <span data-ttu-id="e95b9-672">Porzuconego elementu mutex często oznacza to poważny błąd kodowania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-672">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="e95b9-673">W przypadku elementu mutex całego systemu może wskazywać, że aplikacja został zakończony nagle (na przykład przy użyciu Menedżera zadań Windows).</span><span class="sxs-lookup"><span data-stu-id="e95b9-673">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="e95b9-674">Wyjątek zawiera informacje przydatne podczas debugowania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-674">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="e95b9-675">Występuje, obiekt wywołujący tego bloków metody, dopóki bieżącego wystąpienia otrzymuje sygnał lub limit czasu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-675">The caller of this method blocks until the current instance receives a signal or a time-out occurs.</span></span> <span data-ttu-id="e95b9-676">Ta metoda służy do blokowania aż <xref:System.Threading.WaitHandle> odbiera sygnał z innego wątku, takich jak jest generowany po zakończeniu operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="e95b9-676">Use this method to block until a <xref:System.Threading.WaitHandle> receives a signal from another thread, such as is generated when an asynchronous operation completes.</span></span> <span data-ttu-id="e95b9-677">Aby uzyskać więcej informacji, zobacz <xref:System.IAsyncResult> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-677">For more information, see the <xref:System.IAsyncResult> interface.</span></span>  
  
 <span data-ttu-id="e95b9-678">Zastępuje tę metodę, aby dostosować zachowanie w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="e95b9-678">Override this method to customize the behavior of derived classes.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="e95b9-679">Uwagi dotyczące zamykania kontekstu</span><span class="sxs-lookup"><span data-stu-id="e95b9-679">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="e95b9-680">`exitContext` Parametr jest ignorowany, chyba że <xref:System.Threading.WaitHandle.WaitOne%2A> metoda jest wywoływana z wewnątrz inny niż domyślny kontekst zarządzanych.</span><span class="sxs-lookup"><span data-stu-id="e95b9-680">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.WaitOne%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="e95b9-681">Może się to zdarzyć, jeśli wątek znajduje się wewnątrz wywołania do wystąpienia klasy pochodzącej od <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="e95b9-681">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="e95b9-682">Nawet wtedy, gdy są aktualnie wykonuje metodę w klasie, która nie pochodzi od <xref:System.ContextBoundObject>, takiej jak <xref:System.String>, może być w kontekście innej niż domyślna Jeśli <xref:System.ContextBoundObject> znajduje się na stosie w bieżącej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="e95b9-682">Even if you are currently executing a method on a class that does not derive from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="e95b9-683">Gdy kod jest wykonywany w kontekście innej niż domyślna, określając `true` dla `exitContext` powoduje, że wątku zamknąć kontekstu zarządzanych inną niż domyślna (oznacza to, do którego nastąpi przejście do domyślnego kontekstu) przed wykonaniem <xref:System.Threading.WaitHandle.WaitOne%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e95b9-683">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span> <span data-ttu-id="e95b9-684">Wątek jest zwracany do oryginalnego kontekstu niedomyślną po wywołaniu <xref:System.Threading.WaitHandle.WaitOne%2A> ukończeniu metody.</span><span class="sxs-lookup"><span data-stu-id="e95b9-684">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.WaitOne%2A> method completes.</span></span>  
  
 <span data-ttu-id="e95b9-685">Może to być przydatne, gdy zawiera klasy powiązane z kontekstu <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="e95b9-685">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="e95b9-686">W takim przypadku wszystkie wywołania do elementów członkowskich klasy są automatycznie synchronizowane i domena synchronizacji jest cały kod dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="e95b9-686">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="e95b9-687">Jeśli kod w stosie wywołań elementu członkowskiego wywołuje <xref:System.Threading.WaitHandle.WaitOne%2A> metody i określa `true` dla `exitContext`, wątek kończy działanie synchronizacji domeny, dzięki czemu wątek, który jest zablokowany w wywołaniu do wszystkich elementów członkowskich obiektu, aby kontynuować.</span><span class="sxs-lookup"><span data-stu-id="e95b9-687">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.WaitOne%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="e95b9-688">Gdy <xref:System.Threading.WaitHandle.WaitOne%2A> metoda zwróci wartość, wątku, który zgłosił wywołanie musi czekać ponownie domeny synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="e95b9-688">When the <xref:System.Threading.WaitHandle.WaitOne%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e95b9-689">W poniższym przykładzie pokazano sposób, w jaki <xref:System.Threading.WaitHandle.WaitOne%28System.Int32%2CSystem.Boolean%29> przeciążenie metody zachowuje się wywołanego w ramach domeny synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="e95b9-689">The following example shows how the <xref:System.Threading.WaitHandle.WaitOne%28System.Int32%2CSystem.Boolean%29> method overload behaves when it is called within a synchronization domain.</span></span> <span data-ttu-id="e95b9-690">Po pierwsze, wątek czeka z `exitContext` równa `false` i blokuje, dopóki nie upłynie limit czasu oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-690">First, a thread waits with `exitContext` set to `false` and blocks until the wait timeout expires.</span></span> <span data-ttu-id="e95b9-691">Drugi wątek wykonuje po pierwszym wątek kończy działanie i czeka z `exitContext` równa `true`.</span><span class="sxs-lookup"><span data-stu-id="e95b9-691">A second thread executes after the first thread terminates and waits with `exitContext` set to `true`.</span></span> <span data-ttu-id="e95b9-692">Wywołanie w celu sygnalizowania, że dojście oczekiwania dla tego drugiego wątku nie jest zablokowany, a wątek kończy się przed upływem limitu czasu oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-692">The call to signal the wait handle for this second thread is not blocked, and the thread completes before the wait timeout.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitOne4#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.threading.waithandle.waitone4/cpp/source.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitOne4#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.waithandle.waitone4/cs/source.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitOne4#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.waithandle.waitone4/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e95b9-693">Bieżące wystąpienie został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="e95b9-693">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e95b9-694"><paramref name="millisecondsTimeout" /> jest liczbą ujemną od-1, który reprezentuje nieskończony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-694"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
        <exception cref="T:System.Threading.AbandonedMutexException"><span data-ttu-id="e95b9-695">Czas oczekiwania zakończyć, ponieważ wątek został zakończony bez zwalniania elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="e95b9-695">The wait completed because a thread exited without releasing a mutex.</span></span> <span data-ttu-id="e95b9-696">Ten wyjątek nie jest generowany na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="e95b9-696">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e95b9-697">Bieżące wystąpienie jest przezroczysty serwera proxy dla <see cref="T:System.Threading.WaitHandle" /> w innej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="e95b9-697">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WaitOne">
      <MemberSignature Language="C#" Value="public virtual bool WaitOne (TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitOne(valuetype System.TimeSpan timeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WaitOne (timeout As TimeSpan, exitContext As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool WaitOne(TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="abstract member WaitOne : TimeSpan * bool -&gt; bool&#xA;override this.WaitOne : TimeSpan * bool -&gt; bool" Usage="waitHandle.WaitOne (timeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="e95b9-698">A <see cref="T:System.TimeSpan" /> reprezentujący liczbę milisekund oczekiwania, lub <see cref="T:System.TimeSpan" /> reprezentujący milisekund czekać w nieskończoność,-1.</span><span class="sxs-lookup"><span data-stu-id="e95b9-698">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <param name="exitContext"><span data-ttu-id="e95b9-699"><see langword="true" /> Aby zakończyć domeny synchronizacji dla kontekstu przed oczekiwaniem (Jeśli w kontekście zsynchronizowane), a potem; ponownie pobrać w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-699"><see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e95b9-700">Blokuje bieżący wątek, aż bieżące wystąpienie odbiera sygnał, za pomocą <see cref="T:System.TimeSpan" /> do określenia interwału czasu i określeniu, czy zakończyć domeny synchronizacji przed czas oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-700">Blocks the current thread until the current instance receives a signal, using a <see cref="T:System.TimeSpan" /> to specify the time interval and specifying whether to exit the synchronization domain before the wait.</span></span></summary>
        <returns><span data-ttu-id="e95b9-701"><see langword="true" /> Jeśli bieżące wystąpienie odbiera sygnał; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-701"><see langword="true" /> if the current instance receives a signal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e95b9-702">Jeśli `timeout` wynosi zero, nie są blokowane w metodzie.</span><span class="sxs-lookup"><span data-stu-id="e95b9-702">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="e95b9-703">Testuje, stan dojście oczekiwania i zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="e95b9-703">It tests the state of the wait handle and returns immediately.</span></span>  
  
 <span data-ttu-id="e95b9-704"><xref:System.Threading.AbandonedMutexException> jest nowa w .NET Framework w wersji 2.0.</span><span class="sxs-lookup"><span data-stu-id="e95b9-704"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e95b9-705">W poprzednich wersjach <xref:System.Threading.WaitHandle.WaitOne%2A> metoda zwraca `true` po mutex zostanie porzucony.</span><span class="sxs-lookup"><span data-stu-id="e95b9-705">In previous versions, the <xref:System.Threading.WaitHandle.WaitOne%2A> method returns `true` when a mutex is abandoned.</span></span> <span data-ttu-id="e95b9-706">Porzuconego elementu mutex często oznacza to poważny błąd kodowania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-706">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="e95b9-707">W przypadku elementu mutex całego systemu może wskazywać, że aplikacja został zakończony nagle (na przykład przy użyciu Menedżera zadań Windows).</span><span class="sxs-lookup"><span data-stu-id="e95b9-707">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="e95b9-708">Wyjątek zawiera informacje przydatne podczas debugowania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-708">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="e95b9-709">Występuje, obiekt wywołujący tego bloków metody, dopóki bieżącego wystąpienia otrzymuje sygnał lub limit czasu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-709">The caller of this method blocks until the current instance receives a signal or a time-out occurs.</span></span> <span data-ttu-id="e95b9-710">Ta metoda służy do blokowania aż <xref:System.Threading.WaitHandle> odbiera sygnał z innego wątku, takich jak jest generowany po zakończeniu operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="e95b9-710">Use this method to block until a <xref:System.Threading.WaitHandle> receives a signal from another thread, such as is generated when an asynchronous operation completes.</span></span> <span data-ttu-id="e95b9-711">Aby uzyskać więcej informacji, zobacz <xref:System.IAsyncResult> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-711">For more information, see the <xref:System.IAsyncResult> interface.</span></span>  
  
 <span data-ttu-id="e95b9-712">Zastępuje tę metodę, aby dostosować zachowanie w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="e95b9-712">Override this method to customize the behavior of derived classes.</span></span>  
  
 <span data-ttu-id="e95b9-713">Maksymalna wartość `timeout` jest <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e95b9-713">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="e95b9-714">Uwagi dotyczące zamykania kontekstu</span><span class="sxs-lookup"><span data-stu-id="e95b9-714">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="e95b9-715">`exitContext` Parametr jest ignorowany, chyba że <xref:System.Threading.WaitHandle.WaitOne%2A> metoda jest wywoływana z wewnątrz inny niż domyślny kontekst zarządzanych.</span><span class="sxs-lookup"><span data-stu-id="e95b9-715">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.WaitOne%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="e95b9-716">Może się to zdarzyć, jeśli wątek znajduje się wewnątrz wywołania do wystąpienia klasy pochodzącej od <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="e95b9-716">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="e95b9-717">Nawet wtedy, gdy są aktualnie wykonuje metodę w klasie, która nie pochodzi od <xref:System.ContextBoundObject>, takiej jak <xref:System.String>, może być w kontekście innej niż domyślna Jeśli <xref:System.ContextBoundObject> znajduje się na stosie w bieżącej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="e95b9-717">Even if you are currently executing a method on a class that does not derive from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="e95b9-718">Gdy kod jest wykonywany w kontekście innej niż domyślna, określając `true` dla `exitContext` powoduje, że wątku zamknąć kontekstu zarządzanych inną niż domyślna (oznacza to, do którego nastąpi przejście do domyślnego kontekstu) przed wykonaniem <xref:System.Threading.WaitHandle.WaitOne%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e95b9-718">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span> <span data-ttu-id="e95b9-719">Wątek jest zwracany do oryginalnego kontekstu niedomyślną po wywołaniu <xref:System.Threading.WaitHandle.WaitOne%2A> ukończeniu metody.</span><span class="sxs-lookup"><span data-stu-id="e95b9-719">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.WaitOne%2A> method completes.</span></span>  
  
 <span data-ttu-id="e95b9-720">Może to być przydatne, gdy zawiera klasy powiązane z kontekstu <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="e95b9-720">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="e95b9-721">W takim przypadku wszystkie wywołania do elementów członkowskich klasy są automatycznie synchronizowane i domena synchronizacji jest cały kod dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="e95b9-721">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="e95b9-722">Jeśli kod w stosie wywołań elementu członkowskiego wywołuje <xref:System.Threading.WaitHandle.WaitOne%2A> metody i określa `true` dla `exitContext`, wątek kończy działanie synchronizacji domeny, dzięki czemu wątek, który jest zablokowany w wywołaniu do wszystkich elementów członkowskich obiektu, aby kontynuować.</span><span class="sxs-lookup"><span data-stu-id="e95b9-722">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.WaitOne%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="e95b9-723">Gdy <xref:System.Threading.WaitHandle.WaitOne%2A> metoda zwróci wartość, wątku, który zgłosił wywołanie musi czekać ponownie domeny synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="e95b9-723">When the <xref:System.Threading.WaitHandle.WaitOne%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e95b9-724">W poniższym przykładzie kodu pokazano, jak zachować procesu z przerywa podczas oczekiwania na zakończenie wykonywania wątku w tle za pomocą dojście oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="e95b9-724">The following code example shows how to use a wait handle to keep a process from terminating while it waits for a background thread to finish executing.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitOne3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne3/CPP/source3.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitOne3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne3/CS/source3.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitOne3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne3/VB/source3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e95b9-725">Bieżące wystąpienie został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="e95b9-725">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e95b9-726"><paramref name="timeout" /> jest to liczba ujemna innych niż milisekund wartości-1, który reprezentuje nieskończony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="e95b9-726"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span></span> 
<span data-ttu-id="e95b9-727">—lub—</span><span class="sxs-lookup"><span data-stu-id="e95b9-727">-or-</span></span> 
 <span data-ttu-id="e95b9-728"><paramref name="timeout" /> jest większa niż <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="e95b9-728"><paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.Threading.AbandonedMutexException"><span data-ttu-id="e95b9-729">Czas oczekiwania zakończyć, ponieważ wątek został zakończony bez zwalniania elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="e95b9-729">The wait completed because a thread exited without releasing a mutex.</span></span> <span data-ttu-id="e95b9-730">Ten wyjątek nie jest generowany na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="e95b9-730">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e95b9-731">Bieżące wystąpienie jest przezroczysty serwera proxy dla <see cref="T:System.Threading.WaitHandle" /> w innej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="e95b9-731">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WaitTimeout">
      <MemberSignature Language="C#" Value="public const int WaitTimeout = 258;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 WaitTimeout = (258)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.WaitHandle.WaitTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Const WaitTimeout As Integer  = 258" />
      <MemberSignature Language="C++ CLI" Value="public: int WaitTimeout = 258;" />
      <MemberSignature Language="F#" Value="val mutable WaitTimeout : int" Usage="System.Threading.WaitHandle.WaitTimeout" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>258</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e95b9-732">Oznacza to, że <see cref="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)" /> upłynął limit czasu operacji przed dowolnego z uchwytami oczekiwania zostały zasygnalizowane.</span><span class="sxs-lookup"><span data-stu-id="e95b9-732">Indicates that a <see cref="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)" /> operation timed out before any of the wait handles were signaled.</span></span> <span data-ttu-id="e95b9-733">To pole jest stałe.</span><span class="sxs-lookup"><span data-stu-id="e95b9-733">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e95b9-734">To pole jest jedną z możliwych wartości zwracanych z `WaitAny`.</span><span class="sxs-lookup"><span data-stu-id="e95b9-734">This field is one of the possible return values of `WaitAny`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e95b9-735">Poniższy przykład kodu demonstruje sposób używania puli wątków jednocześnie wyszukiwania plików na wielu dyskach.</span><span class="sxs-lookup"><span data-stu-id="e95b9-735">The following code example demonstrates how to use the thread pool to simultaneously search for a file on multiple disks.</span></span> <span data-ttu-id="e95b9-736">Kwestie związane z miejsca przeszukiwany jest tylko katalog główny każdego dysku.</span><span class="sxs-lookup"><span data-stu-id="e95b9-736">For space considerations, only the root directory of each disk is searched.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitAny2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny2/CPP/source2.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitAny2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny2/CS/source2.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitAny2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny2/VB/source2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>