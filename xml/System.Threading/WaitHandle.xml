<Type Name="WaitHandle" FullName="System.Threading.WaitHandle">
  <Metadata><Meta Name="ms.openlocfilehash" Value="046aa46d0a3da304f9348792a16e1353c5fa4596" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56403034" /></Metadata><TypeSignature Language="C#" Value="public abstract class WaitHandle : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi abstract beforefieldinit WaitHandle extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.WaitHandle" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WaitHandle&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WaitHandle abstract : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type WaitHandle = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8646c-101">Hermetyzuje obiektów specyficznych dla systemu operacyjnego, które poczekaj, aż wyłącznego dostępu do udostępnionych zasobów.</span><span class="sxs-lookup"><span data-stu-id="8646c-101">Encapsulates operating system-specific objects that wait for exclusive access to shared resources.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8646c-102"><xref:System.Threading.WaitHandle> Klasa hermetyzuje dojście synchronizacji macierzystego systemu operacyjnego i jest używana do reprezentowania wszystkich obiektów synchronizacji w środowisku uruchomieniowym, zezwalających na wiele operacji oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="8646c-102">The <xref:System.Threading.WaitHandle> class encapsulates a native operating system synchronization handle and is used to represent all synchronization objects in the runtime that allow multiple wait operations.</span></span> <span data-ttu-id="8646c-103">Dla porównania uchwytami oczekiwania z innymi obiektami synchronizacji, zobacz [Przegląd podstawowych synchronizacji](~/docs/standard/threading/overview-of-synchronization-primitives.md).</span><span class="sxs-lookup"><span data-stu-id="8646c-103">For a comparison of wait handles with other synchronization objects, see [Overview of Synchronization Primitives](~/docs/standard/threading/overview-of-synchronization-primitives.md).</span></span>  
  
 <span data-ttu-id="8646c-104"><xref:System.Threading.WaitHandle> Sama klasa jest abstrakcyjna.</span><span class="sxs-lookup"><span data-stu-id="8646c-104">The <xref:System.Threading.WaitHandle> class itself is abstract.</span></span> <span data-ttu-id="8646c-105">Klasy pochodne <xref:System.Threading.WaitHandle> zdefiniowanie sygnalizowanie zasad, aby wskazać, biorąc lub zwalnianie dostęp do udostępnionego zasobu, ale używają dziedziczonego <xref:System.Threading.WaitHandle> metody, aby zablokować podczas oczekiwania na dostęp do zasobów udostępnionych.</span><span class="sxs-lookup"><span data-stu-id="8646c-105">Classes derived from <xref:System.Threading.WaitHandle> define a signaling mechanism to indicate taking or releasing access to a shared resource, but they use the inherited <xref:System.Threading.WaitHandle> methods to block while waiting for access to shared resources.</span></span> <span data-ttu-id="8646c-106">Klasy pochodne <xref:System.Threading.WaitHandle> obejmują:</span><span class="sxs-lookup"><span data-stu-id="8646c-106">The classes derived from <xref:System.Threading.WaitHandle> include:</span></span>  
  
-   <span data-ttu-id="8646c-107"><xref:System.Threading.Mutex> Klasy.</span><span class="sxs-lookup"><span data-stu-id="8646c-107">The <xref:System.Threading.Mutex> class.</span></span> <span data-ttu-id="8646c-108">Zobacz [muteksy](~/docs/standard/threading/mutexes.md).</span><span class="sxs-lookup"><span data-stu-id="8646c-108">See [Mutexes](~/docs/standard/threading/mutexes.md).</span></span>  
  
-   <span data-ttu-id="8646c-109"><xref:System.Threading.EventWaitHandle> Klasa i jej klasy pochodne <xref:System.Threading.AutoResetEvent> i <xref:System.Threading.ManualResetEvent>.</span><span class="sxs-lookup"><span data-stu-id="8646c-109">The <xref:System.Threading.EventWaitHandle> class and its derived classes, <xref:System.Threading.AutoResetEvent> and <xref:System.Threading.ManualResetEvent>.</span></span>  
  
-   <span data-ttu-id="8646c-110"><xref:System.Threading.Semaphore> Klasy.</span><span class="sxs-lookup"><span data-stu-id="8646c-110">The <xref:System.Threading.Semaphore> class.</span></span> <span data-ttu-id="8646c-111">Zobacz [Semaphore i SemaphoreSlim](~/docs/standard/threading/semaphore-and-semaphoreslim.md).</span><span class="sxs-lookup"><span data-stu-id="8646c-111">See [Semaphore and SemaphoreSlim](~/docs/standard/threading/semaphore-and-semaphoreslim.md).</span></span>  
  
 <span data-ttu-id="8646c-112">Wątki, można zablokować na dojście oczekiwania poszczególnych przez wywołanie metody wystąpienia <xref:System.Threading.WaitHandle.WaitOne%2A>, który jest dziedziczone przez klasy pochodne <xref:System.Threading.WaitHandle>.</span><span class="sxs-lookup"><span data-stu-id="8646c-112">Threads can block on an individual wait handle by calling the instance method <xref:System.Threading.WaitHandle.WaitOne%2A>, which is inherited by classes derived from <xref:System.Threading.WaitHandle>.</span></span>  
  
 <span data-ttu-id="8646c-113">Klasy pochodne z <xref:System.Threading.WaitHandle> różnią się w ich koligacji wątku.</span><span class="sxs-lookup"><span data-stu-id="8646c-113">The derived classes of <xref:System.Threading.WaitHandle> differ in their thread affinity.</span></span> <span data-ttu-id="8646c-114">Uchwyty oczekiwania zdarzeń (<xref:System.Threading.EventWaitHandle>, <xref:System.Threading.AutoResetEvent>, i <xref:System.Threading.ManualResetEvent>) i semaforów nie mają koligacji wątku; wątek może sygnał dojście oczekiwania zdarzeń lub semafor.</span><span class="sxs-lookup"><span data-stu-id="8646c-114">Event wait handles (<xref:System.Threading.EventWaitHandle>, <xref:System.Threading.AutoResetEvent>, and <xref:System.Threading.ManualResetEvent>) and semaphores do not have thread affinity; any thread can signal an event wait handle or semaphore.</span></span> <span data-ttu-id="8646c-115">Muteksy, z drugiej strony, pozostają w koligacji wątku; Wątek, który jest właścicielem obiektu mutex musi zwolnić go, a wyjątek jest generowany, jeśli wątek wywołuje <xref:System.Threading.Mutex.ReleaseMutex%2A> metody na element mutex, który nie jest właścicielem.</span><span class="sxs-lookup"><span data-stu-id="8646c-115">Mutexes, on the other hand, do have thread affinity; the thread that owns a mutex must release it, and an exception is thrown if a thread calls the <xref:System.Threading.Mutex.ReleaseMutex%2A> method on a mutex that it does not own.</span></span>  
  
 <span data-ttu-id="8646c-116">Ponieważ <xref:System.Threading.WaitHandle> klasa pochodzi od <xref:System.MarshalByRefObject>, te klasy mogą być używane do synchronizowania działania wątków poza granice domeny aplikacji.</span><span class="sxs-lookup"><span data-stu-id="8646c-116">Because the <xref:System.Threading.WaitHandle> class derives from <xref:System.MarshalByRefObject>, these classes can be used to synchronize the activities of threads across application domain boundaries.</span></span>  
  
 <span data-ttu-id="8646c-117">Oprócz jej klasy pochodne <xref:System.Threading.WaitHandle> klasa ma szereg metod statycznych, które blokują wątek, dopóki jedna lub więcej obiektów synchronizacji odebrania sygnału.</span><span class="sxs-lookup"><span data-stu-id="8646c-117">In addition to its derived classes, the <xref:System.Threading.WaitHandle> class has a number of static methods that block a thread until one or more synchronization objects receive a signal.</span></span> <span data-ttu-id="8646c-118">Należą do nich następujące elementy:</span><span class="sxs-lookup"><span data-stu-id="8646c-118">These include:</span></span>  
  
-   <span data-ttu-id="8646c-119"><xref:System.Threading.WaitHandle.SignalAndWait%2A>, co pozwala wątku w celu zasygnalizowania określonego dojścia oczekiwania i natychmiast czekać na innym.</span><span class="sxs-lookup"><span data-stu-id="8646c-119"><xref:System.Threading.WaitHandle.SignalAndWait%2A>, which allows a thread to signal one wait handle and immediately wait on another.</span></span>  
  
-   <span data-ttu-id="8646c-120"><xref:System.Threading.WaitHandle.WaitAll%2A>, pozwalający wątku, poczekać, aż wszystkie dojścia oczekiwania w tablicy odbioru sygnału.</span><span class="sxs-lookup"><span data-stu-id="8646c-120"><xref:System.Threading.WaitHandle.WaitAll%2A>, which allows a thread to wait until all the wait handles in an array receive a signal.</span></span>  
  
-   <span data-ttu-id="8646c-121"><xref:System.Threading.WaitHandle.WaitAny%2A>, pozwalający wątku, poczekać, aż zasygnalizują któregokolwiek z określonego zestawu dojść oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="8646c-121"><xref:System.Threading.WaitHandle.WaitAny%2A>, which allows a thread to wait until any one of a specified set of wait handles has been signaled.</span></span>  
  
 <span data-ttu-id="8646c-122">Przeciążenia metody te zawierają interwałów limitu czasu dla porzucenie czas oczekiwania i możliwość zamknąć kontekstu synchronizacji przed wejściem czas oczekiwania, dzięki czemu inne wątki używać kontekstu synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="8646c-122">The overloads of these methods provide timeout intervals for abandoning the wait, and the opportunity to exit a synchronization context before entering the wait, allowing other threads to use the synchronization context.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8646c-123">Ten typ implementuje <xref:System.IDisposable> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="8646c-123">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="8646c-124">Po zakończeniu przy użyciu typu lub typ pochodzący od niego bezpośrednio lub pośrednio należy usunąć z niej.</span><span class="sxs-lookup"><span data-stu-id="8646c-124">When you have finished using the type or a type derived from it, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="8646c-125">Do usuwania tego typu, należy wywołać jej <xref:System.Threading.WaitHandle.Close%2A> method in Class metoda `try` / `catch` bloku.</span><span class="sxs-lookup"><span data-stu-id="8646c-125">To dispose of the type directly, call its <xref:System.Threading.WaitHandle.Close%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="8646c-126">Aby usunąć ją pośrednio, użyj konstrukcją języka pierwszej klasy takiej jak `using` (w języku C#) lub `Using` (w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="8646c-126">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="8646c-127">Aby uzyskać więcej informacji, zobacz sekcję "Przy użyciu obiektu który implementuje interfejs IDisposable" w <xref:System.IDisposable> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="8646c-127">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="8646c-128"><xref:System.Threading.WaitHandle> implementuje <xref:System.IDisposable.Dispose%2A> wzorca.</span><span class="sxs-lookup"><span data-stu-id="8646c-128"><xref:System.Threading.WaitHandle> implements the <xref:System.IDisposable.Dispose%2A> pattern.</span></span> <span data-ttu-id="8646c-129">Zobacz temat [Implementowanie](~/docs/standard/garbage-collection/implementing-dispose.md) metody Dispose.</span><span class="sxs-lookup"><span data-stu-id="8646c-129">See [Implementing a Dispose method](~/docs/standard/garbage-collection/implementing-dispose .md).</span></span> <span data-ttu-id="8646c-130">Po utworzeniu klasy pochodnej z <xref:System.Threading.WaitHandle>, użyj <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> właściwość, aby przechowywać swoje dojście macierzystego systemu operacyjnego.</span><span class="sxs-lookup"><span data-stu-id="8646c-130">When you derive from <xref:System.Threading.WaitHandle>, use the <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> property to store your native operating system handle.</span></span> <span data-ttu-id="8646c-131">Nie trzeba zastąpić chronionego <xref:System.Threading.WaitHandle.Dispose%2A> metoda chyba że są używane dodatkowe zasoby niezarządzane.</span><span class="sxs-lookup"><span data-stu-id="8646c-131">You do not need to override the protected <xref:System.Threading.WaitHandle.Dispose%2A> method unless you use additional unmanaged resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8646c-132">Poniższy kod przedstawia przykład jak dwa wątki mogą wykonaj zadania w tle podczas główny wątek czeka na zadania do wykonania przy użyciu statycznych <xref:System.Threading.WaitHandle.WaitAny%2A> i <xref:System.Threading.WaitHandle.WaitAll%2A> metody <xref:System.Threading.WaitHandle> klasy.</span><span class="sxs-lookup"><span data-stu-id="8646c-132">The following code example shows how two threads can do background tasks while the Main thread waits for the tasks to complete using the static <xref:System.Threading.WaitHandle.WaitAny%2A> and <xref:System.Threading.WaitHandle.WaitAll%2A> methods of the <xref:System.Threading.WaitHandle> class.</span></span>  
  
 [!code-cpp[WaitHandle#1](~/samples/snippets/cpp/VS_Snippets_CLR/WaitHandle/cpp/WaitHandle.cpp#1)]
 [!code-csharp[WaitHandle#1](~/samples/snippets/csharp/VS_Snippets_CLR/WaitHandle/CS/WaitHandle.cs#1)]
 [!code-vb[WaitHandle#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/WaitHandle/VB/WaitHandle.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="8646c-133">Ten typ jest bezpieczny wątkowo.</span><span class="sxs-lookup"><span data-stu-id="8646c-133">This type is thread safe.</span></span></threadsafe>
    <related type="Article" href="~/docs/standard/threading/index.md"><span data-ttu-id="8646c-134">Wątkowość</span><span class="sxs-lookup"><span data-stu-id="8646c-134">Threading</span></span></related>
    <related type="Article" href="~/docs/standard/threading/threading-objects-and-features.md"><span data-ttu-id="8646c-135">Wątkowość obiektów i funkcji</span><span class="sxs-lookup"><span data-stu-id="8646c-135">Threading Objects and Features</span></span></related>
    <related type="Article" href="~/docs/standard/threading/mutexes.md"><span data-ttu-id="8646c-136">Muteksy</span><span class="sxs-lookup"><span data-stu-id="8646c-136">Mutexes</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/cd94fc34-ac15-427f-b723-a1240a4fab7d"><span data-ttu-id="8646c-137">EventWaitHandle, autoresetevent — i ManualResetEvent</span><span class="sxs-lookup"><span data-stu-id="8646c-137">EventWaitHandle, AutoResetEvent, and ManualResetEvent</span></span></related>
    <related type="Article" href="~/docs/standard/threading/semaphore-and-semaphoreslim.md"><span data-ttu-id="8646c-138">Semaforów</span><span class="sxs-lookup"><span data-stu-id="8646c-138">Semaphores</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WaitHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WaitHandle();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8646c-139">Inicjuje nowe wystąpienie klasy <see cref="T:System.Threading.WaitHandle" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="8646c-139">Initializes a new instance of the <see cref="T:System.Threading.WaitHandle" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="waitHandle.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8646c-140">Zwalnia wszystkie zasoby zajmowane przez bieżącą <see cref="T:System.Threading.WaitHandle" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-140">Releases all resources held by the current <see cref="T:System.Threading.WaitHandle" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8646c-141">Ta metoda jest implementacją publicznych <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> metodę <xref:System.Threading.WaitHandle> klasy i jej klasy pochodne.</span><span class="sxs-lookup"><span data-stu-id="8646c-141">This method is the public implementation of the <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> method for the <xref:System.Threading.WaitHandle> class and its derived classes.</span></span> <span data-ttu-id="8646c-142">Zapewnia standardową implementację, która wywołuje `Dispose(Boolean)` przeciążenia z `true` argument, a następnie wywołania <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="8646c-142">It provides a standard implementation that calls the `Dispose(Boolean)` overload with a `true` argument and then calls the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="8646c-143">Wywołaj tę metodę, aby zwolnić wszystkie zasoby zajmowane przez wystąpienia `WaitHandle` lub klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="8646c-143">Call this method to release all resources held by an instance of `WaitHandle` or a derived class.</span></span>  
  
 <span data-ttu-id="8646c-144">Gdy ta metoda jest wywoływana, odwołania do bieżącego wystąpienia spowodować niezdefiniowane zachowanie.</span><span class="sxs-lookup"><span data-stu-id="8646c-144">Once this method is called, references to the current instance cause undefined behavior.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8646c-145">Zawsze wywołuj <xref:System.Threading.WaitHandle.Close%2A> lub <xref:System.Threading.WaitHandle.Dispose> przed publikacją swoje ostatnie odwołanie do <xref:System.Threading.WaitHandle>.</span><span class="sxs-lookup"><span data-stu-id="8646c-145">Always call <xref:System.Threading.WaitHandle.Close%2A> or <xref:System.Threading.WaitHandle.Dispose> before you release your last reference to the <xref:System.Threading.WaitHandle>.</span></span> <span data-ttu-id="8646c-146">W przeciwnym razie nie zostanie zwolniona przez nią zasoby.</span><span class="sxs-lookup"><span data-stu-id="8646c-146">Otherwise, the resources it is using will not be freed.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8646c-147">Należy zastąpić <see langword="Dispose(Boolean)" /> metodę, aby zwolnić zasoby przydzielone w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="8646c-147">You should override the <see langword="Dispose(Boolean)" /> method to release resources allocated in derived classes.</span></span></para></block>
        <related type="Article" href="~/docs/standard/garbage-collection/implementing-dispose.md"><span data-ttu-id="8646c-148">Implementacja metody Dispose</span><span class="sxs-lookup"><span data-stu-id="8646c-148">Implementing a Dispose Method</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8646c-149">Zwalnia wszelkie zasoby używane przez bieżące wystąpienie <see cref="T:System.Threading.WaitHandle" /> klasy</span><span class="sxs-lookup"><span data-stu-id="8646c-149">Releases all resources used by the current instance of the <see cref="T:System.Threading.WaitHandle" /> class</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="waitHandle.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8646c-150">Zwalnia wszelkie zasoby używane przez bieżące wystąpienie <see cref="T:System.Threading.WaitHandle" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="8646c-150">Releases all resources used by the current instance of the <see cref="T:System.Threading.WaitHandle" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8646c-151">Ta metoda jest odpowiednikiem <xref:System.Threading.WaitHandle.Close%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8646c-151">This method is equivalent to the <xref:System.Threading.WaitHandle.Close%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8646c-152">Zawsze wywołuj <xref:System.Threading.WaitHandle.Close%2A> lub <xref:System.Threading.WaitHandle.Dispose> przed publikacją swoje ostatnie odwołanie do <xref:System.Threading.WaitHandle>.</span><span class="sxs-lookup"><span data-stu-id="8646c-152">Always call <xref:System.Threading.WaitHandle.Close%2A> or <xref:System.Threading.WaitHandle.Dispose> before you release your last reference to the <xref:System.Threading.WaitHandle>.</span></span> <span data-ttu-id="8646c-153">W przeciwnym razie nie zostanie zwolniona przez nią zasoby.</span><span class="sxs-lookup"><span data-stu-id="8646c-153">Otherwise, the resources it is using will not be freed.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/garbage-collection/unmanaged.md"><span data-ttu-id="8646c-154">Oczyszczanie zasobów niezarządzanych</span><span class="sxs-lookup"><span data-stu-id="8646c-154">Cleaning Up Unmanaged Resources</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool explicitDisposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool explicitDisposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (explicitDisposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool explicitDisposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="waitHandle.Dispose explicitDisposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="explicitDisposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="explicitDisposing"><span data-ttu-id="8646c-155"><see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko niezarządzane zasoby.</span><span class="sxs-lookup"><span data-stu-id="8646c-155"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="8646c-156">W przypadku przesłonięcia w klasie pochodnej, zwalnia zasoby niezarządzane używane przez <see cref="T:System.Threading.WaitHandle" />i opcjonalnie zwalnia zasoby zarządzane.</span><span class="sxs-lookup"><span data-stu-id="8646c-156">When overridden in a derived class, releases the unmanaged resources used by the <see cref="T:System.Threading.WaitHandle" />, and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8646c-157">Ta metoda jest wywoływana <xref:System.Threading.WaitHandle.Close%2A> i <xref:System.Threading.WaitHandle.Dispose> metod z `explicitDisposing` parametr `true`.</span><span class="sxs-lookup"><span data-stu-id="8646c-157">This method is called by the <xref:System.Threading.WaitHandle.Close%2A> and the <xref:System.Threading.WaitHandle.Dispose> methods with the `explicitDisposing` parameter set to `true`.</span></span>  <span data-ttu-id="8646c-158">Gdy `explicitDisposing` parametr jest `true`, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane że <xref:System.Threading.WaitHandle> obiektu odwołania.</span><span class="sxs-lookup"><span data-stu-id="8646c-158">When the `explicitDisposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Threading.WaitHandle> object references.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8646c-159">Należy zastąpić <see cref="M:System.Threading.WaitHandle.Dispose(System.Boolean)" /> metodę, aby zwolnić zasoby przydzielone w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="8646c-159">You should override the <see cref="M:System.Threading.WaitHandle.Dispose(System.Boolean)" /> method to release resources allocated in derived classes.</span></span>  
  
<span data-ttu-id="8646c-160"><see cref="M:System.Threading.WaitHandle.Close" /> Lub <see cref="M:System.Threading.WaitHandle.Dispose" /> metoda może być wywoływana wiele razy przez inne obiekty.</span><span class="sxs-lookup"><span data-stu-id="8646c-160">The <see cref="M:System.Threading.WaitHandle.Close" /> or <see cref="M:System.Threading.WaitHandle.Dispose" /> method can be called multiple times by other objects.</span></span> <span data-ttu-id="8646c-161">W przypadku przesłaniania tej metody należy uważać, aby nie odwołują się do obiektów, które zostały wcześniej zlikwidowane wcześniejszym wywołaniem do <see langword="Dispose" /> lub <see langword="Close" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-161">When overriding this method, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" /> or <see langword="Close" />.</span></span></para></block>
        <related type="Article" href="~/docs/standard/garbage-collection/implementing-dispose.md"><span data-ttu-id="8646c-162">Implementacja metody Dispose</span><span class="sxs-lookup"><span data-stu-id="8646c-162">Implementing a Dispose Method</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~WaitHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!WaitHandle ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="waitHandle.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8646c-163">Zwalnia zasoby blokowane przez bieżące wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="8646c-163">Releases the resources held by the current instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  

> [!NOTE]
> <span data-ttu-id="8646c-164">Ten element członkowski został usunięty z .NET Framework w wersji 2.0 i późniejszych wersjach.</span><span class="sxs-lookup"><span data-stu-id="8646c-164">This member has been removed from the .NET Framework version 2.0 and subsequent versions.</span></span> <span data-ttu-id="8646c-165">Ten temat dotyczy tylko wersji na liście "Informacje o wersji" w dalszej części tego tematu.</span><span class="sxs-lookup"><span data-stu-id="8646c-165">This topic applies only to the versions listed in "Version Information" later in this topic.</span></span>


<span data-ttu-id="8646c-166">Metoda nie jest wywoływana przez kod aplikacji, ale automatycznie podczas wyrzucania elementów bezużytecznych, chyba że moduł wyrzucania elementów bezużytecznych wyłączył finalizację.</span><span class="sxs-lookup"><span data-stu-id="8646c-166">Application code does not call this method; it is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled.</span></span> <span data-ttu-id="8646c-167">Aby uzyskać więcej informacji, zobacz <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> i <xref:System.Object.Finalize>.</span><span class="sxs-lookup"><span data-stu-id="8646c-167">For more information, see <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> and <xref:System.Object.Finalize>.</span></span> <span data-ttu-id="8646c-168">Ta metoda zastępuje <xref:System.Object.Finalize>.</span><span class="sxs-lookup"><span data-stu-id="8646c-168">This method overrides <xref:System.Object.Finalize>.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public virtual IntPtr Handle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Threading.WaitHandle.Handle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property IntPtr Handle { IntPtr get(); void set(IntPtr value); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint with get, set" Usage="System.Threading.WaitHandle.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.Obsolete("Use the SafeWaitHandle property instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8646c-169">Pobiera lub ustawia uchwyt macierzystego systemu operacyjnego.</span><span class="sxs-lookup"><span data-stu-id="8646c-169">Gets or sets the native operating system handle.</span></span></summary>
        <value><span data-ttu-id="8646c-170"><see langword="IntPtr" /> Reprezentujący dojście macierzystego systemu operacyjnego.</span><span class="sxs-lookup"><span data-stu-id="8646c-170">An <see langword="IntPtr" /> representing the native operating system handle.</span></span> <span data-ttu-id="8646c-171">Wartość domyślna to wartość <see cref="F:System.Threading.WaitHandle.InvalidHandle" /> pola.</span><span class="sxs-lookup"><span data-stu-id="8646c-171">The default is the value of the <see cref="F:System.Threading.WaitHandle.InvalidHandle" /> field.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8646c-172">Przypisywanie nową wartość do <xref:System.Threading.WaitHandle.Handle%2A> właściwości nie zamyka uchwyt poprzedniego.</span><span class="sxs-lookup"><span data-stu-id="8646c-172">Assigning a new value to the <xref:System.Threading.WaitHandle.Handle%2A> property does not close the previous handle.</span></span> <span data-ttu-id="8646c-173">Może to spowodować, że ujawnione dojście.</span><span class="sxs-lookup"><span data-stu-id="8646c-173">This can result in a leaked handle.</span></span>  
  
 <span data-ttu-id="8646c-174">Nie należy używać tej właściwości w .NET Framework w wersji 2.0 lub nowszy; Użyj <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> właściwości zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="8646c-174">Do not use this property in the .NET Framework version 2.0 or later; use the <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> property instead.</span></span> <span data-ttu-id="8646c-175">Ustawienie tej właściwości na prawidłowy uchwyt również zestawów <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> właściwości, ale ustawienie <xref:System.Threading.WaitHandle.InvalidHandle> może spowodować ujawnione dojście.</span><span class="sxs-lookup"><span data-stu-id="8646c-175">Setting this property to a valid handle also sets the <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> property, but setting it to <xref:System.Threading.WaitHandle.InvalidHandle> can result in a leaked handle.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="8646c-176">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego, można ustawić wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="8646c-176">Requires full trust for the immediate caller to set the property value.</span></span> <span data-ttu-id="8646c-177">Nie można ustawić tego elementu członkowskiego przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="8646c-177">This member cannot be set by partially trusted or transparent code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="8646c-178">Typy pochodne muszą mieć <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> można ustawić wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="8646c-178">Derived types must have <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> to set the property value.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="InvalidHandle">
      <MemberSignature Language="C#" Value="protected static readonly IntPtr InvalidHandle;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly native int InvalidHandle" />
      <MemberSignature Language="DocId" Value="F:System.Threading.WaitHandle.InvalidHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly InvalidHandle As IntPtr " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly IntPtr InvalidHandle;" />
      <MemberSignature Language="F#" Value=" staticval mutable InvalidHandle : nativeint" Usage="System.Threading.WaitHandle.InvalidHandle" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8646c-179">Reprezentuje uchwyt nieprawidłowy macierzystego systemu operacyjnego.</span><span class="sxs-lookup"><span data-stu-id="8646c-179">Represents an invalid native operating system handle.</span></span> <span data-ttu-id="8646c-180">To pole jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="8646c-180">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8646c-181">Używana wewnętrznie w celu zainicjowania <xref:System.Threading.WaitHandle.Handle%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="8646c-181">Used internally to initialize the <xref:System.Threading.WaitHandle.Handle%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8646c-182">Tej wartości można użyć, aby określić, czy <see cref="P:System.Threading.WaitHandle.Handle" /> właściwość zawiera uchwyt prawidłowego macierzystego systemu operacyjnego.</span><span class="sxs-lookup"><span data-stu-id="8646c-182">You can use this value to determine whether the <see cref="P:System.Threading.WaitHandle.Handle" /> property contains a valid native operating system handle.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="SafeWaitHandle">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafeWaitHandle SafeWaitHandle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafeWaitHandle SafeWaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.Threading.WaitHandle.SafeWaitHandle" />
      <MemberSignature Language="VB.NET" Value="Public Property SafeWaitHandle As SafeWaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::SafeHandles::SafeWaitHandle ^ SafeWaitHandle { Microsoft::Win32::SafeHandles::SafeWaitHandle ^ get(); void set(Microsoft::Win32::SafeHandles::SafeWaitHandle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SafeWaitHandle : Microsoft.Win32.SafeHandles.SafeWaitHandle with get, set" Usage="System.Threading.WaitHandle.SafeWaitHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>set: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeWaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8646c-183">Pobiera lub ustawia uchwyt macierzystego systemu operacyjnego.</span><span class="sxs-lookup"><span data-stu-id="8646c-183">Gets or sets the native operating system handle.</span></span></summary>
        <value><span data-ttu-id="8646c-184">A <see cref="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" /> reprezentujący dojście macierzystego systemu operacyjnego.</span><span class="sxs-lookup"><span data-stu-id="8646c-184">A <see cref="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" /> representing the native operating system handle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8646c-185">Podczas przypisywania nową wartość do <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> właściwości poprzedniego uchwyt zostaną zamknięte, kiedy poprzednie <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> obiektu są zbierane.</span><span class="sxs-lookup"><span data-stu-id="8646c-185">When you assign a new value to the <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> property, the previous handle will be closed when the previous <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> object is collected.</span></span> <span data-ttu-id="8646c-186">Nie ręcznie zamknąć dojście, ponieważ powoduje to <xref:System.ObjectDisposedException> podczas <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> próbuje zamknąć dojście.</span><span class="sxs-lookup"><span data-stu-id="8646c-186">Do not manually close the handle, because this results in an <xref:System.ObjectDisposedException> when the <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> attempts to close the handle.</span></span>  
  
 <span data-ttu-id="8646c-187"><xref:System.Threading.WaitHandle> implementuje <xref:System.IDisposable.Dispose%2A> wzorca.</span><span class="sxs-lookup"><span data-stu-id="8646c-187"><xref:System.Threading.WaitHandle> implements the <xref:System.IDisposable.Dispose%2A> pattern.</span></span> <span data-ttu-id="8646c-188">Zobacz temat [Implementowanie](~/docs/standard/garbage-collection/implementing-dispose.md) metody Dispose.</span><span class="sxs-lookup"><span data-stu-id="8646c-188">See [Implementing a Dispose method](~/docs/standard/garbage-collection/implementing-dispose .md).</span></span> <span data-ttu-id="8646c-189">Po utworzeniu klasy pochodnej z <xref:System.Threading.WaitHandle>, użyj <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> właściwość, aby przechowywać swoje dojście systemu operacyjnego uchwyt macierzysty.</span><span class="sxs-lookup"><span data-stu-id="8646c-189">When you derive from <xref:System.Threading.WaitHandle>, use the <xref:System.Threading.WaitHandle.SafeWaitHandle%2A> property to store your native handle operating system handle.</span></span> <span data-ttu-id="8646c-190">Nie trzeba zastąpić chronionego <xref:System.Threading.WaitHandle.Dispose%2A> metoda chyba że są używane dodatkowe zasoby niezarządzane.</span><span class="sxs-lookup"><span data-stu-id="8646c-190">You do not need to override the protected <xref:System.Threading.WaitHandle.Dispose%2A> method unless you use additional unmanaged resources.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="8646c-191">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="8646c-191">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="8646c-192">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="8646c-192">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="8646c-193">Typy pochodne muszą mieć <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> do wywoływania tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="8646c-193">Derived types must have <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> to call this member.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignalAndWait">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8646c-194">Sygnalizuje jeden <see cref="T:System.Threading.WaitHandle" /> i czeka na innym.</span><span class="sxs-lookup"><span data-stu-id="8646c-194">Signals one <see cref="T:System.Threading.WaitHandle" /> and waits on another.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public static bool SignalAndWait (System.Threading.WaitHandle toSignal, System.Threading.WaitHandle toWaitOn);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SignalAndWait(class System.Threading.WaitHandle toSignal, class System.Threading.WaitHandle toWaitOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SignalAndWait (toSignal As WaitHandle, toWaitOn As WaitHandle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SignalAndWait(System::Threading::WaitHandle ^ toSignal, System::Threading::WaitHandle ^ toWaitOn);" />
      <MemberSignature Language="F#" Value="static member SignalAndWait : System.Threading.WaitHandle * System.Threading.WaitHandle -&gt; bool" Usage="System.Threading.WaitHandle.SignalAndWait (toSignal, toWaitOn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toSignal" Type="System.Threading.WaitHandle" />
        <Parameter Name="toWaitOn" Type="System.Threading.WaitHandle" />
      </Parameters>
      <Docs>
        <param name="toSignal"><span data-ttu-id="8646c-195"><see cref="T:System.Threading.WaitHandle" /> Na sygnał.</span><span class="sxs-lookup"><span data-stu-id="8646c-195">The <see cref="T:System.Threading.WaitHandle" /> to signal.</span></span></param>
        <param name="toWaitOn"><span data-ttu-id="8646c-196"><see cref="T:System.Threading.WaitHandle" /> Oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="8646c-196">The <see cref="T:System.Threading.WaitHandle" /> to wait on.</span></span></param>
        <summary><span data-ttu-id="8646c-197">Sygnalizuje jeden <see cref="T:System.Threading.WaitHandle" /> i czeka na innym.</span><span class="sxs-lookup"><span data-stu-id="8646c-197">Signals one <see cref="T:System.Threading.WaitHandle" /> and waits on another.</span></span></summary>
        <returns><span data-ttu-id="8646c-198"><see langword="true" /> Jeśli zarówno sygnałem, jak i czas oczekiwania zakończy się pomyślnie; Jeśli czas oczekiwania nie zostanie ukończone, metoda nie zwraca.</span><span class="sxs-lookup"><span data-stu-id="8646c-198"><see langword="true" /> if both the signal and the wait complete successfully; if the wait does not complete, the method does not return.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8646c-199">Ta operacja nie jest gwarantowana niepodzielnych.</span><span class="sxs-lookup"><span data-stu-id="8646c-199">This operation is not guaranteed to be atomic.</span></span> <span data-ttu-id="8646c-200">Po bieżącym sygnały wątku `toSignal` , ale przed jego czeka `toWaitOn`, wątek, który działa na inny procesor może być sygnał `toWaitOn` lub zaczekaj na nim.</span><span class="sxs-lookup"><span data-stu-id="8646c-200">After the current thread signals `toSignal` but before it waits on `toWaitOn`, a thread that is running on another processor might signal `toWaitOn` or wait on it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8646c-201">Poniższy przykład kodu wykorzystuje <xref:System.Threading.WaitHandle.SignalAndWait%28System.Threading.WaitHandle%2CSystem.Threading.WaitHandle%29> przeciążenia metody, aby zezwolić na wątek główny sygnał zablokowany wątek i poczekać, aż wątek kończy zadanie.</span><span class="sxs-lookup"><span data-stu-id="8646c-201">The following code example uses the <xref:System.Threading.WaitHandle.SignalAndWait%28System.Threading.WaitHandle%2CSystem.Threading.WaitHandle%29> method overload to allow the main thread to signal a blocked thread and then wait until the thread finishes a task.</span></span>  
  
 <span data-ttu-id="8646c-202">Przykład rozpoczyna pięć wątków, pozwala na ich blokowanie na <xref:System.Threading.EventWaitHandle> utworzone za pomocą <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> Flaga, a następnie jeden wątek wersji czasu użytkownik naciśnie klawisz ENTER.</span><span class="sxs-lookup"><span data-stu-id="8646c-202">The example starts five threads, allows them to block on an <xref:System.Threading.EventWaitHandle> created with the <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> flag, and then releases one thread each time the user presses the ENTER key.</span></span> <span data-ttu-id="8646c-203">Przykład następnie kolejkuje innego pięć wątków i zwalnia je za pomocą <xref:System.Threading.EventWaitHandle> utworzone za pomocą <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> flagi.</span><span class="sxs-lookup"><span data-stu-id="8646c-203">The example then queues another five threads and releases them all using an <xref:System.Threading.EventWaitHandle> created with the <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> flag.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/CS/source.cs#1)]
 [!code-vb[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8646c-204"><paramref name="toSignal" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-204"><paramref name="toSignal" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="8646c-205">—lub—</span><span class="sxs-lookup"><span data-stu-id="8646c-205">-or-</span></span> 
 <span data-ttu-id="8646c-206"><paramref name="toWaitOn" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-206"><paramref name="toWaitOn" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8646c-207">Metoda została wywołana w wątku, który ma <see cref="T:System.STAThreadAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-207">The method was called on a thread that has <see cref="T:System.STAThreadAttribute" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="8646c-208">Ta metoda nie jest obsługiwana na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="8646c-208">This method is not supported on Windows 98 or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8646c-209"><paramref name="toSignal" /> jest semafor i jest już pełna liczba.</span><span class="sxs-lookup"><span data-stu-id="8646c-209"><paramref name="toSignal" /> is a semaphore, and it already has a full count.</span></span></exception>
        <exception cref="T:System.Threading.AbandonedMutexException"><span data-ttu-id="8646c-210">Czas oczekiwania zakończyć, ponieważ wątek został zakończony bez zwalniania elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="8646c-210">The wait completed because a thread exited without releasing a mutex.</span></span> <span data-ttu-id="8646c-211">Ten wyjątek nie jest generowany na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="8646c-211">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public static bool SignalAndWait (System.Threading.WaitHandle toSignal, System.Threading.WaitHandle toWaitOn, int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SignalAndWait(class System.Threading.WaitHandle toSignal, class System.Threading.WaitHandle toWaitOn, int32 millisecondsTimeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SignalAndWait (toSignal As WaitHandle, toWaitOn As WaitHandle, millisecondsTimeout As Integer, exitContext As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SignalAndWait(System::Threading::WaitHandle ^ toSignal, System::Threading::WaitHandle ^ toWaitOn, int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="static member SignalAndWait : System.Threading.WaitHandle * System.Threading.WaitHandle * int * bool -&gt; bool" Usage="System.Threading.WaitHandle.SignalAndWait (toSignal, toWaitOn, millisecondsTimeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toSignal" Type="System.Threading.WaitHandle" />
        <Parameter Name="toWaitOn" Type="System.Threading.WaitHandle" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="toSignal"><span data-ttu-id="8646c-212"><see cref="T:System.Threading.WaitHandle" /> Na sygnał.</span><span class="sxs-lookup"><span data-stu-id="8646c-212">The <see cref="T:System.Threading.WaitHandle" /> to signal.</span></span></param>
        <param name="toWaitOn"><span data-ttu-id="8646c-213"><see cref="T:System.Threading.WaitHandle" /> Oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="8646c-213">The <see cref="T:System.Threading.WaitHandle" /> to wait on.</span></span></param>
        <param name="millisecondsTimeout"><span data-ttu-id="8646c-214">Liczba całkowita, która reprezentuje interwałem oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="8646c-214">An integer that represents the interval to wait.</span></span> <span data-ttu-id="8646c-215">Jeśli wartość jest <see cref="F:System.Threading.Timeout.Infinite" />, -1, czas oczekiwania jest nieskończona.</span><span class="sxs-lookup"><span data-stu-id="8646c-215">If the value is <see cref="F:System.Threading.Timeout.Infinite" />, that is, -1, the wait is infinite.</span></span></param>
        <param name="exitContext"><span data-ttu-id="8646c-216"><see langword="true" /> Aby zakończyć domeny synchronizacji dla kontekstu przed oczekiwaniem (Jeśli w kontekście zsynchronizowane), a potem; ponownie pobrać w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-216"><see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8646c-217">Sygnalizuje jeden <see cref="T:System.Threading.WaitHandle" /> i czeka na innym, określając interwał limitu czasu jako liczba całkowita 32-bitowe podpisane i określeniu, czy zakończyć domeny synchronizacji dla kontekstu przed wejściem czas oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="8646c-217">Signals one <see cref="T:System.Threading.WaitHandle" /> and waits on another, specifying a time-out interval as a 32-bit signed integer and specifying whether to exit the synchronization domain for the context before entering the wait.</span></span></summary>
        <returns><span data-ttu-id="8646c-218"><see langword="true" /> Jeśli zarówno sygnałem, jak i czas oczekiwania zakończone pomyślnie, lub <see langword="false" /> Jeśli sygnału ukończone, ale czas oczekiwania upłynął limit czasu.</span><span class="sxs-lookup"><span data-stu-id="8646c-218"><see langword="true" /> if both the signal and the wait completed successfully, or <see langword="false" /> if the signal completed but the wait timed out.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8646c-219">Ta operacja nie jest gwarantowana niepodzielnych.</span><span class="sxs-lookup"><span data-stu-id="8646c-219">This operation is not guaranteed to be atomic.</span></span> <span data-ttu-id="8646c-220">Po bieżącym sygnały wątku `toSignal` , ale przed jego czeka `toWaitOn`, wątek, który działa na inny procesor może być sygnał `toWaitOn` lub zaczekaj na nim.</span><span class="sxs-lookup"><span data-stu-id="8646c-220">After the current thread signals `toSignal` but before it waits on `toWaitOn`, a thread that is running on another processor might signal `toWaitOn` or wait on it.</span></span>  
  
 <span data-ttu-id="8646c-221">Jeśli `millisecondsTimeout` wynosi zero, nie są blokowane w metodzie.</span><span class="sxs-lookup"><span data-stu-id="8646c-221">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="8646c-222">Sprawdza stan `toWaitOn` i zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="8646c-222">It tests the state of the `toWaitOn` and returns immediately.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="8646c-223">Uwagi dotyczące zamykania kontekstu</span><span class="sxs-lookup"><span data-stu-id="8646c-223">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="8646c-224">`exitContext` Parametr jest ignorowany, chyba że <xref:System.Threading.WaitHandle.SignalAndWait%2A> metoda jest wywoływana z wewnątrz inny niż domyślny kontekst zarządzanych.</span><span class="sxs-lookup"><span data-stu-id="8646c-224">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="8646c-225">Może się to zdarzyć, jeśli wątek znajduje się wewnątrz wywołania do wystąpienia klasy pochodzącej od <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="8646c-225">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="8646c-226">Nawet wtedy, gdy są aktualnie wykonuje metodę w klasie, która nie pochodzi od <xref:System.ContextBoundObject>, takiej jak <xref:System.String>, może być w kontekście innej niż domyślna Jeśli <xref:System.ContextBoundObject> znajduje się na stosie w bieżącej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="8646c-226">Even if you are currently executing a method on a class that does not derive from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="8646c-227">Gdy kod jest wykonywany w kontekście innej niż domyślna, określając `true` dla `exitContext` powoduje, że wątku zamknąć kontekstu zarządzanych inną niż domyślna (oznacza to, do którego nastąpi przejście do domyślnego kontekstu) przed wykonaniem <xref:System.Threading.WaitHandle.SignalAndWait%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8646c-227">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method.</span></span> <span data-ttu-id="8646c-228">Wątek jest zwracany do oryginalnego kontekstu niedomyślną po wywołaniu <xref:System.Threading.WaitHandle.SignalAndWait%2A> ukończeniu metody.</span><span class="sxs-lookup"><span data-stu-id="8646c-228">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method completes.</span></span>  
  
 <span data-ttu-id="8646c-229">Może to być przydatne, gdy zawiera klasy powiązane z kontekstu <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="8646c-229">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="8646c-230">W takim przypadku wszystkie wywołania do elementów członkowskich klasy są automatycznie synchronizowane i domena synchronizacji jest cały kod dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="8646c-230">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="8646c-231">Jeśli kod w stosie wywołań elementu członkowskiego wywołuje <xref:System.Threading.WaitHandle.SignalAndWait%2A> metody i określa `true` dla `exitContext`, wątek kończy działanie synchronizacji domeny, dzięki czemu wątek, który jest zablokowany w wywołaniu do wszystkich elementów członkowskich obiektu, aby kontynuować.</span><span class="sxs-lookup"><span data-stu-id="8646c-231">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="8646c-232">Gdy <xref:System.Threading.WaitHandle.SignalAndWait%2A> metoda zwróci wartość, wątku, który zgłosił wywołanie musi czekać ponownie domeny synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="8646c-232">When the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8646c-233"><paramref name="toSignal" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-233"><paramref name="toSignal" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="8646c-234">—lub—</span><span class="sxs-lookup"><span data-stu-id="8646c-234">-or-</span></span> 
 <span data-ttu-id="8646c-235"><paramref name="toWaitOn" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-235"><paramref name="toWaitOn" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8646c-236">Metoda jest wywoływana w wątku, który ma <see cref="T:System.STAThreadAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-236">The method is called on a thread that has <see cref="T:System.STAThreadAttribute" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="8646c-237">Ta metoda nie jest obsługiwana na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="8646c-237">This method is not supported on Windows 98 or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8646c-238"><see cref="T:System.Threading.WaitHandle" /> Nie sygnalizowane, ponieważ może to spowodować przekroczenie jego maksymalną liczbę.</span><span class="sxs-lookup"><span data-stu-id="8646c-238">The <see cref="T:System.Threading.WaitHandle" /> cannot be signaled because it would exceed its maximum count.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8646c-239"><paramref name="millisecondsTimeout" /> jest liczbą ujemną od-1, który reprezentuje nieskończony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="8646c-239"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
        <exception cref="T:System.Threading.AbandonedMutexException"><span data-ttu-id="8646c-240">Czas oczekiwania zakończyć, ponieważ wątek został zakończony bez zwalniania elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="8646c-240">The wait completed because a thread exited without releasing a mutex.</span></span> <span data-ttu-id="8646c-241">Ten wyjątek nie jest generowany na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="8646c-241">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public static bool SignalAndWait (System.Threading.WaitHandle toSignal, System.Threading.WaitHandle toWaitOn, TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SignalAndWait(class System.Threading.WaitHandle toSignal, class System.Threading.WaitHandle toWaitOn, valuetype System.TimeSpan timeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SignalAndWait (toSignal As WaitHandle, toWaitOn As WaitHandle, timeout As TimeSpan, exitContext As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SignalAndWait(System::Threading::WaitHandle ^ toSignal, System::Threading::WaitHandle ^ toWaitOn, TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="static member SignalAndWait : System.Threading.WaitHandle * System.Threading.WaitHandle * TimeSpan * bool -&gt; bool" Usage="System.Threading.WaitHandle.SignalAndWait (toSignal, toWaitOn, timeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toSignal" Type="System.Threading.WaitHandle" />
        <Parameter Name="toWaitOn" Type="System.Threading.WaitHandle" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="toSignal"><span data-ttu-id="8646c-242"><see cref="T:System.Threading.WaitHandle" /> Na sygnał.</span><span class="sxs-lookup"><span data-stu-id="8646c-242">The <see cref="T:System.Threading.WaitHandle" /> to signal.</span></span></param>
        <param name="toWaitOn"><span data-ttu-id="8646c-243"><see cref="T:System.Threading.WaitHandle" /> Oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="8646c-243">The <see cref="T:System.Threading.WaitHandle" /> to wait on.</span></span></param>
        <param name="timeout"><span data-ttu-id="8646c-244">A <see cref="T:System.TimeSpan" /> reprezentujący interwał oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="8646c-244">A <see cref="T:System.TimeSpan" /> that represents the interval to wait.</span></span> <span data-ttu-id="8646c-245">Jeśli wartość wynosi -1, czas oczekiwania jest nieskończona.</span><span class="sxs-lookup"><span data-stu-id="8646c-245">If the value is -1, the wait is infinite.</span></span></param>
        <param name="exitContext"><span data-ttu-id="8646c-246"><see langword="true" /> Aby zakończyć domeny synchronizacji dla kontekstu przed oczekiwaniem (Jeśli w kontekście zsynchronizowane), a potem; ponownie pobrać w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-246"><see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8646c-247">Sygnalizuje jeden <see cref="T:System.Threading.WaitHandle" /> i czeka na innym, określając interwał limitu czasu jako <see cref="T:System.TimeSpan" /> i określenie, czy chcesz zamknąć domeny synchronizacji dla kontekstu przed wejściem czas oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="8646c-247">Signals one <see cref="T:System.Threading.WaitHandle" /> and waits on another, specifying the time-out interval as a <see cref="T:System.TimeSpan" /> and specifying whether to exit the synchronization domain for the context before entering the wait.</span></span></summary>
        <returns><span data-ttu-id="8646c-248"><see langword="true" /> Jeśli zarówno sygnałem, jak i czas oczekiwania zakończone pomyślnie, lub <see langword="false" /> Jeśli sygnału ukończone, ale czas oczekiwania upłynął limit czasu.</span><span class="sxs-lookup"><span data-stu-id="8646c-248"><see langword="true" /> if both the signal and the wait completed successfully, or <see langword="false" /> if the signal completed but the wait timed out.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8646c-249">Ta operacja nie jest gwarantowana niepodzielnych.</span><span class="sxs-lookup"><span data-stu-id="8646c-249">This operation is not guaranteed to be atomic.</span></span> <span data-ttu-id="8646c-250">Po bieżącym sygnały wątku `toSignal` , ale przed jego czeka `toWaitOn`, wątek, który działa na inny procesor może być sygnał `toWaitOn` lub zaczekaj na nim.</span><span class="sxs-lookup"><span data-stu-id="8646c-250">After the current thread signals `toSignal` but before it waits on `toWaitOn`, a thread that is running on another processor might signal `toWaitOn` or wait on it.</span></span>  
  
 <span data-ttu-id="8646c-251">Maksymalna wartość `timeout` jest <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8646c-251">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8646c-252">Jeśli `timeout` wynosi zero, nie są blokowane w metodzie.</span><span class="sxs-lookup"><span data-stu-id="8646c-252">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="8646c-253">Sprawdza stan `toWaitOn` i zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="8646c-253">It tests the state of the `toWaitOn` and returns immediately.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="8646c-254">Uwagi dotyczące zamykania kontekstu</span><span class="sxs-lookup"><span data-stu-id="8646c-254">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="8646c-255">`exitContext` Parametr jest ignorowany, chyba że <xref:System.Threading.WaitHandle.SignalAndWait%2A> metoda jest wywoływana z wewnątrz inny niż domyślny kontekst zarządzanych.</span><span class="sxs-lookup"><span data-stu-id="8646c-255">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="8646c-256">Może się to zdarzyć, jeśli wątek znajduje się wewnątrz wywołania do wystąpienia klasy pochodzącej od <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="8646c-256">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="8646c-257">Nawet wtedy, gdy są aktualnie wykonuje metodę w klasie, która nie pochodzi od <xref:System.ContextBoundObject>, takiej jak <xref:System.String>, może być w kontekście innej niż domyślna Jeśli <xref:System.ContextBoundObject> znajduje się na stosie w bieżącej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="8646c-257">Even if you are currently executing a method on a class that does not derive from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="8646c-258">Gdy kod jest wykonywany w kontekście innej niż domyślna, określając `true` dla `exitContext` powoduje, że wątku zamknąć kontekstu zarządzanych inną niż domyślna (oznacza to, do którego nastąpi przejście do domyślnego kontekstu) przed wykonaniem <xref:System.Threading.WaitHandle.SignalAndWait%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8646c-258">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method.</span></span> <span data-ttu-id="8646c-259">Wątek jest zwracany do oryginalnego kontekstu niedomyślną po wywołaniu <xref:System.Threading.WaitHandle.SignalAndWait%2A> ukończeniu metody.</span><span class="sxs-lookup"><span data-stu-id="8646c-259">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method completes.</span></span>  
  
 <span data-ttu-id="8646c-260">Może to być przydatne, gdy zawiera klasy powiązane z kontekstu <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="8646c-260">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="8646c-261">W takim przypadku wszystkie wywołania do elementów członkowskich klasy są automatycznie synchronizowane i domena synchronizacji jest cały kod dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="8646c-261">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="8646c-262">Jeśli kod w stosie wywołań elementu członkowskiego wywołuje <xref:System.Threading.WaitHandle.SignalAndWait%2A> metody i określa `true` dla `exitContext`, wątek kończy działanie synchronizacji domeny, dzięki czemu wątek, który jest zablokowany w wywołaniu do wszystkich elementów członkowskich obiektu, aby kontynuować.</span><span class="sxs-lookup"><span data-stu-id="8646c-262">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="8646c-263">Gdy <xref:System.Threading.WaitHandle.SignalAndWait%2A> metoda zwróci wartość, wątku, który zgłosił wywołanie musi czekać ponownie domeny synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="8646c-263">When the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8646c-264"><paramref name="toSignal" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-264"><paramref name="toSignal" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="8646c-265">—lub—</span><span class="sxs-lookup"><span data-stu-id="8646c-265">-or-</span></span> 
 <span data-ttu-id="8646c-266"><paramref name="toWaitOn" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-266"><paramref name="toWaitOn" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8646c-267">Metoda została wywołana w wątku, który ma <see cref="T:System.STAThreadAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-267">The method was called on a thread that has <see cref="T:System.STAThreadAttribute" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="8646c-268">Ta metoda nie jest obsługiwana na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="8646c-268">This method is not supported on Windows 98 or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8646c-269"><paramref name="toSignal" /> jest semafor i jest już pełna liczba.</span><span class="sxs-lookup"><span data-stu-id="8646c-269"><paramref name="toSignal" /> is a semaphore, and it already has a full count.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8646c-270"><paramref name="timeout" /> Zwraca ujemną liczbę milisekund od-1.</span><span class="sxs-lookup"><span data-stu-id="8646c-270"><paramref name="timeout" /> evaluates to a negative number of milliseconds other than -1.</span></span>  
  
<span data-ttu-id="8646c-271">—lub—</span><span class="sxs-lookup"><span data-stu-id="8646c-271">-or-</span></span> 
 <span data-ttu-id="8646c-272"><paramref name="timeout" /> jest większa niż <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-272"><paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.Threading.AbandonedMutexException"><span data-ttu-id="8646c-273">Czas oczekiwania zakończyć, ponieważ wątek został zakończony bez zwalniania elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="8646c-273">The wait completed because a thread exited without releasing a mutex.</span></span> <span data-ttu-id="8646c-274">Ten wyjątek nie jest generowany na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="8646c-274">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8646c-275">Zwalnia wszelkie zasoby używane przez <see cref="T:System.Threading.WaitHandle" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-275">Releases all resources used by the <see cref="T:System.Threading.WaitHandle" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="8646c-276">Wywoływanie `Dispose` umożliwia zasoby używane przez <xref:System.Threading.WaitHandle> zostają przeniesione do innych celów.</span><span class="sxs-lookup"><span data-stu-id="8646c-276">Calling `Dispose` allows the resources used by the <xref:System.Threading.WaitHandle> to be reallocated for other purposes.</span></span> <span data-ttu-id="8646c-277">Aby uzyskać więcej informacji na temat `Dispose`, zobacz [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="8646c-277">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>

]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="WaitAll">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8646c-278">Czeka, aż wszystkie elementy w wybranej tablicy do otrzymania sygnału.</span><span class="sxs-lookup"><span data-stu-id="8646c-278">Waits for all the elements in the specified array to receive a signal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WaitAll">
      <MemberSignature Language="C#" Value="public static bool WaitAll (System.Threading.WaitHandle[] waitHandles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WaitAll(class System.Threading.WaitHandle[] waitHandles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAll (waitHandles As WaitHandle()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool WaitAll(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles);" />
      <MemberSignature Language="F#" Value="static member WaitAll : System.Threading.WaitHandle[] -&gt; bool" Usage="System.Threading.WaitHandle.WaitAll waitHandles" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
      </Parameters>
      <Docs>
        <param name="waitHandles"><span data-ttu-id="8646c-279">A <see langword="WaitHandle" /> tablicę zawierającą obiekty, dla których będzie czekać bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="8646c-279">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span></span> <span data-ttu-id="8646c-280">Ta tablica nie może zawierać wiele odwołań do tego samego obiektu.</span><span class="sxs-lookup"><span data-stu-id="8646c-280">This array cannot contain multiple references to the same object.</span></span></param>
        <summary><span data-ttu-id="8646c-281">Czeka, aż wszystkie elementy w wybranej tablicy do otrzymania sygnału.</span><span class="sxs-lookup"><span data-stu-id="8646c-281">Waits for all the elements in the specified array to receive a signal.</span></span></summary>
        <returns><span data-ttu-id="8646c-282"><see langword="true" /> gdy każdy element w kolekcji <paramref name="waitHandles" /> otrzymał sygnał; w przeciwnym razie metoda nigdy nie zwraca.</span><span class="sxs-lookup"><span data-stu-id="8646c-282"><see langword="true" /> when every element in <paramref name="waitHandles" /> has received a signal; otherwise the method never returns.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8646c-283"><xref:System.Threading.AbandonedMutexException> jest nowa w .NET Framework w wersji 2.0.</span><span class="sxs-lookup"><span data-stu-id="8646c-283"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="8646c-284">W poprzednich wersjach <xref:System.Threading.WaitHandle.WaitAll%2A> metoda zwraca `true` po mutex zostanie porzucony.</span><span class="sxs-lookup"><span data-stu-id="8646c-284">In previous versions, the <xref:System.Threading.WaitHandle.WaitAll%2A> method returns `true` when a mutex is abandoned.</span></span> <span data-ttu-id="8646c-285">Porzuconego elementu mutex często oznacza to poważny błąd kodowania.</span><span class="sxs-lookup"><span data-stu-id="8646c-285">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="8646c-286">W przypadku elementu mutex całego systemu może wskazywać, że aplikacja został zakończony nagle (na przykład przy użyciu Menedżera zadań Windows).</span><span class="sxs-lookup"><span data-stu-id="8646c-286">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="8646c-287">Wyjątek zawiera informacje przydatne podczas debugowania.</span><span class="sxs-lookup"><span data-stu-id="8646c-287">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="8646c-288"><xref:System.Threading.WaitHandle.WaitAll%2A> Metoda zwraca wartość, gdy są sygnalizowane wszystkie uchwyty.</span><span class="sxs-lookup"><span data-stu-id="8646c-288">The <xref:System.Threading.WaitHandle.WaitAll%2A> method returns when all the handles are signaled.</span></span> <span data-ttu-id="8646c-289">W niektórych implementacjach obsługuje więcej niż 64 są przekazywane <xref:System.NotSupportedException> zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="8646c-289">On some implementations, if more than 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span> <span data-ttu-id="8646c-290">Jeśli tablica zawiera duplikaty, wywołanie zakończy się niepowodzeniem z <xref:System.DuplicateWaitObjectException>.</span><span class="sxs-lookup"><span data-stu-id="8646c-290">If the array contains duplicates, the call fails with a <xref:System.DuplicateWaitObjectException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8646c-291"><xref:System.Threading.WaitHandle.WaitAll%2A> Metoda nie jest obsługiwana w wątkach, które mają <xref:System.STAThreadAttribute>.</span><span class="sxs-lookup"><span data-stu-id="8646c-291">The <xref:System.Threading.WaitHandle.WaitAll%2A> method is not supported on threads that have <xref:System.STAThreadAttribute>.</span></span>  
  
 <span data-ttu-id="8646c-292">Wywołanie tego przeciążenia metody jest równoważne z wywoływaniem <xref:System.Threading.WaitHandle.WaitAll%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> przeciążenie metody i określając wartość -1 (lub <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>) dla `millisecondsTimeout` i `true` dla `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="8646c-292">Calling this method overload is equivalent to calling the <xref:System.Threading.WaitHandle.WaitAll%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> method overload and specifying -1 (or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>) for `millisecondsTimeout` and `true` for `exitContext`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8646c-293">Poniższy przykład kodu pokazuje, jak używać puli wątków, aby asynchronicznie tworzyć i zapisywać grupy plików.</span><span class="sxs-lookup"><span data-stu-id="8646c-293">The following code example shows how to use the thread pool to asynchronously create and write to a group of files.</span></span> <span data-ttu-id="8646c-294">Po zakończeniu każdej operacji zapisu jest w kolejce jako element roboczy i sygnałów.</span><span class="sxs-lookup"><span data-stu-id="8646c-294">Each write operation is queued as a work item and signals when it is finished.</span></span> <span data-ttu-id="8646c-295">Główny wątek czeka, aż wszystkie elementy do sygnalizowania, a następnie kończy działanie.</span><span class="sxs-lookup"><span data-stu-id="8646c-295">The main thread waits for all the items to signal and then exits.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitAll1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll1/CPP/source1.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitAll1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll1/CS/source1.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitAll1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll1/VB/source1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8646c-296"><paramref name="waitHandles" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-296">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span></span> <span data-ttu-id="8646c-297">—lub—</span><span class="sxs-lookup"><span data-stu-id="8646c-297">-or-</span></span> 
<span data-ttu-id="8646c-298">Co najmniej jeden z obiektów w <paramref name="waitHandles" /> tablicy są <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-298">One or more of the objects in the <paramref name="waitHandles" /> array are <see langword="null" />.</span></span>  
  
<span data-ttu-id="8646c-299">—lub—</span><span class="sxs-lookup"><span data-stu-id="8646c-299">-or-</span></span> 
 <span data-ttu-id="8646c-300"><paramref name="waitHandles" /> jest tablicą bez elementów i wersji programu .NET Framework jest 2.0 lub nowszej.</span><span class="sxs-lookup"><span data-stu-id="8646c-300"><paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 2.0 or later.</span></span></exception>
        <exception cref="T:System.DuplicateWaitObjectException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="8646c-301">W <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> lub <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, przechwycić wyjątek klasy bazowej <see cref="T:System.ArgumentException" />, a zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="8646c-301">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.ArgumentException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="8646c-302"><paramref name="waitHandles" /> Tablica zawiera elementy, które są duplikatami.</span><span class="sxs-lookup"><span data-stu-id="8646c-302">The <paramref name="waitHandles" /> array contains elements that are duplicates.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8646c-303">Liczba obiektów w <paramref name="waitHandles" /> jest większa niż zezwala na system.</span><span class="sxs-lookup"><span data-stu-id="8646c-303">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span></span>  
  
<span data-ttu-id="8646c-304">—lub—</span><span class="sxs-lookup"><span data-stu-id="8646c-304">-or-</span></span> 
<span data-ttu-id="8646c-305"><see cref="T:System.STAThreadAttribute" /> Atrybut jest stosowany do procedury wątku dla bieżącego wątku i <paramref name="waitHandles" /> zawiera więcej niż jeden element.</span><span class="sxs-lookup"><span data-stu-id="8646c-305">The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element.</span></span></exception>
        <exception cref="T:System.ApplicationException"><span data-ttu-id="8646c-306"><paramref name="waitHandles" /> jest tablicą bez elementów i wersji programu .NET Framework jest w wersji 1.0 lub 1.1.</span><span class="sxs-lookup"><span data-stu-id="8646c-306"><paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 1.0 or 1.1.</span></span></exception>
        <exception cref="T:System.Threading.AbandonedMutexException"><span data-ttu-id="8646c-307">Czas oczekiwania zakończone, ponieważ wątek został zakończony bez zwalniania elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="8646c-307">The wait terminated because a thread exited without releasing a mutex.</span></span> <span data-ttu-id="8646c-308">Ten wyjątek nie jest generowany na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="8646c-308">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8646c-309"><paramref name="waitHandles" /> Tablica zawiera przezroczyste serwera proxy dla <see cref="T:System.Threading.WaitHandle" /> w innej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="8646c-309">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAll">
      <MemberSignature Language="C#" Value="public static bool WaitAll (System.Threading.WaitHandle[] waitHandles, int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WaitAll(class System.Threading.WaitHandle[] waitHandles, int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAll (waitHandles As WaitHandle(), millisecondsTimeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool WaitAll(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="static member WaitAll : System.Threading.WaitHandle[] * int -&gt; bool" Usage="System.Threading.WaitHandle.WaitAll (waitHandles, millisecondsTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="waitHandles"><span data-ttu-id="8646c-310">A <see langword="WaitHandle" /> tablicę zawierającą obiekty, dla których będzie czekać bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="8646c-310">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span></span> <span data-ttu-id="8646c-311">Ta tablica nie może zawierać wiele odwołań do tego samego obiektu (duplikatów).</span><span class="sxs-lookup"><span data-stu-id="8646c-311">This array cannot contain multiple references to the same object (duplicates).</span></span></param>
        <param name="millisecondsTimeout"><span data-ttu-id="8646c-312">Liczba milisekund, lub <see cref="F:System.Threading.Timeout.Infinite" /> (-1), aby czekać w nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="8646c-312">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="8646c-313">Czeka, aż wszystkie elementy w określonej tablicy, aby otrzymać sygnał, za pomocą <see cref="T:System.Int32" /> wartość, aby określić interwał czasu.</span><span class="sxs-lookup"><span data-stu-id="8646c-313">Waits for all the elements in the specified array to receive a signal, using an <see cref="T:System.Int32" /> value to specify the time interval.</span></span></summary>
        <returns><span data-ttu-id="8646c-314"><see langword="true" /> gdy każdy element w kolekcji <paramref name="waitHandles" /> otrzymał sygnał; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-314"><see langword="true" /> when every element in <paramref name="waitHandles" /> has received a signal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8646c-315">Jeśli `millisecondsTimeout` wynosi zero, nie są blokowane w metodzie.</span><span class="sxs-lookup"><span data-stu-id="8646c-315">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="8646c-316">Testuje, stan uchwytami oczekiwania i zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="8646c-316">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="8646c-317"><xref:System.Threading.WaitHandle.WaitAll%2A> Metoda zwraca wartość, gdy czas oczekiwania skończy się, co oznacza, że gdy wszystkie uchwyty są sygnalizowane lub przekroczenia limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="8646c-317">The <xref:System.Threading.WaitHandle.WaitAll%2A> method returns when the wait terminates, which means either when all the handles are signaled or when time-out occurs.</span></span> <span data-ttu-id="8646c-318">W niektórych implementacjach obsługuje więcej niż 64 są przekazywane <xref:System.NotSupportedException> zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="8646c-318">On some implementations, if more than 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span> <span data-ttu-id="8646c-319">Jeśli istnieją duplikaty w tablicy, wywołania kończy się niepowodzeniem z <xref:System.DuplicateWaitObjectException>.</span><span class="sxs-lookup"><span data-stu-id="8646c-319">If there are duplicates in the array, the call fails with a <xref:System.DuplicateWaitObjectException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8646c-320"><xref:System.Threading.WaitHandle.WaitAll%2A> Metoda nie jest obsługiwana w wątkach, które mają <xref:System.STAThreadAttribute>.</span><span class="sxs-lookup"><span data-stu-id="8646c-320">The <xref:System.Threading.WaitHandle.WaitAll%2A> method is not supported on threads that have <xref:System.STAThreadAttribute>.</span></span>  
  
 <span data-ttu-id="8646c-321">Wywołanie tego przeciążenia metody jest taka sama jak wywołanie <xref:System.Threading.WaitHandle.WaitAll%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> przeciążenia i określając `false` dla `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="8646c-321">Calling this method overload is the same as calling the <xref:System.Threading.WaitHandle.WaitAll%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> overload and specifying `false` for `exitContext`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8646c-322"><paramref name="waitHandles" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-322">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="8646c-323">—lub—</span><span class="sxs-lookup"><span data-stu-id="8646c-323">-or-</span></span> 
<span data-ttu-id="8646c-324">Co najmniej jeden z obiektów w <paramref name="waitHandles" /> tablica jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-324">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span></span>  
  
<span data-ttu-id="8646c-325">—lub—</span><span class="sxs-lookup"><span data-stu-id="8646c-325">-or-</span></span> 
 <span data-ttu-id="8646c-326"><paramref name="waitHandles" /> jest tablicą bez elementów.</span><span class="sxs-lookup"><span data-stu-id="8646c-326"><paramref name="waitHandles" /> is an array with no elements.</span></span></exception>
        <exception cref="T:System.DuplicateWaitObjectException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="8646c-327">W <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> lub <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, przechwycić wyjątek klasy bazowej <see cref="T:System.ArgumentException" />, a zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="8646c-327">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.ArgumentException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="8646c-328"><paramref name="waitHandles" /> Tablica zawiera elementy, które są duplikatami.</span><span class="sxs-lookup"><span data-stu-id="8646c-328">The <paramref name="waitHandles" /> array contains elements that are duplicates.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8646c-329">Liczba obiektów w <paramref name="waitHandles" /> jest większa niż zezwala na system.</span><span class="sxs-lookup"><span data-stu-id="8646c-329">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span></span>  
  
<span data-ttu-id="8646c-330">—lub—</span><span class="sxs-lookup"><span data-stu-id="8646c-330">-or-</span></span> 
<span data-ttu-id="8646c-331"><see cref="T:System.STAThreadAttribute" /> Atrybut jest stosowany do procedury wątku dla bieżącego wątku i <paramref name="waitHandles" /> zawiera więcej niż jeden element.</span><span class="sxs-lookup"><span data-stu-id="8646c-331">The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8646c-332"><paramref name="millisecondsTimeout" /> jest liczbą ujemną od-1, który reprezentuje nieskończony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="8646c-332"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
        <exception cref="T:System.Threading.AbandonedMutexException"><span data-ttu-id="8646c-333">Czas oczekiwania zakończyć, ponieważ wątek został zakończony bez zwalniania elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="8646c-333">The wait completed because a thread exited without releasing a mutex.</span></span> <span data-ttu-id="8646c-334">Ten wyjątek nie jest generowany na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="8646c-334">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8646c-335"><paramref name="waitHandles" /> Tablica zawiera przezroczyste serwera proxy dla <see cref="T:System.Threading.WaitHandle" /> w innej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="8646c-335">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAll">
      <MemberSignature Language="C#" Value="public static bool WaitAll (System.Threading.WaitHandle[] waitHandles, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WaitAll(class System.Threading.WaitHandle[] waitHandles, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAll (waitHandles As WaitHandle(), timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool WaitAll(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member WaitAll : System.Threading.WaitHandle[] * TimeSpan -&gt; bool" Usage="System.Threading.WaitHandle.WaitAll (waitHandles, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="waitHandles"><span data-ttu-id="8646c-336">A <see langword="WaitHandle" /> tablicę zawierającą obiekty, dla których będzie czekać bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="8646c-336">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span></span> <span data-ttu-id="8646c-337">Ta tablica nie może zawierać wiele odwołań do tego samego obiektu.</span><span class="sxs-lookup"><span data-stu-id="8646c-337">This array cannot contain multiple references to the same object.</span></span></param>
        <param name="timeout"><span data-ttu-id="8646c-338">A <see cref="T:System.TimeSpan" /> reprezentujący liczbę milisekund oczekiwania, lub <see cref="T:System.TimeSpan" /> reprezentujący milisekund-1, aby czekać w nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="8646c-338">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds, to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="8646c-339">Czeka, aż wszystkie elementy w określonej tablicy, aby otrzymać sygnał, za pomocą <see cref="T:System.TimeSpan" /> wartość, aby określić interwał czasu.</span><span class="sxs-lookup"><span data-stu-id="8646c-339">Waits for all the elements in the specified array to receive a signal, using a <see cref="T:System.TimeSpan" /> value to specify the time interval.</span></span></summary>
        <returns><span data-ttu-id="8646c-340"><see langword="true" /> gdy każdy element w kolekcji <paramref name="waitHandles" /> otrzymał sygnał; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-340"><see langword="true" /> when every element in <paramref name="waitHandles" /> has received a signal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8646c-341">Jeśli `timeout` wynosi zero, nie są blokowane w metodzie.</span><span class="sxs-lookup"><span data-stu-id="8646c-341">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="8646c-342">Testuje, stan uchwytami oczekiwania i zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="8646c-342">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="8646c-343"><xref:System.Threading.WaitHandle.WaitAll%2A> Metoda zwraca wartość, gdy czas oczekiwania skończy, co oznacza, że są sygnalizowane albo wszystkie dojścia lub przekroczenia limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="8646c-343">The <xref:System.Threading.WaitHandle.WaitAll%2A> method returns when the wait terminates, which means either all the handles are signaled or a time-out occurs.</span></span> <span data-ttu-id="8646c-344">W niektórych implementacjach obsługuje więcej niż 64 są przekazywane <xref:System.NotSupportedException> zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="8646c-344">On some implementations, if more than 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span> <span data-ttu-id="8646c-345">Jeśli tablica zawiera duplikaty, wywołanie zakończy się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="8646c-345">If the array contains duplicates, the call will fail.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8646c-346"><xref:System.Threading.WaitHandle.WaitAll%2A> Metoda nie jest obsługiwana w wątkach, które mają <xref:System.STAThreadAttribute>.</span><span class="sxs-lookup"><span data-stu-id="8646c-346">The <xref:System.Threading.WaitHandle.WaitAll%2A> method is not supported on threads that have <xref:System.STAThreadAttribute>.</span></span>  
  
 <span data-ttu-id="8646c-347">Maksymalna wartość `timeout` jest <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8646c-347">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8646c-348">Wywołanie tego przeciążenia metody jest taka sama jak wywołanie <xref:System.Threading.WaitHandle.WaitAll%28System.Threading.WaitHandle%5B%5D%2CSystem.TimeSpan%2CSystem.Boolean%29> przeciążenia i określając `false` dla `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="8646c-348">Calling this method overload is the same as calling the <xref:System.Threading.WaitHandle.WaitAll%28System.Threading.WaitHandle%5B%5D%2CSystem.TimeSpan%2CSystem.Boolean%29> overload and specifying `false` for `exitContext`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8646c-349"><paramref name="waitHandles" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-349">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="8646c-350">—lub—</span><span class="sxs-lookup"><span data-stu-id="8646c-350">-or-</span></span> 
<span data-ttu-id="8646c-351">Co najmniej jeden z obiektów w <paramref name="waitHandles" /> tablica jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-351">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span></span>  
  
<span data-ttu-id="8646c-352">—lub—</span><span class="sxs-lookup"><span data-stu-id="8646c-352">-or-</span></span> 
 <span data-ttu-id="8646c-353"><paramref name="waitHandles" /> jest tablicą bez elementów.</span><span class="sxs-lookup"><span data-stu-id="8646c-353"><paramref name="waitHandles" /> is an array with no elements.</span></span></exception>
        <exception cref="T:System.DuplicateWaitObjectException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="8646c-354">W <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> lub <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, przechwycić wyjątek klasy bazowej <see cref="T:System.ArgumentException" />, a zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="8646c-354">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.ArgumentException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="8646c-355"><paramref name="waitHandles" /> Tablica zawiera elementy, które są duplikatami.</span><span class="sxs-lookup"><span data-stu-id="8646c-355">The <paramref name="waitHandles" /> array contains elements that are duplicates.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8646c-356">Liczba obiektów w <paramref name="waitHandles" /> jest większa niż zezwala na system.</span><span class="sxs-lookup"><span data-stu-id="8646c-356">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span></span>  
  
<span data-ttu-id="8646c-357">—lub—</span><span class="sxs-lookup"><span data-stu-id="8646c-357">-or-</span></span> 
<span data-ttu-id="8646c-358"><see cref="T:System.STAThreadAttribute" /> Atrybut jest stosowany do procedury wątku dla bieżącego wątku i <paramref name="waitHandles" /> zawiera więcej niż jeden element.</span><span class="sxs-lookup"><span data-stu-id="8646c-358">The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8646c-359"><paramref name="timeout" /> jest to liczba ujemna innych niż milisekund wartości-1, który reprezentuje nieskończony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="8646c-359"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span></span> 
<span data-ttu-id="8646c-360">—lub—</span><span class="sxs-lookup"><span data-stu-id="8646c-360">-or-</span></span> 
 <span data-ttu-id="8646c-361"><paramref name="timeout" /> jest większa niż <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-361"><paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.Threading.AbandonedMutexException"><span data-ttu-id="8646c-362">Czas oczekiwania zakończone, ponieważ wątek został zakończony bez zwalniania elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="8646c-362">The wait terminated because a thread exited without releasing a mutex.</span></span> <span data-ttu-id="8646c-363">Ten wyjątek nie jest generowany na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="8646c-363">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8646c-364"><paramref name="waitHandles" /> Tablica zawiera przezroczyste serwera proxy dla <see cref="T:System.Threading.WaitHandle" /> w innej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="8646c-364">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAll">
      <MemberSignature Language="C#" Value="public static bool WaitAll (System.Threading.WaitHandle[] waitHandles, int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WaitAll(class System.Threading.WaitHandle[] waitHandles, int32 millisecondsTimeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAll (waitHandles As WaitHandle(), millisecondsTimeout As Integer, exitContext As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool WaitAll(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="static member WaitAll : System.Threading.WaitHandle[] * int * bool -&gt; bool" Usage="System.Threading.WaitHandle.WaitAll (waitHandles, millisecondsTimeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="waitHandles"><span data-ttu-id="8646c-365">A <see langword="WaitHandle" /> tablicę zawierającą obiekty, dla których będzie czekać bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="8646c-365">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span></span> <span data-ttu-id="8646c-366">Ta tablica nie może zawierać wiele odwołań do tego samego obiektu (duplikatów).</span><span class="sxs-lookup"><span data-stu-id="8646c-366">This array cannot contain multiple references to the same object (duplicates).</span></span></param>
        <param name="millisecondsTimeout"><span data-ttu-id="8646c-367">Liczba milisekund, lub <see cref="F:System.Threading.Timeout.Infinite" /> (-1), aby czekać w nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="8646c-367">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span></span></param>
        <param name="exitContext"><span data-ttu-id="8646c-368"><see langword="true" /> Aby zakończyć domeny synchronizacji dla kontekstu przed oczekiwaniem (Jeśli w kontekście zsynchronizowane), a potem; ponownie pobrać w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-368"><see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8646c-369">Czeka, aż wszystkie elementy w określonej tablicy, aby otrzymać sygnał, za pomocą <see cref="T:System.Int32" /> wartością do określenia interwału czasu i określeniu, czy zakończyć domeny synchronizacji przed czas oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="8646c-369">Waits for all the elements in the specified array to receive a signal, using an <see cref="T:System.Int32" /> value to specify the time interval and specifying whether to exit the synchronization domain before the wait.</span></span></summary>
        <returns><span data-ttu-id="8646c-370"><see langword="true" /> gdy każdy element w kolekcji <paramref name="waitHandles" /> otrzymał sygnał; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-370"><see langword="true" /> when every element in <paramref name="waitHandles" /> has received a signal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8646c-371">Jeśli `millisecondsTimeout` wynosi zero, nie są blokowane w metodzie.</span><span class="sxs-lookup"><span data-stu-id="8646c-371">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="8646c-372">Testuje, stan uchwytami oczekiwania i zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="8646c-372">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="8646c-373"><xref:System.Threading.AbandonedMutexException> jest nowa w .NET Framework w wersji 2.0.</span><span class="sxs-lookup"><span data-stu-id="8646c-373"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="8646c-374">W poprzednich wersjach <xref:System.Threading.WaitHandle.WaitAll%2A> metoda zwraca `true` po mutex zostanie porzucony.</span><span class="sxs-lookup"><span data-stu-id="8646c-374">In previous versions, the <xref:System.Threading.WaitHandle.WaitAll%2A> method returns `true` when a mutex is abandoned.</span></span> <span data-ttu-id="8646c-375">Porzuconego elementu mutex często oznacza to poważny błąd kodowania.</span><span class="sxs-lookup"><span data-stu-id="8646c-375">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="8646c-376">W przypadku elementu mutex całego systemu może wskazywać, że aplikacja został zakończony nagle (na przykład przy użyciu Menedżera zadań Windows).</span><span class="sxs-lookup"><span data-stu-id="8646c-376">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="8646c-377">Wyjątek zawiera informacje przydatne podczas debugowania.</span><span class="sxs-lookup"><span data-stu-id="8646c-377">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="8646c-378"><xref:System.Threading.WaitHandle.WaitAll%2A> Metoda zwraca wartość, gdy czas oczekiwania skończy się, co oznacza, że gdy wszystkie uchwyty są sygnalizowane lub przekroczenia limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="8646c-378">The <xref:System.Threading.WaitHandle.WaitAll%2A> method returns when the wait terminates, which means either when all the handles are signaled or when time-out occurs.</span></span> <span data-ttu-id="8646c-379">W niektórych implementacjach obsługuje więcej niż 64 są przekazywane <xref:System.NotSupportedException> zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="8646c-379">On some implementations, if more than 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span> <span data-ttu-id="8646c-380">Jeśli istnieją duplikaty w tablicy, wywołania kończy się niepowodzeniem z <xref:System.DuplicateWaitObjectException>.</span><span class="sxs-lookup"><span data-stu-id="8646c-380">If there are duplicates in the array, the call fails with a <xref:System.DuplicateWaitObjectException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8646c-381"><xref:System.Threading.WaitHandle.WaitAll%2A> Metoda nie jest obsługiwana w wątkach, które mają <xref:System.STAThreadAttribute>.</span><span class="sxs-lookup"><span data-stu-id="8646c-381">The <xref:System.Threading.WaitHandle.WaitAll%2A> method is not supported on threads that have <xref:System.STAThreadAttribute>.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="8646c-382">Uwagi dotyczące zamykania kontekstu</span><span class="sxs-lookup"><span data-stu-id="8646c-382">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="8646c-383">`exitContext` Parametr jest ignorowany, chyba że <xref:System.Threading.WaitHandle.WaitAll%2A> metoda jest wywoływana z wewnątrz inny niż domyślny kontekst zarządzanych.</span><span class="sxs-lookup"><span data-stu-id="8646c-383">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.WaitAll%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="8646c-384">Może się to zdarzyć, jeśli wątek znajduje się wewnątrz wywołania do wystąpienia klasy pochodzącej od <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="8646c-384">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="8646c-385">Nawet wtedy, gdy są aktualnie wykonuje metodę w klasie, która nie pochodzi od <xref:System.ContextBoundObject>, takiej jak <xref:System.String>, może być w kontekście innej niż domyślna Jeśli <xref:System.ContextBoundObject> znajduje się na stosie w bieżącej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="8646c-385">Even if you are currently executing a method on a class that is not derived from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="8646c-386">Gdy kod jest wykonywany w kontekście innej niż domyślna, określając `true` dla `exitContext` powoduje, że wątku zamknąć kontekstu zarządzanych inną niż domyślna (oznacza to, do którego nastąpi przejście do domyślnego kontekstu) przed wykonaniem <xref:System.Threading.WaitHandle.WaitAll%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8646c-386">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.WaitAll%2A> method.</span></span> <span data-ttu-id="8646c-387">Wątek jest zwracany do oryginalnego kontekstu niedomyślną po wywołaniu <xref:System.Threading.WaitHandle.WaitAll%2A> ukończeniu metody.</span><span class="sxs-lookup"><span data-stu-id="8646c-387">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.WaitAll%2A> method completes.</span></span>  
  
 <span data-ttu-id="8646c-388">Może to być przydatne, gdy zawiera klasy powiązane z kontekstu <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute> atrybutu.</span><span class="sxs-lookup"><span data-stu-id="8646c-388">This can be useful when the context-bound class has the <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute> attribute.</span></span> <span data-ttu-id="8646c-389">W takim przypadku wszystkie wywołania do elementów członkowskich klasy są automatycznie synchronizowane i domena synchronizacji jest cały kod dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="8646c-389">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="8646c-390">Jeśli kod w stosie wywołań elementu członkowskiego wywołuje <xref:System.Threading.WaitHandle.WaitAll%2A> metody i określa `true` dla `exitContext`, wątek kończy działanie synchronizacji domeny, dzięki czemu wątek, który jest zablokowany w wywołaniu do wszystkich elementów członkowskich obiektu, aby kontynuować.</span><span class="sxs-lookup"><span data-stu-id="8646c-390">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.WaitAll%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="8646c-391">Gdy <xref:System.Threading.WaitHandle.WaitAll%2A> metoda zwróci wartość, wątku, który zgłosił wywołanie musi czekać ponownie domeny synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="8646c-391">When the <xref:System.Threading.WaitHandle.WaitAll%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8646c-392">Poniższy przykład kodu pokazuje, jak używać puli wątków, aby asynchronicznie tworzyć i zapisywać grupy plików.</span><span class="sxs-lookup"><span data-stu-id="8646c-392">The following code example shows how to use the thread pool to asynchronously create and write to a group of files.</span></span> <span data-ttu-id="8646c-393">Po zakończeniu każdej operacji zapisu jest w kolejce jako element roboczy i sygnałów.</span><span class="sxs-lookup"><span data-stu-id="8646c-393">Each write operation is queued as a work item and signals when it is finished.</span></span> <span data-ttu-id="8646c-394">Główny wątek czeka, aż wszystkie elementy do sygnalizowania, a następnie kończy działanie.</span><span class="sxs-lookup"><span data-stu-id="8646c-394">The main thread waits for all the items to signal and then exits.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitAll2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll2/CPP/source2.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitAll2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll2/CS/source2.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitAll2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll2/VB/source2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8646c-395"><paramref name="waitHandles" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-395">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="8646c-396">—lub—</span><span class="sxs-lookup"><span data-stu-id="8646c-396">-or-</span></span> 
<span data-ttu-id="8646c-397">Co najmniej jeden z obiektów w <paramref name="waitHandles" /> tablica jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-397">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span></span>  
  
<span data-ttu-id="8646c-398">—lub—</span><span class="sxs-lookup"><span data-stu-id="8646c-398">-or-</span></span> 
 <span data-ttu-id="8646c-399"><paramref name="waitHandles" /> jest tablicą bez elementów i wersji programu .NET Framework jest 2.0 lub nowszej.</span><span class="sxs-lookup"><span data-stu-id="8646c-399"><paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 2.0 or later.</span></span></exception>
        <exception cref="T:System.DuplicateWaitObjectException"><span data-ttu-id="8646c-400"><paramref name="waitHandles" /> Tablica zawiera elementy, które są duplikatami.</span><span class="sxs-lookup"><span data-stu-id="8646c-400">The <paramref name="waitHandles" /> array contains elements that are duplicates.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8646c-401">Liczba obiektów w <paramref name="waitHandles" /> jest większa niż zezwala na system.</span><span class="sxs-lookup"><span data-stu-id="8646c-401">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span></span>  
  
<span data-ttu-id="8646c-402">—lub—</span><span class="sxs-lookup"><span data-stu-id="8646c-402">-or-</span></span> 
<span data-ttu-id="8646c-403"><see cref="T:System.STAThreadAttribute" /> Atrybut jest stosowany do procedury wątku dla bieżącego wątku i <paramref name="waitHandles" /> zawiera więcej niż jeden element.</span><span class="sxs-lookup"><span data-stu-id="8646c-403">The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element.</span></span></exception>
        <exception cref="T:System.ApplicationException"><span data-ttu-id="8646c-404"><paramref name="waitHandles" /> jest tablicą bez elementów i wersji programu .NET Framework jest w wersji 1.0 lub 1.1.</span><span class="sxs-lookup"><span data-stu-id="8646c-404"><paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 1.0 or 1.1.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8646c-405"><paramref name="millisecondsTimeout" /> jest liczbą ujemną od-1, który reprezentuje nieskończony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="8646c-405"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
        <exception cref="T:System.Threading.AbandonedMutexException"><span data-ttu-id="8646c-406">Czas oczekiwania zakończyć, ponieważ wątek został zakończony bez zwalniania elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="8646c-406">The wait completed because a thread exited without releasing a mutex.</span></span> <span data-ttu-id="8646c-407">Ten wyjątek nie jest generowany na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="8646c-407">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8646c-408"><paramref name="waitHandles" /> Tablica zawiera przezroczyste serwera proxy dla <see cref="T:System.Threading.WaitHandle" /> w innej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="8646c-408">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAll">
      <MemberSignature Language="C#" Value="public static bool WaitAll (System.Threading.WaitHandle[] waitHandles, TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WaitAll(class System.Threading.WaitHandle[] waitHandles, valuetype System.TimeSpan timeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAll (waitHandles As WaitHandle(), timeout As TimeSpan, exitContext As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool WaitAll(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="static member WaitAll : System.Threading.WaitHandle[] * TimeSpan * bool -&gt; bool" Usage="System.Threading.WaitHandle.WaitAll (waitHandles, timeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="waitHandles"><span data-ttu-id="8646c-409">A <see langword="WaitHandle" /> tablicę zawierającą obiekty, dla których będzie czekać bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="8646c-409">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span></span> <span data-ttu-id="8646c-410">Ta tablica nie może zawierać wiele odwołań do tego samego obiektu.</span><span class="sxs-lookup"><span data-stu-id="8646c-410">This array cannot contain multiple references to the same object.</span></span></param>
        <param name="timeout"><span data-ttu-id="8646c-411">A <see cref="T:System.TimeSpan" /> reprezentujący liczbę milisekund oczekiwania, lub <see cref="T:System.TimeSpan" /> reprezentujący milisekund-1, aby czekać w nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="8646c-411">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds, to wait indefinitely.</span></span></param>
        <param name="exitContext"><span data-ttu-id="8646c-412"><see langword="true" /> Aby zakończyć domeny synchronizacji dla kontekstu przed oczekiwaniem (Jeśli w kontekście zsynchronizowane), a potem; ponownie pobrać w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-412"><see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8646c-413">Czeka, aż wszystkie elementy w określonej tablicy, aby otrzymać sygnał, za pomocą <see cref="T:System.TimeSpan" /> wartość do określenia interwału czasu, a określająca, czy zakończyć domeny synchronizacji przed czas oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="8646c-413">Waits for all the elements in the specified array to receive a signal, using a <see cref="T:System.TimeSpan" /> value to specify the time interval, and specifying whether to exit the synchronization domain before the wait.</span></span></summary>
        <returns><span data-ttu-id="8646c-414"><see langword="true" /> gdy każdy element w kolekcji <paramref name="waitHandles" /> otrzymał sygnał; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-414"><see langword="true" /> when every element in <paramref name="waitHandles" /> has received a signal; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8646c-415">Jeśli `timeout` wynosi zero, nie są blokowane w metodzie.</span><span class="sxs-lookup"><span data-stu-id="8646c-415">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="8646c-416">Testuje, stan uchwytami oczekiwania i zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="8646c-416">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="8646c-417"><xref:System.Threading.AbandonedMutexException> jest nowa w .NET Framework w wersji 2.0.</span><span class="sxs-lookup"><span data-stu-id="8646c-417"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="8646c-418">W poprzednich wersjach <xref:System.Threading.WaitHandle.WaitAll%2A> metoda zwraca `true` po mutex zostanie porzucony.</span><span class="sxs-lookup"><span data-stu-id="8646c-418">In previous versions, the <xref:System.Threading.WaitHandle.WaitAll%2A> method returns `true` when a mutex is abandoned.</span></span> <span data-ttu-id="8646c-419">Porzuconego elementu mutex często oznacza to poważny błąd kodowania.</span><span class="sxs-lookup"><span data-stu-id="8646c-419">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="8646c-420">W przypadku elementu mutex całego systemu może wskazywać, że aplikacja został zakończony nagle (na przykład przy użyciu Menedżera zadań Windows).</span><span class="sxs-lookup"><span data-stu-id="8646c-420">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="8646c-421">Wyjątek zawiera informacje przydatne podczas debugowania.</span><span class="sxs-lookup"><span data-stu-id="8646c-421">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="8646c-422"><xref:System.Threading.WaitHandle.WaitAll%2A> Metoda zwraca wartość, gdy czas oczekiwania skończy, co oznacza, że są sygnalizowane albo wszystkie dojścia lub przekroczenia limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="8646c-422">The <xref:System.Threading.WaitHandle.WaitAll%2A> method returns when the wait terminates, which means either all the handles are signaled or a time-out occurs.</span></span> <span data-ttu-id="8646c-423">W niektórych implementacjach obsługuje więcej niż 64 są przekazywane <xref:System.NotSupportedException> zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="8646c-423">On some implementations, if more than 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span> <span data-ttu-id="8646c-424">Jeśli tablica zawiera duplikaty, wywołanie zakończy się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="8646c-424">If the array contains duplicates, the call will fail.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8646c-425"><xref:System.Threading.WaitHandle.WaitAll%2A> Metoda nie jest obsługiwana w wątkach, które mają <xref:System.STAThreadAttribute>.</span><span class="sxs-lookup"><span data-stu-id="8646c-425">The <xref:System.Threading.WaitHandle.WaitAll%2A> method is not supported on threads that have <xref:System.STAThreadAttribute>.</span></span>  
  
 <span data-ttu-id="8646c-426">Maksymalna wartość `timeout` jest <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8646c-426">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="8646c-427">Uwagi dotyczące zamykania kontekstu</span><span class="sxs-lookup"><span data-stu-id="8646c-427">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="8646c-428">`exitContext` Parametr jest ignorowany, chyba że <xref:System.Threading.WaitHandle.WaitAll%2A> metoda jest wywoływana z wewnątrz inny niż domyślny kontekst zarządzanych.</span><span class="sxs-lookup"><span data-stu-id="8646c-428">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.WaitAll%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="8646c-429">Może się to zdarzyć, jeśli wątek znajduje się wewnątrz wywołania do wystąpienia klasy pochodzącej od <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="8646c-429">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="8646c-430">Nawet wtedy, gdy są aktualnie wykonuje metodę w klasie, która nie pochodzi od <xref:System.ContextBoundObject>, takiej jak <xref:System.String>, może być w kontekście innej niż domyślna Jeśli <xref:System.ContextBoundObject> znajduje się na stosie w bieżącej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="8646c-430">Even if you are currently executing a method on a class that is not derived from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="8646c-431">Gdy kod jest wykonywany w kontekście innej niż domyślna, określając `true` dla `exitContext` powoduje, że wątku zamknąć kontekstu zarządzanych inną niż domyślna (oznacza to, do którego nastąpi przejście do domyślnego kontekstu) przed wykonaniem <xref:System.Threading.WaitHandle.WaitAll%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8646c-431">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.WaitAll%2A> method.</span></span> <span data-ttu-id="8646c-432">Zwraca do oryginalnego kontekstu niedomyślną po wywołaniu <xref:System.Threading.WaitHandle.WaitAll%2A> ukończeniu metody.</span><span class="sxs-lookup"><span data-stu-id="8646c-432">It returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.WaitAll%2A> method completes.</span></span>  
  
 <span data-ttu-id="8646c-433">Może to być przydatne, gdy zawiera klasy powiązane z kontekstu <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="8646c-433">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="8646c-434">W takim przypadku wszystkie wywołania do elementów członkowskich klasy są automatycznie synchronizowane i domena synchronizacji jest cały kod dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="8646c-434">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="8646c-435">Jeśli kod w stosie wywołań elementu członkowskiego wywołuje <xref:System.Threading.WaitHandle.WaitAll%2A> metody i określa `true` dla `exitContext`, wątek kończy działanie synchronizacji domeny, dzięki czemu wątek, który jest zablokowany w wywołaniu do wszystkich elementów członkowskich obiektu, aby kontynuować.</span><span class="sxs-lookup"><span data-stu-id="8646c-435">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.WaitAll%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="8646c-436">Gdy <xref:System.Threading.WaitHandle.WaitAll%2A> metoda zwróci wartość, wątku, który zgłosił wywołanie musi czekać ponownie domeny synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="8646c-436">When the <xref:System.Threading.WaitHandle.WaitAll%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8646c-437">Poniższy przykład kodu pokazuje, jak używać puli wątków, aby asynchronicznie tworzyć i zapisywać grupy plików.</span><span class="sxs-lookup"><span data-stu-id="8646c-437">The following code example shows how to use the thread pool to asynchronously create and write to a group of files.</span></span> <span data-ttu-id="8646c-438">Po zakończeniu każdej operacji zapisu jest w kolejce jako element roboczy i sygnałów.</span><span class="sxs-lookup"><span data-stu-id="8646c-438">Each write operation is queued as a work item and signals when it is finished.</span></span> <span data-ttu-id="8646c-439">Główny wątek czeka, aż wszystkie elementy do sygnalizowania, a następnie kończy działanie.</span><span class="sxs-lookup"><span data-stu-id="8646c-439">The main thread waits for all the items to signal and then exits.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitAll3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll3/CPP/source3.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitAll3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll3/CS/source3.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitAll3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAll3/VB/source3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8646c-440"><paramref name="waitHandles" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-440">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="8646c-441">—lub—</span><span class="sxs-lookup"><span data-stu-id="8646c-441">-or-</span></span> 
<span data-ttu-id="8646c-442">Co najmniej jeden z obiektów w <paramref name="waitHandles" /> tablica jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-442">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span></span>  
  
<span data-ttu-id="8646c-443">—lub—</span><span class="sxs-lookup"><span data-stu-id="8646c-443">-or-</span></span> 
 <span data-ttu-id="8646c-444"><paramref name="waitHandles" /> jest tablicą bez elementów i wersji programu .NET Framework jest 2.0 lub nowszej.</span><span class="sxs-lookup"><span data-stu-id="8646c-444"><paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 2.0 or later.</span></span></exception>
        <exception cref="T:System.DuplicateWaitObjectException"><span data-ttu-id="8646c-445"><paramref name="waitHandles" /> Tablica zawiera elementy, które są duplikatami.</span><span class="sxs-lookup"><span data-stu-id="8646c-445">The <paramref name="waitHandles" /> array contains elements that are duplicates.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8646c-446">Liczba obiektów w <paramref name="waitHandles" /> jest większa niż zezwala na system.</span><span class="sxs-lookup"><span data-stu-id="8646c-446">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span></span>  
  
<span data-ttu-id="8646c-447">—lub—</span><span class="sxs-lookup"><span data-stu-id="8646c-447">-or-</span></span> 
<span data-ttu-id="8646c-448"><see cref="T:System.STAThreadAttribute" /> Atrybut jest stosowany do procedury wątku dla bieżącego wątku i <paramref name="waitHandles" /> zawiera więcej niż jeden element.</span><span class="sxs-lookup"><span data-stu-id="8646c-448">The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element.</span></span></exception>
        <exception cref="T:System.ApplicationException"><span data-ttu-id="8646c-449"><paramref name="waitHandles" /> jest tablicą bez elementów i wersji programu .NET Framework jest w wersji 1.0 lub 1.1.</span><span class="sxs-lookup"><span data-stu-id="8646c-449"><paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 1.0 or 1.1.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8646c-450"><paramref name="timeout" /> jest to liczba ujemna innych niż milisekund wartości-1, który reprezentuje nieskończony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="8646c-450"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span></span> 
<span data-ttu-id="8646c-451">—lub—</span><span class="sxs-lookup"><span data-stu-id="8646c-451">-or-</span></span> 
 <span data-ttu-id="8646c-452"><paramref name="timeout" /> jest większa niż <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-452"><paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.Threading.AbandonedMutexException"><span data-ttu-id="8646c-453">Czas oczekiwania zakończone, ponieważ wątek został zakończony bez zwalniania elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="8646c-453">The wait terminated because a thread exited without releasing a mutex.</span></span> <span data-ttu-id="8646c-454">Ten wyjątek nie jest generowany na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="8646c-454">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8646c-455"><paramref name="waitHandles" /> Tablica zawiera przezroczyste serwera proxy dla <see cref="T:System.Threading.WaitHandle" /> w innej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="8646c-455">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WaitAny">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8646c-456">Czeka na dowolne elementy w wybranej tablicy do otrzymania sygnału.</span><span class="sxs-lookup"><span data-stu-id="8646c-456">Waits for any of the elements in the specified array to receive a signal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WaitAny">
      <MemberSignature Language="C#" Value="public static int WaitAny (System.Threading.WaitHandle[] waitHandles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 WaitAny(class System.Threading.WaitHandle[] waitHandles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAny (waitHandles As WaitHandle()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int WaitAny(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles);" />
      <MemberSignature Language="F#" Value="static member WaitAny : System.Threading.WaitHandle[] -&gt; int" Usage="System.Threading.WaitHandle.WaitAny waitHandles" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
      </Parameters>
      <Docs>
        <param name="waitHandles"><span data-ttu-id="8646c-457">A <see langword="WaitHandle" /> tablicę zawierającą obiekty, dla których będzie czekać bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="8646c-457">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span></span></param>
        <summary><span data-ttu-id="8646c-458">Czeka na dowolne elementy w wybranej tablicy do otrzymania sygnału.</span><span class="sxs-lookup"><span data-stu-id="8646c-458">Waits for any of the elements in the specified array to receive a signal.</span></span></summary>
        <returns><span data-ttu-id="8646c-459">Indeks tablicy obiektu spełniającego oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="8646c-459">The array index of the object that satisfied the wait.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8646c-460"><xref:System.Threading.AbandonedMutexException> jest nowa w .NET Framework w wersji 2.0.</span><span class="sxs-lookup"><span data-stu-id="8646c-460"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="8646c-461">W poprzednich wersjach <xref:System.Threading.WaitHandle.WaitAny%2A> metoda zwraca `true` po ukończeniu czas oczekiwania, ponieważ element mutex zostanie porzucony.</span><span class="sxs-lookup"><span data-stu-id="8646c-461">In previous versions, the <xref:System.Threading.WaitHandle.WaitAny%2A> method returns `true` if the wait completes because a mutex is abandoned.</span></span> <span data-ttu-id="8646c-462">Porzuconego elementu mutex często oznacza to poważny błąd kodowania.</span><span class="sxs-lookup"><span data-stu-id="8646c-462">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="8646c-463">W przypadku elementu mutex całego systemu może wskazywać, że aplikacja został zakończony nagle (na przykład przy użyciu Menedżera zadań Windows).</span><span class="sxs-lookup"><span data-stu-id="8646c-463">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="8646c-464">Wyjątek zawiera informacje przydatne podczas debugowania.</span><span class="sxs-lookup"><span data-stu-id="8646c-464">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="8646c-465"><xref:System.Threading.WaitHandle.WaitAny%2A> Metoda zgłasza wyjątek <xref:System.Threading.AbandonedMutexException> tylko, gdy czas oczekiwania kończy z powodu porzuconego elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="8646c-465">The <xref:System.Threading.WaitHandle.WaitAny%2A> method throws an <xref:System.Threading.AbandonedMutexException> only when the wait completes because of an abandoned mutex.</span></span> <span data-ttu-id="8646c-466">Jeśli `waitHandles` zawiera wydana obiektu mutex z mniejszą liczbą indeksu niż porzuconego elementu mutex <xref:System.Threading.WaitHandle.WaitAny%2A> metoda zakończy się normalnie i nie jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="8646c-466">If `waitHandles` contains a released mutex with a lower index number than the abandoned mutex, the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes normally and the exception is not thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8646c-467">W wersjach programu .NET Framework wcześniejszych niż wersja 2.0, jeśli wątek zamyka lub przerywa bez jawnie zwalniania <xref:System.Threading.Mutex>oraz że `Mutex` pod indeksem 0 (zero) trwa `WaitAny` tablicy na inny wątek, wskaźnik zwracany przez `WaitAny` jest 128 zamiast 0.</span><span class="sxs-lookup"><span data-stu-id="8646c-467">In versions of the .NET Framework earlier than version 2.0, if a thread exits or aborts without explicitly releasing a <xref:System.Threading.Mutex>, and that `Mutex` is at index 0 (zero) in a `WaitAny` array on another thread, the index returned by `WaitAny` is 128 instead of 0.</span></span>  
  
 <span data-ttu-id="8646c-468">Ta metoda zwraca, jeśli dowolny uchwyt jest sygnalizowane.</span><span class="sxs-lookup"><span data-stu-id="8646c-468">This method returns when any handle is signaled.</span></span> <span data-ttu-id="8646c-469">Jeśli więcej niż jeden obiekt staje się zasygnalizowane podczas wywołania, wartość zwracana jest indeks tablicy obiektu sygnałowego mający najmniejszą wartość indeksu sygnałowego obiektów.</span><span class="sxs-lookup"><span data-stu-id="8646c-469">If more than one object becomes signaled during the call, the return value is the array index of the signaled object with the smallest index value of all the signaled objects.</span></span> <span data-ttu-id="8646c-470">W niektórych implementacjach, jeśli inne, które obsługuje 64 są przekazywane <xref:System.NotSupportedException> zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="8646c-470">On some implementations, if more that 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 <span data-ttu-id="8646c-471">Wywołanie tego przeciążenia metody jest równoważne z wywoływaniem <xref:System.Threading.WaitHandle.WaitAny%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> przeciążenie metody i określając wartość -1 (lub <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>) dla `millisecondsTimeout` i `true` dla `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="8646c-471">Calling this method overload is equivalent to calling the <xref:System.Threading.WaitHandle.WaitAny%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> method overload and specifying -1 (or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>) for `millisecondsTimeout` and `true` for `exitContext`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8646c-472">Poniższy przykład kodu demonstruje wywołanie <xref:System.Threading.WaitHandle.WaitAny%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8646c-472">The following code example demonstrates calling the <xref:System.Threading.WaitHandle.WaitAny%2A> method.</span></span>  
  
 [!code-cpp[WaitHandle#1](~/samples/snippets/cpp/VS_Snippets_CLR/WaitHandle/cpp/WaitHandle.cpp#1)]
 [!code-csharp[WaitHandle#1](~/samples/snippets/csharp/VS_Snippets_CLR/WaitHandle/CS/WaitHandle.cs#1)]
 [!code-vb[WaitHandle#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/WaitHandle/VB/WaitHandle.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8646c-473"><paramref name="waitHandles" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-473">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="8646c-474">—lub—</span><span class="sxs-lookup"><span data-stu-id="8646c-474">-or-</span></span> 
<span data-ttu-id="8646c-475">Co najmniej jeden z obiektów w <paramref name="waitHandles" /> tablica jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-475">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8646c-476">Liczba obiektów w <paramref name="waitHandles" /> jest większa niż zezwala na system.</span><span class="sxs-lookup"><span data-stu-id="8646c-476">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span></span></exception>
        <exception cref="T:System.ApplicationException"><span data-ttu-id="8646c-477"><paramref name="waitHandles" /> jest tablicą bez elementów i wersji programu .NET Framework jest w wersji 1.0 lub 1.1.</span><span class="sxs-lookup"><span data-stu-id="8646c-477"><paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 1.0 or 1.1.</span></span></exception>
        <exception cref="T:System.Threading.AbandonedMutexException"><span data-ttu-id="8646c-478">Czas oczekiwania zakończyć, ponieważ wątek został zakończony bez zwalniania elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="8646c-478">The wait completed because a thread exited without releasing a mutex.</span></span> <span data-ttu-id="8646c-479">Ten wyjątek nie jest generowany na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="8646c-479">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8646c-480"><paramref name="waitHandles" /> jest tablicą bez elementów i wersji programu .NET Framework jest 2.0 lub nowszej.</span><span class="sxs-lookup"><span data-stu-id="8646c-480"><paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 2.0 or later.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8646c-481"><paramref name="waitHandles" /> Tablica zawiera przezroczyste serwera proxy dla <see cref="T:System.Threading.WaitHandle" /> w innej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="8646c-481">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAny">
      <MemberSignature Language="C#" Value="public static int WaitAny (System.Threading.WaitHandle[] waitHandles, int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 WaitAny(class System.Threading.WaitHandle[] waitHandles, int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAny (waitHandles As WaitHandle(), millisecondsTimeout As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int WaitAny(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="static member WaitAny : System.Threading.WaitHandle[] * int -&gt; int" Usage="System.Threading.WaitHandle.WaitAny (waitHandles, millisecondsTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="waitHandles"><span data-ttu-id="8646c-482">A <see langword="WaitHandle" /> tablicę zawierającą obiekty, dla których będzie czekać bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="8646c-482">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span></span></param>
        <param name="millisecondsTimeout"><span data-ttu-id="8646c-483">Liczba milisekund, lub <see cref="F:System.Threading.Timeout.Infinite" /> (-1), aby czekać w nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="8646c-483">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="8646c-484">Czeka na dowolne elementy w wybranej tablicy do otrzymania sygnału, przy użyciu całkowita 32-bitowych, aby określić interwał czasu.</span><span class="sxs-lookup"><span data-stu-id="8646c-484">Waits for any of the elements in the specified array to receive a signal, using a 32-bit signed integer to specify the time interval.</span></span></summary>
        <returns><span data-ttu-id="8646c-485">Indeks tablicy obiektu spełniającego oczekiwania, lub <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> Jeśli żaden obiekt nie ustali, czas oczekiwania i przedział czasu jest odpowiednikiem <paramref name="millisecondsTimeout" /> został przekazany.</span><span class="sxs-lookup"><span data-stu-id="8646c-485">The array index of the object that satisfied the wait, or <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> if no object satisfied the wait and a time interval equivalent to <paramref name="millisecondsTimeout" /> has passed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8646c-486">Jeśli `millisecondsTimeout` wynosi zero, nie są blokowane w metodzie.</span><span class="sxs-lookup"><span data-stu-id="8646c-486">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="8646c-487">Testuje, stan uchwytami oczekiwania i zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="8646c-487">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="8646c-488"><xref:System.Threading.WaitHandle.WaitAny%2A> Metoda zgłasza wyjątek <xref:System.Threading.AbandonedMutexException> tylko, gdy czas oczekiwania kończy z powodu porzuconego elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="8646c-488">The <xref:System.Threading.WaitHandle.WaitAny%2A> method throws an <xref:System.Threading.AbandonedMutexException> only when the wait completes because of an abandoned mutex.</span></span> <span data-ttu-id="8646c-489">Jeśli `waitHandles` zawiera wydana obiektu mutex z mniejszą liczbą indeksu niż porzuconego elementu mutex <xref:System.Threading.WaitHandle.WaitAny%2A> metoda zakończy się normalnie i nie jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="8646c-489">If `waitHandles` contains a released mutex with a lower index number than the abandoned mutex, the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes normally and the exception is not thrown.</span></span>  
  
 <span data-ttu-id="8646c-490">Ta metoda zwraca wartość, gdy czas oczekiwania skończy, gdy jeden z uchwytów są sygnalizowane lub zostanie przekroczony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="8646c-490">This method returns when the wait terminates, either when any of the handles are signaled or when a timeout occurs.</span></span> <span data-ttu-id="8646c-491">Jeśli więcej niż jeden obiekt staje się zasygnalizowane podczas wywołania, wartość zwracana jest indeks tablicy obiektu sygnałowego mający najmniejszą wartość indeksu sygnałowego obiektów.</span><span class="sxs-lookup"><span data-stu-id="8646c-491">If more than one object becomes signaled during the call, the return value is the array index of the signaled object with the smallest index value of all the signaled objects.</span></span> <span data-ttu-id="8646c-492">W niektórych implementacjach, jeśli inne, które obsługuje 64 są przekazywane <xref:System.NotSupportedException> zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="8646c-492">On some implementations, if more that 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 <span data-ttu-id="8646c-493">Wywołanie tego przeciążenia metody jest taka sama jak wywołanie <xref:System.Threading.WaitHandle.WaitAny%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> przeciążenia i określając `false` dla `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="8646c-493">Calling this method overload is the same as calling the <xref:System.Threading.WaitHandle.WaitAny%28System.Threading.WaitHandle%5B%5D%2CSystem.Int32%2CSystem.Boolean%29> overload and specifying `false` for `exitContext`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8646c-494"><paramref name="waitHandles" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-494">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="8646c-495">—lub—</span><span class="sxs-lookup"><span data-stu-id="8646c-495">-or-</span></span> 
<span data-ttu-id="8646c-496">Co najmniej jeden z obiektów w <paramref name="waitHandles" /> tablica jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-496">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8646c-497">Liczba obiektów w <paramref name="waitHandles" /> jest większa niż zezwala na system.</span><span class="sxs-lookup"><span data-stu-id="8646c-497">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8646c-498"><paramref name="millisecondsTimeout" /> jest liczbą ujemną od-1, który reprezentuje nieskończony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="8646c-498"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
        <exception cref="T:System.Threading.AbandonedMutexException"><span data-ttu-id="8646c-499">Czas oczekiwania zakończyć, ponieważ wątek został zakończony bez zwalniania elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="8646c-499">The wait completed because a thread exited without releasing a mutex.</span></span> <span data-ttu-id="8646c-500">Ten wyjątek nie jest generowany na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="8646c-500">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8646c-501"><paramref name="waitHandles" /> jest tablicą bez elementów.</span><span class="sxs-lookup"><span data-stu-id="8646c-501"><paramref name="waitHandles" /> is an array with no elements.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8646c-502"><paramref name="waitHandles" /> Tablica zawiera przezroczyste serwera proxy dla <see cref="T:System.Threading.WaitHandle" /> w innej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="8646c-502">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAny">
      <MemberSignature Language="C#" Value="public static int WaitAny (System.Threading.WaitHandle[] waitHandles, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 WaitAny(class System.Threading.WaitHandle[] waitHandles, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAny (waitHandles As WaitHandle(), timeout As TimeSpan) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int WaitAny(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member WaitAny : System.Threading.WaitHandle[] * TimeSpan -&gt; int" Usage="System.Threading.WaitHandle.WaitAny (waitHandles, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="waitHandles"><span data-ttu-id="8646c-503">A <see langword="WaitHandle" /> tablicę zawierającą obiekty, dla których będzie czekać bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="8646c-503">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span></span></param>
        <param name="timeout"><span data-ttu-id="8646c-504">A <see cref="T:System.TimeSpan" /> reprezentujący liczbę milisekund oczekiwania, lub <see cref="T:System.TimeSpan" /> reprezentujący milisekund czekać w nieskończoność,-1.</span><span class="sxs-lookup"><span data-stu-id="8646c-504">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="8646c-505">Czeka na dowolne elementy w wybranej tablicy do otrzymania sygnału, za pomocą <see cref="T:System.TimeSpan" /> do określenia interwału czasu.</span><span class="sxs-lookup"><span data-stu-id="8646c-505">Waits for any of the elements in the specified array to receive a signal, using a <see cref="T:System.TimeSpan" /> to specify the time interval.</span></span></summary>
        <returns><span data-ttu-id="8646c-506">Indeks tablicy obiektu spełniającego oczekiwania, lub <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> Jeśli żaden obiekt nie ustali, czas oczekiwania i przedział czasu jest odpowiednikiem <paramref name="timeout" /> został przekazany.</span><span class="sxs-lookup"><span data-stu-id="8646c-506">The array index of the object that satisfied the wait, or <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> if no object satisfied the wait and a time interval equivalent to <paramref name="timeout" /> has passed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8646c-507">Jeśli `timeout` wynosi zero, nie są blokowane w metodzie.</span><span class="sxs-lookup"><span data-stu-id="8646c-507">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="8646c-508">Testuje, stan uchwytami oczekiwania i zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="8646c-508">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="8646c-509"><xref:System.Threading.WaitHandle.WaitAny%2A> Metoda zgłasza wyjątek <xref:System.Threading.AbandonedMutexException> tylko, gdy czas oczekiwania kończy z powodu porzuconego elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="8646c-509">The <xref:System.Threading.WaitHandle.WaitAny%2A> method throws an <xref:System.Threading.AbandonedMutexException> only when the wait completes because of an abandoned mutex.</span></span> <span data-ttu-id="8646c-510">Jeśli `waitHandles` zawiera wydana obiektu mutex z mniejszą liczbą indeksu niż porzuconego elementu mutex <xref:System.Threading.WaitHandle.WaitAny%2A> metoda zakończy się normalnie i nie jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="8646c-510">If `waitHandles` contains a released mutex with a lower index number than the abandoned mutex, the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes normally and the exception is not thrown.</span></span>  
  
 <span data-ttu-id="8646c-511">Ta metoda zwraca, gdy czas oczekiwania skończy, gdy jeden z uchwytów są sygnalizowane lub przekroczenia limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="8646c-511">This method returns when the wait terminates, either when any of the handles are signaled or when a time-out occurs.</span></span> <span data-ttu-id="8646c-512">Jeśli więcej niż jeden obiekt staje się zasygnalizowane podczas wywołania, wartość zwracana jest indeks tablicy obiektu sygnałowego mający najmniejszą wartość indeksu sygnałowego obiektów.</span><span class="sxs-lookup"><span data-stu-id="8646c-512">If more than one object becomes signaled during the call, the return value is the array index of the signaled object with the smallest index value of all the signaled objects.</span></span> <span data-ttu-id="8646c-513">W niektórych implementacjach, jeśli inne, które obsługuje 64 są przekazywane <xref:System.NotSupportedException> zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="8646c-513">On some implementations, if more that 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 <span data-ttu-id="8646c-514">Maksymalna wartość `timeout` jest <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8646c-514">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8646c-515">Wywołanie tego przeciążenia metody jest taka sama jak wywołanie <xref:System.Threading.WaitHandle.WaitAny%28System.Threading.WaitHandle%5B%5D%2CSystem.TimeSpan%2CSystem.Boolean%29> przeciążenia i określając `false` dla `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="8646c-515">Calling this method overload is the same as calling the <xref:System.Threading.WaitHandle.WaitAny%28System.Threading.WaitHandle%5B%5D%2CSystem.TimeSpan%2CSystem.Boolean%29> overload and specifying `false` for `exitContext`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8646c-516"><paramref name="waitHandles" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-516">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="8646c-517">—lub—</span><span class="sxs-lookup"><span data-stu-id="8646c-517">-or-</span></span> 
<span data-ttu-id="8646c-518">Co najmniej jeden z obiektów w <paramref name="waitHandles" /> tablica jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-518">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8646c-519">Liczba obiektów w <paramref name="waitHandles" /> jest większa niż zezwala na system.</span><span class="sxs-lookup"><span data-stu-id="8646c-519">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8646c-520"><paramref name="timeout" /> jest to liczba ujemna innych niż milisekund wartości-1, który reprezentuje nieskończony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="8646c-520"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span></span> 
<span data-ttu-id="8646c-521">—lub—</span><span class="sxs-lookup"><span data-stu-id="8646c-521">-or-</span></span> 
 <span data-ttu-id="8646c-522"><paramref name="timeout" /> jest większa niż <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-522"><paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.Threading.AbandonedMutexException"><span data-ttu-id="8646c-523">Czas oczekiwania zakończyć, ponieważ wątek został zakończony bez zwalniania elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="8646c-523">The wait completed because a thread exited without releasing a mutex.</span></span> <span data-ttu-id="8646c-524">Ten wyjątek nie jest generowany na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="8646c-524">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8646c-525"><paramref name="waitHandles" /> jest tablicą bez elementów.</span><span class="sxs-lookup"><span data-stu-id="8646c-525"><paramref name="waitHandles" /> is an array with no elements.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8646c-526"><paramref name="waitHandles" /> Tablica zawiera przezroczyste serwera proxy dla <see cref="T:System.Threading.WaitHandle" /> w innej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="8646c-526">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAny">
      <MemberSignature Language="C#" Value="public static int WaitAny (System.Threading.WaitHandle[] waitHandles, int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 WaitAny(class System.Threading.WaitHandle[] waitHandles, int32 millisecondsTimeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAny (waitHandles As WaitHandle(), millisecondsTimeout As Integer, exitContext As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int WaitAny(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="static member WaitAny : System.Threading.WaitHandle[] * int * bool -&gt; int" Usage="System.Threading.WaitHandle.WaitAny (waitHandles, millisecondsTimeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="waitHandles"><span data-ttu-id="8646c-527">A <see langword="WaitHandle" /> tablicę zawierającą obiekty, dla których będzie czekać bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="8646c-527">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span></span></param>
        <param name="millisecondsTimeout"><span data-ttu-id="8646c-528">Liczba milisekund, lub <see cref="F:System.Threading.Timeout.Infinite" /> (-1), aby czekać w nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="8646c-528">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span></span></param>
        <param name="exitContext"><span data-ttu-id="8646c-529"><see langword="true" /> Aby zakończyć domeny synchronizacji dla kontekstu przed oczekiwaniem (Jeśli w kontekście zsynchronizowane), a potem; ponownie pobrać w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-529"><see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8646c-530">Czeka na dowolne elementy w określonej tablicy, aby otrzymać przy użyciu całkowita 32-bitowych, aby określić interwał czasu i określeniu, czy zakończyć domeny synchronizacji przed czas oczekiwania na sygnał.</span><span class="sxs-lookup"><span data-stu-id="8646c-530">Waits for any of the elements in the specified array to receive a signal, using a 32-bit signed integer to specify the time interval, and specifying whether to exit the synchronization domain before the wait.</span></span></summary>
        <returns><span data-ttu-id="8646c-531">Indeks tablicy obiektu spełniającego oczekiwania, lub <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> Jeśli żaden obiekt nie ustali, czas oczekiwania i przedział czasu jest odpowiednikiem <paramref name="millisecondsTimeout" /> został przekazany.</span><span class="sxs-lookup"><span data-stu-id="8646c-531">The array index of the object that satisfied the wait, or <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> if no object satisfied the wait and a time interval equivalent to <paramref name="millisecondsTimeout" /> has passed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8646c-532">Jeśli `millisecondsTimeout` wynosi zero, nie są blokowane w metodzie.</span><span class="sxs-lookup"><span data-stu-id="8646c-532">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="8646c-533">Testuje, stan uchwytami oczekiwania i zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="8646c-533">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="8646c-534"><xref:System.Threading.AbandonedMutexException> jest nowa w .NET Framework w wersji 2.0.</span><span class="sxs-lookup"><span data-stu-id="8646c-534"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="8646c-535">W poprzednich wersjach <xref:System.Threading.WaitHandle.WaitAny%2A> metoda zwraca `true` po ukończeniu czas oczekiwania, ponieważ element mutex zostanie porzucony.</span><span class="sxs-lookup"><span data-stu-id="8646c-535">In previous versions, the <xref:System.Threading.WaitHandle.WaitAny%2A> method returns `true` if the wait completes because a mutex is abandoned.</span></span> <span data-ttu-id="8646c-536">Porzuconego elementu mutex często oznacza to poważny błąd kodowania.</span><span class="sxs-lookup"><span data-stu-id="8646c-536">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="8646c-537">W przypadku elementu mutex całego systemu może wskazywać, że aplikacja został zakończony nagle (na przykład przy użyciu Menedżera zadań Windows).</span><span class="sxs-lookup"><span data-stu-id="8646c-537">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="8646c-538">Wyjątek zawiera informacje przydatne podczas debugowania.</span><span class="sxs-lookup"><span data-stu-id="8646c-538">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="8646c-539"><xref:System.Threading.WaitHandle.WaitAny%2A> Metoda zgłasza wyjątek <xref:System.Threading.AbandonedMutexException> tylko, gdy czas oczekiwania kończy z powodu porzuconego elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="8646c-539">The <xref:System.Threading.WaitHandle.WaitAny%2A> method throws an <xref:System.Threading.AbandonedMutexException> only when the wait completes because of an abandoned mutex.</span></span> <span data-ttu-id="8646c-540">Jeśli `waitHandles` zawiera wydana obiektu mutex z mniejszą liczbą indeksu niż porzuconego elementu mutex <xref:System.Threading.WaitHandle.WaitAny%2A> metoda zakończy się normalnie i nie jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="8646c-540">If `waitHandles` contains a released mutex with a lower index number than the abandoned mutex, the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes normally and the exception is not thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8646c-541">W wersjach programu .NET Framework wcześniejszych niż wersja 2.0, jeśli wątek zamyka lub przerywa bez jawnie zwalniania <xref:System.Threading.Mutex>oraz że `Mutex` pod indeksem 0 (zero) trwa `WaitAny` tablicy na inny wątek, wskaźnik zwracany przez `WaitAny` jest 128 zamiast 0.</span><span class="sxs-lookup"><span data-stu-id="8646c-541">In versions of the .NET Framework earlier than version 2.0, if a thread exits or aborts without explicitly releasing a <xref:System.Threading.Mutex>, and that `Mutex` is at index 0 (zero) in a `WaitAny` array on another thread, the index returned by `WaitAny` is 128 instead of 0.</span></span>  
  
 <span data-ttu-id="8646c-542">Ta metoda zwraca wartość, gdy czas oczekiwania skończy, gdy jeden z uchwytów są sygnalizowane lub zostanie przekroczony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="8646c-542">This method returns when the wait terminates, either when any of the handles are signaled or when a timeout occurs.</span></span> <span data-ttu-id="8646c-543">Jeśli więcej niż jeden obiekt staje się zasygnalizowane podczas wywołania, wartość zwracana jest indeks tablicy obiektu sygnałowego mający najmniejszą wartość indeksu sygnałowego obiektów.</span><span class="sxs-lookup"><span data-stu-id="8646c-543">If more than one object becomes signaled during the call, the return value is the array index of the signaled object with the smallest index value of all the signaled objects.</span></span> <span data-ttu-id="8646c-544">W niektórych implementacjach, jeśli inne, które obsługuje 64 są przekazywane <xref:System.NotSupportedException> zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="8646c-544">On some implementations, if more that 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="8646c-545">Uwagi dotyczące zamykania kontekstu</span><span class="sxs-lookup"><span data-stu-id="8646c-545">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="8646c-546">`exitContext` Parametr jest ignorowany, chyba że <xref:System.Threading.WaitHandle.WaitAny%2A> metoda jest wywoływana z wewnątrz inny niż domyślny kontekst zarządzanych.</span><span class="sxs-lookup"><span data-stu-id="8646c-546">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.WaitAny%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="8646c-547">Może się to zdarzyć, jeśli wątek znajduje się wewnątrz wywołania do wystąpienia klasy pochodzącej od <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="8646c-547">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="8646c-548">Nawet wtedy, gdy są aktualnie wykonuje metodę w klasie, która nie pochodzi od <xref:System.ContextBoundObject>, takiej jak <xref:System.String>, może być w kontekście innej niż domyślna Jeśli <xref:System.ContextBoundObject> znajduje się na stosie w bieżącej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="8646c-548">Even if you are currently executing a method on a class that does not derive from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="8646c-549">Gdy kod jest wykonywany w kontekście innej niż domyślna, określając `true` dla `exitContext` powoduje, że wątku zamknąć kontekstu zarządzanych inną niż domyślna (oznacza to, do którego nastąpi przejście do domyślnego kontekstu) przed wykonaniem <xref:System.Threading.WaitHandle.WaitAny%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8646c-549">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.WaitAny%2A> method.</span></span> <span data-ttu-id="8646c-550">Wątek jest zwracany do oryginalnego kontekstu niedomyślną po wywołaniu <xref:System.Threading.WaitHandle.WaitAny%2A> ukończeniu metody.</span><span class="sxs-lookup"><span data-stu-id="8646c-550">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes.</span></span>  
  
 <span data-ttu-id="8646c-551">Może to być przydatne, gdy zawiera klasy powiązane z kontekstu <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="8646c-551">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="8646c-552">W takim przypadku wszystkie wywołania do elementów członkowskich klasy są automatycznie synchronizowane i domena synchronizacji jest cały kod dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="8646c-552">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="8646c-553">Jeśli kod w stosie wywołań elementu członkowskiego wywołuje <xref:System.Threading.WaitHandle.WaitAny%2A> metody i określa `true` dla `exitContext`, wątek kończy działanie synchronizacji domeny, dzięki czemu wątek, który jest zablokowany w wywołaniu do wszystkich elementów członkowskich obiektu, aby kontynuować.</span><span class="sxs-lookup"><span data-stu-id="8646c-553">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.WaitAny%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="8646c-554">Gdy <xref:System.Threading.WaitHandle.WaitAny%2A> metoda zwróci wartość, wątku, który zgłosił wywołanie musi czekać ponownie domeny synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="8646c-554">When the <xref:System.Threading.WaitHandle.WaitAny%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8646c-555">Poniższy przykład kodu demonstruje sposób używania puli wątków jednocześnie wyszukiwania plików na wielu dyskach.</span><span class="sxs-lookup"><span data-stu-id="8646c-555">The following code example demonstrates how to use the thread pool to simultaneously search for a file on multiple disks.</span></span> <span data-ttu-id="8646c-556">Kwestie związane z miejsca przeszukiwany jest tylko katalog główny każdego dysku.</span><span class="sxs-lookup"><span data-stu-id="8646c-556">For space considerations, only the root directory of each disk is searched.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitAny2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny2/CPP/source2.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitAny2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny2/CS/source2.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitAny2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny2/VB/source2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8646c-557"><paramref name="waitHandles" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-557">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="8646c-558">—lub—</span><span class="sxs-lookup"><span data-stu-id="8646c-558">-or-</span></span> 
<span data-ttu-id="8646c-559">Co najmniej jeden z obiektów w <paramref name="waitHandles" /> tablica jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-559">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8646c-560">Liczba obiektów w <paramref name="waitHandles" /> jest większa niż zezwala na system.</span><span class="sxs-lookup"><span data-stu-id="8646c-560">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span></span></exception>
        <exception cref="T:System.ApplicationException"><span data-ttu-id="8646c-561"><paramref name="waitHandles" /> jest tablicą bez elementów i wersji programu .NET Framework jest w wersji 1.0 lub 1.1.</span><span class="sxs-lookup"><span data-stu-id="8646c-561"><paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 1.0 or 1.1.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8646c-562"><paramref name="millisecondsTimeout" /> jest liczbą ujemną od-1, który reprezentuje nieskończony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="8646c-562"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
        <exception cref="T:System.Threading.AbandonedMutexException"><span data-ttu-id="8646c-563">Czas oczekiwania zakończyć, ponieważ wątek został zakończony bez zwalniania elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="8646c-563">The wait completed because a thread exited without releasing a mutex.</span></span> <span data-ttu-id="8646c-564">Ten wyjątek nie jest generowany na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="8646c-564">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8646c-565"><paramref name="waitHandles" /> jest tablicą bez elementów i wersji programu .NET Framework jest 2.0 lub nowszej.</span><span class="sxs-lookup"><span data-stu-id="8646c-565"><paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 2.0 or later.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8646c-566"><paramref name="waitHandles" /> Tablica zawiera przezroczyste serwera proxy dla <see cref="T:System.Threading.WaitHandle" /> w innej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="8646c-566">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAny">
      <MemberSignature Language="C#" Value="public static int WaitAny (System.Threading.WaitHandle[] waitHandles, TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 WaitAny(class System.Threading.WaitHandle[] waitHandles, valuetype System.TimeSpan timeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WaitAny (waitHandles As WaitHandle(), timeout As TimeSpan, exitContext As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int WaitAny(cli::array &lt;System::Threading::WaitHandle ^&gt; ^ waitHandles, TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="static member WaitAny : System.Threading.WaitHandle[] * TimeSpan * bool -&gt; int" Usage="System.Threading.WaitHandle.WaitAny (waitHandles, timeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="waitHandles"><span data-ttu-id="8646c-567">A <see langword="WaitHandle" /> tablicę zawierającą obiekty, dla których będzie czekać bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="8646c-567">A <see langword="WaitHandle" /> array containing the objects for which the current instance will wait.</span></span></param>
        <param name="timeout"><span data-ttu-id="8646c-568">A <see cref="T:System.TimeSpan" /> reprezentujący liczbę milisekund oczekiwania, lub <see cref="T:System.TimeSpan" /> reprezentujący milisekund czekać w nieskończoność,-1.</span><span class="sxs-lookup"><span data-stu-id="8646c-568">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <param name="exitContext"><span data-ttu-id="8646c-569"><see langword="true" /> Aby zakończyć domeny synchronizacji dla kontekstu przed oczekiwaniem (Jeśli w kontekście zsynchronizowane), a potem; ponownie pobrać w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-569"><see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8646c-570">Czeka na dowolne elementy w wybranej tablicy do otrzymania sygnału, za pomocą <see cref="T:System.TimeSpan" /> do określenia interwału czasu i określeniu, czy zakończyć domeny synchronizacji przed czas oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="8646c-570">Waits for any of the elements in the specified array to receive a signal, using a <see cref="T:System.TimeSpan" /> to specify the time interval and specifying whether to exit the synchronization domain before the wait.</span></span></summary>
        <returns><span data-ttu-id="8646c-571">Indeks tablicy obiektu spełniającego oczekiwania, lub <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> Jeśli żaden obiekt nie ustali, czas oczekiwania i przedział czasu jest odpowiednikiem <paramref name="timeout" /> został przekazany.</span><span class="sxs-lookup"><span data-stu-id="8646c-571">The array index of the object that satisfied the wait, or <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> if no object satisfied the wait and a time interval equivalent to <paramref name="timeout" /> has passed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8646c-572">Jeśli `timeout` wynosi zero, nie są blokowane w metodzie.</span><span class="sxs-lookup"><span data-stu-id="8646c-572">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="8646c-573">Testuje, stan uchwytami oczekiwania i zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="8646c-573">It tests the state of the wait handles and returns immediately.</span></span>  
  
 <span data-ttu-id="8646c-574"><xref:System.Threading.AbandonedMutexException> jest nowa w .NET Framework w wersji 2.0.</span><span class="sxs-lookup"><span data-stu-id="8646c-574"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="8646c-575">W poprzednich wersjach <xref:System.Threading.WaitHandle.WaitAny%2A> metoda zwraca `true` po ukończeniu czas oczekiwania, ponieważ element mutex zostanie porzucony.</span><span class="sxs-lookup"><span data-stu-id="8646c-575">In previous versions, the <xref:System.Threading.WaitHandle.WaitAny%2A> method returns `true` if the wait completes because a mutex is abandoned.</span></span> <span data-ttu-id="8646c-576">Porzuconego elementu mutex często oznacza to poważny błąd kodowania.</span><span class="sxs-lookup"><span data-stu-id="8646c-576">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="8646c-577">W przypadku elementu mutex całego systemu może wskazywać, że aplikacja został zakończony nagle (na przykład przy użyciu Menedżera zadań Windows).</span><span class="sxs-lookup"><span data-stu-id="8646c-577">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="8646c-578">Wyjątek zawiera informacje przydatne podczas debugowania.</span><span class="sxs-lookup"><span data-stu-id="8646c-578">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="8646c-579"><xref:System.Threading.WaitHandle.WaitAny%2A> Metoda zgłasza wyjątek <xref:System.Threading.AbandonedMutexException> tylko, gdy czas oczekiwania kończy z powodu porzuconego elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="8646c-579">The <xref:System.Threading.WaitHandle.WaitAny%2A> method throws an <xref:System.Threading.AbandonedMutexException> only when the wait completes because of an abandoned mutex.</span></span> <span data-ttu-id="8646c-580">Jeśli `waitHandles` zawiera wydana obiektu mutex z mniejszą liczbą indeksu niż porzuconego elementu mutex <xref:System.Threading.WaitHandle.WaitAny%2A> metoda zakończy się normalnie i nie jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="8646c-580">If `waitHandles` contains a released mutex with a lower index number than the abandoned mutex, the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes normally and the exception is not thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8646c-581">W wersjach programu .NET Framework wcześniejszych niż wersja 2.0, jeśli wątek zamyka lub przerywa bez jawnie zwalniania <xref:System.Threading.Mutex>oraz że `Mutex` pod indeksem 0 (zero) trwa `WaitAny` tablicy na inny wątek, wskaźnik zwracany przez `WaitAny` jest 128 zamiast 0.</span><span class="sxs-lookup"><span data-stu-id="8646c-581">In versions of the .NET Framework earlier than version 2.0, if a thread exits or aborts without explicitly releasing a <xref:System.Threading.Mutex>, and that `Mutex` is at index 0 (zero) in a `WaitAny` array on another thread, the index returned by `WaitAny` is 128 instead of 0.</span></span>  
  
 <span data-ttu-id="8646c-582">Ta metoda zwraca, gdy czas oczekiwania skończy, gdy jeden z uchwytów są sygnalizowane lub przekroczenia limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="8646c-582">This method returns when the wait terminates, either when any of the handles are signaled or when a time-out occurs.</span></span> <span data-ttu-id="8646c-583">Jeśli więcej niż jeden obiekt staje się zasygnalizowane podczas wywołania, wartość zwracana jest indeks tablicy obiektu sygnałowego mający najmniejszą wartość indeksu sygnałowego obiektów.</span><span class="sxs-lookup"><span data-stu-id="8646c-583">If more than one object becomes signaled during the call, the return value is the array index of the signaled object with the smallest index value of all the signaled objects.</span></span> <span data-ttu-id="8646c-584">W niektórych implementacjach, jeśli inne, które obsługuje 64 są przekazywane <xref:System.NotSupportedException> zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="8646c-584">On some implementations, if more that 64 handles are passed, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 <span data-ttu-id="8646c-585">Maksymalna wartość `timeout` jest <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8646c-585">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="8646c-586">Uwagi dotyczące zamykania kontekstu</span><span class="sxs-lookup"><span data-stu-id="8646c-586">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="8646c-587">`exitContext` Parametr jest ignorowany, chyba że <xref:System.Threading.WaitHandle.WaitAny%2A> metoda jest wywoływana z wewnątrz inny niż domyślny kontekst zarządzanych.</span><span class="sxs-lookup"><span data-stu-id="8646c-587">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.WaitAny%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="8646c-588">Może się to zdarzyć, jeśli wątek znajduje się wewnątrz wywołania do wystąpienia klasy pochodzącej od <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="8646c-588">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="8646c-589">Nawet wtedy, gdy są aktualnie wykonuje metodę w klasie, która nie pochodzi od <xref:System.ContextBoundObject>, takiej jak <xref:System.String>, może być w kontekście innej niż domyślna Jeśli <xref:System.ContextBoundObject> znajduje się na stosie w bieżącej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="8646c-589">Even if you are currently executing a method on a class that does not derive from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="8646c-590">Gdy kod jest wykonywany w kontekście innej niż domyślna, określając `true` dla `exitContext` powoduje, że wątku zamknąć kontekstu zarządzanych inną niż domyślna (oznacza to, do którego nastąpi przejście do domyślnego kontekstu) przed wykonaniem <xref:System.Threading.WaitHandle.WaitAny%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8646c-590">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.WaitAny%2A> method.</span></span> <span data-ttu-id="8646c-591">Wątek jest zwracany do oryginalnego kontekstu niedomyślną po wywołaniu <xref:System.Threading.WaitHandle.WaitAny%2A> ukończeniu metody.</span><span class="sxs-lookup"><span data-stu-id="8646c-591">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.WaitAny%2A> method completes.</span></span>  
  
 <span data-ttu-id="8646c-592">Może to być przydatne, gdy zawiera klasy powiązane z kontekstu <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="8646c-592">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="8646c-593">W takim przypadku wszystkie wywołania do elementów członkowskich klasy są automatycznie synchronizowane i domena synchronizacji jest cały kod dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="8646c-593">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="8646c-594">Jeśli kod w stosie wywołań elementu członkowskiego wywołuje <xref:System.Threading.WaitHandle.WaitAny%2A> metody i określa `true` dla `exitContext`, wątek kończy działanie synchronizacji domeny, dzięki czemu wątek, który jest zablokowany w wywołaniu do wszystkich elementów członkowskich obiektu, aby kontynuować.</span><span class="sxs-lookup"><span data-stu-id="8646c-594">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.WaitAny%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="8646c-595">Gdy <xref:System.Threading.WaitHandle.WaitAny%2A> metoda zwróci wartość, wątku, który zgłosił wywołanie musi czekać ponownie domeny synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="8646c-595">When the <xref:System.Threading.WaitHandle.WaitAny%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8646c-596">Poniższy przykład kodu demonstruje sposób używania puli wątków jednocześnie wyszukiwania plików na wielu dyskach.</span><span class="sxs-lookup"><span data-stu-id="8646c-596">The following code example demonstrates how to use the thread pool to simultaneously search for a file on multiple disks.</span></span> <span data-ttu-id="8646c-597">Kwestie związane z miejsca przeszukiwany jest tylko katalog główny każdego dysku.</span><span class="sxs-lookup"><span data-stu-id="8646c-597">For space considerations, only the root directory of each disk is searched.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitAny3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny3/CPP/source3.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitAny3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny3/CS/source3.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitAny3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny3/VB/source3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8646c-598"><paramref name="waitHandles" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-598">The <paramref name="waitHandles" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="8646c-599">—lub—</span><span class="sxs-lookup"><span data-stu-id="8646c-599">-or-</span></span> 
<span data-ttu-id="8646c-600">Co najmniej jeden z obiektów w <paramref name="waitHandles" /> tablica jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-600">One or more of the objects in the <paramref name="waitHandles" /> array is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8646c-601">Liczba obiektów w <paramref name="waitHandles" /> jest większa niż zezwala na system.</span><span class="sxs-lookup"><span data-stu-id="8646c-601">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.</span></span></exception>
        <exception cref="T:System.ApplicationException"><span data-ttu-id="8646c-602"><paramref name="waitHandles" /> jest tablicą bez elementów i wersji programu .NET Framework jest w wersji 1.0 lub 1.1.</span><span class="sxs-lookup"><span data-stu-id="8646c-602"><paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 1.0 or 1.1.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8646c-603"><paramref name="timeout" /> jest to liczba ujemna innych niż milisekund wartości-1, który reprezentuje nieskończony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="8646c-603"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span></span> 
<span data-ttu-id="8646c-604">—lub—</span><span class="sxs-lookup"><span data-stu-id="8646c-604">-or-</span></span> 
 <span data-ttu-id="8646c-605"><paramref name="timeout" /> jest większa niż <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-605"><paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.Threading.AbandonedMutexException"><span data-ttu-id="8646c-606">Czas oczekiwania zakończyć, ponieważ wątek został zakończony bez zwalniania elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="8646c-606">The wait completed because a thread exited without releasing a mutex.</span></span> <span data-ttu-id="8646c-607">Ten wyjątek nie jest generowany na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="8646c-607">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8646c-608"><paramref name="waitHandles" /> jest tablicą bez elementów i wersji programu .NET Framework jest 2.0 lub nowszej.</span><span class="sxs-lookup"><span data-stu-id="8646c-608"><paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 2.0 or later.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8646c-609"><paramref name="waitHandles" /> Tablica zawiera przezroczyste serwera proxy dla <see cref="T:System.Threading.WaitHandle" /> w innej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="8646c-609">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WaitOne">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8646c-610">Blokuje bieżący wątek do bieżącego <see cref="T:System.Threading.WaitHandle" /> odbiera sygnał.</span><span class="sxs-lookup"><span data-stu-id="8646c-610">Blocks the current thread until the current <see cref="T:System.Threading.WaitHandle" /> receives a signal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WaitOne">
      <MemberSignature Language="C#" Value="public virtual bool WaitOne ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitOne() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitOne" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WaitOne () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool WaitOne();" />
      <MemberSignature Language="F#" Value="abstract member WaitOne : unit -&gt; bool&#xA;override this.WaitOne : unit -&gt; bool" Usage="waitHandle.WaitOne " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8646c-611">Blokuje bieżący wątek do bieżącego <see cref="T:System.Threading.WaitHandle" /> odbiera sygnał.</span><span class="sxs-lookup"><span data-stu-id="8646c-611">Blocks the current thread until the current <see cref="T:System.Threading.WaitHandle" /> receives a signal.</span></span></summary>
        <returns><span data-ttu-id="8646c-612"><see langword="true" /> Jeśli bieżące wystąpienie odbiera sygnał.</span><span class="sxs-lookup"><span data-stu-id="8646c-612"><see langword="true" /> if the current instance receives a signal.</span></span> <span data-ttu-id="8646c-613">Jeśli bieżące wystąpienie nigdy nie jest sygnalizowane, <see cref="M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)" /> nigdy nie zwraca.</span><span class="sxs-lookup"><span data-stu-id="8646c-613">If the current instance is never signaled, <see cref="M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)" /> never returns.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8646c-614"><xref:System.Threading.AbandonedMutexException> jest nowa w .NET Framework w wersji 2.0.</span><span class="sxs-lookup"><span data-stu-id="8646c-614"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="8646c-615">W poprzednich wersjach <xref:System.Threading.WaitHandle.WaitOne%2A> metoda zwraca `true` po mutex zostanie porzucony.</span><span class="sxs-lookup"><span data-stu-id="8646c-615">In previous versions, the <xref:System.Threading.WaitHandle.WaitOne%2A> method returns `true` when a mutex is abandoned.</span></span> <span data-ttu-id="8646c-616">Porzuconego elementu mutex często oznacza to poważny błąd kodowania.</span><span class="sxs-lookup"><span data-stu-id="8646c-616">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="8646c-617">W przypadku elementu mutex całego systemu może wskazywać, że aplikacja został zakończony nagle (na przykład przy użyciu Menedżera zadań Windows).</span><span class="sxs-lookup"><span data-stu-id="8646c-617">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="8646c-618">Wyjątek zawiera informacje przydatne podczas debugowania.</span><span class="sxs-lookup"><span data-stu-id="8646c-618">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="8646c-619">Obiekt wywołujący bloków tej metody na czas nieokreślony, aż bieżące wystąpienie odbiera sygnał.</span><span class="sxs-lookup"><span data-stu-id="8646c-619">The caller of this method blocks indefinitely until the current instance receives a signal.</span></span> <span data-ttu-id="8646c-620">Ta metoda służy do blokowania aż <xref:System.Threading.WaitHandle> odbiera sygnał z innego wątku, takich jak jest generowany po zakończeniu operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="8646c-620">Use this method to block until a <xref:System.Threading.WaitHandle> receives a signal from another thread, such as is generated when an asynchronous operation completes.</span></span> <span data-ttu-id="8646c-621">Aby uzyskać więcej informacji, zobacz <xref:System.IAsyncResult> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="8646c-621">For more information, see the <xref:System.IAsyncResult> interface.</span></span>  
  
 <span data-ttu-id="8646c-622">Wywołanie tego przeciążenia metody jest równoważne z wywoływaniem <xref:System.Threading.WaitHandle.WaitOne%28System.Int32%2CSystem.Boolean%29> przeciążenie metody i określając wartość -1 lub <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> jako pierwszy parametr i `false` dla drugiego parametru.</span><span class="sxs-lookup"><span data-stu-id="8646c-622">Calling this method overload is equivalent to calling the <xref:System.Threading.WaitHandle.WaitOne%28System.Int32%2CSystem.Boolean%29> method overload and specifying -1 or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> for the first parameter and `false` for the second parameter.</span></span>  
  
 <span data-ttu-id="8646c-623">Zastępuje tę metodę, aby dostosować zachowanie w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="8646c-623">Override this method to customize the behavior of derived classes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8646c-624">W poniższym przykładzie kodu pokazano, jak zachować procesu z przerywa podczas oczekiwania na zakończenie wykonywania wątku w tle za pomocą dojście oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="8646c-624">The following code example shows how to use a wait handle to keep a process from terminating while it waits for a background thread to finish executing.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitOne1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne1/CPP/source1.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitOne1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne1/CS/source1.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitOne1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne1/VB/source1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8646c-625">Bieżące wystąpienie został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="8646c-625">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.Threading.AbandonedMutexException"><span data-ttu-id="8646c-626">Czas oczekiwania zakończyć, ponieważ wątek został zakończony bez zwalniania elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="8646c-626">The wait completed because a thread exited without releasing a mutex.</span></span> <span data-ttu-id="8646c-627">Ten wyjątek nie jest generowany na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="8646c-627">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8646c-628">Bieżące wystąpienie jest przezroczysty serwera proxy dla <see cref="T:System.Threading.WaitHandle" /> w innej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="8646c-628">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WaitOne">
      <MemberSignature Language="C#" Value="public virtual bool WaitOne (int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitOne(int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitOne(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WaitOne (millisecondsTimeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool WaitOne(int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="abstract member WaitOne : int -&gt; bool&#xA;override this.WaitOne : int -&gt; bool" Usage="waitHandle.WaitOne millisecondsTimeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout"><span data-ttu-id="8646c-629">Liczba milisekund, lub <see cref="F:System.Threading.Timeout.Infinite" /> (-1), aby czekać w nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="8646c-629">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="8646c-630">Blokuje bieżący wątek do bieżącego <see cref="T:System.Threading.WaitHandle" /> odbiera sygnał, za pomocą całkowita 32-bitowych, aby określić interwał czasu w milisekundach.</span><span class="sxs-lookup"><span data-stu-id="8646c-630">Blocks the current thread until the current <see cref="T:System.Threading.WaitHandle" /> receives a signal, using a 32-bit signed integer to specify the time interval in milliseconds.</span></span></summary>
        <returns><span data-ttu-id="8646c-631"><see langword="true" /> Jeśli bieżące wystąpienie odbiera sygnał; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-631"><see langword="true" /> if the current instance receives a signal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8646c-632">Jeśli `millisecondsTimeout` wynosi zero, nie są blokowane w metodzie.</span><span class="sxs-lookup"><span data-stu-id="8646c-632">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="8646c-633">Testuje, stan dojście oczekiwania i zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="8646c-633">It tests the state of the wait handle and returns immediately.</span></span>  
  
 <span data-ttu-id="8646c-634">Występuje, obiekt wywołujący tego bloków metody, dopóki bieżącego wystąpienia otrzymuje sygnał lub limit czasu.</span><span class="sxs-lookup"><span data-stu-id="8646c-634">The caller of this method blocks until the current instance receives a signal or a time-out occurs.</span></span> <span data-ttu-id="8646c-635">Ta metoda służy do blokowania aż <xref:System.Threading.WaitHandle> odbiera sygnał z innego wątku, takich jak jest generowany po zakończeniu operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="8646c-635">Use this method to block until a <xref:System.Threading.WaitHandle> receives a signal from another thread, such as is generated when an asynchronous operation completes.</span></span> <span data-ttu-id="8646c-636">Aby uzyskać więcej informacji, zobacz <xref:System.IAsyncResult> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="8646c-636">For more information, see the <xref:System.IAsyncResult> interface.</span></span>  
  
 <span data-ttu-id="8646c-637">Zastępuje tę metodę, aby dostosować zachowanie w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="8646c-637">Override this method to customize the behavior of derived classes.</span></span>  
  
 <span data-ttu-id="8646c-638">Wywołanie tego przeciążenia metody jest taka sama jak wywołanie <xref:System.Threading.WaitHandle.WaitOne%28System.Int32%2CSystem.Boolean%29> przeciążenia i określając `false` dla `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="8646c-638">Calling this method overload is the same as calling the <xref:System.Threading.WaitHandle.WaitOne%28System.Int32%2CSystem.Boolean%29> overload and specifying `false` for `exitContext`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8646c-639">W poniższym przykładzie kodu pokazano, jak zachować procesu z przerywa podczas oczekiwania na zakończenie wykonywania wątku w tle za pomocą dojście oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="8646c-639">The following code example shows how to use a wait handle to keep a process from terminating while it waits for a background thread to finish executing.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitOne2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne2/CPP/source2.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitOne2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne2/CS/source2.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitOne2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne2/VB/source2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8646c-640">Bieżące wystąpienie został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="8646c-640">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8646c-641"><paramref name="millisecondsTimeout" /> jest liczbą ujemną od-1, który reprezentuje nieskończony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="8646c-641"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
        <exception cref="T:System.Threading.AbandonedMutexException"><span data-ttu-id="8646c-642">Czas oczekiwania zakończyć, ponieważ wątek został zakończony bez zwalniania elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="8646c-642">The wait completed because a thread exited without releasing a mutex.</span></span> <span data-ttu-id="8646c-643">Ten wyjątek nie jest generowany na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="8646c-643">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8646c-644">Bieżące wystąpienie jest przezroczysty serwera proxy dla <see cref="T:System.Threading.WaitHandle" /> w innej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="8646c-644">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WaitOne">
      <MemberSignature Language="C#" Value="public virtual bool WaitOne (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitOne(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WaitOne (timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool WaitOne(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member WaitOne : TimeSpan -&gt; bool&#xA;override this.WaitOne : TimeSpan -&gt; bool" Usage="waitHandle.WaitOne timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="8646c-645">A <see cref="T:System.TimeSpan" /> reprezentujący liczbę milisekund oczekiwania, lub <see cref="T:System.TimeSpan" /> reprezentujący milisekund czekać w nieskończoność,-1.</span><span class="sxs-lookup"><span data-stu-id="8646c-645">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="8646c-646">Blokuje bieżący wątek, aż bieżące wystąpienie odbiera sygnał, za pomocą <see cref="T:System.TimeSpan" /> do określenia interwału czasu.</span><span class="sxs-lookup"><span data-stu-id="8646c-646">Blocks the current thread until the current instance receives a signal, using a <see cref="T:System.TimeSpan" /> to specify the time interval.</span></span></summary>
        <returns><span data-ttu-id="8646c-647"><see langword="true" /> Jeśli bieżące wystąpienie odbiera sygnał; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-647"><see langword="true" /> if the current instance receives a signal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8646c-648">Jeśli `timeout` wynosi zero, nie są blokowane w metodzie.</span><span class="sxs-lookup"><span data-stu-id="8646c-648">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="8646c-649">Testuje, stan dojście oczekiwania i zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="8646c-649">It tests the state of the wait handle and returns immediately.</span></span>  
  
 <span data-ttu-id="8646c-650">Występuje, obiekt wywołujący tego bloków metody, dopóki bieżącego wystąpienia otrzymuje sygnał lub limit czasu.</span><span class="sxs-lookup"><span data-stu-id="8646c-650">The caller of this method blocks until the current instance receives a signal or a time-out occurs.</span></span> <span data-ttu-id="8646c-651">Ta metoda służy do blokowania aż <xref:System.Threading.WaitHandle> odbiera sygnał z innego wątku, takich jak jest generowany po zakończeniu operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="8646c-651">Use this method to block until a <xref:System.Threading.WaitHandle> receives a signal from another thread, such as is generated when an asynchronous operation completes.</span></span> <span data-ttu-id="8646c-652">Aby uzyskać więcej informacji, zobacz <xref:System.IAsyncResult> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="8646c-652">For more information, see the <xref:System.IAsyncResult> interface.</span></span>  
  
 <span data-ttu-id="8646c-653">Zastępuje tę metodę, aby dostosować zachowanie w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="8646c-653">Override this method to customize the behavior of derived classes.</span></span>  
  
 <span data-ttu-id="8646c-654">Maksymalna wartość `timeout` jest <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8646c-654">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8646c-655">Wywołanie tego przeciążenia metody jest taka sama jak wywołanie <xref:System.Threading.WaitHandle.WaitOne%28System.TimeSpan%2CSystem.Boolean%29> przeciążenia i określając `false` dla `exitContext`.</span><span class="sxs-lookup"><span data-stu-id="8646c-655">Calling this method overload is the same as calling the <xref:System.Threading.WaitHandle.WaitOne%28System.TimeSpan%2CSystem.Boolean%29> overload and specifying `false` for `exitContext`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8646c-656">Bieżące wystąpienie został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="8646c-656">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8646c-657"><paramref name="timeout" /> jest to liczba ujemna innych niż milisekund wartości-1, który reprezentuje nieskończony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="8646c-657"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span></span> 
<span data-ttu-id="8646c-658">—lub—</span><span class="sxs-lookup"><span data-stu-id="8646c-658">-or-</span></span> 
 <span data-ttu-id="8646c-659"><paramref name="timeout" /> jest większa niż <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-659"><paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.Threading.AbandonedMutexException"><span data-ttu-id="8646c-660">Czas oczekiwania zakończyć, ponieważ wątek został zakończony bez zwalniania elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="8646c-660">The wait completed because a thread exited without releasing a mutex.</span></span> <span data-ttu-id="8646c-661">Ten wyjątek nie jest generowany na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="8646c-661">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8646c-662">Bieżące wystąpienie jest przezroczysty serwera proxy dla <see cref="T:System.Threading.WaitHandle" /> w innej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="8646c-662">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WaitOne">
      <MemberSignature Language="C#" Value="public virtual bool WaitOne (int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitOne(int32 millisecondsTimeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WaitOne (millisecondsTimeout As Integer, exitContext As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool WaitOne(int millisecondsTimeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="abstract member WaitOne : int * bool -&gt; bool&#xA;override this.WaitOne : int * bool -&gt; bool" Usage="waitHandle.WaitOne (millisecondsTimeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout"><span data-ttu-id="8646c-663">Liczba milisekund, lub <see cref="F:System.Threading.Timeout.Infinite" /> (-1), aby czekać w nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="8646c-663">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span></span></param>
        <param name="exitContext"><span data-ttu-id="8646c-664"><see langword="true" /> Aby zakończyć domeny synchronizacji dla kontekstu przed oczekiwaniem (Jeśli w kontekście zsynchronizowane), a potem; ponownie pobrać w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-664"><see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8646c-665">Blokuje bieżący wątek do bieżącego <see cref="T:System.Threading.WaitHandle" /> odbiera sygnał, przy użyciu całkowita 32-bitowych, aby określić interwał czasu i określeniu, czy zakończyć domeny synchronizacji przed czas oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="8646c-665">Blocks the current thread until the current <see cref="T:System.Threading.WaitHandle" /> receives a signal, using a 32-bit signed integer to specify the time interval and specifying whether to exit the synchronization domain before the wait.</span></span></summary>
        <returns><span data-ttu-id="8646c-666"><see langword="true" /> Jeśli bieżące wystąpienie odbiera sygnał; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-666"><see langword="true" /> if the current instance receives a signal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8646c-667">Jeśli `millisecondsTimeout` wynosi zero, nie są blokowane w metodzie.</span><span class="sxs-lookup"><span data-stu-id="8646c-667">If `millisecondsTimeout` is zero, the method does not block.</span></span> <span data-ttu-id="8646c-668">Testuje, stan dojście oczekiwania i zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="8646c-668">It tests the state of the wait handle and returns immediately.</span></span>  
  
 <span data-ttu-id="8646c-669"><xref:System.Threading.AbandonedMutexException> jest nowa w .NET Framework w wersji 2.0.</span><span class="sxs-lookup"><span data-stu-id="8646c-669"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="8646c-670">W poprzednich wersjach <xref:System.Threading.WaitHandle.WaitOne%2A> metoda zwraca `true` po mutex zostanie porzucony.</span><span class="sxs-lookup"><span data-stu-id="8646c-670">In previous versions, the <xref:System.Threading.WaitHandle.WaitOne%2A> method returns `true` when a mutex is abandoned.</span></span> <span data-ttu-id="8646c-671">Porzuconego elementu mutex często oznacza to poważny błąd kodowania.</span><span class="sxs-lookup"><span data-stu-id="8646c-671">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="8646c-672">W przypadku elementu mutex całego systemu może wskazywać, że aplikacja został zakończony nagle (na przykład przy użyciu Menedżera zadań Windows).</span><span class="sxs-lookup"><span data-stu-id="8646c-672">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="8646c-673">Wyjątek zawiera informacje przydatne podczas debugowania.</span><span class="sxs-lookup"><span data-stu-id="8646c-673">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="8646c-674">Występuje, obiekt wywołujący tego bloków metody, dopóki bieżącego wystąpienia otrzymuje sygnał lub limit czasu.</span><span class="sxs-lookup"><span data-stu-id="8646c-674">The caller of this method blocks until the current instance receives a signal or a time-out occurs.</span></span> <span data-ttu-id="8646c-675">Ta metoda służy do blokowania aż <xref:System.Threading.WaitHandle> odbiera sygnał z innego wątku, takich jak jest generowany po zakończeniu operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="8646c-675">Use this method to block until a <xref:System.Threading.WaitHandle> receives a signal from another thread, such as is generated when an asynchronous operation completes.</span></span> <span data-ttu-id="8646c-676">Aby uzyskać więcej informacji, zobacz <xref:System.IAsyncResult> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="8646c-676">For more information, see the <xref:System.IAsyncResult> interface.</span></span>  
  
 <span data-ttu-id="8646c-677">Zastępuje tę metodę, aby dostosować zachowanie w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="8646c-677">Override this method to customize the behavior of derived classes.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="8646c-678">Uwagi dotyczące zamykania kontekstu</span><span class="sxs-lookup"><span data-stu-id="8646c-678">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="8646c-679">`exitContext` Parametr jest ignorowany, chyba że <xref:System.Threading.WaitHandle.WaitOne%2A> metoda jest wywoływana z wewnątrz inny niż domyślny kontekst zarządzanych.</span><span class="sxs-lookup"><span data-stu-id="8646c-679">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.WaitOne%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="8646c-680">Może się to zdarzyć, jeśli wątek znajduje się wewnątrz wywołania do wystąpienia klasy pochodzącej od <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="8646c-680">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="8646c-681">Nawet wtedy, gdy są aktualnie wykonuje metodę w klasie, która nie pochodzi od <xref:System.ContextBoundObject>, takiej jak <xref:System.String>, może być w kontekście innej niż domyślna Jeśli <xref:System.ContextBoundObject> znajduje się na stosie w bieżącej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="8646c-681">Even if you are currently executing a method on a class that does not derive from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="8646c-682">Gdy kod jest wykonywany w kontekście innej niż domyślna, określając `true` dla `exitContext` powoduje, że wątku zamknąć kontekstu zarządzanych inną niż domyślna (oznacza to, do którego nastąpi przejście do domyślnego kontekstu) przed wykonaniem <xref:System.Threading.WaitHandle.WaitOne%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8646c-682">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span> <span data-ttu-id="8646c-683">Wątek jest zwracany do oryginalnego kontekstu niedomyślną po wywołaniu <xref:System.Threading.WaitHandle.WaitOne%2A> ukończeniu metody.</span><span class="sxs-lookup"><span data-stu-id="8646c-683">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.WaitOne%2A> method completes.</span></span>  
  
 <span data-ttu-id="8646c-684">Może to być przydatne, gdy zawiera klasy powiązane z kontekstu <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="8646c-684">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="8646c-685">W takim przypadku wszystkie wywołania do elementów członkowskich klasy są automatycznie synchronizowane i domena synchronizacji jest cały kod dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="8646c-685">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="8646c-686">Jeśli kod w stosie wywołań elementu członkowskiego wywołuje <xref:System.Threading.WaitHandle.WaitOne%2A> metody i określa `true` dla `exitContext`, wątek kończy działanie synchronizacji domeny, dzięki czemu wątek, który jest zablokowany w wywołaniu do wszystkich elementów członkowskich obiektu, aby kontynuować.</span><span class="sxs-lookup"><span data-stu-id="8646c-686">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.WaitOne%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="8646c-687">Gdy <xref:System.Threading.WaitHandle.WaitOne%2A> metoda zwróci wartość, wątku, który zgłosił wywołanie musi czekać ponownie domeny synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="8646c-687">When the <xref:System.Threading.WaitHandle.WaitOne%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8646c-688">W poniższym przykładzie pokazano sposób, w jaki <xref:System.Threading.WaitHandle.WaitOne%28System.Int32%2CSystem.Boolean%29> przeciążenie metody zachowuje się wywołanego w ramach domeny synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="8646c-688">The following example shows how the <xref:System.Threading.WaitHandle.WaitOne%28System.Int32%2CSystem.Boolean%29> method overload behaves when it is called within a synchronization domain.</span></span> <span data-ttu-id="8646c-689">Po pierwsze, wątek czeka z `exitContext` równa `false` i blokuje, dopóki nie upłynie limit czasu oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="8646c-689">First, a thread waits with `exitContext` set to `false` and blocks until the wait timeout expires.</span></span> <span data-ttu-id="8646c-690">Drugi wątek wykonuje po pierwszym wątek kończy działanie i czeka z `exitContext` równa `true`.</span><span class="sxs-lookup"><span data-stu-id="8646c-690">A second thread executes after the first thread terminates and waits with `exitContext` set to `true`.</span></span> <span data-ttu-id="8646c-691">Wywołanie w celu sygnalizowania, że dojście oczekiwania dla tego drugiego wątku nie jest zablokowany, a wątek kończy się przed upływem limitu czasu oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="8646c-691">The call to signal the wait handle for this second thread is not blocked, and the thread completes before the wait timeout.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitOne4#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.threading.waithandle.waitone4/cpp/source.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitOne4#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.waithandle.waitone4/cs/source.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitOne4#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.waithandle.waitone4/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8646c-692">Bieżące wystąpienie został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="8646c-692">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8646c-693"><paramref name="millisecondsTimeout" /> jest liczbą ujemną od-1, który reprezentuje nieskończony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="8646c-693"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
        <exception cref="T:System.Threading.AbandonedMutexException"><span data-ttu-id="8646c-694">Czas oczekiwania zakończyć, ponieważ wątek został zakończony bez zwalniania elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="8646c-694">The wait completed because a thread exited without releasing a mutex.</span></span> <span data-ttu-id="8646c-695">Ten wyjątek nie jest generowany na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="8646c-695">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8646c-696">Bieżące wystąpienie jest przezroczysty serwera proxy dla <see cref="T:System.Threading.WaitHandle" /> w innej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="8646c-696">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WaitOne">
      <MemberSignature Language="C#" Value="public virtual bool WaitOne (TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitOne(valuetype System.TimeSpan timeout, bool exitContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WaitOne (timeout As TimeSpan, exitContext As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool WaitOne(TimeSpan timeout, bool exitContext);" />
      <MemberSignature Language="F#" Value="abstract member WaitOne : TimeSpan * bool -&gt; bool&#xA;override this.WaitOne : TimeSpan * bool -&gt; bool" Usage="waitHandle.WaitOne (timeout, exitContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="exitContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="8646c-697">A <see cref="T:System.TimeSpan" /> reprezentujący liczbę milisekund oczekiwania, lub <see cref="T:System.TimeSpan" /> reprezentujący milisekund czekać w nieskończoność,-1.</span><span class="sxs-lookup"><span data-stu-id="8646c-697">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <param name="exitContext"><span data-ttu-id="8646c-698"><see langword="true" /> Aby zakończyć domeny synchronizacji dla kontekstu przed oczekiwaniem (Jeśli w kontekście zsynchronizowane), a potem; ponownie pobrać w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-698"><see langword="true" /> to exit the synchronization domain for the context before the wait (if in a synchronized context), and reacquire it afterward; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8646c-699">Blokuje bieżący wątek, aż bieżące wystąpienie odbiera sygnał, za pomocą <see cref="T:System.TimeSpan" /> do określenia interwału czasu i określeniu, czy zakończyć domeny synchronizacji przed czas oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="8646c-699">Blocks the current thread until the current instance receives a signal, using a <see cref="T:System.TimeSpan" /> to specify the time interval and specifying whether to exit the synchronization domain before the wait.</span></span></summary>
        <returns><span data-ttu-id="8646c-700"><see langword="true" /> Jeśli bieżące wystąpienie odbiera sygnał; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-700"><see langword="true" /> if the current instance receives a signal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8646c-701">Jeśli `timeout` wynosi zero, nie są blokowane w metodzie.</span><span class="sxs-lookup"><span data-stu-id="8646c-701">If `timeout` is zero, the method does not block.</span></span> <span data-ttu-id="8646c-702">Testuje, stan dojście oczekiwania i zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="8646c-702">It tests the state of the wait handle and returns immediately.</span></span>  
  
 <span data-ttu-id="8646c-703"><xref:System.Threading.AbandonedMutexException> jest nowa w .NET Framework w wersji 2.0.</span><span class="sxs-lookup"><span data-stu-id="8646c-703"><xref:System.Threading.AbandonedMutexException> is new in the .NET Framework version 2.0.</span></span> <span data-ttu-id="8646c-704">W poprzednich wersjach <xref:System.Threading.WaitHandle.WaitOne%2A> metoda zwraca `true` po mutex zostanie porzucony.</span><span class="sxs-lookup"><span data-stu-id="8646c-704">In previous versions, the <xref:System.Threading.WaitHandle.WaitOne%2A> method returns `true` when a mutex is abandoned.</span></span> <span data-ttu-id="8646c-705">Porzuconego elementu mutex często oznacza to poważny błąd kodowania.</span><span class="sxs-lookup"><span data-stu-id="8646c-705">An abandoned mutex often indicates a serious coding error.</span></span> <span data-ttu-id="8646c-706">W przypadku elementu mutex całego systemu może wskazywać, że aplikacja został zakończony nagle (na przykład przy użyciu Menedżera zadań Windows).</span><span class="sxs-lookup"><span data-stu-id="8646c-706">In the case of a system-wide mutex, it might indicate that an application has been terminated abruptly (for example, by using Windows Task Manager).</span></span> <span data-ttu-id="8646c-707">Wyjątek zawiera informacje przydatne podczas debugowania.</span><span class="sxs-lookup"><span data-stu-id="8646c-707">The exception contains information useful for debugging.</span></span>  
  
 <span data-ttu-id="8646c-708">Występuje, obiekt wywołujący tego bloków metody, dopóki bieżącego wystąpienia otrzymuje sygnał lub limit czasu.</span><span class="sxs-lookup"><span data-stu-id="8646c-708">The caller of this method blocks until the current instance receives a signal or a time-out occurs.</span></span> <span data-ttu-id="8646c-709">Ta metoda służy do blokowania aż <xref:System.Threading.WaitHandle> odbiera sygnał z innego wątku, takich jak jest generowany po zakończeniu operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="8646c-709">Use this method to block until a <xref:System.Threading.WaitHandle> receives a signal from another thread, such as is generated when an asynchronous operation completes.</span></span> <span data-ttu-id="8646c-710">Aby uzyskać więcej informacji, zobacz <xref:System.IAsyncResult> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="8646c-710">For more information, see the <xref:System.IAsyncResult> interface.</span></span>  
  
 <span data-ttu-id="8646c-711">Zastępuje tę metodę, aby dostosować zachowanie w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="8646c-711">Override this method to customize the behavior of derived classes.</span></span>  
  
 <span data-ttu-id="8646c-712">Maksymalna wartość `timeout` jest <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8646c-712">The maximum value for `timeout` is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span>  
  
## <a name="notes-on-exiting-the-context"></a><span data-ttu-id="8646c-713">Uwagi dotyczące zamykania kontekstu</span><span class="sxs-lookup"><span data-stu-id="8646c-713">Notes on Exiting the Context</span></span>  
 <span data-ttu-id="8646c-714">`exitContext` Parametr jest ignorowany, chyba że <xref:System.Threading.WaitHandle.WaitOne%2A> metoda jest wywoływana z wewnątrz inny niż domyślny kontekst zarządzanych.</span><span class="sxs-lookup"><span data-stu-id="8646c-714">The `exitContext` parameter has no effect unless the <xref:System.Threading.WaitHandle.WaitOne%2A> method is called from inside a nondefault managed context.</span></span> <span data-ttu-id="8646c-715">Może się to zdarzyć, jeśli wątek znajduje się wewnątrz wywołania do wystąpienia klasy pochodzącej od <xref:System.ContextBoundObject>.</span><span class="sxs-lookup"><span data-stu-id="8646c-715">This can happen if your thread is inside a call to an instance of a class derived from <xref:System.ContextBoundObject>.</span></span> <span data-ttu-id="8646c-716">Nawet wtedy, gdy są aktualnie wykonuje metodę w klasie, która nie pochodzi od <xref:System.ContextBoundObject>, takiej jak <xref:System.String>, może być w kontekście innej niż domyślna Jeśli <xref:System.ContextBoundObject> znajduje się na stosie w bieżącej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="8646c-716">Even if you are currently executing a method on a class that does not derive from <xref:System.ContextBoundObject>, like <xref:System.String>, you can be in a nondefault context if a <xref:System.ContextBoundObject> is on your stack in the current application domain.</span></span>  
  
 <span data-ttu-id="8646c-717">Gdy kod jest wykonywany w kontekście innej niż domyślna, określając `true` dla `exitContext` powoduje, że wątku zamknąć kontekstu zarządzanych inną niż domyślna (oznacza to, do którego nastąpi przejście do domyślnego kontekstu) przed wykonaniem <xref:System.Threading.WaitHandle.WaitOne%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8646c-717">When your code is executing in a nondefault context, specifying `true` for `exitContext` causes the thread to exit the nondefault managed context (that is, to transition to the default context) before executing the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span> <span data-ttu-id="8646c-718">Wątek jest zwracany do oryginalnego kontekstu niedomyślną po wywołaniu <xref:System.Threading.WaitHandle.WaitOne%2A> ukończeniu metody.</span><span class="sxs-lookup"><span data-stu-id="8646c-718">The thread returns to the original nondefault context after the call to the <xref:System.Threading.WaitHandle.WaitOne%2A> method completes.</span></span>  
  
 <span data-ttu-id="8646c-719">Może to być przydatne, gdy zawiera klasy powiązane z kontekstu <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="8646c-719">This can be useful when the context-bound class has <xref:System.Runtime.Remoting.Contexts.SynchronizationAttribute>.</span></span> <span data-ttu-id="8646c-720">W takim przypadku wszystkie wywołania do elementów członkowskich klasy są automatycznie synchronizowane i domena synchronizacji jest cały kod dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="8646c-720">In that case, all calls to members of the class are automatically synchronized, and the synchronization domain is the entire body of code for the class.</span></span> <span data-ttu-id="8646c-721">Jeśli kod w stosie wywołań elementu członkowskiego wywołuje <xref:System.Threading.WaitHandle.WaitOne%2A> metody i określa `true` dla `exitContext`, wątek kończy działanie synchronizacji domeny, dzięki czemu wątek, który jest zablokowany w wywołaniu do wszystkich elementów członkowskich obiektu, aby kontynuować.</span><span class="sxs-lookup"><span data-stu-id="8646c-721">If code in the call stack of a member calls the <xref:System.Threading.WaitHandle.WaitOne%2A> method and specifies `true` for `exitContext`, the thread exits the synchronization domain, allowing a thread that is blocked on a call to any member of the object to proceed.</span></span> <span data-ttu-id="8646c-722">Gdy <xref:System.Threading.WaitHandle.WaitOne%2A> metoda zwróci wartość, wątku, który zgłosił wywołanie musi czekać ponownie domeny synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="8646c-722">When the <xref:System.Threading.WaitHandle.WaitOne%2A> method returns, the thread that made the call must wait to reenter the synchronization domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8646c-723">W poniższym przykładzie kodu pokazano, jak zachować procesu z przerywa podczas oczekiwania na zakończenie wykonywania wątku w tle za pomocą dojście oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="8646c-723">The following code example shows how to use a wait handle to keep a process from terminating while it waits for a background thread to finish executing.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitOne3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne3/CPP/source3.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitOne3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne3/CS/source3.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitOne3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitOne3/VB/source3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8646c-724">Bieżące wystąpienie został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="8646c-724">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8646c-725"><paramref name="timeout" /> jest to liczba ujemna innych niż milisekund wartości-1, który reprezentuje nieskończony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="8646c-725"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span></span> 
<span data-ttu-id="8646c-726">—lub—</span><span class="sxs-lookup"><span data-stu-id="8646c-726">-or-</span></span> 
 <span data-ttu-id="8646c-727"><paramref name="timeout" /> jest większa niż <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="8646c-727"><paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.Threading.AbandonedMutexException"><span data-ttu-id="8646c-728">Czas oczekiwania zakończyć, ponieważ wątek został zakończony bez zwalniania elementu mutex.</span><span class="sxs-lookup"><span data-stu-id="8646c-728">The wait completed because a thread exited without releasing a mutex.</span></span> <span data-ttu-id="8646c-729">Ten wyjątek nie jest generowany na Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="8646c-729">This exception is not thrown on Windows 98 or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8646c-730">Bieżące wystąpienie jest przezroczysty serwera proxy dla <see cref="T:System.Threading.WaitHandle" /> w innej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="8646c-730">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WaitTimeout">
      <MemberSignature Language="C#" Value="public const int WaitTimeout = 258;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 WaitTimeout = (258)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.WaitHandle.WaitTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Const WaitTimeout As Integer  = 258" />
      <MemberSignature Language="C++ CLI" Value="public: int WaitTimeout = 258;" />
      <MemberSignature Language="F#" Value="val mutable WaitTimeout : int" Usage="System.Threading.WaitHandle.WaitTimeout" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>258</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8646c-731">Oznacza to, że <see cref="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)" /> upłynął limit czasu operacji przed dowolnego z uchwytami oczekiwania zostały zasygnalizowane.</span><span class="sxs-lookup"><span data-stu-id="8646c-731">Indicates that a <see cref="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)" /> operation timed out before any of the wait handles were signaled.</span></span> <span data-ttu-id="8646c-732">To pole jest stałe.</span><span class="sxs-lookup"><span data-stu-id="8646c-732">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8646c-733">To pole jest jedną z możliwych wartości zwracanych z `WaitAny`.</span><span class="sxs-lookup"><span data-stu-id="8646c-733">This field is one of the possible return values of `WaitAny`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8646c-734">Poniższy przykład kodu demonstruje sposób używania puli wątków jednocześnie wyszukiwania plików na wielu dyskach.</span><span class="sxs-lookup"><span data-stu-id="8646c-734">The following code example demonstrates how to use the thread pool to simultaneously search for a file on multiple disks.</span></span> <span data-ttu-id="8646c-735">Kwestie związane z miejsca przeszukiwany jest tylko katalog główny każdego dysku.</span><span class="sxs-lookup"><span data-stu-id="8646c-735">For space considerations, only the root directory of each disk is searched.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.WaitAny2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny2/CPP/source2.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.WaitAny2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny2/CS/source2.cs#1)]
 [!code-vb[System.Threading.WaitHandle.WaitAny2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.WaitAny2/VB/source2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>