<Type Name="Barrier" FullName="System.Threading.Barrier">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bee8026d3993b24f779b79de161aa4ef16ae3f60" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69230373" /></Metadata><TypeSignature Language="C#" Value="public class Barrier : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Barrier extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Barrier" />
  <TypeSignature Language="VB.NET" Value="Public Class Barrier&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Barrier : IDisposable" />
  <TypeSignature Language="F#" Value="type Barrier = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Participant Count={ParticipantCount},Participants Remaining={ParticipantsRemaining}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6ea96-101">Umożliwia wykonywanie wielu zadań w celu współpracy nad algorytmem równolegle przez wiele faz.</span><span class="sxs-lookup"><span data-stu-id="6ea96-101">Enables multiple tasks to cooperatively work on an algorithm in parallel through multiple phases.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ea96-102">Grupy zadań współpracują przez przechodzenie przez serię etapów, w których każda z nich informuje o tym <xref:System.Threading.Barrier> w danej fazie i niejawnie czeka na nadejście wszystkich innych użytkowników.</span><span class="sxs-lookup"><span data-stu-id="6ea96-102">A group of tasks cooperate by moving through a series of phases, where each in the group signals it has arrived at the <xref:System.Threading.Barrier> in a given phase and implicitly waits for all others to arrive.</span></span> <span data-ttu-id="6ea96-103">Tego samego <xref:System.Threading.Barrier> elementu można używać w przypadku wielu faz.</span><span class="sxs-lookup"><span data-stu-id="6ea96-103">The same <xref:System.Threading.Barrier> can be used for multiple phases.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ea96-104">Poniższy przykład pokazuje, jak używać bariery:</span><span class="sxs-lookup"><span data-stu-id="6ea96-104">The following example shows how to use a barrier:</span></span>  
  
 [!code-csharp[System.Threading.Barrier#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.barrier/cs/barrier.cs#01)]
 [!code-vb[System.Threading.Barrier#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.barrier/vb/barrier.vb#01)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="6ea96-105">Wszystkie publiczne i chronione elementy członkowskie <see cref="T:System.Threading.Barrier" /> są bezpieczne dla wątków i mogą być używane współbieżnie z wielu wątków, z wyjątkiem Dispose, które muszą być używane tylko wtedy, gdy wszystkie inne operacje <see cref="T:System.Threading.Barrier" /> na zakończono.</span><span class="sxs-lookup"><span data-stu-id="6ea96-105">All public and protected members of <see cref="T:System.Threading.Barrier" /> are thread-safe and may be used concurrently from multiple threads, with the exception of Dispose, which must only be used when all other operations on the <see cref="T:System.Threading.Barrier" /> have completed.</span></span></threadsafe>
    <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="6ea96-106">Bariera (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="6ea96-106">Barrier (.NET Framework)</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="6ea96-107">Instrukcje: Synchronizuj współbieżne operacje z barierą</span><span class="sxs-lookup"><span data-stu-id="6ea96-107">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6ea96-108">Inicjuje nowe wystąpienie klasy <see cref="T:System.Threading.Barrier" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="6ea96-108">Initializes a new instance of the <see cref="T:System.Threading.Barrier" /> class.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="6ea96-109">Bariera (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="6ea96-109">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="6ea96-110">Instrukcje: Synchronizuj współbieżne operacje z barierą</span><span class="sxs-lookup"><span data-stu-id="6ea96-110">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Barrier (int participantCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 participantCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (participantCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Barrier(int participantCount);" />
      <MemberSignature Language="F#" Value="new System.Threading.Barrier : int -&gt; System.Threading.Barrier" Usage="new System.Threading.Barrier participantCount" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="participantCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="participantCount"><span data-ttu-id="6ea96-111">Liczba wątków uczestniczących.</span><span class="sxs-lookup"><span data-stu-id="6ea96-111">The number of participating threads.</span></span></param>
        <summary><span data-ttu-id="6ea96-112">Inicjuje nowe wystąpienie klasy <see cref="T:System.Threading.Barrier" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="6ea96-112">Initializes a new instance of the <see cref="T:System.Threading.Barrier" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6ea96-113"><paramref name="participantCount" />jest mniejsza niż 0 lub większa niż 32 767.</span><span class="sxs-lookup"><span data-stu-id="6ea96-113"><paramref name="participantCount" /> is less than 0 or greater than 32,767.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="6ea96-114">Bariera (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="6ea96-114">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="6ea96-115">Instrukcje: Synchronizuj współbieżne operacje z barierą</span><span class="sxs-lookup"><span data-stu-id="6ea96-115">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Barrier (int participantCount, Action&lt;System.Threading.Barrier&gt; postPhaseAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 participantCount, class System.Action`1&lt;class System.Threading.Barrier&gt; postPhaseAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (participantCount As Integer, postPhaseAction As Action(Of Barrier))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Barrier(int participantCount, Action&lt;System::Threading::Barrier ^&gt; ^ postPhaseAction);" />
      <MemberSignature Language="F#" Value="new System.Threading.Barrier : int * Action&lt;System.Threading.Barrier&gt; -&gt; System.Threading.Barrier" Usage="new System.Threading.Barrier (participantCount, postPhaseAction)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="participantCount" Type="System.Int32" />
        <Parameter Name="postPhaseAction" Type="System.Action&lt;System.Threading.Barrier&gt;" />
      </Parameters>
      <Docs>
        <param name="participantCount"><span data-ttu-id="6ea96-116">Liczba wątków uczestniczących.</span><span class="sxs-lookup"><span data-stu-id="6ea96-116">The number of participating threads.</span></span></param>
        <param name="postPhaseAction"><span data-ttu-id="6ea96-117"><see cref="T:System.Action`1" /> Do wykonania po każdej fazie.</span><span class="sxs-lookup"><span data-stu-id="6ea96-117">The <see cref="T:System.Action`1" /> to be executed after each phase.</span></span> <span data-ttu-id="6ea96-118">nie można przekazywać wartości null (Nothing w Visual Basic), co oznacza, że nie jest podejmowana żadna akcja.</span><span class="sxs-lookup"><span data-stu-id="6ea96-118">null (Nothing in Visual Basic) may be passed to indicate no action is taken.</span></span></param>
        <summary><span data-ttu-id="6ea96-119">Inicjuje nowe wystąpienie klasy <see cref="T:System.Threading.Barrier" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="6ea96-119">Initializes a new instance of the <see cref="T:System.Threading.Barrier" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ea96-120">`postPhaseAction` Delegat zostanie wykonany po odebraniu przez wszystkich uczestników bariery w jednej fazie.</span><span class="sxs-lookup"><span data-stu-id="6ea96-120">The `postPhaseAction` delegate will be executed after all participants have arrived at the barrier in one phase.</span></span> <span data-ttu-id="6ea96-121">Uczestnicy nie zostaną zwolnieni do następnej fazy, dopóki nie zakończy się wykonywanie delegata postPhaseAction.</span><span class="sxs-lookup"><span data-stu-id="6ea96-121">The participants will not be released to the next phase until the postPhaseAction delegate has completed execution.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6ea96-122"><paramref name="participantCount" />jest mniejsza niż 0 lub większa niż 32 767.</span><span class="sxs-lookup"><span data-stu-id="6ea96-122"><paramref name="participantCount" /> is less than 0 or greater than 32,767.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="6ea96-123">Bariera (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="6ea96-123">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="6ea96-124">Instrukcje: Synchronizuj współbieżne operacje z barierą</span><span class="sxs-lookup"><span data-stu-id="6ea96-124">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddParticipant">
      <MemberSignature Language="C#" Value="public long AddParticipant ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 AddParticipant() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.AddParticipant" />
      <MemberSignature Language="VB.NET" Value="Public Function AddParticipant () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long AddParticipant();" />
      <MemberSignature Language="F#" Value="member this.AddParticipant : unit -&gt; int64" Usage="barrier.AddParticipant " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6ea96-125"><see cref="T:System.Threading.Barrier" /> Powiadamia, że będzie to dodatkowy uczestnik.</span><span class="sxs-lookup"><span data-stu-id="6ea96-125">Notifies the <see cref="T:System.Threading.Barrier" /> that there will be an additional participant.</span></span></summary>
        <returns><span data-ttu-id="6ea96-126">Numer fazy bariery, w której nowi uczestnicy będą uczestniczyć w pierwszej kolejności.</span><span class="sxs-lookup"><span data-stu-id="6ea96-126">The phase number of the barrier in which the new participants will first participate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ea96-127">Jeśli przeszkoda wykonuje aktualnie akcję po fazie, to wywołanie jest blokowane do momentu zakończenia akcji post, a bariera została przeniesiona do kolejnej fazy.</span><span class="sxs-lookup"><span data-stu-id="6ea96-127">If the barrier is currently executing a post phase action, this call is blocked until the post phase action completes and the barrier has moved on to the next phase.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="6ea96-128">Bieżące wystąpienie zostało już usunięte.</span><span class="sxs-lookup"><span data-stu-id="6ea96-128">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6ea96-129">Dodanie uczestnika spowoduje, że liczba uczestników bariery przekroczy 32 767.</span><span class="sxs-lookup"><span data-stu-id="6ea96-129">Adding a participant would cause the barrier's participant count to exceed 32,767.</span></span>  
  
 <span data-ttu-id="6ea96-130">—lub—</span><span class="sxs-lookup"><span data-stu-id="6ea96-130">-or-</span></span>  
  
 <span data-ttu-id="6ea96-131">Metoda została wywołana z poziomu akcji wykonywanej po fazie.</span><span class="sxs-lookup"><span data-stu-id="6ea96-131">The method was invoked from within a post-phase action.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="6ea96-132">Bariera (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="6ea96-132">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="6ea96-133">Instrukcje: Synchronizuj współbieżne operacje z barierą</span><span class="sxs-lookup"><span data-stu-id="6ea96-133">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddParticipants">
      <MemberSignature Language="C#" Value="public long AddParticipants (int participantCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 AddParticipants(int32 participantCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.AddParticipants(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddParticipants (participantCount As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long AddParticipants(int participantCount);" />
      <MemberSignature Language="F#" Value="member this.AddParticipants : int -&gt; int64" Usage="barrier.AddParticipants participantCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="participantCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="participantCount"><span data-ttu-id="6ea96-134">Liczba dodatkowych uczestników do dodania do bariery.</span><span class="sxs-lookup"><span data-stu-id="6ea96-134">The number of additional participants to add to the barrier.</span></span></param>
        <summary><span data-ttu-id="6ea96-135"><see cref="T:System.Threading.Barrier" /> Powiadamia, że będziesz mieć dodatkowych uczestników.</span><span class="sxs-lookup"><span data-stu-id="6ea96-135">Notifies the <see cref="T:System.Threading.Barrier" /> that there will be additional participants.</span></span></summary>
        <returns><span data-ttu-id="6ea96-136">Numer fazy bariery, w której nowi uczestnicy będą uczestniczyć w pierwszej kolejności.</span><span class="sxs-lookup"><span data-stu-id="6ea96-136">The phase number of the barrier in which the new participants will first participate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ea96-137">Jeśli przeszkoda wykonuje aktualnie akcję po fazie, to wywołanie jest blokowane do momentu zakończenia akcji post, a bariera została przeniesiona do kolejnej fazy.</span><span class="sxs-lookup"><span data-stu-id="6ea96-137">If the barrier is currently executing a post phase action, this call is blocked until the post phase action completes and the barrier has moved on to the next phase.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="6ea96-138">Bieżące wystąpienie zostało już usunięte.</span><span class="sxs-lookup"><span data-stu-id="6ea96-138">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6ea96-139"><paramref name="participantCount" />jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="6ea96-139"><paramref name="participantCount" /> is less than 0.</span></span>  
  
<span data-ttu-id="6ea96-140">—lub—</span><span class="sxs-lookup"><span data-stu-id="6ea96-140">-or-</span></span> 
<span data-ttu-id="6ea96-141">Dodanie <paramref name="participantCount" /> uczestników spowoduje, że liczba uczestników bariery przekroczy 32 767.</span><span class="sxs-lookup"><span data-stu-id="6ea96-141">Adding <paramref name="participantCount" /> participants would cause the barrier's participant count to exceed 32,767.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6ea96-142">Metoda została wywołana z poziomu akcji wykonywanej po fazie.</span><span class="sxs-lookup"><span data-stu-id="6ea96-142">The method was invoked from within a post-phase action.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="6ea96-143">Bariera (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="6ea96-143">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="6ea96-144">Instrukcje: Synchronizuj współbieżne operacje z barierą</span><span class="sxs-lookup"><span data-stu-id="6ea96-144">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CurrentPhaseNumber">
      <MemberSignature Language="C#" Value="public long CurrentPhaseNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 CurrentPhaseNumber" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Barrier.CurrentPhaseNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentPhaseNumber As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long CurrentPhaseNumber { long get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentPhaseNumber : int64" Usage="System.Threading.Barrier.CurrentPhaseNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6ea96-145">Pobiera liczbę bieżącej fazy zapory.</span><span class="sxs-lookup"><span data-stu-id="6ea96-145">Gets the number of the barrier's current phase.</span></span></summary>
        <value><span data-ttu-id="6ea96-146">Zwraca liczbę bieżącej fazy zapory.</span><span class="sxs-lookup"><span data-stu-id="6ea96-146">Returns the number of the barrier's current phase.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="6ea96-147">Bariera (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="6ea96-147">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="6ea96-148">Instrukcje: Synchronizuj współbieżne operacje z barierą</span><span class="sxs-lookup"><span data-stu-id="6ea96-148">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6ea96-149">Zwalnia zasoby używane przez bieżące wystąpienie <see cref="T:System.Threading.Barrier" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="6ea96-149">Releases resources used by the current instance of the <see cref="T:System.Threading.Barrier" /> class.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="6ea96-150">Bariera (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="6ea96-150">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="6ea96-151">Instrukcje: Synchronizuj współbieżne operacje z barierą</span><span class="sxs-lookup"><span data-stu-id="6ea96-151">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="barrier.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6ea96-152">Zwalnia wszystkie zasoby używane przez bieżące wystąpienie <see cref="T:System.Threading.Barrier" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="6ea96-152">Releases all resources used by the current instance of the <see cref="T:System.Threading.Barrier" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ea96-153">Wywołaj `Dispose` po zakończeniu korzystania z <xref:System.Threading.Barrier>.</span><span class="sxs-lookup"><span data-stu-id="6ea96-153">Call `Dispose` when you are finished using the <xref:System.Threading.Barrier>.</span></span> <span data-ttu-id="6ea96-154">`Dispose` Metoda<xref:System.Threading.Barrier> pozostawia w stanie niezdatnym do użytku.</span><span class="sxs-lookup"><span data-stu-id="6ea96-154">The `Dispose` method leaves the <xref:System.Threading.Barrier> in an unusable state.</span></span> <span data-ttu-id="6ea96-155">Po wywołaniu `Dispose`należy wydać wszystkie odwołania <xref:System.Threading.Barrier> do, aby moduł wyrzucania elementów bezużytecznych mógł odwoływać pamięć <xref:System.Threading.Barrier> , którą zajmował.</span><span class="sxs-lookup"><span data-stu-id="6ea96-155">After calling `Dispose`, you must release all references to the <xref:System.Threading.Barrier> so the garbage collector can reclaim the memory that the <xref:System.Threading.Barrier> was occupying.</span></span>  
  
 <span data-ttu-id="6ea96-156">Aby uzyskać więcej informacji, zobacz [Oczyszczanie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i implementowanie [metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="6ea96-156">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6ea96-157">Zawsze wywołuj `Dispose` przed wydaniem ostatniego odwołania <xref:System.Threading.Barrier>do.</span><span class="sxs-lookup"><span data-stu-id="6ea96-157">Always call `Dispose` before you release your last reference to the <xref:System.Threading.Barrier>.</span></span> <span data-ttu-id="6ea96-158">W przeciwnym razie używane zasoby nie zostaną zwolnione do momentu wywołania <xref:System.Threading.Barrier> `Finalize` metody obiektu przez moduł zbierający elementy bezużyteczne.</span><span class="sxs-lookup"><span data-stu-id="6ea96-158">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.Barrier> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6ea96-159">Metoda została wywołana z poziomu akcji wykonywanej po fazie.</span><span class="sxs-lookup"><span data-stu-id="6ea96-159">The method was invoked from within a post-phase action.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="6ea96-160">Bariera (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="6ea96-160">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="6ea96-161">Instrukcje: Synchronizuj współbieżne operacje z barierą</span><span class="sxs-lookup"><span data-stu-id="6ea96-161">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="barrier.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="6ea96-162">Wartość true zwalnia zasoby zarządzane i niezarządzane; wartość false zwalnia tylko niezarządzane zasoby.</span><span class="sxs-lookup"><span data-stu-id="6ea96-162">true to release both managed and unmanaged resources; false to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="6ea96-163">Zwalnia zasoby niezarządzane używane przez <see cref="T:System.Threading.Barrier" />program i opcjonalnie zwalnia zarządzane zasoby.</span><span class="sxs-lookup"><span data-stu-id="6ea96-163">Releases the unmanaged resources used by the <see cref="T:System.Threading.Barrier" />, and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ea96-164">W przeciwieństwie do większości elementów członkowskich <xref:System.Threading.Barrier>, Metoda Dispose nie jest bezpieczna wątkowo i nie może być używana jednocześnie z innymi elementami członkowskimi tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="6ea96-164">Unlike most of the members of <xref:System.Threading.Barrier>, Dispose is not thread-safe and may not be used concurrently with other members of this instance.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="6ea96-165">Bariera (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="6ea96-165">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="6ea96-166">Instrukcje: Synchronizuj współbieżne operacje z barierą</span><span class="sxs-lookup"><span data-stu-id="6ea96-166">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ParticipantCount">
      <MemberSignature Language="C#" Value="public int ParticipantCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ParticipantCount" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Barrier.ParticipantCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParticipantCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ParticipantCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ParticipantCount : int" Usage="System.Threading.Barrier.ParticipantCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6ea96-167">Pobiera łączną liczbę uczestników w barierie.</span><span class="sxs-lookup"><span data-stu-id="6ea96-167">Gets the total number of participants in the barrier.</span></span></summary>
        <value><span data-ttu-id="6ea96-168">Zwraca łączną liczbę uczestników w barierie.</span><span class="sxs-lookup"><span data-stu-id="6ea96-168">Returns the total number of participants in the barrier.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="6ea96-169">Bariera (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="6ea96-169">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="6ea96-170">Instrukcje: Synchronizuj współbieżne operacje z barierą</span><span class="sxs-lookup"><span data-stu-id="6ea96-170">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ParticipantsRemaining">
      <MemberSignature Language="C#" Value="public int ParticipantsRemaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ParticipantsRemaining" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Barrier.ParticipantsRemaining" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParticipantsRemaining As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ParticipantsRemaining { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ParticipantsRemaining : int" Usage="System.Threading.Barrier.ParticipantsRemaining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6ea96-171">Pobiera liczbę uczestników w barierie, które nie były jeszcze sygnalizowane w bieżącej fazie.</span><span class="sxs-lookup"><span data-stu-id="6ea96-171">Gets the number of participants in the barrier that haven't yet signaled in the current phase.</span></span></summary>
        <value><span data-ttu-id="6ea96-172">Zwraca liczbę uczestników w barierie, które nie były jeszcze sygnalizowane w bieżącej fazie.</span><span class="sxs-lookup"><span data-stu-id="6ea96-172">Returns the number of participants in the barrier that haven't yet signaled in the current phase.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ea96-173">Może to być wartość 0 w trakcie akcji po fazie wykonywania delegata lub, jeśli ParticipantCount jest równa 0.</span><span class="sxs-lookup"><span data-stu-id="6ea96-173">This could be 0 during a post-phase action delegate execution or if the ParticipantCount is 0.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="6ea96-174">Bariera (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="6ea96-174">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="6ea96-175">Instrukcje: Synchronizuj współbieżne operacje z barierą</span><span class="sxs-lookup"><span data-stu-id="6ea96-175">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RemoveParticipant">
      <MemberSignature Language="C#" Value="public void RemoveParticipant ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveParticipant() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.RemoveParticipant" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveParticipant ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveParticipant();" />
      <MemberSignature Language="F#" Value="member this.RemoveParticipant : unit -&gt; unit" Usage="barrier.RemoveParticipant " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6ea96-176"><see cref="T:System.Threading.Barrier" /> Powiadamia, że będzie to jeden uczestnik.</span><span class="sxs-lookup"><span data-stu-id="6ea96-176">Notifies the <see cref="T:System.Threading.Barrier" /> that there will be one less participant.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="6ea96-177">Bieżące wystąpienie zostało już usunięte.</span><span class="sxs-lookup"><span data-stu-id="6ea96-177">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6ea96-178">Bariera ma już 0 uczestników.</span><span class="sxs-lookup"><span data-stu-id="6ea96-178">The barrier already has 0 participants.</span></span>  
  
 <span data-ttu-id="6ea96-179">—lub—</span><span class="sxs-lookup"><span data-stu-id="6ea96-179">-or-</span></span>  
  
 <span data-ttu-id="6ea96-180">Metoda została wywołana z poziomu akcji wykonywanej po fazie.</span><span class="sxs-lookup"><span data-stu-id="6ea96-180">The method was invoked from within a post-phase action.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="6ea96-181">Bariera (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="6ea96-181">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="6ea96-182">Instrukcje: Synchronizuj współbieżne operacje z barierą</span><span class="sxs-lookup"><span data-stu-id="6ea96-182">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RemoveParticipants">
      <MemberSignature Language="C#" Value="public void RemoveParticipants (int participantCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveParticipants(int32 participantCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.RemoveParticipants(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveParticipants (participantCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveParticipants(int participantCount);" />
      <MemberSignature Language="F#" Value="member this.RemoveParticipants : int -&gt; unit" Usage="barrier.RemoveParticipants participantCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="participantCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="participantCount"><span data-ttu-id="6ea96-183">Liczba dodatkowych uczestników do usunięcia z bariery.</span><span class="sxs-lookup"><span data-stu-id="6ea96-183">The number of additional participants to remove from the barrier.</span></span></param>
        <summary><span data-ttu-id="6ea96-184"><see cref="T:System.Threading.Barrier" /> Powiadamia, że będzie mniej uczestników.</span><span class="sxs-lookup"><span data-stu-id="6ea96-184">Notifies the <see cref="T:System.Threading.Barrier" /> that there will be fewer participants.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ea96-185">Jeśli `participantCount` uczestnicy już oczekują na przeszkodę, to usunięcie spełnia barierę, Akcja finalizowania fazy jest wykonywana i wszyscy uczestnicy są wybudzany, tak jakby ten Uczestnik został pomyślnie osiągnął barierę.</span><span class="sxs-lookup"><span data-stu-id="6ea96-185">If `participantCount` participants are already waiting on the barrier, this removal fulfills the barrier, the post phase action is executed and all of the participants are woken as if this participant being removed had successfully reached the barrier.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="6ea96-186">Bieżące wystąpienie zostało już usunięte.</span><span class="sxs-lookup"><span data-stu-id="6ea96-186">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6ea96-187">Łączna liczba uczestników jest mniejsza niż określona<paramref name="participantCount" /></span><span class="sxs-lookup"><span data-stu-id="6ea96-187">The total participant count is less than the specified <paramref name="participantCount" /></span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6ea96-188">Bariera ma już 0 uczestników.</span><span class="sxs-lookup"><span data-stu-id="6ea96-188">The barrier already has 0 participants.</span></span>  
  
 <span data-ttu-id="6ea96-189">—lub—</span><span class="sxs-lookup"><span data-stu-id="6ea96-189">-or-</span></span>  
  
 <span data-ttu-id="6ea96-190">Metoda została wywołana z poziomu akcji wykonywanej po fazie.</span><span class="sxs-lookup"><span data-stu-id="6ea96-190">The method was invoked from within a post-phase action.</span></span>  
  
 <span data-ttu-id="6ea96-191">—lub—</span><span class="sxs-lookup"><span data-stu-id="6ea96-191">-or-</span></span>  
  
 <span data-ttu-id="6ea96-192">Bieżąca liczba uczestników jest mniejsza niż określona participantCount</span><span class="sxs-lookup"><span data-stu-id="6ea96-192">current participant count is less than the specified participantCount</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="6ea96-193">Bariera (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="6ea96-193">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="6ea96-194">Instrukcje: Synchronizuj współbieżne operacje z barierą</span><span class="sxs-lookup"><span data-stu-id="6ea96-194">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignalAndWait">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6ea96-195">Sygnalizuje, że uczestnik osiągnął barierę i czeka wszystkim innym uczestnikom na osiągnięcie bariery.</span><span class="sxs-lookup"><span data-stu-id="6ea96-195">Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="6ea96-196">Bariera (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="6ea96-196">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="6ea96-197">Instrukcje: Synchronizuj współbieżne operacje z barierą</span><span class="sxs-lookup"><span data-stu-id="6ea96-197">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public void SignalAndWait ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SignalAndWait() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.SignalAndWait" />
      <MemberSignature Language="VB.NET" Value="Public Sub SignalAndWait ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SignalAndWait();" />
      <MemberSignature Language="F#" Value="member this.SignalAndWait : unit -&gt; unit" Usage="barrier.SignalAndWait " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6ea96-198">Sygnalizuje, że uczestnik osiągnął barierę i czeka wszystkim innym uczestnikom na osiągnięcie bariery.</span><span class="sxs-lookup"><span data-stu-id="6ea96-198">Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="6ea96-199">Bieżące wystąpienie zostało już usunięte.</span><span class="sxs-lookup"><span data-stu-id="6ea96-199">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6ea96-200">Metoda została wywołana z poziomu akcji wykonywanej po fazie, obecnie bariera ma 0 uczestników lub bariera jest zasygnalizowania przez więcej wątków, niż są one zarejestrowane jako uczestnicy.</span><span class="sxs-lookup"><span data-stu-id="6ea96-200">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</span></span></exception>
        <exception cref="T:System.Threading.BarrierPostPhaseException"><span data-ttu-id="6ea96-201">Jeśli wyjątek jest zgłaszany z akcji Opublikuj fazę bariery po wywołaniu przez wszystkie wątki uczestniczące SignalAndWait, wyjątek zostanie opakowany w BarrierPostPhaseException i będzie zgłaszany we wszystkich uczestniczących wątkach.</span><span class="sxs-lookup"><span data-stu-id="6ea96-201">If an exception is thrown from the post phase action of a Barrier after all participating threads have called SignalAndWait, the exception will be wrapped in a BarrierPostPhaseException and be thrown on all participating threads.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="6ea96-202">Bariera (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="6ea96-202">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="6ea96-203">Instrukcje: Synchronizuj współbieżne operacje z barierą</span><span class="sxs-lookup"><span data-stu-id="6ea96-203">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public bool SignalAndWait (int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SignalAndWait(int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.SignalAndWait(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignalAndWait (millisecondsTimeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SignalAndWait(int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="member this.SignalAndWait : int -&gt; bool" Usage="barrier.SignalAndWait millisecondsTimeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout"><span data-ttu-id="6ea96-204">Liczba milisekund oczekiwania lub <see cref="F:System.Threading.Timeout.Infinite" />(-1) oczekiwania na czas nieokreślony.</span><span class="sxs-lookup"><span data-stu-id="6ea96-204">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" />(-1) to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="6ea96-205">Sygnalizuje, że uczestnik osiągnął barierę i czeka wszystkim innym uczestnikom na osiągnięcie bariery, przy użyciu 32-bitowej podpisanej liczby całkowitej do mierzenia limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="6ea96-205">Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a 32-bit signed integer to measure the timeout.</span></span></summary>
        <returns><span data-ttu-id="6ea96-206">Jeśli wszyscy uczestnicy osiągnął barierę w określonym czasie; w przeciwnym razie false.</span><span class="sxs-lookup"><span data-stu-id="6ea96-206">if all participants reached the barrier within the specified time; otherwise false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="6ea96-207">Bieżące wystąpienie zostało już usunięte.</span><span class="sxs-lookup"><span data-stu-id="6ea96-207">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6ea96-208"><paramref name="millisecondsTimeout" />jest liczbą ujemną inną niż-1, co oznacza nieskończony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="6ea96-208"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6ea96-209">Metoda została wywołana z poziomu akcji wykonywanej po fazie, obecnie bariera ma 0 uczestników lub bariera jest zasygnalizowania przez więcej wątków, niż są one zarejestrowane jako uczestnicy.</span><span class="sxs-lookup"><span data-stu-id="6ea96-209">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</span></span></exception>
        <exception cref="T:System.Threading.BarrierPostPhaseException"><span data-ttu-id="6ea96-210">Jeśli wyjątek jest zgłaszany z akcji Opublikuj fazę bariery po wywołaniu przez wszystkie wątki uczestniczące SignalAndWait, wyjątek zostanie opakowany w BarrierPostPhaseException i będzie zgłaszany we wszystkich uczestniczących wątkach.</span><span class="sxs-lookup"><span data-stu-id="6ea96-210">If an exception is thrown from the post phase action of a Barrier after all participating threads have called SignalAndWait, the exception will be wrapped in a BarrierPostPhaseException and be thrown on all participating threads.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="6ea96-211">Bariera (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="6ea96-211">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="6ea96-212">Instrukcje: Synchronizuj współbieżne operacje z barierą</span><span class="sxs-lookup"><span data-stu-id="6ea96-212">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public void SignalAndWait (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SignalAndWait(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.SignalAndWait(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SignalAndWait(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.SignalAndWait : System.Threading.CancellationToken -&gt; unit" Usage="barrier.SignalAndWait cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="6ea96-213"><see cref="T:System.Threading.CancellationToken" /> Do obserwowania.</span><span class="sxs-lookup"><span data-stu-id="6ea96-213">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span></span></param>
        <summary><span data-ttu-id="6ea96-214">Sygnalizuje, że uczestnik osiągnął barierę i czeka wszystkim innym uczestnikom na osiągnięcie bariery, zachowując token anulowania.</span><span class="sxs-lookup"><span data-stu-id="6ea96-214">Signals that a participant has reached the barrier and waits for all other participants to reach the barrier, while observing a cancellation token.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="6ea96-215"><paramref name="cancellationToken" />zostało anulowane.</span><span class="sxs-lookup"><span data-stu-id="6ea96-215"><paramref name="cancellationToken" /> has been canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="6ea96-216">Bieżące wystąpienie zostało już usunięte.</span><span class="sxs-lookup"><span data-stu-id="6ea96-216">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6ea96-217">Metoda została wywołana z poziomu akcji wykonywanej po fazie, obecnie bariera ma 0 uczestników lub bariera jest zasygnalizowania przez więcej wątków, niż są one zarejestrowane jako uczestnicy.</span><span class="sxs-lookup"><span data-stu-id="6ea96-217">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="6ea96-218">Bariera (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="6ea96-218">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="6ea96-219">Instrukcje: Synchronizuj współbieżne operacje z barierą</span><span class="sxs-lookup"><span data-stu-id="6ea96-219">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public bool SignalAndWait (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SignalAndWait(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignalAndWait (timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SignalAndWait(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.SignalAndWait : TimeSpan -&gt; bool" Usage="barrier.SignalAndWait timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="6ea96-220">Reprezentuje liczbę milisekund, które należy oczekiwać <see cref="T:System.TimeSpan" /> lub który reprezentuje-1 milisekund, aby czekać na czas nieokreślony. <see cref="T:System.TimeSpan" /></span><span class="sxs-lookup"><span data-stu-id="6ea96-220">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="6ea96-221">Sygnalizuje, że uczestnik osiągnął barierę i czeka wszystkim innym uczestnikom na osiągnięcie bariery, przy użyciu <see cref="T:System.TimeSpan" /> obiektu do mierzenia interwału czasu.</span><span class="sxs-lookup"><span data-stu-id="6ea96-221">Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a <see cref="T:System.TimeSpan" /> object to measure the time interval.</span></span></summary>
        <returns><span data-ttu-id="6ea96-222">prawda, jeśli wszyscy inni uczestnicy osiągnął barierę; w przeciwnym razie false.</span><span class="sxs-lookup"><span data-stu-id="6ea96-222">true if all other participants reached the barrier; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="6ea96-223">Bieżące wystąpienie zostało już usunięte.</span><span class="sxs-lookup"><span data-stu-id="6ea96-223">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6ea96-224"><paramref name="timeout" />jest liczbą ujemną inną niż-1 milisekund, która reprezentuje nieskończony limit czasu lub jest większa niż 32 767.</span><span class="sxs-lookup"><span data-stu-id="6ea96-224"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out, or it is greater than 32,767.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6ea96-225">Metoda została wywołana z poziomu akcji wykonywanej po fazie, obecnie bariera ma 0 uczestników lub bariera jest zasygnalizowania przez więcej wątków, niż są one zarejestrowane jako uczestnicy.</span><span class="sxs-lookup"><span data-stu-id="6ea96-225">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="6ea96-226">Bariera (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="6ea96-226">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="6ea96-227">Instrukcje: Synchronizuj współbieżne operacje z barierą</span><span class="sxs-lookup"><span data-stu-id="6ea96-227">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public bool SignalAndWait (int millisecondsTimeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SignalAndWait(int32 millisecondsTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SignalAndWait(int millisecondsTimeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.SignalAndWait : int * System.Threading.CancellationToken -&gt; bool" Usage="barrier.SignalAndWait (millisecondsTimeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout"><span data-ttu-id="6ea96-228">Liczba milisekund oczekiwania lub <see cref="F:System.Threading.Timeout.Infinite" />(-1) oczekiwania na czas nieokreślony.</span><span class="sxs-lookup"><span data-stu-id="6ea96-228">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" />(-1) to wait indefinitely.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="6ea96-229"><see cref="T:System.Threading.CancellationToken" /> Do obserwowania.</span><span class="sxs-lookup"><span data-stu-id="6ea96-229">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span></span></param>
        <summary><span data-ttu-id="6ea96-230">Sygnalizuje, że uczestnik osiągnął barierę i czeka wszystkim innym uczestnikom na osiągnięcie bariery, przy użyciu 32-bitowej podpisanej liczby całkowitej do mierzenia limitu czasu, przy zachowaniu tokenu anulowania.</span><span class="sxs-lookup"><span data-stu-id="6ea96-230">Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a 32-bit signed integer to measure the timeout, while observing a cancellation token.</span></span></summary>
        <returns><span data-ttu-id="6ea96-231">Jeśli wszyscy uczestnicy osiągnął barierę w określonym czasie; w przeciwnym razie wartość false</span><span class="sxs-lookup"><span data-stu-id="6ea96-231">if all participants reached the barrier within the specified time; otherwise false</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ea96-232">Jeśli została anulowana przed efektem sygnału, <xref:System.OperationCanceledException> zostanie zgłoszony błąd i <xref:System.Threading.Barrier.ParticipantsRemaining%2A> wartość nie zostanie zmniejszona. `cancellationToken`</span><span class="sxs-lookup"><span data-stu-id="6ea96-232">If the `cancellationToken` was canceled before the signal took effect, then an <xref:System.OperationCanceledException> is thrown and the <xref:System.Threading.Barrier.ParticipantsRemaining%2A> value is not decreased.</span></span> <span data-ttu-id="6ea96-233">Jeśli wartość `cancellationToken` nie została anulowana lub anulowana po wykonaniu <xref:System.Threading.Barrier.ParticipantsRemaining%2A> efektu, zostanie zmniejszona i <xref:System.OperationCanceledException> nie zostanie zgłoszony żaden.</span><span class="sxs-lookup"><span data-stu-id="6ea96-233">If the `cancellationToken` is not canceled or is canceled after the signal takes effect then <xref:System.Threading.Barrier.ParticipantsRemaining%2A> is decreased and no <xref:System.OperationCanceledException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="6ea96-234"><paramref name="cancellationToken" />zostało anulowane.</span><span class="sxs-lookup"><span data-stu-id="6ea96-234"><paramref name="cancellationToken" /> has been canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="6ea96-235">Bieżące wystąpienie zostało już usunięte.</span><span class="sxs-lookup"><span data-stu-id="6ea96-235">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6ea96-236"><paramref name="millisecondsTimeout" />jest liczbą ujemną inną niż-1, co oznacza nieskończony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="6ea96-236"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6ea96-237">Metoda została wywołana z poziomu akcji wykonywanej po fazie, obecnie bariera ma 0 uczestników lub bariera jest zasygnalizowania przez więcej wątków, niż są one zarejestrowane jako uczestnicy.</span><span class="sxs-lookup"><span data-stu-id="6ea96-237">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="6ea96-238">Bariera (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="6ea96-238">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="6ea96-239">Instrukcje: Synchronizuj współbieżne operacje z barierą</span><span class="sxs-lookup"><span data-stu-id="6ea96-239">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public bool SignalAndWait (TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SignalAndWait(valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SignalAndWait(TimeSpan timeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.SignalAndWait : TimeSpan * System.Threading.CancellationToken -&gt; bool" Usage="barrier.SignalAndWait (timeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="6ea96-240">Reprezentuje liczbę milisekund, które należy oczekiwać <see cref="T:System.TimeSpan" /> lub który reprezentuje-1 milisekund, aby czekać na czas nieokreślony. <see cref="T:System.TimeSpan" /></span><span class="sxs-lookup"><span data-stu-id="6ea96-240">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="6ea96-241"><see cref="T:System.Threading.CancellationToken" /> Do obserwowania.</span><span class="sxs-lookup"><span data-stu-id="6ea96-241">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span></span></param>
        <summary><span data-ttu-id="6ea96-242">Sygnalizuje, że uczestnik osiągnął barierę i czeka wszystkim innym uczestnikom na osiągnięcie bariery, przy użyciu <see cref="T:System.TimeSpan" /> obiektu do mierzenia interwału czasu, przy zachowaniu tokenu anulowania.</span><span class="sxs-lookup"><span data-stu-id="6ea96-242">Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a <see cref="T:System.TimeSpan" /> object to measure the time interval, while observing a cancellation token.</span></span></summary>
        <returns><span data-ttu-id="6ea96-243">prawda, jeśli wszyscy inni uczestnicy osiągnął barierę; w przeciwnym razie false.</span><span class="sxs-lookup"><span data-stu-id="6ea96-243">true if all other participants reached the barrier; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="6ea96-244"><paramref name="cancellationToken" />zostało anulowane.</span><span class="sxs-lookup"><span data-stu-id="6ea96-244"><paramref name="cancellationToken" /> has been canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="6ea96-245">Bieżące wystąpienie zostało już usunięte.</span><span class="sxs-lookup"><span data-stu-id="6ea96-245">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6ea96-246"><paramref name="timeout" />jest liczbą ujemną inną niż-1 milisekund, która reprezentuje nieskończony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="6ea96-246"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6ea96-247">Metoda została wywołana z poziomu akcji wykonywanej po fazie, obecnie bariera ma 0 uczestników lub bariera jest zasygnalizowania przez więcej wątków, niż są one zarejestrowane jako uczestnicy.</span><span class="sxs-lookup"><span data-stu-id="6ea96-247">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="6ea96-248">Bariera (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="6ea96-248">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="6ea96-249">Instrukcje: Synchronizuj współbieżne operacje z barierą</span><span class="sxs-lookup"><span data-stu-id="6ea96-249">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
