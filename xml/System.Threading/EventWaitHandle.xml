<Type Name="EventWaitHandle" FullName="System.Threading.EventWaitHandle">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8516467f988f4de6e245aa90142fb3d512bca805" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39855709" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventWaitHandle : System.Threading.WaitHandle" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventWaitHandle extends System.Threading.WaitHandle" />
  <TypeSignature Language="DocId" Value="T:System.Threading.EventWaitHandle" />
  <TypeSignature Language="VB.NET" Value="Public Class EventWaitHandle&#xA;Inherits WaitHandle" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventWaitHandle : System::Threading::WaitHandle" />
  <TypeSignature Language="F#" Value="type EventWaitHandle = class&#xA;    inherit WaitHandle" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Threading.WaitHandle</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="2586b-101">Reprezentuje zdarzenie synchronizacji wątków.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2586b-101">Represents a thread synchronization event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2586b-102"><xref:System.Threading.EventWaitHandle> Klasa umożliwia wątków do komunikowania się ze sobą za sygnalizowanie.</span><span class="sxs-lookup"><span data-stu-id="2586b-102">The <xref:System.Threading.EventWaitHandle> class allows threads to communicate with each other by signaling.</span></span> <span data-ttu-id="2586b-103">Zazwyczaj jeden lub więcej wątków zablokowane na <xref:System.Threading.EventWaitHandle> do momentu odblokowania wątek wywołuje <xref:System.Threading.EventWaitHandle.Set%2A> metody, zwalniając co najmniej jednym z zablokowanych wątków.</span><span class="sxs-lookup"><span data-stu-id="2586b-103">Typically, one or more threads block on an <xref:System.Threading.EventWaitHandle> until an unblocked thread calls the <xref:System.Threading.EventWaitHandle.Set%2A> method, releasing one or more of the blocked threads.</span></span> <span data-ttu-id="2586b-104">Wątek może sygnał <xref:System.Threading.EventWaitHandle> a następnie zablokować na ich temat, wywołując `static` (`Shared` w języku Visual Basic) <xref:System.Threading.WaitHandle.SignalAndWait%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="2586b-104">A thread can signal an <xref:System.Threading.EventWaitHandle> and then block on it, by calling the `static` (`Shared` in Visual Basic) <xref:System.Threading.WaitHandle.SignalAndWait%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2586b-105"><xref:System.Threading.EventWaitHandle> Klasy zapewnia dostęp do systemu o nazwie zdarzenia synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="2586b-105">The <xref:System.Threading.EventWaitHandle> class provides access to named system synchronization events.</span></span>  
  
 <span data-ttu-id="2586b-106">Zachowanie <xref:System.Threading.EventWaitHandle> , zostały zasygnalizują, zależy od jej tryb resetowania.</span><span class="sxs-lookup"><span data-stu-id="2586b-106">The behavior of an <xref:System.Threading.EventWaitHandle> that has been signaled depends on its reset mode.</span></span> <span data-ttu-id="2586b-107"><xref:System.Threading.EventWaitHandle> Utworzone za pomocą <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> Flaga Resetuje automatycznie, gdy sygnalizowane po przy zwalnianiu pojedynczego wątku oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="2586b-107">An <xref:System.Threading.EventWaitHandle> created with the <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> flag resets automatically when signaled, after releasing a single waiting thread.</span></span> <span data-ttu-id="2586b-108"><xref:System.Threading.EventWaitHandle> Utworzone za pomocą <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> flagi pozostaje sygnałowego aż do jego <xref:System.Threading.EventWaitHandle.Reset%2A> metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="2586b-108">An <xref:System.Threading.EventWaitHandle> created with the <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> flag remains signaled until its <xref:System.Threading.EventWaitHandle.Reset%2A> method is called.</span></span>  
  
 <span data-ttu-id="2586b-109">Automatyczne resetowanie zdarzenia udostępniają wyłącznego dostępu do zasobu.</span><span class="sxs-lookup"><span data-stu-id="2586b-109">Automatic reset events provide exclusive access to a resource.</span></span> <span data-ttu-id="2586b-110">Jeśli zdarzenie resetu automatycznego jest sygnalizowane, gdy nie ma wątków oczekujących, pozostaje sygnałowego aż wątek próby poczekaj na nim.</span><span class="sxs-lookup"><span data-stu-id="2586b-110">If an automatic reset event is signaled when no threads are waiting, it remains signaled until a thread attempts to wait on it.</span></span> <span data-ttu-id="2586b-111">Zdarzenie zwalnia wątku, a od razu resetuje, blokuje kolejnych wątków.</span><span class="sxs-lookup"><span data-stu-id="2586b-111">The event releases the thread and immediately resets, blocking subsequent threads.</span></span>  
  
 <span data-ttu-id="2586b-112">Zdarzenia są podobne do bramy resetowania ręcznego.</span><span class="sxs-lookup"><span data-stu-id="2586b-112">Manual reset events are like gates.</span></span> <span data-ttu-id="2586b-113">Gdy zdarzenie nie jest sygnalizowane, wątki, które czekać na nim będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2586b-113">When the event is not signaled, threads that wait on it will block.</span></span> <span data-ttu-id="2586b-114">Zdarzenie jest sygnalizowane, wszystkie wątki oczekiwania są wydawane, gdy zdarzenie pozostaje sygnałowego (oznacza to, w tym czasie czeka kolejnych nie blokują) do momentu jego <xref:System.Threading.EventWaitHandle.Reset%2A> metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="2586b-114">When the event is signaled, all waiting threads are released, and the event remains signaled (that is, subsequent waits do not block) until its <xref:System.Threading.EventWaitHandle.Reset%2A> method is called.</span></span> <span data-ttu-id="2586b-115">Resetowanie ręczne zdarzenia są przydatne, gdy jeden wątek musi ukończyć działania, przed kontynuowaniem inne wątki.</span><span class="sxs-lookup"><span data-stu-id="2586b-115">Manual reset events are useful when one thread must complete an activity before other threads can proceed.</span></span>  
  
 <span data-ttu-id="2586b-116"><xref:System.Threading.EventWaitHandle> obiekty mogą być używane z `static`(`Shared` w języku Visual Basic) <xref:System.Threading.WaitHandle.WaitAll%2A?displayProperty=nameWithType> i <xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="2586b-116"><xref:System.Threading.EventWaitHandle> objects can be used with the `static`(`Shared` in Visual Basic) <xref:System.Threading.WaitHandle.WaitAll%2A?displayProperty=nameWithType> and <xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="2586b-117">Aby uzyskać więcej informacji na temat mechanizmów synchronizacji wątków, zobacz [EventWaitHandle, autoresetevent —, CountdownEvent ManualResetEvent](~/docs/standard/threading/eventwaithandle-autoresetevent-countdownevent-manualresetevent.md).</span><span class="sxs-lookup"><span data-stu-id="2586b-117">For more information about thread synchronization mechanisms, see [EventWaitHandle, AutoResetEvent, CountdownEvent, ManualResetEvent](~/docs/standard/threading/eventwaithandle-autoresetevent-countdownevent-manualresetevent.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2586b-118">Poniższy przykład kodu wykorzystuje <xref:System.Threading.WaitHandle.SignalAndWait%28System.Threading.WaitHandle%2CSystem.Threading.WaitHandle%29> przeciążenia metody, aby zezwolić na wątek główny sygnał zablokowany wątek i poczekać, aż wątek kończy zadanie.</span><span class="sxs-lookup"><span data-stu-id="2586b-118">The following code example uses the <xref:System.Threading.WaitHandle.SignalAndWait%28System.Threading.WaitHandle%2CSystem.Threading.WaitHandle%29> method overload to allow the main thread to signal a blocked thread and then wait until the thread finishes a task.</span></span>  
  
 <span data-ttu-id="2586b-119">W przykładzie rozpoczyna się pięć wątków i umożliwia ich blokowanie na <xref:System.Threading.EventWaitHandle> utworzone za pomocą <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> Flaga, a następnie czas jeden wątek wersjach użytkownik naciśnie klawisz ENTER.</span><span class="sxs-lookup"><span data-stu-id="2586b-119">The example starts five threads and allows them to block on an <xref:System.Threading.EventWaitHandle> created with the <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> flag, then releases one thread each time the user presses the ENTER key.</span></span> <span data-ttu-id="2586b-120">Przykład następnie kolejkuje innego pięć wątków i zwalnia je za pomocą <xref:System.Threading.EventWaitHandle> utworzone za pomocą <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> flagi.</span><span class="sxs-lookup"><span data-stu-id="2586b-120">The example then queues another five threads and releases them all using an <xref:System.Threading.EventWaitHandle> created with the <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> flag.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/CS/source.cs#1)]
 [!code-vb[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="2586b-121">Ten typ jest bezpieczny wątkowo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2586b-121">This type is thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Threading.WaitHandle" />
    <altmember cref="T:System.Threading.AutoResetEvent" />
    <altmember cref="T:System.Threading.ManualResetEvent" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2586b-122">Inicjuje nowe wystąpienie klasy <see cref="T:System.Threading.EventWaitHandle" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-122">Initializes a new instance of the <see cref="T:System.Threading.EventWaitHandle" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventWaitHandle (bool initialState, System.Threading.EventResetMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool initialState, valuetype System.Threading.EventResetMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandle.#ctor(System.Boolean,System.Threading.EventResetMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialState As Boolean, mode As EventResetMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventWaitHandle(bool initialState, System::Threading::EventResetMode mode);" />
      <MemberSignature Language="F#" Value="new System.Threading.EventWaitHandle : bool * System.Threading.EventResetMode -&gt; System.Threading.EventWaitHandle" Usage="new System.Threading.EventWaitHandle (initialState, mode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="initialState" Type="System.Boolean" />
        <Parameter Name="mode" Type="System.Threading.EventResetMode" />
      </Parameters>
      <Docs>
        <param name="initialState">
          <span data-ttu-id="2586b-123">
            <see langword="true" /> Aby ustawić stan początkowy sygnałowego; <see langword="false" /> ustawić ją na nonsignaled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-123">
              <see langword="true" /> to set the initial state to signaled; <see langword="false" /> to set it to nonsignaled.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="2586b-124">Jedną z <see cref="T:System.Threading.EventResetMode" /> wartości, które określa, czy zdarzenie Resetuje automatycznie lub ręcznie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-124">One of the <see cref="T:System.Threading.EventResetMode" /> values that determines whether the event resets automatically or manually.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2586b-125">Inicjuje nowe wystąpienie klasy <see cref="T:System.Threading.EventWaitHandle" /> klasy, określając czy początkowo jest sygnalizowane dojście oczekiwania i czy Resetuje automatycznie lub ręcznie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-125">Initializes a new instance of the <see cref="T:System.Threading.EventWaitHandle" /> class, specifying whether the wait handle is initially signaled, and whether it resets automatically or manually.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2586b-126">W przypadku nonsignaled początkowy stan zdarzenia spowoduje zablokowanie wątków, oczekiwania na zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="2586b-126">If the initial state of the event is nonsignaled, threads that wait on the event will block.</span></span> <span data-ttu-id="2586b-127">Jeśli stan początkowy jest sygnalizowane i <xref:System.Threading.EventResetMode.ManualReset> określono flagę `mode`, wątki, które oczekiwania na zdarzenie nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2586b-127">If the initial state is signaled, and the <xref:System.Threading.EventResetMode.ManualReset> flag is specified for `mode`, threads that wait on the event will not block.</span></span> <span data-ttu-id="2586b-128">Jeśli stan początkowy jest sygnalizowane, i `mode` jest <xref:System.Threading.EventResetMode.AutoReset>, pierwszy wątek, który czeka na zdarzenie zostanie wydana natychmiast, po upływie którego zdarzenie spowoduje zresetowanie i spowoduje zablokowanie kolejnych wątków.</span><span class="sxs-lookup"><span data-stu-id="2586b-128">If the initial state is signaled, and `mode` is <xref:System.Threading.EventResetMode.AutoReset>, the first thread that waits on the event will be released immediately, after which the event will reset, and subsequent threads will block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2586b-129">Poniższy przykład kodu wykorzystuje <xref:System.Threading.WaitHandle.SignalAndWait%28System.Threading.WaitHandle%2CSystem.Threading.WaitHandle%29> przeciążenia metody, aby zezwolić na wątek główny sygnał zablokowany wątek i poczekać, aż wątek kończy zadanie.</span><span class="sxs-lookup"><span data-stu-id="2586b-129">The following code example uses the <xref:System.Threading.WaitHandle.SignalAndWait%28System.Threading.WaitHandle%2CSystem.Threading.WaitHandle%29> method overload to allow the main thread to signal a blocked thread and then wait until the thread finishes a task.</span></span>  
  
 <span data-ttu-id="2586b-130">W przykładzie rozpoczyna się pięć wątków i umożliwia ich blokowanie na <xref:System.Threading.EventWaitHandle> utworzone za pomocą <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> Flaga, a następnie czas jeden wątek wersjach użytkownik naciśnie klawisz ENTER.</span><span class="sxs-lookup"><span data-stu-id="2586b-130">The example starts five threads and allows them to block on an <xref:System.Threading.EventWaitHandle> created with the <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> flag, then releases one thread each time the user presses ENTER key.</span></span> <span data-ttu-id="2586b-131">Przykład następnie kolejkuje innego pięć wątków i zwalnia je za pomocą <xref:System.Threading.EventWaitHandle> utworzone za pomocą <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> flagi.</span><span class="sxs-lookup"><span data-stu-id="2586b-131">The example then queues another five threads and releases them all using an <xref:System.Threading.EventWaitHandle> created with the <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> flag.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/CS/source.cs#1)]
 [!code-vb[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventWaitHandle (bool initialState, System.Threading.EventResetMode mode, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool initialState, valuetype System.Threading.EventResetMode mode, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandle.#ctor(System.Boolean,System.Threading.EventResetMode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialState As Boolean, mode As EventResetMode, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventWaitHandle(bool initialState, System::Threading::EventResetMode mode, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Threading.EventWaitHandle : bool * System.Threading.EventResetMode * string -&gt; System.Threading.EventWaitHandle" Usage="new System.Threading.EventWaitHandle (initialState, mode, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="initialState" Type="System.Boolean" />
        <Parameter Name="mode" Type="System.Threading.EventResetMode" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="initialState">
          <span data-ttu-id="2586b-132">
            <see langword="true" /> Aby ustawić stan początkowy sygnalizowane, jeśli zdarzenie o nazwie zostanie utworzony w wyniku tego wywołania; <see langword="false" /> ustawić ją na nonsignaled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-132">
              <see langword="true" /> to set the initial state to signaled if the named event is created as a result of this call; <see langword="false" /> to set it to nonsignaled.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="2586b-133">Jedną z <see cref="T:System.Threading.EventResetMode" /> wartości, które określa, czy zdarzenie Resetuje automatycznie lub ręcznie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-133">One of the <see cref="T:System.Threading.EventResetMode" /> values that determines whether the event resets automatically or manually.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="2586b-134">Nazwa zdarzenia synchronizacji całego systemu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-134">The name of a system-wide synchronization event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2586b-135">Inicjuje nowe wystąpienie klasy <see cref="T:System.Threading.EventWaitHandle" /> klasy, określając, czy dojście oczekiwania początkowym zasygnalizowania Jeśli utworzone w wyniku tego wywołania czy Resetuje automatycznie lub ręcznie oraz nazwę zdarzenia synchronizacji systemu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-135">Initializes a new instance of the <see cref="T:System.Threading.EventWaitHandle" /> class, specifying whether the wait handle is initially signaled if created as a result of this call, whether it resets automatically or manually, and the name of a system synchronization event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2586b-136">Jeśli `name` jest `null` lub pustym ciągiem, a lokalnym <xref:System.Threading.EventWaitHandle> zostanie utworzony.</span><span class="sxs-lookup"><span data-stu-id="2586b-136">If `name` is `null` or an empty string, a local <xref:System.Threading.EventWaitHandle> is created.</span></span>  
  
 <span data-ttu-id="2586b-137">Jeśli zdarzenie systemowe o podanej nazwie dla `name` parametr już istnieje, `initialState` parametr jest ignorowany.</span><span class="sxs-lookup"><span data-stu-id="2586b-137">If a system event with the name specified for the `name` parameter already exists, the `initialState` parameter is ignored.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2586b-138">W przypadku używania tego konstruktora dla zdarzenia systemowe nazwanych, określ `false` dla `initialState`.</span><span class="sxs-lookup"><span data-stu-id="2586b-138">When using this constructor for named system events, specify `false` for `initialState`.</span></span> <span data-ttu-id="2586b-139">Ten konstruktor zapewnia sposób określić, czy zdarzenie systemowe nazwane został utworzony, dlatego nie może wprowadzać żadnych założeń dotyczących stanu zdarzenia nazwanego.</span><span class="sxs-lookup"><span data-stu-id="2586b-139">This constructor provides no way to determine whether a named system event was created, so you cannot make any assumptions about the state of the named event.</span></span> <span data-ttu-id="2586b-140">Aby określić, czy zdarzenia nazwanego został utworzony, użyj <xref:System.Threading.EventWaitHandle.%23ctor%28System.Boolean%2CSystem.Threading.EventResetMode%2CSystem.String%2CSystem.Boolean%40%29> konstruktora lub <xref:System.Threading.EventWaitHandle.%23ctor%28System.Boolean%2CSystem.Threading.EventResetMode%2CSystem.String%2CSystem.Boolean%40%2CSystem.Security.AccessControl.EventWaitHandleSecurity%29> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="2586b-140">To determine whether a named event was created, use the <xref:System.Threading.EventWaitHandle.%23ctor%28System.Boolean%2CSystem.Threading.EventResetMode%2CSystem.String%2CSystem.Boolean%40%29> constructor or the <xref:System.Threading.EventWaitHandle.%23ctor%28System.Boolean%2CSystem.Threading.EventResetMode%2CSystem.String%2CSystem.Boolean%40%2CSystem.Security.AccessControl.EventWaitHandleSecurity%29> constructor.</span></span>  
  
 <span data-ttu-id="2586b-141">W przypadku nonsignaled początkowy stan zdarzenia spowoduje zablokowanie wątków, oczekiwania na zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="2586b-141">If the initial state of the event is nonsignaled, threads that wait on the event will block.</span></span> <span data-ttu-id="2586b-142">Jeśli stan początkowy jest sygnalizowane i <xref:System.Threading.EventResetMode.ManualReset> określono flagę `mode`, wątki, które oczekiwania na zdarzenie nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2586b-142">If the initial state is signaled, and the <xref:System.Threading.EventResetMode.ManualReset> flag is specified for `mode`, threads that wait on the event will not block.</span></span> <span data-ttu-id="2586b-143">Jeśli stan początkowy jest sygnalizowane, i `mode` jest <xref:System.Threading.EventResetMode.AutoReset>, pierwszy wątek, który czeka na zdarzenie zostanie wydana natychmiast, po upływie którego zdarzenie spowoduje zresetowanie i spowoduje zablokowanie kolejnych wątków.</span><span class="sxs-lookup"><span data-stu-id="2586b-143">If the initial state is signaled, and `mode` is <xref:System.Threading.EventResetMode.AutoReset>, the first thread that waits on the event will be released immediately, after which the event will reset, and subsequent threads will block.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2586b-144">Wystąpił błąd systemu Win32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-144">A Win32 error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="2586b-145">Zdarzenia nazwanego istnieje i ma kontrolę dostępu, ale użytkownik nie ma <see cref="F:System.Security.AccessControl.EventWaitHandleRights.FullControl" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-145">The named event exists and has access control security, but the user does not have <see cref="F:System.Security.AccessControl.EventWaitHandleRights.FullControl" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">
          <span data-ttu-id="2586b-146">Zdarzenia nazwanego nie można utworzyć, prawdopodobnie ponieważ dojście oczekiwania innego typu ma taką samą nazwę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-146">The named event cannot be created, perhaps because a wait handle of a different type has the same name.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2586b-147">
            <paramref name="name" /> jest dłuższa niż 260 znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-147">
              <paramref name="name" /> is longer than 260 characters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="2586b-148">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-148">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="2586b-149">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-149">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventWaitHandle (bool initialState, System.Threading.EventResetMode mode, string name, out bool createdNew);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool initialState, valuetype System.Threading.EventResetMode mode, string name, [out] bool&amp; createdNew) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandle.#ctor(System.Boolean,System.Threading.EventResetMode,System.String,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialState As Boolean, mode As EventResetMode, name As String, ByRef createdNew As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventWaitHandle(bool initialState, System::Threading::EventResetMode mode, System::String ^ name, [Runtime::InteropServices::Out] bool % createdNew);" />
      <MemberSignature Language="F#" Value="new System.Threading.EventWaitHandle : bool * System.Threading.EventResetMode * string *  -&gt; System.Threading.EventWaitHandle" Usage="new System.Threading.EventWaitHandle (initialState, mode, name, createdNew)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="initialState" Type="System.Boolean" />
        <Parameter Name="mode" Type="System.Threading.EventResetMode" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="createdNew" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="initialState">
          <span data-ttu-id="2586b-150">
            <see langword="true" /> Aby ustawić stan początkowy sygnalizowane, jeśli zdarzenie o nazwie zostanie utworzony w wyniku tego wywołania; <see langword="false" /> ustawić ją na nonsignaled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-150">
              <see langword="true" /> to set the initial state to signaled if the named event is created as a result of this call; <see langword="false" /> to set it to nonsignaled.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="2586b-151">Jedną z <see cref="T:System.Threading.EventResetMode" /> wartości, które określa, czy zdarzenie Resetuje automatycznie lub ręcznie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-151">One of the <see cref="T:System.Threading.EventResetMode" /> values that determines whether the event resets automatically or manually.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="2586b-152">Nazwa zdarzenia synchronizacji całego systemu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-152">The name of a system-wide synchronization event.</span>
          </span>
        </param>
        <param name="createdNew">
          <span data-ttu-id="2586b-153">Po powrocie z tej metody zawiera <see langword="true" /> Jeśli utworzono zdarzenie lokalnego (to znaczy, jeśli <c>nazwa</c> jest <see langword="null" /> ani być pustym ciągiem) lub jeśli utworzono zdarzenie określonego nazwanego systemu; <see langword="false" /> Jeśli zdarzenia określonego systemu o nazwie już istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-153">When this method returns, contains <see langword="true" /> if a local event was created (that is, if <c>name</c> is <see langword="null" /> or an empty string) or if the specified named system event was created; <see langword="false" /> if the specified named system event already existed.</span>
          </span>
          <span data-ttu-id="2586b-154">Ten parametr jest przekazywany niezainicjowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-154">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2586b-155">Inicjuje nowe wystąpienie klasy <see cref="T:System.Threading.EventWaitHandle" /> klasy, określania, czy dojście oczekiwania początkowym zasygnalizowania Jeśli utworzone w wyniku tego wywołania czy Resetuje automatycznie lub ręcznie, nazwę zdarzenia synchronizacji systemu i zmienną wartości logicznej którego wartość po wywołaniu wskazuje, czy zdarzenie systemowe nazwane został utworzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-155">Initializes a new instance of the <see cref="T:System.Threading.EventWaitHandle" /> class, specifying whether the wait handle is initially signaled if created as a result of this call, whether it resets automatically or manually, the name of a system synchronization event, and a Boolean variable whose value after the call indicates whether the named system event was created.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2586b-156">Jeśli zdarzenie systemowe o podanej nazwie dla `name` parametr już istnieje, `initialState` parametr jest ignorowany.</span><span class="sxs-lookup"><span data-stu-id="2586b-156">If a system event with the name specified for the `name` parameter already exists, the `initialState` parameter is ignored.</span></span> <span data-ttu-id="2586b-157">Po wywołaniu tego konstruktora, użyj wartości w zmiennej, określony dla `ref` parametru (`ByRef` parametru w języku Visual Basic)`createdNew` ustalenie, czy zdarzenie systemowe nazwane już istniało, czy też zostało utworzone.</span><span class="sxs-lookup"><span data-stu-id="2586b-157">After calling this constructor, use the value in the variable specified for the `ref` parameter (`ByRef` parameter in Visual Basic)`createdNew` to determine whether the named system event already existed or was created.</span></span>  
  
 <span data-ttu-id="2586b-158">W przypadku nonsignaled początkowy stan zdarzenia spowoduje zablokowanie wątków, oczekiwania na zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="2586b-158">If the initial state of the event is nonsignaled, threads that wait on the event will block.</span></span> <span data-ttu-id="2586b-159">Jeśli stan początkowy jest sygnalizowane i <xref:System.Threading.EventResetMode.ManualReset> określono flagę `mode`, wątki, które oczekiwania na zdarzenie nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2586b-159">If the initial state is signaled, and the <xref:System.Threading.EventResetMode.ManualReset> flag is specified for `mode`, threads that wait on the event will not block.</span></span> <span data-ttu-id="2586b-160">Jeśli stan początkowy jest sygnalizowane, i `mode` jest <xref:System.Threading.EventResetMode.AutoReset>, pierwszy wątek, który czeka na zdarzenie zostanie wydana natychmiast, po upływie którego zdarzenie spowoduje zresetowanie i spowoduje zablokowanie kolejnych wątków.</span><span class="sxs-lookup"><span data-stu-id="2586b-160">If the initial state is signaled, and `mode` is <xref:System.Threading.EventResetMode.AutoReset>, the first thread that waits on the event will be released immediately, after which the event will reset, and subsequent threads will block.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2586b-161">Wystąpił błąd systemu Win32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-161">A Win32 error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="2586b-162">Zdarzenia nazwanego istnieje i ma kontrolę dostępu, ale użytkownik nie ma <see cref="F:System.Security.AccessControl.EventWaitHandleRights.FullControl" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-162">The named event exists and has access control security, but the user does not have <see cref="F:System.Security.AccessControl.EventWaitHandleRights.FullControl" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">
          <span data-ttu-id="2586b-163">Zdarzenia nazwanego nie można utworzyć, prawdopodobnie ponieważ dojście oczekiwania innego typu ma taką samą nazwę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-163">The named event cannot be created, perhaps because a wait handle of a different type has the same name.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2586b-164">
            <paramref name="name" /> jest dłuższa niż 260 znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-164">
              <paramref name="name" /> is longer than 260 characters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="2586b-165">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-165">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="2586b-166">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-166">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventWaitHandle (bool initialState, System.Threading.EventResetMode mode, string name, out bool createdNew, System.Security.AccessControl.EventWaitHandleSecurity eventSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool initialState, valuetype System.Threading.EventResetMode mode, string name, [out] bool&amp; createdNew, class System.Security.AccessControl.EventWaitHandleSecurity eventSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandle.#ctor(System.Boolean,System.Threading.EventResetMode,System.String,System.Boolean@,System.Security.AccessControl.EventWaitHandleSecurity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialState As Boolean, mode As EventResetMode, name As String, ByRef createdNew As Boolean, eventSecurity As EventWaitHandleSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventWaitHandle(bool initialState, System::Threading::EventResetMode mode, System::String ^ name, [Runtime::InteropServices::Out] bool % createdNew, System::Security::AccessControl::EventWaitHandleSecurity ^ eventSecurity);" />
      <MemberSignature Language="F#" Value="new System.Threading.EventWaitHandle : bool * System.Threading.EventResetMode * string *  * System.Security.AccessControl.EventWaitHandleSecurity -&gt; System.Threading.EventWaitHandle" Usage="new System.Threading.EventWaitHandle (initialState, mode, name, createdNew, eventSecurity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="initialState" Type="System.Boolean" />
        <Parameter Name="mode" Type="System.Threading.EventResetMode" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="createdNew" Type="System.Boolean" RefType="out" />
        <Parameter Name="eventSecurity" Type="System.Security.AccessControl.EventWaitHandleSecurity" />
      </Parameters>
      <Docs>
        <param name="initialState">
          <span data-ttu-id="2586b-167">
            <see langword="true" /> Aby ustawić stan początkowy sygnalizowane, jeśli zdarzenie o nazwie zostanie utworzony w wyniku tego wywołania; <see langword="false" /> ustawić ją na nonsignaled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-167">
              <see langword="true" /> to set the initial state to signaled if the named event is created as a result of this call; <see langword="false" /> to set it to nonsignaled.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="2586b-168">Jedną z <see cref="T:System.Threading.EventResetMode" /> wartości, które określa, czy zdarzenie Resetuje automatycznie lub ręcznie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-168">One of the <see cref="T:System.Threading.EventResetMode" /> values that determines whether the event resets automatically or manually.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="2586b-169">Nazwa zdarzenia synchronizacji całego systemu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-169">The name of a system-wide synchronization event.</span>
          </span>
        </param>
        <param name="createdNew">
          <span data-ttu-id="2586b-170">Po powrocie z tej metody zawiera <see langword="true" /> Jeśli utworzono zdarzenie lokalnego (to znaczy, jeśli <c>nazwa</c> jest <see langword="null" /> ani być pustym ciągiem) lub jeśli utworzono zdarzenie określonego nazwanego systemu; <see langword="false" /> Jeśli zdarzenia określonego systemu o nazwie już istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-170">When this method returns, contains <see langword="true" /> if a local event was created (that is, if <c>name</c> is <see langword="null" /> or an empty string) or if the specified named system event was created; <see langword="false" /> if the specified named system event already existed.</span>
          </span>
          <span data-ttu-id="2586b-171">Ten parametr jest przekazywany niezainicjowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-171">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="eventSecurity">
          <span data-ttu-id="2586b-172">
            <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> Obiekt, który reprezentuje kontrolę dostępu mają być stosowane do zdarzeń o nazwie systemu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-172">An <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> object that represents the access control security to be applied to the named system event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2586b-173">Inicjuje nowe wystąpienie klasy <see cref="T:System.Threading.EventWaitHandle" /> klasy, określając, czy dojście oczekiwania początkowym zasygnalizowania Jeśli utworzone w wyniku tego wywołania czy Resetuje automatycznie lub ręcznie, Nazwa zdarzenia synchronizacji systemu, wartość logiczna którego wartość po wywołaniu wskazuje, czy utworzono zdarzenie o nazwie system i kontrolę dostępu, ma zostać zastosowany do zdarzenia nazwanego, jeśli jest on tworzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-173">Initializes a new instance of the <see cref="T:System.Threading.EventWaitHandle" /> class, specifying whether the wait handle is initially signaled if created as a result of this call, whether it resets automatically or manually, the name of a system synchronization event, a Boolean variable whose value after the call indicates whether the named system event was created, and the access control security to be applied to the named event if it is created.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2586b-174">Aby zastosować kontrolę dostępu do zdarzeń o nazwie system, podczas jego tworzenia, uniemożliwiając innym kodem przejmowaniu zdarzenia, należy użyć tego konstruktora.</span><span class="sxs-lookup"><span data-stu-id="2586b-174">Use this constructor to apply access control security to a named system event when it is created, preventing other code from taking control of the event.</span></span>  
  
 <span data-ttu-id="2586b-175">Ten konstruktor inicjuje <xref:System.Threading.EventWaitHandle> obiekt, który reprezentuje zdarzenie systemowe.</span><span class="sxs-lookup"><span data-stu-id="2586b-175">This constructor initializes an <xref:System.Threading.EventWaitHandle> object that represents a system event.</span></span> <span data-ttu-id="2586b-176">Możesz tworzyć wiele <xref:System.Threading.EventWaitHandle> obiektami, które reprezentują te same zdarzenia systemu.</span><span class="sxs-lookup"><span data-stu-id="2586b-176">You can create multiple <xref:System.Threading.EventWaitHandle> objects that represent the same system event.</span></span>  
  
 <span data-ttu-id="2586b-177">Zdarzenie systemowe nie istnieje, zostanie utworzony przy użyciu określonego kontrolę dostępu.</span><span class="sxs-lookup"><span data-stu-id="2586b-177">If the system event does not exist, it is created with the specified access control security.</span></span> <span data-ttu-id="2586b-178">Jeśli zdarzenie występuje, określony kontrolę dostępu jest ignorowany.</span><span class="sxs-lookup"><span data-stu-id="2586b-178">If the event exists, the specified access control security is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2586b-179">Obiekt wywołujący ma pełną kontrolę nad nowo utworzony <xref:System.Threading.EventWaitHandle> nawet wtedy, gdy obiekt `eventSecurity` nie zezwala lub nie powiedzie się pewne prawa dostępu do bieżącego użytkownika.</span><span class="sxs-lookup"><span data-stu-id="2586b-179">The caller has full control over the newly created <xref:System.Threading.EventWaitHandle> object even if `eventSecurity` denies or fails to grant some access rights to the current user.</span></span> <span data-ttu-id="2586b-180">Jednak jeśli bieżący użytkownik próbuje pobrać inny <xref:System.Threading.EventWaitHandle> obiektu, do reprezentowania takie same nazwanego zdarzenia, za pomocą konstruktora lub <xref:System.Threading.EventWaitHandle.OpenExisting%2A> metody Windows zastosowano kontrolę dostępu.</span><span class="sxs-lookup"><span data-stu-id="2586b-180">However, if the current user attempts to get another <xref:System.Threading.EventWaitHandle> object to represent the same named event, using either a constructor or the <xref:System.Threading.EventWaitHandle.OpenExisting%2A> method, Windows access control security is applied.</span></span>  
  
 <span data-ttu-id="2586b-181">Jeśli zdarzenie systemowe o podanej nazwie dla `name` parametr już istnieje, `initialState` parametr jest ignorowany.</span><span class="sxs-lookup"><span data-stu-id="2586b-181">If a system event with the name specified for the `name` parameter already exists, the `initialState` parameter is ignored.</span></span> <span data-ttu-id="2586b-182">Po wywołaniu tego konstruktora, użyj wartości w zmiennej, określony dla `ref` parametru (`ByRef` parametru w języku Visual Basic) `createdNew` ustalenie, czy zdarzenie systemowe nazwane już istniało, czy też zostało utworzone.</span><span class="sxs-lookup"><span data-stu-id="2586b-182">After calling this constructor, use the value in the variable specified for the `ref` parameter (`ByRef` parameter in Visual Basic) `createdNew` to determine whether the named system event already existed or was created.</span></span>  
  
 <span data-ttu-id="2586b-183">W przypadku nonsignaled początkowy stan zdarzenia spowoduje zablokowanie wątków, oczekiwania na zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="2586b-183">If the initial state of the event is nonsignaled, threads that wait on the event will block.</span></span> <span data-ttu-id="2586b-184">Jeśli stan początkowy jest sygnalizowane i <xref:System.Threading.EventResetMode.ManualReset> określono flagę `mode`, wątki, które oczekiwania na zdarzenie nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2586b-184">If the initial state is signaled, and the <xref:System.Threading.EventResetMode.ManualReset> flag is specified for `mode`, threads that wait on the event will not block.</span></span> <span data-ttu-id="2586b-185">Jeśli stan początkowy jest sygnalizowane, i `mode` jest <xref:System.Threading.EventResetMode.AutoReset>, pierwszy wątek, który czeka na zdarzenie zostanie wydana natychmiast, po upływie którego zdarzenie spowoduje zresetowanie i spowoduje zablokowanie kolejnych wątków.</span><span class="sxs-lookup"><span data-stu-id="2586b-185">If the initial state is signaled, and `mode` is <xref:System.Threading.EventResetMode.AutoReset>, the first thread that waits on the event will be released immediately, after which the event will reset, and subsequent threads will block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2586b-186">Poniższy przykład kodu pokazuje zachowanie między procesami zdarzeń o nazwie system z kontrolę dostępu.</span><span class="sxs-lookup"><span data-stu-id="2586b-186">The following code example demonstrates the cross-process behavior of a named system event with access control security.</span></span> <span data-ttu-id="2586b-187">W przykładzie użyto <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29> przeciążenia metody do sprawdzania istnienia zdarzeń o nazwie.</span><span class="sxs-lookup"><span data-stu-id="2586b-187">The example uses the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29> method overload to test for the existence of a named event.</span></span>  
  
 <span data-ttu-id="2586b-188">Jeśli zdarzenie nie istnieje, zostanie utworzony przy użyciu początkowego, własności i kontrolę dostępu, nie zezwala na bieżącemu użytkownikowi prawa do używania zdarzenia, ale daje prawo do odczytu, a zmiana uprawnień do zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="2586b-188">If the event does not exist, it is created with initial ownership and access control security that denies the current user the right to use the event, but grants the right to read and change permissions on the event.</span></span>  
  
 <span data-ttu-id="2586b-189">Po uruchomieniu przykładzie skompilowane z dwóch poleceń systemu windows, drugą kopię spowoduje zgłoszenie wyjątku naruszenie zasad dostępu na wywołanie <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29>.</span><span class="sxs-lookup"><span data-stu-id="2586b-189">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29>.</span></span> <span data-ttu-id="2586b-190">Wyjątek, a w przykładzie użyto <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> przeciążenia metody, aby czekać na zdarzenia przy użyciu uprawnień wymaganych do odczytywania i zmienić uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="2586b-190">The exception is caught, and the example uses the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> method overload to wait on the event with the rights needed to read and change the permissions.</span></span>  
  
 <span data-ttu-id="2586b-191">Po zmianie uprawnienia zdarzenie zostanie otwarty z prawami musieli czekać na nim i wyda sygnał.</span><span class="sxs-lookup"><span data-stu-id="2586b-191">After the permissions are changed, the event is opened with the rights required to wait on it and signal it.</span></span> <span data-ttu-id="2586b-192">Po uruchomieniu przykładzie skompilowane z okna poleceń, trzeci przykład działa przy użyciu nowych uprawnień.</span><span class="sxs-lookup"><span data-stu-id="2586b-192">If you run the compiled example from a third command window, the example runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/CS/source.cs#1)]
 [!code-vb[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2586b-193">Wystąpił błąd systemu Win32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-193">A Win32 error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="2586b-194">Zdarzenia nazwanego istnieje i ma kontrolę dostępu, ale użytkownik nie ma <see cref="F:System.Security.AccessControl.EventWaitHandleRights.FullControl" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-194">The named event exists and has access control security, but the user does not have <see cref="F:System.Security.AccessControl.EventWaitHandleRights.FullControl" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">
          <span data-ttu-id="2586b-195">Zdarzenia nazwanego nie można utworzyć, prawdopodobnie ponieważ dojście oczekiwania innego typu ma taką samą nazwę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-195">The named event cannot be created, perhaps because a wait handle of a different type has the same name.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2586b-196">
            <paramref name="name" /> jest dłuższa niż 260 znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-196">
              <paramref name="name" /> is longer than 260 characters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="2586b-197">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-197">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="2586b-198">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-198">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.EventWaitHandleSecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.EventWaitHandleSecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandle.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As EventWaitHandleSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::EventWaitHandleSecurity ^ GetAccessControl();" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : unit -&gt; System.Security.AccessControl.EventWaitHandleSecurity" Usage="eventWaitHandle.GetAccessControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.EventWaitHandleSecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2586b-199">Pobiera <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> obiekt, który reprezentuje kontrolę dostępu dla zdarzenia o nazwie system reprezentowany przez bieżącą <see cref="T:System.Threading.EventWaitHandle" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-199">Gets an <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> object that represents the access control security for the named system event represented by the current <see cref="T:System.Threading.EventWaitHandle" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2586b-200">
            <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> Obiekt, który reprezentuje kontrolę dostępu dla zdarzeń o nazwie systemu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-200">An <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> object that represents the access control security for the named system event.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2586b-201"><xref:System.Threading.EventWaitHandle.GetAccessControl%2A> Metoda używa następujących kombinacji flag (połączone za pomocą bitowej operacji OR) do wyszukania uprawnienia: <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>, <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>, i <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2586b-201">The <xref:System.Threading.EventWaitHandle.GetAccessControl%2A> method uses the following combination of flags (combined using the bitwise OR operation) to search for permissions: <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>, <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>, and <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2586b-202">Użytkownik musi mieć <xref:System.Security.AccessControl.EventWaitHandleRights.ReadPermissions?displayProperty=nameWithType> praw do wywołania tej metody i zdarzenia muszą została otwarta z <xref:System.Security.AccessControl.EventWaitHandleRights.ReadPermissions?displayProperty=nameWithType> flagi.</span><span class="sxs-lookup"><span data-stu-id="2586b-202">The user must have <xref:System.Security.AccessControl.EventWaitHandleRights.ReadPermissions?displayProperty=nameWithType> rights to call this method, and the event must have been opened with the <xref:System.Security.AccessControl.EventWaitHandleRights.ReadPermissions?displayProperty=nameWithType> flag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2586b-203">Poniższy przykład kodu pokazuje zachowanie między procesami zdarzeń o nazwie system z kontrolę dostępu.</span><span class="sxs-lookup"><span data-stu-id="2586b-203">The following code example demonstrates the cross-process behavior of a named system event with access control security.</span></span> <span data-ttu-id="2586b-204">W przykładzie użyto <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29> przeciążenia metody do sprawdzania istnienia zdarzeń o nazwie.</span><span class="sxs-lookup"><span data-stu-id="2586b-204">The example uses the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29> method overload to test for the existence of a named event.</span></span>  
  
 <span data-ttu-id="2586b-205">Jeśli zdarzenie nie istnieje, zostanie utworzony przy użyciu początkowego, własności i kontrolę dostępu, nie zezwala na bieżącemu użytkownikowi prawa do używania zdarzenia, ale daje prawo do odczytu, a zmiana uprawnień do zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="2586b-205">If the event does not exist, it is created with initial ownership and access control security that denies the current user the right to use the event, but grants the right to read and change permissions on the event.</span></span>  
  
 <span data-ttu-id="2586b-206">Po uruchomieniu przykładzie skompilowane z dwóch poleceń systemu windows, drugą kopię spowoduje zgłoszenie wyjątku naruszenie zasad dostępu na wywołanie <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29>.</span><span class="sxs-lookup"><span data-stu-id="2586b-206">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29>.</span></span> <span data-ttu-id="2586b-207">Wyjątek, a w przykładzie użyto <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> przeciążenia metody, aby czekać na zdarzenia przy użyciu uprawnień wymaganych do odczytywania i zmienić uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="2586b-207">The exception is caught, and the example uses the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> method overload to wait on the event with the rights needed to read and change the permissions.</span></span>  
  
 <span data-ttu-id="2586b-208">Po przeczytaniu uprawnienia, za pomocą <xref:System.Threading.EventWaitHandle.GetAccessControl%2A> metody i zmianie, zdarzenie jest otwierany z prawami musieli czekać na nim i wyda sygnał.</span><span class="sxs-lookup"><span data-stu-id="2586b-208">After the permissions have been read, using the <xref:System.Threading.EventWaitHandle.GetAccessControl%2A> method, and changed, the event is opened with the rights required to wait on it and signal it.</span></span> <span data-ttu-id="2586b-209">Po uruchomieniu przykładzie skompilowane z okna poleceń, trzeci przykład działa przy użyciu nowych uprawnień.</span><span class="sxs-lookup"><span data-stu-id="2586b-209">If you run the compiled example from a third command window, the example runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/CS/source.cs#1)]
 [!code-vb[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="2586b-210">Bieżący <see cref="T:System.Threading.EventWaitHandle" /> obiekt reprezentuje zdarzenie o nazwie system, a użytkownik nie ma <see cref="F:System.Security.AccessControl.EventWaitHandleRights.ReadPermissions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-210">The current <see cref="T:System.Threading.EventWaitHandle" /> object represents a named system event, and the user does not have <see cref="F:System.Security.AccessControl.EventWaitHandleRights.ReadPermissions" />.</span>
          </span>
          <span data-ttu-id="2586b-211">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-211">-or-</span>
          </span>
          <span data-ttu-id="2586b-212">Bieżący <see cref="T:System.Threading.EventWaitHandle" /> obiekt reprezentuje zdarzenie o nazwie system i nie została otwarta z <see cref="F:System.Security.AccessControl.EventWaitHandleRights.ReadPermissions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-212">The current <see cref="T:System.Threading.EventWaitHandle" /> object represents a named system event, and was not opened with <see cref="F:System.Security.AccessControl.EventWaitHandleRights.ReadPermissions" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2586b-213">Nie jest obsługiwane dla Windows 98 lub Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-213">Not supported for Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2586b-214">
            <see cref="M:System.Threading.WaitHandle.Close" /> Wcześniej wywołano metodę w tym <see cref="T:System.Threading.EventWaitHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-214">The <see cref="M:System.Threading.WaitHandle.Close" /> method was previously called on this <see cref="T:System.Threading.EventWaitHandle" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenExisting">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2586b-215">Otwiera to zdarzenie określonego nazwanego synchronizacji, jeśli już istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-215">Opens a specified named synchronization event, if it already exists.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenExisting">
      <MemberSignature Language="C#" Value="public static System.Threading.EventWaitHandle OpenExisting (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.EventWaitHandle OpenExisting(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandle.OpenExisting(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExisting (name As String) As EventWaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::EventWaitHandle ^ OpenExisting(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member OpenExisting : string -&gt; System.Threading.EventWaitHandle" Usage="System.Threading.EventWaitHandle.OpenExisting name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.EventWaitHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="2586b-216">Nazwa zdarzenia synchronizacji systemu, aby otworzyć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-216">The name of the system synchronization event to open.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2586b-217">Zostanie otwarte zdarzenie określonego nazwanego synchronizacji, jeśli już istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-217">Opens the specified named synchronization event, if it already exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2586b-218">Obiekt, który reprezentuje zdarzenie o nazwie system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-218">An  object that represents the named system event.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2586b-219"><xref:System.Threading.EventWaitHandle.OpenExisting%2A> Metoda podejmuje próbę otwarcia zdarzenia określonego nazwanego systemu.</span><span class="sxs-lookup"><span data-stu-id="2586b-219">The <xref:System.Threading.EventWaitHandle.OpenExisting%2A> method tries to open the specified named system event.</span></span> <span data-ttu-id="2586b-220">Jeśli zdarzenie systemowe nie istnieje, ta metoda zgłasza wyjątek zamiast tworzenia zdarzeń systemu.</span><span class="sxs-lookup"><span data-stu-id="2586b-220">If the system event does not exist, this method throws an exception instead of creating the system event.</span></span> <span data-ttu-id="2586b-221">Aby utworzyć zdarzenie systemowe, gdy już nie istnieje, użyj jednej z <xref:System.Threading.EventWaitHandle.%23ctor%2A> konstruktorów, które ma `name` parametru.</span><span class="sxs-lookup"><span data-stu-id="2586b-221">To create the system event when it does not already exist, use one of the <xref:System.Threading.EventWaitHandle.%23ctor%2A> constructors that has a `name` parameter.</span></span>  
  
 <span data-ttu-id="2586b-222">Wiele wywołań tej metody, używanego przez tę samą wartość `name` nie zawsze zwracają takie same <xref:System.Threading.EventWaitHandle> obiektów, nawet jeśli obiekty, które są zwracane reprezentują te same zdarzenia o nazwie system.</span><span class="sxs-lookup"><span data-stu-id="2586b-222">Multiple calls to this method that use the same value for `name` do not necessarily return the same <xref:System.Threading.EventWaitHandle> object, even though the objects that are returned represent the same named system event.</span></span>  
  
 <span data-ttu-id="2586b-223">Tego przeciążenia metody jest równoważne z wywoływaniem <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> przeciążenie metody i określając <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> i <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> praw, połączone za pomocą bitowej operacji OR.</span><span class="sxs-lookup"><span data-stu-id="2586b-223">This method overload is equivalent to calling the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> method overload and specifying <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> and <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> rights, combined by using the bitwise OR operation.</span></span>  
  
 <span data-ttu-id="2586b-224">Określanie <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> Flaga umożliwia wątku w celu oczekiwania na zdarzenie o nazwie system i określając <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> Flaga umożliwia wątków do wywoływania <xref:System.Threading.EventWaitHandle.Set%2A> i <xref:System.Threading.EventWaitHandle.Reset%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2586b-224">Specifying the <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> flag allows a thread to wait on the named system event, and specifying the <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> flag allows a thread to call the <xref:System.Threading.EventWaitHandle.Set%2A> and <xref:System.Threading.EventWaitHandle.Reset%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2586b-225">Poniższy przykład kodu pokazuje zachowanie między procesami zdarzeń o nazwie system z kontrolę dostępu.</span><span class="sxs-lookup"><span data-stu-id="2586b-225">The following code example demonstrates the cross-process behavior of a named system event with access control security.</span></span> <span data-ttu-id="2586b-226">W przykładzie użyto <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29> przeciążenia metody do sprawdzania istnienia zdarzeń o nazwie.</span><span class="sxs-lookup"><span data-stu-id="2586b-226">The example uses the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29> method overload to test for the existence of a named event.</span></span>  
  
 <span data-ttu-id="2586b-227">Jeśli zdarzenie nie istnieje, zostanie utworzony przy użyciu początkowego, własności i kontrolę dostępu, nie zezwala na bieżącemu użytkownikowi prawa do używania zdarzenia, ale daje prawo do odczytu, a zmiana uprawnień do zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="2586b-227">If the event does not exist, it is created with initial ownership and access control security that denies the current user the right to use the event, but grants the right to read and change permissions on the event.</span></span>  
  
 <span data-ttu-id="2586b-228">Po uruchomieniu przykładzie skompilowane z dwóch poleceń systemu windows, drugą kopię spowoduje zgłoszenie wyjątku naruszenie zasad dostępu na wywołanie <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29>.</span><span class="sxs-lookup"><span data-stu-id="2586b-228">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29>.</span></span> <span data-ttu-id="2586b-229">Wyjątek, a w przykładzie użyto <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> przeciążenia metody, aby czekać na zdarzenia przy użyciu uprawnień wymaganych do odczytywania i zmienić uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="2586b-229">The exception is caught, and the example uses the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> method overload to wait on the event with the rights needed to read and change the permissions.</span></span>  
  
 <span data-ttu-id="2586b-230">Po zmianie uprawnienia zdarzenie zostanie otwarty z prawami musieli czekać na nim i wyda sygnał.</span><span class="sxs-lookup"><span data-stu-id="2586b-230">After the permissions are changed, the event is opened with the rights required to wait on it and signal it.</span></span> <span data-ttu-id="2586b-231">Po uruchomieniu przykładzie skompilowane z okna poleceń, trzeci przykład działa przy użyciu nowych uprawnień.</span><span class="sxs-lookup"><span data-stu-id="2586b-231">If you run the compiled example from a third command window, the example runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/CS/source.cs#1)]
 [!code-vb[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2586b-232">
            <paramref name="name" /> jest ciągiem pustym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-232">
              <paramref name="name" /> is an empty string.</span>
          </span>
          <span data-ttu-id="2586b-233">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-233">-or-</span>
          </span>
          <span data-ttu-id="2586b-234">
            <paramref name="name" /> jest dłuższa niż 260 znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-234">
              <paramref name="name" /> is longer than 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2586b-235">
            <paramref name="name" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-235">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">
          <span data-ttu-id="2586b-236">Zdarzenie systemowe o nazwie nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-236">The named system event does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2586b-237">Wystąpił błąd systemu Win32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-237">A Win32 error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="2586b-238">Zdarzenie o nazwie istnieje, ale użytkownik nie ma dostępu zabezpieczeń wymagane do jej używać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-238">The named event exists, but the user does not have the security access required to use it.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="2586b-239">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-239">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="2586b-240">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-240">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="OpenExisting">
      <MemberSignature Language="C#" Value="public static System.Threading.EventWaitHandle OpenExisting (string name, System.Security.AccessControl.EventWaitHandleRights rights);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.EventWaitHandle OpenExisting(string name, valuetype System.Security.AccessControl.EventWaitHandleRights rights) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandle.OpenExisting(System.String,System.Security.AccessControl.EventWaitHandleRights)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExisting (name As String, rights As EventWaitHandleRights) As EventWaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::EventWaitHandle ^ OpenExisting(System::String ^ name, System::Security::AccessControl::EventWaitHandleRights rights);" />
      <MemberSignature Language="F#" Value="static member OpenExisting : string * System.Security.AccessControl.EventWaitHandleRights -&gt; System.Threading.EventWaitHandle" Usage="System.Threading.EventWaitHandle.OpenExisting (name, rights)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.EventWaitHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="rights" Type="System.Security.AccessControl.EventWaitHandleRights" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="2586b-241">Nazwa zdarzenia synchronizacji systemu, aby otworzyć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-241">The name of the system synchronization event to open.</span>
          </span>
        </param>
        <param name="rights">
          <span data-ttu-id="2586b-242">Bitowa kombinacja wartości wyliczenia, które reprezentują dostęp pożądanych zabezpieczeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-242">A bitwise combination of the enumeration values that represent the desired security access.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2586b-243">Otwiera określony o nazwie zdarzenia synchronizacji, jeśli już istnieje, z dostępem do pożądanych zabezpieczeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-243">Opens the specified named synchronization event, if it already exists, with the desired security access.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2586b-244">Obiekt, który reprezentuje zdarzenie o nazwie system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-244">An object that represents the named system event.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2586b-245">`rights` Parametr musi zawierać <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> flagi, aby zezwolić wątków oczekiwania na zdarzenie, a <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> flagi, aby zezwolić wątków do wywoływania <xref:System.Threading.EventWaitHandle.Set%2A> i <xref:System.Threading.EventWaitHandle.Reset%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2586b-245">The `rights` parameter must include the <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> flag to allow threads to wait on the event, and the <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> flag to allow threads to call the <xref:System.Threading.EventWaitHandle.Set%2A> and <xref:System.Threading.EventWaitHandle.Reset%2A> methods.</span></span>  
  
 <span data-ttu-id="2586b-246"><xref:System.Threading.EventWaitHandle.OpenExisting%2A> Metoda podejmuje próbę otwarcia istniejących zdarzeń o nazwie system.</span><span class="sxs-lookup"><span data-stu-id="2586b-246">The <xref:System.Threading.EventWaitHandle.OpenExisting%2A> method tries to open an existing named system event.</span></span> <span data-ttu-id="2586b-247">Jeśli zdarzenie systemowe nie istnieje, ta metoda zgłasza wyjątek zamiast tworzenia zdarzeń systemu.</span><span class="sxs-lookup"><span data-stu-id="2586b-247">If the system event does not exist, this method throws an exception instead of creating the system event.</span></span> <span data-ttu-id="2586b-248">Aby utworzyć zdarzenie systemowe, gdy już nie istnieje, użyj jednej z <xref:System.Threading.EventWaitHandle.%23ctor%2A> konstruktorów, które ma `name` parametru.</span><span class="sxs-lookup"><span data-stu-id="2586b-248">To create the system event when it does not already exist, use one of the <xref:System.Threading.EventWaitHandle.%23ctor%2A> constructors that has a `name` parameter.</span></span>  
  
 <span data-ttu-id="2586b-249">Wiele wywołań tej metody, używanego przez tę samą wartość `name` nie zawsze zwracają takie same <xref:System.Threading.EventWaitHandle> obiektów, nawet jeśli obiekty, które są zwracane reprezentują te same zdarzenia o nazwie system.</span><span class="sxs-lookup"><span data-stu-id="2586b-249">Multiple calls to this method that use the same value for `name` do not necessarily return the same <xref:System.Threading.EventWaitHandle> object, even though the objects that are returned represent the same named system event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2586b-250">Poniższy przykład kodu pokazuje zachowanie między procesami zdarzeń o nazwie system z kontrolę dostępu.</span><span class="sxs-lookup"><span data-stu-id="2586b-250">The following code example demonstrates the cross-process behavior of a named system event with access control security.</span></span> <span data-ttu-id="2586b-251">W przykładzie użyto <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29> przeciążenia metody do sprawdzania istnienia zdarzeń o nazwie.</span><span class="sxs-lookup"><span data-stu-id="2586b-251">The example uses the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29> method overload to test for the existence of a named event.</span></span>  
  
 <span data-ttu-id="2586b-252">Jeśli zdarzenie nie istnieje, zostanie utworzony przy użyciu początkowego, własności i kontrolę dostępu, nie zezwala na bieżącemu użytkownikowi prawa do używania zdarzenia, ale daje prawo do odczytu, a zmiana uprawnień do zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="2586b-252">If the event does not exist, it is created with initial ownership and access control security that denies the current user the right to use the event, but grants the right to read and change permissions on the event.</span></span>  
  
 <span data-ttu-id="2586b-253">Po uruchomieniu przykładzie skompilowane z dwóch poleceń systemu windows, drugą kopię spowoduje zgłoszenie wyjątku naruszenie zasad dostępu na wywołanie <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29>.</span><span class="sxs-lookup"><span data-stu-id="2586b-253">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29>.</span></span> <span data-ttu-id="2586b-254">Wyjątek, a w przykładzie użyto <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> przeciążenia metody, aby czekać na zdarzenia przy użyciu uprawnień wymaganych do odczytywania i zmienić uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="2586b-254">The exception is caught, and the example uses the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> method overload to wait on the event with the rights needed to read and change the permissions.</span></span>  
  
 <span data-ttu-id="2586b-255">Po zmianie uprawnienia zdarzenie zostanie otwarty z prawami musieli czekać na nim i wyda sygnał.</span><span class="sxs-lookup"><span data-stu-id="2586b-255">After the permissions are changed, the event is opened with the rights required to wait on it and signal it.</span></span> <span data-ttu-id="2586b-256">Po uruchomieniu przykładzie skompilowane z okna poleceń, trzeci przykład działa przy użyciu nowych uprawnień.</span><span class="sxs-lookup"><span data-stu-id="2586b-256">If you run the compiled example from a third command window, the example runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/CS/source.cs#1)]
 [!code-vb[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2586b-257">
            <paramref name="name" /> jest ciągiem pustym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-257">
              <paramref name="name" /> is an empty string.</span>
          </span>
          <span data-ttu-id="2586b-258">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-258">-or-</span>
          </span>
          <span data-ttu-id="2586b-259">
            <paramref name="name" /> jest dłuższa niż 260 znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-259">
              <paramref name="name" /> is longer than 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2586b-260">
            <paramref name="name" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-260">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">
          <span data-ttu-id="2586b-261">Zdarzenie systemowe o nazwie nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-261">The named system event does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2586b-262">Wystąpił błąd systemu Win32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-262">A Win32 error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="2586b-263">Zdarzenie o nazwie istnieje, ale użytkownik nie ma dostępu pożądanych zabezpieczeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-263">The named event exists, but the user does not have the desired security access.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="2586b-264">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-264">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="2586b-265">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-265">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public bool Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandle.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Function Reset () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; bool" Usage="eventWaitHandle.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2586b-266">Ustawia stan zdarzenia w celu nonsignaled, powodując wątków zablokować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-266">Sets the state of the event to nonsignaled, causing threads to block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2586b-267">
            <see langword="true" /> Jeśli operacja się powiedzie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-267">
              <see langword="true" /> if the operation succeeds; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2586b-268">
            <see cref="M:System.Threading.WaitHandle.Close" /> Wcześniej wywołano metodę w tym <see cref="T:System.Threading.EventWaitHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-268">The <see cref="M:System.Threading.WaitHandle.Close" /> method was previously called on this <see cref="T:System.Threading.EventWaitHandle" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public bool Set ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Set() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandle.Set" />
      <MemberSignature Language="VB.NET" Value="Public Function Set () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Set();" />
      <MemberSignature Language="F#" Value="member this.Set : unit -&gt; bool" Usage="eventWaitHandle.Set " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2586b-269">Ustawia stan zdarzenia w celu sygnalizowane, dzięki czemu jeden lub więcej wątków oczekujących kontynuować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-269">Sets the state of the event to signaled, allowing one or more waiting threads to proceed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2586b-270">
            <see langword="true" /> Jeśli operacja się powiedzie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-270">
              <see langword="true" /> if the operation succeeds; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2586b-271">Dla <xref:System.Threading.EventWaitHandle> z <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> (w tym <xref:System.Threading.AutoResetEvent>), <xref:System.Threading.EventWaitHandle.Set%2A> metoda zwalnia jednego wątku.</span><span class="sxs-lookup"><span data-stu-id="2586b-271">For an <xref:System.Threading.EventWaitHandle> with <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> (including <xref:System.Threading.AutoResetEvent>), the <xref:System.Threading.EventWaitHandle.Set%2A> method releases a single thread.</span></span> <span data-ttu-id="2586b-272">Jeśli nie istnieją wątki oczekujące, dojście oczekiwania pozostaje sygnałowego, aż wątek próby poczekaj na nim lub do momentu jego <xref:System.Threading.EventWaitHandle.Reset%2A> metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="2586b-272">If there are no waiting threads, the wait handle remains signaled until a thread attempts to wait on it, or until its <xref:System.Threading.EventWaitHandle.Reset%2A> method is called.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2586b-273">Nie ma żadnej gwarancji, każde wywołanie <xref:System.Threading.EventWaitHandle.Set%2A> metoda zwolni wątku z <xref:System.Threading.EventWaitHandle> której tryb resetowania jest <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2586b-273">There is no guarantee that every call to the <xref:System.Threading.EventWaitHandle.Set%2A> method will release a thread from an <xref:System.Threading.EventWaitHandle> whose reset mode is <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2586b-274">Jeśli dwa wywołania są zbyt blisko siebie, tak, aby drugie wywołanie występuje przed wydano wątku, tylko jeden wątek jest zwalniana.</span><span class="sxs-lookup"><span data-stu-id="2586b-274">If two calls are too close together, so that the second call occurs before a thread has been released, only one thread is released.</span></span> <span data-ttu-id="2586b-275">Jest tak, jakby nie nastąpiły drugie wywołanie.</span><span class="sxs-lookup"><span data-stu-id="2586b-275">It is as if the second call did not happen.</span></span> <span data-ttu-id="2586b-276">Ponadto jeśli <xref:System.Threading.EventWaitHandle.Set%2A> jest wywoływana, gdy nie istnieją wątki oczekujące i <xref:System.Threading.EventWaitHandle> już jest sygnalizowane, wywołanie nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="2586b-276">Also, if <xref:System.Threading.EventWaitHandle.Set%2A> is called when there are no threads waiting and the <xref:System.Threading.EventWaitHandle> is already signaled, the call has no effect.</span></span>  
  
 <span data-ttu-id="2586b-277">Dla <xref:System.Threading.EventWaitHandle> z <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> (w tym <xref:System.Threading.ManualResetEvent>), wywoływania <xref:System.Threading.EventWaitHandle.Set%2A> metoda pozostawia dojście oczekiwania w zasygnalizowany stan do momentu jego <xref:System.Threading.EventWaitHandle.Reset%2A> metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="2586b-277">For an <xref:System.Threading.EventWaitHandle> with <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> (including <xref:System.Threading.ManualResetEvent>), calling the <xref:System.Threading.EventWaitHandle.Set%2A> method leaves the wait handle in a signaled state until its <xref:System.Threading.EventWaitHandle.Reset%2A> method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2586b-278">Poniższy przykład kodu wykorzystuje <xref:System.Threading.WaitHandle.SignalAndWait%28System.Threading.WaitHandle%2CSystem.Threading.WaitHandle%29> przeciążenia metody, aby zezwolić na wątek główny sygnał zablokowany wątek i poczekać, aż wątek kończy zadanie.</span><span class="sxs-lookup"><span data-stu-id="2586b-278">The following code example uses the <xref:System.Threading.WaitHandle.SignalAndWait%28System.Threading.WaitHandle%2CSystem.Threading.WaitHandle%29> method overload to allow the main thread to signal a blocked thread and then wait until the thread finishes a task.</span></span>  
  
 <span data-ttu-id="2586b-279">W przykładzie rozpoczyna się pięć wątków i umożliwia ich blokowanie na <xref:System.Threading.EventWaitHandle> utworzone za pomocą <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> Flaga, a następnie czas jeden wątek wersjach użytkownik naciśnie klawisz ENTER.</span><span class="sxs-lookup"><span data-stu-id="2586b-279">The example starts five threads and allows them to block on an <xref:System.Threading.EventWaitHandle> created with the <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> flag, then releases one thread each time the user presses the ENTER key.</span></span> <span data-ttu-id="2586b-280">Przykład następnie kolejkuje innego pięć wątków i zwalnia je za pomocą <xref:System.Threading.EventWaitHandle> utworzone za pomocą <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> flagi.</span><span class="sxs-lookup"><span data-stu-id="2586b-280">The example then queues another five threads and releases them all using an <xref:System.Threading.EventWaitHandle> created with the <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> flag.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/CS/source.cs#1)]
 [!code-vb[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2586b-281">
            <see cref="M:System.Threading.WaitHandle.Close" /> Wcześniej wywołano metodę w tym <see cref="T:System.Threading.EventWaitHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-281">The <see cref="M:System.Threading.WaitHandle.Close" /> method was previously called on this <see cref="T:System.Threading.EventWaitHandle" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.Security.AccessControl.EventWaitHandleSecurity eventSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.Security.AccessControl.EventWaitHandleSecurity eventSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandle.SetAccessControl(System.Security.AccessControl.EventWaitHandleSecurity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessControl (eventSecurity As EventWaitHandleSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::Security::AccessControl::EventWaitHandleSecurity ^ eventSecurity);" />
      <MemberSignature Language="F#" Value="member this.SetAccessControl : System.Security.AccessControl.EventWaitHandleSecurity -&gt; unit" Usage="eventWaitHandle.SetAccessControl eventSecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSecurity" Type="System.Security.AccessControl.EventWaitHandleSecurity" />
      </Parameters>
      <Docs>
        <param name="eventSecurity">
          <span data-ttu-id="2586b-282">
            <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> Obiekt, który reprezentuje kontrolę dostępu mają być stosowane do zdarzeń o nazwie systemu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-282">An <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> object that represents the access control security to be applied to the named system event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2586b-283">Ustawia kontrolę dostępu dla zdarzenia o nazwie system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-283">Sets the access control security for a named system event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2586b-284">Użytkownik musi mieć <xref:System.Security.AccessControl.EventWaitHandleRights.ChangePermissions?displayProperty=nameWithType> praw do wywołania tej metody i zdarzenia muszą została otwarta z <xref:System.Security.AccessControl.EventWaitHandleRights.ChangePermissions?displayProperty=nameWithType> flagi.</span><span class="sxs-lookup"><span data-stu-id="2586b-284">The user must have <xref:System.Security.AccessControl.EventWaitHandleRights.ChangePermissions?displayProperty=nameWithType> rights to call this method, and the event must have been opened with the <xref:System.Security.AccessControl.EventWaitHandleRights.ChangePermissions?displayProperty=nameWithType> flag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2586b-285">Poniższy przykład kodu pokazuje zachowanie między procesami zdarzeń o nazwie system z kontrolę dostępu.</span><span class="sxs-lookup"><span data-stu-id="2586b-285">The following code example demonstrates the cross-process behavior of a named system event with access control security.</span></span> <span data-ttu-id="2586b-286">W przykładzie użyto <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29> przeciążenia metody do sprawdzania istnienia zdarzeń o nazwie.</span><span class="sxs-lookup"><span data-stu-id="2586b-286">The example uses the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29> method overload to test for the existence of a named event.</span></span>  
  
 <span data-ttu-id="2586b-287">Jeśli zdarzenie nie istnieje, zostanie utworzony przy użyciu początkowego, własności i kontrolę dostępu, nie zezwala na bieżącemu użytkownikowi prawa do używania zdarzenia, ale daje prawo do odczytu, a zmiana uprawnień do zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="2586b-287">If the event does not exist, it is created with initial ownership and access control security that denies the current user the right to use the event, but grants the right to read and change permissions on the event.</span></span>  
  
 <span data-ttu-id="2586b-288">Po uruchomieniu przykładzie skompilowane z dwóch poleceń systemu windows, drugą kopię spowoduje zgłoszenie wyjątku naruszenie zasad dostępu na wywołanie <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29>.</span><span class="sxs-lookup"><span data-stu-id="2586b-288">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29>.</span></span> <span data-ttu-id="2586b-289">Wyjątek, a w przykładzie użyto <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> przeciążenia metody, aby czekać na zdarzenia przy użyciu uprawnień wymaganych do odczytywania i zmienić uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="2586b-289">The exception is caught, and the example uses the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> method overload to wait on the event with the rights needed to read and change the permissions.</span></span>  
  
 <span data-ttu-id="2586b-290">Po zmianie uprawnienia, za pomocą <xref:System.Threading.EventWaitHandle.SetAccessControl%2A> metody i zdarzenia jest otwierany z prawami musieli czekać na nim i wyda sygnał.</span><span class="sxs-lookup"><span data-stu-id="2586b-290">After the permissions are changed, using the <xref:System.Threading.EventWaitHandle.SetAccessControl%2A> method, the event is opened with the rights required to wait on it and signal it.</span></span> <span data-ttu-id="2586b-291">Po uruchomieniu przykładzie skompilowane z okna poleceń, trzeci przykład działa przy użyciu nowych uprawnień.</span><span class="sxs-lookup"><span data-stu-id="2586b-291">If you run the compiled example from a third command window, the example runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/CS/source.cs#1)]
 [!code-vb[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2586b-292">
            <paramref name="eventSecurity" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-292">
              <paramref name="eventSecurity" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="2586b-293">Użytkownik nie ma <see cref="F:System.Security.AccessControl.EventWaitHandleRights.ChangePermissions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-293">The user does not have <see cref="F:System.Security.AccessControl.EventWaitHandleRights.ChangePermissions" />.</span>
          </span>
          <span data-ttu-id="2586b-294">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-294">-or-</span>
          </span>
          <span data-ttu-id="2586b-295">Zdarzenie nie zostało otwarte z <see cref="F:System.Security.AccessControl.EventWaitHandleRights.ChangePermissions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-295">The event was not opened with <see cref="F:System.Security.AccessControl.EventWaitHandleRights.ChangePermissions" />.</span>
          </span>
        </exception>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="2586b-296">Bieżący <see cref="T:System.Threading.EventWaitHandle" /> obiekt nie reprezentuje zdarzenia systemowe nazwanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-296">The current <see cref="T:System.Threading.EventWaitHandle" /> object does not represent a named system event.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2586b-297">
            <see cref="M:System.Threading.WaitHandle.Close" /> Wcześniej wywołano metodę w tym <see cref="T:System.Threading.EventWaitHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-297">The <see cref="M:System.Threading.WaitHandle.Close" /> method was previously called on this <see cref="T:System.Threading.EventWaitHandle" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryOpenExisting">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2586b-298">Otwiera to zdarzenie określonego nazwanego synchronizacji, jeśli już istnieje i zwraca wartość wskazującą, czy operacja zakończyła się pomyślnie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-298">Opens a specified named synchronization event, if it already exists, and returns a value that indicates whether the operation succeeded.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryOpenExisting">
      <MemberSignature Language="C#" Value="public static bool TryOpenExisting (string name, out System.Threading.EventWaitHandle result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryOpenExisting(string name, [out] class System.Threading.EventWaitHandle&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandle.TryOpenExisting(System.String,System.Threading.EventWaitHandle@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryOpenExisting (name As String, ByRef result As EventWaitHandle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryOpenExisting(System::String ^ name, [Runtime::InteropServices::Out] System::Threading::EventWaitHandle ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryOpenExisting : string *  -&gt; bool" Usage="System.Threading.EventWaitHandle.TryOpenExisting (name, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="result" Type="System.Threading.EventWaitHandle" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="2586b-299">Nazwa zdarzenia synchronizacji systemu, aby otworzyć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-299">The name of the system synchronization event to open.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="2586b-300">Po powrocie z tej metody zawiera <see cref="T:System.Threading.EventWaitHandle" /> obiekt, który reprezentuje zdarzenie o nazwie synchronizacji, jeśli wywołanie zakończyło się pomyślnie, lub <see langword="null" /> Jeśli wywołanie nie powiodło się.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-300">When this method returns, contains a <see cref="T:System.Threading.EventWaitHandle" /> object that represents the named synchronization event if the call succeeded, or <see langword="null" /> if the call failed.</span>
          </span>
          <span data-ttu-id="2586b-301">Ten parametr jest traktowany jako niezainicjowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-301">This parameter is treated as uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2586b-302">Zostanie otwarte zdarzenie określonego nazwanego synchronizacji, jeśli już istnieje i zwraca wartość wskazującą, czy operacja się powiedzie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-302">Opens the specified named synchronization event, if it already exists, and returns a value that indicates whether the operation succeeded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2586b-303">
            <see langword="true" /> Jeśli zdarzenie o nazwie synchronizacji został otwarty pomyślnie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-303">
              <see langword="true" /> if the named synchronization event was opened successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2586b-304">Jeśli zdarzenia synchronizacji o nazwie nie istnieje, ta metoda nie powoduje utworzenia go.</span><span class="sxs-lookup"><span data-stu-id="2586b-304">If the named synchronization event does not exist, this method does not create it.</span></span> <span data-ttu-id="2586b-305">Aby utworzyć zdarzenie systemowe, gdy już nie istnieje, użyj jednej z <xref:System.Threading.EventWaitHandle.%23ctor%2A> konstruktorów, które ma `name` parametru.</span><span class="sxs-lookup"><span data-stu-id="2586b-305">To create the system event when it does not already exist, use one of the <xref:System.Threading.EventWaitHandle.%23ctor%2A> constructors that has a `name` parameter.</span></span>  
  
 <span data-ttu-id="2586b-306">Jeśli masz pewności, czy zdarzenia synchronizacji o nazwie istnieje, użyj tego przeciążenia metody, zamiast <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29> przeciążenia metody, która zgłasza wyjątek, jeśli zdarzenie synchronizacji nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="2586b-306">If you are uncertain whether a named synchronization event exists, use this method overload instead of the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29> method overload, which throws an exception if the synchronization event does not exist.</span></span>  
  
 <span data-ttu-id="2586b-307">Tego przeciążenia metody jest równoważne z wywoływaniem <xref:System.Threading.EventWaitHandle.TryOpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%2CSystem.Threading.EventWaitHandle%40%29> przeciążenie metody i określając <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> i <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> praw, połączone za pomocą bitowej operacji OR.</span><span class="sxs-lookup"><span data-stu-id="2586b-307">This method overload is equivalent to calling the <xref:System.Threading.EventWaitHandle.TryOpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%2CSystem.Threading.EventWaitHandle%40%29> method overload and specifying <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> and <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> rights, combined by using the bitwise OR operation.</span></span> <span data-ttu-id="2586b-308">Określanie <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> Flaga umożliwia wątku w celu oczekiwania na zdarzenie o nazwie system i określając <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> Flaga umożliwia wątków do wywoływania <xref:System.Threading.EventWaitHandle.Set%2A> i <xref:System.Threading.EventWaitHandle.Reset%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2586b-308">Specifying the <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> flag allows a thread to wait on the named system event, and specifying the <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> flag allows a thread to call the <xref:System.Threading.EventWaitHandle.Set%2A> and <xref:System.Threading.EventWaitHandle.Reset%2A> methods.</span></span>  
  
 <span data-ttu-id="2586b-309">Wiele wywołań tej metody, używanego przez tę samą wartość `name` nie zawsze zwracają takie same <xref:System.Threading.EventWaitHandle> obiektów, nawet jeśli obiekty, które są zwracane reprezentują te same zdarzenia o nazwie system.</span><span class="sxs-lookup"><span data-stu-id="2586b-309">Multiple calls to this method that use the same value for `name` do not necessarily return the same <xref:System.Threading.EventWaitHandle> object, even though the objects that are returned represent the same named system event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2586b-310">
            <paramref name="name" /> jest ciągiem pustym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-310">
              <paramref name="name" /> is an empty string.</span>
          </span>
          <span data-ttu-id="2586b-311">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-311">-or-</span>
          </span>
          <span data-ttu-id="2586b-312">
            <paramref name="name" /> jest dłuższa niż 260 znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-312">
              <paramref name="name" /> is longer than 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2586b-313">
            <paramref name="name" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-313">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2586b-314">Wystąpił błąd systemu Win32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-314">A Win32 error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="2586b-315">Zdarzenie o nazwie istnieje, ale użytkownik nie ma dostępu pożądanych zabezpieczeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-315">The named event exists, but the user does not have the desired security access.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="2586b-316">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-316">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="2586b-317">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-317">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="TryOpenExisting">
      <MemberSignature Language="C#" Value="public static bool TryOpenExisting (string name, System.Security.AccessControl.EventWaitHandleRights rights, out System.Threading.EventWaitHandle result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryOpenExisting(string name, valuetype System.Security.AccessControl.EventWaitHandleRights rights, [out] class System.Threading.EventWaitHandle&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandle.TryOpenExisting(System.String,System.Security.AccessControl.EventWaitHandleRights,System.Threading.EventWaitHandle@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryOpenExisting (name As String, rights As EventWaitHandleRights, ByRef result As EventWaitHandle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryOpenExisting(System::String ^ name, System::Security::AccessControl::EventWaitHandleRights rights, [Runtime::InteropServices::Out] System::Threading::EventWaitHandle ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryOpenExisting : string * System.Security.AccessControl.EventWaitHandleRights *  -&gt; bool" Usage="System.Threading.EventWaitHandle.TryOpenExisting (name, rights, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="rights" Type="System.Security.AccessControl.EventWaitHandleRights" />
        <Parameter Name="result" Type="System.Threading.EventWaitHandle" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="2586b-318">Nazwa zdarzenia synchronizacji systemu, aby otworzyć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-318">The name of the system synchronization event to open.</span>
          </span>
        </param>
        <param name="rights">
          <span data-ttu-id="2586b-319">Bitowa kombinacja wartości wyliczenia, które reprezentują dostęp pożądanych zabezpieczeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-319">A bitwise combination of the enumeration values that represent the desired security access.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="2586b-320">Po powrocie z tej metody zawiera <see cref="T:System.Threading.EventWaitHandle" /> obiekt, który reprezentuje zdarzenie o nazwie synchronizacji, jeśli wywołanie zakończyło się pomyślnie, lub <see langword="null" /> Jeśli wywołanie nie powiodło się.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-320">When this method returns, contains a <see cref="T:System.Threading.EventWaitHandle" /> object that represents the named synchronization event if the call succeeded, or <see langword="null" /> if the call failed.</span>
          </span>
          <span data-ttu-id="2586b-321">Ten parametr jest traktowany jako niezainicjowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-321">This parameter is treated as uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2586b-322">Otwiera zdarzenie określonego nazwanego synchronizacji, jeśli już istnieje z dostępem do pożądanych zabezpieczeń i zwraca wartość wskazującą, czy operacja zakończyła się pomyślnie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-322">Opens the specified named synchronization event, if it already exists, with the desired security access, and returns a value that indicates whether the operation succeeded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2586b-323">
            <see langword="true" /> Jeśli zdarzenie o nazwie synchronizacji został otwarty pomyślnie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-323">
              <see langword="true" /> if the named synchronization event was opened successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2586b-324">Jeśli zdarzenia synchronizacji o nazwie nie istnieje, ta metoda nie powoduje utworzenia go.</span><span class="sxs-lookup"><span data-stu-id="2586b-324">If the named synchronization event does not exist, this method does not create it.</span></span> <span data-ttu-id="2586b-325">Aby utworzyć zdarzenie systemowe, gdy już nie istnieje, użyj jednej z <xref:System.Threading.EventWaitHandle.%23ctor%2A> konstruktorów, które ma `name` parametru.</span><span class="sxs-lookup"><span data-stu-id="2586b-325">To create the system event when it does not already exist, use one of the <xref:System.Threading.EventWaitHandle.%23ctor%2A> constructors that has a `name` parameter.</span></span>  
  
 <span data-ttu-id="2586b-326">Jeśli masz pewności, czy zdarzenia synchronizacji o nazwie istnieje, użyj tego przeciążenia metody, zamiast <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> przeciążenia metody, która zgłasza wyjątek, jeśli zdarzenie synchronizacji nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="2586b-326">If you are uncertain whether a named synchronization event exists, use this method overload instead of the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> method overload, which throws an exception if the synchronization event does not exist.</span></span>  
  
 <span data-ttu-id="2586b-327">`rights` Parametr musi zawierać <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> flagi, aby zezwolić wątków oczekiwania na zdarzenie, a <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> flagi, aby zezwolić wątków do wywoływania <xref:System.Threading.EventWaitHandle.Set%2A> i <xref:System.Threading.EventWaitHandle.Reset%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2586b-327">The `rights` parameter must include the <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> flag to allow threads to wait on the event, and the <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> flag to allow threads to call the <xref:System.Threading.EventWaitHandle.Set%2A> and <xref:System.Threading.EventWaitHandle.Reset%2A> methods.</span></span>  
  
 <span data-ttu-id="2586b-328">Wiele wywołań tej metody, używanego przez tę samą wartość `name` nie zawsze zwracają takie same <xref:System.Threading.EventWaitHandle> obiektów, nawet jeśli obiekty, które są zwracane reprezentują te same zdarzenia o nazwie system.</span><span class="sxs-lookup"><span data-stu-id="2586b-328">Multiple calls to this method that use the same value for `name` do not necessarily return the same <xref:System.Threading.EventWaitHandle> object, even though the objects that are returned represent the same named system event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2586b-329">
            <paramref name="name" /> jest ciągiem pustym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-329">
              <paramref name="name" /> is an empty string.</span>
          </span>
          <span data-ttu-id="2586b-330">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-330">-or-</span>
          </span>
          <span data-ttu-id="2586b-331">
            <paramref name="name" /> jest dłuższa niż 260 znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-331">
              <paramref name="name" /> is longer than 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2586b-332">
            <paramref name="name" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-332">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2586b-333">Wystąpił błąd systemu Win32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-333">A Win32 error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="2586b-334">Zdarzenie o nazwie istnieje, ale użytkownik nie ma dostępu pożądanych zabezpieczeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-334">The named event exists, but the user does not have the desired security access.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="2586b-335">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-335">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="2586b-336">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2586b-336">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>