<Type Name="EventWaitHandle" FullName="System.Threading.EventWaitHandle">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fc1d0f39e32f0e1f04f469845918aa4cdb230b30" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69229528" /></Metadata><TypeSignature Language="C#" Value="public class EventWaitHandle : System.Threading.WaitHandle" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventWaitHandle extends System.Threading.WaitHandle" />
  <TypeSignature Language="DocId" Value="T:System.Threading.EventWaitHandle" />
  <TypeSignature Language="VB.NET" Value="Public Class EventWaitHandle&#xA;Inherits WaitHandle" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventWaitHandle : System::Threading::WaitHandle" />
  <TypeSignature Language="F#" Value="type EventWaitHandle = class&#xA;    inherit WaitHandle" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Threading.WaitHandle</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="57122-101">Reprezentuje zdarzenie synchronizacji wątku.</span><span class="sxs-lookup"><span data-stu-id="57122-101">Represents a thread synchronization event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57122-102"><xref:System.Threading.EventWaitHandle> Klasa pozwala wątkom komunikować się ze sobą przez sygnalizowanie.</span><span class="sxs-lookup"><span data-stu-id="57122-102">The <xref:System.Threading.EventWaitHandle> class allows threads to communicate with each other by signaling.</span></span> <span data-ttu-id="57122-103">Zwykle co najmniej jeden wątek jest <xref:System.Threading.EventWaitHandle> blokowany na bloku, dopóki nie zostanie odblokowany wątku <xref:System.Threading.EventWaitHandle.Set%2A> , zwalniając jeden lub więcej zablokowanych wątków.</span><span class="sxs-lookup"><span data-stu-id="57122-103">Typically, one or more threads block on an <xref:System.Threading.EventWaitHandle> until an unblocked thread calls the <xref:System.Threading.EventWaitHandle.Set%2A> method, releasing one or more of the blocked threads.</span></span> <span data-ttu-id="57122-104">Wątek może sygnalizować <xref:System.Threading.EventWaitHandle> , a następnie blokować na nim, `static` wywołując metodę (`Shared` w Visual Basic) <xref:System.Threading.WaitHandle.SignalAndWait%2A?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="57122-104">A thread can signal an <xref:System.Threading.EventWaitHandle> and then block on it, by calling the `static` (`Shared` in Visual Basic) <xref:System.Threading.WaitHandle.SignalAndWait%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="57122-105"><xref:System.Threading.EventWaitHandle> Klasa zapewnia dostęp do nazwanych zdarzeń synchronizacji systemu.</span><span class="sxs-lookup"><span data-stu-id="57122-105">The <xref:System.Threading.EventWaitHandle> class provides access to named system synchronization events.</span></span>  
  
 <span data-ttu-id="57122-106">Zachowanie <xref:System.Threading.EventWaitHandle> , które zostało zasygnalizowane, zależy od jego trybu resetowania.</span><span class="sxs-lookup"><span data-stu-id="57122-106">The behavior of an <xref:System.Threading.EventWaitHandle> that has been signaled depends on its reset mode.</span></span> <span data-ttu-id="57122-107"><xref:System.Threading.EventWaitHandle> Utworzony<xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> z flagą resetuje się automatycznie po zasygnalizowaniu, po zwolnieniu pojedynczego wątku oczekującego.</span><span class="sxs-lookup"><span data-stu-id="57122-107">An <xref:System.Threading.EventWaitHandle> created with the <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> flag resets automatically when signaled, after releasing a single waiting thread.</span></span> <span data-ttu-id="57122-108">Element <xref:System.Threading.EventWaitHandle> utworzony <xref:System.Threading.EventWaitHandle.Reset%2A> przy użyciu flagi pozostaje zasygnalizowani do momentu wywołania metody. <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="57122-108">An <xref:System.Threading.EventWaitHandle> created with the <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> flag remains signaled until its <xref:System.Threading.EventWaitHandle.Reset%2A> method is called.</span></span>  
  
 <span data-ttu-id="57122-109">Zdarzenia automatycznego resetowania zapewniają wyłączny dostęp do zasobu.</span><span class="sxs-lookup"><span data-stu-id="57122-109">Automatic reset events provide exclusive access to a resource.</span></span> <span data-ttu-id="57122-110">Jeśli automatyczne resetowanie zostanie sygnalizowane, gdy żaden wątek nie oczekuje, pozostaje zasygnalizowani do momentu, gdy wątki spróbuje go zaczekać.</span><span class="sxs-lookup"><span data-stu-id="57122-110">If an automatic reset event is signaled when no threads are waiting, it remains signaled until a thread attempts to wait on it.</span></span> <span data-ttu-id="57122-111">Zdarzenie zwalnia wątek i natychmiast resetuje, blokując kolejne wątki.</span><span class="sxs-lookup"><span data-stu-id="57122-111">The event releases the thread and immediately resets, blocking subsequent threads.</span></span>  
  
 <span data-ttu-id="57122-112">Zdarzenia resetowania ręcznego są takie same jak bramy.</span><span class="sxs-lookup"><span data-stu-id="57122-112">Manual reset events are like gates.</span></span> <span data-ttu-id="57122-113">Gdy zdarzenie nie jest sygnalizowane, wątki, które czekają na niego, zostaną zablokowane.</span><span class="sxs-lookup"><span data-stu-id="57122-113">When the event is not signaled, threads that wait on it will block.</span></span> <span data-ttu-id="57122-114">Po zasygnalizowaniu zdarzenia wszystkie oczekujące wątki są wyłączane, a zdarzenie pozostaje sygnalizowane (to oznacza, że kolejne oczekiwania nie będą blokowane) do momentu <xref:System.Threading.EventWaitHandle.Reset%2A> wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="57122-114">When the event is signaled, all waiting threads are released, and the event remains signaled (that is, subsequent waits do not block) until its <xref:System.Threading.EventWaitHandle.Reset%2A> method is called.</span></span> <span data-ttu-id="57122-115">Zdarzenia resetowania ręcznego są przydatne, gdy jeden wątek musi wykonać działanie, aby można było przejść do innych wątków.</span><span class="sxs-lookup"><span data-stu-id="57122-115">Manual reset events are useful when one thread must complete an activity before other threads can proceed.</span></span>  
  
 <span data-ttu-id="57122-116"><xref:System.Threading.EventWaitHandle>obiekty mogą być używane `static`z (`Shared` w Visual Basic) <xref:System.Threading.WaitHandle.WaitAll%2A?displayProperty=nameWithType> i <xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=nameWithType> metodami.</span><span class="sxs-lookup"><span data-stu-id="57122-116"><xref:System.Threading.EventWaitHandle> objects can be used with the `static`(`Shared` in Visual Basic) <xref:System.Threading.WaitHandle.WaitAll%2A?displayProperty=nameWithType> and <xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="57122-117">Aby uzyskać więcej informacji, zobacz [interakcja wątku lub](~/docs/standard/threading/overview-of-synchronization-primitives.md#thread-interaction-or-signaling) sekcja Sygnalizowanie w artykule [Omówienie elementów pierwotnych synchronizacji](~/docs/standard/threading/overview-of-synchronization-primitives.md) .</span><span class="sxs-lookup"><span data-stu-id="57122-117">For more information, see the [Thread interaction, or signaling](~/docs/standard/threading/overview-of-synchronization-primitives.md#thread-interaction-or-signaling) section of the [Overview of synchronization primitives](~/docs/standard/threading/overview-of-synchronization-primitives.md) article.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57122-118">Poniższy przykład kodu używa przeciążenia metody <xref:System.Threading.WaitHandle.SignalAndWait%28System.Threading.WaitHandle%2CSystem.Threading.WaitHandle%29> , aby umożliwić głównemu wątkowi sygnalizowanie zablokowanego wątku, a następnie zaczekać, aż wątek zakończy zadanie.</span><span class="sxs-lookup"><span data-stu-id="57122-118">The following code example uses the <xref:System.Threading.WaitHandle.SignalAndWait%28System.Threading.WaitHandle%2CSystem.Threading.WaitHandle%29> method overload to allow the main thread to signal a blocked thread and then wait until the thread finishes a task.</span></span>  
  
 <span data-ttu-id="57122-119">Przykład rozpoczyna pięć wątków i umożliwia ich zablokowanie przy <xref:System.Threading.EventWaitHandle> <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> użyciu flagi, a następnie zwalnia jeden wątek za każdym razem, gdy użytkownik naciśnie klawisz ENTER.</span><span class="sxs-lookup"><span data-stu-id="57122-119">The example starts five threads and allows them to block on an <xref:System.Threading.EventWaitHandle> created with the <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> flag, then releases one thread each time the user presses the ENTER key.</span></span> <span data-ttu-id="57122-120">W tym przykładzie kolejka będzie kolejkować kolejne pięć wątków i zwalnia <xref:System.Threading.EventWaitHandle> je wszystkie przy <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> użyciu flagi utworzony z flagą.</span><span class="sxs-lookup"><span data-stu-id="57122-120">The example then queues another five threads and releases them all using an <xref:System.Threading.EventWaitHandle> created with the <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> flag.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/CS/source.cs#1)]
 [!code-vb[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="57122-121">Ten typ jest bezpieczny wątkowo.</span><span class="sxs-lookup"><span data-stu-id="57122-121">This type is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.Threading.WaitHandle" />
    <altmember cref="T:System.Threading.AutoResetEvent" />
    <altmember cref="T:System.Threading.ManualResetEvent" />
    <related type="Article" href="~/docs/standard/threading/index.md"><span data-ttu-id="57122-122">Zarządzana wątkowość</span><span class="sxs-lookup"><span data-stu-id="57122-122">Managed Threading</span></span></related>
    <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md"><span data-ttu-id="57122-123">Przegląd elementów podstawowych synchronizacji</span><span class="sxs-lookup"><span data-stu-id="57122-123">Overview of synchronization primitives</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="57122-124">Inicjuje nowe wystąpienie klasy <see cref="T:System.Threading.EventWaitHandle" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="57122-124">Initializes a new instance of the <see cref="T:System.Threading.EventWaitHandle" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventWaitHandle (bool initialState, System.Threading.EventResetMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool initialState, valuetype System.Threading.EventResetMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandle.#ctor(System.Boolean,System.Threading.EventResetMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialState As Boolean, mode As EventResetMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventWaitHandle(bool initialState, System::Threading::EventResetMode mode);" />
      <MemberSignature Language="F#" Value="new System.Threading.EventWaitHandle : bool * System.Threading.EventResetMode -&gt; System.Threading.EventWaitHandle" Usage="new System.Threading.EventWaitHandle (initialState, mode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="initialState" Type="System.Boolean" />
        <Parameter Name="mode" Type="System.Threading.EventResetMode" />
      </Parameters>
      <Docs>
        <param name="initialState"><span data-ttu-id="57122-125"><see langword="true" />Aby ustawić stan początkowy na zasygnalizowanie; <see langword="false" /> , aby ustawić na Niesygnalizowane.</span><span class="sxs-lookup"><span data-stu-id="57122-125"><see langword="true" /> to set the initial state to signaled; <see langword="false" /> to set it to nonsignaled.</span></span></param>
        <param name="mode"><span data-ttu-id="57122-126">Jedna z <see cref="T:System.Threading.EventResetMode" /> wartości, która określa, czy zdarzenie jest resetowane automatycznie czy ręcznie.</span><span class="sxs-lookup"><span data-stu-id="57122-126">One of the <see cref="T:System.Threading.EventResetMode" /> values that determines whether the event resets automatically or manually.</span></span></param>
        <summary><span data-ttu-id="57122-127">Inicjuje nowe wystąpienie <see cref="T:System.Threading.EventWaitHandle" /> klasy, określając, czy dojście oczekiwania jest początkowo sygnalizowane i czy jest resetowane automatycznie czy ręcznie.</span><span class="sxs-lookup"><span data-stu-id="57122-127">Initializes a new instance of the <see cref="T:System.Threading.EventWaitHandle" /> class, specifying whether the wait handle is initially signaled, and whether it resets automatically or manually.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57122-128">Jeśli początkowy stan zdarzenia jest Niesygnalizowane, wątki oczekujące na zdarzenie zostaną zablokowane.</span><span class="sxs-lookup"><span data-stu-id="57122-128">If the initial state of the event is nonsignaled, threads that wait on the event will block.</span></span> <span data-ttu-id="57122-129">Jeśli stan początkowy jest sygnalizowane, a <xref:System.Threading.EventResetMode.ManualReset> flaga jest określona dla `mode`, wątki oczekujące na zdarzenie nie będą blokowane.</span><span class="sxs-lookup"><span data-stu-id="57122-129">If the initial state is signaled, and the <xref:System.Threading.EventResetMode.ManualReset> flag is specified for `mode`, threads that wait on the event will not block.</span></span> <span data-ttu-id="57122-130">Jeśli początkowy stan jest sygnałowy, a `mode` to <xref:System.Threading.EventResetMode.AutoReset>pierwszy wątek, który czeka na zdarzenie, zostanie natychmiast ogłoszony, po upływie którego zdarzenie zostanie zresetowane, a kolejne wątki zostaną zablokowane.</span><span class="sxs-lookup"><span data-stu-id="57122-130">If the initial state is signaled, and `mode` is <xref:System.Threading.EventResetMode.AutoReset>, the first thread that waits on the event will be released immediately, after which the event will reset, and subsequent threads will block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57122-131">Poniższy przykład kodu używa przeciążenia metody <xref:System.Threading.WaitHandle.SignalAndWait%28System.Threading.WaitHandle%2CSystem.Threading.WaitHandle%29> , aby umożliwić głównemu wątkowi sygnalizowanie zablokowanego wątku, a następnie zaczekać, aż wątek zakończy zadanie.</span><span class="sxs-lookup"><span data-stu-id="57122-131">The following code example uses the <xref:System.Threading.WaitHandle.SignalAndWait%28System.Threading.WaitHandle%2CSystem.Threading.WaitHandle%29> method overload to allow the main thread to signal a blocked thread and then wait until the thread finishes a task.</span></span>  
  
 <span data-ttu-id="57122-132">Przykład rozpoczyna pięć wątków i umożliwia ich zablokowanie przy <xref:System.Threading.EventWaitHandle> <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> użyciu flagi, a następnie zwalnia jeden wątek za każdym razem, gdy użytkownik naciśnie klawisz ENTER.</span><span class="sxs-lookup"><span data-stu-id="57122-132">The example starts five threads and allows them to block on an <xref:System.Threading.EventWaitHandle> created with the <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> flag, then releases one thread each time the user presses ENTER key.</span></span> <span data-ttu-id="57122-133">W tym przykładzie kolejka będzie kolejkować kolejne pięć wątków i zwalnia <xref:System.Threading.EventWaitHandle> je wszystkie przy <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> użyciu flagi utworzony z flagą.</span><span class="sxs-lookup"><span data-stu-id="57122-133">The example then queues another five threads and releases them all using an <xref:System.Threading.EventWaitHandle> created with the <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> flag.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/CS/source.cs#1)]
 [!code-vb[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md"><span data-ttu-id="57122-134">Przegląd elementów podstawowych synchronizacji</span><span class="sxs-lookup"><span data-stu-id="57122-134">Overview of synchronization primitives</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventWaitHandle (bool initialState, System.Threading.EventResetMode mode, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool initialState, valuetype System.Threading.EventResetMode mode, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandle.#ctor(System.Boolean,System.Threading.EventResetMode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialState As Boolean, mode As EventResetMode, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventWaitHandle(bool initialState, System::Threading::EventResetMode mode, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Threading.EventWaitHandle : bool * System.Threading.EventResetMode * string -&gt; System.Threading.EventWaitHandle" Usage="new System.Threading.EventWaitHandle (initialState, mode, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="initialState" Type="System.Boolean" />
        <Parameter Name="mode" Type="System.Threading.EventResetMode" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="initialState"><span data-ttu-id="57122-135"><see langword="true" />Aby ustawić stan początkowy na sygnalizowanie w przypadku utworzenia nazwanego zdarzenia w wyniku tego wywołania; <see langword="false" /> , aby ustawić na Niesygnalizowane.</span><span class="sxs-lookup"><span data-stu-id="57122-135"><see langword="true" /> to set the initial state to signaled if the named event is created as a result of this call; <see langword="false" /> to set it to nonsignaled.</span></span></param>
        <param name="mode"><span data-ttu-id="57122-136">Jedna z <see cref="T:System.Threading.EventResetMode" /> wartości, która określa, czy zdarzenie jest resetowane automatycznie czy ręcznie.</span><span class="sxs-lookup"><span data-stu-id="57122-136">One of the <see cref="T:System.Threading.EventResetMode" /> values that determines whether the event resets automatically or manually.</span></span></param>
        <param name="name"><span data-ttu-id="57122-137">Nazwa zdarzenia synchronizacji całego systemu.</span><span class="sxs-lookup"><span data-stu-id="57122-137">The name of a system-wide synchronization event.</span></span></param>
        <summary><span data-ttu-id="57122-138">Inicjuje nowe wystąpienie <see cref="T:System.Threading.EventWaitHandle" /> klasy, określając, czy dojście oczekiwania jest początkowo sygnalizowane, jeśli zostało utworzone w wyniku tego wywołania, niezależnie od tego, czy resetuje się automatycznie, czy ręcznie, oraz nazwę zdarzenia synchronizacji systemu.</span><span class="sxs-lookup"><span data-stu-id="57122-138">Initializes a new instance of the <see cref="T:System.Threading.EventWaitHandle" /> class, specifying whether the wait handle is initially signaled if created as a result of this call, whether it resets automatically or manually, and the name of a system synchronization event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57122-139">Jeśli `name` jest `null` lub jest pustym ciągiem, zostanie <xref:System.Threading.EventWaitHandle> utworzony element lokalny.</span><span class="sxs-lookup"><span data-stu-id="57122-139">If `name` is `null` or an empty string, a local <xref:System.Threading.EventWaitHandle> is created.</span></span>  
  
 <span data-ttu-id="57122-140">Jeśli zdarzenie systemowe o nazwie określonej dla `name` parametru już istnieje `initialState` , parametr jest ignorowany.</span><span class="sxs-lookup"><span data-stu-id="57122-140">If a system event with the name specified for the `name` parameter already exists, the `initialState` parameter is ignored.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="57122-141">Gdy ten konstruktor jest używany dla nazwanych zdarzeń systemowych `false` , `initialState`Określ dla.</span><span class="sxs-lookup"><span data-stu-id="57122-141">When using this constructor for named system events, specify `false` for `initialState`.</span></span> <span data-ttu-id="57122-142">Ten konstruktor nie pozwala określić, czy nazwane zdarzenie systemowe zostało utworzone, dlatego nie można wykonać żadnych założeń dotyczących stanu nazwanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="57122-142">This constructor provides no way to determine whether a named system event was created, so you cannot make any assumptions about the state of the named event.</span></span> <span data-ttu-id="57122-143">Aby określić, czy nazwane zdarzenie zostało utworzone, użyj <xref:System.Threading.EventWaitHandle.%23ctor%28System.Boolean%2CSystem.Threading.EventResetMode%2CSystem.String%2CSystem.Boolean%40%29> konstruktora <xref:System.Threading.EventWaitHandle.%23ctor%28System.Boolean%2CSystem.Threading.EventResetMode%2CSystem.String%2CSystem.Boolean%40%2CSystem.Security.AccessControl.EventWaitHandleSecurity%29> lub konstruktora.</span><span class="sxs-lookup"><span data-stu-id="57122-143">To determine whether a named event was created, use the <xref:System.Threading.EventWaitHandle.%23ctor%28System.Boolean%2CSystem.Threading.EventResetMode%2CSystem.String%2CSystem.Boolean%40%29> constructor or the <xref:System.Threading.EventWaitHandle.%23ctor%28System.Boolean%2CSystem.Threading.EventResetMode%2CSystem.String%2CSystem.Boolean%40%2CSystem.Security.AccessControl.EventWaitHandleSecurity%29> constructor.</span></span>  
  
 <span data-ttu-id="57122-144">Jeśli początkowy stan zdarzenia jest Niesygnalizowane, wątki oczekujące na zdarzenie zostaną zablokowane.</span><span class="sxs-lookup"><span data-stu-id="57122-144">If the initial state of the event is nonsignaled, threads that wait on the event will block.</span></span> <span data-ttu-id="57122-145">Jeśli stan początkowy jest sygnalizowane, a <xref:System.Threading.EventResetMode.ManualReset> flaga jest określona dla `mode`, wątki oczekujące na zdarzenie nie będą blokowane.</span><span class="sxs-lookup"><span data-stu-id="57122-145">If the initial state is signaled, and the <xref:System.Threading.EventResetMode.ManualReset> flag is specified for `mode`, threads that wait on the event will not block.</span></span> <span data-ttu-id="57122-146">Jeśli początkowy stan jest sygnałowy, a `mode` to <xref:System.Threading.EventResetMode.AutoReset>pierwszy wątek, który czeka na zdarzenie, zostanie natychmiast ogłoszony, po upływie którego zdarzenie zostanie zresetowane, a kolejne wątki zostaną zablokowane.</span><span class="sxs-lookup"><span data-stu-id="57122-146">If the initial state is signaled, and `mode` is <xref:System.Threading.EventResetMode.AutoReset>, the first thread that waits on the event will be released immediately, after which the event will reset, and subsequent threads will block.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57122-147">Wystąpił błąd Win32.</span><span class="sxs-lookup"><span data-stu-id="57122-147">A Win32 error occurred.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="57122-148">Nazwane zdarzenie istnieje i ma zabezpieczenia kontroli dostępu, ale użytkownik nie ma <see cref="F:System.Security.AccessControl.EventWaitHandleRights.FullControl" />.</span><span class="sxs-lookup"><span data-stu-id="57122-148">The named event exists and has access control security, but the user does not have <see cref="F:System.Security.AccessControl.EventWaitHandleRights.FullControl" />.</span></span></exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException"><span data-ttu-id="57122-149">Nie można utworzyć nazwanego zdarzenia, prawdopodobnie dlatego, że dojście oczekiwania o innym typie ma taką samą nazwę.</span><span class="sxs-lookup"><span data-stu-id="57122-149">The named event cannot be created, perhaps because a wait handle of a different type has the same name.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="57122-150"><paramref name="name" />jest dłuższa niż 260 znaków.</span><span class="sxs-lookup"><span data-stu-id="57122-150"><paramref name="name" /> is longer than 260 characters.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="57122-151">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="57122-151">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="57122-152">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="57122-152">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md"><span data-ttu-id="57122-153">Przegląd elementów podstawowych synchronizacji</span><span class="sxs-lookup"><span data-stu-id="57122-153">Overview of synchronization primitives</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventWaitHandle (bool initialState, System.Threading.EventResetMode mode, string name, out bool createdNew);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool initialState, valuetype System.Threading.EventResetMode mode, string name, [out] bool&amp; createdNew) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandle.#ctor(System.Boolean,System.Threading.EventResetMode,System.String,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialState As Boolean, mode As EventResetMode, name As String, ByRef createdNew As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventWaitHandle(bool initialState, System::Threading::EventResetMode mode, System::String ^ name, [Runtime::InteropServices::Out] bool % createdNew);" />
      <MemberSignature Language="F#" Value="new System.Threading.EventWaitHandle : bool * System.Threading.EventResetMode * string *  -&gt; System.Threading.EventWaitHandle" Usage="new System.Threading.EventWaitHandle (initialState, mode, name, createdNew)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="initialState" Type="System.Boolean" />
        <Parameter Name="mode" Type="System.Threading.EventResetMode" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="createdNew" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="initialState"><span data-ttu-id="57122-154"><see langword="true" />Aby ustawić stan początkowy na sygnalizowanie w przypadku utworzenia nazwanego zdarzenia w wyniku tego wywołania; <see langword="false" /> , aby ustawić na Niesygnalizowane.</span><span class="sxs-lookup"><span data-stu-id="57122-154"><see langword="true" /> to set the initial state to signaled if the named event is created as a result of this call; <see langword="false" /> to set it to nonsignaled.</span></span></param>
        <param name="mode"><span data-ttu-id="57122-155">Jedna z <see cref="T:System.Threading.EventResetMode" /> wartości, która określa, czy zdarzenie jest resetowane automatycznie czy ręcznie.</span><span class="sxs-lookup"><span data-stu-id="57122-155">One of the <see cref="T:System.Threading.EventResetMode" /> values that determines whether the event resets automatically or manually.</span></span></param>
        <param name="name"><span data-ttu-id="57122-156">Nazwa zdarzenia synchronizacji całego systemu.</span><span class="sxs-lookup"><span data-stu-id="57122-156">The name of a system-wide synchronization event.</span></span></param>
        <param name="createdNew"><span data-ttu-id="57122-157">Gdy ta metoda zostanie zwrócona <see langword="true" /> , program zawiera wartość, jeśli zostało utworzone zdarzenie lokalne ( <paramref name="name" /> czyli <see langword="null" /> jeśli jest lub pusty ciąg) lub jeśli zostało utworzone określone nazwane zdarzenie systemowe; <see langword="false" /> Jeśli określone nazwane zdarzenie systemowe już istnieje.</span><span class="sxs-lookup"><span data-stu-id="57122-157">When this method returns, contains <see langword="true" /> if a local event was created (that is, if <paramref name="name" /> is <see langword="null" /> or an empty string) or if the specified named system event was created; <see langword="false" /> if the specified named system event already existed.</span></span> <span data-ttu-id="57122-158">Ten parametr jest przekazywany niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="57122-158">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="57122-159">Inicjuje nowe wystąpienie <see cref="T:System.Threading.EventWaitHandle" /> klasy, określając, czy dojście oczekiwania jest początkowo sygnalizowane, jeśli zostało utworzone w wyniku tego wywołania, niezależnie od tego, czy resetuje się automatycznie, czy ręcznie, nazwę zdarzenia synchronizacji systemu i zmienną logiczną którego wartość po wywołaniu wskazuje, czy nazwane zdarzenie systemowe zostało utworzone.</span><span class="sxs-lookup"><span data-stu-id="57122-159">Initializes a new instance of the <see cref="T:System.Threading.EventWaitHandle" /> class, specifying whether the wait handle is initially signaled if created as a result of this call, whether it resets automatically or manually, the name of a system synchronization event, and a Boolean variable whose value after the call indicates whether the named system event was created.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57122-160">Jeśli zdarzenie systemowe o nazwie określonej dla `name` parametru już istnieje `initialState` , parametr jest ignorowany.</span><span class="sxs-lookup"><span data-stu-id="57122-160">If a system event with the name specified for the `name` parameter already exists, the `initialState` parameter is ignored.</span></span> <span data-ttu-id="57122-161">Po wywołaniu tego konstruktora Użyj wartości ze zmiennej określonej dla `ref` parametru (`ByRef` parametr w Visual Basic)`createdNew` , aby określić, czy nazwane zdarzenie systemowe już istnieje, czy też zostało utworzone.</span><span class="sxs-lookup"><span data-stu-id="57122-161">After calling this constructor, use the value in the variable specified for the `ref` parameter (`ByRef` parameter in Visual Basic)`createdNew` to determine whether the named system event already existed or was created.</span></span>  
  
 <span data-ttu-id="57122-162">Jeśli początkowy stan zdarzenia jest Niesygnalizowane, wątki oczekujące na zdarzenie zostaną zablokowane.</span><span class="sxs-lookup"><span data-stu-id="57122-162">If the initial state of the event is nonsignaled, threads that wait on the event will block.</span></span> <span data-ttu-id="57122-163">Jeśli stan początkowy jest sygnalizowane, a <xref:System.Threading.EventResetMode.ManualReset> flaga jest określona dla `mode`, wątki oczekujące na zdarzenie nie będą blokowane.</span><span class="sxs-lookup"><span data-stu-id="57122-163">If the initial state is signaled, and the <xref:System.Threading.EventResetMode.ManualReset> flag is specified for `mode`, threads that wait on the event will not block.</span></span> <span data-ttu-id="57122-164">Jeśli początkowy stan jest sygnałowy, a `mode` to <xref:System.Threading.EventResetMode.AutoReset>pierwszy wątek, który czeka na zdarzenie, zostanie natychmiast ogłoszony, po upływie którego zdarzenie zostanie zresetowane, a kolejne wątki zostaną zablokowane.</span><span class="sxs-lookup"><span data-stu-id="57122-164">If the initial state is signaled, and `mode` is <xref:System.Threading.EventResetMode.AutoReset>, the first thread that waits on the event will be released immediately, after which the event will reset, and subsequent threads will block.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57122-165">Wystąpił błąd Win32.</span><span class="sxs-lookup"><span data-stu-id="57122-165">A Win32 error occurred.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="57122-166">Nazwane zdarzenie istnieje i ma zabezpieczenia kontroli dostępu, ale użytkownik nie ma <see cref="F:System.Security.AccessControl.EventWaitHandleRights.FullControl" />.</span><span class="sxs-lookup"><span data-stu-id="57122-166">The named event exists and has access control security, but the user does not have <see cref="F:System.Security.AccessControl.EventWaitHandleRights.FullControl" />.</span></span></exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException"><span data-ttu-id="57122-167">Nie można utworzyć nazwanego zdarzenia, prawdopodobnie dlatego, że dojście oczekiwania o innym typie ma taką samą nazwę.</span><span class="sxs-lookup"><span data-stu-id="57122-167">The named event cannot be created, perhaps because a wait handle of a different type has the same name.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="57122-168"><paramref name="name" />jest dłuższa niż 260 znaków.</span><span class="sxs-lookup"><span data-stu-id="57122-168"><paramref name="name" /> is longer than 260 characters.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="57122-169">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="57122-169">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="57122-170">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="57122-170">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md"><span data-ttu-id="57122-171">Przegląd elementów podstawowych synchronizacji</span><span class="sxs-lookup"><span data-stu-id="57122-171">Overview of synchronization primitives</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventWaitHandle (bool initialState, System.Threading.EventResetMode mode, string name, out bool createdNew, System.Security.AccessControl.EventWaitHandleSecurity eventSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool initialState, valuetype System.Threading.EventResetMode mode, string name, [out] bool&amp; createdNew, class System.Security.AccessControl.EventWaitHandleSecurity eventSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandle.#ctor(System.Boolean,System.Threading.EventResetMode,System.String,System.Boolean@,System.Security.AccessControl.EventWaitHandleSecurity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialState As Boolean, mode As EventResetMode, name As String, ByRef createdNew As Boolean, eventSecurity As EventWaitHandleSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventWaitHandle(bool initialState, System::Threading::EventResetMode mode, System::String ^ name, [Runtime::InteropServices::Out] bool % createdNew, System::Security::AccessControl::EventWaitHandleSecurity ^ eventSecurity);" />
      <MemberSignature Language="F#" Value="new System.Threading.EventWaitHandle : bool * System.Threading.EventResetMode * string *  * System.Security.AccessControl.EventWaitHandleSecurity -&gt; System.Threading.EventWaitHandle" Usage="new System.Threading.EventWaitHandle (initialState, mode, name, createdNew, eventSecurity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="initialState" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="mode" Type="System.Threading.EventResetMode" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="name" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="createdNew" Type="System.Boolean" RefType="out" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="eventSecurity" Type="System.Security.AccessControl.EventWaitHandleSecurity" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="initialState"><span data-ttu-id="57122-172"><see langword="true" />Aby ustawić stan początkowy na sygnalizowanie w przypadku utworzenia nazwanego zdarzenia w wyniku tego wywołania; <see langword="false" /> , aby ustawić na Niesygnalizowane.</span><span class="sxs-lookup"><span data-stu-id="57122-172"><see langword="true" /> to set the initial state to signaled if the named event is created as a result of this call; <see langword="false" /> to set it to nonsignaled.</span></span></param>
        <param name="mode"><span data-ttu-id="57122-173">Jedna z <see cref="T:System.Threading.EventResetMode" /> wartości, która określa, czy zdarzenie jest resetowane automatycznie czy ręcznie.</span><span class="sxs-lookup"><span data-stu-id="57122-173">One of the <see cref="T:System.Threading.EventResetMode" /> values that determines whether the event resets automatically or manually.</span></span></param>
        <param name="name"><span data-ttu-id="57122-174">Nazwa zdarzenia synchronizacji całego systemu.</span><span class="sxs-lookup"><span data-stu-id="57122-174">The name of a system-wide synchronization event.</span></span></param>
        <param name="createdNew"><span data-ttu-id="57122-175">Gdy ta metoda zostanie zwrócona <see langword="true" /> , program zawiera wartość, jeśli zostało utworzone zdarzenie lokalne ( <paramref name="name" /> czyli <see langword="null" /> jeśli jest lub pusty ciąg) lub jeśli zostało utworzone określone nazwane zdarzenie systemowe; <see langword="false" /> Jeśli określone nazwane zdarzenie systemowe już istnieje.</span><span class="sxs-lookup"><span data-stu-id="57122-175">When this method returns, contains <see langword="true" /> if a local event was created (that is, if <paramref name="name" /> is <see langword="null" /> or an empty string) or if the specified named system event was created; <see langword="false" /> if the specified named system event already existed.</span></span> <span data-ttu-id="57122-176">Ten parametr jest przekazywany niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="57122-176">This parameter is passed uninitialized.</span></span></param>
        <param name="eventSecurity"><span data-ttu-id="57122-177"><see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> Obiekt reprezentujący zabezpieczenia kontroli dostępu, który ma zostać zastosowany do nazwanego zdarzenia systemowego.</span><span class="sxs-lookup"><span data-stu-id="57122-177">An <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> object that represents the access control security to be applied to the named system event.</span></span></param>
        <summary><span data-ttu-id="57122-178">Inicjuje nowe wystąpienie <see cref="T:System.Threading.EventWaitHandle" /> klasy, określając, czy dojście oczekiwania jest początkowo sygnalizowane, jeśli zostało utworzone w wyniku tego wywołania, niezależnie od tego, czy jest resetowany automatycznie, czy ręcznie, nazwa zdarzenia synchronizacji systemu, zmienna logiczna, której wartość po wywołaniu wskazuje, czy nazwane zdarzenie systemowe zostało utworzone, a zabezpieczenia kontroli dostępu mają być stosowane do nazwanego zdarzenia, jeśli zostało utworzone.</span><span class="sxs-lookup"><span data-stu-id="57122-178">Initializes a new instance of the <see cref="T:System.Threading.EventWaitHandle" /> class, specifying whether the wait handle is initially signaled if created as a result of this call, whether it resets automatically or manually, the name of a system synchronization event, a Boolean variable whose value after the call indicates whether the named system event was created, and the access control security to be applied to the named event if it is created.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57122-179">Użyj tego konstruktora, aby zastosować zabezpieczenia kontroli dostępu do nazwanego zdarzenia systemowego podczas jego tworzenia, uniemożliwiając innemu kodowi przejęcie kontroli nad zdarzeniem.</span><span class="sxs-lookup"><span data-stu-id="57122-179">Use this constructor to apply access control security to a named system event when it is created, preventing other code from taking control of the event.</span></span>  
  
 <span data-ttu-id="57122-180">Ten konstruktor inicjuje <xref:System.Threading.EventWaitHandle> obiekt, który reprezentuje zdarzenie systemowe.</span><span class="sxs-lookup"><span data-stu-id="57122-180">This constructor initializes an <xref:System.Threading.EventWaitHandle> object that represents a system event.</span></span> <span data-ttu-id="57122-181">Można utworzyć wiele <xref:System.Threading.EventWaitHandle> obiektów, które reprezentują to samo zdarzenie systemowe.</span><span class="sxs-lookup"><span data-stu-id="57122-181">You can create multiple <xref:System.Threading.EventWaitHandle> objects that represent the same system event.</span></span>  
  
 <span data-ttu-id="57122-182">Jeśli zdarzenie systemowe nie istnieje, jest tworzone z określonym zabezpieczeniami kontroli dostępu.</span><span class="sxs-lookup"><span data-stu-id="57122-182">If the system event does not exist, it is created with the specified access control security.</span></span> <span data-ttu-id="57122-183">Jeśli zdarzenie istnieje, określone zabezpieczenia kontroli dostępu zostaną zignorowane.</span><span class="sxs-lookup"><span data-stu-id="57122-183">If the event exists, the specified access control security is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="57122-184">Obiekt wywołujący ma pełną kontrolę nad nowo utworzonym <xref:System.Threading.EventWaitHandle> obiektem, nawet w przypadku `eventSecurity` odmowy lub niepowodzenia udzielenia pewnych praw dostępu bieżącemu użytkownikowi.</span><span class="sxs-lookup"><span data-stu-id="57122-184">The caller has full control over the newly created <xref:System.Threading.EventWaitHandle> object even if `eventSecurity` denies or fails to grant some access rights to the current user.</span></span> <span data-ttu-id="57122-185">Jeśli jednak bieżący użytkownik próbuje uzyskać inny <xref:System.Threading.EventWaitHandle> obiekt, aby reprezentować to samo nazwane zdarzenie, używając konstruktora <xref:System.Threading.EventWaitHandle.OpenExisting%2A> lub metody zabezpieczenia kontroli dostępu systemu Windows jest stosowane.</span><span class="sxs-lookup"><span data-stu-id="57122-185">However, if the current user attempts to get another <xref:System.Threading.EventWaitHandle> object to represent the same named event, using either a constructor or the <xref:System.Threading.EventWaitHandle.OpenExisting%2A> method, Windows access control security is applied.</span></span>  
  
 <span data-ttu-id="57122-186">Jeśli zdarzenie systemowe o nazwie określonej dla `name` parametru już istnieje `initialState` , parametr jest ignorowany.</span><span class="sxs-lookup"><span data-stu-id="57122-186">If a system event with the name specified for the `name` parameter already exists, the `initialState` parameter is ignored.</span></span> <span data-ttu-id="57122-187">Po wywołaniu tego konstruktora Użyj wartości ze zmiennej określonej dla `ref` parametru (`ByRef` parametr w Visual Basic) `createdNew` , aby określić, czy nazwane zdarzenie systemowe już istnieje, czy też zostało utworzone.</span><span class="sxs-lookup"><span data-stu-id="57122-187">After calling this constructor, use the value in the variable specified for the `ref` parameter (`ByRef` parameter in Visual Basic) `createdNew` to determine whether the named system event already existed or was created.</span></span>  
  
 <span data-ttu-id="57122-188">Jeśli początkowy stan zdarzenia jest Niesygnalizowane, wątki oczekujące na zdarzenie zostaną zablokowane.</span><span class="sxs-lookup"><span data-stu-id="57122-188">If the initial state of the event is nonsignaled, threads that wait on the event will block.</span></span> <span data-ttu-id="57122-189">Jeśli stan początkowy jest sygnalizowane, a <xref:System.Threading.EventResetMode.ManualReset> flaga jest określona dla `mode`, wątki oczekujące na zdarzenie nie będą blokowane.</span><span class="sxs-lookup"><span data-stu-id="57122-189">If the initial state is signaled, and the <xref:System.Threading.EventResetMode.ManualReset> flag is specified for `mode`, threads that wait on the event will not block.</span></span> <span data-ttu-id="57122-190">Jeśli początkowy stan jest sygnałowy, a `mode` to <xref:System.Threading.EventResetMode.AutoReset>pierwszy wątek, który czeka na zdarzenie, zostanie natychmiast ogłoszony, po upływie którego zdarzenie zostanie zresetowane, a kolejne wątki zostaną zablokowane.</span><span class="sxs-lookup"><span data-stu-id="57122-190">If the initial state is signaled, and `mode` is <xref:System.Threading.EventResetMode.AutoReset>, the first thread that waits on the event will be released immediately, after which the event will reset, and subsequent threads will block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57122-191">Poniższy przykład kodu demonstruje zachowanie międzyprocesowe nazwanego zdarzenia systemowego z zabezpieczeniami kontroli dostępu.</span><span class="sxs-lookup"><span data-stu-id="57122-191">The following code example demonstrates the cross-process behavior of a named system event with access control security.</span></span> <span data-ttu-id="57122-192">W przykładzie zastosowano <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29> Przeciążenie metody do testowania pod kątem istnienia nazwanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="57122-192">The example uses the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29> method overload to test for the existence of a named event.</span></span>  
  
 <span data-ttu-id="57122-193">Jeśli zdarzenie nie istnieje, jest tworzone z zastosowaniem początkowego prawa własności i zabezpieczenia kontroli dostępu, które odmówi bieżącego użytkownika prawo do użycia zdarzenia, ale przyznaje prawo do odczytu i zmiany uprawnień do tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="57122-193">If the event does not exist, it is created with initial ownership and access control security that denies the current user the right to use the event, but grants the right to read and change permissions on the event.</span></span>  
  
 <span data-ttu-id="57122-194">W przypadku uruchomienia skompilowanego przykładu z dwóch poleceń systemu Windows druga kopia spowoduje zgłoszenie wyjątku naruszenia zasad dostępu w wywołaniu <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29>.</span><span class="sxs-lookup"><span data-stu-id="57122-194">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29>.</span></span> <span data-ttu-id="57122-195">Przechwycono wyjątek, a w przykładzie zastosowano <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> Przeciążenie metody do oczekiwania na zdarzenie z prawami wymaganymi do odczytu i zmiany uprawnień.</span><span class="sxs-lookup"><span data-stu-id="57122-195">The exception is caught, and the example uses the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> method overload to wait on the event with the rights needed to read and change the permissions.</span></span>  
  
 <span data-ttu-id="57122-196">Po zmianie uprawnień zdarzenie zostanie otwarte z prawami wymaganymi do jego zaczekania i zasygnalizowaniem.</span><span class="sxs-lookup"><span data-stu-id="57122-196">After the permissions are changed, the event is opened with the rights required to wait on it and signal it.</span></span> <span data-ttu-id="57122-197">W przypadku uruchomienia skompilowanego przykładu z trzeciego okna poleceń, przykład zostanie uruchomiony przy użyciu nowych uprawnień.</span><span class="sxs-lookup"><span data-stu-id="57122-197">If you run the compiled example from a third command window, the example runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/CS/source.cs#1)]
 [!code-vb[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57122-198">Wystąpił błąd Win32.</span><span class="sxs-lookup"><span data-stu-id="57122-198">A Win32 error occurred.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="57122-199">Nazwane zdarzenie istnieje i ma zabezpieczenia kontroli dostępu, ale użytkownik nie ma <see cref="F:System.Security.AccessControl.EventWaitHandleRights.FullControl" />.</span><span class="sxs-lookup"><span data-stu-id="57122-199">The named event exists and has access control security, but the user does not have <see cref="F:System.Security.AccessControl.EventWaitHandleRights.FullControl" />.</span></span></exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException"><span data-ttu-id="57122-200">Nie można utworzyć nazwanego zdarzenia, prawdopodobnie dlatego, że dojście oczekiwania o innym typie ma taką samą nazwę.</span><span class="sxs-lookup"><span data-stu-id="57122-200">The named event cannot be created, perhaps because a wait handle of a different type has the same name.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="57122-201"><paramref name="name" />jest dłuższa niż 260 znaków.</span><span class="sxs-lookup"><span data-stu-id="57122-201"><paramref name="name" /> is longer than 260 characters.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="57122-202">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="57122-202">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="57122-203">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="57122-203">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md"><span data-ttu-id="57122-204">Przegląd elementów podstawowych synchronizacji</span><span class="sxs-lookup"><span data-stu-id="57122-204">Overview of synchronization primitives</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.EventWaitHandleSecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.EventWaitHandleSecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandle.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As EventWaitHandleSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::EventWaitHandleSecurity ^ GetAccessControl();" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : unit -&gt; System.Security.AccessControl.EventWaitHandleSecurity" Usage="eventWaitHandle.GetAccessControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.EventWaitHandleSecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="57122-205">Pobiera obiekt reprezentujący zabezpieczenia kontroli dostępu dla nazwanego zdarzenia systemowego reprezentowanego przez bieżący <see cref="T:System.Threading.EventWaitHandle" /> obiekt. <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /></span><span class="sxs-lookup"><span data-stu-id="57122-205">Gets an <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> object that represents the access control security for the named system event represented by the current <see cref="T:System.Threading.EventWaitHandle" /> object.</span></span></summary>
        <returns><span data-ttu-id="57122-206"><see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> Obiekt reprezentujący zabezpieczenia kontroli dostępu dla nazwanego zdarzenia systemowego.</span><span class="sxs-lookup"><span data-stu-id="57122-206">An <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> object that represents the access control security for the named system event.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57122-207">Metoda używa następującej kombinacji flag (połączonych przy użyciu wartości bitowej lub operacji) do wyszukiwania uprawnień: <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>, <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>, i <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType>. <xref:System.Threading.EventWaitHandle.GetAccessControl%2A></span><span class="sxs-lookup"><span data-stu-id="57122-207">The <xref:System.Threading.EventWaitHandle.GetAccessControl%2A> method uses the following combination of flags (combined using the bitwise OR operation) to search for permissions: <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>, <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>, and <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="57122-208">Użytkownik musi mieć <xref:System.Security.AccessControl.EventWaitHandleRights.ReadPermissions?displayProperty=nameWithType> uprawnienia do wywołania tej metody, a zdarzenie musi być otwarte <xref:System.Security.AccessControl.EventWaitHandleRights.ReadPermissions?displayProperty=nameWithType> z flagą.</span><span class="sxs-lookup"><span data-stu-id="57122-208">The user must have <xref:System.Security.AccessControl.EventWaitHandleRights.ReadPermissions?displayProperty=nameWithType> rights to call this method, and the event must have been opened with the <xref:System.Security.AccessControl.EventWaitHandleRights.ReadPermissions?displayProperty=nameWithType> flag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57122-209">Poniższy przykład kodu demonstruje zachowanie międzyprocesowe nazwanego zdarzenia systemowego z zabezpieczeniami kontroli dostępu.</span><span class="sxs-lookup"><span data-stu-id="57122-209">The following code example demonstrates the cross-process behavior of a named system event with access control security.</span></span> <span data-ttu-id="57122-210">W przykładzie zastosowano <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29> Przeciążenie metody do testowania pod kątem istnienia nazwanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="57122-210">The example uses the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29> method overload to test for the existence of a named event.</span></span>  
  
 <span data-ttu-id="57122-211">Jeśli zdarzenie nie istnieje, jest tworzone z zastosowaniem początkowego prawa własności i zabezpieczenia kontroli dostępu, które odmówi bieżącego użytkownika prawo do użycia zdarzenia, ale przyznaje prawo do odczytu i zmiany uprawnień do tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="57122-211">If the event does not exist, it is created with initial ownership and access control security that denies the current user the right to use the event, but grants the right to read and change permissions on the event.</span></span>  
  
 <span data-ttu-id="57122-212">W przypadku uruchomienia skompilowanego przykładu z dwóch poleceń systemu Windows druga kopia spowoduje zgłoszenie wyjątku naruszenia zasad dostępu w wywołaniu <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29>.</span><span class="sxs-lookup"><span data-stu-id="57122-212">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29>.</span></span> <span data-ttu-id="57122-213">Przechwycono wyjątek, a w przykładzie zastosowano <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> Przeciążenie metody do oczekiwania na zdarzenie z prawami wymaganymi do odczytu i zmiany uprawnień.</span><span class="sxs-lookup"><span data-stu-id="57122-213">The exception is caught, and the example uses the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> method overload to wait on the event with the rights needed to read and change the permissions.</span></span>  
  
 <span data-ttu-id="57122-214">Po odczytaniu uprawnień przy użyciu <xref:System.Threading.EventWaitHandle.GetAccessControl%2A> metody i zmianie zdarzenie jest otwierane z prawami wymaganymi do jego zaczekania i zasygnalizowaniem.</span><span class="sxs-lookup"><span data-stu-id="57122-214">After the permissions have been read, using the <xref:System.Threading.EventWaitHandle.GetAccessControl%2A> method, and changed, the event is opened with the rights required to wait on it and signal it.</span></span> <span data-ttu-id="57122-215">W przypadku uruchomienia skompilowanego przykładu z trzeciego okna poleceń, przykład zostanie uruchomiony przy użyciu nowych uprawnień.</span><span class="sxs-lookup"><span data-stu-id="57122-215">If you run the compiled example from a third command window, the example runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/CS/source.cs#1)]
 [!code-vb[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="57122-216">Bieżący <see cref="T:System.Threading.EventWaitHandle" /> obiekt reprezentuje nazwane zdarzenie systemowe, a użytkownik nie ma <see cref="F:System.Security.AccessControl.EventWaitHandleRights.ReadPermissions" />.</span><span class="sxs-lookup"><span data-stu-id="57122-216">The current <see cref="T:System.Threading.EventWaitHandle" /> object represents a named system event, and the user does not have <see cref="F:System.Security.AccessControl.EventWaitHandleRights.ReadPermissions" />.</span></span>  
  
<span data-ttu-id="57122-217">—lub—</span><span class="sxs-lookup"><span data-stu-id="57122-217">-or-</span></span> 
<span data-ttu-id="57122-218">Bieżący <see cref="T:System.Threading.EventWaitHandle" /> obiekt reprezentuje nazwane zdarzenie systemowe i nie został otwarty przy użyciu <see cref="F:System.Security.AccessControl.EventWaitHandleRights.ReadPermissions" />.</span><span class="sxs-lookup"><span data-stu-id="57122-218">The current <see cref="T:System.Threading.EventWaitHandle" /> object represents a named system event, and was not opened with <see cref="F:System.Security.AccessControl.EventWaitHandleRights.ReadPermissions" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="57122-219">Nieobsługiwane dla systemu Windows 98 lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="57122-219">Not supported for Windows 98 or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57122-220">Metoda została wcześniej wywołana na tym <see cref="T:System.Threading.EventWaitHandle" />. <see cref="M:System.Threading.WaitHandle.Close" /></span><span class="sxs-lookup"><span data-stu-id="57122-220">The <see cref="M:System.Threading.WaitHandle.Close" /> method was previously called on this <see cref="T:System.Threading.EventWaitHandle" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md"><span data-ttu-id="57122-221">Przegląd elementów podstawowych synchronizacji</span><span class="sxs-lookup"><span data-stu-id="57122-221">Overview of synchronization primitives</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenExisting">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="57122-222">Otwiera określone nazwane zdarzenie synchronizacji, jeśli już istnieje.</span><span class="sxs-lookup"><span data-stu-id="57122-222">Opens a specified named synchronization event, if it already exists.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenExisting">
      <MemberSignature Language="C#" Value="public static System.Threading.EventWaitHandle OpenExisting (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.EventWaitHandle OpenExisting(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandle.OpenExisting(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExisting (name As String) As EventWaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::EventWaitHandle ^ OpenExisting(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member OpenExisting : string -&gt; System.Threading.EventWaitHandle" Usage="System.Threading.EventWaitHandle.OpenExisting name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.EventWaitHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="57122-223">Nazwa zdarzenia synchronizacji systemu do otwarcia.</span><span class="sxs-lookup"><span data-stu-id="57122-223">The name of the system synchronization event to open.</span></span></param>
        <summary><span data-ttu-id="57122-224">Otwiera określone nazwane zdarzenie synchronizacji, jeśli już istnieje.</span><span class="sxs-lookup"><span data-stu-id="57122-224">Opens the specified named synchronization event, if it already exists.</span></span></summary>
        <returns><span data-ttu-id="57122-225">Obiekt reprezentujący nazwane zdarzenie systemowe.</span><span class="sxs-lookup"><span data-stu-id="57122-225">An  object that represents the named system event.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57122-226"><xref:System.Threading.EventWaitHandle.OpenExisting%2A> Metoda próbuje otworzyć określone nazwane zdarzenie systemowe.</span><span class="sxs-lookup"><span data-stu-id="57122-226">The <xref:System.Threading.EventWaitHandle.OpenExisting%2A> method tries to open the specified named system event.</span></span> <span data-ttu-id="57122-227">Jeśli zdarzenie systemowe nie istnieje, ta metoda zgłasza wyjątek zamiast tworzenia zdarzenia systemowego.</span><span class="sxs-lookup"><span data-stu-id="57122-227">If the system event does not exist, this method throws an exception instead of creating the system event.</span></span> <span data-ttu-id="57122-228">Aby utworzyć zdarzenie systemowe, gdy jeszcze nie istnieje, użyj jednego z <xref:System.Threading.EventWaitHandle.%23ctor%2A> konstruktorów, które `name` mają parametr.</span><span class="sxs-lookup"><span data-stu-id="57122-228">To create the system event when it does not already exist, use one of the <xref:System.Threading.EventWaitHandle.%23ctor%2A> constructors that has a `name` parameter.</span></span>  
  
 <span data-ttu-id="57122-229">Wiele wywołań tej metody, które używają tej samej wartości dla `name` niekoniecznie zwraca ten sam <xref:System.Threading.EventWaitHandle> obiekt, nawet jeśli zwracane obiekty reprezentują to samo nazwane zdarzenie systemowe.</span><span class="sxs-lookup"><span data-stu-id="57122-229">Multiple calls to this method that use the same value for `name` do not necessarily return the same <xref:System.Threading.EventWaitHandle> object, even though the objects that are returned represent the same named system event.</span></span>  
  
 <span data-ttu-id="57122-230">To Przeciążenie metody jest równoważne wywołaniem <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> przeciążenia metody i określaniem <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> i <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> prawami, połączonymi przy użyciu bitowej lub operacji.</span><span class="sxs-lookup"><span data-stu-id="57122-230">This method overload is equivalent to calling the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> method overload and specifying <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> and <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> rights, combined by using the bitwise OR operation.</span></span>  
  
 <span data-ttu-id="57122-231">Określenie flagi pozwala wątek czekać na nazwane zdarzenie systemowe, a <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> określenie flagi umożliwia wątek wywoływanie <xref:System.Threading.EventWaitHandle.Set%2A> metod i <xref:System.Threading.EventWaitHandle.Reset%2A>. <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="57122-231">Specifying the <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> flag allows a thread to wait on the named system event, and specifying the <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> flag allows a thread to call the <xref:System.Threading.EventWaitHandle.Set%2A> and <xref:System.Threading.EventWaitHandle.Reset%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57122-232">Poniższy przykład kodu demonstruje zachowanie międzyprocesowe nazwanego zdarzenia systemowego z zabezpieczeniami kontroli dostępu.</span><span class="sxs-lookup"><span data-stu-id="57122-232">The following code example demonstrates the cross-process behavior of a named system event with access control security.</span></span> <span data-ttu-id="57122-233">W przykładzie zastosowano <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29> Przeciążenie metody do testowania pod kątem istnienia nazwanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="57122-233">The example uses the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29> method overload to test for the existence of a named event.</span></span>  
  
 <span data-ttu-id="57122-234">Jeśli zdarzenie nie istnieje, jest tworzone z zastosowaniem początkowego prawa własności i zabezpieczenia kontroli dostępu, które odmówi bieżącego użytkownika prawo do użycia zdarzenia, ale przyznaje prawo do odczytu i zmiany uprawnień do tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="57122-234">If the event does not exist, it is created with initial ownership and access control security that denies the current user the right to use the event, but grants the right to read and change permissions on the event.</span></span>  
  
 <span data-ttu-id="57122-235">W przypadku uruchomienia skompilowanego przykładu z dwóch poleceń systemu Windows druga kopia spowoduje zgłoszenie wyjątku naruszenia zasad dostępu w wywołaniu <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29>.</span><span class="sxs-lookup"><span data-stu-id="57122-235">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29>.</span></span> <span data-ttu-id="57122-236">Przechwycono wyjątek, a w przykładzie zastosowano <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> Przeciążenie metody do oczekiwania na zdarzenie z prawami wymaganymi do odczytu i zmiany uprawnień.</span><span class="sxs-lookup"><span data-stu-id="57122-236">The exception is caught, and the example uses the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> method overload to wait on the event with the rights needed to read and change the permissions.</span></span>  
  
 <span data-ttu-id="57122-237">Po zmianie uprawnień zdarzenie zostanie otwarte z prawami wymaganymi do jego zaczekania i zasygnalizowaniem.</span><span class="sxs-lookup"><span data-stu-id="57122-237">After the permissions are changed, the event is opened with the rights required to wait on it and signal it.</span></span> <span data-ttu-id="57122-238">W przypadku uruchomienia skompilowanego przykładu z trzeciego okna poleceń, przykład zostanie uruchomiony przy użyciu nowych uprawnień.</span><span class="sxs-lookup"><span data-stu-id="57122-238">If you run the compiled example from a third command window, the example runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/CS/source.cs#1)]
 [!code-vb[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="57122-239"><paramref name="name" />jest pustym ciągiem.</span><span class="sxs-lookup"><span data-stu-id="57122-239"><paramref name="name" /> is an empty string.</span></span>  
  
<span data-ttu-id="57122-240">—lub—</span><span class="sxs-lookup"><span data-stu-id="57122-240">-or-</span></span> 
 <span data-ttu-id="57122-241"><paramref name="name" />jest dłuższa niż 260 znaków.</span><span class="sxs-lookup"><span data-stu-id="57122-241"><paramref name="name" /> is longer than 260 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57122-242"><paramref name="name" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="57122-242"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException"><span data-ttu-id="57122-243">Nazwane zdarzenie systemowe nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="57122-243">The named system event does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57122-244">Wystąpił błąd Win32.</span><span class="sxs-lookup"><span data-stu-id="57122-244">A Win32 error occurred.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="57122-245">Nazwane zdarzenie istnieje, ale użytkownik nie ma dostępu do niego wymaganego przez zabezpieczenia.</span><span class="sxs-lookup"><span data-stu-id="57122-245">The named event exists, but the user does not have the security access required to use it.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="57122-246">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="57122-246">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="57122-247">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="57122-247">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md"><span data-ttu-id="57122-248">Przegląd elementów podstawowych synchronizacji</span><span class="sxs-lookup"><span data-stu-id="57122-248">Overview of synchronization primitives</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OpenExisting">
      <MemberSignature Language="C#" Value="public static System.Threading.EventWaitHandle OpenExisting (string name, System.Security.AccessControl.EventWaitHandleRights rights);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.EventWaitHandle OpenExisting(string name, valuetype System.Security.AccessControl.EventWaitHandleRights rights) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandle.OpenExisting(System.String,System.Security.AccessControl.EventWaitHandleRights)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExisting (name As String, rights As EventWaitHandleRights) As EventWaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::EventWaitHandle ^ OpenExisting(System::String ^ name, System::Security::AccessControl::EventWaitHandleRights rights);" />
      <MemberSignature Language="F#" Value="static member OpenExisting : string * System.Security.AccessControl.EventWaitHandleRights -&gt; System.Threading.EventWaitHandle" Usage="System.Threading.EventWaitHandle.OpenExisting (name, rights)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.EventWaitHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="rights" Type="System.Security.AccessControl.EventWaitHandleRights" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="57122-249">Nazwa zdarzenia synchronizacji systemu do otwarcia.</span><span class="sxs-lookup"><span data-stu-id="57122-249">The name of the system synchronization event to open.</span></span></param>
        <param name="rights"><span data-ttu-id="57122-250">Bitowa kombinacja wartości wyliczenia, które reprezentują żądany dostęp do zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="57122-250">A bitwise combination of the enumeration values that represent the desired security access.</span></span></param>
        <summary><span data-ttu-id="57122-251">Otwiera określone nazwane zdarzenie synchronizacji, jeśli już istnieje, z żądanym dostępem zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="57122-251">Opens the specified named synchronization event, if it already exists, with the desired security access.</span></span></summary>
        <returns><span data-ttu-id="57122-252">Obiekt reprezentujący nazwane zdarzenie systemowe.</span><span class="sxs-lookup"><span data-stu-id="57122-252">An object that represents the named system event.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57122-253"><xref:System.Threading.EventWaitHandle.Reset%2A> <xref:System.Threading.EventWaitHandle.Set%2A> <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> Parametr musi <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> zawierać flagę, aby umożliwić wątkom oczekiwanie na zdarzenie, oraz flagę umożliwiającą wątkom wywoływanie metod i. `rights`</span><span class="sxs-lookup"><span data-stu-id="57122-253">The `rights` parameter must include the <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> flag to allow threads to wait on the event, and the <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> flag to allow threads to call the <xref:System.Threading.EventWaitHandle.Set%2A> and <xref:System.Threading.EventWaitHandle.Reset%2A> methods.</span></span>  
  
 <span data-ttu-id="57122-254"><xref:System.Threading.EventWaitHandle.OpenExisting%2A> Metoda próbuje otworzyć istniejące nazwane zdarzenie systemowe.</span><span class="sxs-lookup"><span data-stu-id="57122-254">The <xref:System.Threading.EventWaitHandle.OpenExisting%2A> method tries to open an existing named system event.</span></span> <span data-ttu-id="57122-255">Jeśli zdarzenie systemowe nie istnieje, ta metoda zgłasza wyjątek zamiast tworzenia zdarzenia systemowego.</span><span class="sxs-lookup"><span data-stu-id="57122-255">If the system event does not exist, this method throws an exception instead of creating the system event.</span></span> <span data-ttu-id="57122-256">Aby utworzyć zdarzenie systemowe, gdy jeszcze nie istnieje, użyj jednego z <xref:System.Threading.EventWaitHandle.%23ctor%2A> konstruktorów, które `name` mają parametr.</span><span class="sxs-lookup"><span data-stu-id="57122-256">To create the system event when it does not already exist, use one of the <xref:System.Threading.EventWaitHandle.%23ctor%2A> constructors that has a `name` parameter.</span></span>  
  
 <span data-ttu-id="57122-257">Wiele wywołań tej metody, które używają tej samej wartości dla `name` niekoniecznie zwraca ten sam <xref:System.Threading.EventWaitHandle> obiekt, nawet jeśli zwracane obiekty reprezentują to samo nazwane zdarzenie systemowe.</span><span class="sxs-lookup"><span data-stu-id="57122-257">Multiple calls to this method that use the same value for `name` do not necessarily return the same <xref:System.Threading.EventWaitHandle> object, even though the objects that are returned represent the same named system event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57122-258">Poniższy przykład kodu demonstruje zachowanie międzyprocesowe nazwanego zdarzenia systemowego z zabezpieczeniami kontroli dostępu.</span><span class="sxs-lookup"><span data-stu-id="57122-258">The following code example demonstrates the cross-process behavior of a named system event with access control security.</span></span> <span data-ttu-id="57122-259">W przykładzie zastosowano <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29> Przeciążenie metody do testowania pod kątem istnienia nazwanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="57122-259">The example uses the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29> method overload to test for the existence of a named event.</span></span>  
  
 <span data-ttu-id="57122-260">Jeśli zdarzenie nie istnieje, jest tworzone z zastosowaniem początkowego prawa własności i zabezpieczenia kontroli dostępu, które odmówi bieżącego użytkownika prawo do użycia zdarzenia, ale przyznaje prawo do odczytu i zmiany uprawnień do tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="57122-260">If the event does not exist, it is created with initial ownership and access control security that denies the current user the right to use the event, but grants the right to read and change permissions on the event.</span></span>  
  
 <span data-ttu-id="57122-261">W przypadku uruchomienia skompilowanego przykładu z dwóch poleceń systemu Windows druga kopia spowoduje zgłoszenie wyjątku naruszenia zasad dostępu w wywołaniu <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29>.</span><span class="sxs-lookup"><span data-stu-id="57122-261">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29>.</span></span> <span data-ttu-id="57122-262">Przechwycono wyjątek, a w przykładzie zastosowano <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> Przeciążenie metody do oczekiwania na zdarzenie z prawami wymaganymi do odczytu i zmiany uprawnień.</span><span class="sxs-lookup"><span data-stu-id="57122-262">The exception is caught, and the example uses the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> method overload to wait on the event with the rights needed to read and change the permissions.</span></span>  
  
 <span data-ttu-id="57122-263">Po zmianie uprawnień zdarzenie zostanie otwarte z prawami wymaganymi do jego zaczekania i zasygnalizowaniem.</span><span class="sxs-lookup"><span data-stu-id="57122-263">After the permissions are changed, the event is opened with the rights required to wait on it and signal it.</span></span> <span data-ttu-id="57122-264">W przypadku uruchomienia skompilowanego przykładu z trzeciego okna poleceń, przykład zostanie uruchomiony przy użyciu nowych uprawnień.</span><span class="sxs-lookup"><span data-stu-id="57122-264">If you run the compiled example from a third command window, the example runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/CS/source.cs#1)]
 [!code-vb[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="57122-265"><paramref name="name" />jest pustym ciągiem.</span><span class="sxs-lookup"><span data-stu-id="57122-265"><paramref name="name" /> is an empty string.</span></span>  
  
<span data-ttu-id="57122-266">—lub—</span><span class="sxs-lookup"><span data-stu-id="57122-266">-or-</span></span> 
 <span data-ttu-id="57122-267"><paramref name="name" />jest dłuższa niż 260 znaków.</span><span class="sxs-lookup"><span data-stu-id="57122-267"><paramref name="name" /> is longer than 260 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57122-268"><paramref name="name" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="57122-268"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException"><span data-ttu-id="57122-269">Nazwane zdarzenie systemowe nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="57122-269">The named system event does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57122-270">Wystąpił błąd Win32.</span><span class="sxs-lookup"><span data-stu-id="57122-270">A Win32 error occurred.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="57122-271">Nazwane zdarzenie istnieje, ale użytkownik nie ma żądanego dostępu do zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="57122-271">The named event exists, but the user does not have the desired security access.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="57122-272">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="57122-272">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="57122-273">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="57122-273">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md"><span data-ttu-id="57122-274">Przegląd elementów podstawowych synchronizacji</span><span class="sxs-lookup"><span data-stu-id="57122-274">Overview of synchronization primitives</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public bool Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandle.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Function Reset () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; bool" Usage="eventWaitHandle.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="57122-275">Ustawia stan zdarzenia na Niesygnalizowane, powodując zablokowanie wątków.</span><span class="sxs-lookup"><span data-stu-id="57122-275">Sets the state of the event to nonsignaled, causing threads to block.</span></span></summary>
        <returns><span data-ttu-id="57122-276"><see langword="true" />Jeśli operacja się powiedzie; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="57122-276"><see langword="true" /> if the operation succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57122-277">Metoda została wcześniej wywołana na tym <see cref="T:System.Threading.EventWaitHandle" />. <see cref="M:System.Threading.WaitHandle.Close" /></span><span class="sxs-lookup"><span data-stu-id="57122-277">The <see cref="M:System.Threading.WaitHandle.Close" /> method was previously called on this <see cref="T:System.Threading.EventWaitHandle" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md"><span data-ttu-id="57122-278">Przegląd elementów podstawowych synchronizacji</span><span class="sxs-lookup"><span data-stu-id="57122-278">Overview of synchronization primitives</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public bool Set ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Set() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandle.Set" />
      <MemberSignature Language="VB.NET" Value="Public Function Set () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Set();" />
      <MemberSignature Language="F#" Value="member this.Set : unit -&gt; bool" Usage="eventWaitHandle.Set " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="57122-279">Ustawia stan zdarzenia, które ma być sygnalizowane przez co najmniej jeden oczekujący wątek.</span><span class="sxs-lookup"><span data-stu-id="57122-279">Sets the state of the event to signaled, allowing one or more waiting threads to proceed.</span></span></summary>
        <returns><span data-ttu-id="57122-280"><see langword="true" />Jeśli operacja się powiedzie; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="57122-280"><see langword="true" /> if the operation succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57122-281">W przypadku <xref:System.Threading.EventWaitHandle> elementu <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> <xref:System.Threading.AutoResetEvent> with<xref:System.Threading.EventWaitHandle.Set%2A> (łącznie) metoda zwalnia pojedynczy wątek.</span><span class="sxs-lookup"><span data-stu-id="57122-281">For an <xref:System.Threading.EventWaitHandle> with <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> (including <xref:System.Threading.AutoResetEvent>), the <xref:System.Threading.EventWaitHandle.Set%2A> method releases a single thread.</span></span> <span data-ttu-id="57122-282">Jeśli nie ma oczekujących wątków, dojście oczekiwania zostanie sygnalizowane do momentu, aż wątek podejmie próbę oczekiwania na niego lub <xref:System.Threading.EventWaitHandle.Reset%2A> do momentu wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="57122-282">If there are no waiting threads, the wait handle remains signaled until a thread attempts to wait on it, or until its <xref:System.Threading.EventWaitHandle.Reset%2A> method is called.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="57122-283">Nie ma gwarancji, że każde wywołanie <xref:System.Threading.EventWaitHandle.Set%2A> metody zwolni wątek z, <xref:System.Threading.EventWaitHandle> którego tryb resetowania to <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="57122-283">There is no guarantee that every call to the <xref:System.Threading.EventWaitHandle.Set%2A> method will release a thread from an <xref:System.Threading.EventWaitHandle> whose reset mode is <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType>.</span></span> <span data-ttu-id="57122-284">Jeśli dwa wywołania są zbyt blisko siebie, więc drugie wywołanie następuje przed zwolnieniem wątku, zostanie wydane tylko jeden wątek.</span><span class="sxs-lookup"><span data-stu-id="57122-284">If two calls are too close together, so that the second call occurs before a thread has been released, only one thread is released.</span></span> <span data-ttu-id="57122-285">Jest tak, jakby drugie wywołanie nie było wykonywane.</span><span class="sxs-lookup"><span data-stu-id="57122-285">It is as if the second call did not happen.</span></span> <span data-ttu-id="57122-286">Ponadto, jeśli <xref:System.Threading.EventWaitHandle.Set%2A> jest wywoływana, gdy nie ma żadnych wątków oczekujących <xref:System.Threading.EventWaitHandle> i jest już sygnalizowane, wywołanie nie ma żadnego wpływu.</span><span class="sxs-lookup"><span data-stu-id="57122-286">Also, if <xref:System.Threading.EventWaitHandle.Set%2A> is called when there are no threads waiting and the <xref:System.Threading.EventWaitHandle> is already signaled, the call has no effect.</span></span>  
  
 <span data-ttu-id="57122-287">W przypadku <xref:System.Threading.EventWaitHandle> elementu <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> with ( <xref:System.Threading.ManualResetEvent> łącznie)<xref:System.Threading.EventWaitHandle.Reset%2A> wywoływanie metodypozostawiadojścieoczekiwaniawstaniezasygnalizowaniadomomentuwywołaniametody.<xref:System.Threading.EventWaitHandle.Set%2A></span><span class="sxs-lookup"><span data-stu-id="57122-287">For an <xref:System.Threading.EventWaitHandle> with <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> (including <xref:System.Threading.ManualResetEvent>), calling the <xref:System.Threading.EventWaitHandle.Set%2A> method leaves the wait handle in a signaled state until its <xref:System.Threading.EventWaitHandle.Reset%2A> method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57122-288">Poniższy przykład kodu używa przeciążenia metody <xref:System.Threading.WaitHandle.SignalAndWait%28System.Threading.WaitHandle%2CSystem.Threading.WaitHandle%29> , aby umożliwić głównemu wątkowi sygnalizowanie zablokowanego wątku, a następnie zaczekać, aż wątek zakończy zadanie.</span><span class="sxs-lookup"><span data-stu-id="57122-288">The following code example uses the <xref:System.Threading.WaitHandle.SignalAndWait%28System.Threading.WaitHandle%2CSystem.Threading.WaitHandle%29> method overload to allow the main thread to signal a blocked thread and then wait until the thread finishes a task.</span></span>  
  
 <span data-ttu-id="57122-289">Przykład rozpoczyna pięć wątków i umożliwia ich zablokowanie przy <xref:System.Threading.EventWaitHandle> <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> użyciu flagi, a następnie zwalnia jeden wątek za każdym razem, gdy użytkownik naciśnie klawisz ENTER.</span><span class="sxs-lookup"><span data-stu-id="57122-289">The example starts five threads and allows them to block on an <xref:System.Threading.EventWaitHandle> created with the <xref:System.Threading.EventResetMode.AutoReset?displayProperty=nameWithType> flag, then releases one thread each time the user presses the ENTER key.</span></span> <span data-ttu-id="57122-290">W tym przykładzie kolejka będzie kolejkować kolejne pięć wątków i zwalnia <xref:System.Threading.EventWaitHandle> je wszystkie przy <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> użyciu flagi utworzony z flagą.</span><span class="sxs-lookup"><span data-stu-id="57122-290">The example then queues another five threads and releases them all using an <xref:System.Threading.EventWaitHandle> created with the <xref:System.Threading.EventResetMode.ManualReset?displayProperty=nameWithType> flag.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/CS/source.cs#1)]
 [!code-vb[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57122-291">Metoda została wcześniej wywołana na tym <see cref="T:System.Threading.EventWaitHandle" />. <see cref="M:System.Threading.WaitHandle.Close" /></span><span class="sxs-lookup"><span data-stu-id="57122-291">The <see cref="M:System.Threading.WaitHandle.Close" /> method was previously called on this <see cref="T:System.Threading.EventWaitHandle" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md"><span data-ttu-id="57122-292">Przegląd elementów podstawowych synchronizacji</span><span class="sxs-lookup"><span data-stu-id="57122-292">Overview of synchronization primitives</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.Security.AccessControl.EventWaitHandleSecurity eventSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.Security.AccessControl.EventWaitHandleSecurity eventSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandle.SetAccessControl(System.Security.AccessControl.EventWaitHandleSecurity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessControl (eventSecurity As EventWaitHandleSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::Security::AccessControl::EventWaitHandleSecurity ^ eventSecurity);" />
      <MemberSignature Language="F#" Value="member this.SetAccessControl : System.Security.AccessControl.EventWaitHandleSecurity -&gt; unit" Usage="eventWaitHandle.SetAccessControl eventSecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSecurity" Type="System.Security.AccessControl.EventWaitHandleSecurity" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="eventSecurity"><span data-ttu-id="57122-293"><see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> Obiekt reprezentujący zabezpieczenia kontroli dostępu, który ma zostać zastosowany do nazwanego zdarzenia systemowego.</span><span class="sxs-lookup"><span data-stu-id="57122-293">An <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> object that represents the access control security to be applied to the named system event.</span></span></param>
        <summary><span data-ttu-id="57122-294">Ustawia zabezpieczenia kontroli dostępu dla nazwanego zdarzenia systemowego.</span><span class="sxs-lookup"><span data-stu-id="57122-294">Sets the access control security for a named system event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57122-295">Użytkownik musi mieć <xref:System.Security.AccessControl.EventWaitHandleRights.ChangePermissions?displayProperty=nameWithType> uprawnienia do wywołania tej metody, a zdarzenie musi być otwarte <xref:System.Security.AccessControl.EventWaitHandleRights.ChangePermissions?displayProperty=nameWithType> z flagą.</span><span class="sxs-lookup"><span data-stu-id="57122-295">The user must have <xref:System.Security.AccessControl.EventWaitHandleRights.ChangePermissions?displayProperty=nameWithType> rights to call this method, and the event must have been opened with the <xref:System.Security.AccessControl.EventWaitHandleRights.ChangePermissions?displayProperty=nameWithType> flag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57122-296">Poniższy przykład kodu demonstruje zachowanie międzyprocesowe nazwanego zdarzenia systemowego z zabezpieczeniami kontroli dostępu.</span><span class="sxs-lookup"><span data-stu-id="57122-296">The following code example demonstrates the cross-process behavior of a named system event with access control security.</span></span> <span data-ttu-id="57122-297">W przykładzie zastosowano <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29> Przeciążenie metody do testowania pod kątem istnienia nazwanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="57122-297">The example uses the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29> method overload to test for the existence of a named event.</span></span>  
  
 <span data-ttu-id="57122-298">Jeśli zdarzenie nie istnieje, jest tworzone z zastosowaniem początkowego prawa własności i zabezpieczenia kontroli dostępu, które odmówi bieżącego użytkownika prawo do użycia zdarzenia, ale przyznaje prawo do odczytu i zmiany uprawnień do tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="57122-298">If the event does not exist, it is created with initial ownership and access control security that denies the current user the right to use the event, but grants the right to read and change permissions on the event.</span></span>  
  
 <span data-ttu-id="57122-299">W przypadku uruchomienia skompilowanego przykładu z dwóch poleceń systemu Windows druga kopia spowoduje zgłoszenie wyjątku naruszenia zasad dostępu w wywołaniu <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29>.</span><span class="sxs-lookup"><span data-stu-id="57122-299">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29>.</span></span> <span data-ttu-id="57122-300">Przechwycono wyjątek, a w przykładzie zastosowano <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> Przeciążenie metody do oczekiwania na zdarzenie z prawami wymaganymi do odczytu i zmiany uprawnień.</span><span class="sxs-lookup"><span data-stu-id="57122-300">The exception is caught, and the example uses the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> method overload to wait on the event with the rights needed to read and change the permissions.</span></span>  
  
 <span data-ttu-id="57122-301">Po zmianie uprawnień przy użyciu <xref:System.Threading.EventWaitHandle.SetAccessControl%2A> metody zdarzenie jest otwierane z prawami wymaganymi do jego zaczekania i zasygnalizowaniem.</span><span class="sxs-lookup"><span data-stu-id="57122-301">After the permissions are changed, using the <xref:System.Threading.EventWaitHandle.SetAccessControl%2A> method, the event is opened with the rights required to wait on it and signal it.</span></span> <span data-ttu-id="57122-302">W przypadku uruchomienia skompilowanego przykładu z trzeciego okna poleceń, przykład zostanie uruchomiony przy użyciu nowych uprawnień.</span><span class="sxs-lookup"><span data-stu-id="57122-302">If you run the compiled example from a third command window, the example runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/CS/source.cs#1)]
 [!code-vb[System.Threading.EventWaitHandle.ctor named 5#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.EventWaitHandle.ctor named 5/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57122-303"><paramref name="eventSecurity" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="57122-303"><paramref name="eventSecurity" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="57122-304">Użytkownik nie ma <see cref="F:System.Security.AccessControl.EventWaitHandleRights.ChangePermissions" />.</span><span class="sxs-lookup"><span data-stu-id="57122-304">The user does not have <see cref="F:System.Security.AccessControl.EventWaitHandleRights.ChangePermissions" />.</span></span>  
  
<span data-ttu-id="57122-305">—lub—</span><span class="sxs-lookup"><span data-stu-id="57122-305">-or-</span></span> 
<span data-ttu-id="57122-306">Zdarzenie nie zostało otwarte przy użyciu <see cref="F:System.Security.AccessControl.EventWaitHandleRights.ChangePermissions" />.</span><span class="sxs-lookup"><span data-stu-id="57122-306">The event was not opened with <see cref="F:System.Security.AccessControl.EventWaitHandleRights.ChangePermissions" />.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="57122-307">Bieżący <see cref="T:System.Threading.EventWaitHandle" /> obiekt nie reprezentuje nazwanego zdarzenia systemowego.</span><span class="sxs-lookup"><span data-stu-id="57122-307">The current <see cref="T:System.Threading.EventWaitHandle" /> object does not represent a named system event.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57122-308">Metoda została wcześniej wywołana na tym <see cref="T:System.Threading.EventWaitHandle" />. <see cref="M:System.Threading.WaitHandle.Close" /></span><span class="sxs-lookup"><span data-stu-id="57122-308">The <see cref="M:System.Threading.WaitHandle.Close" /> method was previously called on this <see cref="T:System.Threading.EventWaitHandle" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md"><span data-ttu-id="57122-309">Przegląd elementów podstawowych synchronizacji</span><span class="sxs-lookup"><span data-stu-id="57122-309">Overview of synchronization primitives</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryOpenExisting">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="57122-310">Otwiera określone nazwane zdarzenie synchronizacji, jeśli już istnieje, i zwraca wartość wskazującą, czy operacja zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="57122-310">Opens a specified named synchronization event, if it already exists, and returns a value that indicates whether the operation succeeded.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryOpenExisting">
      <MemberSignature Language="C#" Value="public static bool TryOpenExisting (string name, out System.Threading.EventWaitHandle result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryOpenExisting(string name, [out] class System.Threading.EventWaitHandle&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandle.TryOpenExisting(System.String,System.Threading.EventWaitHandle@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryOpenExisting (name As String, ByRef result As EventWaitHandle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryOpenExisting(System::String ^ name, [Runtime::InteropServices::Out] System::Threading::EventWaitHandle ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryOpenExisting : string *  -&gt; bool" Usage="System.Threading.EventWaitHandle.TryOpenExisting (name, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Threading.EventWaitHandle" RefType="out" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="57122-311">Nazwa zdarzenia synchronizacji systemu do otwarcia.</span><span class="sxs-lookup"><span data-stu-id="57122-311">The name of the system synchronization event to open.</span></span></param>
        <param name="result"><span data-ttu-id="57122-312">Gdy ta metoda zwraca, zawiera <see cref="T:System.Threading.EventWaitHandle" /> obiekt, który reprezentuje nazwane zdarzenie synchronizacji, jeśli wywołanie zakończyło się powodzeniem lub <see langword="null" /> wywołanie nie powiodło się.</span><span class="sxs-lookup"><span data-stu-id="57122-312">When this method returns, contains a <see cref="T:System.Threading.EventWaitHandle" /> object that represents the named synchronization event if the call succeeded, or <see langword="null" /> if the call failed.</span></span> <span data-ttu-id="57122-313">Ten parametr jest traktowany jako niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="57122-313">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="57122-314">Otwiera określone nazwane zdarzenie synchronizacji, jeśli już istnieje, i zwraca wartość wskazującą, czy operacja zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="57122-314">Opens the specified named synchronization event, if it already exists, and returns a value that indicates whether the operation succeeded.</span></span></summary>
        <returns><span data-ttu-id="57122-315"><see langword="true" />Jeśli nazwane zdarzenie synchronizacji zostało pomyślnie otwarte; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="57122-315"><see langword="true" /> if the named synchronization event was opened successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57122-316">Jeśli nazwane zdarzenie synchronizacji nie istnieje, ta metoda nie zostanie utworzona.</span><span class="sxs-lookup"><span data-stu-id="57122-316">If the named synchronization event does not exist, this method does not create it.</span></span> <span data-ttu-id="57122-317">Aby utworzyć zdarzenie systemowe, gdy jeszcze nie istnieje, użyj jednego z <xref:System.Threading.EventWaitHandle.%23ctor%2A> konstruktorów, które `name` mają parametr.</span><span class="sxs-lookup"><span data-stu-id="57122-317">To create the system event when it does not already exist, use one of the <xref:System.Threading.EventWaitHandle.%23ctor%2A> constructors that has a `name` parameter.</span></span>  
  
 <span data-ttu-id="57122-318">Jeśli nie masz pewności, czy nazwane zdarzenie synchronizacji istnieje, użyj tego przeciążenia metody zamiast <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29> przeciążenia metody, które zgłasza wyjątek, jeśli zdarzenie synchronizacji nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="57122-318">If you are uncertain whether a named synchronization event exists, use this method overload instead of the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%29> method overload, which throws an exception if the synchronization event does not exist.</span></span>  
  
 <span data-ttu-id="57122-319">To Przeciążenie metody jest równoważne wywołaniem <xref:System.Threading.EventWaitHandle.TryOpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%2CSystem.Threading.EventWaitHandle%40%29> przeciążenia metody i określaniem <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> i <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> prawami, połączonymi przy użyciu bitowej lub operacji.</span><span class="sxs-lookup"><span data-stu-id="57122-319">This method overload is equivalent to calling the <xref:System.Threading.EventWaitHandle.TryOpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%2CSystem.Threading.EventWaitHandle%40%29> method overload and specifying <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> and <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> rights, combined by using the bitwise OR operation.</span></span> <span data-ttu-id="57122-320">Określenie flagi pozwala wątek czekać na nazwane zdarzenie systemowe, a <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> określenie flagi umożliwia wątek wywoływanie <xref:System.Threading.EventWaitHandle.Set%2A> metod i <xref:System.Threading.EventWaitHandle.Reset%2A>. <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="57122-320">Specifying the <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> flag allows a thread to wait on the named system event, and specifying the <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> flag allows a thread to call the <xref:System.Threading.EventWaitHandle.Set%2A> and <xref:System.Threading.EventWaitHandle.Reset%2A> methods.</span></span>  
  
 <span data-ttu-id="57122-321">Wiele wywołań tej metody, które używają tej samej wartości dla `name` niekoniecznie zwraca ten sam <xref:System.Threading.EventWaitHandle> obiekt, nawet jeśli zwracane obiekty reprezentują to samo nazwane zdarzenie systemowe.</span><span class="sxs-lookup"><span data-stu-id="57122-321">Multiple calls to this method that use the same value for `name` do not necessarily return the same <xref:System.Threading.EventWaitHandle> object, even though the objects that are returned represent the same named system event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="57122-322"><paramref name="name" />jest pustym ciągiem.</span><span class="sxs-lookup"><span data-stu-id="57122-322"><paramref name="name" /> is an empty string.</span></span>  
  
<span data-ttu-id="57122-323">—lub—</span><span class="sxs-lookup"><span data-stu-id="57122-323">-or-</span></span> 
 <span data-ttu-id="57122-324"><paramref name="name" />jest dłuższa niż 260 znaków.</span><span class="sxs-lookup"><span data-stu-id="57122-324"><paramref name="name" /> is longer than 260 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57122-325"><paramref name="name" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="57122-325"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57122-326">Wystąpił błąd Win32.</span><span class="sxs-lookup"><span data-stu-id="57122-326">A Win32 error occurred.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="57122-327">Nazwane zdarzenie istnieje, ale użytkownik nie ma żądanego dostępu do zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="57122-327">The named event exists, but the user does not have the desired security access.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="57122-328">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="57122-328">requires full trust for the immediate caller.</span></span> <span data-ttu-id="57122-329">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="57122-329">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="TryOpenExisting">
      <MemberSignature Language="C#" Value="public static bool TryOpenExisting (string name, System.Security.AccessControl.EventWaitHandleRights rights, out System.Threading.EventWaitHandle result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryOpenExisting(string name, valuetype System.Security.AccessControl.EventWaitHandleRights rights, [out] class System.Threading.EventWaitHandle&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandle.TryOpenExisting(System.String,System.Security.AccessControl.EventWaitHandleRights,System.Threading.EventWaitHandle@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryOpenExisting (name As String, rights As EventWaitHandleRights, ByRef result As EventWaitHandle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryOpenExisting(System::String ^ name, System::Security::AccessControl::EventWaitHandleRights rights, [Runtime::InteropServices::Out] System::Threading::EventWaitHandle ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryOpenExisting : string * System.Security.AccessControl.EventWaitHandleRights *  -&gt; bool" Usage="System.Threading.EventWaitHandle.TryOpenExisting (name, rights, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="rights" Type="System.Security.AccessControl.EventWaitHandleRights" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Threading.EventWaitHandle" RefType="out" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="57122-330">Nazwa zdarzenia synchronizacji systemu do otwarcia.</span><span class="sxs-lookup"><span data-stu-id="57122-330">The name of the system synchronization event to open.</span></span></param>
        <param name="rights"><span data-ttu-id="57122-331">Bitowa kombinacja wartości wyliczenia, które reprezentują żądany dostęp do zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="57122-331">A bitwise combination of the enumeration values that represent the desired security access.</span></span></param>
        <param name="result"><span data-ttu-id="57122-332">Gdy ta metoda zwraca, zawiera <see cref="T:System.Threading.EventWaitHandle" /> obiekt, który reprezentuje nazwane zdarzenie synchronizacji, jeśli wywołanie zakończyło się powodzeniem lub <see langword="null" /> wywołanie nie powiodło się.</span><span class="sxs-lookup"><span data-stu-id="57122-332">When this method returns, contains a <see cref="T:System.Threading.EventWaitHandle" /> object that represents the named synchronization event if the call succeeded, or <see langword="null" /> if the call failed.</span></span> <span data-ttu-id="57122-333">Ten parametr jest traktowany jako niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="57122-333">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="57122-334">Otwiera określone nazwane zdarzenie synchronizacji, jeśli już istnieje, z żądanym dostępem zabezpieczeń i zwraca wartość wskazującą, czy operacja zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="57122-334">Opens the specified named synchronization event, if it already exists, with the desired security access, and returns a value that indicates whether the operation succeeded.</span></span></summary>
        <returns><span data-ttu-id="57122-335"><see langword="true" />Jeśli nazwane zdarzenie synchronizacji zostało pomyślnie otwarte; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="57122-335"><see langword="true" /> if the named synchronization event was opened successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57122-336">Jeśli nazwane zdarzenie synchronizacji nie istnieje, ta metoda nie zostanie utworzona.</span><span class="sxs-lookup"><span data-stu-id="57122-336">If the named synchronization event does not exist, this method does not create it.</span></span> <span data-ttu-id="57122-337">Aby utworzyć zdarzenie systemowe, gdy jeszcze nie istnieje, użyj jednego z <xref:System.Threading.EventWaitHandle.%23ctor%2A> konstruktorów, które `name` mają parametr.</span><span class="sxs-lookup"><span data-stu-id="57122-337">To create the system event when it does not already exist, use one of the <xref:System.Threading.EventWaitHandle.%23ctor%2A> constructors that has a `name` parameter.</span></span>  
  
 <span data-ttu-id="57122-338">Jeśli nie masz pewności, czy nazwane zdarzenie synchronizacji istnieje, użyj tego przeciążenia metody zamiast <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> przeciążenia metody, które zgłasza wyjątek, jeśli zdarzenie synchronizacji nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="57122-338">If you are uncertain whether a named synchronization event exists, use this method overload instead of the <xref:System.Threading.EventWaitHandle.OpenExisting%28System.String%2CSystem.Security.AccessControl.EventWaitHandleRights%29> method overload, which throws an exception if the synchronization event does not exist.</span></span>  
  
 <span data-ttu-id="57122-339"><xref:System.Threading.EventWaitHandle.Reset%2A> <xref:System.Threading.EventWaitHandle.Set%2A> <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> Parametr musi <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> zawierać flagę, aby umożliwić wątkom oczekiwanie na zdarzenie, oraz flagę umożliwiającą wątkom wywoływanie metod i. `rights`</span><span class="sxs-lookup"><span data-stu-id="57122-339">The `rights` parameter must include the <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> flag to allow threads to wait on the event, and the <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> flag to allow threads to call the <xref:System.Threading.EventWaitHandle.Set%2A> and <xref:System.Threading.EventWaitHandle.Reset%2A> methods.</span></span>  
  
 <span data-ttu-id="57122-340">Wiele wywołań tej metody, które używają tej samej wartości dla `name` niekoniecznie zwraca ten sam <xref:System.Threading.EventWaitHandle> obiekt, nawet jeśli zwracane obiekty reprezentują to samo nazwane zdarzenie systemowe.</span><span class="sxs-lookup"><span data-stu-id="57122-340">Multiple calls to this method that use the same value for `name` do not necessarily return the same <xref:System.Threading.EventWaitHandle> object, even though the objects that are returned represent the same named system event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="57122-341"><paramref name="name" />jest pustym ciągiem.</span><span class="sxs-lookup"><span data-stu-id="57122-341"><paramref name="name" /> is an empty string.</span></span>  
  
<span data-ttu-id="57122-342">—lub—</span><span class="sxs-lookup"><span data-stu-id="57122-342">-or-</span></span> 
 <span data-ttu-id="57122-343"><paramref name="name" />jest dłuższa niż 260 znaków.</span><span class="sxs-lookup"><span data-stu-id="57122-343"><paramref name="name" /> is longer than 260 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57122-344"><paramref name="name" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="57122-344"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="57122-345">Wystąpił błąd Win32.</span><span class="sxs-lookup"><span data-stu-id="57122-345">A Win32 error occurred.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="57122-346">Nazwane zdarzenie istnieje, ale użytkownik nie ma żądanego dostępu do zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="57122-346">The named event exists, but the user does not have the desired security access.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="57122-347">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="57122-347">requires full trust for the immediate caller.</span></span> <span data-ttu-id="57122-348">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="57122-348">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>
