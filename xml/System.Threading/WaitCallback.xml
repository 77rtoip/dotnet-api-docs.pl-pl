<Type Name="WaitCallback" FullName="System.Threading.WaitCallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c971c6ff730ee4e62d7280c5bffa17634a0ecf8f" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37754559" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void WaitCallback(object state);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed WaitCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.WaitCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub WaitCallback(state As Object)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void WaitCallback(System::Object ^ state);" />
  <TypeSignature Language="F#" Value="type WaitCallback = delegate of obj -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.ThreadPool</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="state" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="state">Obiekt zawierający informacje używane przez metodę wywołania zwrotnego.</param>
    <summary>Reprezentuje metodę wywołania zwrotnego, który ma być wykonane przez wątku z puli wątków.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Threading.WaitCallback> reprezentuje metodę wywołania zwrotnego, która ma zostać wykonany na <xref:System.Threading.ThreadPool> wątku. Utwórz delegata, przekazując metodę wywołania zwrotnego do <xref:System.Threading.WaitCallback> konstruktora. Metoda musi mieć podpis, pokazano poniżej.  
  
 Zadania do wykonania w kolejce przez przekazanie <xref:System.Threading.WaitCallback> delegować <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType>. Metoda wywołania zwrotnego jest wykonywana po udostępnieniu wątku z puli wątków.  
  
> [!NOTE]
>  Użytkowników programu Visual Basic można pominąć <xref:System.Threading.WaitCallback> Konstruktor i po prostu użyj `AddressOf` operator przy przekazywaniu Metoda wywołania zwrotnego do <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A>. Visual Basic automatycznie wywołuje konstruktor poprawnym delegacie.  
  
 Jeśli chcesz przekazać informacje do metody wywołania zwrotnego, obiekt, który zawiera informacje potrzebne do tworzenia i przekazać ją do <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A> podczas kolejkowania zadania do wykonania. Każdorazowo, wykonuje metodę wywołania zwrotnego, `state` parametr zawiera ten obiekt.  
  
 Aby uzyskać więcej informacji na temat za pomocą wywołania zwrotne do synchronizacji wątków z puli wątków, zobacz [puli wątków zarządzanych](~/docs/standard/threading/the-managed-thread-pool.md).  
  
   
  
## Examples  
 Ta sekcja zawiera dwa przykłady. W pierwszym przykładzie pokazano, jak można kolejkować prostych zadań do wykonania w puli wątków.  
  
 Drugi przykład pokazuje, jak zadania w kolejce i przekazywania informacji do niej.  
  
 **Przykład 1**  
  
 W tym przykładzie pokazano, jak używać <xref:System.Threading.WaitCallback> delegata do kolejki zadań do wykonania w puli wątków. Przykład kodu wykorzystuje <xref:System.Threading.ThreadPool.QueueUserWorkItem%28System.Threading.WaitCallback%29?displayProperty=nameWithType> przeciążenia metody do kolejki zadań, która jest reprezentowana przez <xref:System.Threading.WaitCallback> to opakowuje `ThreadProc` metod w celu wykonania, gdy wątek stanie się dostępny. Nie informacji o zadaniu jest dostarczany za pomocą tego przeciążenia. W związku z tym, informacje, które są dostępne dla `ThreadProc` metoda jest ograniczona do obiektu, którego należy metoda.  
  
 [!code-cpp[System.Threading.ThreadPool QueueUserWorkItem0#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem0/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ThreadPool QueueUserWorkItem0#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem0/CS/source.cs#1)]
 [!code-vb[System.Threading.ThreadPool QueueUserWorkItem0#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem0/VB/source.vb#1)]  
  
 **Przykład 2**  
  
 W tym przykładzie pokazano, jak utworzyć obiekt, który zawiera informacje o zadaniu. Ilustruje też sposób przekazywania obiektu do zadania, które znajduje się w kolejce do wykonania w puli wątków.  
  
 [!code-cpp[System.Threading.ThreadPool QueueUserWorkItem1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem1/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ThreadPool QueueUserWorkItem1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem1/CS/source.cs#1)]
 [!code-vb[System.Threading.ThreadPool QueueUserWorkItem1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem1/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.ThreadPool" />
  </Docs>
</Type>