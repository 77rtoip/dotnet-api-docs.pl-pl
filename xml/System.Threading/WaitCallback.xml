<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WaitCallback.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a38353245326738dcba09700a654648f37402fa4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a38353245326738dcba09700a654648f37402fa4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Threading.WaitCallback">
          <source>An object containing information to be used by the callback method.</source>
          <target state="translated">Obiekt zawierający informacje mają być używane przez metodę wywołania zwrotnego.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Threading.WaitCallback">
          <source>Represents a callback method to be executed by a thread pool thread.</source>
          <target state="translated">Reprezentuje metodę wywołania zwrotnego do wykonania wątku puli wątków.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source><ph id="ph1">&lt;xref:System.Threading.WaitCallback&gt;</ph> represents a callback method that you want to execute on a <ph id="ph2">&lt;xref:System.Threading.ThreadPool&gt;</ph> thread.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.WaitCallback&gt;</ph> reprezentuje metodę wywołania zwrotnego, która ma być wykonana na <ph id="ph2">&lt;xref:System.Threading.ThreadPool&gt;</ph> wątku.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source>Create the delegate by passing your callback method to the <ph id="ph1">&lt;xref:System.Threading.WaitCallback&gt;</ph> constructor.</source>
          <target state="translated">Tworzenie obiektu delegowanego przez przekazanie metodę wywołania zwrotnego do <ph id="ph1">&lt;xref:System.Threading.WaitCallback&gt;</ph> konstruktora.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source>Your method must have the signature shown here.</source>
          <target state="translated">Metodę musi mieć podpisu, pokazano poniżej.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source>Queue your task for execution by passing the <ph id="ph1">&lt;xref:System.Threading.WaitCallback&gt;</ph> delegate to <ph id="ph2">&lt;xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Zadania do wykonania w kolejce przez przekazanie <ph id="ph1">&lt;xref:System.Threading.WaitCallback&gt;</ph> przekazać <ph id="ph2">&lt;xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source>Your callback method executes when a thread pool thread becomes available.</source>
          <target state="translated">Metodę wywołania zwrotnego wykonuje po udostępnieniu wątku puli wątków.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source>Visual Basic users can omit the <ph id="ph1">&lt;xref:System.Threading.WaitCallback&gt;</ph> constructor, and simply use the <ph id="ph2">`AddressOf`</ph> operator when passing the callback method to <ph id="ph3">&lt;xref:System.Threading.ThreadPool.QueueUserWorkItem%2A&gt;</ph>.</source>
          <target state="translated">Użytkownicy programu Visual Basic można pominąć <ph id="ph1">&lt;xref:System.Threading.WaitCallback&gt;</ph> Konstruktor i po prostu użyj <ph id="ph2">`AddressOf`</ph> operator podczas przekazywania metody wywołania zwrotnego do <ph id="ph3">&lt;xref:System.Threading.ThreadPool.QueueUserWorkItem%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source>Visual Basic automatically calls the correct delegate constructor.</source>
          <target state="translated">Visual Basic automatycznie wywołuje konstruktor delegata poprawne.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source>If you want to pass information to your callback method, create an object that contains the necessary information and pass it to <ph id="ph1">&lt;xref:System.Threading.ThreadPool.QueueUserWorkItem%2A&gt;</ph> when you queue your task for execution.</source>
          <target state="translated">Jeśli do przekazywania informacji do metody wywołania zwrotnego należy utworzyć obiekt, który zawiera niezbędne informacje i przekaż go do <ph id="ph1">&lt;xref:System.Threading.ThreadPool.QueueUserWorkItem%2A&gt;</ph> gdy kolejka zadania do wykonania.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source>Each time your callback method executes, the <ph id="ph1">`state`</ph> parameter contains this object.</source>
          <target state="translated">Zawsze wykonuje metodę wywołania zwrotnego, <ph id="ph1">`state`</ph> parametr zawiera ten obiekt.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source>For more information about using callbacks to synchronize thread pool threads, see <bpt id="p1">[</bpt>The Managed Thread Pool<ept id="p1">](~/docs/standard/threading/the-managed-thread-pool.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji o używaniu wywołań zwrotnych do synchronizowania wątków z puli wątków, zobacz <bpt id="p1">[</bpt>puli wątków zarządzanych<ept id="p1">](~/docs/standard/threading/the-managed-thread-pool.md)</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source>This section contains two examples.</source>
          <target state="translated">Ta sekcja zawiera dwa przykłady.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source>The first example demonstrates how you can queue a simple task for execution by the thread pool.</source>
          <target state="translated">W pierwszym przykładzie pokazano, jak można dodać do kolejki prostych zadań do wykonania w puli wątków.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source>The second example demonstrates how you can queue a task and pass information to it.</source>
          <target state="translated">Drugim przykładzie pokazano, jak można w kolejce zadania i przekazywania informacji do niej.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source><bpt id="p1">**</bpt>Example 1<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Przykład 1<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source>This example shows how to use the <ph id="ph1">&lt;xref:System.Threading.WaitCallback&gt;</ph> delegate to queue a task for execution by the thread pool.</source>
          <target state="translated">Ten przykład przedstawia sposób użycia <ph id="ph1">&lt;xref:System.Threading.WaitCallback&gt;</ph> delegata do kolejki zadań do wykonania w puli wątków.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source>The code example uses the <ph id="ph1">&lt;xref:System.Threading.ThreadPool.QueueUserWorkItem%28System.Threading.WaitCallback%29?displayProperty=nameWithType&gt;</ph> method overload to queue a task, which is represented by a <ph id="ph2">&lt;xref:System.Threading.WaitCallback&gt;</ph> that wraps the <ph id="ph3">`ThreadProc`</ph> method, to execute when a thread becomes available.</source>
          <target state="translated">Przykład kodu wykorzystuje <ph id="ph1">&lt;xref:System.Threading.ThreadPool.QueueUserWorkItem%28System.Threading.WaitCallback%29?displayProperty=nameWithType&gt;</ph> przeciążenie metody można umieścić w kolejce zadań, która jest reprezentowana przez <ph id="ph2">&lt;xref:System.Threading.WaitCallback&gt;</ph> który opakowuje <ph id="ph3">`ThreadProc`</ph> metody do wykonania, gdy wątek staje się dostępna.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source>No task information is supplied with this overload.</source>
          <target state="translated">Informacje o zadaniu są dostarczane z tego przeciążenia.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source>Therefore, the information that is available to the <ph id="ph1">`ThreadProc`</ph> method is limited to the object the method belongs to.</source>
          <target state="translated">W związku z tym informacje, które są dostępne dla <ph id="ph1">`ThreadProc`</ph> metody jest ograniczona do metody należy do obiektu.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source><bpt id="p1">**</bpt>Example 2<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Przykład 2<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source>This example shows how to create an object that contains task information.</source>
          <target state="translated">W tym przykładzie przedstawiono sposób tworzenia obiektu, który zawiera informacje o zadaniu.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source>It also demonstrates how to pass that object to a task that is queued for execution by the thread pool.</source>
          <target state="translated">Ilustruje też sposób przekazywania tego obiektu do umieszczonych w kolejce do wykonania zadania w puli wątków.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>