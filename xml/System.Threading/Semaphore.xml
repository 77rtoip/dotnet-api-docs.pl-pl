<Type Name="Semaphore" FullName="System.Threading.Semaphore">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="47dc3c315c3032983e55c27b5310ada10bd2501f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36406836" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Semaphore : System.Threading.WaitHandle" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Semaphore extends System.Threading.WaitHandle" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Semaphore" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Semaphore&#xA;Inherits WaitHandle" />
  <TypeSignature Language="C++ CLI" Value="public ref class Semaphore sealed : System::Threading::WaitHandle" />
  <TypeSignature Language="F#" Value="type Semaphore = class&#xA;    inherit WaitHandle" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Threading.WaitHandle</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d0276-101">Ogranicza liczbę wątków, które mogą uzyskać dostęp do zasobu lub pulę zasobów jednocześnie.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d0276-101">Limits the number of threads that can access a resource or pool of resources concurrently.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0276-102">Użyj <xref:System.Threading.Semaphore> klasę, aby kontrolować dostęp do puli zasobów.</span><span class="sxs-lookup"><span data-stu-id="d0276-102">Use the <xref:System.Threading.Semaphore> class to control access to a pool of resources.</span></span> <span data-ttu-id="d0276-103">Wątki wprowadź semafora przez wywołanie metody <xref:System.Threading.WaitHandle.WaitOne%2A> metodę, która jest odziedziczone <xref:System.Threading.WaitHandle> klasy, a następnie zwolnij semafora przez wywołanie metody <xref:System.Threading.Semaphore.Release%2A> — metoda.</span><span class="sxs-lookup"><span data-stu-id="d0276-103">Threads enter the semaphore by calling the <xref:System.Threading.WaitHandle.WaitOne%2A> method, which is inherited from the <xref:System.Threading.WaitHandle> class, and release the semaphore by calling the <xref:System.Threading.Semaphore.Release%2A> method.</span></span>  
  
 <span data-ttu-id="d0276-104">Licznik na semafora zostanie zmniejszona zawsze wątku wprowadza semafor i zwiększany, gdy wątek zwalnia semafora.</span><span class="sxs-lookup"><span data-stu-id="d0276-104">The count on a semaphore is decremented each time a thread enters the semaphore, and incremented when a thread releases the semaphore.</span></span> <span data-ttu-id="d0276-105">Jeśli licznik osiągnie wartość zero, kolejne żądania bloku, aż do semafora zwolnienia inne wątki.</span><span class="sxs-lookup"><span data-stu-id="d0276-105">When the count is zero, subsequent requests block until other threads release the semaphore.</span></span> <span data-ttu-id="d0276-106">Gdy wszystkie wątki zostały wydane semafora, wartość licznika jest wartość maksymalna określone podczas tworzenia semafora.</span><span class="sxs-lookup"><span data-stu-id="d0276-106">When all threads have released the semaphore, the count is at the maximum value specified when the semaphore was created.</span></span>  
  
 <span data-ttu-id="d0276-107">Nie gwarantuje kolejność, takich jak FIFO lub LIFO, w którym zablokowanych wątków wprowadź semafora nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="d0276-107">There is no guaranteed order, such as FIFO or LIFO, in which blocked threads enter the semaphore.</span></span>  
  
 <span data-ttu-id="d0276-108">Wątek można wprowadzić semafora wielokrotnie, wywołując <xref:System.Threading.WaitHandle.WaitOne%2A> metody wielokrotnie.</span><span class="sxs-lookup"><span data-stu-id="d0276-108">A thread can enter the semaphore multiple times, by calling the <xref:System.Threading.WaitHandle.WaitOne%2A> method repeatedly.</span></span> <span data-ttu-id="d0276-109">Aby zwolnić niektóre lub wszystkie te wpisy, można wywołać bez parametrów wątku <xref:System.Threading.Semaphore.Release> przeciążenie metody można wywołać wiele razy lub <xref:System.Threading.Semaphore.Release%28System.Int32%29> przeciążenie metody, która określa liczbę wpisów do zwolnienia.</span><span class="sxs-lookup"><span data-stu-id="d0276-109">To release some or all of these entries, the thread can call the parameterless <xref:System.Threading.Semaphore.Release> method overload multiple times, or it can call the <xref:System.Threading.Semaphore.Release%28System.Int32%29> method overload that specifies the number of entries to be released.</span></span>  
  
 <span data-ttu-id="d0276-110"><xref:System.Threading.Semaphore> Klasa nie obsługuje wymuszania tożsamość wątku na wywołania <xref:System.Threading.WaitHandle.WaitOne%2A> lub <xref:System.Threading.Semaphore.Release%2A>.</span><span class="sxs-lookup"><span data-stu-id="d0276-110">The <xref:System.Threading.Semaphore> class does not enforce thread identity on calls to <xref:System.Threading.WaitHandle.WaitOne%2A> or <xref:System.Threading.Semaphore.Release%2A>.</span></span> <span data-ttu-id="d0276-111">Odpowiada programisty upewnij się, że wątków nie zwalnia semafora zbyt wiele razy.</span><span class="sxs-lookup"><span data-stu-id="d0276-111">It is the programmer's responsibility to ensure that threads do not release the semaphore too many times.</span></span> <span data-ttu-id="d0276-112">Na przykład załóżmy, że maksymalna liczba dwóch i który wątku A i B wątku ma semafora zarówno wprowadź semafora.</span><span class="sxs-lookup"><span data-stu-id="d0276-112">For example, suppose a semaphore has a maximum count of two, and that thread A and thread B both enter the semaphore.</span></span> <span data-ttu-id="d0276-113">Jeśli to błąd programistyczny w wątku B powoduje go do wywołania <xref:System.Threading.Semaphore.Release%2A> dwa razy, zarówno wywołania powiodło się.</span><span class="sxs-lookup"><span data-stu-id="d0276-113">If a programming error in thread B causes it to call <xref:System.Threading.Semaphore.Release%2A> twice, both calls succeed.</span></span> <span data-ttu-id="d0276-114">Licznik na semafora jest pełny i gdy wątku A ostatecznie wywołuje <xref:System.Threading.Semaphore.Release%2A>, <xref:System.Threading.SemaphoreFullException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="d0276-114">The count on the semaphore is full, and when thread A eventually calls <xref:System.Threading.Semaphore.Release%2A>, a <xref:System.Threading.SemaphoreFullException> is thrown.</span></span>  
  
 <span data-ttu-id="d0276-115">Istnieją dwa typy semaforów: semaforów lokalnych i semaforów systemu o nazwie.</span><span class="sxs-lookup"><span data-stu-id="d0276-115">Semaphores are of two types: local semaphores and named system semaphores.</span></span> <span data-ttu-id="d0276-116">W przypadku utworzenia <xref:System.Threading.Semaphore> przy użyciu konstruktora akceptującego nazwy, jest on skojarzony z systemu operacyjnego semafor o tej nazwie.</span><span class="sxs-lookup"><span data-stu-id="d0276-116">If you create a <xref:System.Threading.Semaphore> object using a constructor that accepts a name, it is associated with an operating-system semaphore of that name.</span></span> <span data-ttu-id="d0276-117">O nazwie system semaforów są widoczne w systemie operacyjnym i może służyć do synchronizowania działania procesów.</span><span class="sxs-lookup"><span data-stu-id="d0276-117">Named system semaphores are visible throughout the operating system, and can be used to synchronize the activities of processes.</span></span> <span data-ttu-id="d0276-118">Możesz utworzyć wiele <xref:System.Threading.Semaphore> semafora systemu o nazwie obiekty reprezentujące takie same i można użyć <xref:System.Threading.Semaphore.OpenExisting%2A> otworzyć istniejącą metodę o nazwie semafora systemowego.</span><span class="sxs-lookup"><span data-stu-id="d0276-118">You can create multiple <xref:System.Threading.Semaphore> objects that represent the same named system semaphore, and you can use the <xref:System.Threading.Semaphore.OpenExisting%2A> method to open an existing named system semaphore.</span></span>  
  
 <span data-ttu-id="d0276-119">Semafor lokalny istnieje tylko w ramach procesu.</span><span class="sxs-lookup"><span data-stu-id="d0276-119">A local semaphore exists only within your process.</span></span> <span data-ttu-id="d0276-120">Może służyć za którymkolwiek wątku w procesie, który zawiera odwołanie do lokalnej <xref:System.Threading.Semaphore> obiektu.</span><span class="sxs-lookup"><span data-stu-id="d0276-120">It can be used by any thread in your process that has a reference to the local <xref:System.Threading.Semaphore> object.</span></span> <span data-ttu-id="d0276-121">Każdy <xref:System.Threading.Semaphore> obiekt jest oddzielny semafora lokalnego.</span><span class="sxs-lookup"><span data-stu-id="d0276-121">Each <xref:System.Threading.Semaphore> object is a separate local semaphore.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0276-122">Poniższy przykład kodu tworzy semafora maksymalnej liczby trzy i liczba początkowa zero.</span><span class="sxs-lookup"><span data-stu-id="d0276-122">The following code example creates a semaphore with a maximum count of three and an initial count of zero.</span></span> <span data-ttu-id="d0276-123">W przykładzie uruchomiono pięć wątków, które blokują oczekiwania semaforów.</span><span class="sxs-lookup"><span data-stu-id="d0276-123">The example starts five threads, which block waiting for the semaphore.</span></span> <span data-ttu-id="d0276-124">Korzysta z wątku głównego <xref:System.Threading.Semaphore.Release%28System.Int32%29> przeciążenie metody, aby zwiększyć licznik semafora do jego maksymalnej, umożliwiając trzech wątków na wejście do semafora.</span><span class="sxs-lookup"><span data-stu-id="d0276-124">The main thread uses the <xref:System.Threading.Semaphore.Release%28System.Int32%29> method overload to increase the semaphore count to its maximum, allowing three threads to enter the semaphore.</span></span> <span data-ttu-id="d0276-125">Każdy wątek używa <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> Poczekaj chwilę, symulacji pracy i wywołania metody <xref:System.Threading.Semaphore.Release> przeciążenie metody, aby zwolnić semafora.</span><span class="sxs-lookup"><span data-stu-id="d0276-125">Each thread uses the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method to wait for one second, to simulate work, and then calls the <xref:System.Threading.Semaphore.Release> method overload to release the semaphore.</span></span> <span data-ttu-id="d0276-126">Zawsze, gdy wydaniu semafora poprzedniej Licznik semafora jest wyświetlany.</span><span class="sxs-lookup"><span data-stu-id="d0276-126">Each time the semaphore is released, the previous semaphore count is displayed.</span></span> <span data-ttu-id="d0276-127">Użycie semafora śledzenie wiadomości konsoli.</span><span class="sxs-lookup"><span data-stu-id="d0276-127">Console messages track semaphore use.</span></span> <span data-ttu-id="d0276-128">Interwał symulowane pracy zwiększają się nieznacznie dla każdego wątku, aby ułatwić dane wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="d0276-128">The simulated work interval is increased slightly for each thread, to make the output easier to read.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="d0276-129">Ten typ jest bezpieczny wątkowo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d0276-129">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d0276-130">Inicjuje nowe wystąpienie klasy <see cref="T:System.Threading.Semaphore" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-130">Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Semaphore (int initialCount, int maximumCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCount, int32 maximumCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialCount As Integer, maximumCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Semaphore(int initialCount, int maximumCount);" />
      <MemberSignature Language="F#" Value="new System.Threading.Semaphore : int * int -&gt; System.Threading.Semaphore" Usage="new System.Threading.Semaphore (initialCount, maximumCount)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="initialCount" Type="System.Int32" />
        <Parameter Name="maximumCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="initialCount">
          <span data-ttu-id="d0276-131">Początkowa liczba żądań semafora, które mogą być przyznane jednocześnie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-131">The initial number of requests for the semaphore that can be granted concurrently.</span>
          </span>
        </param>
        <param name="maximumCount">
          <span data-ttu-id="d0276-132">Maksymalna liczba żądań semafora, które mogą być przyznane jednocześnie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-132">The maximum number of requests for the semaphore that can be granted concurrently.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0276-133">Inicjuje nowe wystąpienie klasy <see cref="T:System.Threading.Semaphore" /> Klasa początkowa liczba wpisów i maksymalną liczbę równoczesnych zapisów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-133">Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class, specifying the initial number of entries and the maximum number of concurrent entries.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0276-134">Ten konstruktor inicjuje semafora bez nazwy.</span><span class="sxs-lookup"><span data-stu-id="d0276-134">This constructor initializes an unnamed semaphore.</span></span> <span data-ttu-id="d0276-135">Wszystkie wątki wystąpienia takich semafora musi mieć odwołania do wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="d0276-135">All threads that use an instance of such a semaphore must have references to the instance.</span></span>  
  
 <span data-ttu-id="d0276-136">Jeśli `initialCount` jest mniejsza niż `maximumCount`, efekt jest taki sam jak, jeśli bieżący wątek wywołał <xref:System.Threading.WaitHandle.WaitOne%2A> (`maximumCount` minus `initialCount`) razy.</span><span class="sxs-lookup"><span data-stu-id="d0276-136">If `initialCount` is less than `maximumCount`, the effect is the same as if the current thread had called <xref:System.Threading.WaitHandle.WaitOne%2A> (`maximumCount` minus `initialCount`) times.</span></span> <span data-ttu-id="d0276-137">Jeśli nie chcesz zarezerwować żadnych wpisów dla wątku, który tworzy semafora, użyj tego samego numeru dla `maximumCount` i `initialCount`.</span><span class="sxs-lookup"><span data-stu-id="d0276-137">If you do not want to reserve any entries for the thread that creates the semaphore, use the same number for `maximumCount` and `initialCount`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0276-138">Poniższy przykład tworzy semafor o maksymalnej liczby trzech i liczba początkowa zero.</span><span class="sxs-lookup"><span data-stu-id="d0276-138">The following example creates a semaphore with a maximum count of three and an initial count of zero.</span></span> <span data-ttu-id="d0276-139">W przykładzie uruchomiono pięć wątków, które blokują oczekiwania semaforów.</span><span class="sxs-lookup"><span data-stu-id="d0276-139">The example starts five threads, which block waiting for the semaphore.</span></span> <span data-ttu-id="d0276-140">Korzysta z wątku głównego <xref:System.Threading.Semaphore.Release%28System.Int32%29> przeciążenie metody, aby zwiększyć licznik semafora do jego maksymalnej, umożliwiając trzech wątków na wejście do semafora.</span><span class="sxs-lookup"><span data-stu-id="d0276-140">The main thread uses the <xref:System.Threading.Semaphore.Release%28System.Int32%29> method overload to increase the semaphore count to its maximum, allowing three threads to enter the semaphore.</span></span> <span data-ttu-id="d0276-141">Każdy wątek używa <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> Poczekaj chwilę, symulacji pracy i wywołania metody <xref:System.Threading.Semaphore.Release> przeciążenie metody, aby zwolnić semafora.</span><span class="sxs-lookup"><span data-stu-id="d0276-141">Each thread uses the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method to wait for one second, to simulate work, and then calls the <xref:System.Threading.Semaphore.Release> method overload to release the semaphore.</span></span> <span data-ttu-id="d0276-142">Zawsze, gdy wydaniu semafora poprzedniej Licznik semafora jest wyświetlany.</span><span class="sxs-lookup"><span data-stu-id="d0276-142">Each time the semaphore is released, the previous semaphore count is displayed.</span></span> <span data-ttu-id="d0276-143">Użycie semafora śledzenie wiadomości konsoli.</span><span class="sxs-lookup"><span data-stu-id="d0276-143">Console messages track semaphore use.</span></span> <span data-ttu-id="d0276-144">Interwał symulowane pracy zwiększają się nieznacznie dla każdego wątku, aby ułatwić dane wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="d0276-144">The simulated work interval is increased slightly for each thread, to make the output easier to read.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d0276-145">
            <paramref name="initialCount" /> jest większa niż <paramref name="maximumCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-145">
              <paramref name="initialCount" /> is greater than <paramref name="maximumCount" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d0276-146">
            <paramref name="maximumCount" /> jest mniejsza niż 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-146">
              <paramref name="maximumCount" /> is less than 1.</span>
          </span>
          <span data-ttu-id="d0276-147">- lub - <paramref name="initialCount" /> jest mniejszy niż 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-147">-or-  <paramref name="initialCount" /> is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Semaphore (int initialCount, int maximumCount, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCount, int32 maximumCount, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialCount As Integer, maximumCount As Integer, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Semaphore(int initialCount, int maximumCount, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Threading.Semaphore : int * int * string -&gt; System.Threading.Semaphore" Usage="new System.Threading.Semaphore (initialCount, maximumCount, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialCount" Type="System.Int32" />
        <Parameter Name="maximumCount" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="initialCount">
          <span data-ttu-id="d0276-148">Początkowa liczba żądań semafora, które mogą być przyznane jednocześnie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-148">The initial number of requests for the semaphore that can be granted concurrently.</span>
          </span>
        </param>
        <param name="maximumCount">
          <span data-ttu-id="d0276-149">Maksymalna liczba żądań semafora, które mogą być przyznane jednocześnie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-149">The maximum number of requests for the semaphore that can be granted concurrently.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="d0276-150">Nazwa obiektu semafora systemu o nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-150">The name of a named system semaphore object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0276-151">Inicjuje nowe wystąpienie klasy <see cref="T:System.Threading.Semaphore" /> klasy, określenie początkowa liczba wpisów i maksymalną liczbę równoczesnych zapisów i opcjonalnie określając nazwę obiektu semafora systemu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-151">Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class, specifying the initial number of entries and the maximum number of concurrent entries, and optionally specifying the name of a system semaphore object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0276-152">Ten konstruktor inicjuje <xref:System.Threading.Semaphore> obiekt, który reprezentuje semafora systemu o nazwie.</span><span class="sxs-lookup"><span data-stu-id="d0276-152">This constructor initializes a <xref:System.Threading.Semaphore> object that represents a named system semaphore.</span></span> <span data-ttu-id="d0276-153">Możesz utworzyć wiele <xref:System.Threading.Semaphore> semafora systemu o nazwie obiekty reprezentujące takie same.</span><span class="sxs-lookup"><span data-stu-id="d0276-153">You can create multiple <xref:System.Threading.Semaphore> objects that represent the same named system semaphore.</span></span>  
  
 <span data-ttu-id="d0276-154">Jeśli semafora systemu o nazwie nie istnieje, jest on tworzony przy użyciu liczba początkowa i maksymalna liczba określona przez `initialCount` i `maximumCount`.</span><span class="sxs-lookup"><span data-stu-id="d0276-154">If the named system semaphore does not exist, it is created with the initial count and maximum count specified by `initialCount` and `maximumCount`.</span></span> <span data-ttu-id="d0276-155">Jeśli semafora systemu o nazwie już istnieje, `initialCount` i `maximumCount` nie są używane, mimo że nieprawidłowe wartości nadal powodują wyjątków.</span><span class="sxs-lookup"><span data-stu-id="d0276-155">If the named system semaphore already exists, `initialCount` and `maximumCount` are not used, although invalid values still cause exceptions.</span></span> <span data-ttu-id="d0276-156">Jeśli trzeba określić, czy semafor o nazwie system został utworzony, użyj <xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.String%2CSystem.Boolean%40%29> Konstruktor zamiast tego przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="d0276-156">If you need to determine whether or not a named system semaphore was created, use the <xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.String%2CSystem.Boolean%40%29> constructor overload instead.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d0276-157">Korzystając z tego przeciążenia konstruktora, zalecaną praktyką jest określenie tego samego numeru dla `initialCount` i `maximumCount`.</span><span class="sxs-lookup"><span data-stu-id="d0276-157">When you use this constructor overload, the recommended practice is to specify the same number for `initialCount` and `maximumCount`.</span></span> <span data-ttu-id="d0276-158">Jeśli `initialCount` jest mniejsza niż `maximumCount`i utworzeniu semafora systemu o nazwie, efekt jest taki sam jak, jeśli bieżący wątek wywołał <xref:System.Threading.WaitHandle.WaitOne%2A> (`maximumCount` minus `initialCount`) razy.</span><span class="sxs-lookup"><span data-stu-id="d0276-158">If `initialCount` is less than `maximumCount`, and a named system semaphore is created, the effect is the same as if the current thread had called <xref:System.Threading.WaitHandle.WaitOne%2A> (`maximumCount` minus `initialCount`) times.</span></span> <span data-ttu-id="d0276-159">Z tego przeciążenia konstruktora istnieje jednak nie można określić, czy semafor o nazwie system został utworzony.</span><span class="sxs-lookup"><span data-stu-id="d0276-159">However, with this constructor overload there is no way to determine whether a named system semaphore was created.</span></span>  
  
 <span data-ttu-id="d0276-160">Jeśli określisz `null` lub pusty ciąg `name`, semafora lokalnym jest tworzony tak, jakby były nazywane <xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%29> przeładowania konstruktora.</span><span class="sxs-lookup"><span data-stu-id="d0276-160">If you specify `null` or an empty string for `name`, a local semaphore is created, as if you had called the <xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%29> constructor overload.</span></span>  
  
 <span data-ttu-id="d0276-161">Ponieważ nazwanego semaforów są widoczne w systemie operacyjnym, ich może służyć do zapewnienia koordynacji wykorzystania zasobów przez granice procesu.</span><span class="sxs-lookup"><span data-stu-id="d0276-161">Because named semaphores are visible throughout the operating system, they can be used to coordinate resource use across process boundaries.</span></span>  
  
 <span data-ttu-id="d0276-162">Jeśli chcesz dowiedzieć się, czy istnieje semafor o nazwie system, należy użyć <xref:System.Threading.Semaphore.OpenExisting%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="d0276-162">If you want to find out whether a named system semaphore exists, use the <xref:System.Threading.Semaphore.OpenExisting%2A> method.</span></span> <span data-ttu-id="d0276-163"><xref:System.Threading.Semaphore.OpenExisting%2A> Metoda próbuje otworzyć istniejące o nazwie semafor i zgłasza wyjątek, jeśli nie istnieje semafor systemu.</span><span class="sxs-lookup"><span data-stu-id="d0276-163">The <xref:System.Threading.Semaphore.OpenExisting%2A> method attempts to open an existing named semaphore, and throws an exception if the system semaphore does not exist.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0276-164">W poniższym przykładzie kodu pokazano zachowanie międzyprocesowa semafora nazwanego.</span><span class="sxs-lookup"><span data-stu-id="d0276-164">The following code example demonstrates the cross-process behavior of a named semaphore.</span></span> <span data-ttu-id="d0276-165">Semafor o nazwie jest tworzona z maksymalną liczbę pięciu i liczba początkowa pięć.</span><span class="sxs-lookup"><span data-stu-id="d0276-165">The example creates a named semaphore with a maximum count of five and an initial count of five.</span></span> <span data-ttu-id="d0276-166">Program udostępnia trzy wywołania <xref:System.Threading.WaitHandle.WaitOne%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="d0276-166">The program makes three calls to the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span> <span data-ttu-id="d0276-167">W związku z tym jeśli uruchamiane skompilowany przykład dwa okna polecenia, druga kopia zablokuje na trzeci wywołanie <xref:System.Threading.WaitHandle.WaitOne%2A>.</span><span class="sxs-lookup"><span data-stu-id="d0276-167">Thus, if you run the compiled example from two command windows, the second copy will block on the third call to <xref:System.Threading.WaitHandle.WaitOne%2A>.</span></span> <span data-ttu-id="d0276-168">Zwolnij jeden lub więcej wpisów w pierwszej kopii programu odblokowania drugiego.</span><span class="sxs-lookup"><span data-stu-id="d0276-168">Release one or more entries in the first copy of the program to unblock the second.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore.ctor named 3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 3/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore.ctor named 3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 3/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore.ctor named 3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d0276-169">
            <paramref name="initialCount" /> jest większa niż <paramref name="maximumCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-169">
              <paramref name="initialCount" /> is greater than <paramref name="maximumCount" />.</span>
          </span>
          <span data-ttu-id="d0276-170">- lub - <paramref name="name" /> jest dłuższa niż 260 znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-170">-or-  <paramref name="name" /> is longer than 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d0276-171">
            <paramref name="maximumCount" /> jest mniejsza niż 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-171">
              <paramref name="maximumCount" /> is less than 1.</span>
          </span>
          <span data-ttu-id="d0276-172">- lub - <paramref name="initialCount" /> jest mniejszy niż 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-172">-or-  <paramref name="initialCount" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d0276-173">Wystąpił błąd systemu Win32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-173">A Win32 error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="d0276-174">Semafor o nazwie istnieje i ma kontrolę dostępu, a użytkownik nie ma <see cref="F:System.Security.AccessControl.SemaphoreRights.FullControl" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-174">The named semaphore exists and has access control security, and the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.FullControl" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">
          <span data-ttu-id="d0276-175">Semafor o nazwie nie można utworzyć, prawdopodobnie ponieważ dojścia oczekiwania innego typu ma taką samą nazwę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-175">The named semaphore cannot be created, perhaps because a wait handle of a different type has the same name.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d0276-176">wywoływania kodu niezarządzanego utworzyć semafora systemu o nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-176">for calling unmanaged code to create a named system semaphore.</span>
          </span>
          <span data-ttu-id="d0276-177">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-177">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
          <span data-ttu-id="d0276-178">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-178">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Semaphore (int initialCount, int maximumCount, string name, out bool createdNew);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCount, int32 maximumCount, string name, [out] bool&amp; createdNew) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialCount As Integer, maximumCount As Integer, name As String, ByRef createdNew As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Semaphore(int initialCount, int maximumCount, System::String ^ name, [Runtime::InteropServices::Out] bool % createdNew);" />
      <MemberSignature Language="F#" Value="new System.Threading.Semaphore : int * int * string *  -&gt; System.Threading.Semaphore" Usage="new System.Threading.Semaphore (initialCount, maximumCount, name, createdNew)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialCount" Type="System.Int32" />
        <Parameter Name="maximumCount" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="createdNew" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="initialCount">
          <span data-ttu-id="d0276-179">Początkowa liczba żądań semafora, które mogą być spełnione jednocześnie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-179">The initial number of requests for the semaphore that can be satisfied concurrently.</span>
          </span>
        </param>
        <param name="maximumCount">
          <span data-ttu-id="d0276-180">Maksymalna liczba żądań semafora, które mogą być spełnione jednocześnie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-180">The maximum number of requests for the semaphore that can be satisfied concurrently.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="d0276-181">Nazwa obiektu semafora systemu o nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-181">The name of a named system semaphore object.</span>
          </span>
        </param>
        <param name="createdNew">
          <span data-ttu-id="d0276-182">Po powrocie z tej metody zawiera <see langword="true" /> Jeśli utworzono semafora lokalnego (to znaczy, jeśli <c>nazwa</c> jest <see langword="null" /> lub ciąg pusty) lub jeśli utworzono semafora określonego systemu o nazwie; <see langword="false" /> Jeśli określonego o nazwie semafora systemowego już istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-182">When this method returns, contains <see langword="true" /> if a local semaphore was created (that is, if <c>name</c> is <see langword="null" /> or an empty string) or if the specified named system semaphore was created; <see langword="false" /> if the specified named system semaphore already existed.</span>
          </span>
          <span data-ttu-id="d0276-183">Ten parametr jest przekazywany niezainicjowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-183">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0276-184">Inicjuje nowe wystąpienie klasy <see cref="T:System.Threading.Semaphore" /> klasy, określając początkowa liczba wpisów i maksymalną liczbę równoczesnych zapisów, opcjonalnie określający nazwę obiektu semafora systemu i określanie zmienna, która odbiera wartość wskazującą Określa, czy nowe semafora systemu został utworzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-184">Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class, specifying the initial number of entries and the maximum number of concurrent entries, optionally specifying the name of a system semaphore object, and specifying a variable that receives a value indicating whether a new system semaphore was created.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0276-185">Ten konstruktor inicjuje <xref:System.Threading.Semaphore> obiekt, który reprezentuje semafora systemu o nazwie.</span><span class="sxs-lookup"><span data-stu-id="d0276-185">This constructor initializes a <xref:System.Threading.Semaphore> object that represents a named system semaphore.</span></span> <span data-ttu-id="d0276-186">Możesz utworzyć wiele <xref:System.Threading.Semaphore> semafora systemu o nazwie obiekty reprezentujące takie same.</span><span class="sxs-lookup"><span data-stu-id="d0276-186">You can create multiple <xref:System.Threading.Semaphore> objects that represent the same named system semaphore.</span></span>  
  
 <span data-ttu-id="d0276-187">Jeśli semafora systemu o nazwie nie istnieje, jest on tworzony przy użyciu liczba początkowa i maksymalna liczba określona przez `initialCount` i `maximumCount`.</span><span class="sxs-lookup"><span data-stu-id="d0276-187">If the named system semaphore does not exist, it is created with the initial count and maximum count specified by `initialCount` and `maximumCount`.</span></span> <span data-ttu-id="d0276-188">Jeśli semafora systemu o nazwie już istnieje, `initialCount` i `maximumCount` nie są używane, mimo że nieprawidłowe wartości nadal powodują wyjątków.</span><span class="sxs-lookup"><span data-stu-id="d0276-188">If the named system semaphore already exists, `initialCount` and `maximumCount` are not used, although invalid values still cause exceptions.</span></span> <span data-ttu-id="d0276-189">Użyj `createdNew` ustalenie, czy utworzono semafora systemowego.</span><span class="sxs-lookup"><span data-stu-id="d0276-189">Use `createdNew` to determine whether the system semaphore was created.</span></span>  
  
 <span data-ttu-id="d0276-190">Jeśli `initialCount` jest mniejsza niż `maximumCount`, i `createdNew` jest `true`, efekt jest taki sam jak, jeśli bieżący wątek wywołał <xref:System.Threading.WaitHandle.WaitOne%2A> (`maximumCount` minus `initialCount`) razy.</span><span class="sxs-lookup"><span data-stu-id="d0276-190">If `initialCount` is less than `maximumCount`, and `createdNew` is `true`, the effect is the same as if the current thread had called <xref:System.Threading.WaitHandle.WaitOne%2A> (`maximumCount` minus `initialCount`) times.</span></span>  
  
 <span data-ttu-id="d0276-191">Jeśli określisz `null` lub pusty ciąg `name`, semafora lokalnym jest tworzony tak, jakby były nazywane <xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%29> przeładowania konstruktora.</span><span class="sxs-lookup"><span data-stu-id="d0276-191">If you specify `null` or an empty string for `name`, a local semaphore is created, as if you had called the <xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%29> constructor overload.</span></span> <span data-ttu-id="d0276-192">W takim przypadku `createdNew` jest zawsze `true`.</span><span class="sxs-lookup"><span data-stu-id="d0276-192">In this case, `createdNew` is always `true`.</span></span>  
  
 <span data-ttu-id="d0276-193">Ponieważ nazwanego semaforów są widoczne w systemie operacyjnym, ich może służyć do zapewnienia koordynacji wykorzystania zasobów przez granice procesu.</span><span class="sxs-lookup"><span data-stu-id="d0276-193">Because named semaphores are visible throughout the operating system, they can be used to coordinate resource use across process boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0276-194">W poniższym przykładzie kodu pokazano zachowanie międzyprocesowa semafora nazwanego.</span><span class="sxs-lookup"><span data-stu-id="d0276-194">The following code example demonstrates the cross-process behavior of a named semaphore.</span></span> <span data-ttu-id="d0276-195">Semafor o nazwie jest tworzona z maksymalną liczbę pięciu i liczba początkowa dwóch.</span><span class="sxs-lookup"><span data-stu-id="d0276-195">The example creates a named semaphore with a maximum count of five and an initial count of two.</span></span> <span data-ttu-id="d0276-196">Oznacza to zastrzega sobie trzy wpisy dla wątku, który wywołuje konstruktor.</span><span class="sxs-lookup"><span data-stu-id="d0276-196">That is, it reserves three entries for the thread that calls the constructor.</span></span> <span data-ttu-id="d0276-197">Jeśli `createNew` jest `false`, program udostępnia trzy wywołania <xref:System.Threading.WaitHandle.WaitOne%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="d0276-197">If `createNew` is `false`, the program makes three calls to the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span> <span data-ttu-id="d0276-198">W związku z tym jeśli uruchamiane skompilowany przykład dwa okna polecenia, druga kopia zablokuje na trzeci wywołanie <xref:System.Threading.WaitHandle.WaitOne%2A>.</span><span class="sxs-lookup"><span data-stu-id="d0276-198">Thus, if you run the compiled example from two command windows, the second copy will block on the third call to <xref:System.Threading.WaitHandle.WaitOne%2A>.</span></span> <span data-ttu-id="d0276-199">Zwolnij jeden lub więcej wpisów w pierwszej kopii programu odblokowania drugiego.</span><span class="sxs-lookup"><span data-stu-id="d0276-199">Release one or more entries in the first copy of the program to unblock the second.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore.ctor named 4#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 4/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore.ctor named 4#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 4/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore.ctor named 4#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 4/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d0276-200">
            <paramref name="initialCount" /> jest większa niż <paramref name="maximumCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-200">
              <paramref name="initialCount" /> is greater than <paramref name="maximumCount" />.</span>
          </span>
          <span data-ttu-id="d0276-201">- lub - <paramref name="name" /> jest dłuższa niż 260 znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-201">-or-  <paramref name="name" /> is longer than 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d0276-202">
            <paramref name="maximumCount" /> jest mniejsza niż 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-202">
              <paramref name="maximumCount" /> is less than 1.</span>
          </span>
          <span data-ttu-id="d0276-203">- lub - <paramref name="initialCount" /> jest mniejszy niż 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-203">-or-  <paramref name="initialCount" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d0276-204">Wystąpił błąd systemu Win32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-204">A Win32 error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="d0276-205">Semafor o nazwie istnieje i ma kontrolę dostępu, a użytkownik nie ma <see cref="F:System.Security.AccessControl.SemaphoreRights.FullControl" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-205">The named semaphore exists and has access control security, and the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.FullControl" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">
          <span data-ttu-id="d0276-206">Semafor o nazwie nie można utworzyć, prawdopodobnie ponieważ dojścia oczekiwania innego typu ma taką samą nazwę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-206">The named semaphore cannot be created, perhaps because a wait handle of a different type has the same name.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d0276-207">wywoływania kodu niezarządzanego utworzyć semafora systemu o nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-207">for calling unmanaged code to create a named system semaphore.</span>
          </span>
          <span data-ttu-id="d0276-208">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-208">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
          <span data-ttu-id="d0276-209">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-209">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Semaphore (int initialCount, int maximumCount, string name, out bool createdNew, System.Security.AccessControl.SemaphoreSecurity semaphoreSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCount, int32 maximumCount, string name, [out] bool&amp; createdNew, class System.Security.AccessControl.SemaphoreSecurity semaphoreSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String,System.Boolean@,System.Security.AccessControl.SemaphoreSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Semaphore(int initialCount, int maximumCount, System::String ^ name, [Runtime::InteropServices::Out] bool % createdNew, System::Security::AccessControl::SemaphoreSecurity ^ semaphoreSecurity);" />
      <MemberSignature Language="F#" Value="new System.Threading.Semaphore : int * int * string *  * System.Security.AccessControl.SemaphoreSecurity -&gt; System.Threading.Semaphore" Usage="new System.Threading.Semaphore (initialCount, maximumCount, name, createdNew, semaphoreSecurity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialCount" Type="System.Int32" />
        <Parameter Name="maximumCount" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="createdNew" Type="System.Boolean&amp;" RefType="out" />
        <Parameter Name="semaphoreSecurity" Type="System.Security.AccessControl.SemaphoreSecurity" />
      </Parameters>
      <Docs>
        <param name="initialCount">
          <span data-ttu-id="d0276-210">Początkowa liczba żądań semafora, które mogą być spełnione jednocześnie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-210">The initial number of requests for the semaphore that can be satisfied concurrently.</span>
          </span>
        </param>
        <param name="maximumCount">
          <span data-ttu-id="d0276-211">Maksymalna liczba żądań semafora, które mogą być spełnione jednocześnie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-211">The maximum number of requests for the semaphore that can be satisfied concurrently.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="d0276-212">Nazwa obiektu semafora systemu o nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-212">The name of a named system semaphore object.</span>
          </span>
        </param>
        <param name="createdNew">
          <span data-ttu-id="d0276-213">Po powrocie z tej metody zawiera <see langword="true" /> Jeśli utworzono semafora lokalnego (to znaczy, jeśli <c>nazwa</c> jest <see langword="null" /> lub ciąg pusty) lub jeśli utworzono semafora określonego systemu o nazwie; <see langword="false" /> Jeśli określonego o nazwie semafora systemowego już istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-213">When this method returns, contains <see langword="true" /> if a local semaphore was created (that is, if <c>name</c> is <see langword="null" /> or an empty string) or if the specified named system semaphore was created; <see langword="false" /> if the specified named system semaphore already existed.</span>
          </span>
          <span data-ttu-id="d0276-214">Ten parametr jest przekazywany niezainicjowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-214">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="semaphoreSecurity">
          <span data-ttu-id="d0276-215">A <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> obiekt, który reprezentuje kontrolę dostępu ma zostać zastosowany do semafora systemu o nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-215">A <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> object that represents the access control security to be applied to the named system semaphore.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0276-216">Inicjuje nowe wystąpienie klasy <see cref="T:System.Threading.Semaphore" /> Klasa początkowa liczba wpisów i maksymalną liczbę równoczesnych wpisów, opcjonalnie określając nazwę obiektu semafora systemu, określając zmienna, która odbiera wartość wskazującą Określa, czy utworzono nowe semafora systemu i określania kontroli dostępu zabezpieczeń semafora systemu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-216">Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class, specifying the initial number of entries and the maximum number of concurrent entries, optionally specifying the name of a system semaphore object, specifying a variable that receives a value indicating whether a new system semaphore was created, and specifying security access control for the system semaphore.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0276-217">Użyj tego konstruktora, aby zastosować kontrolę dostępu do semafora systemu o nazwie podczas jego tworzenia, uniemożliwia pobieranie formantu semafora innego kodu.</span><span class="sxs-lookup"><span data-stu-id="d0276-217">Use this constructor to apply access control security to a named system semaphore when it is created, preventing other code from taking control of the semaphore.</span></span>  
  
 <span data-ttu-id="d0276-218">Ten konstruktor inicjuje <xref:System.Threading.Semaphore> obiekt, który reprezentuje semafora systemu o nazwie.</span><span class="sxs-lookup"><span data-stu-id="d0276-218">This constructor initializes a <xref:System.Threading.Semaphore> object that represents a named system semaphore.</span></span> <span data-ttu-id="d0276-219">Możesz utworzyć wiele <xref:System.Threading.Semaphore> semafora systemu o nazwie obiekty reprezentujące takie same.</span><span class="sxs-lookup"><span data-stu-id="d0276-219">You can create multiple <xref:System.Threading.Semaphore> objects that represent the same named system semaphore.</span></span>  
  
 <span data-ttu-id="d0276-220">Jeśli semafora systemu o nazwie nie istnieje, jest tworzony z określonym kontrolę dostępu.</span><span class="sxs-lookup"><span data-stu-id="d0276-220">If the named system semaphore does not exist, it is created with the specified access control security.</span></span> <span data-ttu-id="d0276-221">Jeśli istnieje semafor o nazwie, określony kontrolę dostępu jest ignorowane.</span><span class="sxs-lookup"><span data-stu-id="d0276-221">If the named semaphore exists, the specified access control security is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d0276-222">Obiekt wywołujący ma pełną kontrolę nad nowo utworzony <xref:System.Threading.Semaphore> nawet wtedy, gdy obiekt `semaphoreSecurity` nie zezwala lub nie powiedzie się pewne prawa dostępu do bieżącego użytkownika.</span><span class="sxs-lookup"><span data-stu-id="d0276-222">The caller has full control over the newly created <xref:System.Threading.Semaphore> object even if `semaphoreSecurity` denies or fails to grant some access rights to the current user.</span></span> <span data-ttu-id="d0276-223">Jednak jeśli bieżący użytkownik próbuje pobrać inny <xref:System.Threading.Semaphore> obiekt, do reprezentowania takie same o nazwie semafora przy użyciu konstruktora lub <xref:System.Threading.Semaphore.OpenExisting%2A> zastosowano kontrolę dostępu w systemie Windows metody.</span><span class="sxs-lookup"><span data-stu-id="d0276-223">However, if the current user attempts to get another <xref:System.Threading.Semaphore> object to represent the same named semaphore, using either a constructor or the <xref:System.Threading.Semaphore.OpenExisting%2A> method, Windows access control security is applied.</span></span>  
  
 <span data-ttu-id="d0276-224">Jeśli semafora systemu o nazwie nie istnieje, jest on tworzony przy użyciu liczba początkowa i maksymalna liczba określona przez `initialCount` i `maximumCount`.</span><span class="sxs-lookup"><span data-stu-id="d0276-224">If the named system semaphore does not exist, it is created with the initial count and maximum count specified by `initialCount` and `maximumCount`.</span></span> <span data-ttu-id="d0276-225">Jeśli semafora systemu o nazwie już istnieje, `initialCount` i `maximumCount` nie są używane, mimo że nieprawidłowe wartości nadal powodują wyjątków.</span><span class="sxs-lookup"><span data-stu-id="d0276-225">If the named system semaphore already exists, `initialCount` and `maximumCount` are not used, although invalid values still cause exceptions.</span></span> <span data-ttu-id="d0276-226">Użyj `createdNew` parametr, aby określić, czy semafora systemu został utworzony przez tego konstruktora.</span><span class="sxs-lookup"><span data-stu-id="d0276-226">Use the `createdNew` parameter to determine whether the system semaphore was created by this constructor.</span></span>  
  
 <span data-ttu-id="d0276-227">Jeśli `initialCount` jest mniejsza niż `maximumCount`, i `createdNew` jest `true`, efekt jest taki sam jak, jeśli bieżący wątek wywołał <xref:System.Threading.WaitHandle.WaitOne%2A> (`maximumCount` minus `initialCount`) razy.</span><span class="sxs-lookup"><span data-stu-id="d0276-227">If `initialCount` is less than `maximumCount`, and `createdNew` is `true`, the effect is the same as if the current thread had called <xref:System.Threading.WaitHandle.WaitOne%2A> (`maximumCount` minus `initialCount`) times.</span></span>  
  
 <span data-ttu-id="d0276-228">Jeśli określisz `null` lub pusty ciąg `name`, semafora lokalnym jest tworzony tak, jakby były nazywane <xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%29> przeładowania konstruktora.</span><span class="sxs-lookup"><span data-stu-id="d0276-228">If you specify `null` or an empty string for `name`, a local semaphore is created, as if you had called the <xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%29> constructor overload.</span></span> <span data-ttu-id="d0276-229">W takim przypadku `createdNew` jest zawsze `true`.</span><span class="sxs-lookup"><span data-stu-id="d0276-229">In this case, `createdNew` is always `true`.</span></span>  
  
 <span data-ttu-id="d0276-230">Ponieważ nazwanego semaforów są widoczne w systemie operacyjnym, ich może służyć do zapewnienia koordynacji wykorzystania zasobów przez granice procesu.</span><span class="sxs-lookup"><span data-stu-id="d0276-230">Because named semaphores are visible throughout the operating system, they can be used to coordinate resource use across process boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0276-231">Poniższy przykład kodu pokazuje zachowanie międzyprocesowa nazwanego semafora z kontrolę dostępu.</span><span class="sxs-lookup"><span data-stu-id="d0276-231">The following code example demonstrates the cross-process behavior of a named semaphore with access control security.</span></span> <span data-ttu-id="d0276-232">W przykładzie użyto <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> przeciążenie metody do testowania istnieje semafor o nazwie.</span><span class="sxs-lookup"><span data-stu-id="d0276-232">The example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method overload to test for the existence of a named semaphore.</span></span> <span data-ttu-id="d0276-233">Jeśli nie istnieje semafor, tworzona jest maksymalna liczba dwóch oraz kontrolę dostępu, który nie zezwala na bieżący użytkownik prawa do używania semafora, ale daje prawo do odczytu, a zmiana uprawnień do semafora.</span><span class="sxs-lookup"><span data-stu-id="d0276-233">If the semaphore does not exist, it is created with a maximum count of two and with access control security that denies the current user the right to use the semaphore but grants the right to read and change permissions on the semaphore.</span></span> <span data-ttu-id="d0276-234">Jeśli uruchamiane skompilowany przykład dwa okna polecenia, druga kopia spowoduje zgłoszenie wyjątku naruszenie dostępu w wywołaniu <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> metody.</span><span class="sxs-lookup"><span data-stu-id="d0276-234">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method.</span></span> <span data-ttu-id="d0276-235">Wyjątek zostanie przechwycony i w przykładzie użyto <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> przeciążenie metody, aby otworzyć semafora z uprawnień wymaganych do odczytywania i zmienić uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="d0276-235">The exception is caught, and the example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> method overload to open the semaphore with the rights needed to read and change the permissions.</span></span>  
  
 <span data-ttu-id="d0276-236">Po zmianie uprawnienia, semafor został otwarty z uprawnień wymaganych do wprowadzania i wersji.</span><span class="sxs-lookup"><span data-stu-id="d0276-236">After the permissions are changed, the semaphore is opened with the rights required to enter and release.</span></span> <span data-ttu-id="d0276-237">Trzeci okno polecenia uruchamiane przykład skompilowany, uruchamia, przy użyciu nowe uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="d0276-237">If you run the compiled example from a third command window, it runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d0276-238">
            <paramref name="initialCount" /> jest większa niż <paramref name="maximumCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-238">
              <paramref name="initialCount" /> is greater than <paramref name="maximumCount" />.</span>
          </span>
          <span data-ttu-id="d0276-239">- lub - <paramref name="name" /> jest dłuższa niż 260 znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-239">-or-  <paramref name="name" /> is longer than 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d0276-240">
            <paramref name="maximumCount" /> jest mniejsza niż 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-240">
              <paramref name="maximumCount" /> is less than 1.</span>
          </span>
          <span data-ttu-id="d0276-241">- lub - <paramref name="initialCount" /> jest mniejszy niż 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-241">-or-  <paramref name="initialCount" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="d0276-242">Semafor o nazwie istnieje i ma kontrolę dostępu, a użytkownik nie ma <see cref="F:System.Security.AccessControl.SemaphoreRights.FullControl" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-242">The named semaphore exists and has access control security, and the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.FullControl" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d0276-243">Wystąpił błąd systemu Win32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-243">A Win32 error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">
          <span data-ttu-id="d0276-244">Semafor o nazwie nie można utworzyć, prawdopodobnie ponieważ dojścia oczekiwania innego typu ma taką samą nazwę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-244">The named semaphore cannot be created, perhaps because a wait handle of a different type has the same name.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d0276-245">wywoływania kodu niezarządzanego utworzyć semafora systemu o nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-245">for calling unmanaged code to create a named system semaphore.</span>
          </span>
          <span data-ttu-id="d0276-246">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-246">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
          <span data-ttu-id="d0276-247">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-247">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.SemaphoreSecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.SemaphoreSecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As SemaphoreSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::SemaphoreSecurity ^ GetAccessControl();" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : unit -&gt; System.Security.AccessControl.SemaphoreSecurity" Usage="semaphore.GetAccessControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.SemaphoreSecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d0276-248">Pobiera kontrolę dostępu dla semafora systemu o nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-248">Gets the access control security for a named system semaphore.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0276-249">A <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> obiekt, który reprezentuje kontrolę dostępu do semafora systemu o nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-249">A <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> object that represents the access control security for the named system semaphore.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0276-250"><xref:System.Threading.Semaphore.GetAccessControl%2A> Metoda używa następujących kombinacji flag (połączone, przy użyciu operacji bitowej OR) do wyszukania uprawnienia: <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>, <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>, i <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d0276-250">The <xref:System.Threading.Semaphore.GetAccessControl%2A> method uses the following combination of flags (combined using the bitwise OR operation) to search for permissions: <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>, <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>, and <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d0276-251">Użytkownik musi mieć <xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions?displayProperty=nameWithType> praw, aby wywołać tę metodę i semaforów musi została otwarta z <xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions?displayProperty=nameWithType> praw.</span><span class="sxs-lookup"><span data-stu-id="d0276-251">The user must have <xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions?displayProperty=nameWithType> rights to call this method, and the semaphore must have been opened with <xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions?displayProperty=nameWithType> rights.</span></span>  
  
 <span data-ttu-id="d0276-252">W lokalnej semafora kontrolę dostępu nie ma znaczenia.</span><span class="sxs-lookup"><span data-stu-id="d0276-252">On a local semaphore, access control security is irrelevant.</span></span> <span data-ttu-id="d0276-253">Jeśli <xref:System.Threading.Semaphore> obiekt nie reprezentuje semafora systemu o nazwie, ta metoda zwraca <xref:System.Security.AccessControl.SemaphoreSecurity> obiekt, który przyznaje wszystkie prawa do dowolnego użytkownika.</span><span class="sxs-lookup"><span data-stu-id="d0276-253">If the <xref:System.Threading.Semaphore> object does not represent a named system semaphore, this method returns a <xref:System.Security.AccessControl.SemaphoreSecurity> object that grants all rights to any user.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0276-254">Poniższy przykład kodu pokazuje zachowanie międzyprocesowa nazwanego semafora z kontrolę dostępu.</span><span class="sxs-lookup"><span data-stu-id="d0276-254">The following code example demonstrates the cross-process behavior of a named semaphore with access control security.</span></span> <span data-ttu-id="d0276-255">W przykładzie użyto <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> przeciążenie metody do testowania istnieje semafor o nazwie.</span><span class="sxs-lookup"><span data-stu-id="d0276-255">The example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method overload to test for the existence of a named semaphore.</span></span>  
  
 <span data-ttu-id="d0276-256">Jeśli nie istnieje semafor, tworzona jest maksymalna liczba dwóch oraz kontrolę dostępu, który nie zezwala na bieżący użytkownik prawa do używania semafora, ale daje prawo do odczytu, a zmiana uprawnień do semafora.</span><span class="sxs-lookup"><span data-stu-id="d0276-256">If the semaphore does not exist, it is created with a maximum count of two and with access control security that denies the current user the right to use the semaphore, but grants the right to read and change permissions on the semaphore.</span></span>  
  
 <span data-ttu-id="d0276-257">Jeśli uruchamiane skompilowany przykład dwa okna polecenia, druga kopia spowoduje zgłoszenie wyjątku naruszenie dostępu w wywołaniu <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> metody.</span><span class="sxs-lookup"><span data-stu-id="d0276-257">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method.</span></span> <span data-ttu-id="d0276-258">Wyjątek zostanie przechwycony i w przykładzie użyto <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> przeciążenie metody, aby otworzyć semafora z uprawnień wymaganych do odczytywania i zmienić uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="d0276-258">The exception is caught, and the example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> method overload to open the semaphore with the rights needed to read and change the permissions.</span></span> <span data-ttu-id="d0276-259">Kontrolę dostępu do semafora systemu są uzyskiwane przy użyciu <xref:System.Threading.Semaphore.GetAccessControl%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="d0276-259">The access control security for the system semaphore is obtained using the <xref:System.Threading.Semaphore.GetAccessControl%2A> method.</span></span>  
  
 <span data-ttu-id="d0276-260">Po zmianie uprawnienia, semafor został otwarty z uprawnień wymaganych do wprowadzania i wersji.</span><span class="sxs-lookup"><span data-stu-id="d0276-260">After the permissions are changed, the semaphore is opened with the rights required to enter and release.</span></span> <span data-ttu-id="d0276-261">Trzeci okno polecenia uruchamiane przykład skompilowany, uruchamia, przy użyciu nowe uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="d0276-261">If you run the compiled example from a third command window, it runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="d0276-262">Bieżący <see cref="T:System.Threading.Semaphore" /> obiekt reprezentuje semafora systemu o nazwie, a użytkownik nie ma <see cref="F:System.Security.AccessControl.SemaphoreRights.ReadPermissions" /> praw.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-262">The current <see cref="T:System.Threading.Semaphore" /> object represents a named system semaphore, and the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.ReadPermissions" /> rights.</span>
          </span>
          <span data-ttu-id="d0276-263">- lub - bieżącego <see cref="T:System.Threading.Semaphore" /> obiekt reprezentuje semafor o nazwie system i nie została otwarta z <see cref="F:System.Security.AccessControl.SemaphoreRights.ReadPermissions" /> praw.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-263">-or-  The current <see cref="T:System.Threading.Semaphore" /> object represents a named system semaphore and was not opened with <see cref="F:System.Security.AccessControl.SemaphoreRights.ReadPermissions" /> rights.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d0276-264">Nie jest obsługiwane dla systemu Windows 98 lub Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-264">Not supported for Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenExisting">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d0276-265">Otwiera określony semafor o nazwie, jeśli już istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-265">Opens a specified named semaphore, if it already exists.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenExisting">
      <MemberSignature Language="C#" Value="public static System.Threading.Semaphore OpenExisting (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Semaphore OpenExisting(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.OpenExisting(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExisting (name As String) As Semaphore" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Semaphore ^ OpenExisting(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member OpenExisting : string -&gt; System.Threading.Semaphore" Usage="System.Threading.Semaphore.OpenExisting name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Semaphore</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="d0276-266">Nazwa semafora systemu, aby otworzyć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-266">The name of the system semaphore to open.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0276-267">Otwiera określony semafor o nazwie, jeśli już istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-267">Opens the specified named semaphore, if it already exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0276-268">Obiekt, który reprezentuje semafora systemu o nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-268">An object that represents the named system semaphore.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0276-269"><xref:System.Threading.Semaphore.OpenExisting%2A> Metody spróbuje otworzyć określonego nazwanego semafora.</span><span class="sxs-lookup"><span data-stu-id="d0276-269">The <xref:System.Threading.Semaphore.OpenExisting%2A> method tries to open the specified named semaphore.</span></span> <span data-ttu-id="d0276-270">Jeśli nie istnieje semafor systemu, ta metoda zgłasza wyjątek zamiast tworzenia semafora systemowego.</span><span class="sxs-lookup"><span data-stu-id="d0276-270">If the system semaphore does not exist, this method throws an exception instead of creating the system semaphore.</span></span> <span data-ttu-id="d0276-271">Aby utworzyć semafora systemu, gdy jeszcze nie istnieje, użyj jednej z <xref:System.Threading.Semaphore.%23ctor%2A> ma konstruktorów `name` parametru.</span><span class="sxs-lookup"><span data-stu-id="d0276-271">To create the system semaphore when it does not already exist, use one of the <xref:System.Threading.Semaphore.%23ctor%2A> constructors that has a `name` parameter.</span></span>  
  
 <span data-ttu-id="d0276-272">Wiele wywołań do tej metody, używanego przez tę samą wartość `name` nie musi zwracać taki sam <xref:System.Threading.Semaphore> obiektu, nawet jeśli obiekty, które reprezentują zwracane są takie same o nazwie semafora systemowego.</span><span class="sxs-lookup"><span data-stu-id="d0276-272">Multiple calls to this method that use the same value for `name` do not necessarily return the same <xref:System.Threading.Semaphore> object, even though the objects that are returned represent the same named system semaphore.</span></span>  
  
 <span data-ttu-id="d0276-273">Przeciążenie tej metody jest odpowiednikiem wywołania <xref:System.Threading.Semaphore.OpenExisting%2A> przeciążenie metody i określając <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> i <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> praw, połączone przy użyciu operacji lub.</span><span class="sxs-lookup"><span data-stu-id="d0276-273">This method overload is equivalent to calling the <xref:System.Threading.Semaphore.OpenExisting%2A> method overload and specifying <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> and <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> rights, combined by using the bitwise OR operation.</span></span>  
  
 <span data-ttu-id="d0276-274">Określanie <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> Flaga umożliwia wątku na wejście do semafora i określając <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> Flaga umożliwia wątku w celu wywołania <xref:System.Threading.Semaphore.Release%2A> — metoda.</span><span class="sxs-lookup"><span data-stu-id="d0276-274">Specifying the <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> flag allows a thread to enter the semaphore, and specifying the <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> flag allows a thread to call the <xref:System.Threading.Semaphore.Release%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0276-275">Poniższy przykład kodu pokazuje zachowanie międzyprocesowa nazwanego semafora z kontrolę dostępu.</span><span class="sxs-lookup"><span data-stu-id="d0276-275">The following code example demonstrates the cross-process behavior of a named semaphore with access control security.</span></span> <span data-ttu-id="d0276-276">W przykładzie użyto <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> przeciążenie metody do testowania istnieje semafor o nazwie.</span><span class="sxs-lookup"><span data-stu-id="d0276-276">The example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method overload to test for the existence of a named semaphore.</span></span>  
  
 <span data-ttu-id="d0276-277">Jeśli nie istnieje semafor, tworzona jest maksymalna liczba dwóch oraz kontrolę dostępu odmowy prawa do używania semafora bieżącego użytkownika, ale który przyznaje prawa do odczytu, a zmiana uprawnień do semafora.</span><span class="sxs-lookup"><span data-stu-id="d0276-277">If the semaphore does not exist, it is created with a maximum count of two and with access control security that denies the current user the right to use the semaphore, but which grants the right to read and change permissions on the semaphore.</span></span>  
  
 <span data-ttu-id="d0276-278">Jeśli uruchamiane skompilowany przykład dwa okna polecenia, druga kopia spowoduje zgłoszenie wyjątku naruszenie dostępu w wywołaniu <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> przeciążenie metody.</span><span class="sxs-lookup"><span data-stu-id="d0276-278">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method overload.</span></span> <span data-ttu-id="d0276-279">Wyjątek zostanie przechwycony i w przykładzie użyto <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> przeciążenie metody, aby otworzyć semafora z uprawnień wymaganych do odczytywania i zmienić uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="d0276-279">The exception is caught, and the example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> method overload to open the semaphore with the rights needed to read and change the permissions.</span></span>  
  
 <span data-ttu-id="d0276-280">Po zmianie uprawnienia, semafor został otwarty z uprawnień wymaganych do wprowadzania i zwolnij go.</span><span class="sxs-lookup"><span data-stu-id="d0276-280">After the permissions are changed, the semaphore is opened with the rights required to enter and release it.</span></span> <span data-ttu-id="d0276-281">Trzeci okno polecenia uruchamiane przykład skompilowany, uruchamia, przy użyciu nowe uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="d0276-281">If you run the compiled example from a third command window, it runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d0276-282">
            <paramref name="name" /> jest pustym ciągiem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-282">
              <paramref name="name" /> is an empty string.</span>
          </span>
          <span data-ttu-id="d0276-283">- lub - <paramref name="name" /> jest dłuższa niż 260 znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-283">-or-  <paramref name="name" /> is longer than 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d0276-284">
            <paramref name="name" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-284">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">
          <span data-ttu-id="d0276-285">Semafor o nazwie nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-285">The named semaphore does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d0276-286">Wystąpił błąd systemu Win32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-286">A Win32 error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="d0276-287">Istnieje semafor o nazwie, ale użytkownik nie ma dostępu zabezpieczeń, trzeba go używać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-287">The named semaphore exists, but the user does not have the security access required to use it.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d0276-288">wywoływania kodu niezarządzanego, aby otworzyć semafora systemu o nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-288">for calling unmanaged code to open a named system semaphore.</span>
          </span>
          <span data-ttu-id="d0276-289">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-289">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
          <span data-ttu-id="d0276-290">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-290">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="OpenExisting">
      <MemberSignature Language="C#" Value="public static System.Threading.Semaphore OpenExisting (string name, System.Security.AccessControl.SemaphoreRights rights);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Semaphore OpenExisting(string name, valuetype System.Security.AccessControl.SemaphoreRights rights) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.OpenExisting(System.String,System.Security.AccessControl.SemaphoreRights)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExisting (name As String, rights As SemaphoreRights) As Semaphore" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Semaphore ^ OpenExisting(System::String ^ name, System::Security::AccessControl::SemaphoreRights rights);" />
      <MemberSignature Language="F#" Value="static member OpenExisting : string * System.Security.AccessControl.SemaphoreRights -&gt; System.Threading.Semaphore" Usage="System.Threading.Semaphore.OpenExisting (name, rights)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Semaphore</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="rights" Type="System.Security.AccessControl.SemaphoreRights" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="d0276-291">Nazwa semafora systemu, aby otworzyć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-291">The name of the system semaphore to open.</span>
          </span>
        </param>
        <param name="rights">
          <span data-ttu-id="d0276-292">Bitowe połączenie wartości wyliczenia, które reprezentują dostęp wymaganymi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-292">A bitwise combination of the enumeration values that represent the desired security access.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0276-293">Otwiera określonego nazwanego semafora, jeśli już istnieje, z wymaganymi dostępu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-293">Opens the specified named semaphore, if it already exists, with the desired security access.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0276-294">Obiekt, który reprezentuje semafora systemu o nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-294">An object that represents the named system semaphore.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0276-295">`rights` Parametr musi zawierać <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> flagę wątków na wejście do semafora i <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> flagę wątków, aby wywołać <xref:System.Threading.Semaphore.Release%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="d0276-295">The `rights` parameter must include the <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> flag to allow threads to enter the semaphore, and the <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> flag to allow threads to call the <xref:System.Threading.Semaphore.Release%2A> method.</span></span>  
  
 <span data-ttu-id="d0276-296"><xref:System.Threading.Semaphore.OpenExisting%2A> Metody próbuje otworzyć istniejące o nazwie semafora.</span><span class="sxs-lookup"><span data-stu-id="d0276-296">The <xref:System.Threading.Semaphore.OpenExisting%2A> method tries to open an existing named semaphore.</span></span> <span data-ttu-id="d0276-297">Jeśli nie istnieje semafor systemu, ta metoda zgłasza wyjątek zamiast tworzenia semafora systemowego.</span><span class="sxs-lookup"><span data-stu-id="d0276-297">If the system semaphore does not exist, this method throws an exception instead of creating the system semaphore.</span></span> <span data-ttu-id="d0276-298">Aby utworzyć semafora systemu, gdy jeszcze nie istnieje, użyj jednej z <xref:System.Threading.Semaphore.%23ctor%2A> ma konstruktorów `name` parametru.</span><span class="sxs-lookup"><span data-stu-id="d0276-298">To create the system semaphore when it does not already exist, use one of the <xref:System.Threading.Semaphore.%23ctor%2A> constructors that has a `name` parameter.</span></span>  
  
 <span data-ttu-id="d0276-299">Wiele wywołań do tej metody, używanego przez tę samą wartość `name` nie musi zwracać taki sam <xref:System.Threading.Semaphore> obiektu, nawet jeśli obiekty, które reprezentują zwracane są takie same o nazwie semafora systemowego.</span><span class="sxs-lookup"><span data-stu-id="d0276-299">Multiple calls to this method that use the same value for `name` do not necessarily return the same <xref:System.Threading.Semaphore> object, even though the objects that are returned represent the same named system semaphore.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0276-300">Poniższy przykład kodu pokazuje zachowanie międzyprocesowa nazwanego semafora z kontrolę dostępu.</span><span class="sxs-lookup"><span data-stu-id="d0276-300">The following code example demonstrates the cross-process behavior of a named semaphore with access control security.</span></span> <span data-ttu-id="d0276-301">W przykładzie użyto <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> przeciążenie metody do testowania istnieje semafor o nazwie.</span><span class="sxs-lookup"><span data-stu-id="d0276-301">The example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method overload to test for the existence of a named semaphore.</span></span>  
  
 <span data-ttu-id="d0276-302">Jeśli nie istnieje semafor, tworzona jest maksymalna liczba dwóch oraz kontrolę dostępu, który nie zezwala na bieżący użytkownik prawa do używania semafora, ale daje prawo do odczytu, a zmiana uprawnień do semafora.</span><span class="sxs-lookup"><span data-stu-id="d0276-302">If the semaphore does not exist, it is created with a maximum count of two and with access control security that denies the current user the right to use the semaphore, but grants the right to read and change permissions on the semaphore.</span></span>  
  
 <span data-ttu-id="d0276-303">Jeśli uruchamiane skompilowany przykład dwa okna polecenia, druga kopia spowoduje zgłoszenie wyjątku naruszenie dostępu w wywołaniu <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> metody.</span><span class="sxs-lookup"><span data-stu-id="d0276-303">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method.</span></span> <span data-ttu-id="d0276-304">Wyjątek zostanie przechwycony i w przykładzie użyto <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> przeciążenie metody, aby otworzyć semafora z uprawnień wymaganych do odczytywania i zmienić uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="d0276-304">The exception is caught, and the example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> method overload to open the semaphore with the rights needed to read and change the permissions.</span></span>  
  
 <span data-ttu-id="d0276-305">Po zmianie uprawnienia, semafor został otwarty z uprawnień wymaganych do wprowadzania i zwolnij go.</span><span class="sxs-lookup"><span data-stu-id="d0276-305">After the permissions are changed, the semaphore is opened with the rights required to enter and release it.</span></span> <span data-ttu-id="d0276-306">Trzeci okno polecenia uruchamiane przykład skompilowany, uruchamia, przy użyciu nowe uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="d0276-306">If you run the compiled example from a third command window, it runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d0276-307">
            <paramref name="name" /> jest pustym ciągiem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-307">
              <paramref name="name" /> is an empty string.</span>
          </span>
          <span data-ttu-id="d0276-308">- lub - <paramref name="name" /> jest dłuższa niż 260 znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-308">-or-  <paramref name="name" /> is longer than 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d0276-309">
            <paramref name="name" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-309">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">
          <span data-ttu-id="d0276-310">Semafor o nazwie nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-310">The named semaphore does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d0276-311">Wystąpił błąd systemu Win32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-311">A Win32 error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="d0276-312">Istnieje semafor o nazwie, ale użytkownik nie ma żądanego praw dostępu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-312">The named semaphore exists, but the user does not have the desired security access rights.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d0276-313">wywoływania kodu niezarządzanego utworzyć semafora systemu o nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-313">for calling unmanaged code to create a named system semaphore.</span>
          </span>
          <span data-ttu-id="d0276-314">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-314">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
          <span data-ttu-id="d0276-315">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-315">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Release">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d0276-316">Zamyka semafora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-316">Exits the semaphore.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public int Release ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Release() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.Release" />
      <MemberSignature Language="VB.NET" Value="Public Function Release () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Release();" />
      <MemberSignature Language="F#" Value="member this.Release : unit -&gt; int" Usage="semaphore.Release " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.PrePrepareMethod</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d0276-317">Zamyka semafor i zwraca liczbę poprzednich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-317">Exits the semaphore and returns the previous count.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0276-318">Licznik na semafora przed <see cref="Overload:System.Threading.Semaphore.Release" /> wywołano metodę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-318">The count on the semaphore before the <see cref="Overload:System.Threading.Semaphore.Release" /> method was called.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0276-319">Wątków jest zwykle używany <xref:System.Threading.WaitHandle.WaitOne%2A> metodę, aby wprowadzić semafor i zwykle użyć przeciążenie tej metody, aby wyjść.</span><span class="sxs-lookup"><span data-stu-id="d0276-319">Threads typically use the <xref:System.Threading.WaitHandle.WaitOne%2A> method to enter the semaphore, and they typically use this method overload to exit.</span></span>  
  
 <span data-ttu-id="d0276-320">Jeśli <xref:System.Threading.SemaphoreFullException> jest generowany przez <xref:System.Threading.Semaphore.Release%2A> metody go nie musi oznaczać problem z wątek wywołujący.</span><span class="sxs-lookup"><span data-stu-id="d0276-320">If a <xref:System.Threading.SemaphoreFullException> is thrown by the <xref:System.Threading.Semaphore.Release%2A> method, it does not necessarily indicate a problem with the calling thread.</span></span> <span data-ttu-id="d0276-321">Tego wątku zakończyć semafora więcej razy niż wprowadzona mogła spowodować błąd programistyczny w innym wątku.</span><span class="sxs-lookup"><span data-stu-id="d0276-321">A programming error in another thread might have caused that thread to exit the semaphore more times than it entered.</span></span>  
  
 <span data-ttu-id="d0276-322">Jeśli bieżący <xref:System.Threading.Semaphore> obiekt reprezentuje semafora systemu o nazwie, użytkownik musi mieć <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> prawa i semaforów musi mieć została otwarta z <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> praw.</span><span class="sxs-lookup"><span data-stu-id="d0276-322">If the current <xref:System.Threading.Semaphore> object represents a named system semaphore, the user must have <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> rights and the semaphore must have been opened with <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> rights.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0276-323">Poniższy przykład kodu tworzy semafora maksymalnej liczby trzy i liczba początkowa zero.</span><span class="sxs-lookup"><span data-stu-id="d0276-323">The following code example creates a semaphore with a maximum count of three and an initial count of zero.</span></span> <span data-ttu-id="d0276-324">W przykładzie uruchomiono pięć wątków, które blokują oczekiwania semaforów.</span><span class="sxs-lookup"><span data-stu-id="d0276-324">The example starts five threads, which block waiting for the semaphore.</span></span> <span data-ttu-id="d0276-325">Korzysta z wątku głównego <xref:System.Threading.Semaphore.Release%28System.Int32%29> przeciążenie metody, aby zwiększyć licznik semafora do jego maksymalnej, umożliwiając trzech wątków na wejście do semafora.</span><span class="sxs-lookup"><span data-stu-id="d0276-325">The main thread uses the <xref:System.Threading.Semaphore.Release%28System.Int32%29> method overload to increase the semaphore count to its maximum, allowing three threads to enter the semaphore.</span></span> <span data-ttu-id="d0276-326">Każdy wątek używa <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> Poczekaj chwilę, symulacji pracy i wywołania metody <xref:System.Threading.Semaphore.Release> przeciążenie metody, aby zwolnić semafora.</span><span class="sxs-lookup"><span data-stu-id="d0276-326">Each thread uses the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method to wait for one second, to simulate work, and then calls the <xref:System.Threading.Semaphore.Release> method overload to release the semaphore.</span></span>  
  
 <span data-ttu-id="d0276-327">Zawsze, gdy wydaniu semafora poprzedniej Licznik semafora jest wyświetlany.</span><span class="sxs-lookup"><span data-stu-id="d0276-327">Each time the semaphore is released, the previous semaphore count is displayed.</span></span> <span data-ttu-id="d0276-328">Użycie semafora śledzenie wiadomości konsoli.</span><span class="sxs-lookup"><span data-stu-id="d0276-328">Console messages track semaphore use.</span></span> <span data-ttu-id="d0276-329">Interwał symulowane pracy zwiększają się nieznacznie dla każdego wątku, aby ułatwić dane wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="d0276-329">The simulated work interval is increased slightly for each thread, to make the output easier to read.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Threading.SemaphoreFullException">
          <span data-ttu-id="d0276-330">Licznik semafora jest już w wartości maksymalnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-330">The semaphore count is already at the maximum value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d0276-331">Wystąpił błąd Win32 z nazwanym semafora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-331">A Win32 error occurred with a named semaphore.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="d0276-332">Semafor bieżącego reprezentuje semafora systemu o nazwie, ale użytkownik nie ma <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-332">The current semaphore represents a named system semaphore, but the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" />.</span>
          </span>
          <span data-ttu-id="d0276-333">- lub - bieżącego semafora reprezentuje semafora systemu o nazwie, ale nie została otwarta z <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-333">-or-  The current semaphore represents a named system semaphore, but it was not opened with <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public int Release (int releaseCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Release(int32 releaseCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.Release(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Release (releaseCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Release(int releaseCount);" />
      <MemberSignature Language="F#" Value="member this.Release : int -&gt; int" Usage="semaphore.Release releaseCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="releaseCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="releaseCount">
          <span data-ttu-id="d0276-334">Liczba razy, aby zamknąć semafora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-334">The number of times to exit the semaphore.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0276-335">Zamyka semafora określoną liczbę razy i zwraca liczbę poprzednich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-335">Exits the semaphore a specified number of times and returns the previous count.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0276-336">Licznik na semafora przed <see cref="Overload:System.Threading.Semaphore.Release" /> wywołano metodę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-336">The count on the semaphore before the <see cref="Overload:System.Threading.Semaphore.Release" /> method was called.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0276-337">Jeśli wątek wszedł semafora wiele razy, przeciążenie tej metody umożliwia Licznik semafora całego do przywrócenia przez jedno wywołanie.</span><span class="sxs-lookup"><span data-stu-id="d0276-337">If a thread has entered the semaphore multiple times, this method overload allows the entire semaphore count to be restored with one call.</span></span>  
  
 <span data-ttu-id="d0276-338">Jeśli <xref:System.Threading.SemaphoreFullException> jest generowany przez <xref:System.Threading.Semaphore.Release%2A> metody go nie musi oznaczać problem z wątek wywołujący.</span><span class="sxs-lookup"><span data-stu-id="d0276-338">If a <xref:System.Threading.SemaphoreFullException> is thrown by the <xref:System.Threading.Semaphore.Release%2A> method, it does not necessarily indicate a problem with the calling thread.</span></span> <span data-ttu-id="d0276-339">Tego wątku zakończyć semafora więcej razy niż wprowadzona mogła spowodować błąd programistyczny w innym wątku.</span><span class="sxs-lookup"><span data-stu-id="d0276-339">A programming error in another thread might have caused that thread to exit the semaphore more times than it entered.</span></span>  
  
 <span data-ttu-id="d0276-340">Jeśli bieżący <xref:System.Threading.Semaphore> obiekt reprezentuje semafora systemu o nazwie, użytkownik musi mieć <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> prawa i semaforów musi mieć została otwarta z <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> praw.</span><span class="sxs-lookup"><span data-stu-id="d0276-340">If the current <xref:System.Threading.Semaphore> object represents a named system semaphore, the user must have <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> rights and the semaphore must have been opened with <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> rights.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0276-341">Poniższy przykład kodu tworzy semafora maksymalnej liczby trzy i liczba początkowa zero.</span><span class="sxs-lookup"><span data-stu-id="d0276-341">The following code example creates a semaphore with a maximum count of three and an initial count of zero.</span></span> <span data-ttu-id="d0276-342">W przykładzie uruchomiono pięć wątków, które blokują oczekiwania semaforów.</span><span class="sxs-lookup"><span data-stu-id="d0276-342">The example starts five threads, which block waiting for the semaphore.</span></span> <span data-ttu-id="d0276-343">Korzysta z wątku głównego <xref:System.Threading.Semaphore.Release%28System.Int32%29> przeciążenie metody, aby zwiększyć licznik semafora do jego maksymalnej, umożliwiając trzech wątków na wejście do semafora.</span><span class="sxs-lookup"><span data-stu-id="d0276-343">The main thread uses the <xref:System.Threading.Semaphore.Release%28System.Int32%29> method overload to increase the semaphore count to its maximum, allowing three threads to enter the semaphore.</span></span> <span data-ttu-id="d0276-344">Każdy wątek używa <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> Poczekaj chwilę, symulacji pracy i wywołania metody <xref:System.Threading.Semaphore.Release> przeciążenie metody, aby zwolnić semafora.</span><span class="sxs-lookup"><span data-stu-id="d0276-344">Each thread uses the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method to wait for one second, to simulate work, and then calls the <xref:System.Threading.Semaphore.Release> method overload to release the semaphore.</span></span>  
  
 <span data-ttu-id="d0276-345">Zawsze, gdy wydaniu semafora poprzedniej Licznik semafora jest wyświetlany.</span><span class="sxs-lookup"><span data-stu-id="d0276-345">Each time the semaphore is released, the previous semaphore count is displayed.</span></span> <span data-ttu-id="d0276-346">Użycie semafora śledzenie wiadomości konsoli.</span><span class="sxs-lookup"><span data-stu-id="d0276-346">Console messages track semaphore use.</span></span> <span data-ttu-id="d0276-347">Interwał symulowane pracy zwiększają się nieznacznie dla każdego wątku, aby ułatwić dane wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="d0276-347">The simulated work interval is increased slightly for each thread, to make the output easier to read.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d0276-348">
            <paramref name="releaseCount" /> jest mniejsza niż 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-348">
              <paramref name="releaseCount" /> is less than 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.SemaphoreFullException">
          <span data-ttu-id="d0276-349">Licznik semafora jest już w wartości maksymalnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-349">The semaphore count is already at the maximum value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d0276-350">Wystąpił błąd Win32 z nazwanym semafora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-350">A Win32 error occurred with a named semaphore.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="d0276-351">Semafor bieżącego reprezentuje semafora systemu o nazwie, ale użytkownik nie ma <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" /> praw.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-351">The current semaphore represents a named system semaphore, but the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" /> rights.</span>
          </span>
          <span data-ttu-id="d0276-352">- lub - bieżącego semafora reprezentuje semafora systemu o nazwie, ale nie została otwarta z <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" /> praw.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-352">-or-  The current semaphore represents a named system semaphore, but it was not opened with <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" /> rights.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.Security.AccessControl.SemaphoreSecurity semaphoreSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.Security.AccessControl.SemaphoreSecurity semaphoreSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.SetAccessControl(System.Security.AccessControl.SemaphoreSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::Security::AccessControl::SemaphoreSecurity ^ semaphoreSecurity);" />
      <MemberSignature Language="F#" Value="member this.SetAccessControl : System.Security.AccessControl.SemaphoreSecurity -&gt; unit" Usage="semaphore.SetAccessControl semaphoreSecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="semaphoreSecurity" Type="System.Security.AccessControl.SemaphoreSecurity" />
      </Parameters>
      <Docs>
        <param name="semaphoreSecurity">
          <span data-ttu-id="d0276-353">A <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> obiekt, który reprezentuje kontrolę dostępu ma zostać zastosowany do semafora systemu o nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-353">A <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> object that represents the access control security to be applied to the named system semaphore.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0276-354">Ustawia kontrolę dostępu do semafora systemu o nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-354">Sets the access control security for a named system semaphore.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0276-355">Kontrolę dostępu można ustawić tylko na <xref:System.Threading.Semaphore> obiekty reprezentujące semaforów systemu o nazwie.</span><span class="sxs-lookup"><span data-stu-id="d0276-355">You can set access control security only on <xref:System.Threading.Semaphore> objects that represent named system semaphores.</span></span>  
  
 <span data-ttu-id="d0276-356">Użytkownik musi mieć <xref:System.Security.AccessControl.SemaphoreRights.ChangePermissions?displayProperty=nameWithType> praw, aby wywołać tę metodę i semaforów musi została otwarta z <xref:System.Security.AccessControl.SemaphoreRights.ChangePermissions?displayProperty=nameWithType> praw.</span><span class="sxs-lookup"><span data-stu-id="d0276-356">The user must have <xref:System.Security.AccessControl.SemaphoreRights.ChangePermissions?displayProperty=nameWithType> rights to call this method, and the semaphore must have been opened with <xref:System.Security.AccessControl.SemaphoreRights.ChangePermissions?displayProperty=nameWithType> rights.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d0276-357">Poniższy przykład kodu pokazuje zachowanie międzyprocesowa nazwanego semafora z kontrolę dostępu.</span><span class="sxs-lookup"><span data-stu-id="d0276-357">The following code example demonstrates the cross-process behavior of a named semaphore with access control security.</span></span> <span data-ttu-id="d0276-358">W przykładzie użyto <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> przeciążenie metody do testowania istnieje semafor o nazwie.</span><span class="sxs-lookup"><span data-stu-id="d0276-358">The example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method overload to test for the existence of a named semaphore.</span></span>  
  
 <span data-ttu-id="d0276-359">Jeśli nie istnieje semafor, tworzona jest maksymalna liczba dwóch oraz kontrolę dostępu, który nie zezwala na bieżący użytkownik prawa do używania semafora, ale daje prawo do odczytu, a zmiana uprawnień do semafora.</span><span class="sxs-lookup"><span data-stu-id="d0276-359">If the semaphore does not exist, it is created with a maximum count of two and with access control security that denies the current user the right to use the semaphore but grants the right to read and change permissions on the semaphore.</span></span>  
  
 <span data-ttu-id="d0276-360">Jeśli uruchamiane skompilowany przykład dwa okna polecenia, druga kopia spowoduje zgłoszenie wyjątku naruszenie dostępu w wywołaniu <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> metody.</span><span class="sxs-lookup"><span data-stu-id="d0276-360">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method.</span></span> <span data-ttu-id="d0276-361">Wyjątek zostanie przechwycony i w przykładzie użyto <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> przeciążenie metody, aby otworzyć semafora z uprawnień wymaganych do odczytywania i zmienić uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="d0276-361">The exception is caught, and the example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> method overload to open the semaphore with the rights needed to read and change the permissions.</span></span>  
  
 <span data-ttu-id="d0276-362">Po zmianie uprawnienia, przy użyciu <xref:System.Threading.Semaphore.SetAccessControl%2A> metody semafora jest otwierany z uprawnień wymaganych do wprowadzania i wersji.</span><span class="sxs-lookup"><span data-stu-id="d0276-362">After the permissions are changed, using the <xref:System.Threading.Semaphore.SetAccessControl%2A> method, the semaphore is opened with the rights required to enter and release.</span></span> <span data-ttu-id="d0276-363">Trzeci okno polecenia uruchamiane przykład skompilowany, uruchamia, przy użyciu nowe uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="d0276-363">If you run the compiled example from a third command window, it runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d0276-364">
            <paramref name="semaphoreSecurity" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-364">
              <paramref name="semaphoreSecurity" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="d0276-365">Użytkownik nie ma <see cref="F:System.Security.AccessControl.SemaphoreRights.ChangePermissions" /> praw.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-365">The user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.ChangePermissions" /> rights.</span>
          </span>
          <span data-ttu-id="d0276-366">- lub - semafora nie została otwarta z <see cref="F:System.Security.AccessControl.SemaphoreRights.ChangePermissions" /> praw.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-366">-or-  The semaphore was not opened with <see cref="F:System.Security.AccessControl.SemaphoreRights.ChangePermissions" /> rights.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d0276-367">Bieżący <see cref="T:System.Threading.Semaphore" /> obiekt nie reprezentuje semafora systemu o nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-367">The current <see cref="T:System.Threading.Semaphore" /> object does not represent a named system semaphore.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryOpenExisting">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d0276-368">Otwiera określony semafor o nazwie, jeśli już istnieje i zwraca wartość wskazującą, czy operacja zakończyła się pomyślnie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-368">Opens a specified named semaphore, if it already exists, and returns a value that indicates whether the operation succeeded.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryOpenExisting">
      <MemberSignature Language="C#" Value="public static bool TryOpenExisting (string name, out System.Threading.Semaphore result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryOpenExisting(string name, [out] class System.Threading.Semaphore&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.TryOpenExisting(System.String,System.Threading.Semaphore@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryOpenExisting (name As String, ByRef result As Semaphore) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryOpenExisting(System::String ^ name, [Runtime::InteropServices::Out] System::Threading::Semaphore ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryOpenExisting : string *  -&gt; bool" Usage="System.Threading.Semaphore.TryOpenExisting (name, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="result" Type="System.Threading.Semaphore&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="d0276-369">Nazwa semafora systemu, aby otworzyć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-369">The name of the system semaphore to open.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="d0276-370">Po powrocie z tej metody zawiera <see cref="T:System.Threading.Semaphore" /> obiekt, który reprezentuje semafor o nazwie, jeśli wywołanie zakończyło się pomyślnie, lub <see langword="null" /> Jeśli wywołanie zakończyło się niepowodzeniem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-370">When this method returns, contains a <see cref="T:System.Threading.Semaphore" /> object that represents the named semaphore if the call succeeded, or <see langword="null" /> if the call failed.</span>
          </span>
          <span data-ttu-id="d0276-371">Ten parametr jest traktowany jako niezainicjowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-371">This parameter is treated as uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0276-372">Otwiera określony semafor o nazwie, jeśli już istnieje i zwraca wartość wskazującą, czy operacja zakończyła się pomyślnie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-372">Opens the specified named semaphore, if it already exists, and returns a value that indicates whether the operation succeeded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0276-373">
            <see langword="true" /> Jeśli nazwany semafora została otwarta pomyślnie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-373">
              <see langword="true" /> if the named semaphore was opened successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0276-374">Jeśli nie istnieje semafor o nazwie, ta metoda nie tworzy go.</span><span class="sxs-lookup"><span data-stu-id="d0276-374">If the named semaphore does not exist, this method does not create it.</span></span> <span data-ttu-id="d0276-375">Aby utworzyć semafora systemu, gdy jeszcze nie istnieje, użyj jednej z <xref:System.Threading.Semaphore.%23ctor%2A> ma konstruktorów `name` parametru.</span><span class="sxs-lookup"><span data-stu-id="d0276-375">To create the system semaphore when it does not already exist, use one of the <xref:System.Threading.Semaphore.%23ctor%2A> constructors that has a `name` parameter.</span></span>  
  
 <span data-ttu-id="d0276-376">Jeśli masz pewności, czy istnieje semafor o nazwie, użyj tego przeciążenia metody zamiast <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> przeciążenie metody, która zgłasza wyjątek, jeśli nie istnieje semafor.</span><span class="sxs-lookup"><span data-stu-id="d0276-376">If you are uncertain whether a named semaphore exists, use this method overload instead of the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method overload, which throws an exception if the semaphore does not exist.</span></span>  
  
 <span data-ttu-id="d0276-377">Przeciążenie tej metody jest odpowiednikiem wywołania <xref:System.Threading.Semaphore.TryOpenExisting%2A> przeciążenie metody i określając <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> i <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> praw, połączone przy użyciu operacji lub.</span><span class="sxs-lookup"><span data-stu-id="d0276-377">This method overload is equivalent to calling the <xref:System.Threading.Semaphore.TryOpenExisting%2A> method overload and specifying <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> and <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> rights, combined by using the bitwise OR operation.</span></span> <span data-ttu-id="d0276-378">Określanie <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> Flaga umożliwia wątku na wejście do semafora i określając <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> Flaga umożliwia wątku w celu wywołania <xref:System.Threading.Semaphore.Release%2A> — metoda.</span><span class="sxs-lookup"><span data-stu-id="d0276-378">Specifying the <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> flag allows a thread to enter the semaphore, and specifying the   <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> flag allows a thread to call the <xref:System.Threading.Semaphore.Release%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d0276-379">
            <paramref name="name" /> jest pustym ciągiem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-379">
              <paramref name="name" /> is an empty string.</span>
          </span>
          <span data-ttu-id="d0276-380">- lub - <paramref name="name" /> jest dłuższa niż 260 znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-380">-or-  <paramref name="name" /> is longer than 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d0276-381">
            <paramref name="name" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-381">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d0276-382">Wystąpił błąd systemu Win32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-382">A Win32 error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="d0276-383">Istnieje semafor o nazwie, ale użytkownik nie ma dostępu zabezpieczeń, trzeba go używać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-383">The named semaphore exists, but the user does not have the security access required to use it.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryOpenExisting">
      <MemberSignature Language="C#" Value="public static bool TryOpenExisting (string name, System.Security.AccessControl.SemaphoreRights rights, out System.Threading.Semaphore result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryOpenExisting(string name, valuetype System.Security.AccessControl.SemaphoreRights rights, [out] class System.Threading.Semaphore&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.TryOpenExisting(System.String,System.Security.AccessControl.SemaphoreRights,System.Threading.Semaphore@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryOpenExisting (name As String, rights As SemaphoreRights, ByRef result As Semaphore) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryOpenExisting(System::String ^ name, System::Security::AccessControl::SemaphoreRights rights, [Runtime::InteropServices::Out] System::Threading::Semaphore ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryOpenExisting : string * System.Security.AccessControl.SemaphoreRights *  -&gt; bool" Usage="System.Threading.Semaphore.TryOpenExisting (name, rights, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="rights" Type="System.Security.AccessControl.SemaphoreRights" />
        <Parameter Name="result" Type="System.Threading.Semaphore&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="d0276-384">Nazwa semafora systemu, aby otworzyć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-384">The name of the system semaphore to open.</span>
          </span>
        </param>
        <param name="rights">
          <span data-ttu-id="d0276-385">Bitowe połączenie wartości wyliczenia, które reprezentują dostęp wymaganymi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-385">A bitwise combination of the enumeration values that represent the desired security access.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="d0276-386">Po powrocie z tej metody zawiera <see cref="T:System.Threading.Semaphore" /> obiekt, który reprezentuje semafor o nazwie, jeśli wywołanie zakończyło się pomyślnie, lub <see langword="null" /> Jeśli wywołanie zakończyło się niepowodzeniem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-386">When this method returns, contains a <see cref="T:System.Threading.Semaphore" /> object that represents the named semaphore if the call succeeded, or <see langword="null" /> if the call failed.</span>
          </span>
          <span data-ttu-id="d0276-387">Ten parametr jest traktowany jako niezainicjowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-387">This parameter is treated as uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0276-388">Otwiera określony semafor o nazwie, jeśli już istnieje z wymaganymi dostęp i zwraca wartość wskazującą, czy operacja zakończyła się pomyślnie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-388">Opens the specified named semaphore, if it already exists, with the desired security access, and returns a value that indicates whether the operation succeeded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0276-389">
            <see langword="true" /> Jeśli nazwany semafora została otwarta pomyślnie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-389">
              <see langword="true" /> if the named semaphore was opened successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0276-390">Jeśli nie istnieje semafor o nazwie, ta metoda nie tworzy go.</span><span class="sxs-lookup"><span data-stu-id="d0276-390">If the named semaphore does not exist, this method does not create it.</span></span> <span data-ttu-id="d0276-391">Aby utworzyć semafora systemu, gdy jeszcze nie istnieje, użyj jednej z <xref:System.Threading.Semaphore.%23ctor%2A> ma konstruktorów `name` parametru.</span><span class="sxs-lookup"><span data-stu-id="d0276-391">To create the system semaphore when it does not already exist, use one of the <xref:System.Threading.Semaphore.%23ctor%2A> constructors that has a `name` parameter.</span></span>  
  
 <span data-ttu-id="d0276-392">Jeśli masz pewności, czy istnieje semafor o nazwie, użyj tego przeciążenia metody zamiast <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> przeciążenie metody, która zgłasza wyjątek, jeśli nie istnieje semafor.</span><span class="sxs-lookup"><span data-stu-id="d0276-392">If you are uncertain whether a named semaphore exists, use this method overload instead of the <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> method overload, which throws an exception if the semaphore does not exist.</span></span>  
  
 <span data-ttu-id="d0276-393">`rights` Parametr musi zawierać <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> flagę wątków na wejście do semafora i <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> flagę wątków, aby wywołać <xref:System.Threading.Semaphore.Release%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="d0276-393">The `rights` parameter must include the <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> flag to allow threads to enter the semaphore, and the <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> flag to allow threads to call the <xref:System.Threading.Semaphore.Release%2A> method.</span></span>  
  
 <span data-ttu-id="d0276-394">Wiele wywołań do tej metody, używanego przez tę samą wartość `name` nie musi zwracać taki sam <xref:System.Threading.Semaphore> obiektu, nawet jeśli obiekty, które reprezentują zwracane są takie same o nazwie semafora systemowego.</span><span class="sxs-lookup"><span data-stu-id="d0276-394">Multiple calls to this method that use the same value for `name` do not necessarily return the same <xref:System.Threading.Semaphore> object, even though the objects that are returned represent the same named system semaphore.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d0276-395">
            <paramref name="name" /> jest pustym ciągiem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-395">
              <paramref name="name" /> is an empty string.</span>
          </span>
          <span data-ttu-id="d0276-396">- lub - <paramref name="name" /> jest dłuższa niż 260 znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-396">-or-  <paramref name="name" /> is longer than 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d0276-397">
            <paramref name="name" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-397">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="d0276-398">Wystąpił błąd systemu Win32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-398">A Win32 error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="d0276-399">Istnieje semafor o nazwie, ale użytkownik nie ma dostępu zabezpieczeń, trzeba go używać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0276-399">The named semaphore exists, but the user does not have the security access required to use it.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>