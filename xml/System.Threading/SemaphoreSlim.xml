<Type Name="SemaphoreSlim" FullName="System.Threading.SemaphoreSlim">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="28a8b6a13da8fe2363454359670ae82fc47c4f19" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39759144" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SemaphoreSlim : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SemaphoreSlim extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.SemaphoreSlim" />
  <TypeSignature Language="VB.NET" Value="Public Class SemaphoreSlim&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SemaphoreSlim : IDisposable" />
  <TypeSignature Language="F#" Value="type SemaphoreSlim = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Current Count = {m_currentCount}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d5a24-101">Reprezentuje uproszczone zamiast <see cref="T:System.Threading.Semaphore" /> , która ogranicza liczbę wątków, które mogą uzyskać dostęp do zasobu lub puli zasobów jednocześnie.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d5a24-101">Represents a lightweight alternative to <see cref="T:System.Threading.Semaphore" /> that limits the number of threads that can access a resource or pool of resources concurrently.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5a24-102">Istnieją dwa typy semaforów: lokalne semaforów i semaforów systemu o nazwie.</span><span class="sxs-lookup"><span data-stu-id="d5a24-102">Semaphores are of two types: local semaphores and named system semaphores.</span></span> <span data-ttu-id="d5a24-103">Jest lokalne dla aplikacji.</span><span class="sxs-lookup"><span data-stu-id="d5a24-103">The former is local to an app.</span></span> <span data-ttu-id="d5a24-104">Te ostatnie są widoczne w całym systemie operacyjnym i nadaje się do synchronizacji między procesami.</span><span class="sxs-lookup"><span data-stu-id="d5a24-104">The latter is visible throughout the operating system and is suitable for inter-process synchronization.</span></span> <span data-ttu-id="d5a24-105"><xref:System.Threading.SemaphoreSlim> Jest uproszczone alternatywa dla <xref:System.Threading.Semaphore> klasę, która nie korzysta z semaforów jądra Windows.</span><span class="sxs-lookup"><span data-stu-id="d5a24-105">The <xref:System.Threading.SemaphoreSlim> is a lightweight alternative to the <xref:System.Threading.Semaphore> class that doesn't use Windows kernel semaphores.</span></span> <span data-ttu-id="d5a24-106">W odróżnieniu od <xref:System.Threading.Semaphore> klasy <xref:System.Threading.SemaphoreSlim> klasa nie obsługuje systemu o nazwie semaforów.</span><span class="sxs-lookup"><span data-stu-id="d5a24-106">Unlike the <xref:System.Threading.Semaphore> class, the <xref:System.Threading.SemaphoreSlim> class doesn't support named system semaphores.</span></span> <span data-ttu-id="d5a24-107">Służy on jako tylko lokalne semafora.</span><span class="sxs-lookup"><span data-stu-id="d5a24-107">You can use it as a local semaphore only.</span></span> <span data-ttu-id="d5a24-108"><xref:System.Threading.SemaphoreSlim> Klasa jest zalecane semafora synchronizacji w obrębie pojedynczej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="d5a24-108">The <xref:System.Threading.SemaphoreSlim> class is the recommended semaphore for synchronization within a single app.</span></span>  
  
 <span data-ttu-id="d5a24-109">Uproszczone semafora kontroluje dostęp do puli zasobów, lokalne dla aplikacji.</span><span class="sxs-lookup"><span data-stu-id="d5a24-109">A lightweight semaphore controls access to a pool of resources that is local to your application.</span></span> <span data-ttu-id="d5a24-110">Podczas tworzenia wystąpienia semafor, można określić maksymalną liczbę wątków, które można wprowadzić semafora jednocześnie.</span><span class="sxs-lookup"><span data-stu-id="d5a24-110">When you instantiate a semaphore, you can specify the maximum number of threads that can enter the semaphore concurrently.</span></span> <span data-ttu-id="d5a24-111">Możesz również określić początkowa liczba wątków, które można wprowadzić semafora jednocześnie.</span><span class="sxs-lookup"><span data-stu-id="d5a24-111">You also specify the initial number of threads that can enter the semaphore concurrently.</span></span> <span data-ttu-id="d5a24-112">Definiuje liczbę semafora.</span><span class="sxs-lookup"><span data-stu-id="d5a24-112">This defines the semaphore's count.</span></span>  
  
 <span data-ttu-id="d5a24-113">Liczba zostanie zmniejszony każdorazowo wątek wchodzi semafora i zwiększana za każdym razem wątku zwalnia semafora.</span><span class="sxs-lookup"><span data-stu-id="d5a24-113">The count is decremented each time a thread enters the semaphore, and incremented each time a thread releases the semaphore.</span></span> <span data-ttu-id="d5a24-114">Aby wprowadzić semafora, wątek wywołuje jedną z <xref:System.Threading.SemaphoreSlim.Wait%2A> lub <xref:System.Threading.SemaphoreSlim.WaitAsync%2A> przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="d5a24-114">To enter the semaphore, a thread calls one of the <xref:System.Threading.SemaphoreSlim.Wait%2A> or <xref:System.Threading.SemaphoreSlim.WaitAsync%2A> overloads.</span></span> <span data-ttu-id="d5a24-115">Aby zwolnić semafora, wywołuje jedną z <xref:System.Threading.SemaphoreSlim.Release%2A> przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="d5a24-115">To release the semaphore, it calls one of the <xref:System.Threading.SemaphoreSlim.Release%2A> overloads.</span></span> <span data-ttu-id="d5a24-116">Gdy licznik osiągnie zero, kolejne wywołania do jednego z `Wait` metody zapewnić blokowanie do zakończenia inne wątki wersji semafora.</span><span class="sxs-lookup"><span data-stu-id="d5a24-116">When the count reaches zero, subsequent calls to one of the `Wait` methods block until other threads release the semaphore.</span></span> <span data-ttu-id="d5a24-117">Po zablokowaniu wiele wątków nie jest zagwarantowana kolejność, takich jak FIFO lub LIFO sterującą, kiedy wątków wprowadź semafora.</span><span class="sxs-lookup"><span data-stu-id="d5a24-117">If multiple threads are blocked, there is no guaranteed order, such as FIFO or LIFO, that controls when threads enter the semaphore.</span></span>  
  
 <span data-ttu-id="d5a24-118">Podstawowa struktura kodu, który używa semafor do ochrony zasobów jest:</span><span class="sxs-lookup"><span data-stu-id="d5a24-118">The basic structure for code that uses a semaphore to protect resources is:</span></span>  
  
```vb  
  
' Enter semaphore by calling one of the Wait or WaitAsync methods.  
SemaphoreSlim.Wait()  
'   
' Execute code protected by the semaphore.   
'  
SemaphoreSlim.Release()  
  
```  
  
 <span data-ttu-id="d5a24-119">Gdy wszystkie wątki zostały wydane semafora, liczba przy maksymalnej wartości określono podczas tworzenia semafora.</span><span class="sxs-lookup"><span data-stu-id="d5a24-119">When all threads have released the semaphore, the count is at the maximum value specified when the semaphore was created.</span></span> <span data-ttu-id="d5a24-120">Semafor licznik jest dostępny z <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="d5a24-120">The semaphore's count is available from the <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d5a24-121"><xref:System.Threading.SemaphoreSlim> Klasy nie wymuszają tożsamość wątku lub zadania na wywołania <xref:System.Threading.SemaphoreSlim.Wait%2A>, <xref:System.Threading.SemaphoreSlim.WaitAsync%2A>, i <xref:System.Threading.SemaphoreSlim.Release%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="d5a24-121">The <xref:System.Threading.SemaphoreSlim> class doesn't enforce thread or task identity on calls to the <xref:System.Threading.SemaphoreSlim.Wait%2A>, <xref:System.Threading.SemaphoreSlim.WaitAsync%2A>, and <xref:System.Threading.SemaphoreSlim.Release%2A> methods.</span></span> <span data-ttu-id="d5a24-122">Ponadto jeśli <xref:System.Threading.SemaphoreSlim.%23ctor%28System.Int32%29> Konstruktor jest używany do utworzenia wystąpienia <xref:System.Threading.SemaphoreSlim> obiektu <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> właściwości można zwiększyć przekracza wartość ustawioną przy użyciu konstruktora.</span><span class="sxs-lookup"><span data-stu-id="d5a24-122">In addition, if the <xref:System.Threading.SemaphoreSlim.%23ctor%28System.Int32%29> constructor is used to instantiate the <xref:System.Threading.SemaphoreSlim> object, the <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> property can increase beyond the value set by the constructor.</span></span> <span data-ttu-id="d5a24-123">Odpowiada za programisty upewnij się, który wywołuje w celu <xref:System.Threading.SemaphoreSlim.Wait%2A> lub <xref:System.Threading.SemaphoreSlim.WaitAsync%2A> metody odpowiednio są skojarzone z wywołaniami <xref:System.Threading.SemaphoreSlim.Release%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="d5a24-123">It is the programmer's responsibility to ensure that calls to <xref:System.Threading.SemaphoreSlim.Wait%2A> or <xref:System.Threading.SemaphoreSlim.WaitAsync%2A> methods are appropriately paired with calls to <xref:System.Threading.SemaphoreSlim.Release%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5a24-124">Poniższy przykład tworzy semafor maksymalna liczba wątków trzy i początkowa liczba wątków, zerowego.</span><span class="sxs-lookup"><span data-stu-id="d5a24-124">The following example creates a semaphore with a maximum count of three threads and an initial count of zero threads.</span></span> <span data-ttu-id="d5a24-125">W przykładzie uruchomiono pięć zadań, które blokować oczekiwanie na semafora.</span><span class="sxs-lookup"><span data-stu-id="d5a24-125">The example starts five tasks, all of which block waiting for the semaphore.</span></span> <span data-ttu-id="d5a24-126">Wywołania wątku głównego <xref:System.Threading.SemaphoreSlim.Release%28System.Int32%29> przeciążenia, aby zwiększyć tę liczbę semafora jego wartość maksymalną, co pozwala trzy zadania wprowadzić semafora.</span><span class="sxs-lookup"><span data-stu-id="d5a24-126">The main thread calls the <xref:System.Threading.SemaphoreSlim.Release%28System.Int32%29> overload to increase the semaphore count to its maximum, which allows three tasks to enter the semaphore.</span></span> <span data-ttu-id="d5a24-127">Każdorazowo, gdy wydaniu semafora wyświetlane liczba semafora w poprzednim.</span><span class="sxs-lookup"><span data-stu-id="d5a24-127">Each time the semaphore is released, the previous semaphore count is displayed.</span></span> <span data-ttu-id="d5a24-128">Użycie konsoli komunikaty śledzenia semafora.</span><span class="sxs-lookup"><span data-stu-id="d5a24-128">Console messages track semaphore use.</span></span> <span data-ttu-id="d5a24-129">Interwał symulowane pracy zwiększa się nieco dla każdego wątku ułatwić dane wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="d5a24-129">The simulated work interval is increased slightly for each thread to make the output easier to read.</span></span>  
  
 [!code-csharp[System.Threading.SemaphoreSlim#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.semaphoreslim/cs/example.cs#1)]
 [!code-vb[System.Threading.SemaphoreSlim#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.semaphoreslim/vb/example.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="d5a24-130">Wszystkie publiczne i chronione elementy członkowskie <see cref="T:System.Threading.SemaphoreSlim" /> są odporne na wątki i mogą być używane jednocześnie z wielu wątków, z wyjątkiem produktów <see cref="M:System.Threading.SemaphoreSlim.Dispose" />, które muszą być zastosowane tylko wtedy, gdy wszystkie operacje na <see cref="T:System.Threading.SemaphoreSlim" /> została ukończona.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d5a24-130">All public and protected members of <see cref="T:System.Threading.SemaphoreSlim" /> are thread-safe and may be used concurrently from multiple threads, with the exception of <see cref="M:System.Threading.SemaphoreSlim.Dispose" />, which must be used only when all other operations on the <see cref="T:System.Threading.SemaphoreSlim" /> have completed.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d5a24-131">Inicjuje nowe wystąpienie klasy <see cref="T:System.Threading.SemaphoreSlim" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-131">Initializes a new instance of the <see cref="T:System.Threading.SemaphoreSlim" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemaphoreSlim (int initialCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreSlim.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemaphoreSlim(int initialCount);" />
      <MemberSignature Language="F#" Value="new System.Threading.SemaphoreSlim : int -&gt; System.Threading.SemaphoreSlim" Usage="new System.Threading.SemaphoreSlim initialCount" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="initialCount">
          <span data-ttu-id="d5a24-132">Początkowa liczba żądań semaforów, które mogą być przyznane jednocześnie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-132">The initial number of requests for the semaphore that can be granted concurrently.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5a24-133">Inicjuje nowe wystąpienie klasy <see cref="T:System.Threading.SemaphoreSlim" /> klasy, określając początkowa liczba żądań, które mogą być udzielane jednocześnie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-133">Initializes a new instance of the <see cref="T:System.Threading.SemaphoreSlim" /> class, specifying the initial number of requests that can be granted concurrently.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5a24-134">`initialCount` Parametr określa liczbę równoczesnych żądań, aby wprowadzić semafor, które mogą być przyznane.</span><span class="sxs-lookup"><span data-stu-id="d5a24-134">The `initialCount` parameter defines the number of concurrent requests to enter the semaphore that can be granted.</span></span> <span data-ttu-id="d5a24-135">Jednak nedefinuje maksymalną liczbę żądań, które mogą być udzielane jednocześnie.</span><span class="sxs-lookup"><span data-stu-id="d5a24-135">However, it doesn't define the maximum number of requests that can be granted concurrently.</span></span> <span data-ttu-id="d5a24-136">A <xref:System.Threading.SemaphoreSlim> tworzone przez wywołanie konstruktora tego obiektu nie wyrzuca <xref:System.Threading.SemaphoreFullException> wyjątek, jeśli wywołanie <xref:System.Threading.SemaphoreSlim.Release%2A> metody zwiększa ich wartość <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> właściwość poza `initialCount`.</span><span class="sxs-lookup"><span data-stu-id="d5a24-136">A   <xref:System.Threading.SemaphoreSlim> object instantiated by calling this constructor doesn't throw a <xref:System.Threading.SemaphoreFullException> exception if a call to the <xref:System.Threading.SemaphoreSlim.Release%2A> method increases the value of the <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> property beyond `initialCount`.</span></span> <span data-ttu-id="d5a24-137">Dzieje się tak w przypadku więcej wywołań <xref:System.Threading.SemaphoreSlim.Release%2A> metody niż tam są <xref:System.Threading.SemaphoreSlim.Wait%2A> lub <xref:System.Threading.SemaphoreSlim.WaitAsync%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="d5a24-137">This occurs if there are more calls to <xref:System.Threading.SemaphoreSlim.Release%2A> methods than there are to <xref:System.Threading.SemaphoreSlim.Wait%2A> or <xref:System.Threading.SemaphoreSlim.WaitAsync%2A> methods.</span></span> <span data-ttu-id="d5a24-138">Aby ustawić maksymalną liczbę równoczesnych żądań, aby wprowadzić semafor, które mogą być przyznane, należy wywołać <xref:System.Threading.SemaphoreSlim.%23ctor%28System.Int32%2CSystem.Int32%29> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="d5a24-138">To set the maximum number of concurrent requests to enter the semaphore that can be granted, call the <xref:System.Threading.SemaphoreSlim.%23ctor%28System.Int32%2CSystem.Int32%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d5a24-139">
            <paramref name="initialCount" /> jest mniejsza niż 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-139">
              <paramref name="initialCount" /> is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemaphoreSlim (int initialCount, int maxCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCount, int32 maxCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreSlim.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialCount As Integer, maxCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemaphoreSlim(int initialCount, int maxCount);" />
      <MemberSignature Language="F#" Value="new System.Threading.SemaphoreSlim : int * int -&gt; System.Threading.SemaphoreSlim" Usage="new System.Threading.SemaphoreSlim (initialCount, maxCount)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialCount" Type="System.Int32" />
        <Parameter Name="maxCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="initialCount">
          <span data-ttu-id="d5a24-140">Początkowa liczba żądań semaforów, które mogą być przyznane jednocześnie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-140">The initial number of requests for the semaphore that can be granted concurrently.</span>
          </span>
        </param>
        <param name="maxCount">
          <span data-ttu-id="d5a24-141">Maksymalna liczba żądań dotyczących semafor, które mogą być przyznane jednocześnie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-141">The maximum number of requests for the semaphore that can be granted concurrently.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5a24-142">Inicjuje nowe wystąpienie klasy <see cref="T:System.Threading.SemaphoreSlim" /> klasy, określający początkowej i maksymalna liczba żądań, które mogą być udzielane jednocześnie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-142">Initializes a new instance of the <see cref="T:System.Threading.SemaphoreSlim" /> class, specifying the initial and maximum number of requests that can be granted concurrently.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d5a24-143">
            <paramref name="initialCount" /> jest mniejsza niż 0, lub <paramref name="initialCount" /> jest większa niż <paramref name="maxCount" />, lub <paramref name="maxCount" /> jest równa lub mniejsza niż 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-143">
              <paramref name="initialCount" /> is less than 0, or <paramref name="initialCount" /> is greater than <paramref name="maxCount" />, or <paramref name="maxCount" /> is equal to or less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AvailableWaitHandle">
      <MemberSignature Language="C#" Value="public System.Threading.WaitHandle AvailableWaitHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.WaitHandle AvailableWaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.Threading.SemaphoreSlim.AvailableWaitHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailableWaitHandle As WaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::WaitHandle ^ AvailableWaitHandle { System::Threading::WaitHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AvailableWaitHandle : System.Threading.WaitHandle" Usage="System.Threading.SemaphoreSlim.AvailableWaitHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5a24-144">Zwraca <see cref="T:System.Threading.WaitHandle" /> można czekać na semafora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-144">Returns a <see cref="T:System.Threading.WaitHandle" /> that can be used to wait on the semaphore.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5a24-145">Element <see cref="T:System.Threading.WaitHandle" /> można czekać na semafora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-145">A <see cref="T:System.Threading.WaitHandle" /> that can be used to wait on the semaphore.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5a24-146">Tylko wtedy, gdy musi czekać na SemaphoreSlim z innymi obiektami synchronizacja na podstawie jądra z tej samej dojście oczekiwania, należy użyć tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="d5a24-146">Use this property only when you must wait on a SemaphoreSlim together with other kernel-based synchronization objects with the same wait handle.</span></span> <span data-ttu-id="d5a24-147">Pomyślne oczekiwania na <xref:System.Threading.SemaphoreSlim.AvailableWaitHandle%2A> nie oznacza pomyślne oczekiwania na <xref:System.Threading.SemaphoreSlim> , ani nie jest zmniejsza liczbę semafora.</span><span class="sxs-lookup"><span data-stu-id="d5a24-147">A successful wait on the <xref:System.Threading.SemaphoreSlim.AvailableWaitHandle%2A> does not imply a successful wait on the <xref:System.Threading.SemaphoreSlim> itself, nor does it decrement the semaphore's count.</span></span> <span data-ttu-id="d5a24-148">Po dojście oczekiwania dostępne jest sygnalizowane, należy poczekać <xref:System.Threading.SemaphoreSlim> specjalnie.</span><span class="sxs-lookup"><span data-stu-id="d5a24-148">After the available wait handle is signaled, you should wait on the <xref:System.Threading.SemaphoreSlim> specifically.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d5a24-149">
            <see cref="T:System.Threading.SemaphoreSlim" /> Został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-149">The <see cref="T:System.Threading.SemaphoreSlim" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentCount">
      <MemberSignature Language="C#" Value="public int CurrentCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentCount" />
      <MemberSignature Language="DocId" Value="P:System.Threading.SemaphoreSlim.CurrentCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrentCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentCount : int" Usage="System.Threading.SemaphoreSlim.CurrentCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5a24-150">Pobiera liczbę pozostałych wątków, które można wprowadzić <see cref="T:System.Threading.SemaphoreSlim" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-150">Gets the number of remaining threads that can enter the <see cref="T:System.Threading.SemaphoreSlim" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5a24-151">Liczba pozostałych wątków, które można wprowadzić semafora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-151">The number of remaining threads that can enter the semaphore.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5a24-152">Początkowa wartość <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> właściwość jest ustawiana przez wywołanie metody <xref:System.Threading.SemaphoreSlim.%23ctor%2A> konstruktora klasy.</span><span class="sxs-lookup"><span data-stu-id="d5a24-152">The initial value of the <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> property is set by the call to the <xref:System.Threading.SemaphoreSlim.%23ctor%2A> class constructor.</span></span> <span data-ttu-id="d5a24-153">Jest zmniejszany przez każde wywołanie <xref:System.Threading.SemaphoreSlim.Wait%2A> lub <xref:System.Threading.SemaphoreSlim.WaitAsync%2A> metody i zwiększając każde wywołanie <xref:System.Threading.SemaphoreSlim.Release%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="d5a24-153">It is decremented by each call to the <xref:System.Threading.SemaphoreSlim.Wait%2A> or <xref:System.Threading.SemaphoreSlim.WaitAsync%2A> method, and incremented by each call to the <xref:System.Threading.SemaphoreSlim.Release%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d5a24-154">Zwalnia zasoby używane przez bieżące wystąpienie <see cref="T:System.Threading.SemaphoreSlim" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-154">Releases resources used by the current instance of the <see cref="T:System.Threading.SemaphoreSlim" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreSlim.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="semaphoreSlim.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d5a24-155">Zwalnia wszelkie zasoby używane przez bieżące wystąpienie <see cref="T:System.Threading.SemaphoreSlim" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-155">Releases all resources used by the current instance of the <see cref="T:System.Threading.SemaphoreSlim" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5a24-156">Wywołaj `Dispose` po zakończeniu przy użyciu <xref:System.Threading.SemaphoreSlim>.</span><span class="sxs-lookup"><span data-stu-id="d5a24-156">Call `Dispose` when you are finished using the <xref:System.Threading.SemaphoreSlim>.</span></span> <span data-ttu-id="d5a24-157">`Dispose` Pozostawia metoda <xref:System.Threading.SemaphoreSlim> w stanie uniemożliwiającym jego używanie.</span><span class="sxs-lookup"><span data-stu-id="d5a24-157">The `Dispose` method leaves the <xref:System.Threading.SemaphoreSlim> in an unusable state.</span></span> <span data-ttu-id="d5a24-158">Po wywołaniu `Dispose`, trzeba zwolnić wszystkie odwołania do <xref:System.Threading.SemaphoreSlim> , moduł zbierający elementy bezużyteczne mógł odzyskać pamięć, <xref:System.Threading.SemaphoreSlim> zajmowaną przez wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="d5a24-158">After calling `Dispose`, you must release all references to the <xref:System.Threading.SemaphoreSlim> so the garbage collector can reclaim the memory that the <xref:System.Threading.SemaphoreSlim> was occupying.</span></span>  
  
 <span data-ttu-id="d5a24-159">Aby uzyskać więcej informacji, zobacz [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) i [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="d5a24-159">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d5a24-160">Zawsze wywołuj `Dispose` przed publikacją swoje ostatnie odwołanie do <xref:System.Threading.SemaphoreSlim>.</span><span class="sxs-lookup"><span data-stu-id="d5a24-160">Always call `Dispose` before you release your last reference to the <xref:System.Threading.SemaphoreSlim>.</span></span> <span data-ttu-id="d5a24-161">W przeciwnym razie zasobów jest przy użyciu nie zostanie zwolniona, dopóki moduł odśmiecania pamięci wywołuje <xref:System.Threading.SemaphoreSlim> obiektu `Finalize` metody.</span><span class="sxs-lookup"><span data-stu-id="d5a24-161">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.SemaphoreSlim> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreSlim.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="semaphoreSlim.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="d5a24-162">
            <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko niezarządzane zasoby.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-162">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5a24-163">Zwalnia zasoby niezarządzane używane przez <see cref="T:System.Threading.SemaphoreSlim" />i opcjonalnie zwalnia zasoby zarządzane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-163">Releases the unmanaged resources used by the <see cref="T:System.Threading.SemaphoreSlim" />, and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5a24-164">W przeciwieństwie do większości elementów członkowskich <xref:System.Threading.SemaphoreSlim>, <xref:System.Threading.SemaphoreSlim.Dispose%2A> nie jest metodą o bezpiecznych wątkach i nie mogą być używane równocześnie z innymi członkami tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="d5a24-164">Unlike most of the members of <xref:System.Threading.SemaphoreSlim>, <xref:System.Threading.SemaphoreSlim.Dispose%2A> is not thread-safe and may not be used concurrently with other members of this instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Release">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d5a24-165">Wersje <see cref="T:System.Threading.SemaphoreSlim" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-165">Releases the <see cref="T:System.Threading.SemaphoreSlim" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public int Release ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Release() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreSlim.Release" />
      <MemberSignature Language="VB.NET" Value="Public Function Release () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Release();" />
      <MemberSignature Language="F#" Value="member this.Release : unit -&gt; int" Usage="semaphoreSlim.Release " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d5a24-166">Wersje <see cref="T:System.Threading.SemaphoreSlim" /> obiekt na raz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-166">Releases the <see cref="T:System.Threading.SemaphoreSlim" /> object once.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5a24-167">Liczba poprzednich <see cref="T:System.Threading.SemaphoreSlim" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-167">The previous count of the <see cref="T:System.Threading.SemaphoreSlim" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5a24-168">Wywołanie <xref:System.Threading.SemaphoreSlim.Release> metody zwiększa <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> właściwość, według jedną.</span><span class="sxs-lookup"><span data-stu-id="d5a24-168">A call to the <xref:System.Threading.SemaphoreSlim.Release> method increments the <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> property by one.</span></span> <span data-ttu-id="d5a24-169">Jeśli wartość <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> właściwości wynosi zero, zanim ta metoda jest wywoływana, metoda umożliwia również jednego wątku lub zadania zablokowane przez wywołanie <xref:System.Threading.SemaphoreSlim.Wait%2A> lub <xref:System.Threading.SemaphoreSlim.WaitAsync%2A> metodę, aby wprowadzić semafora.</span><span class="sxs-lookup"><span data-stu-id="d5a24-169">If the value of the <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> property is zero before this method is called, the method also allows one thread or task blocked by a call to the <xref:System.Threading.SemaphoreSlim.Wait%2A> or <xref:System.Threading.SemaphoreSlim.WaitAsync%2A> method to enter the semaphore.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d5a24-170">Bieżące wystąpienie został już usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-170">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.SemaphoreFullException">
          <span data-ttu-id="d5a24-171">
            <see cref="T:System.Threading.SemaphoreSlim" /> Osiągnęło już maksymalny rozmiar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-171">The <see cref="T:System.Threading.SemaphoreSlim" /> has already reached its maximum size.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public int Release (int releaseCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Release(int32 releaseCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreSlim.Release(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Release (releaseCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Release(int releaseCount);" />
      <MemberSignature Language="F#" Value="member this.Release : int -&gt; int" Usage="semaphoreSlim.Release releaseCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="releaseCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="releaseCount">
          <span data-ttu-id="d5a24-172">Liczba razy, aby zamknąć semafora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-172">The number of times to exit the semaphore.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5a24-173">Wersje <see cref="T:System.Threading.SemaphoreSlim" /> obiekt o określoną liczbę razy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-173">Releases the <see cref="T:System.Threading.SemaphoreSlim" /> object a specified number of times.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5a24-174">Liczba poprzednich <see cref="T:System.Threading.SemaphoreSlim" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-174">The previous count of the <see cref="T:System.Threading.SemaphoreSlim" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5a24-175">Wywołanie <xref:System.Threading.SemaphoreSlim.Release%28System.Int32%29> metody zwiększa <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> właściwość, według `releaseCount`.</span><span class="sxs-lookup"><span data-stu-id="d5a24-175">A call to the <xref:System.Threading.SemaphoreSlim.Release%28System.Int32%29> method increments the <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> property by `releaseCount`.</span></span> <span data-ttu-id="d5a24-176">Jeśli wartość <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> właściwości wynosi zero, zanim ta metoda jest wywoływana, metoda umożliwia również `releaseCount` wątków lub zadania, zablokowane przez wywołanie <xref:System.Threading.SemaphoreSlim.Wait%2A> lub <xref:System.Threading.SemaphoreSlim.WaitAsync%2A> metodę, aby wprowadzić semafora.</span><span class="sxs-lookup"><span data-stu-id="d5a24-176">If the value of the <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> property is zero before this method is called, the method also allows `releaseCount` threads or tasks blocked by a call to the <xref:System.Threading.SemaphoreSlim.Wait%2A> or <xref:System.Threading.SemaphoreSlim.WaitAsync%2A> method to enter the semaphore.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d5a24-177">Bieżące wystąpienie został już usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-177">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d5a24-178">
            <paramref name="releaseCount" /> jest mniejsza niż 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-178">
              <paramref name="releaseCount" /> is less than 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.SemaphoreFullException">
          <span data-ttu-id="d5a24-179">
            <see cref="T:System.Threading.SemaphoreSlim" /> Osiągnęło już maksymalny rozmiar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-179">The <see cref="T:System.Threading.SemaphoreSlim" /> has already reached its maximum size.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Wait">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d5a24-180">Blokuje bieżący wątek, dopóki nie można wprowadzić <see cref="T:System.Threading.SemaphoreSlim" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-180">Blocks the current thread until it can enter the <see cref="T:System.Threading.SemaphoreSlim" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public void Wait ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Wait() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreSlim.Wait" />
      <MemberSignature Language="VB.NET" Value="Public Sub Wait ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Wait();" />
      <MemberSignature Language="F#" Value="member this.Wait : unit -&gt; unit" Usage="semaphoreSlim.Wait " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d5a24-181">Blokuje bieżący wątek, dopóki nie można wprowadzić <see cref="T:System.Threading.SemaphoreSlim" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-181">Blocks the current thread until it can enter the <see cref="T:System.Threading.SemaphoreSlim" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5a24-182">Jeśli wątku lub zadania jest możliwość wprowadzania semafor, jego zmniejsza <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> właściwość, według jedną.</span><span class="sxs-lookup"><span data-stu-id="d5a24-182">If a thread or task is able to enter the semaphore, it decrements the <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> property by one.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d5a24-183">Bieżące wystąpienie został już usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-183">The current instance has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Wait(int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreSlim.Wait(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Wait (millisecondsTimeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="member this.Wait : int -&gt; bool" Usage="semaphoreSlim.Wait millisecondsTimeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout">
          <span data-ttu-id="d5a24-184">Liczba milisekund, <see cref="F:System.Threading.Timeout.Infinite" />(-1), aby czekać w nieskończoność, lub od zera do testowania stanu dojście oczekiwania i natychmiast zwróci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-184">The number of milliseconds to wait, <see cref="F:System.Threading.Timeout.Infinite" />(-1) to wait indefinitely, or zero to test the state of the wait handle and return immediately.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5a24-185">Blokuje bieżący wątek, dopóki nie można wprowadzić <see cref="T:System.Threading.SemaphoreSlim" />, przy użyciu 32-bitowa liczba całkowita ze znakiem określa limit czasu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-185">Blocks the current thread until it can enter the <see cref="T:System.Threading.SemaphoreSlim" />, using a 32-bit signed integer that specifies the timeout.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5a24-186">
            <see langword="true" /> Jeśli bieżący wątek pomyślnie wprowadzone <see cref="T:System.Threading.SemaphoreSlim" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-186">
              <see langword="true" /> if the current thread successfully entered the <see cref="T:System.Threading.SemaphoreSlim" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks 
<span data-ttu-id="d5a24-187">Jeśli limit czasu jest ustawiony na wartość-1 MS, metoda czeka na czas nieokreślony.</span><span class="sxs-lookup"><span data-stu-id="d5a24-187">If the timeout is set to -1 milliseconds, the method waits indefinitely.</span></span>
 
<span data-ttu-id="d5a24-188">Jeśli limit czasu jest równa zero milisekund, metoda nie blokuje.</span><span class="sxs-lookup"><span data-stu-id="d5a24-188">If the timeout is set to zero milliseconds, the method doesn't block.</span></span> <span data-ttu-id="d5a24-189">Testuje, stan dojście oczekiwania i zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="d5a24-189">It tests the state of the wait handle and returns immediately.</span></span>

<span data-ttu-id="d5a24-190">Jeśli wątku lub zadania jest możliwość wprowadzania semafor, jego zmniejsza <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> właściwość, według jedną.</span><span class="sxs-lookup"><span data-stu-id="d5a24-190">If a thread or task is able to enter the semaphore, it decrements the <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> property by one.</span></span>  
  
<span data-ttu-id="d5a24-191">Jeśli wątku lub zadania, jest zablokowany podczas wywoływania <xref:System.Threading.SemaphoreSlim.Wait%28System.Int32%29> i interwał limitu czasu określonego przez `millisecondsTimeout` wygasa:</span><span class="sxs-lookup"><span data-stu-id="d5a24-191">If a thread or task is blocked when calling <xref:System.Threading.SemaphoreSlim.Wait%28System.Int32%29> and the timeout interval specified by `millisecondsTimeout` expires:</span></span>

- <span data-ttu-id="d5a24-192">Wątku lub zadania, nie można przejść do semafora.</span><span class="sxs-lookup"><span data-stu-id="d5a24-192">The thread or task doesn't enter the semaphore.</span></span>
- <span data-ttu-id="d5a24-193"><xref:System.Threading.SemaphoreSlim.CurrentCount%2A> Właściwości nie są odejmowane.</span><span class="sxs-lookup"><span data-stu-id="d5a24-193">The <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> property isn't decremented.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d5a24-194">
            <paramref name="millisecondsTimeout" /> jest liczbą ujemną od-1, która reprezentuje nieskończony limit czasu — lub — limit czasu jest większy niż <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-194">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite timeout -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d5a24-195">
            <see cref="T:System.Threading.SemaphoreSlim" /> Został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-195">The <see cref="T:System.Threading.SemaphoreSlim" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public void Wait (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Wait(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreSlim.Wait(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Wait(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.Wait : System.Threading.CancellationToken -&gt; unit" Usage="semaphoreSlim.Wait cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="d5a24-196">
            <see cref="T:System.Threading.CancellationToken" /> Token do obserwowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-196">The <see cref="T:System.Threading.CancellationToken" /> token to observe.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5a24-197">Blokuje bieżący wątek, dopóki nie można wprowadzić <see cref="T:System.Threading.SemaphoreSlim" />, obserwując <see cref="T:System.Threading.CancellationToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-197">Blocks the current thread until it can enter the <see cref="T:System.Threading.SemaphoreSlim" />, while observing a <see cref="T:System.Threading.CancellationToken" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5a24-198">Jeśli wątku lub zadania jest możliwość wprowadzania semafor, jego zmniejsza <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> właściwość, według jedną.</span><span class="sxs-lookup"><span data-stu-id="d5a24-198">If a thread or task is able to enter the semaphore, it decrements the <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> property by one.</span></span>  
  
 <span data-ttu-id="d5a24-199">Jeśli `cancellationToken` jest anulowane, wątku lub zadania, nie można przejść do semafor i <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> właściwości nie są odejmowane.</span><span class="sxs-lookup"><span data-stu-id="d5a24-199">If `cancellationToken` is cancelled, the thread or task doesn't enter the semaphore, and the <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> property isn't decremented.</span></span> <span data-ttu-id="d5a24-200">Metoda zgłasza <xref:System.OperationCanceledException> wyjątku.</span><span class="sxs-lookup"><span data-stu-id="d5a24-200">Instead, the method throws an <xref:System.OperationCanceledException> exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="d5a24-201">
            <paramref name="cancellationToken" /> zostało anulowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-201">
              <paramref name="cancellationToken" /> was canceled.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d5a24-202">Bieżące wystąpienie został już usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-202">The current instance has already been disposed.</span>
          </span>
          <span data-ttu-id="d5a24-203">- lub - <see cref="T:System.Threading.CancellationTokenSource" /> utworzonego <paramref name="cancellationToken" /> został już usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-203">-or-  The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Wait(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreSlim.Wait(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Wait (timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Wait : TimeSpan -&gt; bool" Usage="semaphoreSlim.Wait timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="d5a24-204">A <see cref="T:System.TimeSpan" /> reprezentujący liczbę milisekund oczekiwania, <see cref="T:System.TimeSpan" /> reprezentujący milisekund czekać w nieskończoność,-1 lub <see cref="T:System.TimeSpan" /> reprezentujący milisekund 0 i przetestować dojście oczekiwania i natychmiast zwróci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-204">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely, or a <see cref="T:System.TimeSpan" /> that represents 0 milliseconds to test the wait handle and return immediately.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5a24-205">Blokuje bieżący wątek, dopóki nie można wprowadzić <see cref="T:System.Threading.SemaphoreSlim" />przy użyciu <see cref="T:System.TimeSpan" /> określić limit czasu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-205">Blocks the current thread until it can enter the <see cref="T:System.Threading.SemaphoreSlim" />, using a <see cref="T:System.TimeSpan" /> to specify the timeout.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5a24-206">
            <see langword="true" /> Jeśli bieżący wątek pomyślnie wprowadzone <see cref="T:System.Threading.SemaphoreSlim" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-206">
              <see langword="true" /> if the current thread successfully entered the <see cref="T:System.Threading.SemaphoreSlim" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="d5a24-207">Jeśli limit czasu jest ustawiony na wartość-1 MS, metoda czeka na czas nieokreślony.</span><span class="sxs-lookup"><span data-stu-id="d5a24-207">If the timeout is set to -1 milliseconds, the method waits indefinitely.</span></span>
 
<span data-ttu-id="d5a24-208">Jeśli limit czasu jest równa zero milisekund, metoda nie blokuje.</span><span class="sxs-lookup"><span data-stu-id="d5a24-208">If the timeout is set to zero milliseconds, the method doesn't block.</span></span> <span data-ttu-id="d5a24-209">Testuje, stan dojście oczekiwania i zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="d5a24-209">It tests the state of the wait handle and returns immediately.</span></span> 
 
<span data-ttu-id="d5a24-210">Jeśli wątku lub zadania jest możliwość wprowadzania semafor, jego zmniejsza <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> właściwość, według jedną.</span><span class="sxs-lookup"><span data-stu-id="d5a24-210">If a thread or task is able to enter the semaphore, it decrements the <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> property by one.</span></span>  
  
<span data-ttu-id="d5a24-211">Jeśli wątku lub zadania, jest zablokowany podczas wywoływania <xref:System.Threading.SemaphoreSlim.Wait%28System.TimeSpan%29> i interwał limitu czasu określonego przez `millisecondsTimeout` wygasa:</span><span class="sxs-lookup"><span data-stu-id="d5a24-211">If a thread or task is blocked when calling <xref:System.Threading.SemaphoreSlim.Wait%28System.TimeSpan%29> and the timeout interval specified by `millisecondsTimeout` expires:</span></span>

- <span data-ttu-id="d5a24-212">Wątku lub zadania, nie można przejść do semafora.</span><span class="sxs-lookup"><span data-stu-id="d5a24-212">The thread or task doesn't enter the semaphore.</span></span>
- <span data-ttu-id="d5a24-213"><xref:System.Threading.SemaphoreSlim.CurrentCount%2A> Właściwości nie są odejmowane.</span><span class="sxs-lookup"><span data-stu-id="d5a24-213">The <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> property isn't decremented.</span></span>   
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d5a24-214">
            <paramref name="timeout" /> jest liczbą ujemną od-1, która reprezentuje nieskończony limit czasu — lub — limit czasu jest większy niż <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-214">
              <paramref name="timeout" /> is a negative number other than -1, which represents an infinite timeout -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d5a24-215">Wystąpienie semaphoreSlim został usunięty. <paramref name="." /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-215">The semaphoreSlim instance has been disposed <paramref name="." /></span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (int millisecondsTimeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Wait(int32 millisecondsTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreSlim.Wait(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(int millisecondsTimeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.Wait : int * System.Threading.CancellationToken -&gt; bool" Usage="semaphoreSlim.Wait (millisecondsTimeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout">
          <span data-ttu-id="d5a24-216">Liczba milisekund, <see cref="F:System.Threading.Timeout.Infinite" />(-1), aby czekać w nieskończoność, lub od zera do testowania stanu dojście oczekiwania i natychmiast zwróci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-216">The number of milliseconds to wait, <see cref="F:System.Threading.Timeout.Infinite" />(-1) to wait indefinitely, or zero to test the state of the wait handle and return immediately.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="d5a24-217">
            <see cref="T:System.Threading.CancellationToken" /> Do obserwowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-217">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5a24-218">Blokuje bieżący wątek, dopóki nie można wprowadzić <see cref="T:System.Threading.SemaphoreSlim" />, przy użyciu 32-bitowa liczba całkowita ze znakiem określa limit czasu podczas obserwowania <see cref="T:System.Threading.CancellationToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-218">Blocks the current thread until it can enter the <see cref="T:System.Threading.SemaphoreSlim" />, using a 32-bit signed integer that specifies the timeout, while observing a <see cref="T:System.Threading.CancellationToken" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5a24-219">
            <see langword="true" /> Jeśli bieżący wątek pomyślnie wprowadzone <see cref="T:System.Threading.SemaphoreSlim" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-219">
              <see langword="true" /> if the current thread successfully entered the <see cref="T:System.Threading.SemaphoreSlim" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="d5a24-220">Jeśli limit czasu jest ustawiony na wartość-1 MS, metoda czeka na czas nieokreślony.</span><span class="sxs-lookup"><span data-stu-id="d5a24-220">If the timeout is set to -1 milliseconds, the method waits indefinitely.</span></span>
 
<span data-ttu-id="d5a24-221">Jeśli limit czasu jest równa zero milisekund, metoda nie blokuje.</span><span class="sxs-lookup"><span data-stu-id="d5a24-221">If the timeout is set to zero milliseconds, the method doesn't block.</span></span> <span data-ttu-id="d5a24-222">Testuje, stan dojście oczekiwania i zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="d5a24-222">It tests the state of the wait handle and returns immediately.</span></span>

<span data-ttu-id="d5a24-223">Jeśli wątku lub zadania jest możliwość wprowadzania semafor, jego zmniejsza <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> właściwość, według jedną.</span><span class="sxs-lookup"><span data-stu-id="d5a24-223">If a thread or task is able to enter the semaphore, it decrements the <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> property by one.</span></span>  
  
<span data-ttu-id="d5a24-224">Jeśli `cancellationToken` zostało anulowane, lub jeśli wątku lub zadania, jest zablokowany podczas wywoływania <xref:System.Threading.SemaphoreSlim.Wait%28System.Int32%2CSystem.Threading.CancellationToken%29> i interwał limitu czasu określonego przez `millisecondsTimeout` wygasa:</span><span class="sxs-lookup"><span data-stu-id="d5a24-224">If `cancellationToken` is cancelled, or if a thread or task is blocked when calling <xref:System.Threading.SemaphoreSlim.Wait%28System.Int32%2CSystem.Threading.CancellationToken%29> and the timeout interval specified by `millisecondsTimeout` expires:</span></span>

- <span data-ttu-id="d5a24-225">Wątku lub zadania, nie można przejść do semafora.</span><span class="sxs-lookup"><span data-stu-id="d5a24-225">The thread or task doesn't enter the semaphore.</span></span>
- <span data-ttu-id="d5a24-226"><xref:System.Threading.SemaphoreSlim.CurrentCount%2A> Właściwości nie są odejmowane.</span><span class="sxs-lookup"><span data-stu-id="d5a24-226">The <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> property isn't decremented.</span></span>  
 
<span data-ttu-id="d5a24-227">Jeśli `cancellationToken` jest anulowane, metoda zgłasza <xref:System.OperationCanceledException> wyjątku.</span><span class="sxs-lookup"><span data-stu-id="d5a24-227">If `cancellationToken` is cancelled, the method throws an   <xref:System.OperationCanceledException> exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="d5a24-228">
            <paramref name="cancellationToken" /> zostało anulowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-228">
              <paramref name="cancellationToken" /> was canceled.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d5a24-229">
            <paramref name="millisecondsTimeout" /> jest liczbą ujemną od-1, która reprezentuje nieskończony limit czasu — lub — limit czasu jest większy niż <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-229">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite timeout -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d5a24-230">
            <see cref="T:System.Threading.SemaphoreSlim" /> Wystąpienie zostało usunięte, lub <see cref="T:System.Threading.CancellationTokenSource" /> utworzonego <paramref name="cancellationToken" /> został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-230">The <see cref="T:System.Threading.SemaphoreSlim" /> instance has been disposed, or the <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Wait(valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreSlim.Wait(System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(TimeSpan timeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.Wait : TimeSpan * System.Threading.CancellationToken -&gt; bool" Usage="semaphoreSlim.Wait (timeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="d5a24-231">A <see cref="T:System.TimeSpan" /> reprezentujący liczbę milisekund oczekiwania, <see cref="T:System.TimeSpan" /> reprezentujący milisekund czekać w nieskończoność,-1 lub <see cref="T:System.TimeSpan" /> reprezentujący milisekund 0 i przetestować dojście oczekiwania i natychmiast zwróci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-231">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely, or a <see cref="T:System.TimeSpan" /> that represents 0 milliseconds to test the wait handle and return immediately.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="d5a24-232">
            <see cref="T:System.Threading.CancellationToken" /> Do obserwowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-232">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5a24-233">Blokuje bieżący wątek, dopóki nie można wprowadzić <see cref="T:System.Threading.SemaphoreSlim" />przy użyciu <see cref="T:System.TimeSpan" /> określa limit czasu podczas obserwowania <see cref="T:System.Threading.CancellationToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-233">Blocks the current thread until it can enter the <see cref="T:System.Threading.SemaphoreSlim" />, using a <see cref="T:System.TimeSpan" /> that specifies the timeout, while observing a <see cref="T:System.Threading.CancellationToken" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5a24-234">
            <see langword="true" /> Jeśli bieżący wątek pomyślnie wprowadzone <see cref="T:System.Threading.SemaphoreSlim" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-234">
              <see langword="true" /> if the current thread successfully entered the <see cref="T:System.Threading.SemaphoreSlim" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="d5a24-235">Jeśli limit czasu jest ustawiony na wartość-1 MS, metoda czeka na czas nieokreślony.</span><span class="sxs-lookup"><span data-stu-id="d5a24-235">If the timeout is set to -1 milliseconds, the method waits indefinitely.</span></span>
 
<span data-ttu-id="d5a24-236">Jeśli limit czasu jest równa zero milisekund, metoda nie blokuje.</span><span class="sxs-lookup"><span data-stu-id="d5a24-236">If the timeout is set to zero milliseconds, the method doesn't block.</span></span> <span data-ttu-id="d5a24-237">Testuje, stan dojście oczekiwania i zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="d5a24-237">It tests the state of the wait handle and returns immediately.</span></span> 

<span data-ttu-id="d5a24-238">Jeśli wątku lub zadania jest możliwość wprowadzania semafor, jego zmniejsza <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> właściwość, według jedną.</span><span class="sxs-lookup"><span data-stu-id="d5a24-238">If a thread or task is able to enter the semaphore, it decrements the <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> property by one.</span></span>  
  
<span data-ttu-id="d5a24-239">Jeśli `cancellationToken` zostało anulowane, lub jeśli wątku lub zadania, jest zablokowany podczas wywoływania <xref:System.Threading.SemaphoreSlim.Wait%28System.TimeSpan%2CSystem.Threading.CancellationToken%29> i interwał limitu czasu określonego przez `millisecondsTimeout` wygasa:</span><span class="sxs-lookup"><span data-stu-id="d5a24-239">If `cancellationToken` is cancelled, or if a thread or task is blocked when calling <xref:System.Threading.SemaphoreSlim.Wait%28System.TimeSpan%2CSystem.Threading.CancellationToken%29> and the timeout interval specified by `millisecondsTimeout` expires:</span></span>

- <span data-ttu-id="d5a24-240">Wątku lub zadania, nie można przejść do semafora.</span><span class="sxs-lookup"><span data-stu-id="d5a24-240">The thread or task doesn't enter the semaphore.</span></span>
- <span data-ttu-id="d5a24-241"><xref:System.Threading.SemaphoreSlim.CurrentCount%2A> Właściwości nie są odejmowane.</span><span class="sxs-lookup"><span data-stu-id="d5a24-241">The <xref:System.Threading.SemaphoreSlim.CurrentCount%2A> property isn't decremented.</span></span>  

<span data-ttu-id="d5a24-242">Jeśli `cancellationToken` jest anulowane, metoda zgłasza <xref:System.OperationCanceledException> wyjątku.</span><span class="sxs-lookup"><span data-stu-id="d5a24-242">If `cancellationToken` is cancelled, the method throws an <xref:System.OperationCanceledException> exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="d5a24-243">
            <paramref name="cancellationToken" /> zostało anulowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-243">
              <paramref name="cancellationToken" /> was canceled.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d5a24-244">
            <paramref name="timeout" /> jest liczbą ujemną od-1, która reprezentuje nieskończony limit czasu — lub — limit czasu jest większy niż <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-244">
              <paramref name="timeout" /> is a negative number other than -1, which represents an infinite timeout -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d5a24-245">Wystąpienie semaphoreSlim byla zahozena <paramref name="." /><paramref name="-or-" /><see cref="T:System.Threading.CancellationTokenSource" /> utworzonego <paramref name="cancellationToken" /> został już usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-245">The semaphoreSlim instance has been disposed <paramref name="." /><paramref name="-or-" />  The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WaitAsync">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d5a24-246">Asynchronicznie oczekuje na wprowadzenie <see cref="T:System.Threading.SemaphoreSlim" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-246">Asynchronously waits to enter the <see cref="T:System.Threading.SemaphoreSlim" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WaitAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WaitAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WaitAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreSlim.WaitAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WaitAsync();" />
      <MemberSignature Language="F#" Value="member this.WaitAsync : unit -&gt; System.Threading.Tasks.Task" Usage="semaphoreSlim.WaitAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d5a24-247">Asynchronicznie oczekuje na wprowadzenie <see cref="T:System.Threading.SemaphoreSlim" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-247">Asynchronously waits to enter the <see cref="T:System.Threading.SemaphoreSlim" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5a24-248">Zadanie, które zostanie ukończone, gdy wprowadzono semafora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-248">A task that will complete when the semaphore has been entered.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d5a24-249">
            <see cref="T:System.Threading.SemaphoreSlim" /> Został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-249">The <see cref="T:System.Threading.SemaphoreSlim" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; WaitAsync (int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; WaitAsync(int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreSlim.WaitAsync(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitAsync (millisecondsTimeout As Integer) As Task(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;bool&gt; ^ WaitAsync(int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="member this.WaitAsync : int -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="semaphoreSlim.WaitAsync millisecondsTimeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout">
          <span data-ttu-id="d5a24-250">Liczba milisekund, <see cref="F:System.Threading.Timeout.Infinite" /> (-1), aby czekać w nieskończoność, lub od zera do testowania stanu dojście oczekiwania i natychmiast zwróci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-250">The number of milliseconds to wait, <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely, or zero to test the state of the wait handle and return immediately.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5a24-251">Asynchronicznie oczekuje na wprowadzenie <see cref="T:System.Threading.SemaphoreSlim" />, za pomocą całkowita 32-bitowego do mierzenia przedział czasu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-251">Asynchronously waits to enter the <see cref="T:System.Threading.SemaphoreSlim" />, using a 32-bit signed integer to measure the time interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5a24-252">Zadanie, które zostanie ukończone z wynikiem <see langword="true" /> Jeśli bieżący wątek pomyślnie wprowadzone <see cref="T:System.Threading.SemaphoreSlim" />, w przeciwnym razie z wynikiem <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-252">A task that will complete with a result of <see langword="true" /> if the current thread successfully entered the <see cref="T:System.Threading.SemaphoreSlim" />, otherwise with a result of <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5a24-253">Jeśli limit czasu jest ustawiony na wartość-1 MS, metoda czeka na czas nieokreślony.</span><span class="sxs-lookup"><span data-stu-id="d5a24-253">If the timeout is set to -1 milliseconds, the method waits indefinitely.</span></span>
 
 <span data-ttu-id="d5a24-254">Jeśli limit czasu jest równa zero milisekund, metoda nie blokuje.</span><span class="sxs-lookup"><span data-stu-id="d5a24-254">If the timeout is set to zero milliseconds, the method doesn't block.</span></span> <span data-ttu-id="d5a24-255">Testuje, stan dojście oczekiwania i zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="d5a24-255">It tests the state of the wait handle and returns immediately.</span></span> 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d5a24-256">Bieżące wystąpienie został już usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-256">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d5a24-257">
            <paramref name="millisecondsTimeout" /> jest liczbą ujemną od-1, która reprezentuje nieskończony limit czasu — lub — limit czasu jest większy niż <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-257">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite timeout -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WaitAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WaitAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreSlim.WaitAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WaitAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.WaitAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="semaphoreSlim.WaitAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="d5a24-258">
            <see cref="T:System.Threading.CancellationToken" /> Token do obserwowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-258">The <see cref="T:System.Threading.CancellationToken" /> token to observe.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5a24-259">Asynchronicznie oczekuje na wprowadzenie <see cref="T:System.Threading.SemaphoreSlim" />, obserwując <see cref="T:System.Threading.CancellationToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-259">Asynchronously waits to enter the <see cref="T:System.Threading.SemaphoreSlim" />, while observing a <see cref="T:System.Threading.CancellationToken" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5a24-260">Zadanie, które zostanie ukończone, gdy wprowadzono semafora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-260">A task that will complete when the semaphore has been entered.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d5a24-261">Bieżące wystąpienie został już usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-261">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="d5a24-262">
            <paramref name="cancellationToken" /> zostało anulowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-262">
              <paramref name="cancellationToken" /> was canceled.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; WaitAsync (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; WaitAsync(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreSlim.WaitAsync(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitAsync (timeout As TimeSpan) As Task(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;bool&gt; ^ WaitAsync(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.WaitAsync : TimeSpan -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="semaphoreSlim.WaitAsync timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="d5a24-263">A <see cref="T:System.TimeSpan" /> reprezentujący liczbę milisekund oczekiwania, <see cref="T:System.TimeSpan" /> reprezentujący milisekund czekać w nieskończoność,-1 lub <see cref="T:System.TimeSpan" /> reprezentujący milisekund 0 i przetestować dojście oczekiwania i natychmiast zwróci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-263">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely, or a <see cref="T:System.TimeSpan" /> that represents 0 milliseconds to test the wait handle and return immediately.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5a24-264">Asynchronicznie oczekuje na wprowadzenie <see cref="T:System.Threading.SemaphoreSlim" />przy użyciu <see cref="T:System.TimeSpan" /> do mierzenia przedział czasu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-264">Asynchronously waits to enter the <see cref="T:System.Threading.SemaphoreSlim" />, using a <see cref="T:System.TimeSpan" /> to measure the time interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5a24-265">Zadanie, które zostanie ukończone z wynikiem <see langword="true" /> Jeśli bieżący wątek pomyślnie wprowadzone <see cref="T:System.Threading.SemaphoreSlim" />, w przeciwnym razie z wynikiem <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-265">A task that will complete with a result of <see langword="true" /> if the current thread successfully entered the <see cref="T:System.Threading.SemaphoreSlim" />, otherwise with a result of <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5a24-266">Jeśli limit czasu jest ustawiony na wartość-1 MS, metoda czeka na czas nieokreślony.</span><span class="sxs-lookup"><span data-stu-id="d5a24-266">If the timeout is set to -1 milliseconds, the method waits indefinitely.</span></span>
 
 <span data-ttu-id="d5a24-267">Jeśli limit czasu jest równa zero milisekund, metoda nie blokuje.</span><span class="sxs-lookup"><span data-stu-id="d5a24-267">If the timeout is set to zero milliseconds, the method doesn't block.</span></span> <span data-ttu-id="d5a24-268">Testuje, stan dojście oczekiwania i zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="d5a24-268">It tests the state of the wait handle and returns immediately.</span></span> 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d5a24-269">Bieżące wystąpienie został już usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-269">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d5a24-270">
            <paramref name="millisecondsTimeout" /> jest liczbą ujemną od-1, która reprezentuje nieskończony limit czasu — lub — limit czasu jest większy niż <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-270">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite timeout -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; WaitAsync (int millisecondsTimeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; WaitAsync(int32 millisecondsTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreSlim.WaitAsync(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;bool&gt; ^ WaitAsync(int millisecondsTimeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.WaitAsync : int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="semaphoreSlim.WaitAsync (millisecondsTimeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout">
          <span data-ttu-id="d5a24-271">Liczba milisekund, <see cref="F:System.Threading.Timeout.Infinite" /> (-1), aby czekać w nieskończoność, lub od zera do testowania stanu dojście oczekiwania i natychmiast zwróci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-271">The number of milliseconds to wait, <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely, or zero to test the state of the wait handle and return immediately.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="d5a24-272">
            <see cref="T:System.Threading.CancellationToken" /> Do obserwowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-272">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5a24-273">Asynchronicznie oczekuje na wprowadzenie <see cref="T:System.Threading.SemaphoreSlim" />, za pomocą całkowita 32-bitowego do mierzenia przedział czasu, obserwując <see cref="T:System.Threading.CancellationToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-273">Asynchronously waits to enter the <see cref="T:System.Threading.SemaphoreSlim" />, using a 32-bit signed integer to measure the time interval, while observing a <see cref="T:System.Threading.CancellationToken" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5a24-274">Zadanie, które zostanie ukończone z wynikiem <see langword="true" /> Jeśli bieżący wątek pomyślnie wprowadzone <see cref="T:System.Threading.SemaphoreSlim" />, w przeciwnym razie z wynikiem <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-274">A task that will complete with a result of <see langword="true" /> if the current thread successfully entered the <see cref="T:System.Threading.SemaphoreSlim" />, otherwise with a result of <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5a24-275">Jeśli limit czasu jest ustawiony na wartość-1 MS, metoda czeka na czas nieokreślony.</span><span class="sxs-lookup"><span data-stu-id="d5a24-275">If the timeout is set to -1 milliseconds, the method waits indefinitely.</span></span>
 
 <span data-ttu-id="d5a24-276">Jeśli limit czasu jest równa zero milisekund, metoda nie blokuje.</span><span class="sxs-lookup"><span data-stu-id="d5a24-276">If the timeout is set to zero milliseconds, the method doesn't block.</span></span> <span data-ttu-id="d5a24-277">Testuje, stan dojście oczekiwania i zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="d5a24-277">It tests the state of the wait handle and returns immediately.</span></span> 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d5a24-278">
            <paramref name="millisecondsTimeout" /> jest to liczba innych niż -1, która reprezentuje nieskończony limit czasu — lub — limit czasu jest większy niż <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-278">
              <paramref name="millisecondsTimeout" /> is a number other than -1, which represents an infinite timeout -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d5a24-279">Bieżące wystąpienie został już usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-279">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="d5a24-280">
            <paramref name="cancellationToken" /> zostało anulowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-280">
              <paramref name="cancellationToken" /> was canceled.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; WaitAsync (TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; WaitAsync(valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreSlim.WaitAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;bool&gt; ^ WaitAsync(TimeSpan timeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.WaitAsync : TimeSpan * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="semaphoreSlim.WaitAsync (timeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="d5a24-281">A <see cref="T:System.TimeSpan" /> reprezentujący liczbę milisekund oczekiwania, <see cref="T:System.TimeSpan" /> reprezentujący milisekund czekać w nieskończoność,-1 lub <see cref="T:System.TimeSpan" /> reprezentujący milisekund 0 i przetestować dojście oczekiwania i natychmiast zwróci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-281">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely, or a <see cref="T:System.TimeSpan" /> that represents 0 milliseconds to test the wait handle and return immediately.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="d5a24-282">
            <see cref="T:System.Threading.CancellationToken" /> Token do obserwowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-282">The <see cref="T:System.Threading.CancellationToken" /> token to observe.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5a24-283">Asynchronicznie oczekuje na wprowadzenie <see cref="T:System.Threading.SemaphoreSlim" />przy użyciu <see cref="T:System.TimeSpan" /> do mierzenia przedział czasu, obserwując <see cref="T:System.Threading.CancellationToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-283">Asynchronously waits to enter the <see cref="T:System.Threading.SemaphoreSlim" />, using a <see cref="T:System.TimeSpan" /> to measure the time interval, while observing a <see cref="T:System.Threading.CancellationToken" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5a24-284">Zadanie, które zostanie ukończone z wynikiem <see langword="true" /> Jeśli bieżący wątek pomyślnie wprowadzone <see cref="T:System.Threading.SemaphoreSlim" />, w przeciwnym razie z wynikiem <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-284">A task that will complete with a result of <see langword="true" /> if the current thread successfully entered the <see cref="T:System.Threading.SemaphoreSlim" />, otherwise with a result of <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5a24-285">Jeśli limit czasu jest ustawiony na wartość-1 MS, metoda czeka na czas nieokreślony.</span><span class="sxs-lookup"><span data-stu-id="d5a24-285">If the timeout is set to -1 milliseconds, the method waits indefinitely.</span></span>

 <span data-ttu-id="d5a24-286">Jeśli limit czasu jest równa zero milisekund, metoda nie blokuje.</span><span class="sxs-lookup"><span data-stu-id="d5a24-286">If the timeout is set to zero milliseconds, the method doesn't block.</span></span> <span data-ttu-id="d5a24-287">Testuje, stan dojście oczekiwania i zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="d5a24-287">It tests the state of the wait handle and returns immediately.</span></span> 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d5a24-288">
            <paramref name="millisecondsTimeout" /> jest liczbą ujemną od-1, która reprezentuje nieskończony limit czasu — lub — limit czasu jest większy niż <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-288">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite timeout -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="d5a24-289">
            <paramref name="cancellationToken" /> zostało anulowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-289">
              <paramref name="cancellationToken" /> was canceled.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d5a24-290">
            <see cref="T:System.Threading.SemaphoreSlim" /> Został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5a24-290">The <see cref="T:System.Threading.SemaphoreSlim" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>