<Type Name="ThreadAbortException" FullName="System.Threading.ThreadAbortException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="223645db6d3f0a32779a09530c04ad6aaa0e4959" /><Meta Name="ms.sourcegitcommit" Value="24f564114ee2fa9c63dbac1b25b82826cc4e320f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="07/25/2019" /><Meta Name="ms.locfileid" Value="68488072" /></Metadata><TypeSignature Language="C#" Value="public sealed class ThreadAbortException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ThreadAbortException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ThreadAbortException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ThreadAbortException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class ThreadAbortException sealed : SystemException" />
  <TypeSignature Language="F#" Value="type ThreadAbortException = class&#xA;    inherit SystemException" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wyjątek, który jest generowany w przypadku wywołania <see cref="M:System.Threading.Thread.Abort(System.Object)" /> metody. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy wywołanie <xref:System.Threading.Thread.Abort%2A> metody niszczy wątek, środowisko uruchomieniowe języka wspólnego <xref:System.Threading.ThreadAbortException>generuje. <xref:System.Threading.ThreadAbortException>to specjalny wyjątek, który może zostać przechwycony, ale zostanie automatycznie podniesiony na końcu `catch` bloku. Gdy ten wyjątek jest wywoływany, środowisko uruchomieniowe wykonuje `finally` wszystkie bloki przed końcem wątku. Ponieważ wątek może wykonać nieograniczone obliczenia w `finally` blokach lub wywołać <xref:System.Threading.Thread.ResetAbort%2A?displayProperty=nameWithType> anulowanie przerwania, nie ma gwarancji, że wątek będzie kiedykolwiek się kończyć. Jeśli chcesz poczekać na zakończenie przerwanego wątku, możesz wywołać <xref:System.Threading.Thread.Join%2A?displayProperty=nameWithType> metodę. <xref:System.Threading.Thread.Join%2A>jest wywołaniem blokującym, które nie zwraca do momentu faktycznego zatrzymania wykonywania wątku.  
  
**Tylko .NET Core:** Mimo że ten typ istnieje w środowisku .NET Core, <xref:System.Threading.Thread.Abort%2A> ponieważ nie jest obsługiwany, środowisko uruchomieniowe języka wspólnego nie <xref:System.Threading.ThreadAbortException>zostanie kiedykolwiek wyrzucane.

> [!NOTE]
>  Gdy środowisko uruchomieniowe języka wspólnego (CLR) przestaje wątki w tle po zakończeniu wszystkich wątków pierwszego planu w zarządzanym pliku wykonywalnym, <xref:System.Threading.Thread.Abort%2A?displayProperty=nameWithType>nie jest używane. W związku z tym nie <xref:System.Threading.ThreadAbortException> można użyć programu do wykrycia, kiedy wątki w tle są kończone przez środowisko CLR.  
  
 <xref:System.Threading.ThreadAbortException>używa HRESULT COR_E_THREADABORTED o wartości 0x80131530.  
  
> [!NOTE]
>  Wartość dziedziczonej <xref:System.Exception.Data%2A> właściwości jest zawsze `null`.  
  
   
  
## Examples  
 Poniższy przykład demonstruje przerwanie wątku. Wątek, który odbiera `ThreadAbortException` <xref:System.Threading.Thread.ResetAbort%2A> metodę używa metody do anulowania żądania przerwania i kontynuuje wykonywanie.  
  
 [!code-cpp[ThreadAbEx#1](~/samples/snippets/cpp/VS_Snippets_CLR/ThreadAbEx/CPP/threadabex.cpp#1)]
 [!code-csharp[ThreadAbEx#1](~/samples/snippets/csharp/VS_Snippets_CLR/ThreadAbEx/CS/threadabex.cs#1)]
 [!code-vb[ThreadAbEx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ThreadAbEx/VB/threadabex.vb#1)]  
  
 Ten kod generuje następujące dane wyjściowe:  
  
```  
Thread - working.  
Main - aborting my thread.  
Thread - caught ThreadAbortException - resetting.  
Exception message: Thread was being aborted.  
Thread - still alive and working.  
Thread - finished working.  
Main ending.  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="M:System.Threading.Thread.Abort(System.Object)" />
    <related type="Article" href="~/docs/standard/threading/destroying-threads.md">Niszczenie wątków</related>
  </Docs>
  <Members>
    <Member MemberName="ExceptionState">
      <MemberSignature Language="C#" Value="public object ExceptionState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ExceptionState" />
      <MemberSignature Language="DocId" Value="P:System.Threading.ThreadAbortException.ExceptionState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExceptionState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ExceptionState { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionState : obj" Usage="System.Threading.ThreadAbortException.ExceptionState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który zawiera informacje specyficzne dla aplikacji powiązane z przerwaniem wątku.</summary>
        <value>Obiekt zawierający informacje specyficzne dla aplikacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt zwrócony przez tę właściwość jest określany za pomocą `stateInfo` parametru <xref:System.Threading.Thread.Abort%2A> metody. Dokładna zawartość i użycie tego obiektu jest zdefiniowane przez aplikację; zwykle jest używany do przekazywania informacji, które są zrozumiałe dla przerywanego wątku.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak przekazać informacje do wątku, który jest przerywany.  
  
 [!code-cpp[System.Threading.Thread.Abort2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.Abort2/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.Abort2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.Abort2/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.Abort2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.Abort2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Threading.Thread.CurrentThread" />
        <altmember cref="M:System.Threading.Thread.Abort(System.Object)" />
        <related type="Article" href="~/docs/standard/threading/destroying-threads.md">Niszczenie wątków</related>
      </Docs>
    </Member>
  </Members>
</Type>
