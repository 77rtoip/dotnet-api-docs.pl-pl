<Type Name="ThreadStart" FullName="System.Threading.ThreadStart">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f6f88d5dc637ec875f9d95c1fa682f7edcc0f3d1" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48665882" /></Metadata><TypeSignature Language="C#" Value="public delegate void ThreadStart();" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ThreadStart extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ThreadStart" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ThreadStart()" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ThreadStart();" />
  <TypeSignature Language="F#" Value="type ThreadStart = delegate of unit -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters />
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <summary>Reprezentuje metodę, która wykonuje na <see cref="T:System.Threading.Thread" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas tworzenia wątków zarządzanych metodę, która jest wykonywana w wątku jest reprezentowany przez <xref:System.Threading.ThreadStart> delegować lub <xref:System.Threading.ParameterizedThreadStart> delegata, który jest przekazywany do <xref:System.Threading.Thread.%23ctor%2A> konstruktora. Wątek nie rozpoczyna się ich wykonywanie aż do <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType> metoda jest wywoływana. Wykonywanie programu rozpoczyna się w pierwszym wierszu metody reprezentowanej przez <xref:System.Threading.ThreadStart> lub <xref:System.Threading.ParameterizedThreadStart> delegować.  
  
> [!NOTE]
>  Użytkownicy programu Visual Basic i C# można pominąć <xref:System.Threading.ThreadStart> lub <xref:System.Threading.ParameterizedThreadStart> konstruktora delegata podczas tworzenia wątku. W języku Visual Basic należy używać `AddressOf` operator przy przekazywaniu metodę do <xref:System.Threading.Thread.%23ctor%2A> konstruktora, na przykład `Dim t As New Thread(AddressOf ThreadProc)`. W języku C# wystarczy określić nazwę procedury wątku. Kompilator wybiera Konstruktor poprawnym delegacie.  
>  
>  Dla języka C++, począwszy od programu .NET Framework 2.0, tworząc <xref:System.Threading.ThreadStart> delegować metody statycznej wymaga tylko jednego parametru: adres metody wywołania zwrotnego, kwalifikowana przez nazwę klasy. We wcześniejszych wersjach dwóch parametrów były wymagane podczas tworzenia delegata dla metody statycznej: zerowy (null) i adres metody. Dla metody wystąpienia, wszystkie wersje wymagają dwóch parametrów: zmienną instance i adres metody.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje składnię tworzenia i używania <xref:System.Threading.ThreadStart> delegowanie z metodą wystąpienia oraz metody statycznej.  
  
 Inny prosty przykład demonstrujący, jak utworzyć <xref:System.Threading.ThreadStart> delegowania, zobacz <xref:System.Threading.Thread.Start?displayProperty=nameWithType> przeciążenie metody. Aby uzyskać więcej informacji na temat tworzenia wątku, zobacz [Tworzenie wątków i przekazywanie danych na czas rozpoczęcia](~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md).  
  
 [!code-cpp[System.Threading.ThreadStart2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ThreadStart2/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ThreadStart2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ThreadStart2/CS/source.cs#1)]
 [!code-vb[System.Threading.ThreadStart2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ThreadStart2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.ParameterizedThreadStart" />
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="Overload:System.Threading.Thread.Start" />
    <altmember cref="T:System.AppDomain" />
    <related type="Article" href="~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md">Tworzenie wątków i przekazywanie danych w czasie rozpoczęcia</related>
  </Docs>
</Type>