<Type Name="WaitOrTimerCallback" FullName="System.Threading.WaitOrTimerCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e689e3c51fb3b9fb769b22344ec66072599632f8" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69143650" /></Metadata><TypeSignature Language="C#" Value="public delegate void WaitOrTimerCallback(object state, bool timedOut);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed WaitOrTimerCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.WaitOrTimerCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub WaitOrTimerCallback(state As Object, timedOut As Boolean)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void WaitOrTimerCallback(System::Object ^ state, bool timedOut);" />
  <TypeSignature Language="F#" Value="type WaitOrTimerCallback = delegate of obj * bool -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.ThreadPool</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="state" Type="System.Object" />
    <Parameter Name="timedOut" Type="System.Boolean" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="state"><span data-ttu-id="515a2-101">Obiekt zawierający informacje, które mają być używane przez metodę wywołania zwrotnego przy każdym jego uruchomieniu.</span><span class="sxs-lookup"><span data-stu-id="515a2-101">An object containing information to be used by the callback method each time it executes.</span></span></param>
    <param name="timedOut"><span data-ttu-id="515a2-102"><see langword="true" />w <see cref="T:System.Threading.WaitHandle" /> przypadku przekroczenia limitu czasu; <see langword="false" /> jeśli zostało zasygnalizowane.</span><span class="sxs-lookup"><span data-stu-id="515a2-102"><see langword="true" /> if the <see cref="T:System.Threading.WaitHandle" /> timed out; <see langword="false" /> if it was signaled.</span></span></param>
    <summary><span data-ttu-id="515a2-103">Reprezentuje metodę, która ma być wywoływana, <see cref="T:System.Threading.WaitHandle" /> gdy występuje lub przekracza limit czasu.</span><span class="sxs-lookup"><span data-stu-id="515a2-103">Represents a method to be called when a <see cref="T:System.Threading.WaitHandle" /> is signaled or times out.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="515a2-104"><xref:System.Threading.WaitOrTimerCallback>reprezentuje metodę wywołania zwrotnego, która ma zostać wykonana po przejściu lub zasygnalizowaniu zarejestrowanego dojścia oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="515a2-104"><xref:System.Threading.WaitOrTimerCallback> represents a callback method that you want to execute when a registered wait handle times out or is signaled.</span></span> <span data-ttu-id="515a2-105">Utwórz delegata, przekazując metodę wywołania zwrotnego do <xref:System.Threading.WaitOrTimerCallback> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="515a2-105">Create the delegate by passing your callback method to the <xref:System.Threading.WaitOrTimerCallback> constructor.</span></span> <span data-ttu-id="515a2-106">W tym miejscu musi być podana sygnatura.</span><span class="sxs-lookup"><span data-stu-id="515a2-106">Your method must have the signature shown here.</span></span>  
  
 <span data-ttu-id="515a2-107">Utwórz zarejestrowane dojście oczekiwania, przekazując <xref:System.Threading.WaitOrTimerCallback> delegata <xref:System.Threading.WaitHandle> i do <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="515a2-107">Create the registered wait handle by passing the <xref:System.Threading.WaitOrTimerCallback> delegate and a <xref:System.Threading.WaitHandle> to <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="515a2-108">Metoda wywołania zwrotnego jest wykonywana po <xref:System.Threading.WaitHandle> każdym przekroczeniu limitu czasu lub po zasygnalizowaniu.</span><span class="sxs-lookup"><span data-stu-id="515a2-108">Your callback method executes each time the <xref:System.Threading.WaitHandle> times out or is signaled.</span></span>  
  
  
> [!NOTE]
>  <span data-ttu-id="515a2-109">Visual Basic użytkownicy mogą pominąć <xref:System.Threading.WaitOrTimerCallback> Konstruktor i po prostu `AddressOf` użyć operatora podczas przekazywania metody wywołania zwrotnego do <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A>.</span><span class="sxs-lookup"><span data-stu-id="515a2-109">Visual Basic users can omit the <xref:System.Threading.WaitOrTimerCallback> constructor, and simply use the `AddressOf` operator when passing the callback method to <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A>.</span></span> <span data-ttu-id="515a2-110">Visual Basic automatycznie wywołuje poprawnego konstruktora delegatów.</span><span class="sxs-lookup"><span data-stu-id="515a2-110">Visual Basic automatically calls the correct delegate constructor.</span></span>  
  
 <span data-ttu-id="515a2-111">Jeśli chcesz przekazać informacje do metody wywołania zwrotnego, Utwórz obiekt zawierający wymagane informacje i przekaż go do <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A> momentu utworzenia zarejestrowanego dojścia oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="515a2-111">If you want to pass information to your callback method, create an object that contains the necessary information and pass it to <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A> when you create the registered wait handle.</span></span> <span data-ttu-id="515a2-112">Za każdym razem, gdy metoda wywołania zwrotnego jest `state` wykonywana, parametr zawiera ten obiekt.</span><span class="sxs-lookup"><span data-stu-id="515a2-112">Each time your callback method executes, the `state` parameter contains this object.</span></span>  
  
 <span data-ttu-id="515a2-113">Aby uzyskać więcej informacji o używaniu metod wywołania zwrotnego do synchronizowania wątków puli wątków, zobacz [Zarządzana pula wątków](~/docs/standard/threading/the-managed-thread-pool.md).</span><span class="sxs-lookup"><span data-stu-id="515a2-113">For more information about using callback methods to synchronize thread pool threads, see [The managed thread pool](~/docs/standard/threading/the-managed-thread-pool.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="515a2-114">Poniższy przykład pokazuje, <xref:System.Threading.WaitOrTimerCallback> jak używać delegata do reprezentowania metody wywołania zwrotnego, która jest wykonywana po zasygnalizowaniu uchwytu oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="515a2-114">The following example shows how to use the <xref:System.Threading.WaitOrTimerCallback> delegate to represent a callback method that is executed when a wait handle is signaled.</span></span>  
  
 <span data-ttu-id="515a2-115">W przykładzie pokazano również, <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A> jak za pomocą metody wykonać określoną metodę wywołania zwrotnego, gdy zostanie zasygnalizowani określone dojście oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="515a2-115">The example also shows how to use the <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A> method to execute a specified callback method when a specified wait handle is signaled.</span></span> <span data-ttu-id="515a2-116">W tym przykładzie metoda wywołania zwrotnego jest `WaitProc` i dojściem oczekiwania <xref:System.Threading.AutoResetEvent>jest.</span><span class="sxs-lookup"><span data-stu-id="515a2-116">In this example, the callback method is `WaitProc` and the wait handle is an <xref:System.Threading.AutoResetEvent>.</span></span>  
  
 <span data-ttu-id="515a2-117">W przykładzie zdefiniowano `TaskInfo` klasę zawierającą informacje, które są przesyłane do wywołania zwrotnego, gdy jest ono wykonywane.</span><span class="sxs-lookup"><span data-stu-id="515a2-117">The example defines a `TaskInfo` class to hold the information that is passed to the callback when it executes.</span></span> <span data-ttu-id="515a2-118">Przykład tworzy `TaskInfo` obiekt i przypisuje mu niektóre dane ciągu.</span><span class="sxs-lookup"><span data-stu-id="515a2-118">The example creates a `TaskInfo` object and assigns it some string data.</span></span> <span data-ttu-id="515a2-119">Wartość <xref:System.Threading.RegisteredWaitHandle> zwracana `TaskInfo` <xref:System.Threading.RegisteredWaitHandle>przez <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A> metodęjestprzypisywanadopolaobiektu,dziękiczemu`Handle` Metoda wywołania zwrotnego ma dostęp do.</span><span class="sxs-lookup"><span data-stu-id="515a2-119">The <xref:System.Threading.RegisteredWaitHandle> that is returned by the <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A> method is assigned to the `Handle` field of the `TaskInfo` object, so that the callback method has access to the <xref:System.Threading.RegisteredWaitHandle>.</span></span>  
  
 <span data-ttu-id="515a2-120">Oprócz `TaskInfo` obiektu wywołanie <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A> metody Określa <xref:System.Threading.AutoResetEvent> , że <xref:System.Threading.WaitOrTimerCallback> zadanie`WaitProc` oczekuje na, delegata, który reprezentuje metodę wywołania zwrotnego, jeden sekundowy interwał limitu czasu i wiele wywołań zwrotnych .</span><span class="sxs-lookup"><span data-stu-id="515a2-120">In addition to the `TaskInfo` object, the call to the <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A> method specifies the <xref:System.Threading.AutoResetEvent> the task waits on, a <xref:System.Threading.WaitOrTimerCallback> delegate that represents the `WaitProc` callback method, a one-second timeout interval, and multiple callbacks.</span></span>  
  
 <span data-ttu-id="515a2-121">Gdy główny wątek sygnalizuje <xref:System.Threading.AutoResetEvent> <xref:System.Threading.EventWaitHandle.Set%2A> wywołanie metody, <xref:System.Threading.WaitOrTimerCallback> obiekt delegowany jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="515a2-121">When the main thread signals the <xref:System.Threading.AutoResetEvent> by calling its <xref:System.Threading.EventWaitHandle.Set%2A> method, the <xref:System.Threading.WaitOrTimerCallback> delegate is invoked.</span></span> <span data-ttu-id="515a2-122">Metoda `WaitProc` sprawdza<xref:System.Threading.RegisteredWaitHandle> , czy upłynął limit czasu.</span><span class="sxs-lookup"><span data-stu-id="515a2-122">The `WaitProc` method tests <xref:System.Threading.RegisteredWaitHandle> to determine whether a timeout occurred.</span></span> <span data-ttu-id="515a2-123">Jeśli wywołanie zwrotne zostało wywołane, ponieważ dojście oczekiwania zostało zasygnalizowane, `WaitProc` Metoda wyrejestruje <xref:System.Threading.RegisteredWaitHandle>, zatrzymując dalsze wywołania zwrotne.</span><span class="sxs-lookup"><span data-stu-id="515a2-123">If the callback was invoked because the wait handle was signaled, the `WaitProc` method unregisters the <xref:System.Threading.RegisteredWaitHandle>, stopping further callbacks.</span></span> <span data-ttu-id="515a2-124">W przypadku przekroczenia limitu czasu zadanie kontynuuje oczekiwanie.</span><span class="sxs-lookup"><span data-stu-id="515a2-124">In the case of a timeout, the task continues waiting.</span></span> <span data-ttu-id="515a2-125">`WaitProc` Metoda zostaje zakończona, drukując komunikat do konsoli.</span><span class="sxs-lookup"><span data-stu-id="515a2-125">The `WaitProc` method ends by printing a message to the console.</span></span>  
  
 [!code-cpp[System.Threading.ThreadPool RegisterWaitForSingleObject0#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ThreadPool RegisterWaitForSingleObject0/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ThreadPool RegisterWaitForSingleObject0#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ThreadPool RegisterWaitForSingleObject0/CS/source.cs#1)]
 [!code-vb[System.Threading.ThreadPool RegisterWaitForSingleObject0#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ThreadPool RegisterWaitForSingleObject0/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/threading/threads-and-threading.md"><span data-ttu-id="515a2-126">Wątki i wątkowość</span><span class="sxs-lookup"><span data-stu-id="515a2-126">Threads and Threading</span></span></related>
    <related type="Article" href="~/docs/standard/threading/the-managed-thread-pool.md"><span data-ttu-id="515a2-127">Zarządzana pula wątków</span><span class="sxs-lookup"><span data-stu-id="515a2-127">The managed thread pool</span></span></related>
  </Docs>
</Type>
