<Type Name="ThreadLocal&lt;T&gt;" FullName="System.Threading.ThreadLocal&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f85db67fb53d297d1aec96b0ff39c4bed9963729" /><Meta Name="ms.sourcegitcommit" Value="e7974886b08aa83a8fb461e8550f31a7d4331ee3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="07/23/2019" /><Meta Name="ms.locfileid" Value="68392308" /></Metadata><TypeSignature Language="C#" Value="public class ThreadLocal&lt;T&gt; : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ThreadLocal`1&lt;T&gt; extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ThreadLocal`1" />
  <TypeSignature Language="VB.NET" Value="Public Class ThreadLocal(Of T)&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ThreadLocal : IDisposable" />
  <TypeSignature Language="F#" Value="type ThreadLocal&lt;'T&gt; = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("IsValueCreated={IsValueCreated}, Value={ValueForDebugDisplay}, Count={ValuesCountForDebugDisplay}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Threading.SystemThreading_ThreadLocalDebugView`1))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0">
      <AttributeName>System.Diagnostics.DebuggerDisplay("IsValueCreated={IsValueCreated}, Value={ValueForDebugDisplay}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="51f9f-101">Określa typ danych przechowywanych dla wątku.</span><span class="sxs-lookup"><span data-stu-id="51f9f-101">Specifies the type of data stored per-thread.</span></span></typeparam>
    <summary><span data-ttu-id="51f9f-102">Zapewnia magazynowanie danych w lokalnym wątku.</span><span class="sxs-lookup"><span data-stu-id="51f9f-102">Provides thread-local storage of data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51f9f-103">Poniższy przykład przedstawia sposób użycia <xref:System.Threading.ThreadLocal%601>:</span><span class="sxs-lookup"><span data-stu-id="51f9f-103">The following example shows how to use <xref:System.Threading.ThreadLocal%601>:</span></span>  
  
 [!code-csharp[System.Threading.ThreadLocal#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.threadlocal/cs/threadlocal.cs#01)]
 [!code-vb[System.Threading.ThreadLocal#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.threadlocal/vb/threadlocal.vb#01)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="51f9f-104">Z wyjątkiem <see cref="M:System.Threading.ThreadLocal`1.Dispose" />, wszystkie publiczne i chronione elementy członkowskie są bezpieczne <see cref="T:System.Threading.ThreadLocal`1" /> dla wątków i mogą być używane współbieżnie z wielu wątków.</span><span class="sxs-lookup"><span data-stu-id="51f9f-104">With the exception of <see cref="M:System.Threading.ThreadLocal`1.Dispose" />, all public and protected members of <see cref="T:System.Threading.ThreadLocal`1" /> are thread-safe and may be used concurrently from multiple threads.</span></span> <span data-ttu-id="51f9f-105">Wartość zwracana dla <see cref="P:System.Threading.ThreadLocal`1.Value" /> właściwości i <see cref="P:System.Threading.ThreadLocal`1.IsValueCreated" /> jest specyficzna dla wątku, do którego jest uzyskiwany dostęp do właściwości.</span><span class="sxs-lookup"><span data-stu-id="51f9f-105">The value returned for the <see cref="P:System.Threading.ThreadLocal`1.Value" /> and <see cref="P:System.Threading.ThreadLocal`1.IsValueCreated" /> properties is specific for the thread on which the property is accessed.</span></span></threadsafe>
    <altmember cref="T:System.Lazy`1" />
    <altmember cref="T:System.Threading.AsyncLocal`1" />
    <related type="Article" href="~/docs/framework/performance/lazy-initialization.md"><span data-ttu-id="51f9f-106">Inicjalizacja z opóźnieniem</span><span class="sxs-lookup"><span data-stu-id="51f9f-106">Lazy Initialization</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/8cd68620-dcc3-4f20-8835-c728a6820e71"><span data-ttu-id="51f9f-107">Instrukcje: wykonywanie inicjalizacji obiektów z opóźnieniem</span><span class="sxs-lookup"><span data-stu-id="51f9f-107">How to: Perform Lazy Initialization of Objects</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="51f9f-108"><see cref="T:System.Threading.ThreadLocal`1" /> Inicjuje wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="51f9f-108">Initializes a <see cref="T:System.Threading.ThreadLocal`1" /> instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadLocal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThreadLocal();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51f9f-109"><see cref="T:System.Threading.ThreadLocal`1" /> Inicjuje wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="51f9f-109">Initializes the <see cref="T:System.Threading.ThreadLocal`1" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51f9f-110">Wartość `T` domyślna jest używana do inicjowania wystąpienia, gdy jest dostępny <xref:System.Threading.ThreadLocal%601.Value%2A> po raz pierwszy.</span><span class="sxs-lookup"><span data-stu-id="51f9f-110">The default value of `T` is used to initialize the instance when <xref:System.Threading.ThreadLocal%601.Value%2A> is accessed for the first time.</span></span>  
  
 <span data-ttu-id="51f9f-111">Ten konstruktor jest równoznaczny z wywołaniem <xref:System.Threading.ThreadLocal%601.%23ctor%28System.Boolean%29> konstruktora z `false` wartością dla `trackAllValues` argumentu.</span><span class="sxs-lookup"><span data-stu-id="51f9f-111">This constructor is equivalent to calling the <xref:System.Threading.ThreadLocal%601.%23ctor%28System.Boolean%29> constructor with a value of `false` for the `trackAllValues` argument.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Lazy`1" />
        <related type="Article" href="~/docs/framework/performance/lazy-initialization.md"><span data-ttu-id="51f9f-112">Inicjalizacja z opóźnieniem</span><span class="sxs-lookup"><span data-stu-id="51f9f-112">Lazy Initialization</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8cd68620-dcc3-4f20-8835-c728a6820e71"><span data-ttu-id="51f9f-113">Instrukcje: wykonywanie inicjalizacji obiektów z opóźnieniem</span><span class="sxs-lookup"><span data-stu-id="51f9f-113">How to: Perform Lazy Initialization of Objects</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadLocal (bool trackAllValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool trackAllValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (trackAllValues As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThreadLocal(bool trackAllValues);" />
      <MemberSignature Language="F#" Value="new System.Threading.ThreadLocal&lt;'T&gt; : bool -&gt; System.Threading.ThreadLocal&lt;'T&gt;" Usage="new System.Threading.ThreadLocal&lt;'T&gt; trackAllValues" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="trackAllValues" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="trackAllValues"><span data-ttu-id="51f9f-114"><see langword="true" />Aby śledzić wszystkie wartości ustawione w wystąpieniu i uwidaczniać je za pomocą <see cref="P:System.Threading.ThreadLocal`1.Values" /> właściwości; <see langword="false" /> w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="51f9f-114"><see langword="true" /> to track all values set on the instance and expose them through the <see cref="P:System.Threading.ThreadLocal`1.Values" /> property; <see langword="false" /> otherwise.</span></span></param>
        <summary><span data-ttu-id="51f9f-115"><see cref="T:System.Threading.ThreadLocal`1" /> Inicjuje wystąpienie i określa, czy wszystkie wartości są dostępne z dowolnego wątku.</span><span class="sxs-lookup"><span data-stu-id="51f9f-115">Initializes the <see cref="T:System.Threading.ThreadLocal`1" /> instance and specifies whether all values are accessible from any thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51f9f-116">Jeśli `trackAllValues` jest`false`, dostępna jest tylko wartość tego wystąpienia dla bieżącego wątku.</span><span class="sxs-lookup"><span data-stu-id="51f9f-116">If `trackAllValues` is `false`, only the value of this instance for the current thread is accessible.</span></span> <span data-ttu-id="51f9f-117">Próba użycia <xref:System.Threading.ThreadLocal%601.Values%2A> właściwości do pobrania wszystkich wartości <xref:System.InvalidOperationException> zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="51f9f-117">Attempting to use the <xref:System.Threading.ThreadLocal%601.Values%2A> property to retrieve all values throws an <xref:System.InvalidOperationException> exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadLocal (Func&lt;T&gt; valueFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;!T&gt; valueFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (valueFactory As Func(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThreadLocal(Func&lt;T&gt; ^ valueFactory);" />
      <MemberSignature Language="F#" Value="new System.Threading.ThreadLocal&lt;'T&gt; : Func&lt;'T&gt; -&gt; System.Threading.ThreadLocal&lt;'T&gt;" Usage="new System.Threading.ThreadLocal&lt;'T&gt; valueFactory" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="valueFactory" Type="System.Func&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="valueFactory"><span data-ttu-id="51f9f-118">Wywołano, <see cref="T:System.Func`1" /> aby utworzyć wartość opóźnieniem-Initialized, gdy próba pobrania <see cref="P:System.Threading.ThreadLocal`1.Value" /> nie została wcześniej zainicjowana.</span><span class="sxs-lookup"><span data-stu-id="51f9f-118">The  <see cref="T:System.Func`1" /> invoked to produce a lazily-initialized value when an attempt is made to retrieve <see cref="P:System.Threading.ThreadLocal`1.Value" /> without it having been previously initialized.</span></span></param>
        <summary><span data-ttu-id="51f9f-119">Inicjuje wystąpienie z określoną <paramref name="valueFactory" /> funkcją. <see cref="T:System.Threading.ThreadLocal`1" /></span><span class="sxs-lookup"><span data-stu-id="51f9f-119">Initializes the <see cref="T:System.Threading.ThreadLocal`1" /> instance with the specified <paramref name="valueFactory" /> function.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51f9f-120"><paramref name="valueFactory" />jest odwołaniem o wartości null (Nothing w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="51f9f-120"><paramref name="valueFactory" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <altmember cref="T:System.Lazy`1" />
        <related type="Article" href="~/docs/framework/performance/lazy-initialization.md"><span data-ttu-id="51f9f-121">Inicjalizacja z opóźnieniem</span><span class="sxs-lookup"><span data-stu-id="51f9f-121">Lazy Initialization</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8cd68620-dcc3-4f20-8835-c728a6820e71"><span data-ttu-id="51f9f-122">Instrukcje: wykonywanie inicjalizacji obiektów z opóźnieniem</span><span class="sxs-lookup"><span data-stu-id="51f9f-122">How to: Perform Lazy Initialization of Objects</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadLocal (Func&lt;T&gt; valueFactory, bool trackAllValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;!T&gt; valueFactory, bool trackAllValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (valueFactory As Func(Of T), trackAllValues As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThreadLocal(Func&lt;T&gt; ^ valueFactory, bool trackAllValues);" />
      <MemberSignature Language="F#" Value="new System.Threading.ThreadLocal&lt;'T&gt; : Func&lt;'T&gt; * bool -&gt; System.Threading.ThreadLocal&lt;'T&gt;" Usage="new System.Threading.ThreadLocal&lt;'T&gt; (valueFactory, trackAllValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="valueFactory" Type="System.Func&lt;T&gt;" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="trackAllValues" Type="System.Boolean" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="valueFactory"><span data-ttu-id="51f9f-123">Wywołano, <see cref="T:System.Func`1" /> aby utworzyć wartość opóźnieniem-Initialized, gdy próba pobrania <see cref="P:System.Threading.ThreadLocal`1.Value" /> nie została wcześniej zainicjowana.</span><span class="sxs-lookup"><span data-stu-id="51f9f-123">The <see cref="T:System.Func`1" /> invoked to produce a lazily-initialized value when an attempt is made to retrieve <see cref="P:System.Threading.ThreadLocal`1.Value" /> without it having been previously initialized.</span></span></param>
        <param name="trackAllValues"><span data-ttu-id="51f9f-124"><see langword="true" />Aby śledzić wszystkie wartości ustawione w wystąpieniu i uwidaczniać je za pomocą <see cref="P:System.Threading.ThreadLocal`1.Values" /> właściwości; <see langword="false" /> w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="51f9f-124"><see langword="true" /> to track all values set on the instance and expose them through the <see cref="P:System.Threading.ThreadLocal`1.Values" /> property; <see langword="false" /> otherwise.</span></span></param>
        <summary><span data-ttu-id="51f9f-125">Inicjuje wystąpienie z określoną <paramref name="valueFactory" /> funkcją i flagą wskazującą, czy wszystkie wartości są dostępne z dowolnego wątku. <see cref="T:System.Threading.ThreadLocal`1" /></span><span class="sxs-lookup"><span data-stu-id="51f9f-125">Initializes the <see cref="T:System.Threading.ThreadLocal`1" /> instance with the specified <paramref name="valueFactory" /> function and a flag that indicates whether all values are accessible from any thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51f9f-126">Jeśli `trackAllValues` jest`false`, dostępna jest tylko wartość tego wystąpienia dla bieżącego wątku.</span><span class="sxs-lookup"><span data-stu-id="51f9f-126">If `trackAllValues` is `false`, only the value of this instance for the current thread is accessible.</span></span> <span data-ttu-id="51f9f-127">Próba użycia <xref:System.Threading.ThreadLocal%601.Values%2A> właściwości do pobrania wszystkich wartości <xref:System.InvalidOperationException> zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="51f9f-127">Attempting to use the <xref:System.Threading.ThreadLocal%601.Values%2A> property to retrieve all values throws an <xref:System.InvalidOperationException> exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51f9f-128"><paramref name="valueFactory" />jest odwołaniem (<see langword="Nothing" /> w Visual Basic). <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="51f9f-128"><paramref name="valueFactory" /> is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="51f9f-129">Zwalnia zasoby używane przez to <see cref="T:System.Threading.ThreadLocal`1" /> wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="51f9f-129">Releases the resources used by this <see cref="T:System.Threading.ThreadLocal`1" /> instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="threadLocal.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51f9f-130">Zwalnia wszystkie zasoby używane przez bieżące wystąpienie <see cref="T:System.Threading.ThreadLocal`1" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="51f9f-130">Releases all resources used by the current instance of the <see cref="T:System.Threading.ThreadLocal`1" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51f9f-131">Wywołaj `Dispose` po zakończeniu korzystania z <xref:System.Threading.ThreadLocal%601>.</span><span class="sxs-lookup"><span data-stu-id="51f9f-131">Call `Dispose` when you are finished using the <xref:System.Threading.ThreadLocal%601>.</span></span> <span data-ttu-id="51f9f-132">`Dispose` Metoda<xref:System.Threading.ThreadLocal%601> pozostawia w stanie niezdatnym do użytku.</span><span class="sxs-lookup"><span data-stu-id="51f9f-132">The `Dispose` method leaves the <xref:System.Threading.ThreadLocal%601> in an unusable state.</span></span> <span data-ttu-id="51f9f-133">Po wywołaniu `Dispose`należy wydać wszystkie odwołania <xref:System.Threading.ThreadLocal%601> do, aby moduł wyrzucania elementów bezużytecznych mógł odwoływać pamięć <xref:System.Threading.ThreadLocal%601> , którą zajmował.</span><span class="sxs-lookup"><span data-stu-id="51f9f-133">After calling `Dispose`, you must release all references to the <xref:System.Threading.ThreadLocal%601> so the garbage collector can reclaim the memory that the <xref:System.Threading.ThreadLocal%601> was occupying.</span></span>  
  
 <span data-ttu-id="51f9f-134">Aby uzyskać więcej informacji, zobacz [Oczyszczanie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i implementowanie [metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="51f9f-134">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51f9f-135">Zawsze wywołuj `Dispose` przed wydaniem ostatniego odwołania <xref:System.Threading.ThreadLocal%601>do.</span><span class="sxs-lookup"><span data-stu-id="51f9f-135">Always call `Dispose` before you release your last reference to the <xref:System.Threading.ThreadLocal%601>.</span></span> <span data-ttu-id="51f9f-136">W przeciwnym razie używane zasoby nie zostaną zwolnione do momentu wywołania <xref:System.Threading.ThreadLocal%601> `Finalize` metody obiektu przez moduł zbierający elementy bezużyteczne.</span><span class="sxs-lookup"><span data-stu-id="51f9f-136">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.ThreadLocal%601> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Lazy`1" />
        <related type="Article" href="~/docs/framework/performance/lazy-initialization.md"><span data-ttu-id="51f9f-137">Inicjalizacja z opóźnieniem</span><span class="sxs-lookup"><span data-stu-id="51f9f-137">Lazy Initialization</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8cd68620-dcc3-4f20-8835-c728a6820e71"><span data-ttu-id="51f9f-138">Instrukcje: wykonywanie inicjalizacji obiektów z opóźnieniem</span><span class="sxs-lookup"><span data-stu-id="51f9f-138">How to: Perform Lazy Initialization of Objects</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="threadLocal.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="51f9f-139">Wartość logiczna wskazująca, czy ta metoda jest wywoływana z powodu wywołania <see cref="M:System.Threading.ThreadLocal`1.Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="51f9f-139">A Boolean value that indicates whether this method is being called due to a call to <see cref="M:System.Threading.ThreadLocal`1.Dispose" />.</span></span></param>
        <summary><span data-ttu-id="51f9f-140">Zwalnia zasoby używane przez to <see cref="T:System.Threading.ThreadLocal`1" /> wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="51f9f-140">Releases the resources used by this <see cref="T:System.Threading.ThreadLocal`1" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51f9f-141">W przeciwieństwie do większości elementów członkowskich <xref:System.Threading.ThreadLocal%601>, ta metoda nie jest bezpieczna wątkowo.</span><span class="sxs-lookup"><span data-stu-id="51f9f-141">Unlike most of the members of <xref:System.Threading.ThreadLocal%601>, this method is not thread-safe.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Lazy`1" />
        <related type="Article" href="~/docs/framework/performance/lazy-initialization.md"><span data-ttu-id="51f9f-142">Inicjalizacja z opóźnieniem</span><span class="sxs-lookup"><span data-stu-id="51f9f-142">Lazy Initialization</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8cd68620-dcc3-4f20-8835-c728a6820e71"><span data-ttu-id="51f9f-143">Instrukcje: wykonywanie inicjalizacji obiektów z opóźnieniem</span><span class="sxs-lookup"><span data-stu-id="51f9f-143">How to: Perform Lazy Initialization of Objects</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ThreadLocal ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ThreadLocal`1 ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="threadLocal.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51f9f-144">Zwalnia zasoby używane przez to <see cref="T:System.Threading.ThreadLocal`1" /> wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="51f9f-144">Releases the resources used by this <see cref="T:System.Threading.ThreadLocal`1" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Lazy`1" />
        <related type="Article" href="~/docs/framework/performance/lazy-initialization.md"><span data-ttu-id="51f9f-145">Inicjalizacja z opóźnieniem</span><span class="sxs-lookup"><span data-stu-id="51f9f-145">Lazy Initialization</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8cd68620-dcc3-4f20-8835-c728a6820e71"><span data-ttu-id="51f9f-146">Instrukcje: wykonywanie inicjalizacji obiektów z opóźnieniem</span><span class="sxs-lookup"><span data-stu-id="51f9f-146">How to: Perform Lazy Initialization of Objects</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsValueCreated">
      <MemberSignature Language="C#" Value="public bool IsValueCreated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValueCreated" />
      <MemberSignature Language="DocId" Value="P:System.Threading.ThreadLocal`1.IsValueCreated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsValueCreated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsValueCreated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsValueCreated : bool" Usage="System.Threading.ThreadLocal&lt;'T&gt;.IsValueCreated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51f9f-147">Pobiera, <see cref="P:System.Threading.ThreadLocal`1.Value" /> czy jest zainicjowany w bieżącym wątku.</span><span class="sxs-lookup"><span data-stu-id="51f9f-147">Gets whether <see cref="P:System.Threading.ThreadLocal`1.Value" /> is initialized on the current thread.</span></span></summary>
        <value><span data-ttu-id="51f9f-148">prawda, <see cref="P:System.Threading.ThreadLocal`1.Value" /> jeśli jest zainicjowany w bieżącym wątku; w przeciwnym razie false.</span><span class="sxs-lookup"><span data-stu-id="51f9f-148">true if <see cref="P:System.Threading.ThreadLocal`1.Value" /> is initialized on the current thread; otherwise false.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="51f9f-149"><see cref="T:System.Threading.ThreadLocal`1" /> Wystąpienie zostało usunięte.</span><span class="sxs-lookup"><span data-stu-id="51f9f-149">The <see cref="T:System.Threading.ThreadLocal`1" /> instance has been disposed.</span></span></exception>
        <altmember cref="T:System.Lazy`1" />
        <related type="Article" href="~/docs/framework/performance/lazy-initialization.md"><span data-ttu-id="51f9f-150">Inicjalizacja z opóźnieniem</span><span class="sxs-lookup"><span data-stu-id="51f9f-150">Lazy Initialization</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8cd68620-dcc3-4f20-8835-c728a6820e71"><span data-ttu-id="51f9f-151">Instrukcje: wykonywanie inicjalizacji obiektów z opóźnieniem</span><span class="sxs-lookup"><span data-stu-id="51f9f-151">How to: Perform Lazy Initialization of Objects</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="threadLocal.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51f9f-152">Tworzy i zwraca reprezentację ciągu dla tego wystąpienia dla bieżącego wątku.</span><span class="sxs-lookup"><span data-stu-id="51f9f-152">Creates and returns a string representation of this instance for the current thread.</span></span></summary>
        <returns><span data-ttu-id="51f9f-153">Wynik wywołania metody <see cref="M:System.Object.ToString" />. <see cref="P:System.Threading.ThreadLocal`1.Value" /></span><span class="sxs-lookup"><span data-stu-id="51f9f-153">The result of calling <see cref="M:System.Object.ToString" /> on the <see cref="P:System.Threading.ThreadLocal`1.Value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51f9f-154">Wywołanie tej metody wymusza inicjalizację bieżącego wątku, podobnie jak w przypadku uzyskiwania dostępu <xref:System.Threading.ThreadLocal%601.Value%2A> bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="51f9f-154">Calling this method forces initialization for the current thread, as is the case with accessing <xref:System.Threading.ThreadLocal%601.Value%2A> directly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="51f9f-155"><see cref="T:System.Threading.ThreadLocal`1" /> Wystąpienie zostało usunięte.</span><span class="sxs-lookup"><span data-stu-id="51f9f-155">The <see cref="T:System.Threading.ThreadLocal`1" /> instance has been disposed.</span></span></exception>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="51f9f-156"><see cref="P:System.Threading.ThreadLocal`1.Value" /> Dla bieżącego wątku jest odwołaniem o wartości null (Nothing w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="51f9f-156">The <see cref="P:System.Threading.ThreadLocal`1.Value" /> for the current thread is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51f9f-157">Funkcja inicjowania podjęła próbę odwołania <see cref="P:System.Threading.ThreadLocal`1.Value" /> cyklicznie.</span><span class="sxs-lookup"><span data-stu-id="51f9f-157">The initialization function attempted to reference <see cref="P:System.Threading.ThreadLocal`1.Value" /> recursively.</span></span></exception>
        <exception cref="T:System.MissingMemberException"><span data-ttu-id="51f9f-158">Nie podano konstruktora bez parametrów i nie podano fabryki wartości.</span><span class="sxs-lookup"><span data-stu-id="51f9f-158">No parameterless constructor is provided and no value factory is supplied.</span></span></exception>
        <altmember cref="T:System.Lazy`1" />
        <related type="Article" href="~/docs/framework/performance/lazy-initialization.md"><span data-ttu-id="51f9f-159">Inicjalizacja z opóźnieniem</span><span class="sxs-lookup"><span data-stu-id="51f9f-159">Lazy Initialization</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8cd68620-dcc3-4f20-8835-c728a6820e71"><span data-ttu-id="51f9f-160">Instrukcje: wykonywanie inicjalizacji obiektów z opóźnieniem</span><span class="sxs-lookup"><span data-stu-id="51f9f-160">How to: Perform Lazy Initialization of Objects</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public T Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Value" />
      <MemberSignature Language="DocId" Value="P:System.Threading.ThreadLocal`1.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Value { T get(); void set(T value); };" />
      <MemberSignature Language="F#" Value="member this.Value : 'T with get, set" Usage="System.Threading.ThreadLocal&lt;'T&gt;.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51f9f-161">Pobiera lub ustawia wartość tego wystąpienia dla bieżącego wątku.</span><span class="sxs-lookup"><span data-stu-id="51f9f-161">Gets or sets the value of this instance for the current thread.</span></span></summary>
        <value><span data-ttu-id="51f9f-162">Zwraca wystąpienie obiektu, który jest odpowiedzialny za Inicjowanie przez ten ThreadLocal.</span><span class="sxs-lookup"><span data-stu-id="51f9f-162">Returns an instance of the object that this ThreadLocal is responsible for initializing.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51f9f-163">Jeśli to wystąpienie nie zostało wcześniej zainicjowane dla bieżącego wątku, uzyskanie dostępu <xref:System.Threading.ThreadLocal%601.Value%2A> spowoduje próbę jego zainicjowania.</span><span class="sxs-lookup"><span data-stu-id="51f9f-163">If this instance was not previously initialized for the current thread, accessing <xref:System.Threading.ThreadLocal%601.Value%2A> will attempt to initialize it.</span></span> <span data-ttu-id="51f9f-164">Jeśli funkcja inicjowania została dostarczona podczas konstruowania, ta Inicjalizacja nastąpi, wywołując funkcję w celu pobrania wartości początkowej dla <xref:System.Threading.ThreadLocal%601.Value%2A>.</span><span class="sxs-lookup"><span data-stu-id="51f9f-164">If an initialization function was supplied during the construction, that initialization will happen by invoking the function to retrieve the initial value for <xref:System.Threading.ThreadLocal%601.Value%2A>.</span></span> <span data-ttu-id="51f9f-165">W przeciwnym razie zostanie użyta wartość domyślna.</span><span class="sxs-lookup"><span data-stu-id="51f9f-165">Otherwise, the default value of will be used.</span></span> <span data-ttu-id="51f9f-166">Jeśli wyjątek jest zgłaszany, ten wyjątek jest buforowany i zgłaszany na każdym następnym dostępie do właściwości.</span><span class="sxs-lookup"><span data-stu-id="51f9f-166">If an exception is thrown, that exception is cached and thrown on each subsequent access of the property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="51f9f-167"><see cref="T:System.Threading.ThreadLocal`1" /> Wystąpienie zostało usunięte.</span><span class="sxs-lookup"><span data-stu-id="51f9f-167">The <see cref="T:System.Threading.ThreadLocal`1" /> instance has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51f9f-168">Funkcja inicjowania podjęła próbę odwołania <see cref="P:System.Threading.ThreadLocal`1.Value" /> cyklicznie.</span><span class="sxs-lookup"><span data-stu-id="51f9f-168">The initialization function attempted to reference <see cref="P:System.Threading.ThreadLocal`1.Value" /> recursively.</span></span></exception>
        <exception cref="T:System.MissingMemberException"><span data-ttu-id="51f9f-169">Nie podano konstruktora bez parametrów i nie podano fabryki wartości.</span><span class="sxs-lookup"><span data-stu-id="51f9f-169">No parameterless constructor is provided and no value factory is supplied.</span></span></exception>
        <altmember cref="T:System.Lazy`1" />
        <related type="Article" href="~/docs/framework/performance/lazy-initialization.md"><span data-ttu-id="51f9f-170">Inicjalizacja z opóźnieniem</span><span class="sxs-lookup"><span data-stu-id="51f9f-170">Lazy Initialization</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8cd68620-dcc3-4f20-8835-c728a6820e71"><span data-ttu-id="51f9f-171">Instrukcje: wykonywanie inicjalizacji obiektów z opóźnieniem</span><span class="sxs-lookup"><span data-stu-id="51f9f-171">How to: Perform Lazy Initialization of Objects</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;T&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;!T&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Threading.ThreadLocal`1.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As IList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;T&gt; ^ Values { System::Collections::Generic::IList&lt;T&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Generic.IList&lt;'T&gt;" Usage="System.Threading.ThreadLocal&lt;'T&gt;.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51f9f-172">Pobiera listę dla wszystkich wartości przechowywanych aktualnie przez wszystkie wątki, które uzyskały dostęp do tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="51f9f-172">Gets a list for all of the values currently stored by all of the threads that have accessed this instance.</span></span></summary>
        <value><span data-ttu-id="51f9f-173">Lista wszystkich wartości przechowywanych obecnie we wszystkich wątkach, do których uzyskano dostęp do tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="51f9f-173">A list for all of the values currently stored by all of the threads that have accessed this instance.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="51f9f-174">Wartości przechowywane przez wszystkie wątki są niedostępne, ponieważ to wystąpienie zostało zainicjowane z <paramref name="trackAllValues" /> argumentem <see langword="false" /> ustawionym na w wywołaniu konstruktora klasy.</span><span class="sxs-lookup"><span data-stu-id="51f9f-174">Values stored by all threads are not available because this instance was initialized with the <paramref name="trackAllValues" /> argument set to <see langword="false" /> in the call to a class constructor.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="51f9f-175"><see cref="T:System.Threading.ThreadLocal`1" /> Wystąpienie zostało usunięte.</span><span class="sxs-lookup"><span data-stu-id="51f9f-175">The <see cref="T:System.Threading.ThreadLocal`1" /> instance has been disposed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>