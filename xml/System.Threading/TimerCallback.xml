<Type Name="TimerCallback" FullName="System.Threading.TimerCallback">
  <TypeSignature Language="C#" Value="public delegate void TimerCallback(object state);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TimerCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.TimerCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub TimerCallback(state As Object)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void TimerCallback(System::Object ^ state);" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Timer</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="state" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="state"><span data-ttu-id="01689-101">Obiekt zawierający informacje specyficzne dla aplikacji odpowiednie do metody wywoływane przez ten delegat lub <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="01689-101">An object containing application-specific information relevant to the method invoked by this delegate, or <see langword="null" />.</span></span></param>
    <summary><span data-ttu-id="01689-102">Reprezentuje metodę, która obsługuje wywołania z <see cref="T:System.Threading.Timer" />.</span><span class="sxs-lookup"><span data-stu-id="01689-102">Represents the method that handles calls from a <see cref="T:System.Threading.Timer" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01689-103">Użyj `TimerCallback` pełnomocnika, aby określić metodę, która jest wywoływana przez <xref:System.Threading.Timer>.</span><span class="sxs-lookup"><span data-stu-id="01689-103">Use a `TimerCallback` delegate to specify the method that is called by a <xref:System.Threading.Timer>.</span></span> <span data-ttu-id="01689-104">Ta metoda nie są wykonywane w wątek, który utworzył czasomierza; jest wykonywana w wątku puli oddzielnym wątku, który jest udostępniany przez system.</span><span class="sxs-lookup"><span data-stu-id="01689-104">This method does not execute in the thread that created the timer; it executes in a separate thread pool thread that is provided by the system.</span></span> <span data-ttu-id="01689-105">`TimerCallback` Delegata wywołuje metodę raz po upłynięciu tego czasu rozpoczęcia i nadal go raz wywołać dla interwału czasomierza do <xref:System.Threading.Timer.Dispose%2A> wywoływana jest metoda, lub do czasu <xref:System.Threading.Timer.Change%2A?displayProperty=nameWithType> metoda jest wywoływana z wartość interwału <xref:System.Threading.Timeout.Infinite>.</span><span class="sxs-lookup"><span data-stu-id="01689-105">The `TimerCallback` delegate invokes the method once after the start time elapses, and continues to invoke it once per timer interval until the <xref:System.Threading.Timer.Dispose%2A> method is called, or until the <xref:System.Threading.Timer.Change%2A?displayProperty=nameWithType> method is called with the interval value <xref:System.Threading.Timeout.Infinite>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01689-106">Wywołania zwrotne może wystąpić po <xref:System.Threading.Timer.Dispose> przeciążenie metody została wywołana, ponieważ czasomierza kolejki wywołań zwrotnych do wykonania przez wątków z puli wątków.</span><span class="sxs-lookup"><span data-stu-id="01689-106">Callbacks can occur after the <xref:System.Threading.Timer.Dispose> method overload has been called, because the timer queues callbacks for execution by thread pool threads.</span></span> <span data-ttu-id="01689-107">Można użyć <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> przeciążenie metody poczekać, aż wszystkie wywołania zwrotne została ukończona.</span><span class="sxs-lookup"><span data-stu-id="01689-107">You can use the <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> method overload to wait until all callbacks have completed.</span></span>  
  
 <span data-ttu-id="01689-108">Delegat czasomierza jest określona, gdy czasomierz jest tworzony i nie można zmienić.</span><span class="sxs-lookup"><span data-stu-id="01689-108">The timer delegate is specified when the timer is constructed, and cannot be changed.</span></span> <span data-ttu-id="01689-109">Czas rozpoczęcia `Timer` jest przekazywany w `dueTime` parametr `Timer` konstruktory i okres jest przekazywany w `period` parametru.</span><span class="sxs-lookup"><span data-stu-id="01689-109">The start time for a `Timer` is passed in the `dueTime` parameter of the `Timer` constructors, and the period is passed in the `period` parameter.</span></span> <span data-ttu-id="01689-110">Na przykład, który pokazuje tworzenie i używanie `TimerCallback` delegowania, zobacz <xref:System.Threading.Timer?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="01689-110">For an example that demonstrates creating and using a `TimerCallback` delegate, see <xref:System.Threading.Timer?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01689-111">W poniższym przykładzie przedstawiono sposób tworzenia delegata używane z `Timer` klasy.</span><span class="sxs-lookup"><span data-stu-id="01689-111">The following code example shows how to create the delegate used with the `Timer` class.</span></span>  
  
 [!code-cpp[System.Threading.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer/CS/source.cs#1)]
 [!code-vb[System.Threading.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Timer" />
    <altmember cref="T:System.Threading.ThreadPool" />
  </Docs>
</Type>