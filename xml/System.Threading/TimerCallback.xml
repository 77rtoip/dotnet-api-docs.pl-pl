<Type Name="TimerCallback" FullName="System.Threading.TimerCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b076ba469b4f85bafe7aae2b91a0188865ac856c" /><Meta Name="ms.sourcegitcommit" Value="3f21796619d6e69ad383c958cc013ce44c0678de" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="02/11/2019" /><Meta Name="ms.locfileid" Value="56066946" /></Metadata><TypeSignature Language="C#" Value="public delegate void TimerCallback(object state);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TimerCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.TimerCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub TimerCallback(state As Object)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void TimerCallback(System::Object ^ state);" />
  <TypeSignature Language="F#" Value="type TimerCallback = delegate of obj -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Timer</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;dotnet-uwp-10.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="state" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="state">Obiekt zawierający informacje specyficzne dla aplikacji odpowiednie do metody wywoływane przez ten delegat lub <see langword="null" />.</param>
    <summary>Reprezentuje metodę, która obsługuje wywołania z <see cref="T:System.Threading.Timer" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj `TimerCallback` delegata, aby określić metodę, która jest wywoływana przez <xref:System.Threading.Timer>. Ta metoda nie jest wykonywane w wątek, który utworzył czasomierza; wykonuje w oddzielnym wątku z puli wątków, które są dostarczane przez system. `TimerCallback` Delegata wywołuje metodę raz po upłynie czas rozpoczęcia i wywoływać go jeden raz dla interwału czasomierza do czasu w dalszym ciągu <xref:System.Threading.Timer.Dispose%2A> metoda jest wywoływana, lub do momentu <xref:System.Threading.Timer.Change%2A?displayProperty=nameWithType> metoda jest wywoływana z wartości interwału <xref:System.Threading.Timeout.Infinite>.  
  
> [!NOTE]
>  Wywołania zwrotne może wystąpić po <xref:System.Threading.Timer.Dispose> została wywołana metoda przeciążenia, ponieważ czasomierz kolejki wywołania zwrotne do wykonania przez wątków z puli wątków. Możesz użyć <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> przeciążenia metody, aby poczekać, aż wszystkie wywołania zwrotne została ukończona.  
  
 Delegat czasomierza określono czasomierza jest tworzony, gdy nie można jej zmienić. Czas rozpoczęcia `Timer` jest przekazywany w `dueTime` parametru `Timer` konstruktorów i okresu jest przekazywany w `period` parametru. Aby uzyskać przykład demonstrujący, tworzenia i używania `TimerCallback` delegowania, zobacz <xref:System.Threading.Timer?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób tworzenia delegata używany z `Timer` klasy.  
  
 [!code-cpp[System.Threading.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer/CS/source.cs#1)]
 [!code-vb[System.Threading.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Timer" />
    <altmember cref="T:System.Threading.ThreadPool" />
    <related type="Article" href="~/docs/standard/threading/timers.md">Czasomierze</related>
  </Docs>
</Type>