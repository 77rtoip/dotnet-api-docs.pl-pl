<Type Name="SynchronizationContext" FullName="System.Threading.SynchronizationContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="21e39acd8444a88ece1a43a75c683519e22d9bbf" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39937040" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SynchronizationContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SynchronizationContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.SynchronizationContext" />
  <TypeSignature Language="VB.NET" Value="Public Class SynchronizationContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class SynchronizationContext" />
  <TypeSignature Language="F#" Value="type SynchronizationContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Oferuje podstawowe funkcje dla propagowanie kontekstu synchronizacji, w różnych modelach synchronizacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Threading.SynchronizationContext> Klasa jest klasę bazową, która dostarcza kontekst bezwątkowy synchronizacja nie.  
  
 Cel modelu synchronizacji zaimplementowane przez tę klasę jest Zezwalaj na operacje asynchroniczne/synchroniczne wewnętrzne środowiska uruchomieniowego języka wspólnego będzie działać poprawnie z modelami różnych synchronizacji. Ten model upraszcza również niektóre wymagania, które zarządzane aplikacje musieli postępuj zgodnie z do poprawnego działania w środowiskach różnych synchronizacji.  
  
 Dostawców modeli synchronizacji można rozszerzyć tę klasę i udostępniać własne implementacje dla tych metod.  
  
 Aby uzyskać więcej informacji o synchronizacji kontekstów, zobacz artykuł [to wszystkie informacje SynchronizationContext](http://msdn.microsoft.com/magazine/gg598924.aspx) w MSDN Magazine.  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">Musi mieć obiektów dziedziczących <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /> i <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SynchronizationContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SynchronizationContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizationContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Threading.SynchronizationContext" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślny konstruktor wykonuje inicjowanie nie parametrze.  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">Musi mieć obiektów dziedziczących <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /> i <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="CreateCopy">
      <MemberSignature Language="C#" Value="public virtual System.Threading.SynchronizationContext CreateCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.SynchronizationContext CreateCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SynchronizationContext.CreateCopy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateCopy () As SynchronizationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::SynchronizationContext ^ CreateCopy();" />
      <MemberSignature Language="F#" Value="abstract member CreateCopy : unit -&gt; System.Threading.SynchronizationContext&#xA;override this.CreateCopy : unit -&gt; System.Threading.SynchronizationContext" Usage="synchronizationContext.CreateCopy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.SynchronizationContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, tworzy kopię kontekst synchronizacji.</summary>
        <returns>Nowy <see cref="T:System.Threading.SynchronizationContext" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna implementacja zwraca pustą <xref:System.Threading.SynchronizationContext> obiektu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Threading.SynchronizationContext Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Threading.SynchronizationContext Current" />
      <MemberSignature Language="DocId" Value="P:System.Threading.SynchronizationContext.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Current As SynchronizationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Threading::SynchronizationContext ^ Current { System::Threading::SynchronizationContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Threading.SynchronizationContext" Usage="System.Threading.SynchronizationContext.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.SynchronizationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kontekst synchronizacji dla bieżącego wątku.</summary>
        <value>A <see cref="T:System.Threading.SynchronizationContext" /> obiekt reprezentujący bieżącego kontekstu synchronizacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest przydatne w przypadku propagowanie kontekstu synchronizacji z jednego wątku do innego.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWaitNotificationRequired">
      <MemberSignature Language="C#" Value="public bool IsWaitNotificationRequired ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsWaitNotificationRequired() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SynchronizationContext.IsWaitNotificationRequired" />
      <MemberSignature Language="VB.NET" Value="Public Function IsWaitNotificationRequired () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsWaitNotificationRequired();" />
      <MemberSignature Language="F#" Value="member this.IsWaitNotificationRequired : unit -&gt; bool" Usage="synchronizationContext.IsWaitNotificationRequired " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Określa, czy wymagane oczekiwania powiadomienia.</summary>
        <returns>
          <see langword="true" /> Jeśli powiadomienia oczekiwania jest wymagana; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationCompleted">
      <MemberSignature Language="C#" Value="public virtual void OperationCompleted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OperationCompleted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SynchronizationContext.OperationCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OperationCompleted ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OperationCompleted();" />
      <MemberSignature Language="F#" Value="abstract member OperationCompleted : unit -&gt; unit&#xA;override this.OperationCompleted : unit -&gt; unit" Usage="synchronizationContext.OperationCompleted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, odpowiada na powiadomienie o ukończeniu operacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna implementacja nie zawiera kodu. Opcjonalnie można zastąpić tę metodę, aby podać kod, który jest wykonywany po zakończeniu operacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationStarted">
      <MemberSignature Language="C#" Value="public virtual void OperationStarted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OperationStarted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SynchronizationContext.OperationStarted" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OperationStarted ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OperationStarted();" />
      <MemberSignature Language="F#" Value="abstract member OperationStarted : unit -&gt; unit&#xA;override this.OperationStarted : unit -&gt; unit" Usage="synchronizationContext.OperationStarted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, odpowiada na powiadomienie, że operacja została rozpoczęta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna implementacja nie zawiera kodu. Opcjonalnie można zastąpić tę metodę, aby podać kod, który jest wykonywany po rozpoczęciu operacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Post">
      <MemberSignature Language="C#" Value="public virtual void Post (System.Threading.SendOrPostCallback d, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Post(class System.Threading.SendOrPostCallback d, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Post (d As SendOrPostCallback, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Post(System::Threading::SendOrPostCallback ^ d, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member Post : System.Threading.SendOrPostCallback * obj -&gt; unit&#xA;override this.Post : System.Threading.SendOrPostCallback * obj -&gt; unit" Usage="synchronizationContext.Post (d, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Threading.SendOrPostCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="d">
          <see cref="T:System.Threading.SendOrPostCallback" /> Pełnomocnika do wywołania.</param>
        <param name="state">Obiekt przekazany do delegata.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, wywołuje komunikatów asynchronicznych do kontekstu synchronizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Threading.SynchronizationContext.Post%2A> Metoda uruchamia asynchroniczne żądanie opublikowania wiadomości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public virtual void Send (System.Threading.SendOrPostCallback d, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Send(class System.Threading.SendOrPostCallback d, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Send (d As SendOrPostCallback, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Send(System::Threading::SendOrPostCallback ^ d, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member Send : System.Threading.SendOrPostCallback * obj -&gt; unit&#xA;override this.Send : System.Threading.SendOrPostCallback * obj -&gt; unit" Usage="synchronizationContext.Send (d, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Threading.SendOrPostCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="d">
          <see cref="T:System.Threading.SendOrPostCallback" /> Pełnomocnika do wywołania.</param>
        <param name="state">Obiekt przekazany do delegata.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, wywołuje synchronicznego komunikatu do kontekstu synchronizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Threading.SynchronizationContext.Send%2A> Metoda uruchamia żądań synchronicznych do wysyłania wiadomości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Metoda została wywołana w aplikacji Windows Store. Implementacja <see cref="T:System.Threading.SynchronizationContext" /> Windows Store apps nie obsługuje <see cref="M:System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" /> metody.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetSynchronizationContext">
      <MemberSignature Language="C#" Value="public static void SetSynchronizationContext (System.Threading.SynchronizationContext syncContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetSynchronizationContext(class System.Threading.SynchronizationContext syncContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SynchronizationContext.SetSynchronizationContext(System.Threading.SynchronizationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetSynchronizationContext (syncContext As SynchronizationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetSynchronizationContext(System::Threading::SynchronizationContext ^ syncContext);" />
      <MemberSignature Language="F#" Value="static member SetSynchronizationContext : System.Threading.SynchronizationContext -&gt; unit" Usage="System.Threading.SynchronizationContext.SetSynchronizationContext syncContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="syncContext" Type="System.Threading.SynchronizationContext" />
      </Parameters>
      <Docs>
        <param name="syncContext">
          <see cref="T:System.Threading.SynchronizationContext" /> Obiektu należy ustawić.</param>
        <summary>Ustawia bieżący kontekst synchronizacji.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego. Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</permission>
      </Docs>
    </Member>
    <Member MemberName="SetThreadStaticContext">
      <MemberSignature Language="C#" Value="public static void SetThreadStaticContext (System.Threading.SynchronizationContext syncContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetThreadStaticContext(class System.Threading.SynchronizationContext syncContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SynchronizationContext.SetThreadStaticContext(System.Threading.SynchronizationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetThreadStaticContext (syncContext As SynchronizationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetThreadStaticContext(System::Threading::SynchronizationContext ^ syncContext);" />
      <MemberSignature Language="F#" Value="static member SetThreadStaticContext : System.Threading.SynchronizationContext -&gt; unit" Usage="System.Threading.SynchronizationContext.SetThreadStaticContext syncContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.Obsolete("The method is not supported and will be removed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="syncContext" Type="System.Threading.SynchronizationContext" />
      </Parameters>
      <Docs>
        <param name="syncContext">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWaitNotificationRequired">
      <MemberSignature Language="C#" Value="protected void SetWaitNotificationRequired ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetWaitNotificationRequired() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SynchronizationContext.SetWaitNotificationRequired" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetWaitNotificationRequired ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetWaitNotificationRequired();" />
      <MemberSignature Language="F#" Value="member this.SetWaitNotificationRequired : unit -&gt; unit" Usage="synchronizationContext.SetWaitNotificationRequired " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zestawy z powiadomieniem, że oczekiwania powiadomień jest wymagany i przygotowuje metody wywołania zwrotnego, dlatego można ją wywołać bardziej niezawodnie sytuacji oczekiwania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public virtual int Wait (IntPtr[] waitHandles, bool waitAll, int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Wait(native int[] waitHandles, bool waitAll, int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Wait (waitHandles As IntPtr(), waitAll As Boolean, millisecondsTimeout As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Wait(cli::array &lt;IntPtr&gt; ^ waitHandles, bool waitAll, int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="abstract member Wait : nativeint[] * bool * int -&gt; int&#xA;override this.Wait : nativeint[] * bool * int -&gt; int" Usage="synchronizationContext.Wait (waitHandles, waitAll, millisecondsTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.ConstrainedExecution.PrePrepareMethod</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.IntPtr[]" />
        <Parameter Name="waitAll" Type="System.Boolean" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="waitHandles">Tablica typu <see cref="T:System.IntPtr" /> zawierający uchwyty macierzystego systemu operacyjnego.</param>
        <param name="waitAll">
          <see langword="true" /> oczekiwania dla wszystkich dojść; <see langword="false" /> czekać na dowolny uchwyt.</param>
        <param name="millisecondsTimeout">Liczba milisekund, lub <see cref="F:System.Threading.Timeout.Infinite" /> (-1), aby czekać w nieskończoność.</param>
        <summary>Czeka na dowolnych lub wszystkich elementów w wybranej tablicy do otrzymania sygnału.</summary>
        <returns>Indeks tablicy obiektu spełniającego oczekiwania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Threading.SynchronizationContext.Wait%2A> Zewnętrznych deklaracji wywołania metod <xref:System.Threading.SynchronizationContext.WaitHelper%2A> przeprowadzić działanie oczekiwania.  Zastąp <xref:System.Threading.SynchronizationContext.Wait%2A> metodę, aby zmienić zachowanie oczekiwania dla kontekstu synchronizacji.  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)" />
        <exception cref="T:System.ArgumentNullException">
          <paramref name="waitHandles" /> ma wartość null.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego. Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</permission>
      </Docs>
    </Member>
    <Member MemberName="WaitHelper">
      <MemberSignature Language="C#" Value="protected static int WaitHelper (IntPtr[] waitHandles, bool waitAll, int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig int32 WaitHelper(native int[] waitHandles, bool waitAll, int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SynchronizationContext.WaitHelper(System.IntPtr[],System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function WaitHelper (waitHandles As IntPtr(), waitAll As Boolean, millisecondsTimeout As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static int WaitHelper(cli::array &lt;IntPtr&gt; ^ waitHandles, bool waitAll, int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="static member WaitHelper : nativeint[] * bool * int -&gt; int" Usage="System.Threading.SynchronizationContext.WaitHelper (waitHandles, waitAll, millisecondsTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.ConstrainedExecution.PrePrepareMethod</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.IntPtr[]" />
        <Parameter Name="waitAll" Type="System.Boolean" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="waitHandles">Tablica typu <see cref="T:System.IntPtr" /> zawierający uchwyty macierzystego systemu operacyjnego.</param>
        <param name="waitAll">
          <see langword="true" /> oczekiwania dla wszystkich dojść;  <see langword="false" /> czekać na dowolny uchwyt.</param>
        <param name="millisecondsTimeout">Liczba milisekund, lub <see cref="F:System.Threading.Timeout.Infinite" /> (-1), aby czekać w nieskończoność.</param>
        <summary>Funkcja pomocnicza, która czeka na dowolnych lub wszystkich elementów w wybranej tablicy do otrzymania sygnału.</summary>
        <returns>Indeks tablicy obiektu spełniającego oczekiwania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Threading.SynchronizationContext.WaitHelper%2A> jest deklaracja funkcji niezarządzanych pomocnika zewnętrznych. <xref:System.Threading.SynchronizationContext.WaitHelper%2A> jest wywoływana przez <xref:System.Threading.SynchronizationContext.Wait%2A> metodę, aby czekać na sygnał dla określonego systemu operacyjnego.  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)" />
        <permission cref="T:System.Security.SecurityCriticalAttribute">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego. Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</permission>
      </Docs>
    </Member>
  </Members>
</Type>