<Type Name="Timer" FullName="System.Threading.Timer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5bbfabdbae5b1d279368715b246f3372001f343c" /><Meta Name="ms.sourcegitcommit" Value="74239f3977d28923e5020663db2c4e91601bea79" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="07/24/2019" /><Meta Name="ms.locfileid" Value="68437662" /></Metadata><TypeSignature Language="C#" Value="public sealed class Timer : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Timer extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Timer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Timer&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Timer sealed : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type Timer = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Timer</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;dotnet-uwp-10.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="942e3-101">Zapewnia mechanizm wykonywania metody w wątku puli wątków w określonych odstępach czasu.</span><span class="sxs-lookup"><span data-stu-id="942e3-101">Provides a mechanism for executing a method on a thread pool thread at specified intervals.</span></span> <span data-ttu-id="942e3-102">Klasa ta nie może być dziedziczona.</span><span class="sxs-lookup"><span data-stu-id="942e3-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="942e3-103">Użyj delegata, aby określić metodę, która <xref:System.Threading.Timer> ma zostać wykonana. <xref:System.Threading.TimerCallback></span><span class="sxs-lookup"><span data-stu-id="942e3-103">Use a <xref:System.Threading.TimerCallback> delegate to specify the method you want the <xref:System.Threading.Timer> to execute.</span></span> <span data-ttu-id="942e3-104">Podpis <xref:System.Threading.TimerCallback> delegata:</span><span class="sxs-lookup"><span data-stu-id="942e3-104">The signature of the <xref:System.Threading.TimerCallback> delegate is:</span></span>  
  
```csharp  
void TimerCallback(Object state)  
```  
  
```cpp  
void TimerCallback(Object state)  
```  
  
```vb  
Sub TimerCallback(state As Object)  
```  
  
 <span data-ttu-id="942e3-105">Obiekt delegowany czasomierza jest określany podczas konstruowania czasomierza i nie można go zmienić.</span><span class="sxs-lookup"><span data-stu-id="942e3-105">The timer delegate is specified when the timer is constructed, and cannot be changed.</span></span> <span data-ttu-id="942e3-106">Metoda nie jest wykonywana w wątku, który utworzył czasomierz; jest ono wykonywane na <xref:System.Threading.ThreadPool> wątku dostarczanym przez system.</span><span class="sxs-lookup"><span data-stu-id="942e3-106">The method does not execute on the thread that created the timer; it executes on a <xref:System.Threading.ThreadPool> thread supplied by the system.</span></span>  
  
> [!TIP]
> <span data-ttu-id="942e3-107">Platforma .NET zawiera cztery klasy `Timer`o nazwie, z których każda oferuje różne funkcje:</span><span class="sxs-lookup"><span data-stu-id="942e3-107">.NET includes four classes named `Timer`, each of which offers different functionality:</span></span>  
>
> - <span data-ttu-id="942e3-108"><xref:System.Timers.Timer?displayProperty=nameWithType>, które uruchamia zdarzenie i wykonuje kod w co najmniej jednym ujścia zdarzeń w regularnych odstępach czasu.</span><span class="sxs-lookup"><span data-stu-id="942e3-108"><xref:System.Timers.Timer?displayProperty=nameWithType>, which fires an event and executes the code in one or more event sinks at regular intervals.</span></span> <span data-ttu-id="942e3-109">Klasa jest przeznaczona do użycia jako składnik serwera lub usługi w środowisku wielowątkowym. nie ma interfejsu użytkownika i nie jest widoczny w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="942e3-109">The class is intended for use as a server-based or service component in a multithreaded environment; it has no user interface and is not visible at runtime.</span></span>
> - <span data-ttu-id="942e3-110"><xref:System.Threading.Timer?displayProperty=nameWithType>, która wykonuje pojedynczą metodę wywołania zwrotnego w wątku puli wątków w regularnych odstępach czasu.</span><span class="sxs-lookup"><span data-stu-id="942e3-110"><xref:System.Threading.Timer?displayProperty=nameWithType>, which executes a single callback method on a thread pool thread at regular intervals.</span></span> <span data-ttu-id="942e3-111">Metoda wywołania zwrotnego jest definiowana podczas tworzenia wystąpienia czasomierza i nie można jej zmienić.</span><span class="sxs-lookup"><span data-stu-id="942e3-111">The callback method is defined when the timer is instantiated and cannot be changed.</span></span> <span data-ttu-id="942e3-112">Podobnie jak <xref:System.Timers.Timer?displayProperty=nameWithType> w przypadku klasy, ta klasa jest przeznaczona do użycia jako składnik serwera lub usługi w środowisku wielowątkowym. nie ma interfejsu użytkownika i nie jest widoczna w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="942e3-112">Like the <xref:System.Timers.Timer?displayProperty=nameWithType> class, this class is intended for use as a server-based or service component in a multithreaded environment; it has no user interface and is not visible at runtime.</span></span>
> - <span data-ttu-id="942e3-113"><xref:System.Windows.Forms.Timer?displayProperty=nameWithType>(Tylko .NET Framework), składnik Windows Forms, który uruchamia zdarzenie i wykonuje kod w co najmniej jednym ujścia zdarzeń w regularnych odstępach czasu.</span><span class="sxs-lookup"><span data-stu-id="942e3-113"><xref:System.Windows.Forms.Timer?displayProperty=nameWithType> (.NET Framework only), a Windows Forms component that fires an event and executes the code in one or more event sinks at regular intervals.</span></span> <span data-ttu-id="942e3-114">Składnik nie ma interfejsu użytkownika i jest przeznaczony do użytku w środowisku jednowątkowym. jest ono wykonywane w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="942e3-114">The component has no user interface and is designed for use in a single-threaded environment; it executes on the UI thread.</span></span>
> - <span data-ttu-id="942e3-115"><xref:System.Web.UI.Timer?displayProperty=nameWithType>(Tylko .NET Framework), składnik ASP.NET, który wykonuje asynchroniczne lub synchroniczne ogłaszanie stron sieci Web w regularnych odstępach czasu.</span><span class="sxs-lookup"><span data-stu-id="942e3-115"><xref:System.Web.UI.Timer?displayProperty=nameWithType> (.NET Framework only), an ASP.NET component that performs asynchronous or synchronous web page postbacks at a regular interval.</span></span>
  
 <span data-ttu-id="942e3-116">Podczas tworzenia czasomierza można określić czas oczekiwania przed pierwszym wykonaniem metody (Godzina ukończenia) i czas oczekiwania między kolejnymi wykonaniami (kropką).</span><span class="sxs-lookup"><span data-stu-id="942e3-116">When you create a timer, you can specify an amount of time to wait before the first execution of the method (due time), and an amount of time to wait between subsequent executions (period).</span></span> <span data-ttu-id="942e3-117"><xref:System.Threading.Timer> Klasa ma takie samo rozwiązanie jak zegar systemowy.</span><span class="sxs-lookup"><span data-stu-id="942e3-117">The <xref:System.Threading.Timer> class has the same resolution as the system clock.</span></span> <span data-ttu-id="942e3-118">Oznacza to, że jeśli okres jest krótszy niż rozdzielczość zegara systemowego, <xref:System.Threading.TimerCallback> delegat zostanie wykonany w odstępach czasu zdefiniowanych przez rozwiązanie zegara systemowego, czyli około 15 milisekund w systemach Windows 7 i Windows 8.</span><span class="sxs-lookup"><span data-stu-id="942e3-118">This means that if the period is less than the resolution of the system clock, the <xref:System.Threading.TimerCallback> delegate will execute at intervals defined by the resolution of the system clock, which is approximately 15 milliseconds on Windows 7 and Windows 8 systems.</span></span> <span data-ttu-id="942e3-119">Można zmienić czas i okres obowiązywania lub wyłączyć czasomierz przy użyciu <xref:System.Threading.Timer.Change%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="942e3-119">You can change the due time and period, or disable the timer, by using the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="942e3-120">Dopóki nie używasz, musisz zachować odwołanie do niego. <xref:System.Threading.Timer></span><span class="sxs-lookup"><span data-stu-id="942e3-120">As long as you are using a <xref:System.Threading.Timer>, you must keep a reference to it.</span></span> <span data-ttu-id="942e3-121">Podobnie jak w przypadku każdego zarządzanego obiektu <xref:System.Threading.Timer> , jest on objęty odzyskiwaniem pamięci, gdy nie ma odwołań do niego.</span><span class="sxs-lookup"><span data-stu-id="942e3-121">As with any managed object, a <xref:System.Threading.Timer> is subject to garbage collection when there are no references to it.</span></span> <span data-ttu-id="942e3-122">Fakt, że <xref:System.Threading.Timer> jest nadal aktywny, nie uniemożliwia jego zebrania.</span><span class="sxs-lookup"><span data-stu-id="942e3-122">The fact that a <xref:System.Threading.Timer> is still active does not prevent it from being collected.</span></span>  
  
 <span data-ttu-id="942e3-123">Gdy czasomierz nie jest już wymagany, użyj <xref:System.Threading.Timer.Dispose%2A> metody, aby zwolnić zasoby przechowywane przez czasomierz.</span><span class="sxs-lookup"><span data-stu-id="942e3-123">When a timer is no longer needed, use the <xref:System.Threading.Timer.Dispose%2A> method to free the resources held by the timer.</span></span> <span data-ttu-id="942e3-124">Należy zauważyć, że wywołania zwrotne mogą <xref:System.Threading.Timer.Dispose> wystąpić po wywołaniu metody przeciążenia, ponieważ czasomierze kolejki wywołania zwrotnego do wykonania przez wątki puli wątków.</span><span class="sxs-lookup"><span data-stu-id="942e3-124">Note that callbacks can occur after the <xref:System.Threading.Timer.Dispose> method overload has been called, because the timer queues callbacks for execution by thread pool threads.</span></span> <span data-ttu-id="942e3-125">Można użyć przeciążenia metody <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> , aby poczekać, aż wszystkie wywołania zwrotne zostaną zakończone.</span><span class="sxs-lookup"><span data-stu-id="942e3-125">You can use the <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> method overload to wait until all callbacks have completed.</span></span>  
  
 <span data-ttu-id="942e3-126">Metoda wywołania zwrotnego wykonywana przez czasomierz powinien być współużytkowana, ponieważ jest wywoływana w <xref:System.Threading.ThreadPool> wątkach.</span><span class="sxs-lookup"><span data-stu-id="942e3-126">The callback method executed by the timer should be reentrant, because it is called on <xref:System.Threading.ThreadPool> threads.</span></span> <span data-ttu-id="942e3-127">Wywołanie zwrotne można wykonać jednocześnie w dwóch wątkach puli wątków, jeśli interwał czasomierza jest krótszy niż czas wymagany do wykonania wywołania zwrotnego lub jeśli wszystkie wątki puli wątków są używane, a wywołanie zwrotne jest kolejkowane wielokrotnie.</span><span class="sxs-lookup"><span data-stu-id="942e3-127">The callback can be executed simultaneously on two thread pool threads if the timer interval is less than the time required to execute the callback, or if all thread pool threads are in use and the callback is queued multiple times.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="942e3-128"><xref:System.Threading.Timer?displayProperty=nameWithType>jest prostym, lekkim czasomierzem, który używa metod wywołania zwrotnego i jest obsługiwany przez wątki puli wątków.</span><span class="sxs-lookup"><span data-stu-id="942e3-128"><xref:System.Threading.Timer?displayProperty=nameWithType> is a simple, lightweight timer that uses callback methods and is served by thread pool threads.</span></span> <span data-ttu-id="942e3-129">Nie zaleca się używania z Windows Forms, ponieważ jego wywołania zwrotne nie występują w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="942e3-129">It is not recommended for use with Windows Forms, because its callbacks do not occur on the user interface thread.</span></span> <span data-ttu-id="942e3-130"><xref:System.Windows.Forms.Timer?displayProperty=nameWithType>jest lepszym wyborem do użycia z Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="942e3-130"><xref:System.Windows.Forms.Timer?displayProperty=nameWithType> is a better choice for use with Windows Forms.</span></span> <span data-ttu-id="942e3-131">W przypadku funkcji czasomierza opartego na serwerze warto rozważyć <xref:System.Timers.Timer?displayProperty=nameWithType>użycie, które wywołuje zdarzenia i ma dodatkowe funkcje.</span><span class="sxs-lookup"><span data-stu-id="942e3-131">For server-based timer functionality, you might consider using <xref:System.Timers.Timer?displayProperty=nameWithType>, which raises events and has additional features.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="942e3-132">W poniższym przykładzie zdefiniowano `StatusChecker` klasę, która `CheckStatus` zawiera metodę, której sygnatura <xref:System.Threading.TimerCallback> jest taka sama jak delegat.</span><span class="sxs-lookup"><span data-stu-id="942e3-132">The following example defines a `StatusChecker` class  that includes a `CheckStatus` method whose signature is the same as the <xref:System.Threading.TimerCallback> delegate.</span></span> <span data-ttu-id="942e3-133">`state` Argument metody`CheckStatus` jest obiektem,któryjestużywanydosynchronizacjiwątkuaplikacjiiwątkupuliwątków<xref:System.Threading.AutoResetEvent> , który wykonuje delegat wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="942e3-133">The  `state` argument of the `CheckStatus` method is an <xref:System.Threading.AutoResetEvent> object that is used to synchronize the application thread and the thread pool thread that executes the callback delegate.</span></span> <span data-ttu-id="942e3-134">`StatusChecker` Klasa zawiera również dwie zmienne stanu:</span><span class="sxs-lookup"><span data-stu-id="942e3-134">The `StatusChecker` class also includes two state variables:</span></span>  
  
 `invokeCount`  
 <span data-ttu-id="942e3-135">Wskazuje, ile razy Metoda wywołania zwrotnego została wywołana.</span><span class="sxs-lookup"><span data-stu-id="942e3-135">Indicates the number of times the callback method has been invoked.</span></span>  
  
 `maxCount`  
 <span data-ttu-id="942e3-136">Określa maksymalną liczbę przypadków wywoływania metody wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="942e3-136">Determines the maximum number of times the callback method should be invoked.</span></span>  
  
 <span data-ttu-id="942e3-137">Wątek aplikacji tworzy czasomierz, który czeka jeden sekund, a następnie wykonuje `CheckStatus` metodę wywołania zwrotnego co 250 milisekund.</span><span class="sxs-lookup"><span data-stu-id="942e3-137">The application thread creates the timer, which waits one second and then executes  the `CheckStatus` callback method every 250 milliseconds.</span></span> <span data-ttu-id="942e3-138">Wątek aplikacji jest następnie blokowany do momentu <xref:System.Threading.AutoResetEvent> zasygnalizowania obiektu.</span><span class="sxs-lookup"><span data-stu-id="942e3-138">The application thread then blocks until the <xref:System.Threading.AutoResetEvent> object is signaled.</span></span> <span data-ttu-id="942e3-139">Gdy metoda `maxCount` `AutoResetEvent.Set` wywołania zwrotnego wykonuje czas, wywołuje metodę w celu ustawienia stanu <xref:System.Threading.AutoResetEvent> obiektu. `CheckStatus`</span><span class="sxs-lookup"><span data-stu-id="942e3-139">When the `CheckStatus` callback method executes `maxCount` times, it calls the `AutoResetEvent.Set` method to set the state of the <xref:System.Threading.AutoResetEvent> object to signaled.</span></span> <span data-ttu-id="942e3-140">Przy pierwszym wykonaniu tej operacji wątek aplikacji wywołuje <xref:System.Threading.Timer.Change%28System.Int32%2CSystem.Int32%29> metodę, aby metoda wywołania zwrotnego była wykonywana co pół sekundy.</span><span class="sxs-lookup"><span data-stu-id="942e3-140">The first time this happens, the application thread calls the <xref:System.Threading.Timer.Change%28System.Int32%2CSystem.Int32%29> method so that the callback method now executes every half second.</span></span> <span data-ttu-id="942e3-141">Jest on ponownie blokowany do momentu <xref:System.Threading.AutoResetEvent> zasygnalizowania obiektu.</span><span class="sxs-lookup"><span data-stu-id="942e3-141">It once again blocks until the <xref:System.Threading.AutoResetEvent> object is signaled.</span></span> <span data-ttu-id="942e3-142">W takim przypadku czasomierz jest niszczony przez wywołanie jego <xref:System.Threading.Timer.Dispose%2A> metody i zakończenie działania aplikacji.</span><span class="sxs-lookup"><span data-stu-id="942e3-142">When this happens, the timer is destroyed by calling its <xref:System.Threading.Timer.Dispose%2A> method, and the application terminates.</span></span>  
  
 [!code-cpp[System.Threading.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer/CS/source.cs#1)]
 [!code-vb[System.Threading.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="942e3-143">Ten typ jest bezpieczny wątkowo.</span><span class="sxs-lookup"><span data-stu-id="942e3-143">This type is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.Threading.TimerCallback" />
    <related type="Article" href="~/docs/standard/threading/timers.md"><span data-ttu-id="942e3-144">Czasomierze</span><span class="sxs-lookup"><span data-stu-id="942e3-144">Timers</span></span></related>
    <related type="Article" href="~/docs/standard/threading/the-managed-thread-pool.md"><span data-ttu-id="942e3-145">Zarządzana pula wątków</span><span class="sxs-lookup"><span data-stu-id="942e3-145">The Managed Thread Pool</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="942e3-146">Inicjuje nowe wystąpienie klasy <see langword="Timer" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="942e3-146">Initializes a new instance of the <see langword="Timer" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (System.Threading.TimerCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.TimerCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callback As TimerCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(System::Threading::TimerCallback ^ callback);" />
      <MemberSignature Language="F#" Value="new System.Threading.Timer : System.Threading.TimerCallback -&gt; System.Threading.Timer" Usage="new System.Threading.Timer callback" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.TimerCallback" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="942e3-147"><see cref="T:System.Threading.TimerCallback" /> Delegat reprezentujący metodę do wykonania.</span><span class="sxs-lookup"><span data-stu-id="942e3-147">A <see cref="T:System.Threading.TimerCallback" /> delegate representing a method to be executed.</span></span></param>
        <summary><span data-ttu-id="942e3-148">Inicjuje nowe wystąpienie <see cref="T:System.Threading.Timer" /> klasy o nieskończonym okresie i nieskończonym czasie oczekiwania, używając nowo utworzonego <see cref="T:System.Threading.Timer" /> obiektu jako obiektu stanu.</span><span class="sxs-lookup"><span data-stu-id="942e3-148">Initializes a new instance of the <see cref="T:System.Threading.Timer" /> class with an infinite period and an infinite due time, using the newly created <see cref="T:System.Threading.Timer" /> object as the state object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="942e3-149">Wywołaj ten Konstruktor, gdy chcesz użyć <xref:System.Threading.Timer> obiektu jako obiektu stanu.</span><span class="sxs-lookup"><span data-stu-id="942e3-149">Call this constructor when you want to use the <xref:System.Threading.Timer> object itself as the state object.</span></span> <span data-ttu-id="942e3-150">Po utworzeniu czasomierza Użyj <xref:System.Threading.Timer.Change%2A> metody, aby ustawić interwał i czas ukończenia.</span><span class="sxs-lookup"><span data-stu-id="942e3-150">After creating the timer, use the <xref:System.Threading.Timer.Change%2A> method to set the interval and due time.</span></span>  
  
 <span data-ttu-id="942e3-151">Ten konstruktor określa nieskończony czas oczekiwania przed pierwszym wywołaniem zwrotnym i nieskończonym interwałem między wywołaniami zwrotnymi, aby zapobiec wystąpieniu pierwszego wywołania zwrotnego przed <xref:System.Threading.Timer> przypisaniem obiektu do obiektu stanu.</span><span class="sxs-lookup"><span data-stu-id="942e3-151">This constructor specifies an infinite due time before the first callback and an infinite interval between callbacks, in order to prevent the first callback from occurring before the <xref:System.Threading.Timer> object is assigned to the state object.</span></span>  
  
 <span data-ttu-id="942e3-152">Metoda określona dla `callback` powinna być współużytkowana, ponieważ jest wywoływana w <xref:System.Threading.ThreadPool> wątkach.</span><span class="sxs-lookup"><span data-stu-id="942e3-152">The method specified for `callback` should be reentrant, because it is called on <xref:System.Threading.ThreadPool> threads.</span></span> <span data-ttu-id="942e3-153">Metodę można wykonać jednocześnie w dwóch wątkach puli wątków, jeśli interwał czasomierza jest krótszy niż czas wymagany do wykonania metody lub jeśli wszystkie wątki puli wątków są używane, a metoda została umieszczona wiele razy.</span><span class="sxs-lookup"><span data-stu-id="942e3-153">The method can be executed simultaneously on two thread pool threads if the timer interval is less than the time required to execute the method, or if all thread pool threads are in use and the method is queued multiple times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="942e3-154">Poniższy przykład kodu tworzy nowy czasomierz przy użyciu samego czasomierza jako obiektu stanu.</span><span class="sxs-lookup"><span data-stu-id="942e3-154">The following code example creates a new timer, using the timer itself as the state object.</span></span> <span data-ttu-id="942e3-155"><xref:System.Threading.Timer.Change%2A> Metoda jest używana do uruchomienia czasomierza.</span><span class="sxs-lookup"><span data-stu-id="942e3-155">The <xref:System.Threading.Timer.Change%2A> method is used to start the timer.</span></span> <span data-ttu-id="942e3-156">Gdy nastąpi wywołanie zwrotne czasomierza, obiekt stanu jest używany do wyłączania czasomierza.</span><span class="sxs-lookup"><span data-stu-id="942e3-156">When the timer callback occurs, the state object is used to turn the timer off.</span></span>  
  
 [!code-csharp[TimerSelfCtor#1](~/samples/snippets/csharp/VS_Snippets_Misc/timerSelfCtor/CS/source.cs#1)]
 [!code-vb[TimerSelfCtor#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/timerSelfCtor/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (System.Threading.TimerCallback callback, object state, int dueTime, int period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.TimerCallback callback, object state, int32 dueTime, int32 period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callback As TimerCallback, state As Object, dueTime As Integer, period As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(System::Threading::TimerCallback ^ callback, System::Object ^ state, int dueTime, int period);" />
      <MemberSignature Language="F#" Value="new System.Threading.Timer : System.Threading.TimerCallback * obj * int * int -&gt; System.Threading.Timer" Usage="new System.Threading.Timer (callback, state, dueTime, period)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.TimerCallback" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="dueTime" Type="System.Int32" />
        <Parameter Name="period" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="942e3-157"><see cref="T:System.Threading.TimerCallback" /> Delegat reprezentujący metodę do wykonania.</span><span class="sxs-lookup"><span data-stu-id="942e3-157">A <see cref="T:System.Threading.TimerCallback" /> delegate representing a method to be executed.</span></span></param>
        <param name="state"><span data-ttu-id="942e3-158">Obiekt zawierający informacje, które mają być używane przez metodę wywołania zwrotnego <see langword="null" />lub.</span><span class="sxs-lookup"><span data-stu-id="942e3-158">An object containing information to be used by the callback method, or <see langword="null" />.</span></span></param>
        <param name="dueTime"><span data-ttu-id="942e3-159">Czas oczekiwania przed <paramref name="callback" /> wywołaniem (w milisekundach).</span><span class="sxs-lookup"><span data-stu-id="942e3-159">The amount of time to delay before <paramref name="callback" /> is invoked, in milliseconds.</span></span> <span data-ttu-id="942e3-160">Określ <see cref="F:System.Threading.Timeout.Infinite" /> , aby zapobiec uruchamianiu czasomierza.</span><span class="sxs-lookup"><span data-stu-id="942e3-160">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to prevent the timer from starting.</span></span> <span data-ttu-id="942e3-161">Określ zero (0), aby natychmiast uruchomić czasomierz.</span><span class="sxs-lookup"><span data-stu-id="942e3-161">Specify zero (0) to start the timer immediately.</span></span></param>
        <param name="period"><span data-ttu-id="942e3-162">Przedział czasu między wywołaniami <paramref name="callback" />, w milisekundach.</span><span class="sxs-lookup"><span data-stu-id="942e3-162">The time interval between invocations of <paramref name="callback" />, in milliseconds.</span></span> <span data-ttu-id="942e3-163">Określ <see cref="F:System.Threading.Timeout.Infinite" /> , aby wyłączyć okresowe sygnalizowanie.</span><span class="sxs-lookup"><span data-stu-id="942e3-163">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to disable periodic signaling.</span></span></param>
        <summary><span data-ttu-id="942e3-164">Inicjuje nowe wystąpienie <see langword="Timer" /> klasy, używając 32-bitowej podpisanej liczby całkowitej w celu określenia interwału czasu.</span><span class="sxs-lookup"><span data-stu-id="942e3-164">Initializes a new instance of the <see langword="Timer" /> class, using a 32-bit signed integer to specify the time interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="942e3-165">Delegat określony przez `callback` parametr jest wywoływany raz po `dueTime` upłynięciu, `period` a następnie za każdym razem, gdy upłynie interwał czasu.</span><span class="sxs-lookup"><span data-stu-id="942e3-165">The delegate specified by the `callback` parameter is invoked once after `dueTime` elapses, and thereafter each time the `period` time interval elapses.</span></span>  
  
 <span data-ttu-id="942e3-166">Jeśli `dueTime` jest równa zero (0 `callback` ), jest wywoływana od razu.</span><span class="sxs-lookup"><span data-stu-id="942e3-166">If `dueTime` is zero (0), `callback` is invoked immediately.</span></span> <span data-ttu-id="942e3-167">Jeśli `dueTime` jest <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> <xref:System.Threading.Timer.Change%2A> , niejestwywoływana;czasomierzjestwyłączony,alemożnagowłączyć,wywołującmetodę.`callback`</span><span class="sxs-lookup"><span data-stu-id="942e3-167">If `dueTime` is <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` is not invoked; the timer is disabled, but can be re-enabled by calling the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="942e3-168">Ponieważ Klasa ma takie samo rozwiązanie jak zegar systemowy, który jest około 15 milisekund w systemach Windows 7 i Windows 8, delegat wykonuje `callback` się w odstępach czasu zdefiniowanych przez rozdzielczość zegara systemowego, jeśli <xref:System.Threading.Timer> `period`jest mniejsza niż rozdzielczość zegara systemowego.</span><span class="sxs-lookup"><span data-stu-id="942e3-168">Because the <xref:System.Threading.Timer> class has the same resolution as the system clock, which is approximately 15 milliseconds on Windows 7 and Windows 8 systems, the `callback` delegate executes at intervals defined by the resolution of the system clock if `period` is less than the resolution of the system clock.</span></span> <span data-ttu-id="942e3-169">Jeśli `period` jest równa zero (0 <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> ) `dueTime` lub i <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>nie `callback` jest, jest wywoływana raz; okresowe zachowanie czasomierza jest wyłączone, ale można je ponownie włączyć przy użyciu <xref:System.Threading.Timer.Change%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="942e3-169">If `period` is zero (0) or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> and `dueTime` is not <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled using the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="942e3-170">Metoda określona dla `callback` powinna być współużytkowana, ponieważ jest wywoływana w <xref:System.Threading.ThreadPool> wątkach.</span><span class="sxs-lookup"><span data-stu-id="942e3-170">The method specified for `callback` should be reentrant, because it is called on <xref:System.Threading.ThreadPool> threads.</span></span> <span data-ttu-id="942e3-171">Metodę można wykonać jednocześnie w dwóch wątkach puli wątków, jeśli interwał czasomierza jest krótszy niż czas wymagany do wykonania metody lub jeśli wszystkie wątki puli wątków są używane, a metoda została umieszczona wiele razy.</span><span class="sxs-lookup"><span data-stu-id="942e3-171">The method can be executed simultaneously on two thread pool threads if the timer interval is less than the time required to execute the method, or if all thread pool threads are in use and the method is queued multiple times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="942e3-172">Poniższy przykład kodu pokazuje, jak utworzyć `TimerCallback` delegata i zainicjować nowe wystąpienie `Timer` klasy.</span><span class="sxs-lookup"><span data-stu-id="942e3-172">The following code example shows how to create a `TimerCallback` delegate and initialize a new instance of the `Timer` class.</span></span>  
  
 [!code-cpp[System.Threading.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer/CS/source.cs#1)]
 [!code-vb[System.Threading.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="942e3-173">Parametr <paramref name="dueTime" /> <see cref="F:System.Threading.Timeout.Infinite" />lub <paramref name="period" /> jest wartością ujemną i nie jest równy.</span><span class="sxs-lookup"><span data-stu-id="942e3-173">The <paramref name="dueTime" /> or <paramref name="period" /> parameter is negative and is not equal to <see cref="F:System.Threading.Timeout.Infinite" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="942e3-174">Parametr ma wartość <see langword="null" />. <paramref name="callback" /></span><span class="sxs-lookup"><span data-stu-id="942e3-174">The <paramref name="callback" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/timers.md"><span data-ttu-id="942e3-175">Czasomierze</span><span class="sxs-lookup"><span data-stu-id="942e3-175">Timers</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (System.Threading.TimerCallback callback, object state, long dueTime, long period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.TimerCallback callback, object state, int64 dueTime, int64 period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callback As TimerCallback, state As Object, dueTime As Long, period As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(System::Threading::TimerCallback ^ callback, System::Object ^ state, long dueTime, long period);" />
      <MemberSignature Language="F#" Value="new System.Threading.Timer : System.Threading.TimerCallback * obj * int64 * int64 -&gt; System.Threading.Timer" Usage="new System.Threading.Timer (callback, state, dueTime, period)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.TimerCallback" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="dueTime" Type="System.Int64" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="period" Type="System.Int64" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="942e3-176"><see cref="T:System.Threading.TimerCallback" /> Delegat reprezentujący metodę do wykonania.</span><span class="sxs-lookup"><span data-stu-id="942e3-176">A <see cref="T:System.Threading.TimerCallback" /> delegate representing a method to be executed.</span></span></param>
        <param name="state"><span data-ttu-id="942e3-177">Obiekt zawierający informacje, które mają być używane przez metodę wywołania zwrotnego <see langword="null" />lub.</span><span class="sxs-lookup"><span data-stu-id="942e3-177">An object containing information to be used by the callback method, or <see langword="null" />.</span></span></param>
        <param name="dueTime"><span data-ttu-id="942e3-178">Czas oczekiwania przed <paramref name="callback" /> wywołaniem (w milisekundach).</span><span class="sxs-lookup"><span data-stu-id="942e3-178">The amount of time to delay before <paramref name="callback" /> is invoked, in milliseconds.</span></span> <span data-ttu-id="942e3-179">Określ <see cref="F:System.Threading.Timeout.Infinite" /> , aby zapobiec uruchamianiu czasomierza.</span><span class="sxs-lookup"><span data-stu-id="942e3-179">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to prevent the timer from starting.</span></span> <span data-ttu-id="942e3-180">Określ zero (0), aby natychmiast uruchomić czasomierz.</span><span class="sxs-lookup"><span data-stu-id="942e3-180">Specify zero (0) to start the timer immediately.</span></span></param>
        <param name="period"><span data-ttu-id="942e3-181">Przedział czasu między wywołaniami <paramref name="callback" />, w milisekundach.</span><span class="sxs-lookup"><span data-stu-id="942e3-181">The time interval between invocations of <paramref name="callback" />, in milliseconds.</span></span> <span data-ttu-id="942e3-182">Określ <see cref="F:System.Threading.Timeout.Infinite" /> , aby wyłączyć okresowe sygnalizowanie.</span><span class="sxs-lookup"><span data-stu-id="942e3-182">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to disable periodic signaling.</span></span></param>
        <summary><span data-ttu-id="942e3-183">Inicjuje nowe wystąpienie <see langword="Timer" /> klasy, używając 64-bitowych liczb całkowitych ze znakiem do mierzenia interwałów czasu.</span><span class="sxs-lookup"><span data-stu-id="942e3-183">Initializes a new instance of the <see langword="Timer" /> class, using 64-bit signed integers to measure time intervals.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="942e3-184">Delegat określony przez `callback` parametr jest wywoływany raz po `dueTime` upłynięciu, `period` a następnie za każdym razem, gdy upłynie interwał czasu.</span><span class="sxs-lookup"><span data-stu-id="942e3-184">The delegate specified by the `callback` parameter is invoked once after `dueTime` elapses, and thereafter each time the `period` time interval elapses.</span></span>  
  
 <span data-ttu-id="942e3-185">Jeśli `dueTime` jest równa zero (0 `callback` ), jest wywoływana od razu.</span><span class="sxs-lookup"><span data-stu-id="942e3-185">If `dueTime` is zero (0), `callback` is invoked immediately.</span></span> <span data-ttu-id="942e3-186">Jeśli `dueTime` jest <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> <xref:System.Threading.Timer.Change%2A> , niejestwywoływana;czasomierzjestwyłączony,alemożnagowłączyć,wywołującmetodę.`callback`</span><span class="sxs-lookup"><span data-stu-id="942e3-186">If `dueTime` is <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` is not invoked; the timer is disabled, but can be re-enabled by calling the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="942e3-187">Ponieważ Klasa ma takie samo rozwiązanie jak zegar systemowy, który jest około 15 milisekund w systemach Windows 7 i Windows 8, delegat wykonuje `callback` się w odstępach czasu zdefiniowanych przez rozdzielczość zegara systemowego, jeśli <xref:System.Threading.Timer> `period`jest mniejsza niż rozdzielczość zegara systemowego.</span><span class="sxs-lookup"><span data-stu-id="942e3-187">Because the <xref:System.Threading.Timer> class has the same resolution as the system clock, which is approximately 15 milliseconds on Windows 7 and Windows 8 systems, the `callback` delegate executes at intervals defined by the resolution of the system clock if `period` is less than the resolution of the system clock.</span></span> <span data-ttu-id="942e3-188">Jeśli `period` jest równa zero (0 <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> ) `dueTime` lub i <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>nie `callback` jest, jest wywoływana raz; okresowe zachowanie czasomierza jest wyłączone, ale można je ponownie włączyć przy użyciu <xref:System.Threading.Timer.Change%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="942e3-188">If `period` is zero (0) or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> and `dueTime` is not <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled using the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="942e3-189">Metoda określona dla `callback` powinna być współużytkowana, ponieważ jest wywoływana w <xref:System.Threading.ThreadPool> wątkach.</span><span class="sxs-lookup"><span data-stu-id="942e3-189">The method specified for `callback` should be reentrant, because it is called on <xref:System.Threading.ThreadPool> threads.</span></span> <span data-ttu-id="942e3-190">Metodę można wykonać jednocześnie w dwóch wątkach puli wątków, jeśli interwał czasomierza jest krótszy niż czas wymagany do wykonania metody lub jeśli wszystkie wątki puli wątków są używane, a metoda została umieszczona wiele razy.</span><span class="sxs-lookup"><span data-stu-id="942e3-190">The method can be executed simultaneously on two thread pool threads if the timer interval is less than the time required to execute the method, or if all thread pool threads are in use and the method is queued multiple times.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="942e3-191">Parametr <paramref name="dueTime" /> <see cref="F:System.Threading.Timeout.Infinite" />lub <paramref name="period" /> jest wartością ujemną i nie jest równy.</span><span class="sxs-lookup"><span data-stu-id="942e3-191">The <paramref name="dueTime" /> or <paramref name="period" /> parameter is negative and is not equal to <see cref="F:System.Threading.Timeout.Infinite" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="942e3-192">Parametr <paramref name="dueTime" /> lub<paramref name="period" /> jest większy niż 4294967294.</span><span class="sxs-lookup"><span data-stu-id="942e3-192">The <paramref name="dueTime" /> or <paramref name="period" /> parameter is greater than 4294967294.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/timers.md"><span data-ttu-id="942e3-193">Czasomierze</span><span class="sxs-lookup"><span data-stu-id="942e3-193">Timers</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (System.Threading.TimerCallback callback, object state, TimeSpan dueTime, TimeSpan period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.TimerCallback callback, object state, valuetype System.TimeSpan dueTime, valuetype System.TimeSpan period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callback As TimerCallback, state As Object, dueTime As TimeSpan, period As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(System::Threading::TimerCallback ^ callback, System::Object ^ state, TimeSpan dueTime, TimeSpan period);" />
      <MemberSignature Language="F#" Value="new System.Threading.Timer : System.Threading.TimerCallback * obj * TimeSpan * TimeSpan -&gt; System.Threading.Timer" Usage="new System.Threading.Timer (callback, state, dueTime, period)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.TimerCallback" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="dueTime" Type="System.TimeSpan" />
        <Parameter Name="period" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="942e3-194">Delegat reprezentujący metodę do wykonania.</span><span class="sxs-lookup"><span data-stu-id="942e3-194">A delegate representing a method to be executed.</span></span></param>
        <param name="state"><span data-ttu-id="942e3-195">Obiekt zawierający informacje, które mają być używane przez metodę wywołania zwrotnego <see langword="null" />lub.</span><span class="sxs-lookup"><span data-stu-id="942e3-195">An object containing information to be used by the callback method, or <see langword="null" />.</span></span></param>
        <param name="dueTime"><span data-ttu-id="942e3-196">Czas oczekiwania przed wywołaniem przez <paramref name="callback" /> parametr metod.</span><span class="sxs-lookup"><span data-stu-id="942e3-196">The amount of time to delay before the <paramref name="callback" /> parameter invokes its methods.</span></span> <span data-ttu-id="942e3-197">Określ ujemną liczbę milisekund (-1), aby zapobiec uruchamianiu czasomierza.</span><span class="sxs-lookup"><span data-stu-id="942e3-197">Specify negative one (-1) milliseconds to prevent the timer from starting.</span></span> <span data-ttu-id="942e3-198">Określ zero (0), aby natychmiast uruchomić czasomierz.</span><span class="sxs-lookup"><span data-stu-id="942e3-198">Specify zero (0) to start the timer immediately.</span></span></param>
        <param name="period"><span data-ttu-id="942e3-199">Przedział czasu między wywołaniami metod, do których odwołuje <paramref name="callback" />się.</span><span class="sxs-lookup"><span data-stu-id="942e3-199">The time interval between invocations of the methods referenced by <paramref name="callback" />.</span></span> <span data-ttu-id="942e3-200">Określ ujemną liczbę (-1) milisekund, aby wyłączyć okresowe sygnalizowanie.</span><span class="sxs-lookup"><span data-stu-id="942e3-200">Specify negative one (-1) milliseconds to disable periodic signaling.</span></span></param>
        <summary><span data-ttu-id="942e3-201">Inicjuje nowe wystąpienie <see langword="Timer" /> klasy, używając <see cref="T:System.TimeSpan" /> wartości do mierzenia interwałów czasu.</span><span class="sxs-lookup"><span data-stu-id="942e3-201">Initializes a new instance of the <see langword="Timer" /> class, using <see cref="T:System.TimeSpan" /> values to measure time intervals.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="942e3-202">Delegat określony przez `callback` parametr jest wywoływany raz po `dueTime` upłynięciu, `period` a następnie za każdym razem, gdy upłynie interwał czasu.</span><span class="sxs-lookup"><span data-stu-id="942e3-202">The delegate specified by the `callback` parameter is invoked once after `dueTime` elapses, and thereafter each time the `period` time interval elapses.</span></span>  
  
 <span data-ttu-id="942e3-203">Jeśli `dueTime` jest równa zero (0 `callback` ), jest wywoływana od razu.</span><span class="sxs-lookup"><span data-stu-id="942e3-203">If `dueTime` is zero (0), `callback` is invoked immediately.</span></span> <span data-ttu-id="942e3-204">Jeśli `dueTime` wartość jest ujemna (-1) milisekund, `callback` nie jest wywoływana; czasomierz jest wyłączony, ale można go włączyć, wywołując <xref:System.Threading.Timer.Change%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="942e3-204">If `dueTime` is negative one (-1) milliseconds, `callback` is not invoked; the timer is disabled, but can be re-enabled by calling the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="942e3-205">Ponieważ Klasa ma takie samo rozwiązanie jak zegar systemowy, który jest około 15 milisekund w systemach Windows 7 i Windows 8, delegat wykonuje `callback` się w odstępach czasu zdefiniowanych przez rozdzielczość zegara systemowego, jeśli <xref:System.Threading.Timer> `period`jest mniejsza niż rozdzielczość zegara systemowego.</span><span class="sxs-lookup"><span data-stu-id="942e3-205">Because the <xref:System.Threading.Timer> class has the same resolution as the system clock, which is approximately 15 milliseconds on Windows 7 and Windows 8 systems, the `callback` delegate executes at intervals defined by the resolution of the system clock if `period` is less than the resolution of the system clock.</span></span> <span data-ttu-id="942e3-206">Jeśli `period` wartość jest równa zero (0) lub negatywna (-1 `dueTime` ) milisekund i `callback` jest dodatnia, jest wywoływana raz; okresowe zachowanie czasomierza jest wyłączone, <xref:System.Threading.Timer.Change%2A> ale można je ponownie włączyć przy użyciu metody.</span><span class="sxs-lookup"><span data-stu-id="942e3-206">If `period` is zero (0) or negative one (-1) milliseconds and `dueTime` is positive, `callback` is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled using the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="942e3-207">Metoda określona dla `callback` powinna być współużytkowana, ponieważ jest wywoływana w <xref:System.Threading.ThreadPool> wątkach.</span><span class="sxs-lookup"><span data-stu-id="942e3-207">The method specified for `callback` should be reentrant, because it is called on <xref:System.Threading.ThreadPool> threads.</span></span> <span data-ttu-id="942e3-208">Metodę można wykonać jednocześnie w dwóch wątkach puli wątków, jeśli interwał czasomierza jest krótszy niż czas wymagany do wykonania metody lub jeśli wszystkie wątki puli wątków są używane, a metoda została umieszczona wiele razy.</span><span class="sxs-lookup"><span data-stu-id="942e3-208">The method can be executed simultaneously on two thread pool threads if the timer interval is less than the time required to execute the method, or if all thread pool threads are in use and the method is queued multiple times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="942e3-209">Poniższy przykład kodu pokazuje, jak utworzyć `TimerCallback` delegata i zainicjować nowe wystąpienie `Timer` klasy.</span><span class="sxs-lookup"><span data-stu-id="942e3-209">The following code example shows how to create a `TimerCallback` delegate and initialize a new instance of the `Timer` class.</span></span>  
  
 [!code-cpp[System.Threading.Timer2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer2/CPP/source2.cpp#1)]
 [!code-csharp[System.Threading.Timer2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer2/CS/source2.cs#1)]
 [!code-vb[System.Threading.Timer2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer2/VB/source2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="942e3-210">Liczba milisekund w <paramref name="dueTime" /> wartości lub <paramref name="period" /> jest <see cref="F:System.Threading.Timeout.Infinite" />ujemna, nierówna lub większa niż <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="942e3-210">The number of milliseconds in the value of <paramref name="dueTime" /> or <paramref name="period" /> is negative and not equal to <see cref="F:System.Threading.Timeout.Infinite" />, or is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="942e3-211">Parametr ma wartość <see langword="null" />. <paramref name="callback" /></span><span class="sxs-lookup"><span data-stu-id="942e3-211">The <paramref name="callback" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/timers.md"><span data-ttu-id="942e3-212">Czasomierze</span><span class="sxs-lookup"><span data-stu-id="942e3-212">Timers</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (System.Threading.TimerCallback callback, object state, uint dueTime, uint period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.TimerCallback callback, object state, unsigned int32 dueTime, unsigned int32 period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callback As TimerCallback, state As Object, dueTime As UInteger, period As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(System::Threading::TimerCallback ^ callback, System::Object ^ state, System::UInt32 dueTime, System::UInt32 period);" />
      <MemberSignature Language="F#" Value="new System.Threading.Timer : System.Threading.TimerCallback * obj * uint32 * uint32 -&gt; System.Threading.Timer" Usage="new System.Threading.Timer (callback, state, dueTime, period)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.TimerCallback" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="dueTime" Type="System.UInt32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="period" Type="System.UInt32" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="942e3-213">Delegat reprezentujący metodę do wykonania.</span><span class="sxs-lookup"><span data-stu-id="942e3-213">A delegate representing a method to be executed.</span></span></param>
        <param name="state"><span data-ttu-id="942e3-214">Obiekt zawierający informacje, które mają być używane przez metodę wywołania zwrotnego <see langword="null" />lub.</span><span class="sxs-lookup"><span data-stu-id="942e3-214">An object containing information to be used by the callback method, or <see langword="null" />.</span></span></param>
        <param name="dueTime"><span data-ttu-id="942e3-215">Czas oczekiwania przed <paramref name="callback" /> wywołaniem (w milisekundach).</span><span class="sxs-lookup"><span data-stu-id="942e3-215">The amount of time to delay before <paramref name="callback" /> is invoked, in milliseconds.</span></span> <span data-ttu-id="942e3-216">Określ <see cref="F:System.Threading.Timeout.Infinite" /> , aby zapobiec uruchamianiu czasomierza.</span><span class="sxs-lookup"><span data-stu-id="942e3-216">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to prevent the timer from starting.</span></span> <span data-ttu-id="942e3-217">Określ zero (0), aby natychmiast uruchomić czasomierz.</span><span class="sxs-lookup"><span data-stu-id="942e3-217">Specify zero (0) to start the timer immediately.</span></span></param>
        <param name="period"><span data-ttu-id="942e3-218">Przedział czasu między wywołaniami <paramref name="callback" />, w milisekundach.</span><span class="sxs-lookup"><span data-stu-id="942e3-218">The time interval between invocations of <paramref name="callback" />, in milliseconds.</span></span> <span data-ttu-id="942e3-219">Określ <see cref="F:System.Threading.Timeout.Infinite" /> , aby wyłączyć okresowe sygnalizowanie.</span><span class="sxs-lookup"><span data-stu-id="942e3-219">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to disable periodic signaling.</span></span></param>
        <summary><span data-ttu-id="942e3-220">Inicjuje nowe wystąpienie <see langword="Timer" /> klasy, używając 32-bitowych liczb całkowitych bez znaku do mierzenia interwałów czasu.</span><span class="sxs-lookup"><span data-stu-id="942e3-220">Initializes a new instance of the <see langword="Timer" /> class, using 32-bit unsigned integers to measure time intervals.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="942e3-221">Delegat określony przez `callback` parametr jest wywoływany raz po `dueTime` upłynięciu, `period` a następnie za każdym razem, gdy upłynie interwał czasu.</span><span class="sxs-lookup"><span data-stu-id="942e3-221">The delegate specified by the `callback` parameter is invoked once after `dueTime` elapses, and thereafter each time the `period` time interval elapses.</span></span>  
  
 <span data-ttu-id="942e3-222">Jeśli `dueTime` jest równa zero (0 `callback` ), jest wywoływana od razu.</span><span class="sxs-lookup"><span data-stu-id="942e3-222">If `dueTime` is zero (0), `callback` is invoked immediately.</span></span> <span data-ttu-id="942e3-223">Jeśli `dueTime` jest <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> <xref:System.Threading.Timer.Change%2A> , niejestwywoływana;czasomierzjestwyłączony,alemożnagowłączyć,wywołującmetodę.`callback`</span><span class="sxs-lookup"><span data-stu-id="942e3-223">If `dueTime` is <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` is not invoked; the timer is disabled, but can be re-enabled by calling the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="942e3-224">Ponieważ Klasa ma takie samo rozwiązanie jak zegar systemowy, który jest około 15 milisekund w systemach Windows 7 i Windows 8, delegat wykonuje `callback` się w odstępach czasu zdefiniowanych przez rozdzielczość zegara systemowego, jeśli <xref:System.Threading.Timer> `period`jest mniejsza niż rozdzielczość zegara systemowego.</span><span class="sxs-lookup"><span data-stu-id="942e3-224">Because the <xref:System.Threading.Timer> class has the same resolution as the system clock, which is approximately 15 milliseconds on Windows 7 and Windows 8 systems, the `callback` delegate executes at intervals defined by the resolution of the system clock if `period` is less than the resolution of the system clock.</span></span> <span data-ttu-id="942e3-225">Jeśli `period` jest równa zero (0 <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> ) `dueTime` lub i <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>nie `callback` jest, jest wywoływana raz; okresowe zachowanie czasomierza jest wyłączone, ale można je ponownie włączyć przy użyciu <xref:System.Threading.Timer.Change%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="942e3-225">If `period` is zero (0) or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> and `dueTime` is not <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled using the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="942e3-226">Metoda określona dla `callback` powinna być współużytkowana, ponieważ jest wywoływana w <xref:System.Threading.ThreadPool> wątkach.</span><span class="sxs-lookup"><span data-stu-id="942e3-226">The method specified for `callback` should be reentrant, because it is called on <xref:System.Threading.ThreadPool> threads.</span></span> <span data-ttu-id="942e3-227">Metodę można wykonać jednocześnie w dwóch wątkach puli wątków, jeśli interwał czasomierza jest krótszy niż czas wymagany do wykonania metody lub jeśli wszystkie wątki puli wątków są używane, a metoda została umieszczona wiele razy.</span><span class="sxs-lookup"><span data-stu-id="942e3-227">The method can be executed simultaneously on two thread pool threads if the timer interval is less than the time required to execute the method, or if all thread pool threads are in use and the method is queued multiple times.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="942e3-228">Parametr <paramref name="dueTime" /> <see cref="F:System.Threading.Timeout.Infinite" />lub <paramref name="period" /> jest wartością ujemną i nie jest równy.</span><span class="sxs-lookup"><span data-stu-id="942e3-228">The <paramref name="dueTime" /> or <paramref name="period" /> parameter is negative and is not equal to <see cref="F:System.Threading.Timeout.Infinite" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="942e3-229">Parametr ma wartość <see langword="null" />. <paramref name="callback" /></span><span class="sxs-lookup"><span data-stu-id="942e3-229">The <paramref name="callback" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/timers.md"><span data-ttu-id="942e3-230">Czasomierze</span><span class="sxs-lookup"><span data-stu-id="942e3-230">Timers</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ActiveCount">
      <MemberSignature Language="C#" Value="public static long ActiveCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int64 ActiveCount" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Timer.ActiveCount" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ActiveCount As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property long ActiveCount { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ActiveCount : int64" Usage="System.Threading.Timer.ActiveCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Change">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="942e3-231">Zmienia godzinę rozpoczęcia i interwał między wywołaniami metody dla czasomierza.</span><span class="sxs-lookup"><span data-stu-id="942e3-231">Changes the start time and the interval between method invocations for a timer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Change">
      <MemberSignature Language="C#" Value="public bool Change (int dueTime, int period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Change(int32 dueTime, int32 period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.Change(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Change (dueTime As Integer, period As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Change(int dueTime, int period);" />
      <MemberSignature Language="F#" Value="member this.Change : int * int -&gt; bool" Usage="timer.Change (dueTime, period)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dueTime" Type="System.Int32" />
        <Parameter Name="period" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dueTime"><span data-ttu-id="942e3-232">Czas oczekiwania przed wywołaniem metody wywołania zwrotnego określonej podczas <see cref="T:System.Threading.Timer" /> konstruowania, w milisekundach.</span><span class="sxs-lookup"><span data-stu-id="942e3-232">The amount of time to delay before the invoking the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed, in milliseconds.</span></span> <span data-ttu-id="942e3-233">Określ <see cref="F:System.Threading.Timeout.Infinite" /> , aby zapobiec ponownemu uruchamianiu czasomierza.</span><span class="sxs-lookup"><span data-stu-id="942e3-233">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to prevent the timer from restarting.</span></span> <span data-ttu-id="942e3-234">Określ zero (0), aby natychmiast ponownie uruchomić czasomierz.</span><span class="sxs-lookup"><span data-stu-id="942e3-234">Specify zero (0) to restart the timer immediately.</span></span></param>
        <param name="period"><span data-ttu-id="942e3-235">Przedział czasu między wywołaniami metody wywołania zwrotnego określonego podczas <see cref="T:System.Threading.Timer" /> konstruowania, w milisekundach.</span><span class="sxs-lookup"><span data-stu-id="942e3-235">The time interval between invocations of the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed, in milliseconds.</span></span> <span data-ttu-id="942e3-236">Określ <see cref="F:System.Threading.Timeout.Infinite" /> , aby wyłączyć okresowe sygnalizowanie.</span><span class="sxs-lookup"><span data-stu-id="942e3-236">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to disable periodic signaling.</span></span></param>
        <summary><span data-ttu-id="942e3-237">Zmienia czas rozpoczęcia i interwał między wywołaniami metody dla czasomierza, używając 32-bitowych liczb całkowitych ze znakiem do mierzenia interwałów czasu.</span><span class="sxs-lookup"><span data-stu-id="942e3-237">Changes the start time and the interval between method invocations for a timer, using 32-bit signed integers to measure time intervals.</span></span></summary>
        <returns><span data-ttu-id="942e3-238"><see langword="true" />Jeśli czasomierz został pomyślnie zaktualizowany; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="942e3-238"><see langword="true" /> if the timer was successfully updated; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="942e3-239">Metoda wywołania zwrotnego jest wywoływana jednokrotnie `dueTime` , a następnie za każdym razem, gdy upłynie interwał czasu określony przez. `period`</span><span class="sxs-lookup"><span data-stu-id="942e3-239">The callback method is invoked once after `dueTime` elapses, and thereafter each time the time interval specified by `period` elapses.</span></span>  
  
 <span data-ttu-id="942e3-240">Jeśli `dueTime` jest równa zero (0), metoda wywołania zwrotnego jest wywoływana natychmiast.</span><span class="sxs-lookup"><span data-stu-id="942e3-240">If `dueTime` is zero (0), the callback method is invoked immediately.</span></span> <span data-ttu-id="942e3-241">Jeśli `dueTime` <xref:System.Threading.Timer.Change%2A> `dueTime`jest <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, metoda wywołania zwrotnego nigdy nie zostanie wywołana; czasomierz jest wyłączony, ale można go włączyć, wywołując i określając wartość dodatnią.</span><span class="sxs-lookup"><span data-stu-id="942e3-241">If `dueTime` is <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, the callback method is never invoked; the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a positive value for `dueTime`.</span></span>  
  
 <span data-ttu-id="942e3-242">Jeśli `period` jest równa zero (0 <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>) lub `dueTime` , i <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>nie jest, metoda wywołania zwrotnego jest wywoływana raz; okresowe zachowanie czasomierza jest wyłączone, ale można je ponownie włączyć, <xref:System.Threading.Timer.Change%2A> wywołując i określając wartość dodatnią dla `period`.</span><span class="sxs-lookup"><span data-stu-id="942e3-242">If `period` is zero (0) or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, and `dueTime` is not <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, the callback method is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a positive value for `period`.</span></span>  
  
 <span data-ttu-id="942e3-243">Metodę można wywołać <xref:System.Threading.TimerCallback> z delegata. <xref:System.Threading.Timer.Change%2A></span><span class="sxs-lookup"><span data-stu-id="942e3-243">The <xref:System.Threading.Timer.Change%2A> method can be called from the <xref:System.Threading.TimerCallback> delegate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="942e3-244">Poniższy przykład kodu demonstruje, jak uruchomić `Timer` a i, po ustawieniu liczby wywołań, zmienić jego okres.</span><span class="sxs-lookup"><span data-stu-id="942e3-244">The following code example demonstrates how to start a `Timer` and, after a set number of invocations, change its period.</span></span>  
  
 [!code-cpp[System.Threading.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer/CS/source.cs#1)]
 [!code-vb[System.Threading.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="942e3-245"><see cref="T:System.Threading.Timer" /> Został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="942e3-245">The <see cref="T:System.Threading.Timer" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="942e3-246">Parametr <paramref name="dueTime" /> <see cref="F:System.Threading.Timeout.Infinite" />lub <paramref name="period" /> jest wartością ujemną i nie jest równy.</span><span class="sxs-lookup"><span data-stu-id="942e3-246">The <paramref name="dueTime" /> or <paramref name="period" /> parameter is negative and is not equal to <see cref="F:System.Threading.Timeout.Infinite" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/timers.md"><span data-ttu-id="942e3-247">Czasomierze</span><span class="sxs-lookup"><span data-stu-id="942e3-247">Timers</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Change">
      <MemberSignature Language="C#" Value="public bool Change (long dueTime, long period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Change(int64 dueTime, int64 period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.Change(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Change (dueTime As Long, period As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Change(long dueTime, long period);" />
      <MemberSignature Language="F#" Value="member this.Change : int64 * int64 -&gt; bool" Usage="timer.Change (dueTime, period)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dueTime" Type="System.Int64" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="period" Type="System.Int64" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="dueTime"><span data-ttu-id="942e3-248">Czas oczekiwania przed wywołaniem metody wywołania zwrotnego określonej podczas <see cref="T:System.Threading.Timer" /> konstruowania, w milisekundach.</span><span class="sxs-lookup"><span data-stu-id="942e3-248">The amount of time to delay before the invoking the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed, in milliseconds.</span></span> <span data-ttu-id="942e3-249">Określ <see cref="F:System.Threading.Timeout.Infinite" /> , aby zapobiec ponownemu uruchamianiu czasomierza.</span><span class="sxs-lookup"><span data-stu-id="942e3-249">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to prevent the timer from restarting.</span></span> <span data-ttu-id="942e3-250">Określ zero (0), aby natychmiast ponownie uruchomić czasomierz.</span><span class="sxs-lookup"><span data-stu-id="942e3-250">Specify zero (0) to restart the timer immediately.</span></span></param>
        <param name="period"><span data-ttu-id="942e3-251">Przedział czasu między wywołaniami metody wywołania zwrotnego określonego podczas <see cref="T:System.Threading.Timer" /> konstruowania, w milisekundach.</span><span class="sxs-lookup"><span data-stu-id="942e3-251">The time interval between invocations of the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed, in milliseconds.</span></span> <span data-ttu-id="942e3-252">Określ <see cref="F:System.Threading.Timeout.Infinite" /> , aby wyłączyć okresowe sygnalizowanie.</span><span class="sxs-lookup"><span data-stu-id="942e3-252">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to disable periodic signaling.</span></span></param>
        <summary><span data-ttu-id="942e3-253">Zmienia czas rozpoczęcia i interwał między wywołaniami metody dla czasomierza, używając 64-bitowych liczb całkowitych ze znakiem do mierzenia interwałów czasu.</span><span class="sxs-lookup"><span data-stu-id="942e3-253">Changes the start time and the interval between method invocations for a timer, using 64-bit signed integers to measure time intervals.</span></span></summary>
        <returns><span data-ttu-id="942e3-254"><see langword="true" />Jeśli czasomierz został pomyślnie zaktualizowany; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="942e3-254"><see langword="true" /> if the timer was successfully updated; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="942e3-255">Metoda wywołania zwrotnego jest wywoływana jednokrotnie `dueTime` , a następnie za każdym razem, gdy upłynie interwał czasu określony przez. `period`</span><span class="sxs-lookup"><span data-stu-id="942e3-255">The callback method is invoked once after `dueTime` elapses, and thereafter each time the time interval specified by `period` elapses.</span></span>  
  
 <span data-ttu-id="942e3-256">Jeśli `dueTime` jest równa zero (0), metoda wywołania zwrotnego jest wywoływana natychmiast.</span><span class="sxs-lookup"><span data-stu-id="942e3-256">If `dueTime` is zero (0), the callback method is invoked immediately.</span></span> <span data-ttu-id="942e3-257">Jeśli `dueTime` <xref:System.Threading.Timer.Change%2A> `dueTime`jest <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, metoda wywołania zwrotnego nigdy nie zostanie wywołana; czasomierz jest wyłączony, ale można go włączyć, wywołując i określając wartość dodatnią.</span><span class="sxs-lookup"><span data-stu-id="942e3-257">If `dueTime` is <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, the callback method is never invoked; the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a positive value for `dueTime`.</span></span>  
  
 <span data-ttu-id="942e3-258">Jeśli `period` jest równa zero (0 <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>) lub `dueTime` , i <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>nie jest, metoda wywołania zwrotnego jest wywoływana raz; okresowe zachowanie czasomierza jest wyłączone, ale można je ponownie włączyć, <xref:System.Threading.Timer.Change%2A> wywołując i określając wartość dodatnią dla `period`.</span><span class="sxs-lookup"><span data-stu-id="942e3-258">If `period` is zero (0) or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, and `dueTime` is not <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, the callback method is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a positive value for `period`.</span></span>  
  
 <span data-ttu-id="942e3-259">Metodę można wywołać <xref:System.Threading.TimerCallback> z delegata. <xref:System.Threading.Timer.Change%2A></span><span class="sxs-lookup"><span data-stu-id="942e3-259">The <xref:System.Threading.Timer.Change%2A> method can be called from the <xref:System.Threading.TimerCallback> delegate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="942e3-260"><see cref="T:System.Threading.Timer" /> Został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="942e3-260">The <see cref="T:System.Threading.Timer" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="942e3-261">Parametr <paramref name="dueTime" /> lub<paramref name="period" /> jest mniejszy niż-1.</span><span class="sxs-lookup"><span data-stu-id="942e3-261">The <paramref name="dueTime" /> or <paramref name="period" /> parameter is less than -1.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="942e3-262">Parametr <paramref name="dueTime" /> lub<paramref name="period" /> jest większy niż 4294967294.</span><span class="sxs-lookup"><span data-stu-id="942e3-262">The <paramref name="dueTime" /> or <paramref name="period" /> parameter is greater than 4294967294.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/timers.md"><span data-ttu-id="942e3-263">Czasomierze</span><span class="sxs-lookup"><span data-stu-id="942e3-263">Timers</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Change">
      <MemberSignature Language="C#" Value="public bool Change (TimeSpan dueTime, TimeSpan period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Change(valuetype System.TimeSpan dueTime, valuetype System.TimeSpan period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.Change(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Change (dueTime As TimeSpan, period As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Change(TimeSpan dueTime, TimeSpan period);" />
      <MemberSignature Language="F#" Value="member this.Change : TimeSpan * TimeSpan -&gt; bool" Usage="timer.Change (dueTime, period)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dueTime" Type="System.TimeSpan" />
        <Parameter Name="period" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="dueTime"><span data-ttu-id="942e3-264">Reprezentuje czas opóźnienia przed wywołaniem metody wywołania zwrotnego określonej <see cref="T:System.Threading.Timer" /> podczas konstruowania. <see cref="T:System.TimeSpan" /></span><span class="sxs-lookup"><span data-stu-id="942e3-264">A <see cref="T:System.TimeSpan" /> representing the amount of time to delay before invoking the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed.</span></span> <span data-ttu-id="942e3-265">Określ ujemną liczbę milisekund (-1), aby zapobiec ponownemu uruchomieniu czasomierza.</span><span class="sxs-lookup"><span data-stu-id="942e3-265">Specify negative one (-1) milliseconds to prevent the timer from restarting.</span></span> <span data-ttu-id="942e3-266">Określ zero (0), aby natychmiast ponownie uruchomić czasomierz.</span><span class="sxs-lookup"><span data-stu-id="942e3-266">Specify zero (0) to restart the timer immediately.</span></span></param>
        <param name="period"><span data-ttu-id="942e3-267">Przedział czasu między wywołaniami metody wywołania zwrotnego określonego podczas <see cref="T:System.Threading.Timer" /> konstruowania.</span><span class="sxs-lookup"><span data-stu-id="942e3-267">The time interval between invocations of the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed.</span></span> <span data-ttu-id="942e3-268">Określ ujemną liczbę (-1) milisekund, aby wyłączyć okresowe sygnalizowanie.</span><span class="sxs-lookup"><span data-stu-id="942e3-268">Specify negative one (-1) milliseconds to disable periodic signaling.</span></span></param>
        <summary><span data-ttu-id="942e3-269">Zmienia czas rozpoczęcia i interwał między wywołaniami metody dla czasomierza przy użyciu <see cref="T:System.TimeSpan" /> wartości do mierzenia interwałów czasu.</span><span class="sxs-lookup"><span data-stu-id="942e3-269">Changes the start time and the interval between method invocations for a timer, using <see cref="T:System.TimeSpan" /> values to measure time intervals.</span></span></summary>
        <returns><span data-ttu-id="942e3-270"><see langword="true" />Jeśli czasomierz został pomyślnie zaktualizowany; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="942e3-270"><see langword="true" /> if the timer was successfully updated; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="942e3-271">Metoda wywołania zwrotnego jest wywoływana jednokrotnie `dueTime` , a następnie za każdym razem, gdy upłynie interwał czasu określony przez. `period`</span><span class="sxs-lookup"><span data-stu-id="942e3-271">The callback method is invoked once after `dueTime` elapses, and thereafter each time the time interval specified by `period` elapses.</span></span>  
  
 <span data-ttu-id="942e3-272">Jeśli `dueTime` jest równa zero (0), metoda wywołania zwrotnego jest wywoływana natychmiast.</span><span class="sxs-lookup"><span data-stu-id="942e3-272">If `dueTime` is zero (0), the callback method is invoked immediately.</span></span> <span data-ttu-id="942e3-273">Jeśli `dueTime` jest to ujemna wartość (-1) milisekund, metoda wywołania zwrotnego nigdy nie jest wywoływana; czasomierz jest wyłączony, ale można go włączyć, wywołując <xref:System.Threading.Timer.Change%2A> i `dueTime`podając wartość dodatnią.</span><span class="sxs-lookup"><span data-stu-id="942e3-273">If `dueTime` is negative one (-1) milliseconds, the callback method is never invoked; the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a positive value for `dueTime`.</span></span>  
  
 <span data-ttu-id="942e3-274">Jeśli `period` wartość jest równa zero (0) lub ujemna (-1) milisekundy, a `dueTime` jest dodatnia, metoda wywołania zwrotnego jest wywoływana raz; okresowe zachowanie czasomierza jest wyłączone, ale można je ponownie <xref:System.Threading.Timer.Change%2A> włączyć przez wywołanie i określenie wartości większej niż zero dla `period`.</span><span class="sxs-lookup"><span data-stu-id="942e3-274">If `period` is zero (0) or negative one (-1) milliseconds, and `dueTime` is positive, the callback method is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a value greater than zero for `period`.</span></span>  
  
 <span data-ttu-id="942e3-275">Metodę można wywołać <xref:System.Threading.TimerCallback> z delegata. <xref:System.Threading.Timer.Change%2A></span><span class="sxs-lookup"><span data-stu-id="942e3-275">The <xref:System.Threading.Timer.Change%2A> method can be called from the <xref:System.Threading.TimerCallback> delegate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="942e3-276">Poniższy przykład kodu demonstruje, jak uruchomić `Timer` a i, po ustawieniu liczby wywołań, zmienić jego okres.</span><span class="sxs-lookup"><span data-stu-id="942e3-276">The following code example demonstrates how to start a `Timer` and, after a set number of invocations, change its period.</span></span>  
  
 [!code-cpp[System.Threading.Timer2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer2/CPP/source2.cpp#1)]
 [!code-csharp[System.Threading.Timer2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer2/CS/source2.cs#1)]
 [!code-vb[System.Threading.Timer2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer2/VB/source2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="942e3-277"><see cref="T:System.Threading.Timer" /> Został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="942e3-277">The <see cref="T:System.Threading.Timer" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="942e3-278">Parametr <paramref name="dueTime" /> lub<paramref name="period" /> (w milisekundach) jest mniejszy niż-1.</span><span class="sxs-lookup"><span data-stu-id="942e3-278">The <paramref name="dueTime" /> or <paramref name="period" /> parameter, in milliseconds, is less than -1.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="942e3-279">Parametr <paramref name="dueTime" /> lub<paramref name="period" /> w milisekundach jest większy niż 4294967294.</span><span class="sxs-lookup"><span data-stu-id="942e3-279">The <paramref name="dueTime" /> or <paramref name="period" /> parameter, in milliseconds, is greater than 4294967294.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/timers.md"><span data-ttu-id="942e3-280">Czasomierze</span><span class="sxs-lookup"><span data-stu-id="942e3-280">Timers</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Change">
      <MemberSignature Language="C#" Value="public bool Change (uint dueTime, uint period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Change(unsigned int32 dueTime, unsigned int32 period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.Change(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Change (dueTime As UInteger, period As UInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Change(System::UInt32 dueTime, System::UInt32 period);" />
      <MemberSignature Language="F#" Value="member this.Change : uint32 * uint32 -&gt; bool" Usage="timer.Change (dueTime, period)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dueTime" Type="System.UInt32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="period" Type="System.UInt32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="dueTime"><span data-ttu-id="942e3-281">Czas oczekiwania przed wywołaniem metody wywołania zwrotnego określonej podczas <see cref="T:System.Threading.Timer" /> konstruowania, w milisekundach.</span><span class="sxs-lookup"><span data-stu-id="942e3-281">The amount of time to delay before the invoking the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed, in milliseconds.</span></span> <span data-ttu-id="942e3-282">Określ <see cref="F:System.Threading.Timeout.Infinite" /> , aby zapobiec ponownemu uruchamianiu czasomierza.</span><span class="sxs-lookup"><span data-stu-id="942e3-282">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to prevent the timer from restarting.</span></span> <span data-ttu-id="942e3-283">Określ zero (0), aby natychmiast ponownie uruchomić czasomierz.</span><span class="sxs-lookup"><span data-stu-id="942e3-283">Specify zero (0) to restart the timer immediately.</span></span></param>
        <param name="period"><span data-ttu-id="942e3-284">Przedział czasu między wywołaniami metody wywołania zwrotnego określonego podczas <see cref="T:System.Threading.Timer" /> konstruowania, w milisekundach.</span><span class="sxs-lookup"><span data-stu-id="942e3-284">The time interval between invocations of the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed, in milliseconds.</span></span> <span data-ttu-id="942e3-285">Określ <see cref="F:System.Threading.Timeout.Infinite" /> , aby wyłączyć okresowe sygnalizowanie.</span><span class="sxs-lookup"><span data-stu-id="942e3-285">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to disable periodic signaling.</span></span></param>
        <summary><span data-ttu-id="942e3-286">Zmienia czas rozpoczęcia i interwał między wywołaniami metody dla czasomierza, używając 32-bitowych liczb całkowitych bez znaku do mierzenia interwałów czasu.</span><span class="sxs-lookup"><span data-stu-id="942e3-286">Changes the start time and the interval between method invocations for a timer, using 32-bit unsigned integers to measure time intervals.</span></span></summary>
        <returns><span data-ttu-id="942e3-287"><see langword="true" />Jeśli czasomierz został pomyślnie zaktualizowany; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="942e3-287"><see langword="true" /> if the timer was successfully updated; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="942e3-288">Metoda wywołania zwrotnego jest wywoływana jednokrotnie `dueTime` , a następnie za każdym razem, gdy upłynie interwał czasu określony przez. `period`</span><span class="sxs-lookup"><span data-stu-id="942e3-288">The callback method is invoked once after `dueTime` elapses, and thereafter each time the time interval specified by `period` elapses.</span></span>  
  
 <span data-ttu-id="942e3-289">Jeśli `dueTime` jest równa zero (0), metoda wywołania zwrotnego jest wywoływana natychmiast.</span><span class="sxs-lookup"><span data-stu-id="942e3-289">If `dueTime` is zero (0), the callback method is invoked immediately.</span></span> <span data-ttu-id="942e3-290">Jeśli `dueTime` <xref:System.Threading.Timer.Change%2A> `dueTime`jest <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, metoda wywołania zwrotnego nigdy nie zostanie wywołana; czasomierz jest wyłączony, ale można go włączyć, wywołując i określając wartość dodatnią.</span><span class="sxs-lookup"><span data-stu-id="942e3-290">If `dueTime` is <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, the callback method is never invoked; the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a positive value for `dueTime`.</span></span>  
  
 <span data-ttu-id="942e3-291">Jeśli `period` jest równa zero (0 <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>) lub `dueTime` , i <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>nie jest, metoda wywołania zwrotnego jest wywoływana raz; okresowe zachowanie czasomierza jest wyłączone, ale można je ponownie włączyć, <xref:System.Threading.Timer.Change%2A> wywołując i określając wartość dodatnią dla `period`.</span><span class="sxs-lookup"><span data-stu-id="942e3-291">If `period` is zero (0) or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, and `dueTime` is not <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, the callback method is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a positive value for `period`.</span></span>  
  
 <span data-ttu-id="942e3-292">Metodę można wywołać <xref:System.Threading.TimerCallback> z delegata. <xref:System.Threading.Timer.Change%2A></span><span class="sxs-lookup"><span data-stu-id="942e3-292">The <xref:System.Threading.Timer.Change%2A> method can be called from the <xref:System.Threading.TimerCallback> delegate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="942e3-293"><see cref="T:System.Threading.Timer" /> Został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="942e3-293">The <see cref="T:System.Threading.Timer" /> has already been disposed.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/timers.md"><span data-ttu-id="942e3-294">Czasomierze</span><span class="sxs-lookup"><span data-stu-id="942e3-294">Timers</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="942e3-295">Zwalnia wszystkie zasoby używane przez bieżące wystąpienie programu <see cref="T:System.Threading.Timer" />.</span><span class="sxs-lookup"><span data-stu-id="942e3-295">Releases all resources used by the current instance of <see cref="T:System.Threading.Timer" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="timer.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="942e3-296">Zwalnia wszystkie zasoby używane przez bieżące wystąpienie programu <see cref="T:System.Threading.Timer" />.</span><span class="sxs-lookup"><span data-stu-id="942e3-296">Releases all resources used by the current instance of <see cref="T:System.Threading.Timer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="942e3-297">Wywołanie `Dispose` zezwala na przydzielenie zasobów używanych <xref:System.Threading.Timer> przez program do innych celów.</span><span class="sxs-lookup"><span data-stu-id="942e3-297">Calling `Dispose` allows the resources used by the <xref:System.Threading.Timer> to be reallocated for other purposes.</span></span> <span data-ttu-id="942e3-298">Aby uzyskać więcej informacji `Dispose`na temat, zobacz [Oczyszczanie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="942e3-298">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="942e3-299">Wywołania zwrotne mogą wystąpić po <xref:System.Threading.Timer.Dispose> wywołaniu metody przeciążenia, ponieważ czasomierze kolejki wywołania zwrotnego do wykonania przez wątki puli wątków.</span><span class="sxs-lookup"><span data-stu-id="942e3-299">Callbacks can occur after the <xref:System.Threading.Timer.Dispose> method overload has been called, because the timer queues callbacks for execution by thread pool threads.</span></span> <span data-ttu-id="942e3-300">Można użyć przeciążenia metody <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> , aby poczekać, aż wszystkie wywołania zwrotne zostaną zakończone.</span><span class="sxs-lookup"><span data-stu-id="942e3-300">You can use the <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> method overload to wait until all callbacks have completed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="942e3-301">Poniższy przykład kodu pokazuje, jak zwolnić zasoby przechowywane przez `Timer`.</span><span class="sxs-lookup"><span data-stu-id="942e3-301">The following code example shows how to free the resources held by a `Timer`.</span></span>  
  
 [!code-cpp[System.Threading.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer/CS/source.cs#1)]
 [!code-vb[System.Threading.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/threading/timers.md"><span data-ttu-id="942e3-302">Czasomierze</span><span class="sxs-lookup"><span data-stu-id="942e3-302">Timers</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public bool Dispose (System.Threading.WaitHandle notifyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Dispose(class System.Threading.WaitHandle notifyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.Dispose(System.Threading.WaitHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dispose (notifyObject As WaitHandle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Dispose(System::Threading::WaitHandle ^ notifyObject);" />
      <MemberSignature Language="F#" Value="member this.Dispose : System.Threading.WaitHandle -&gt; bool" Usage="timer.Dispose notifyObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notifyObject" Type="System.Threading.WaitHandle" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="notifyObject"><span data-ttu-id="942e3-303">Do <see cref="T:System.Threading.WaitHandle" /> zasygnalizowania, <see langword="Timer" /> gdy został usunięty.</span><span class="sxs-lookup"><span data-stu-id="942e3-303">The <see cref="T:System.Threading.WaitHandle" /> to be signaled when the <see langword="Timer" /> has been disposed of.</span></span></param>
        <summary><span data-ttu-id="942e3-304">Zwalnia wszystkie zasoby używane przez bieżące wystąpienie programu <see cref="T:System.Threading.Timer" /> i sygnalizuje, kiedy czasomierz został usunięty.</span><span class="sxs-lookup"><span data-stu-id="942e3-304">Releases all resources used by the current instance of <see cref="T:System.Threading.Timer" /> and signals when the timer has been disposed of.</span></span></summary>
        <returns><span data-ttu-id="942e3-305"><see langword="true" />Jeśli funkcja się powiedzie; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="942e3-305"><see langword="true" /> if the function succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="942e3-306">Wywołanie `Dispose` zezwala na przydzielenie zasobów używanych <xref:System.Threading.Timer> przez program do innych celów.</span><span class="sxs-lookup"><span data-stu-id="942e3-306">Calling `Dispose` allows the resources used by the <xref:System.Threading.Timer> to be reallocated for other purposes.</span></span> <span data-ttu-id="942e3-307">Aby uzyskać więcej informacji `Dispose`na temat, zobacz [Oczyszczanie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="942e3-307">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 <span data-ttu-id="942e3-308">Gdy ta metoda zostanie zakończona, sygnalizuje <xref:System.Threading.WaitHandle> określony `notifyObject` parametr. Użyj tego przeciążenia metody, <xref:System.Threading.Timer.Dispose%2A> Jeśli chcesz mieć możliwość blokowania, dopóki nie masz pewności, że czasomierz został usunięty.</span><span class="sxs-lookup"><span data-stu-id="942e3-308">When this method completes, it signals the <xref:System.Threading.WaitHandle> specified by the `notifyObject` parameter.Use this overload of the <xref:System.Threading.Timer.Dispose%2A> method if you want to be able to block until you are certain that the timer has been disposed.</span></span> <span data-ttu-id="942e3-309">Czasomierz nie jest usuwany, dopóki wszystkie wywołania zwrotne znajdujące się w kolejce nie zostały ukończone.</span><span class="sxs-lookup"><span data-stu-id="942e3-309">The timer is not disposed until all currently queued callbacks have completed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="942e3-310">Jeśli wywołanie zwrotne używa <xref:System.Threading.Timer.Change%2A> metody do `dueTime` ustawienia parametru na zero, może wystąpić <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> sytuacja wyścigu, gdy zostanie wywołane Przeciążenie metody: Jeśli czasomierz ustawi nowe wywołanie zwrotne przed <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> przeciążeniem metody wykryje, że żadne wywołania zwrotne nie znajdują się w kolejce, program <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> kontynuuje blokowanie; w przeciwnym razie czasomierz jest usuwany podczas umieszczania nowego wywołania zwrotnego i <xref:System.ObjectDisposedException> jest zgłaszany, gdy nowe wywołanie zwrotne wywołuje <xref:System.Threading.Timer.Change%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="942e3-310">If the callback uses the <xref:System.Threading.Timer.Change%2A> method to set the `dueTime` parameter to zero, a race condition can occur when the <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> method overload is called: If the timer queues a new callback before the <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> method overload detects that there are no callbacks queued, <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> continues to block; otherwise, the timer is disposed while the new callback is being queued, and an <xref:System.ObjectDisposedException> is thrown when the new callback calls the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="942e3-311">Parametr ma wartość <see langword="null" />. <paramref name="notifyObject" /></span><span class="sxs-lookup"><span data-stu-id="942e3-311">The <paramref name="notifyObject" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/timers.md"><span data-ttu-id="942e3-312">Czasomierze</span><span class="sxs-lookup"><span data-stu-id="942e3-312">Timers</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::ValueTask DisposeAsync();" />
      <MemberSignature Language="F#" Value="abstract member DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask&#xA;override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="timer.DisposeAsync " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IAsyncDisposable.DisposeAsync</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Timer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Timer ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="timer.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="942e3-313">Umożliwia obiektowi podjęcie próby zwolnienia zasobów i wykonywanie innych operacji czyszczenia przed odinstalowaniem ich przez wyrzucanie elementów bezużytecznych.</span><span class="sxs-lookup"><span data-stu-id="942e3-313">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>