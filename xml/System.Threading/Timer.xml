<Type Name="Timer" FullName="System.Threading.Timer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="74a6de36646de0dcbc90a1635ad4f1da77e76065" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58703251" /></Metadata><TypeSignature Language="C#" Value="public sealed class Timer : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Timer extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Timer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Timer&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Timer sealed : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type Timer = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Timer</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;dotnet-uwp-10.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f947b-101">Udostępnia mechanizm wykonywanie metody na wątku z puli wątków w określonych odstępach czasu.</span><span class="sxs-lookup"><span data-stu-id="f947b-101">Provides a mechanism for executing a method on a thread pool thread at specified intervals.</span></span> <span data-ttu-id="f947b-102">Klasa ta nie może być dziedziczona.</span><span class="sxs-lookup"><span data-stu-id="f947b-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f947b-103">Użyj <xref:System.Threading.TimerCallback> delegata, aby określić metodę, która ma <xref:System.Threading.Timer> do wykonania.</span><span class="sxs-lookup"><span data-stu-id="f947b-103">Use a <xref:System.Threading.TimerCallback> delegate to specify the method you want the <xref:System.Threading.Timer> to execute.</span></span> <span data-ttu-id="f947b-104">Podpis <xref:System.Threading.TimerCallback> delegat jest:</span><span class="sxs-lookup"><span data-stu-id="f947b-104">The signature of the <xref:System.Threading.TimerCallback> delegate is:</span></span>  
  
```csharp  
void TimerCallback(Object state)  
```  
  
```cpp  
void TimerCallback(Object state)  
```  
  
```vb  
Sub TimerCallback(state As Object)  
```  
  
 <span data-ttu-id="f947b-105">Delegat czasomierza określono czasomierza jest tworzony, gdy nie można jej zmienić.</span><span class="sxs-lookup"><span data-stu-id="f947b-105">The timer delegate is specified when the timer is constructed, and cannot be changed.</span></span> <span data-ttu-id="f947b-106">Metoda nie jest wykonywane na wątek, który utworzył czasomierza; wykonuje na <xref:System.Threading.ThreadPool> wątku dostarczane przez system.</span><span class="sxs-lookup"><span data-stu-id="f947b-106">The method does not execute on the thread that created the timer; it executes on a <xref:System.Threading.ThreadPool> thread supplied by the system.</span></span>  
  
> [!TIP]
> <span data-ttu-id="f947b-107">.NET zawiera cztery klasy o nazwie `Timer`, każdy z której oferuje różne funkcje:</span><span class="sxs-lookup"><span data-stu-id="f947b-107">.NET includes four classes named `Timer`, each of which offers different functionality:</span></span>  
>
> - <span data-ttu-id="f947b-108"><xref:System.Timers.Timer?displayProperty=nameWithType>, która wyzwala zdarzenie i wykonuje kod w jednym lub więcej zdarzenia sink w regularnych odstępach czasu.</span><span class="sxs-lookup"><span data-stu-id="f947b-108"><xref:System.Timers.Timer?displayProperty=nameWithType>, which fires an event and executes the code in one or more event sinks at regular intervals.</span></span> <span data-ttu-id="f947b-109">Klasa jest przeznaczone do użytku jako na serwerze lub składnik usługi w środowisku wielowątkowym. go nie ma interfejsu użytkownika i nie jest widoczny w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="f947b-109">The class is intended for use as a server-based or service component in a multithreaded environment; it has no user interface and is not visible at runtime.</span></span>
> - <span data-ttu-id="f947b-110"><xref:System.Threading.Timer?displayProperty=nameWithType>, który wykonuje metodę pojedynczego wywołania zwrotnego w wątku z puli wątków w regularnych odstępach czasu.</span><span class="sxs-lookup"><span data-stu-id="f947b-110"><xref:System.Threading.Timer?displayProperty=nameWithType>, which executes a single callback method on a thread pool thread at regular intervals.</span></span> <span data-ttu-id="f947b-111">Metoda wywołania zwrotnego jest określona, gdy czasomierz zostanie uruchomiony i nie można zmienić.</span><span class="sxs-lookup"><span data-stu-id="f947b-111">The callback method is defined when the timer is instantiated and cannot be changed.</span></span> <span data-ttu-id="f947b-112">Podobnie jak <xref:System.Timers.Timer?displayProperty=nameWithType> klasy, ta klasa jest przeznaczona do użytku jako składnik serwera lub usługi w środowisku wielowątkowym; nie ma interfejsu użytkownika, a nie jest widoczny w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="f947b-112">Like the <xref:System.Timers.Timer?displayProperty=nameWithType> class, this class is intended for use as a server-based or service component in a multithreaded environment; it has no user interface and is not visible at runtime.</span></span>
> - <span data-ttu-id="f947b-113"><xref:System.Windows.Forms.Timer?displayProperty=nameWithType> (Tylko platforma .NET framework), składnik Windows Forms, który wyzwala zdarzenie i wykonuje kod w co najmniej jeden obiekty sink zdarzenia w regularnych odstępach czasu.</span><span class="sxs-lookup"><span data-stu-id="f947b-113"><xref:System.Windows.Forms.Timer?displayProperty=nameWithType> (.NET Framework only), a Windows Forms component that fires an event and executes the code in one or more event sinks at regular intervals.</span></span> <span data-ttu-id="f947b-114">Składnik nie ma interfejsu użytkownika i jest przeznaczony do użytku w środowisku apartamentem. wykonuje w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="f947b-114">The component has no user interface and is designed for use in a single-threaded environment; it executes on the UI thread.</span></span>
> - <span data-ttu-id="f947b-115"><xref:System.Web.UI.Timer?displayProperty=nameWithType> (Tylko platforma .NET framework), składnik ASP.NET, który wykonuje ogłaszania zwrotnego asynchronicznego lub synchronicznego strony sieci web w regularnych odstępach czasu.</span><span class="sxs-lookup"><span data-stu-id="f947b-115"><xref:System.Web.UI.Timer?displayProperty=nameWithType> (.NET Framework only), an ASP.NET component that performs asynchronous or synchronous web page postbacks at a regular interval.</span></span>
  
 <span data-ttu-id="f947b-116">Kiedy tworzysz czasomierz, możesz określić ilość czasu oczekiwania przed pierwszym wykonywanie metody (czas ukończenia), a czas do odczekania między kolejne wykonania (okres).</span><span class="sxs-lookup"><span data-stu-id="f947b-116">When you create a timer, you can specify an amount of time to wait before the first execution of the method (due time), and an amount of time to wait between subsequent executions (period).</span></span> <span data-ttu-id="f947b-117"><xref:System.Threading.Timer> Klasa ma taką samą rozdzielczość zegara systemowego.</span><span class="sxs-lookup"><span data-stu-id="f947b-117">The <xref:System.Threading.Timer> class has the same resolution as the system clock.</span></span> <span data-ttu-id="f947b-118">Oznacza to, że jeśli okresu jest mniejsza od rozdzielczości zegara systemowego <xref:System.Threading.TimerCallback> delegata będą wykonywane w odstępach czasu zdefiniowanych przez rozdzielczość zegara systemowego, czyli około 15 milisekund w systemach Windows 7 i Windows 8.</span><span class="sxs-lookup"><span data-stu-id="f947b-118">This means that if the period is less than the resolution of the system clock, the <xref:System.Threading.TimerCallback> delegate will execute at intervals defined by the resolution of the system clock, which is approximately 15 milliseconds on Windows 7 and Windows 8 systems.</span></span> <span data-ttu-id="f947b-119">Możesz zmienić termin przypada czasu i okres lub wyłącz czasomierz, za pomocą <xref:System.Threading.Timer.Change%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="f947b-119">You can change the due time and period, or disable the timer, by using the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f947b-120">Tak długo, jak długo używasz <xref:System.Threading.Timer>, należy pozostawić odwołanie do niej.</span><span class="sxs-lookup"><span data-stu-id="f947b-120">As long as you are using a <xref:System.Threading.Timer>, you must keep a reference to it.</span></span> <span data-ttu-id="f947b-121">Podobnie jak w przypadku dowolny obiekt zarządzany, <xref:System.Threading.Timer> podlega wyrzucania elementów bezużytecznych, gdy nie odwołania do niego.</span><span class="sxs-lookup"><span data-stu-id="f947b-121">As with any managed object, a <xref:System.Threading.Timer> is subject to garbage collection when there are no references to it.</span></span> <span data-ttu-id="f947b-122">Fakt, <xref:System.Threading.Timer> jest nadal aktywny nie zapobiega on są zbierane.</span><span class="sxs-lookup"><span data-stu-id="f947b-122">The fact that a <xref:System.Threading.Timer> is still active does not prevent it from being collected.</span></span>  
  
 <span data-ttu-id="f947b-123">Gdy czasomierz nie jest już potrzebny, należy użyć <xref:System.Threading.Timer.Dispose%2A> metody, aby zwolnić zasoby utrzymywane przez czasomierz.</span><span class="sxs-lookup"><span data-stu-id="f947b-123">When a timer is no longer needed, use the <xref:System.Threading.Timer.Dispose%2A> method to free the resources held by the timer.</span></span> <span data-ttu-id="f947b-124">Należy pamiętać, że wywołania zwrotne może wystąpić po <xref:System.Threading.Timer.Dispose> została wywołana metoda przeciążenia, ponieważ czasomierz kolejki wywołania zwrotne do wykonania przez wątków z puli wątków.</span><span class="sxs-lookup"><span data-stu-id="f947b-124">Note that callbacks can occur after the <xref:System.Threading.Timer.Dispose> method overload has been called, because the timer queues callbacks for execution by thread pool threads.</span></span> <span data-ttu-id="f947b-125">Możesz użyć <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> przeciążenia metody, aby poczekać, aż wszystkie wywołania zwrotne została ukończona.</span><span class="sxs-lookup"><span data-stu-id="f947b-125">You can use the <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> method overload to wait until all callbacks have completed.</span></span>  
  
 <span data-ttu-id="f947b-126">Metoda wywołania zwrotnego, wykonywane przez czasomierz powinna być współużytkowane, ponieważ jest ona wywoływana na <xref:System.Threading.ThreadPool> wątków.</span><span class="sxs-lookup"><span data-stu-id="f947b-126">The callback method executed by the timer should be reentrant, because it is called on <xref:System.Threading.ThreadPool> threads.</span></span> <span data-ttu-id="f947b-127">Wywołanie zwrotne można wykonać jednocześnie na dwóch wątków z puli wątków, jeśli interwału czasomierza jest krótszy niż czas wymagany do wykonania wywołania zwrotnego lub wszystkich wątków z puli wątków, które są używane, i wywołanie zwrotne znajduje się w kolejce wiele razy.</span><span class="sxs-lookup"><span data-stu-id="f947b-127">The callback can be executed simultaneously on two thread pool threads if the timer interval is less than the time required to execute the callback, or if all thread pool threads are in use and the callback is queued multiple times.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f947b-128"><xref:System.Threading.Timer?displayProperty=nameWithType> to proste, uproszczone czasomierza, korzysta z metody wywołania zwrotnego, która jest obsługiwana przez wątków z puli wątków.</span><span class="sxs-lookup"><span data-stu-id="f947b-128"><xref:System.Threading.Timer?displayProperty=nameWithType> is a simple, lightweight timer that uses callback methods and is served by thread pool threads.</span></span> <span data-ttu-id="f947b-129">Nie zaleca do użytku z programem Windows Forms, ponieważ jego wywołania zwrotne nie występują w wątku interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="f947b-129">It is not recommended for use with Windows Forms, because its callbacks do not occur on the user interface thread.</span></span> <span data-ttu-id="f947b-130"><xref:System.Windows.Forms.Timer?displayProperty=nameWithType> jest lepszym rozwiązaniem do użytku z programem Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="f947b-130"><xref:System.Windows.Forms.Timer?displayProperty=nameWithType> is a better choice for use with Windows Forms.</span></span> <span data-ttu-id="f947b-131">Dla funkcji serwerowych czasomierza, należy rozważyć przy użyciu <xref:System.Timers.Timer?displayProperty=nameWithType>, która wywołuje zdarzenia i ma dodatkowe funkcje.</span><span class="sxs-lookup"><span data-stu-id="f947b-131">For server-based timer functionality, you might consider using <xref:System.Timers.Timer?displayProperty=nameWithType>, which raises events and has additional features.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f947b-132">W poniższym przykładzie zdefiniowano `StatusChecker` klasy, która obejmuje `CheckStatus` ma taki sam podpis metody jako <xref:System.Threading.TimerCallback> delegować.</span><span class="sxs-lookup"><span data-stu-id="f947b-132">The following example defines a `StatusChecker` class  that includes a `CheckStatus` method whose signature is the same as the <xref:System.Threading.TimerCallback> delegate.</span></span> <span data-ttu-id="f947b-133">`state` Argument `CheckStatus` metodą jest <xref:System.Threading.AutoResetEvent> obiekt, który służy do synchronizowania wątku aplikacji i puli wątków wątek, który jest wykonywany delegata wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="f947b-133">The  `state` argument of the `CheckStatus` method is an <xref:System.Threading.AutoResetEvent> object that is used to synchronize the application thread and the thread pool thread that executes the callback delegate.</span></span> <span data-ttu-id="f947b-134">`StatusChecker` Klasa zawiera także dwie zmienne stanu:</span><span class="sxs-lookup"><span data-stu-id="f947b-134">The `StatusChecker` class also includes two state variables:</span></span>  
  
 `invokeCount`  
 <span data-ttu-id="f947b-135">Wskazuje, ile razy zostało wywołane metody wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="f947b-135">Indicates the number of times the callback method has been invoked.</span></span>  
  
 `maxCount`  
 <span data-ttu-id="f947b-136">Określa maksymalną liczbę przypadków, gdy powinna ona zostać wywołana metoda wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="f947b-136">Determines the maximum number of times the callback method should be invoked.</span></span>  
  
 <span data-ttu-id="f947b-137">Wątek aplikacji tworzy się czasomierz, która oczekuje na sekundę, a następnie wykonuje `CheckStatus` metody wywołania zwrotnego co 250 milisekund.</span><span class="sxs-lookup"><span data-stu-id="f947b-137">The application thread creates the timer, which waits one second and then executes  the `CheckStatus` callback method every 250 milliseconds.</span></span> <span data-ttu-id="f947b-138">Wątek aplikacji blokuje wtedy dane do momentu <xref:System.Threading.AutoResetEvent> zasygnalizowania obiektu.</span><span class="sxs-lookup"><span data-stu-id="f947b-138">The application thread then blocks until the <xref:System.Threading.AutoResetEvent> object is signaled.</span></span> <span data-ttu-id="f947b-139">Gdy `CheckStatus` wykonuje metodę wywołania zwrotnego `maxCount` razy, wywoływanych przez nią `AutoResetEvent.Set` metodę, aby ustawić stan <xref:System.Threading.AutoResetEvent> obiektu zasygnalizowane.</span><span class="sxs-lookup"><span data-stu-id="f947b-139">When the `CheckStatus` callback method executes `maxCount` times, it calls the `AutoResetEvent.Set` method to set the state of the <xref:System.Threading.AutoResetEvent> object to signaled.</span></span> <span data-ttu-id="f947b-140">Po raz pierwszy dzieje się tak, wywołań wątku aplikacji <xref:System.Threading.Timer.Change%28System.Int32%2CSystem.Int32%29> metody, aby metoda wywołania zwrotnego jest teraz wykonywana co pół sekundy.</span><span class="sxs-lookup"><span data-stu-id="f947b-140">The first time this happens, the application thread calls the <xref:System.Threading.Timer.Change%28System.Int32%2CSystem.Int32%29> method so that the callback method now executes every half second.</span></span> <span data-ttu-id="f947b-141">Blokuje go ponownie do <xref:System.Threading.AutoResetEvent> zasygnalizowania obiektu.</span><span class="sxs-lookup"><span data-stu-id="f947b-141">It once again blocks until the <xref:System.Threading.AutoResetEvent> object is signaled.</span></span> <span data-ttu-id="f947b-142">W takim przypadku czasomierza jest niszczony, przez wywołanie jego <xref:System.Threading.Timer.Dispose%2A> kończy się metody i aplikacji.</span><span class="sxs-lookup"><span data-stu-id="f947b-142">When this happens, the timer is destroyed by calling its <xref:System.Threading.Timer.Dispose%2A> method, and the application terminates.</span></span>  
  
 [!code-cpp[System.Threading.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer/CS/source.cs#1)]
 [!code-vb[System.Threading.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="f947b-143">Ten typ jest bezpieczny wątkowo.</span><span class="sxs-lookup"><span data-stu-id="f947b-143">This type is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.Threading.TimerCallback" />
    <related type="Article" href="~/docs/standard/threading/timers.md"><span data-ttu-id="f947b-144">Czasomierze</span><span class="sxs-lookup"><span data-stu-id="f947b-144">Timers</span></span></related>
    <related type="Article" href="~/docs/standard/threading/the-managed-thread-pool.md"><span data-ttu-id="f947b-145">Zarządzana pula wątków</span><span class="sxs-lookup"><span data-stu-id="f947b-145">The Managed Thread Pool</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f947b-146">Inicjuje nowe wystąpienie klasy <see langword="Timer" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="f947b-146">Initializes a new instance of the <see langword="Timer" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (System.Threading.TimerCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.TimerCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callback As TimerCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(System::Threading::TimerCallback ^ callback);" />
      <MemberSignature Language="F#" Value="new System.Threading.Timer : System.Threading.TimerCallback -&gt; System.Threading.Timer" Usage="new System.Threading.Timer callback" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.TimerCallback" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="f947b-147">A <see cref="T:System.Threading.TimerCallback" /> delegować reprezentujący metodę do wykonania.</span><span class="sxs-lookup"><span data-stu-id="f947b-147">A <see cref="T:System.Threading.TimerCallback" /> delegate representing a method to be executed.</span></span></param>
        <summary><span data-ttu-id="f947b-148">Inicjuje nowe wystąpienie klasy <see cref="T:System.Threading.Timer" /> klasie z atrybutem przez nieograniczony czas i termin nieograniczony czas i przy użyciu nowo utworzonego <see cref="T:System.Threading.Timer" /> obiektu jako obiekt stanu.</span><span class="sxs-lookup"><span data-stu-id="f947b-148">Initializes a new instance of the <see cref="T:System.Threading.Timer" /> class with an infinite period and an infinite due time, using the newly created <see cref="T:System.Threading.Timer" /> object as the state object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f947b-149">Wywołania tego konstruktora, jeśli chcesz użyć <xref:System.Threading.Timer> sam obiekt jako obiekt stanu.</span><span class="sxs-lookup"><span data-stu-id="f947b-149">Call this constructor when you want to use the <xref:System.Threading.Timer> object itself as the state object.</span></span> <span data-ttu-id="f947b-150">Po utworzeniu czasomierza, użyj <xref:System.Threading.Timer.Change%2A> metodę, aby ustawić interwał i czas ukończenia.</span><span class="sxs-lookup"><span data-stu-id="f947b-150">After creating the timer, use the <xref:System.Threading.Timer.Change%2A> method to set the interval and due time.</span></span>  
  
 <span data-ttu-id="f947b-151">Ten konstruktor określa termin nieskończony czas przed pierwszym wywołanie zwrotne i nieskończona interwału wywołań zwrotnych, aby zapobiec pierwszego wywołania zwrotnego przed <xref:System.Threading.Timer> obiekt jest przypisany do obiektu stanu.</span><span class="sxs-lookup"><span data-stu-id="f947b-151">This constructor specifies an infinite due time before the first callback and an infinite interval between callbacks, in order to prevent the first callback from occurring before the <xref:System.Threading.Timer> object is assigned to the state object.</span></span>  
  
 <span data-ttu-id="f947b-152">Metoda określona dla `callback` powinien być współużytkowane, ponieważ jest ona wywoływana na <xref:System.Threading.ThreadPool> wątków.</span><span class="sxs-lookup"><span data-stu-id="f947b-152">The method specified for `callback` should be reentrant, because it is called on <xref:System.Threading.ThreadPool> threads.</span></span> <span data-ttu-id="f947b-153">Metoda może być wykonywane jednocześnie na dwóch wątków z puli wątków Jeśli interwału czasomierza jest mniejsza niż czas wymagany do wykonania metody lub wszystkich wątków z puli wątków, które są używane, i metoda znajduje się w kolejce wiele razy.</span><span class="sxs-lookup"><span data-stu-id="f947b-153">The method can be executed simultaneously on two thread pool threads if the timer interval is less than the time required to execute the method, or if all thread pool threads are in use and the method is queued multiple times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f947b-154">Poniższy przykład kodu tworzy nowy czasomierz, za pomocą czasomierza, sama jako obiekt stanu.</span><span class="sxs-lookup"><span data-stu-id="f947b-154">The following code example creates a new timer, using the timer itself as the state object.</span></span> <span data-ttu-id="f947b-155"><xref:System.Threading.Timer.Change%2A> Metoda jest używana do uruchomienia czasomierza.</span><span class="sxs-lookup"><span data-stu-id="f947b-155">The <xref:System.Threading.Timer.Change%2A> method is used to start the timer.</span></span> <span data-ttu-id="f947b-156">W przypadku wywołania zwrotnego czasomierza obiekt stanu umożliwia wyłączyć czasomierza.</span><span class="sxs-lookup"><span data-stu-id="f947b-156">When the timer callback occurs, the state object is used to turn the timer off.</span></span>  
  
 [!code-csharp[TimerSelfCtor#1](~/samples/snippets/csharp/VS_Snippets_Misc/timerSelfCtor/CS/source.cs#1)]
 [!code-vb[TimerSelfCtor#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/timerSelfCtor/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (System.Threading.TimerCallback callback, object state, int dueTime, int period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.TimerCallback callback, object state, int32 dueTime, int32 period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callback As TimerCallback, state As Object, dueTime As Integer, period As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(System::Threading::TimerCallback ^ callback, System::Object ^ state, int dueTime, int period);" />
      <MemberSignature Language="F#" Value="new System.Threading.Timer : System.Threading.TimerCallback * obj * int * int -&gt; System.Threading.Timer" Usage="new System.Threading.Timer (callback, state, dueTime, period)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.TimerCallback" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="dueTime" Type="System.Int32" />
        <Parameter Name="period" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="f947b-157">A <see cref="T:System.Threading.TimerCallback" /> delegować reprezentujący metodę do wykonania.</span><span class="sxs-lookup"><span data-stu-id="f947b-157">A <see cref="T:System.Threading.TimerCallback" /> delegate representing a method to be executed.</span></span></param>
        <param name="state"><span data-ttu-id="f947b-158">Obiekt zawierający informacje używane przez metodę wywołania zwrotnego lub <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f947b-158">An object containing information to be used by the callback method, or <see langword="null" />.</span></span></param>
        <param name="dueTime"><span data-ttu-id="f947b-159">Czas opóźnienia przed <paramref name="callback" /> jest wywoływana w milisekundach.</span><span class="sxs-lookup"><span data-stu-id="f947b-159">The amount of time to delay before <paramref name="callback" /> is invoked, in milliseconds.</span></span> <span data-ttu-id="f947b-160">Określ <see cref="F:System.Threading.Timeout.Infinite" /> uniemożliwia czasomierza.</span><span class="sxs-lookup"><span data-stu-id="f947b-160">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to prevent the timer from starting.</span></span> <span data-ttu-id="f947b-161">Określ zero (0) aby natychmiast uruchomić czasomierza.</span><span class="sxs-lookup"><span data-stu-id="f947b-161">Specify zero (0) to start the timer immediately.</span></span></param>
        <param name="period"><span data-ttu-id="f947b-162">Odstęp czasu między wywołań <paramref name="callback" />, w milisekundach.</span><span class="sxs-lookup"><span data-stu-id="f947b-162">The time interval between invocations of <paramref name="callback" />, in milliseconds.</span></span> <span data-ttu-id="f947b-163">Określ <see cref="F:System.Threading.Timeout.Infinite" /> wyłączyć sygnalizowanie okresowo.</span><span class="sxs-lookup"><span data-stu-id="f947b-163">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to disable periodic signaling.</span></span></param>
        <summary><span data-ttu-id="f947b-164">Inicjuje nowe wystąpienie klasy <see langword="Timer" /> klasy przy użyciu całkowita 32-bitowych, aby określić interwał czasu.</span><span class="sxs-lookup"><span data-stu-id="f947b-164">Initializes a new instance of the <see langword="Timer" /> class, using a 32-bit signed integer to specify the time interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f947b-165">Delegat określony przez `callback` parametru jest wywoływana jeden raz po `dueTime` upłynie, a następnie za każdym razem `period` upłynie interwał czasu.</span><span class="sxs-lookup"><span data-stu-id="f947b-165">The delegate specified by the `callback` parameter is invoked once after `dueTime` elapses, and thereafter each time the `period` time interval elapses.</span></span>  
  
 <span data-ttu-id="f947b-166">Jeśli `dueTime` ma wartość zero (0), `callback` jest wywoływany bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="f947b-166">If `dueTime` is zero (0), `callback` is invoked immediately.</span></span> <span data-ttu-id="f947b-167">Jeśli `dueTime` jest <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` nie jest wywoływany; czasomierza jest wyłączony, ale można włączyć ponownie, wywołując <xref:System.Threading.Timer.Change%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="f947b-167">If `dueTime` is <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` is not invoked; the timer is disabled, but can be re-enabled by calling the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="f947b-168">Ponieważ <xref:System.Threading.Timer> klasa ma taką samą rozdzielczość zegara systemowego, czyli około 15 milisekund w systemach Windows 7 i Windows 8, `callback` delegata jest wykonywana w odstępach czasu zdefiniowanych przez rozdzielczość zegara systemowego, jeśli `period`jest mniejsza od rozdzielczości zegara systemowego.</span><span class="sxs-lookup"><span data-stu-id="f947b-168">Because the <xref:System.Threading.Timer> class has the same resolution as the system clock, which is approximately 15 milliseconds on Windows 7 and Windows 8 systems, the `callback` delegate executes at intervals defined by the resolution of the system clock if `period` is less than the resolution of the system clock.</span></span> <span data-ttu-id="f947b-169">Jeśli `period` wynosi zero (0) lub <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> i `dueTime` nie <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` jest wywoływana raz, a okresowe zachowanie czasomierza jest wyłączona, ale można ją ponownie włączyć przy użyciu <xref:System.Threading.Timer.Change%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="f947b-169">If `period` is zero (0) or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> and `dueTime` is not <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled using the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="f947b-170">Metoda określona dla `callback` powinien być współużytkowane, ponieważ jest ona wywoływana na <xref:System.Threading.ThreadPool> wątków.</span><span class="sxs-lookup"><span data-stu-id="f947b-170">The method specified for `callback` should be reentrant, because it is called on <xref:System.Threading.ThreadPool> threads.</span></span> <span data-ttu-id="f947b-171">Metoda może być wykonywane jednocześnie na dwóch wątków z puli wątków Jeśli interwału czasomierza jest mniejsza niż czas wymagany do wykonania metody lub wszystkich wątków z puli wątków, które są używane, i metoda znajduje się w kolejce wiele razy.</span><span class="sxs-lookup"><span data-stu-id="f947b-171">The method can be executed simultaneously on two thread pool threads if the timer interval is less than the time required to execute the method, or if all thread pool threads are in use and the method is queued multiple times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f947b-172">Poniższy przykład kodu pokazuje sposób tworzenia `TimerCallback` delegować i inicjuje nowe wystąpienie klasy `Timer` klasy.</span><span class="sxs-lookup"><span data-stu-id="f947b-172">The following code example shows how to create a `TimerCallback` delegate and initialize a new instance of the `Timer` class.</span></span>  
  
 [!code-cpp[System.Threading.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer/CS/source.cs#1)]
 [!code-vb[System.Threading.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f947b-173"><paramref name="dueTime" /> Lub <paramref name="period" /> parametr ma wartość ujemną i nie jest równa <see cref="F:System.Threading.Timeout.Infinite" />.</span><span class="sxs-lookup"><span data-stu-id="f947b-173">The <paramref name="dueTime" /> or <paramref name="period" /> parameter is negative and is not equal to <see cref="F:System.Threading.Timeout.Infinite" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f947b-174"><paramref name="callback" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f947b-174">The <paramref name="callback" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/timers.md"><span data-ttu-id="f947b-175">Czasomierze</span><span class="sxs-lookup"><span data-stu-id="f947b-175">Timers</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (System.Threading.TimerCallback callback, object state, long dueTime, long period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.TimerCallback callback, object state, int64 dueTime, int64 period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callback As TimerCallback, state As Object, dueTime As Long, period As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(System::Threading::TimerCallback ^ callback, System::Object ^ state, long dueTime, long period);" />
      <MemberSignature Language="F#" Value="new System.Threading.Timer : System.Threading.TimerCallback * obj * int64 * int64 -&gt; System.Threading.Timer" Usage="new System.Threading.Timer (callback, state, dueTime, period)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.TimerCallback" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="dueTime" Type="System.Int64" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="period" Type="System.Int64" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="f947b-176">A <see cref="T:System.Threading.TimerCallback" /> delegować reprezentujący metodę do wykonania.</span><span class="sxs-lookup"><span data-stu-id="f947b-176">A <see cref="T:System.Threading.TimerCallback" /> delegate representing a method to be executed.</span></span></param>
        <param name="state"><span data-ttu-id="f947b-177">Obiekt zawierający informacje używane przez metodę wywołania zwrotnego lub <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f947b-177">An object containing information to be used by the callback method, or <see langword="null" />.</span></span></param>
        <param name="dueTime"><span data-ttu-id="f947b-178">Czas opóźnienia przed <paramref name="callback" /> jest wywoływana w milisekundach.</span><span class="sxs-lookup"><span data-stu-id="f947b-178">The amount of time to delay before <paramref name="callback" /> is invoked, in milliseconds.</span></span> <span data-ttu-id="f947b-179">Określ <see cref="F:System.Threading.Timeout.Infinite" /> uniemożliwia czasomierza.</span><span class="sxs-lookup"><span data-stu-id="f947b-179">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to prevent the timer from starting.</span></span> <span data-ttu-id="f947b-180">Określ zero (0) aby natychmiast uruchomić czasomierza.</span><span class="sxs-lookup"><span data-stu-id="f947b-180">Specify zero (0) to start the timer immediately.</span></span></param>
        <param name="period"><span data-ttu-id="f947b-181">Odstęp czasu między wywołań <paramref name="callback" />, w milisekundach.</span><span class="sxs-lookup"><span data-stu-id="f947b-181">The time interval between invocations of <paramref name="callback" />, in milliseconds.</span></span> <span data-ttu-id="f947b-182">Określ <see cref="F:System.Threading.Timeout.Infinite" /> wyłączyć sygnalizowanie okresowo.</span><span class="sxs-lookup"><span data-stu-id="f947b-182">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to disable periodic signaling.</span></span></param>
        <summary><span data-ttu-id="f947b-183">Inicjuje nowe wystąpienie klasy <see langword="Timer" /> klasy przy użyciu liczb całkowitych ze znakiem 64-bitowego do mierzenia odstępach czasu.</span><span class="sxs-lookup"><span data-stu-id="f947b-183">Initializes a new instance of the <see langword="Timer" /> class, using 64-bit signed integers to measure time intervals.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f947b-184">Delegat określony przez `callback` parametru jest wywoływana jeden raz po `dueTime` upłynie, a następnie za każdym razem `period` upłynie interwał czasu.</span><span class="sxs-lookup"><span data-stu-id="f947b-184">The delegate specified by the `callback` parameter is invoked once after `dueTime` elapses, and thereafter each time the `period` time interval elapses.</span></span>  
  
 <span data-ttu-id="f947b-185">Jeśli `dueTime` ma wartość zero (0), `callback` jest wywoływany bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="f947b-185">If `dueTime` is zero (0), `callback` is invoked immediately.</span></span> <span data-ttu-id="f947b-186">Jeśli `dueTime` jest <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` nie jest wywoływany; czasomierza jest wyłączony, ale można włączyć ponownie, wywołując <xref:System.Threading.Timer.Change%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="f947b-186">If `dueTime` is <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` is not invoked; the timer is disabled, but can be re-enabled by calling the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="f947b-187">Ponieważ <xref:System.Threading.Timer> klasa ma taką samą rozdzielczość zegara systemowego, czyli około 15 milisekund w systemach Windows 7 i Windows 8, `callback` delegata jest wykonywana w odstępach czasu zdefiniowanych przez rozdzielczość zegara systemowego, jeśli `period`jest mniejsza od rozdzielczości zegara systemowego.</span><span class="sxs-lookup"><span data-stu-id="f947b-187">Because the <xref:System.Threading.Timer> class has the same resolution as the system clock, which is approximately 15 milliseconds on Windows 7 and Windows 8 systems, the `callback` delegate executes at intervals defined by the resolution of the system clock if `period` is less than the resolution of the system clock.</span></span> <span data-ttu-id="f947b-188">Jeśli `period` wynosi zero (0) lub <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> i `dueTime` nie <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` jest wywoływana raz, a okresowe zachowanie czasomierza jest wyłączona, ale można ją ponownie włączyć przy użyciu <xref:System.Threading.Timer.Change%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="f947b-188">If `period` is zero (0) or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> and `dueTime` is not <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled using the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="f947b-189">Metoda określona dla `callback` powinien być współużytkowane, ponieważ jest ona wywoływana na <xref:System.Threading.ThreadPool> wątków.</span><span class="sxs-lookup"><span data-stu-id="f947b-189">The method specified for `callback` should be reentrant, because it is called on <xref:System.Threading.ThreadPool> threads.</span></span> <span data-ttu-id="f947b-190">Metoda może być wykonywane jednocześnie na dwóch wątków z puli wątków Jeśli interwału czasomierza jest mniejsza niż czas wymagany do wykonania metody lub wszystkich wątków z puli wątków, które są używane, i metoda znajduje się w kolejce wiele razy.</span><span class="sxs-lookup"><span data-stu-id="f947b-190">The method can be executed simultaneously on two thread pool threads if the timer interval is less than the time required to execute the method, or if all thread pool threads are in use and the method is queued multiple times.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f947b-191"><paramref name="dueTime" /> Lub <paramref name="period" /> parametr ma wartość ujemną i nie jest równa <see cref="F:System.Threading.Timeout.Infinite" />.</span><span class="sxs-lookup"><span data-stu-id="f947b-191">The <paramref name="dueTime" /> or <paramref name="period" /> parameter is negative and is not equal to <see cref="F:System.Threading.Timeout.Infinite" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f947b-192"><paramref name="dueTime" /> Lub <paramref name="period" /> parametru jest większa niż 4294967294.</span><span class="sxs-lookup"><span data-stu-id="f947b-192">The <paramref name="dueTime" /> or <paramref name="period" /> parameter is greater than 4294967294.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/timers.md"><span data-ttu-id="f947b-193">Czasomierze</span><span class="sxs-lookup"><span data-stu-id="f947b-193">Timers</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (System.Threading.TimerCallback callback, object state, TimeSpan dueTime, TimeSpan period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.TimerCallback callback, object state, valuetype System.TimeSpan dueTime, valuetype System.TimeSpan period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callback As TimerCallback, state As Object, dueTime As TimeSpan, period As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(System::Threading::TimerCallback ^ callback, System::Object ^ state, TimeSpan dueTime, TimeSpan period);" />
      <MemberSignature Language="F#" Value="new System.Threading.Timer : System.Threading.TimerCallback * obj * TimeSpan * TimeSpan -&gt; System.Threading.Timer" Usage="new System.Threading.Timer (callback, state, dueTime, period)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.TimerCallback" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="dueTime" Type="System.TimeSpan" />
        <Parameter Name="period" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="f947b-194">Delegat metody reprezentująca do wykonania.</span><span class="sxs-lookup"><span data-stu-id="f947b-194">A delegate representing a method to be executed.</span></span></param>
        <param name="state"><span data-ttu-id="f947b-195">Obiekt zawierający informacje używane przez metodę wywołania zwrotnego lub <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f947b-195">An object containing information to be used by the callback method, or <see langword="null" />.</span></span></param>
        <param name="dueTime"><span data-ttu-id="f947b-196">Czas opóźnienia przed <paramref name="callback" /> parametru wywołuje jej metody.</span><span class="sxs-lookup"><span data-stu-id="f947b-196">The amount of time to delay before the <paramref name="callback" /> parameter invokes its methods.</span></span> <span data-ttu-id="f947b-197">Określ ujemna (-1) do jednego milisekund uniemożliwia uruchomienie czasomierza.</span><span class="sxs-lookup"><span data-stu-id="f947b-197">Specify negative one (-1) milliseconds to prevent the timer from starting.</span></span> <span data-ttu-id="f947b-198">Określ zero (0) aby natychmiast uruchomić czasomierza.</span><span class="sxs-lookup"><span data-stu-id="f947b-198">Specify zero (0) to start the timer immediately.</span></span></param>
        <param name="period"><span data-ttu-id="f947b-199">Odstęp czasu między wywołania metody odwołuje się <paramref name="callback" />.</span><span class="sxs-lookup"><span data-stu-id="f947b-199">The time interval between invocations of the methods referenced by <paramref name="callback" />.</span></span> <span data-ttu-id="f947b-200">Określ ujemna jeden (-1) milisekund, wyłącz sygnalizowanie okresowo.</span><span class="sxs-lookup"><span data-stu-id="f947b-200">Specify negative one (-1) milliseconds to disable periodic signaling.</span></span></param>
        <summary><span data-ttu-id="f947b-201">Inicjuje nowe wystąpienie klasy <see langword="Timer" /> klasy przy użyciu <see cref="T:System.TimeSpan" /> wartości do mierzenia odstępach czasu.</span><span class="sxs-lookup"><span data-stu-id="f947b-201">Initializes a new instance of the <see langword="Timer" /> class, using <see cref="T:System.TimeSpan" /> values to measure time intervals.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f947b-202">Delegat określony przez `callback` parametru jest wywoływana jeden raz po `dueTime` upłynie, a następnie za każdym razem `period` upłynie interwał czasu.</span><span class="sxs-lookup"><span data-stu-id="f947b-202">The delegate specified by the `callback` parameter is invoked once after `dueTime` elapses, and thereafter each time the `period` time interval elapses.</span></span>  
  
 <span data-ttu-id="f947b-203">Jeśli `dueTime` ma wartość zero (0), `callback` jest wywoływany bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="f947b-203">If `dueTime` is zero (0), `callback` is invoked immediately.</span></span> <span data-ttu-id="f947b-204">Jeśli `dueTime` jest ujemna (-1) jeden milisekund, `callback` nie jest wywoływany; czasomierza jest wyłączony, ale można włączyć ponownie, wywołując <xref:System.Threading.Timer.Change%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="f947b-204">If `dueTime` is negative one (-1) milliseconds, `callback` is not invoked; the timer is disabled, but can be re-enabled by calling the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="f947b-205">Ponieważ <xref:System.Threading.Timer> klasa ma taką samą rozdzielczość zegara systemowego, czyli około 15 milisekund w systemach Windows 7 i Windows 8, `callback` delegata jest wykonywana w odstępach czasu zdefiniowanych przez rozdzielczość zegara systemowego, jeśli `period`jest mniejsza od rozdzielczości zegara systemowego.</span><span class="sxs-lookup"><span data-stu-id="f947b-205">Because the <xref:System.Threading.Timer> class has the same resolution as the system clock, which is approximately 15 milliseconds on Windows 7 and Windows 8 systems, the `callback` delegate executes at intervals defined by the resolution of the system clock if `period` is less than the resolution of the system clock.</span></span> <span data-ttu-id="f947b-206">Jeśli `period` jest 0 (zero) lub ujemna (-1) jeden milisekund i `dueTime` jest dodatnia, `callback` jest wywoływana raz, a okresowe zachowanie czasomierza jest wyłączona, ale można ją ponownie włączyć przy użyciu <xref:System.Threading.Timer.Change%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="f947b-206">If `period` is zero (0) or negative one (-1) milliseconds and `dueTime` is positive, `callback` is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled using the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="f947b-207">Metoda określona dla `callback` powinien być współużytkowane, ponieważ jest ona wywoływana na <xref:System.Threading.ThreadPool> wątków.</span><span class="sxs-lookup"><span data-stu-id="f947b-207">The method specified for `callback` should be reentrant, because it is called on <xref:System.Threading.ThreadPool> threads.</span></span> <span data-ttu-id="f947b-208">Metoda może być wykonywane jednocześnie na dwóch wątków z puli wątków Jeśli interwału czasomierza jest mniejsza niż czas wymagany do wykonania metody lub wszystkich wątków z puli wątków, które są używane, i metoda znajduje się w kolejce wiele razy.</span><span class="sxs-lookup"><span data-stu-id="f947b-208">The method can be executed simultaneously on two thread pool threads if the timer interval is less than the time required to execute the method, or if all thread pool threads are in use and the method is queued multiple times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f947b-209">Poniższy przykład kodu pokazuje sposób tworzenia `TimerCallback` delegować i inicjuje nowe wystąpienie klasy `Timer` klasy.</span><span class="sxs-lookup"><span data-stu-id="f947b-209">The following code example shows how to create a `TimerCallback` delegate and initialize a new instance of the `Timer` class.</span></span>  
  
 [!code-cpp[System.Threading.Timer2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer2/CPP/source2.cpp#1)]
 [!code-csharp[System.Threading.Timer2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer2/CS/source2.cs#1)]
 [!code-vb[System.Threading.Timer2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer2/VB/source2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f947b-210">Liczba milisekund w wartości <paramref name="dueTime" /> lub <paramref name="period" /> jest ujemny i nie jest równa <see cref="F:System.Threading.Timeout.Infinite" />, lub jest większa niż <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="f947b-210">The number of milliseconds in the value of <paramref name="dueTime" /> or <paramref name="period" /> is negative and not equal to <see cref="F:System.Threading.Timeout.Infinite" />, or is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f947b-211"><paramref name="callback" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f947b-211">The <paramref name="callback" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/timers.md"><span data-ttu-id="f947b-212">Czasomierze</span><span class="sxs-lookup"><span data-stu-id="f947b-212">Timers</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (System.Threading.TimerCallback callback, object state, uint dueTime, uint period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.TimerCallback callback, object state, unsigned int32 dueTime, unsigned int32 period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callback As TimerCallback, state As Object, dueTime As UInteger, period As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(System::Threading::TimerCallback ^ callback, System::Object ^ state, System::UInt32 dueTime, System::UInt32 period);" />
      <MemberSignature Language="F#" Value="new System.Threading.Timer : System.Threading.TimerCallback * obj * uint32 * uint32 -&gt; System.Threading.Timer" Usage="new System.Threading.Timer (callback, state, dueTime, period)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.TimerCallback" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="dueTime" Type="System.UInt32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="period" Type="System.UInt32" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="f947b-213">Delegat metody reprezentująca do wykonania.</span><span class="sxs-lookup"><span data-stu-id="f947b-213">A delegate representing a method to be executed.</span></span></param>
        <param name="state"><span data-ttu-id="f947b-214">Obiekt zawierający informacje używane przez metodę wywołania zwrotnego lub <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f947b-214">An object containing information to be used by the callback method, or <see langword="null" />.</span></span></param>
        <param name="dueTime"><span data-ttu-id="f947b-215">Czas opóźnienia przed <paramref name="callback" /> jest wywoływana w milisekundach.</span><span class="sxs-lookup"><span data-stu-id="f947b-215">The amount of time to delay before <paramref name="callback" /> is invoked, in milliseconds.</span></span> <span data-ttu-id="f947b-216">Określ <see cref="F:System.Threading.Timeout.Infinite" /> uniemożliwia czasomierza.</span><span class="sxs-lookup"><span data-stu-id="f947b-216">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to prevent the timer from starting.</span></span> <span data-ttu-id="f947b-217">Określ zero (0) aby natychmiast uruchomić czasomierza.</span><span class="sxs-lookup"><span data-stu-id="f947b-217">Specify zero (0) to start the timer immediately.</span></span></param>
        <param name="period"><span data-ttu-id="f947b-218">Odstęp czasu między wywołań <paramref name="callback" />, w milisekundach.</span><span class="sxs-lookup"><span data-stu-id="f947b-218">The time interval between invocations of <paramref name="callback" />, in milliseconds.</span></span> <span data-ttu-id="f947b-219">Określ <see cref="F:System.Threading.Timeout.Infinite" /> wyłączyć sygnalizowanie okresowo.</span><span class="sxs-lookup"><span data-stu-id="f947b-219">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to disable periodic signaling.</span></span></param>
        <summary><span data-ttu-id="f947b-220">Inicjuje nowe wystąpienie klasy <see langword="Timer" /> klasy przy użyciu liczb całkowitych bez znaku 32-bitowego do mierzenia odstępach czasu.</span><span class="sxs-lookup"><span data-stu-id="f947b-220">Initializes a new instance of the <see langword="Timer" /> class, using 32-bit unsigned integers to measure time intervals.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f947b-221">Delegat określony przez `callback` parametru jest wywoływana jeden raz po `dueTime` upłynie, a następnie za każdym razem `period` upłynie interwał czasu.</span><span class="sxs-lookup"><span data-stu-id="f947b-221">The delegate specified by the `callback` parameter is invoked once after `dueTime` elapses, and thereafter each time the `period` time interval elapses.</span></span>  
  
 <span data-ttu-id="f947b-222">Jeśli `dueTime` ma wartość zero (0), `callback` jest wywoływany bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="f947b-222">If `dueTime` is zero (0), `callback` is invoked immediately.</span></span> <span data-ttu-id="f947b-223">Jeśli `dueTime` jest <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` nie jest wywoływany; czasomierza jest wyłączony, ale można włączyć ponownie, wywołując <xref:System.Threading.Timer.Change%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="f947b-223">If `dueTime` is <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` is not invoked; the timer is disabled, but can be re-enabled by calling the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="f947b-224">Ponieważ <xref:System.Threading.Timer> klasa ma taką samą rozdzielczość zegara systemowego, czyli około 15 milisekund w systemach Windows 7 i Windows 8, `callback` delegata jest wykonywana w odstępach czasu zdefiniowanych przez rozdzielczość zegara systemowego, jeśli `period`jest mniejsza od rozdzielczości zegara systemowego.</span><span class="sxs-lookup"><span data-stu-id="f947b-224">Because the <xref:System.Threading.Timer> class has the same resolution as the system clock, which is approximately 15 milliseconds on Windows 7 and Windows 8 systems, the `callback` delegate executes at intervals defined by the resolution of the system clock if `period` is less than the resolution of the system clock.</span></span> <span data-ttu-id="f947b-225">Jeśli `period` wynosi zero (0) lub <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> i `dueTime` nie <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` jest wywoływana raz, a okresowe zachowanie czasomierza jest wyłączona, ale można ją ponownie włączyć przy użyciu <xref:System.Threading.Timer.Change%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="f947b-225">If `period` is zero (0) or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> and `dueTime` is not <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled using the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="f947b-226">Metoda określona dla `callback` powinien być współużytkowane, ponieważ jest ona wywoływana na <xref:System.Threading.ThreadPool> wątków.</span><span class="sxs-lookup"><span data-stu-id="f947b-226">The method specified for `callback` should be reentrant, because it is called on <xref:System.Threading.ThreadPool> threads.</span></span> <span data-ttu-id="f947b-227">Metoda może być wykonywane jednocześnie na dwóch wątków z puli wątków Jeśli interwału czasomierza jest mniejsza niż czas wymagany do wykonania metody lub wszystkich wątków z puli wątków, które są używane, i metoda znajduje się w kolejce wiele razy.</span><span class="sxs-lookup"><span data-stu-id="f947b-227">The method can be executed simultaneously on two thread pool threads if the timer interval is less than the time required to execute the method, or if all thread pool threads are in use and the method is queued multiple times.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f947b-228"><paramref name="dueTime" /> Lub <paramref name="period" /> parametr ma wartość ujemną i nie jest równa <see cref="F:System.Threading.Timeout.Infinite" />.</span><span class="sxs-lookup"><span data-stu-id="f947b-228">The <paramref name="dueTime" /> or <paramref name="period" /> parameter is negative and is not equal to <see cref="F:System.Threading.Timeout.Infinite" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f947b-229"><paramref name="callback" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f947b-229">The <paramref name="callback" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/timers.md"><span data-ttu-id="f947b-230">Czasomierze</span><span class="sxs-lookup"><span data-stu-id="f947b-230">Timers</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Change">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f947b-231">Zmienia czas rozpoczęcia i interwał między wywołań metody opisywanego czasomierz.</span><span class="sxs-lookup"><span data-stu-id="f947b-231">Changes the start time and the interval between method invocations for a timer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Change">
      <MemberSignature Language="C#" Value="public bool Change (int dueTime, int period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Change(int32 dueTime, int32 period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.Change(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Change (dueTime As Integer, period As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Change(int dueTime, int period);" />
      <MemberSignature Language="F#" Value="member this.Change : int * int -&gt; bool" Usage="timer.Change (dueTime, period)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dueTime" Type="System.Int32" />
        <Parameter Name="period" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dueTime"><span data-ttu-id="f947b-232">Ilość czasu, opóźnienie przed wywołaniem metody wywołania zwrotnego jest określony, gdy <see cref="T:System.Threading.Timer" /> został zbudowany w milisekundach.</span><span class="sxs-lookup"><span data-stu-id="f947b-232">The amount of time to delay before the invoking the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed, in milliseconds.</span></span> <span data-ttu-id="f947b-233">Określ <see cref="F:System.Threading.Timeout.Infinite" /> aby uniemożliwić ponowne uruchomienie czasomierza.</span><span class="sxs-lookup"><span data-stu-id="f947b-233">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to prevent the timer from restarting.</span></span> <span data-ttu-id="f947b-234">Określ zero (0) aby natychmiast ponownie uruchomić czasomierza.</span><span class="sxs-lookup"><span data-stu-id="f947b-234">Specify zero (0) to restart the timer immediately.</span></span></param>
        <param name="period"><span data-ttu-id="f947b-235">Określony przedział czasu między wywołania metody wywołania zwrotnego, gdy <see cref="T:System.Threading.Timer" /> został zbudowany w milisekundach.</span><span class="sxs-lookup"><span data-stu-id="f947b-235">The time interval between invocations of the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed, in milliseconds.</span></span> <span data-ttu-id="f947b-236">Określ <see cref="F:System.Threading.Timeout.Infinite" /> wyłączyć sygnalizowanie okresowo.</span><span class="sxs-lookup"><span data-stu-id="f947b-236">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to disable periodic signaling.</span></span></param>
        <summary><span data-ttu-id="f947b-237">Zmienia czas rozpoczęcia i interwał między wywołań metody opisywanego czasomierz, przy użyciu 32-bitowe podpisane liczby całkowite do mierzenia odstępach czasu.</span><span class="sxs-lookup"><span data-stu-id="f947b-237">Changes the start time and the interval between method invocations for a timer, using 32-bit signed integers to measure time intervals.</span></span></summary>
        <returns><span data-ttu-id="f947b-238"><see langword="true" /> Jeśli Czasomierz został pomyślnie zaktualizowany; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f947b-238"><see langword="true" /> if the timer was successfully updated; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f947b-239">Metoda wywołania zwrotnego jest wywoływana jeden raz po `dueTime` upłynie, a następnie każda godzina przedział czasu określony parametrem `period` upływa.</span><span class="sxs-lookup"><span data-stu-id="f947b-239">The callback method is invoked once after `dueTime` elapses, and thereafter each time the time interval specified by `period` elapses.</span></span>  
  
 <span data-ttu-id="f947b-240">Jeśli `dueTime` wynosi zero (0), metody wywołania zwrotnego jest wywoływany bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="f947b-240">If `dueTime` is zero (0), the callback method is invoked immediately.</span></span> <span data-ttu-id="f947b-241">Jeśli `dueTime` jest <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, nigdy nie zostanie wywołana metoda wywołania zwrotnego; czasomierza jest wyłączone, ale można ponownie włączona, wywołując <xref:System.Threading.Timer.Change%2A> i określając wartość dodatnia `dueTime`.</span><span class="sxs-lookup"><span data-stu-id="f947b-241">If `dueTime` is <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, the callback method is never invoked; the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a positive value for `dueTime`.</span></span>  
  
 <span data-ttu-id="f947b-242">Jeśli `period` wynosi zero (0) lub <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, i `dueTime` nie <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, metody wywołania zwrotnego jest wywoływana jeden raz; okresowe zachowanie czasomierza jest wyłączone, ale można ponownie włączona, wywołując <xref:System.Threading.Timer.Change%2A> i określając wartość dodatnia `period`.</span><span class="sxs-lookup"><span data-stu-id="f947b-242">If `period` is zero (0) or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, and `dueTime` is not <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, the callback method is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a positive value for `period`.</span></span>  
  
 <span data-ttu-id="f947b-243"><xref:System.Threading.Timer.Change%2A> Metoda może być wywoływana z <xref:System.Threading.TimerCallback> delegować.</span><span class="sxs-lookup"><span data-stu-id="f947b-243">The <xref:System.Threading.Timer.Change%2A> method can be called from the <xref:System.Threading.TimerCallback> delegate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f947b-244">Poniższy przykład kodu demonstruje sposób uruchamiania `Timer` i po określona liczba wywołań, zmienić jego okresu.</span><span class="sxs-lookup"><span data-stu-id="f947b-244">The following code example demonstrates how to start a `Timer` and, after a set number of invocations, change its period.</span></span>  
  
 [!code-cpp[System.Threading.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer/CS/source.cs#1)]
 [!code-vb[System.Threading.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f947b-245"><see cref="T:System.Threading.Timer" /> Został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="f947b-245">The <see cref="T:System.Threading.Timer" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f947b-246"><paramref name="dueTime" /> Lub <paramref name="period" /> parametr ma wartość ujemną i nie jest równa <see cref="F:System.Threading.Timeout.Infinite" />.</span><span class="sxs-lookup"><span data-stu-id="f947b-246">The <paramref name="dueTime" /> or <paramref name="period" /> parameter is negative and is not equal to <see cref="F:System.Threading.Timeout.Infinite" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/timers.md"><span data-ttu-id="f947b-247">Czasomierze</span><span class="sxs-lookup"><span data-stu-id="f947b-247">Timers</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Change">
      <MemberSignature Language="C#" Value="public bool Change (long dueTime, long period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Change(int64 dueTime, int64 period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.Change(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Change (dueTime As Long, period As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Change(long dueTime, long period);" />
      <MemberSignature Language="F#" Value="member this.Change : int64 * int64 -&gt; bool" Usage="timer.Change (dueTime, period)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dueTime" Type="System.Int64" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="period" Type="System.Int64" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="dueTime"><span data-ttu-id="f947b-248">Ilość czasu, opóźnienie przed wywołaniem metody wywołania zwrotnego jest określony, gdy <see cref="T:System.Threading.Timer" /> został zbudowany w milisekundach.</span><span class="sxs-lookup"><span data-stu-id="f947b-248">The amount of time to delay before the invoking the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed, in milliseconds.</span></span> <span data-ttu-id="f947b-249">Określ <see cref="F:System.Threading.Timeout.Infinite" /> aby uniemożliwić ponowne uruchomienie czasomierza.</span><span class="sxs-lookup"><span data-stu-id="f947b-249">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to prevent the timer from restarting.</span></span> <span data-ttu-id="f947b-250">Określ zero (0) aby natychmiast ponownie uruchomić czasomierza.</span><span class="sxs-lookup"><span data-stu-id="f947b-250">Specify zero (0) to restart the timer immediately.</span></span></param>
        <param name="period"><span data-ttu-id="f947b-251">Określony przedział czasu między wywołania metody wywołania zwrotnego, gdy <see cref="T:System.Threading.Timer" /> został zbudowany w milisekundach.</span><span class="sxs-lookup"><span data-stu-id="f947b-251">The time interval between invocations of the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed, in milliseconds.</span></span> <span data-ttu-id="f947b-252">Określ <see cref="F:System.Threading.Timeout.Infinite" /> wyłączyć sygnalizowanie okresowo.</span><span class="sxs-lookup"><span data-stu-id="f947b-252">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to disable periodic signaling.</span></span></param>
        <summary><span data-ttu-id="f947b-253">Zmienia czas rozpoczęcia i interwał między wywołań metody opisywanego czasomierz, przy użyciu liczb całkowitych ze znakiem 64-bitowego do mierzenia odstępach czasu.</span><span class="sxs-lookup"><span data-stu-id="f947b-253">Changes the start time and the interval between method invocations for a timer, using 64-bit signed integers to measure time intervals.</span></span></summary>
        <returns><span data-ttu-id="f947b-254"><see langword="true" /> Jeśli Czasomierz został pomyślnie zaktualizowany; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f947b-254"><see langword="true" /> if the timer was successfully updated; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f947b-255">Metoda wywołania zwrotnego jest wywoływana jeden raz po `dueTime` upłynie, a następnie każda godzina przedział czasu określony parametrem `period` upływa.</span><span class="sxs-lookup"><span data-stu-id="f947b-255">The callback method is invoked once after `dueTime` elapses, and thereafter each time the time interval specified by `period` elapses.</span></span>  
  
 <span data-ttu-id="f947b-256">Jeśli `dueTime` wynosi zero (0), metody wywołania zwrotnego jest wywoływany bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="f947b-256">If `dueTime` is zero (0), the callback method is invoked immediately.</span></span> <span data-ttu-id="f947b-257">Jeśli `dueTime` jest <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, nigdy nie zostanie wywołana metoda wywołania zwrotnego; czasomierza jest wyłączone, ale można ponownie włączona, wywołując <xref:System.Threading.Timer.Change%2A> i określając wartość dodatnia `dueTime`.</span><span class="sxs-lookup"><span data-stu-id="f947b-257">If `dueTime` is <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, the callback method is never invoked; the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a positive value for `dueTime`.</span></span>  
  
 <span data-ttu-id="f947b-258">Jeśli `period` wynosi zero (0) lub <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, i `dueTime` nie <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, metody wywołania zwrotnego jest wywoływana jeden raz; okresowe zachowanie czasomierza jest wyłączone, ale można ponownie włączona, wywołując <xref:System.Threading.Timer.Change%2A> i określając wartość dodatnia `period`.</span><span class="sxs-lookup"><span data-stu-id="f947b-258">If `period` is zero (0) or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, and `dueTime` is not <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, the callback method is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a positive value for `period`.</span></span>  
  
 <span data-ttu-id="f947b-259"><xref:System.Threading.Timer.Change%2A> Metoda może być wywoływana z <xref:System.Threading.TimerCallback> delegować.</span><span class="sxs-lookup"><span data-stu-id="f947b-259">The <xref:System.Threading.Timer.Change%2A> method can be called from the <xref:System.Threading.TimerCallback> delegate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f947b-260"><see cref="T:System.Threading.Timer" /> Został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="f947b-260">The <see cref="T:System.Threading.Timer" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f947b-261"><paramref name="dueTime" /> Lub <paramref name="period" /> parametr jest mniejsza niż -1.</span><span class="sxs-lookup"><span data-stu-id="f947b-261">The <paramref name="dueTime" /> or <paramref name="period" /> parameter is less than -1.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f947b-262"><paramref name="dueTime" /> Lub <paramref name="period" /> parametru jest większa niż 4294967294.</span><span class="sxs-lookup"><span data-stu-id="f947b-262">The <paramref name="dueTime" /> or <paramref name="period" /> parameter is greater than 4294967294.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/timers.md"><span data-ttu-id="f947b-263">Czasomierze</span><span class="sxs-lookup"><span data-stu-id="f947b-263">Timers</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Change">
      <MemberSignature Language="C#" Value="public bool Change (TimeSpan dueTime, TimeSpan period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Change(valuetype System.TimeSpan dueTime, valuetype System.TimeSpan period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.Change(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Change (dueTime As TimeSpan, period As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Change(TimeSpan dueTime, TimeSpan period);" />
      <MemberSignature Language="F#" Value="member this.Change : TimeSpan * TimeSpan -&gt; bool" Usage="timer.Change (dueTime, period)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dueTime" Type="System.TimeSpan" />
        <Parameter Name="period" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="dueTime"><span data-ttu-id="f947b-264">A <see cref="T:System.TimeSpan" /> reprezentujący ilość czasu, opóźnienie przed wywołaniem metody wywołania zwrotnego jest określony, gdy <see cref="T:System.Threading.Timer" /> został zbudowany.</span><span class="sxs-lookup"><span data-stu-id="f947b-264">A <see cref="T:System.TimeSpan" /> representing the amount of time to delay before invoking the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed.</span></span> <span data-ttu-id="f947b-265">Określ ujemna jeden (-1) milisekund i uniemożliwia ponowne uruchomienie czasomierza.</span><span class="sxs-lookup"><span data-stu-id="f947b-265">Specify negative one (-1) milliseconds to prevent the timer from restarting.</span></span> <span data-ttu-id="f947b-266">Określ zero (0) aby natychmiast ponownie uruchomić czasomierza.</span><span class="sxs-lookup"><span data-stu-id="f947b-266">Specify zero (0) to restart the timer immediately.</span></span></param>
        <param name="period"><span data-ttu-id="f947b-267">Określony przedział czasu między wywołania metody wywołania zwrotnego, gdy <see cref="T:System.Threading.Timer" /> został zbudowany.</span><span class="sxs-lookup"><span data-stu-id="f947b-267">The time interval between invocations of the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed.</span></span> <span data-ttu-id="f947b-268">Określ ujemna jeden (-1) milisekund, wyłącz sygnalizowanie okresowo.</span><span class="sxs-lookup"><span data-stu-id="f947b-268">Specify negative one (-1) milliseconds to disable periodic signaling.</span></span></param>
        <summary><span data-ttu-id="f947b-269">Zmienia czas rozpoczęcia i interwał między wywołań metody opisywanego czasomierz przy użyciu <see cref="T:System.TimeSpan" /> wartości do mierzenia odstępach czasu.</span><span class="sxs-lookup"><span data-stu-id="f947b-269">Changes the start time and the interval between method invocations for a timer, using <see cref="T:System.TimeSpan" /> values to measure time intervals.</span></span></summary>
        <returns><span data-ttu-id="f947b-270"><see langword="true" /> Jeśli Czasomierz został pomyślnie zaktualizowany; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f947b-270"><see langword="true" /> if the timer was successfully updated; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f947b-271">Metoda wywołania zwrotnego jest wywoływana jeden raz po `dueTime` upłynie, a następnie każda godzina przedział czasu określony parametrem `period` upływa.</span><span class="sxs-lookup"><span data-stu-id="f947b-271">The callback method is invoked once after `dueTime` elapses, and thereafter each time the time interval specified by `period` elapses.</span></span>  
  
 <span data-ttu-id="f947b-272">Jeśli `dueTime` wynosi zero (0), metody wywołania zwrotnego jest wywoływany bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="f947b-272">If `dueTime` is zero (0), the callback method is invoked immediately.</span></span> <span data-ttu-id="f947b-273">Jeśli `dueTime` jest ujemna (-1) jeden milisekund, nigdy nie zostanie wywołana metoda wywołania zwrotnego; czasomierza jest wyłączone, ale można ponownie włączona, wywołując <xref:System.Threading.Timer.Change%2A> i określając wartość dodatnia `dueTime`.</span><span class="sxs-lookup"><span data-stu-id="f947b-273">If `dueTime` is negative one (-1) milliseconds, the callback method is never invoked; the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a positive value for `dueTime`.</span></span>  
  
 <span data-ttu-id="f947b-274">Jeśli `period` jest 0 (zero) lub ujemna (-1) jeden milisekund, a `dueTime` jest dodatnia, metody wywołania zwrotnego jest wywoływana jeden raz; okresowe zachowanie czasomierza jest wyłączony, ale można włączyć ponownie, wywołując <xref:System.Threading.Timer.Change%2A> i określając wartość większą niż zero dla `period`.</span><span class="sxs-lookup"><span data-stu-id="f947b-274">If `period` is zero (0) or negative one (-1) milliseconds, and `dueTime` is positive, the callback method is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a value greater than zero for `period`.</span></span>  
  
 <span data-ttu-id="f947b-275"><xref:System.Threading.Timer.Change%2A> Metoda może być wywoływana z <xref:System.Threading.TimerCallback> delegować.</span><span class="sxs-lookup"><span data-stu-id="f947b-275">The <xref:System.Threading.Timer.Change%2A> method can be called from the <xref:System.Threading.TimerCallback> delegate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f947b-276">Poniższy przykład kodu demonstruje sposób uruchamiania `Timer` i po określona liczba wywołań, zmienić jego okresu.</span><span class="sxs-lookup"><span data-stu-id="f947b-276">The following code example demonstrates how to start a `Timer` and, after a set number of invocations, change its period.</span></span>  
  
 [!code-cpp[System.Threading.Timer2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer2/CPP/source2.cpp#1)]
 [!code-csharp[System.Threading.Timer2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer2/CS/source2.cs#1)]
 [!code-vb[System.Threading.Timer2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer2/VB/source2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f947b-277"><see cref="T:System.Threading.Timer" /> Został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="f947b-277">The <see cref="T:System.Threading.Timer" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f947b-278"><paramref name="dueTime" /> Lub <paramref name="period" /> parametr, w milisekundach, jest mniejsza niż -1.</span><span class="sxs-lookup"><span data-stu-id="f947b-278">The <paramref name="dueTime" /> or <paramref name="period" /> parameter, in milliseconds, is less than -1.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f947b-279"><paramref name="dueTime" /> Lub <paramref name="period" /> parametru, w milisekundach, jest większa niż 4294967294.</span><span class="sxs-lookup"><span data-stu-id="f947b-279">The <paramref name="dueTime" /> or <paramref name="period" /> parameter, in milliseconds, is greater than 4294967294.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/timers.md"><span data-ttu-id="f947b-280">Czasomierze</span><span class="sxs-lookup"><span data-stu-id="f947b-280">Timers</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Change">
      <MemberSignature Language="C#" Value="public bool Change (uint dueTime, uint period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Change(unsigned int32 dueTime, unsigned int32 period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.Change(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Change (dueTime As UInteger, period As UInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Change(System::UInt32 dueTime, System::UInt32 period);" />
      <MemberSignature Language="F#" Value="member this.Change : uint32 * uint32 -&gt; bool" Usage="timer.Change (dueTime, period)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dueTime" Type="System.UInt32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="period" Type="System.UInt32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="dueTime"><span data-ttu-id="f947b-281">Ilość czasu, opóźnienie przed wywołaniem metody wywołania zwrotnego jest określony, gdy <see cref="T:System.Threading.Timer" /> został zbudowany w milisekundach.</span><span class="sxs-lookup"><span data-stu-id="f947b-281">The amount of time to delay before the invoking the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed, in milliseconds.</span></span> <span data-ttu-id="f947b-282">Określ <see cref="F:System.Threading.Timeout.Infinite" /> aby uniemożliwić ponowne uruchomienie czasomierza.</span><span class="sxs-lookup"><span data-stu-id="f947b-282">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to prevent the timer from restarting.</span></span> <span data-ttu-id="f947b-283">Określ zero (0) aby natychmiast ponownie uruchomić czasomierza.</span><span class="sxs-lookup"><span data-stu-id="f947b-283">Specify zero (0) to restart the timer immediately.</span></span></param>
        <param name="period"><span data-ttu-id="f947b-284">Określony przedział czasu między wywołania metody wywołania zwrotnego, gdy <see cref="T:System.Threading.Timer" /> został zbudowany w milisekundach.</span><span class="sxs-lookup"><span data-stu-id="f947b-284">The time interval between invocations of the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed, in milliseconds.</span></span> <span data-ttu-id="f947b-285">Określ <see cref="F:System.Threading.Timeout.Infinite" /> wyłączyć sygnalizowanie okresowo.</span><span class="sxs-lookup"><span data-stu-id="f947b-285">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to disable periodic signaling.</span></span></param>
        <summary><span data-ttu-id="f947b-286">Zmienia czas rozpoczęcia i interwał między wywołań metody opisywanego czasomierz, przy użyciu liczb całkowitych bez znaku 32-bitowego do mierzenia odstępach czasu.</span><span class="sxs-lookup"><span data-stu-id="f947b-286">Changes the start time and the interval between method invocations for a timer, using 32-bit unsigned integers to measure time intervals.</span></span></summary>
        <returns><span data-ttu-id="f947b-287"><see langword="true" /> Jeśli Czasomierz został pomyślnie zaktualizowany; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f947b-287"><see langword="true" /> if the timer was successfully updated; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f947b-288">Metoda wywołania zwrotnego jest wywoływana jeden raz po `dueTime` upłynie, a następnie każda godzina przedział czasu określony parametrem `period` upływa.</span><span class="sxs-lookup"><span data-stu-id="f947b-288">The callback method is invoked once after `dueTime` elapses, and thereafter each time the time interval specified by `period` elapses.</span></span>  
  
 <span data-ttu-id="f947b-289">Jeśli `dueTime` wynosi zero (0), metody wywołania zwrotnego jest wywoływany bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="f947b-289">If `dueTime` is zero (0), the callback method is invoked immediately.</span></span> <span data-ttu-id="f947b-290">Jeśli `dueTime` jest <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, nigdy nie zostanie wywołana metoda wywołania zwrotnego; czasomierza jest wyłączone, ale można ponownie włączona, wywołując <xref:System.Threading.Timer.Change%2A> i określając wartość dodatnia `dueTime`.</span><span class="sxs-lookup"><span data-stu-id="f947b-290">If `dueTime` is <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, the callback method is never invoked; the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a positive value for `dueTime`.</span></span>  
  
 <span data-ttu-id="f947b-291">Jeśli `period` wynosi zero (0) lub <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, i `dueTime` nie <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, metody wywołania zwrotnego jest wywoływana jeden raz; okresowe zachowanie czasomierza jest wyłączone, ale można ponownie włączona, wywołując <xref:System.Threading.Timer.Change%2A> i określając wartość dodatnia `period`.</span><span class="sxs-lookup"><span data-stu-id="f947b-291">If `period` is zero (0) or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, and `dueTime` is not <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, the callback method is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a positive value for `period`.</span></span>  
  
 <span data-ttu-id="f947b-292"><xref:System.Threading.Timer.Change%2A> Metoda może być wywoływana z <xref:System.Threading.TimerCallback> delegować.</span><span class="sxs-lookup"><span data-stu-id="f947b-292">The <xref:System.Threading.Timer.Change%2A> method can be called from the <xref:System.Threading.TimerCallback> delegate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f947b-293"><see cref="T:System.Threading.Timer" /> Został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="f947b-293">The <see cref="T:System.Threading.Timer" /> has already been disposed.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/timers.md"><span data-ttu-id="f947b-294">Czasomierze</span><span class="sxs-lookup"><span data-stu-id="f947b-294">Timers</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f947b-295">Zwalnia wszelkie zasoby używane przez bieżące wystąpienie <see cref="T:System.Threading.Timer" />.</span><span class="sxs-lookup"><span data-stu-id="f947b-295">Releases all resources used by the current instance of <see cref="T:System.Threading.Timer" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="timer.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f947b-296">Zwalnia wszelkie zasoby używane przez bieżące wystąpienie <see cref="T:System.Threading.Timer" />.</span><span class="sxs-lookup"><span data-stu-id="f947b-296">Releases all resources used by the current instance of <see cref="T:System.Threading.Timer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f947b-297">Wywoływanie `Dispose` umożliwia zasoby używane przez <xref:System.Threading.Timer> zostają przeniesione do innych celów.</span><span class="sxs-lookup"><span data-stu-id="f947b-297">Calling `Dispose` allows the resources used by the <xref:System.Threading.Timer> to be reallocated for other purposes.</span></span> <span data-ttu-id="f947b-298">Aby uzyskać więcej informacji na temat `Dispose`, zobacz [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="f947b-298">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f947b-299">Wywołania zwrotne może wystąpić po <xref:System.Threading.Timer.Dispose> została wywołana metoda przeciążenia, ponieważ czasomierz kolejki wywołania zwrotne do wykonania przez wątków z puli wątków.</span><span class="sxs-lookup"><span data-stu-id="f947b-299">Callbacks can occur after the <xref:System.Threading.Timer.Dispose> method overload has been called, because the timer queues callbacks for execution by thread pool threads.</span></span> <span data-ttu-id="f947b-300">Możesz użyć <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> przeciążenia metody, aby poczekać, aż wszystkie wywołania zwrotne została ukończona.</span><span class="sxs-lookup"><span data-stu-id="f947b-300">You can use the <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> method overload to wait until all callbacks have completed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f947b-301">Poniższy przykład kodu pokazuje jak bezpłatne zasoby utrzymywane przez `Timer`.</span><span class="sxs-lookup"><span data-stu-id="f947b-301">The following code example shows how to free the resources held by a `Timer`.</span></span>  
  
 [!code-cpp[System.Threading.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer/CS/source.cs#1)]
 [!code-vb[System.Threading.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/threading/timers.md"><span data-ttu-id="f947b-302">Czasomierze</span><span class="sxs-lookup"><span data-stu-id="f947b-302">Timers</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public bool Dispose (System.Threading.WaitHandle notifyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Dispose(class System.Threading.WaitHandle notifyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.Dispose(System.Threading.WaitHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dispose (notifyObject As WaitHandle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Dispose(System::Threading::WaitHandle ^ notifyObject);" />
      <MemberSignature Language="F#" Value="member this.Dispose : System.Threading.WaitHandle -&gt; bool" Usage="timer.Dispose notifyObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notifyObject" Type="System.Threading.WaitHandle" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="notifyObject"><span data-ttu-id="f947b-303"><see cref="T:System.Threading.WaitHandle" /> Ma być zasygnalizowany po <see langword="Timer" /> został zlikwidowany.</span><span class="sxs-lookup"><span data-stu-id="f947b-303">The <see cref="T:System.Threading.WaitHandle" /> to be signaled when the <see langword="Timer" /> has been disposed of.</span></span></param>
        <summary><span data-ttu-id="f947b-304">Zwalnia wszelkie zasoby używane przez bieżące wystąpienie <see cref="T:System.Threading.Timer" /> i sygnałów, gdy Czasomierz został zlikwidowany.</span><span class="sxs-lookup"><span data-stu-id="f947b-304">Releases all resources used by the current instance of <see cref="T:System.Threading.Timer" /> and signals when the timer has been disposed of.</span></span></summary>
        <returns><span data-ttu-id="f947b-305"><see langword="true" /> Jeśli funkcja się powiedzie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f947b-305"><see langword="true" /> if the function succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f947b-306">Wywoływanie `Dispose` umożliwia zasoby używane przez <xref:System.Threading.Timer> zostają przeniesione do innych celów.</span><span class="sxs-lookup"><span data-stu-id="f947b-306">Calling `Dispose` allows the resources used by the <xref:System.Threading.Timer> to be reallocated for other purposes.</span></span> <span data-ttu-id="f947b-307">Aby uzyskać więcej informacji na temat `Dispose`, zobacz [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="f947b-307">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 <span data-ttu-id="f947b-308">Po tej metody zakończeniu jego sygnalizuje <xref:System.Threading.WaitHandle> określony przez `notifyObject` parametru. Użyj tego przeciążenia <xref:System.Threading.Timer.Dispose%2A> metody, jeśli chcesz można było blokowane, aż masz pewność, że Czasomierz został usunięty.</span><span class="sxs-lookup"><span data-stu-id="f947b-308">When this method completes, it signals the <xref:System.Threading.WaitHandle> specified by the `notifyObject` parameter.Use this overload of the <xref:System.Threading.Timer.Dispose%2A> method if you want to be able to block until you are certain that the timer has been disposed.</span></span> <span data-ttu-id="f947b-309">Czasomierz nie jest usuwane, aż wszystkie wywołania zwrotne aktualnie w kolejce została ukończona.</span><span class="sxs-lookup"><span data-stu-id="f947b-309">The timer is not disposed until all currently queued callbacks have completed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f947b-310">Jeśli wywołanie zwrotne używa <xref:System.Threading.Timer.Change%2A> metodę, aby ustawić `dueTime` parametru na wartość zero, może wystąpić sytuacja wyścigu podczas <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> nosi nazwę przeciążenie metody: Jeśli czasomierza kolejki zwrotnym nowe zanim <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> przeciążenie metody wykrywa, że ma żadnych wywołań zwrotnych w kolejce, <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> w dalszym ciągu Blokuj; w przeciwnym razie usunięciu czasomierz, gdy nowe wywołanie zwrotne są umieszczane w kolejce i las usługi <xref:System.ObjectDisposedException> jest generowany, gdy nowe wywołania zwrotnego <xref:System.Threading.Timer.Change%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="f947b-310">If the callback uses the <xref:System.Threading.Timer.Change%2A> method to set the `dueTime` parameter to zero, a race condition can occur when the <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> method overload is called: If the timer queues a new callback before the <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> method overload detects that there are no callbacks queued, <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> continues to block; otherwise, the timer is disposed while the new callback is being queued, and an <xref:System.ObjectDisposedException> is thrown when the new callback calls the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f947b-311"><paramref name="notifyObject" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f947b-311">The <paramref name="notifyObject" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/timers.md"><span data-ttu-id="f947b-312">Czasomierze</span><span class="sxs-lookup"><span data-stu-id="f947b-312">Timers</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::ValueTask DisposeAsync();" />
      <MemberSignature Language="F#" Value="abstract member DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask&#xA;override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="timer.DisposeAsync " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IAsyncDisposable.DisposeAsync</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Timer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Timer ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="timer.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>